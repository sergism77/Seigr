// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cross_chain_operations.proto
// Protobuf C++ Version: 5.29.2

#include "cross_chain_operations.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace seigr {
namespace crosschain {

inline constexpr WrapTokenResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        transaction_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        error_code_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR WrapTokenResponse::WrapTokenResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WrapTokenResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WrapTokenResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WrapTokenResponseDefaultTypeInternal() {}
  union {
    WrapTokenResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WrapTokenResponseDefaultTypeInternal _WrapTokenResponse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR WrapTokenRequest_WrapMetadataEntry_DoNotUse::WrapTokenRequest_WrapMetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : WrapTokenRequest_WrapMetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : WrapTokenRequest_WrapMetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct WrapTokenRequest_WrapMetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WrapTokenRequest_WrapMetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WrapTokenRequest_WrapMetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    WrapTokenRequest_WrapMetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WrapTokenRequest_WrapMetadataEntry_DoNotUseDefaultTypeInternal _WrapTokenRequest_WrapMetadataEntry_DoNotUse_default_instance_;

inline constexpr UpdateCrossChainStatusResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        error_code_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateCrossChainStatusResponse::UpdateCrossChainStatusResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateCrossChainStatusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateCrossChainStatusResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateCrossChainStatusResponseDefaultTypeInternal() {}
  union {
    UpdateCrossChainStatusResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateCrossChainStatusResponseDefaultTypeInternal _UpdateCrossChainStatusResponse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR UpdateCrossChainStatusRequest_UpdateMetadataEntry_DoNotUse::UpdateCrossChainStatusRequest_UpdateMetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : UpdateCrossChainStatusRequest_UpdateMetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : UpdateCrossChainStatusRequest_UpdateMetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct UpdateCrossChainStatusRequest_UpdateMetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateCrossChainStatusRequest_UpdateMetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateCrossChainStatusRequest_UpdateMetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    UpdateCrossChainStatusRequest_UpdateMetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateCrossChainStatusRequest_UpdateMetadataEntry_DoNotUseDefaultTypeInternal _UpdateCrossChainStatusRequest_UpdateMetadataEntry_DoNotUse_default_instance_;

inline constexpr UnwrapTokenResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        transaction_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        error_code_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UnwrapTokenResponse::UnwrapTokenResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UnwrapTokenResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnwrapTokenResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnwrapTokenResponseDefaultTypeInternal() {}
  union {
    UnwrapTokenResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnwrapTokenResponseDefaultTypeInternal _UnwrapTokenResponse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR UnwrapTokenRequest_UnwrapMetadataEntry_DoNotUse::UnwrapTokenRequest_UnwrapMetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : UnwrapTokenRequest_UnwrapMetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : UnwrapTokenRequest_UnwrapMetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct UnwrapTokenRequest_UnwrapMetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnwrapTokenRequest_UnwrapMetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnwrapTokenRequest_UnwrapMetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    UnwrapTokenRequest_UnwrapMetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnwrapTokenRequest_UnwrapMetadataEntry_DoNotUseDefaultTypeInternal _UnwrapTokenRequest_UnwrapMetadataEntry_DoNotUse_default_instance_;

inline constexpr SyncGovernanceResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        transaction_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        error_code_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SyncGovernanceResponse::SyncGovernanceResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SyncGovernanceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SyncGovernanceResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SyncGovernanceResponseDefaultTypeInternal() {}
  union {
    SyncGovernanceResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SyncGovernanceResponseDefaultTypeInternal _SyncGovernanceResponse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SyncGovernanceRequest_SyncMetadataEntry_DoNotUse::SyncGovernanceRequest_SyncMetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : SyncGovernanceRequest_SyncMetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : SyncGovernanceRequest_SyncMetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SyncGovernanceRequest_SyncMetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SyncGovernanceRequest_SyncMetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SyncGovernanceRequest_SyncMetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    SyncGovernanceRequest_SyncMetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SyncGovernanceRequest_SyncMetadataEntry_DoNotUseDefaultTypeInternal _SyncGovernanceRequest_SyncMetadataEntry_DoNotUse_default_instance_;

inline constexpr GetCrossChainTransactionHistoryRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : filter_types_{},
        _filter_types_cached_byte_size_{0},
        chain_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        date_range_start_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        date_range_end_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        limit_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetCrossChainTransactionHistoryRequest::GetCrossChainTransactionHistoryRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetCrossChainTransactionHistoryRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetCrossChainTransactionHistoryRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetCrossChainTransactionHistoryRequestDefaultTypeInternal() {}
  union {
    GetCrossChainTransactionHistoryRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetCrossChainTransactionHistoryRequestDefaultTypeInternal _GetCrossChainTransactionHistoryRequest_default_instance_;

inline constexpr CrossChainTransaction::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : transaction_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        from_chain_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        to_chain_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        fee_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        wallet_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        compliance_note_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        amount_{::uint64_t{0u}},
        type_{static_cast< ::seigr::crosschain::TransactionType >(0)},
        status_{static_cast< ::seigr::crosschain::CrossChainStatus >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CrossChainTransaction::CrossChainTransaction(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CrossChainTransactionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CrossChainTransactionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CrossChainTransactionDefaultTypeInternal() {}
  union {
    CrossChainTransaction _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CrossChainTransactionDefaultTypeInternal _CrossChainTransaction_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR CrossChainToken_TokenMetadataEntry_DoNotUse::CrossChainToken_TokenMetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : CrossChainToken_TokenMetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : CrossChainToken_TokenMetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct CrossChainToken_TokenMetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CrossChainToken_TokenMetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CrossChainToken_TokenMetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    CrossChainToken_TokenMetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CrossChainToken_TokenMetadataEntry_DoNotUseDefaultTypeInternal _CrossChainToken_TokenMetadataEntry_DoNotUse_default_instance_;

inline constexpr WrapTokenRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : wrap_metadata_{},
        chain_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        destination_chain_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        destination_wallet_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        amount_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR WrapTokenRequest::WrapTokenRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WrapTokenRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WrapTokenRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WrapTokenRequestDefaultTypeInternal() {}
  union {
    WrapTokenRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WrapTokenRequestDefaultTypeInternal _WrapTokenRequest_default_instance_;

inline constexpr UpdateCrossChainStatusRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : update_metadata_{},
        chain_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        new_status_{static_cast< ::seigr::crosschain::CrossChainStatus >(0)},
        retry_count_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateCrossChainStatusRequest::UpdateCrossChainStatusRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateCrossChainStatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateCrossChainStatusRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateCrossChainStatusRequestDefaultTypeInternal() {}
  union {
    UpdateCrossChainStatusRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateCrossChainStatusRequestDefaultTypeInternal _UpdateCrossChainStatusRequest_default_instance_;

inline constexpr UnwrapTokenRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : unwrap_metadata_{},
        chain_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        destination_chain_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        destination_wallet_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        amount_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UnwrapTokenRequest::UnwrapTokenRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UnwrapTokenRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnwrapTokenRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnwrapTokenRequestDefaultTypeInternal() {}
  union {
    UnwrapTokenRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnwrapTokenRequestDefaultTypeInternal _UnwrapTokenRequest_default_instance_;

inline constexpr SyncGovernanceRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : sync_metadata_{},
        chain_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SyncGovernanceRequest::SyncGovernanceRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SyncGovernanceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SyncGovernanceRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SyncGovernanceRequestDefaultTypeInternal() {}
  union {
    SyncGovernanceRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SyncGovernanceRequestDefaultTypeInternal _SyncGovernanceRequest_default_instance_;

inline constexpr GetCrossChainTransactionHistoryResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : transactions_{},
        chain_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetCrossChainTransactionHistoryResponse::GetCrossChainTransactionHistoryResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetCrossChainTransactionHistoryResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetCrossChainTransactionHistoryResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetCrossChainTransactionHistoryResponseDefaultTypeInternal() {}
  union {
    GetCrossChainTransactionHistoryResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetCrossChainTransactionHistoryResponseDefaultTypeInternal _GetCrossChainTransactionHistoryResponse_default_instance_;

inline constexpr CrossChainToken::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : token_metadata_{},
        chain_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        wrapped_token_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        originating_chain_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        destination_chain_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        destination_wallet_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        amount_{::uint64_t{0u}},
        status_{static_cast< ::seigr::crosschain::CrossChainStatus >(0)},
        compliance_level_{static_cast< ::seigr::crosschain::ComplianceLevel >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CrossChainToken::CrossChainToken(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CrossChainTokenDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CrossChainTokenDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CrossChainTokenDefaultTypeInternal() {}
  union {
    CrossChainToken _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CrossChainTokenDefaultTypeInternal _CrossChainToken_default_instance_;
}  // namespace crosschain
}  // namespace seigr
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_cross_5fchain_5foperations_2eproto[3];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cross_5fchain_5foperations_2eproto = nullptr;
const ::uint32_t
    TableStruct_cross_5fchain_5foperations_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::CrossChainToken_TokenMetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::CrossChainToken_TokenMetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::CrossChainToken_TokenMetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::CrossChainToken_TokenMetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::CrossChainToken, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::CrossChainToken, _impl_.chain_name_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::CrossChainToken, _impl_.wrapped_token_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::CrossChainToken, _impl_.amount_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::CrossChainToken, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::CrossChainToken, _impl_.originating_chain_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::CrossChainToken, _impl_.destination_chain_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::CrossChainToken, _impl_.compliance_level_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::CrossChainToken, _impl_.destination_wallet_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::CrossChainToken, _impl_.token_metadata_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::CrossChainTransaction, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::CrossChainTransaction, _impl_.transaction_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::CrossChainTransaction, _impl_.from_chain_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::CrossChainTransaction, _impl_.to_chain_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::CrossChainTransaction, _impl_.amount_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::CrossChainTransaction, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::CrossChainTransaction, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::CrossChainTransaction, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::CrossChainTransaction, _impl_.fee_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::CrossChainTransaction, _impl_.wallet_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::CrossChainTransaction, _impl_.compliance_note_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::WrapTokenRequest_WrapMetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::WrapTokenRequest_WrapMetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::WrapTokenRequest_WrapMetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::WrapTokenRequest_WrapMetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::WrapTokenRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::WrapTokenRequest, _impl_.chain_name_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::WrapTokenRequest, _impl_.amount_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::WrapTokenRequest, _impl_.destination_chain_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::WrapTokenRequest, _impl_.destination_wallet_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::WrapTokenRequest, _impl_.wrap_metadata_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::WrapTokenResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::WrapTokenResponse, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::WrapTokenResponse, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::WrapTokenResponse, _impl_.transaction_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::WrapTokenResponse, _impl_.error_code_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::UnwrapTokenRequest_UnwrapMetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::UnwrapTokenRequest_UnwrapMetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::UnwrapTokenRequest_UnwrapMetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::UnwrapTokenRequest_UnwrapMetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::UnwrapTokenRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::UnwrapTokenRequest, _impl_.chain_name_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::UnwrapTokenRequest, _impl_.amount_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::UnwrapTokenRequest, _impl_.destination_chain_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::UnwrapTokenRequest, _impl_.destination_wallet_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::UnwrapTokenRequest, _impl_.unwrap_metadata_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::UnwrapTokenResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::UnwrapTokenResponse, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::UnwrapTokenResponse, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::UnwrapTokenResponse, _impl_.transaction_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::UnwrapTokenResponse, _impl_.error_code_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::SyncGovernanceRequest_SyncMetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::SyncGovernanceRequest_SyncMetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::SyncGovernanceRequest_SyncMetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::SyncGovernanceRequest_SyncMetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::SyncGovernanceRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::SyncGovernanceRequest, _impl_.chain_name_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::SyncGovernanceRequest, _impl_.sync_metadata_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::SyncGovernanceResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::SyncGovernanceResponse, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::SyncGovernanceResponse, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::SyncGovernanceResponse, _impl_.transaction_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::SyncGovernanceResponse, _impl_.error_code_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::GetCrossChainTransactionHistoryRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::GetCrossChainTransactionHistoryRequest, _impl_.chain_name_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::GetCrossChainTransactionHistoryRequest, _impl_.limit_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::GetCrossChainTransactionHistoryRequest, _impl_.filter_types_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::GetCrossChainTransactionHistoryRequest, _impl_.date_range_start_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::GetCrossChainTransactionHistoryRequest, _impl_.date_range_end_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::GetCrossChainTransactionHistoryResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::GetCrossChainTransactionHistoryResponse, _impl_.chain_name_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::GetCrossChainTransactionHistoryResponse, _impl_.transactions_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::UpdateCrossChainStatusRequest_UpdateMetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::UpdateCrossChainStatusRequest_UpdateMetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::UpdateCrossChainStatusRequest_UpdateMetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::UpdateCrossChainStatusRequest_UpdateMetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::UpdateCrossChainStatusRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::UpdateCrossChainStatusRequest, _impl_.chain_name_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::UpdateCrossChainStatusRequest, _impl_.new_status_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::UpdateCrossChainStatusRequest, _impl_.status_reason_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::UpdateCrossChainStatusRequest, _impl_.retry_count_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::UpdateCrossChainStatusRequest, _impl_.update_metadata_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::UpdateCrossChainStatusResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::UpdateCrossChainStatusResponse, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::UpdateCrossChainStatusResponse, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::seigr::crosschain::UpdateCrossChainStatusResponse, _impl_.error_code_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::seigr::crosschain::CrossChainToken_TokenMetadataEntry_DoNotUse)},
        {12, -1, -1, sizeof(::seigr::crosschain::CrossChainToken)},
        {29, -1, -1, sizeof(::seigr::crosschain::CrossChainTransaction)},
        {47, 57, -1, sizeof(::seigr::crosschain::WrapTokenRequest_WrapMetadataEntry_DoNotUse)},
        {59, -1, -1, sizeof(::seigr::crosschain::WrapTokenRequest)},
        {72, -1, -1, sizeof(::seigr::crosschain::WrapTokenResponse)},
        {84, 94, -1, sizeof(::seigr::crosschain::UnwrapTokenRequest_UnwrapMetadataEntry_DoNotUse)},
        {96, -1, -1, sizeof(::seigr::crosschain::UnwrapTokenRequest)},
        {109, -1, -1, sizeof(::seigr::crosschain::UnwrapTokenResponse)},
        {121, 131, -1, sizeof(::seigr::crosschain::SyncGovernanceRequest_SyncMetadataEntry_DoNotUse)},
        {133, -1, -1, sizeof(::seigr::crosschain::SyncGovernanceRequest)},
        {143, -1, -1, sizeof(::seigr::crosschain::SyncGovernanceResponse)},
        {155, -1, -1, sizeof(::seigr::crosschain::GetCrossChainTransactionHistoryRequest)},
        {168, -1, -1, sizeof(::seigr::crosschain::GetCrossChainTransactionHistoryResponse)},
        {178, 188, -1, sizeof(::seigr::crosschain::UpdateCrossChainStatusRequest_UpdateMetadataEntry_DoNotUse)},
        {190, -1, -1, sizeof(::seigr::crosschain::UpdateCrossChainStatusRequest)},
        {203, -1, -1, sizeof(::seigr::crosschain::UpdateCrossChainStatusResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::seigr::crosschain::_CrossChainToken_TokenMetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::crosschain::_CrossChainToken_default_instance_._instance,
    &::seigr::crosschain::_CrossChainTransaction_default_instance_._instance,
    &::seigr::crosschain::_WrapTokenRequest_WrapMetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::crosschain::_WrapTokenRequest_default_instance_._instance,
    &::seigr::crosschain::_WrapTokenResponse_default_instance_._instance,
    &::seigr::crosschain::_UnwrapTokenRequest_UnwrapMetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::crosschain::_UnwrapTokenRequest_default_instance_._instance,
    &::seigr::crosschain::_UnwrapTokenResponse_default_instance_._instance,
    &::seigr::crosschain::_SyncGovernanceRequest_SyncMetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::crosschain::_SyncGovernanceRequest_default_instance_._instance,
    &::seigr::crosschain::_SyncGovernanceResponse_default_instance_._instance,
    &::seigr::crosschain::_GetCrossChainTransactionHistoryRequest_default_instance_._instance,
    &::seigr::crosschain::_GetCrossChainTransactionHistoryResponse_default_instance_._instance,
    &::seigr::crosschain::_UpdateCrossChainStatusRequest_UpdateMetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::crosschain::_UpdateCrossChainStatusRequest_default_instance_._instance,
    &::seigr::crosschain::_UpdateCrossChainStatusResponse_default_instance_._instance,
};
const char descriptor_table_protodef_cross_5fchain_5foperations_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\034cross_chain_operations.proto\022\020seigr.cr"
    "osschain\"\231\003\n\017CrossChainToken\022\022\n\nchain_na"
    "me\030\001 \001(\t\022\030\n\020wrapped_token_id\030\002 \001(\t\022\016\n\006am"
    "ount\030\003 \001(\004\0222\n\006status\030\004 \001(\0162\".seigr.cross"
    "chain.CrossChainStatus\022\031\n\021originating_ch"
    "ain\030\005 \001(\t\022\031\n\021destination_chain\030\006 \001(\t\022;\n\020"
    "compliance_level\030\007 \001(\0162!.seigr.crosschai"
    "n.ComplianceLevel\022\035\n\025destination_wallet_"
    "id\030\010 \001(\t\022L\n\016token_metadata\030\t \003(\01324.seigr"
    ".crosschain.CrossChainToken.TokenMetadat"
    "aEntry\0324\n\022TokenMetadataEntry\022\013\n\003key\030\001 \001("
    "\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\226\002\n\025CrossChainTrans"
    "action\022\026\n\016transaction_id\030\001 \001(\t\022\022\n\nfrom_c"
    "hain\030\002 \001(\t\022\020\n\010to_chain\030\003 \001(\t\022\016\n\006amount\030\004"
    " \001(\004\022\021\n\ttimestamp\030\005 \001(\t\022/\n\004type\030\006 \001(\0162!."
    "seigr.crosschain.TransactionType\0222\n\006stat"
    "us\030\007 \001(\0162\".seigr.crosschain.CrossChainSt"
    "atus\022\013\n\003fee\030\010 \001(\t\022\021\n\twallet_id\030\t \001(\t\022\027\n\017"
    "compliance_note\030\n \001(\t\"\362\001\n\020WrapTokenReque"
    "st\022\022\n\nchain_name\030\001 \001(\t\022\016\n\006amount\030\002 \001(\004\022\031"
    "\n\021destination_chain\030\003 \001(\t\022\035\n\025destination"
    "_wallet_id\030\004 \001(\t\022K\n\rwrap_metadata\030\005 \003(\0132"
    "4.seigr.crosschain.WrapTokenRequest.Wrap"
    "MetadataEntry\0323\n\021WrapMetadataEntry\022\013\n\003ke"
    "y\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"a\n\021WrapTokenR"
    "esponse\022\017\n\007success\030\001 \001(\010\022\017\n\007message\030\002 \001("
    "\t\022\026\n\016transaction_id\030\003 \001(\t\022\022\n\nerror_code\030"
    "\004 \001(\t\"\374\001\n\022UnwrapTokenRequest\022\022\n\nchain_na"
    "me\030\001 \001(\t\022\016\n\006amount\030\002 \001(\004\022\031\n\021destination_"
    "chain\030\003 \001(\t\022\035\n\025destination_wallet_id\030\004 \001"
    "(\t\022Q\n\017unwrap_metadata\030\005 \003(\01328.seigr.cros"
    "schain.UnwrapTokenRequest.UnwrapMetadata"
    "Entry\0325\n\023UnwrapMetadataEntry\022\013\n\003key\030\001 \001("
    "\t\022\r\n\005value\030\002 \001(\t:\0028\001\"c\n\023UnwrapTokenRespo"
    "nse\022\017\n\007success\030\001 \001(\010\022\017\n\007message\030\002 \001(\t\022\026\n"
    "\016transaction_id\030\003 \001(\t\022\022\n\nerror_code\030\004 \001("
    "\t\"\262\001\n\025SyncGovernanceRequest\022\022\n\nchain_nam"
    "e\030\001 \001(\t\022P\n\rsync_metadata\030\002 \003(\01329.seigr.c"
    "rosschain.SyncGovernanceRequest.SyncMeta"
    "dataEntry\0323\n\021SyncMetadataEntry\022\013\n\003key\030\001 "
    "\001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"f\n\026SyncGovernance"
    "Response\022\017\n\007success\030\001 \001(\010\022\017\n\007message\030\002 \001"
    "(\t\022\026\n\016transaction_id\030\003 \001(\t\022\022\n\nerror_code"
    "\030\004 \001(\t\"\266\001\n&GetCrossChainTransactionHisto"
    "ryRequest\022\022\n\nchain_name\030\001 \001(\t\022\r\n\005limit\030\002"
    " \001(\r\0227\n\014filter_types\030\003 \003(\0162!.seigr.cross"
    "chain.TransactionType\022\030\n\020date_range_star"
    "t\030\004 \001(\t\022\026\n\016date_range_end\030\005 \001(\t\"|\n\'GetCr"
    "ossChainTransactionHistoryResponse\022\022\n\nch"
    "ain_name\030\001 \001(\t\022=\n\014transactions\030\002 \003(\0132\'.s"
    "eigr.crosschain.CrossChainTransaction\"\254\002"
    "\n\035UpdateCrossChainStatusRequest\022\022\n\nchain"
    "_name\030\001 \001(\t\0226\n\nnew_status\030\002 \001(\0162\".seigr."
    "crosschain.CrossChainStatus\022\025\n\rstatus_re"
    "ason\030\003 \001(\t\022\023\n\013retry_count\030\004 \001(\005\022\\\n\017updat"
    "e_metadata\030\005 \003(\0132C.seigr.crosschain.Upda"
    "teCrossChainStatusRequest.UpdateMetadata"
    "Entry\0325\n\023UpdateMetadataEntry\022\013\n\003key\030\001 \001("
    "\t\022\r\n\005value\030\002 \001(\t:\0028\001\"V\n\036UpdateCrossChain"
    "StatusResponse\022\017\n\007success\030\001 \001(\010\022\017\n\007messa"
    "ge\030\002 \001(\t\022\022\n\nerror_code\030\003 \001(\t*\262\001\n\020CrossCh"
    "ainStatus\022\026\n\022CROSS_CHAIN_ACTIVE\020\000\022\026\n\022CRO"
    "SS_CHAIN_SYNCED\020\001\022\030\n\024CROSS_CHAIN_INACTIV"
    "E\020\002\022\034\n\030CROSS_CHAIN_PENDING_WRAP\020\003\022\036\n\032CRO"
    "SS_CHAIN_PENDING_UNWRAP\020\004\022\026\n\022CROSS_CHAIN"
    "_FAILED\020\005*\263\001\n\017TransactionType\022\036\n\032TRANSAC"
    "TION_TYPE_UNDEFINED\020\000\022\031\n\025TRANSACTION_TYP"
    "E_WRAP\020\001\022\033\n\027TRANSACTION_TYPE_UNWRAP\020\002\022$\n"
    " TRANSACTION_TYPE_GOVERNANCE_SYNC\020\003\022\"\n\036T"
    "RANSACTION_TYPE_STATUS_UPDATE\020\004*\202\001\n\017Comp"
    "lianceLevel\022\036\n\032COMPLIANCE_LEVEL_UNDEFINE"
    "D\020\000\022\031\n\025COMPLIANCE_LEVEL_GDPR\020\001\022\031\n\025COMPLI"
    "ANCE_LEVEL_CCPA\020\002\022\031\n\025COMPLIANCE_LEVEL_NO"
    "NE\020\0032\300\004\n\021CrossChainService\022T\n\tWrapToken\022"
    "\".seigr.crosschain.WrapTokenRequest\032#.se"
    "igr.crosschain.WrapTokenResponse\022Z\n\013Unwr"
    "apToken\022$.seigr.crosschain.UnwrapTokenRe"
    "quest\032%.seigr.crosschain.UnwrapTokenResp"
    "onse\022c\n\016SyncGovernance\022\'.seigr.crosschai"
    "n.SyncGovernanceRequest\032(.seigr.crosscha"
    "in.SyncGovernanceResponse\022\226\001\n\037GetCrossCh"
    "ainTransactionHistory\0228.seigr.crosschain"
    ".GetCrossChainTransactionHistoryRequest\032"
    "9.seigr.crosschain.GetCrossChainTransact"
    "ionHistoryResponse\022{\n\026UpdateCrossChainSt"
    "atus\022/.seigr.crosschain.UpdateCrossChain"
    "StatusRequest\0320.seigr.crosschain.UpdateC"
    "rossChainStatusResponseb\006proto3"
};
static ::absl::once_flag descriptor_table_cross_5fchain_5foperations_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_cross_5fchain_5foperations_2eproto = {
    false,
    false,
    3511,
    descriptor_table_protodef_cross_5fchain_5foperations_2eproto,
    "cross_chain_operations.proto",
    &descriptor_table_cross_5fchain_5foperations_2eproto_once,
    nullptr,
    0,
    17,
    schemas,
    file_default_instances,
    TableStruct_cross_5fchain_5foperations_2eproto::offsets,
    file_level_enum_descriptors_cross_5fchain_5foperations_2eproto,
    file_level_service_descriptors_cross_5fchain_5foperations_2eproto,
};
namespace seigr {
namespace crosschain {
const ::google::protobuf::EnumDescriptor* CrossChainStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_cross_5fchain_5foperations_2eproto);
  return file_level_enum_descriptors_cross_5fchain_5foperations_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t CrossChainStatus_internal_data_[] = {
    393216u, 0u, };
bool CrossChainStatus_IsValid(int value) {
  return 0 <= value && value <= 5;
}
const ::google::protobuf::EnumDescriptor* TransactionType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_cross_5fchain_5foperations_2eproto);
  return file_level_enum_descriptors_cross_5fchain_5foperations_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t TransactionType_internal_data_[] = {
    327680u, 0u, };
bool TransactionType_IsValid(int value) {
  return 0 <= value && value <= 4;
}
const ::google::protobuf::EnumDescriptor* ComplianceLevel_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_cross_5fchain_5foperations_2eproto);
  return file_level_enum_descriptors_cross_5fchain_5foperations_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t ComplianceLevel_internal_data_[] = {
    262144u, 0u, };
bool ComplianceLevel_IsValid(int value) {
  return 0 <= value && value <= 3;
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              CrossChainToken_TokenMetadataEntry_DoNotUse::CrossChainToken_TokenMetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              CrossChainToken_TokenMetadataEntry_DoNotUse::CrossChainToken_TokenMetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              CrossChainToken_TokenMetadataEntry_DoNotUse::CrossChainToken_TokenMetadataEntry_DoNotUse() : SuperType() {}
              CrossChainToken_TokenMetadataEntry_DoNotUse::CrossChainToken_TokenMetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* CrossChainToken_TokenMetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) CrossChainToken_TokenMetadataEntry_DoNotUse(arena);
              }
              constexpr auto CrossChainToken_TokenMetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CrossChainToken_TokenMetadataEntry_DoNotUse),
                                                          alignof(CrossChainToken_TokenMetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull CrossChainToken_TokenMetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_CrossChainToken_TokenMetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &CrossChainToken_TokenMetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<CrossChainToken_TokenMetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &CrossChainToken_TokenMetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &CrossChainToken_TokenMetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(CrossChainToken_TokenMetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &CrossChainToken_TokenMetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_cross_5fchain_5foperations_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* CrossChainToken_TokenMetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 68, 2> CrossChainToken_TokenMetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CrossChainToken_TokenMetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::crosschain::CrossChainToken_TokenMetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CrossChainToken_TokenMetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CrossChainToken_TokenMetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(CrossChainToken_TokenMetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(CrossChainToken_TokenMetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\63\3\5\0\0\0\0\0"
    "seigr.crosschain.CrossChainToken.TokenMetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class CrossChainToken::_Internal {
 public:
};

CrossChainToken::CrossChainToken(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.crosschain.CrossChainToken)
}
inline PROTOBUF_NDEBUG_INLINE CrossChainToken::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::crosschain::CrossChainToken& from_msg)
      : token_metadata_{visibility, arena, from.token_metadata_},
        chain_name_(arena, from.chain_name_),
        wrapped_token_id_(arena, from.wrapped_token_id_),
        originating_chain_(arena, from.originating_chain_),
        destination_chain_(arena, from.destination_chain_),
        destination_wallet_id_(arena, from.destination_wallet_id_),
        _cached_size_{0} {}

CrossChainToken::CrossChainToken(
    ::google::protobuf::Arena* arena,
    const CrossChainToken& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CrossChainToken* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, amount_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, amount_),
           offsetof(Impl_, compliance_level_) -
               offsetof(Impl_, amount_) +
               sizeof(Impl_::compliance_level_));

  // @@protoc_insertion_point(copy_constructor:seigr.crosschain.CrossChainToken)
}
inline PROTOBUF_NDEBUG_INLINE CrossChainToken::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : token_metadata_{visibility, arena},
        chain_name_(arena),
        wrapped_token_id_(arena),
        originating_chain_(arena),
        destination_chain_(arena),
        destination_wallet_id_(arena),
        _cached_size_{0} {}

inline void CrossChainToken::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, amount_),
           0,
           offsetof(Impl_, compliance_level_) -
               offsetof(Impl_, amount_) +
               sizeof(Impl_::compliance_level_));
}
CrossChainToken::~CrossChainToken() {
  // @@protoc_insertion_point(destructor:seigr.crosschain.CrossChainToken)
  SharedDtor(*this);
}
inline void CrossChainToken::SharedDtor(MessageLite& self) {
  CrossChainToken& this_ = static_cast<CrossChainToken&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.chain_name_.Destroy();
  this_._impl_.wrapped_token_id_.Destroy();
  this_._impl_.originating_chain_.Destroy();
  this_._impl_.destination_chain_.Destroy();
  this_._impl_.destination_wallet_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* CrossChainToken::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CrossChainToken(arena);
}
constexpr auto CrossChainToken::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CrossChainToken, _impl_.token_metadata_) +
          decltype(CrossChainToken::_impl_.token_metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CrossChainToken, _impl_.token_metadata_) +
          decltype(CrossChainToken::_impl_.token_metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(CrossChainToken), alignof(CrossChainToken), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CrossChainToken::PlacementNew_,
                                 sizeof(CrossChainToken),
                                 alignof(CrossChainToken));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CrossChainToken::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CrossChainToken_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CrossChainToken::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CrossChainToken>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CrossChainToken::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CrossChainToken>(), &CrossChainToken::ByteSizeLong,
            &CrossChainToken::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CrossChainToken, _impl_._cached_size_),
        false,
    },
    &CrossChainToken::kDescriptorMethods,
    &descriptor_table_cross_5fchain_5foperations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CrossChainToken::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 9, 1, 144, 2> CrossChainToken::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    9, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::crosschain::CrossChainToken>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string destination_wallet_id = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(CrossChainToken, _impl_.destination_wallet_id_)}},
    // string chain_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CrossChainToken, _impl_.chain_name_)}},
    // string wrapped_token_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CrossChainToken, _impl_.wrapped_token_id_)}},
    // uint64 amount = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CrossChainToken, _impl_.amount_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(CrossChainToken, _impl_.amount_)}},
    // .seigr.crosschain.CrossChainStatus status = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CrossChainToken, _impl_.status_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(CrossChainToken, _impl_.status_)}},
    // string originating_chain = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(CrossChainToken, _impl_.originating_chain_)}},
    // string destination_chain = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(CrossChainToken, _impl_.destination_chain_)}},
    // .seigr.crosschain.ComplianceLevel compliance_level = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CrossChainToken, _impl_.compliance_level_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(CrossChainToken, _impl_.compliance_level_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string chain_name = 1;
    {PROTOBUF_FIELD_OFFSET(CrossChainToken, _impl_.chain_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string wrapped_token_id = 2;
    {PROTOBUF_FIELD_OFFSET(CrossChainToken, _impl_.wrapped_token_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 amount = 3;
    {PROTOBUF_FIELD_OFFSET(CrossChainToken, _impl_.amount_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .seigr.crosschain.CrossChainStatus status = 4;
    {PROTOBUF_FIELD_OFFSET(CrossChainToken, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string originating_chain = 5;
    {PROTOBUF_FIELD_OFFSET(CrossChainToken, _impl_.originating_chain_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string destination_chain = 6;
    {PROTOBUF_FIELD_OFFSET(CrossChainToken, _impl_.destination_chain_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.crosschain.ComplianceLevel compliance_level = 7;
    {PROTOBUF_FIELD_OFFSET(CrossChainToken, _impl_.compliance_level_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string destination_wallet_id = 8;
    {PROTOBUF_FIELD_OFFSET(CrossChainToken, _impl_.destination_wallet_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> token_metadata = 9;
    {PROTOBUF_FIELD_OFFSET(CrossChainToken, _impl_.token_metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(CrossChainToken()._impl_.token_metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\40\12\20\0\0\21\21\0\25\16\0\0\0\0\0\0"
    "seigr.crosschain.CrossChainToken"
    "chain_name"
    "wrapped_token_id"
    "originating_chain"
    "destination_chain"
    "destination_wallet_id"
    "token_metadata"
  }},
};

PROTOBUF_NOINLINE void CrossChainToken::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.crosschain.CrossChainToken)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.token_metadata_.Clear();
  _impl_.chain_name_.ClearToEmpty();
  _impl_.wrapped_token_id_.ClearToEmpty();
  _impl_.originating_chain_.ClearToEmpty();
  _impl_.destination_chain_.ClearToEmpty();
  _impl_.destination_wallet_id_.ClearToEmpty();
  ::memset(&_impl_.amount_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.compliance_level_) -
      reinterpret_cast<char*>(&_impl_.amount_)) + sizeof(_impl_.compliance_level_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CrossChainToken::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CrossChainToken& this_ = static_cast<const CrossChainToken&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CrossChainToken::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CrossChainToken& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.crosschain.CrossChainToken)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string chain_name = 1;
          if (!this_._internal_chain_name().empty()) {
            const std::string& _s = this_._internal_chain_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.CrossChainToken.chain_name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string wrapped_token_id = 2;
          if (!this_._internal_wrapped_token_id().empty()) {
            const std::string& _s = this_._internal_wrapped_token_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.CrossChainToken.wrapped_token_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // uint64 amount = 3;
          if (this_._internal_amount() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                3, this_._internal_amount(), target);
          }

          // .seigr.crosschain.CrossChainStatus status = 4;
          if (this_._internal_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                4, this_._internal_status(), target);
          }

          // string originating_chain = 5;
          if (!this_._internal_originating_chain().empty()) {
            const std::string& _s = this_._internal_originating_chain();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.CrossChainToken.originating_chain");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string destination_chain = 6;
          if (!this_._internal_destination_chain().empty()) {
            const std::string& _s = this_._internal_destination_chain();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.CrossChainToken.destination_chain");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // .seigr.crosschain.ComplianceLevel compliance_level = 7;
          if (this_._internal_compliance_level() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                7, this_._internal_compliance_level(), target);
          }

          // string destination_wallet_id = 8;
          if (!this_._internal_destination_wallet_id().empty()) {
            const std::string& _s = this_._internal_destination_wallet_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.CrossChainToken.destination_wallet_id");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          // map<string, string> token_metadata = 9;
          if (!this_._internal_token_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_token_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    9, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.CrossChainToken.token_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.CrossChainToken.token_metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    9, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.CrossChainToken.token_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.CrossChainToken.token_metadata");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.crosschain.CrossChainToken)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CrossChainToken::ByteSizeLong(const MessageLite& base) {
          const CrossChainToken& this_ = static_cast<const CrossChainToken&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CrossChainToken::ByteSizeLong() const {
          const CrossChainToken& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.crosschain.CrossChainToken)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> token_metadata = 9;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_token_metadata_size());
              for (const auto& entry : this_._internal_token_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string chain_name = 1;
            if (!this_._internal_chain_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_chain_name());
            }
            // string wrapped_token_id = 2;
            if (!this_._internal_wrapped_token_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_wrapped_token_id());
            }
            // string originating_chain = 5;
            if (!this_._internal_originating_chain().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_originating_chain());
            }
            // string destination_chain = 6;
            if (!this_._internal_destination_chain().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_destination_chain());
            }
            // string destination_wallet_id = 8;
            if (!this_._internal_destination_wallet_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_destination_wallet_id());
            }
            // uint64 amount = 3;
            if (this_._internal_amount() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_amount());
            }
            // .seigr.crosschain.CrossChainStatus status = 4;
            if (this_._internal_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
            }
            // .seigr.crosschain.ComplianceLevel compliance_level = 7;
            if (this_._internal_compliance_level() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_compliance_level());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CrossChainToken::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CrossChainToken*>(&to_msg);
  auto& from = static_cast<const CrossChainToken&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.crosschain.CrossChainToken)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.token_metadata_.MergeFrom(from._impl_.token_metadata_);
  if (!from._internal_chain_name().empty()) {
    _this->_internal_set_chain_name(from._internal_chain_name());
  }
  if (!from._internal_wrapped_token_id().empty()) {
    _this->_internal_set_wrapped_token_id(from._internal_wrapped_token_id());
  }
  if (!from._internal_originating_chain().empty()) {
    _this->_internal_set_originating_chain(from._internal_originating_chain());
  }
  if (!from._internal_destination_chain().empty()) {
    _this->_internal_set_destination_chain(from._internal_destination_chain());
  }
  if (!from._internal_destination_wallet_id().empty()) {
    _this->_internal_set_destination_wallet_id(from._internal_destination_wallet_id());
  }
  if (from._internal_amount() != 0) {
    _this->_impl_.amount_ = from._impl_.amount_;
  }
  if (from._internal_status() != 0) {
    _this->_impl_.status_ = from._impl_.status_;
  }
  if (from._internal_compliance_level() != 0) {
    _this->_impl_.compliance_level_ = from._impl_.compliance_level_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CrossChainToken::CopyFrom(const CrossChainToken& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.crosschain.CrossChainToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CrossChainToken::InternalSwap(CrossChainToken* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.token_metadata_.InternalSwap(&other->_impl_.token_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.chain_name_, &other->_impl_.chain_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.wrapped_token_id_, &other->_impl_.wrapped_token_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.originating_chain_, &other->_impl_.originating_chain_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.destination_chain_, &other->_impl_.destination_chain_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.destination_wallet_id_, &other->_impl_.destination_wallet_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CrossChainToken, _impl_.compliance_level_)
      + sizeof(CrossChainToken::_impl_.compliance_level_)
      - PROTOBUF_FIELD_OFFSET(CrossChainToken, _impl_.amount_)>(
          reinterpret_cast<char*>(&_impl_.amount_),
          reinterpret_cast<char*>(&other->_impl_.amount_));
}

::google::protobuf::Metadata CrossChainToken::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CrossChainTransaction::_Internal {
 public:
};

CrossChainTransaction::CrossChainTransaction(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.crosschain.CrossChainTransaction)
}
inline PROTOBUF_NDEBUG_INLINE CrossChainTransaction::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::crosschain::CrossChainTransaction& from_msg)
      : transaction_id_(arena, from.transaction_id_),
        from_chain_(arena, from.from_chain_),
        to_chain_(arena, from.to_chain_),
        timestamp_(arena, from.timestamp_),
        fee_(arena, from.fee_),
        wallet_id_(arena, from.wallet_id_),
        compliance_note_(arena, from.compliance_note_),
        _cached_size_{0} {}

CrossChainTransaction::CrossChainTransaction(
    ::google::protobuf::Arena* arena,
    const CrossChainTransaction& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CrossChainTransaction* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, amount_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, amount_),
           offsetof(Impl_, status_) -
               offsetof(Impl_, amount_) +
               sizeof(Impl_::status_));

  // @@protoc_insertion_point(copy_constructor:seigr.crosschain.CrossChainTransaction)
}
inline PROTOBUF_NDEBUG_INLINE CrossChainTransaction::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : transaction_id_(arena),
        from_chain_(arena),
        to_chain_(arena),
        timestamp_(arena),
        fee_(arena),
        wallet_id_(arena),
        compliance_note_(arena),
        _cached_size_{0} {}

inline void CrossChainTransaction::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, amount_),
           0,
           offsetof(Impl_, status_) -
               offsetof(Impl_, amount_) +
               sizeof(Impl_::status_));
}
CrossChainTransaction::~CrossChainTransaction() {
  // @@protoc_insertion_point(destructor:seigr.crosschain.CrossChainTransaction)
  SharedDtor(*this);
}
inline void CrossChainTransaction::SharedDtor(MessageLite& self) {
  CrossChainTransaction& this_ = static_cast<CrossChainTransaction&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.transaction_id_.Destroy();
  this_._impl_.from_chain_.Destroy();
  this_._impl_.to_chain_.Destroy();
  this_._impl_.timestamp_.Destroy();
  this_._impl_.fee_.Destroy();
  this_._impl_.wallet_id_.Destroy();
  this_._impl_.compliance_note_.Destroy();
  this_._impl_.~Impl_();
}

inline void* CrossChainTransaction::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CrossChainTransaction(arena);
}
constexpr auto CrossChainTransaction::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CrossChainTransaction),
                                            alignof(CrossChainTransaction));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CrossChainTransaction::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CrossChainTransaction_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CrossChainTransaction::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CrossChainTransaction>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CrossChainTransaction::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CrossChainTransaction>(), &CrossChainTransaction::ByteSizeLong,
            &CrossChainTransaction::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CrossChainTransaction, _impl_._cached_size_),
        false,
    },
    &CrossChainTransaction::kDescriptorMethods,
    &descriptor_table_cross_5fchain_5foperations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CrossChainTransaction::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 0, 123, 2> CrossChainTransaction::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::crosschain::CrossChainTransaction>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string transaction_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CrossChainTransaction, _impl_.transaction_id_)}},
    // string from_chain = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CrossChainTransaction, _impl_.from_chain_)}},
    // string to_chain = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(CrossChainTransaction, _impl_.to_chain_)}},
    // uint64 amount = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CrossChainTransaction, _impl_.amount_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(CrossChainTransaction, _impl_.amount_)}},
    // string timestamp = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(CrossChainTransaction, _impl_.timestamp_)}},
    // .seigr.crosschain.TransactionType type = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CrossChainTransaction, _impl_.type_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(CrossChainTransaction, _impl_.type_)}},
    // .seigr.crosschain.CrossChainStatus status = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CrossChainTransaction, _impl_.status_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(CrossChainTransaction, _impl_.status_)}},
    // string fee = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(CrossChainTransaction, _impl_.fee_)}},
    // string wallet_id = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(CrossChainTransaction, _impl_.wallet_id_)}},
    // string compliance_note = 10;
    {::_pbi::TcParser::FastUS1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(CrossChainTransaction, _impl_.compliance_note_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string transaction_id = 1;
    {PROTOBUF_FIELD_OFFSET(CrossChainTransaction, _impl_.transaction_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string from_chain = 2;
    {PROTOBUF_FIELD_OFFSET(CrossChainTransaction, _impl_.from_chain_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string to_chain = 3;
    {PROTOBUF_FIELD_OFFSET(CrossChainTransaction, _impl_.to_chain_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 amount = 4;
    {PROTOBUF_FIELD_OFFSET(CrossChainTransaction, _impl_.amount_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string timestamp = 5;
    {PROTOBUF_FIELD_OFFSET(CrossChainTransaction, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.crosschain.TransactionType type = 6;
    {PROTOBUF_FIELD_OFFSET(CrossChainTransaction, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .seigr.crosschain.CrossChainStatus status = 7;
    {PROTOBUF_FIELD_OFFSET(CrossChainTransaction, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string fee = 8;
    {PROTOBUF_FIELD_OFFSET(CrossChainTransaction, _impl_.fee_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string wallet_id = 9;
    {PROTOBUF_FIELD_OFFSET(CrossChainTransaction, _impl_.wallet_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string compliance_note = 10;
    {PROTOBUF_FIELD_OFFSET(CrossChainTransaction, _impl_.compliance_note_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\46\16\12\10\0\11\0\0\3\11\17\0\0\0\0\0"
    "seigr.crosschain.CrossChainTransaction"
    "transaction_id"
    "from_chain"
    "to_chain"
    "timestamp"
    "fee"
    "wallet_id"
    "compliance_note"
  }},
};

PROTOBUF_NOINLINE void CrossChainTransaction::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.crosschain.CrossChainTransaction)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.transaction_id_.ClearToEmpty();
  _impl_.from_chain_.ClearToEmpty();
  _impl_.to_chain_.ClearToEmpty();
  _impl_.timestamp_.ClearToEmpty();
  _impl_.fee_.ClearToEmpty();
  _impl_.wallet_id_.ClearToEmpty();
  _impl_.compliance_note_.ClearToEmpty();
  ::memset(&_impl_.amount_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.status_) -
      reinterpret_cast<char*>(&_impl_.amount_)) + sizeof(_impl_.status_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CrossChainTransaction::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CrossChainTransaction& this_ = static_cast<const CrossChainTransaction&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CrossChainTransaction::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CrossChainTransaction& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.crosschain.CrossChainTransaction)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string transaction_id = 1;
          if (!this_._internal_transaction_id().empty()) {
            const std::string& _s = this_._internal_transaction_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.CrossChainTransaction.transaction_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string from_chain = 2;
          if (!this_._internal_from_chain().empty()) {
            const std::string& _s = this_._internal_from_chain();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.CrossChainTransaction.from_chain");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string to_chain = 3;
          if (!this_._internal_to_chain().empty()) {
            const std::string& _s = this_._internal_to_chain();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.CrossChainTransaction.to_chain");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // uint64 amount = 4;
          if (this_._internal_amount() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                4, this_._internal_amount(), target);
          }

          // string timestamp = 5;
          if (!this_._internal_timestamp().empty()) {
            const std::string& _s = this_._internal_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.CrossChainTransaction.timestamp");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // .seigr.crosschain.TransactionType type = 6;
          if (this_._internal_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                6, this_._internal_type(), target);
          }

          // .seigr.crosschain.CrossChainStatus status = 7;
          if (this_._internal_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                7, this_._internal_status(), target);
          }

          // string fee = 8;
          if (!this_._internal_fee().empty()) {
            const std::string& _s = this_._internal_fee();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.CrossChainTransaction.fee");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          // string wallet_id = 9;
          if (!this_._internal_wallet_id().empty()) {
            const std::string& _s = this_._internal_wallet_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.CrossChainTransaction.wallet_id");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          // string compliance_note = 10;
          if (!this_._internal_compliance_note().empty()) {
            const std::string& _s = this_._internal_compliance_note();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.CrossChainTransaction.compliance_note");
            target = stream->WriteStringMaybeAliased(10, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.crosschain.CrossChainTransaction)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CrossChainTransaction::ByteSizeLong(const MessageLite& base) {
          const CrossChainTransaction& this_ = static_cast<const CrossChainTransaction&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CrossChainTransaction::ByteSizeLong() const {
          const CrossChainTransaction& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.crosschain.CrossChainTransaction)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string transaction_id = 1;
            if (!this_._internal_transaction_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_transaction_id());
            }
            // string from_chain = 2;
            if (!this_._internal_from_chain().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_from_chain());
            }
            // string to_chain = 3;
            if (!this_._internal_to_chain().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_to_chain());
            }
            // string timestamp = 5;
            if (!this_._internal_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_timestamp());
            }
            // string fee = 8;
            if (!this_._internal_fee().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_fee());
            }
            // string wallet_id = 9;
            if (!this_._internal_wallet_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_wallet_id());
            }
            // string compliance_note = 10;
            if (!this_._internal_compliance_note().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_compliance_note());
            }
            // uint64 amount = 4;
            if (this_._internal_amount() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_amount());
            }
            // .seigr.crosschain.TransactionType type = 6;
            if (this_._internal_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
            }
            // .seigr.crosschain.CrossChainStatus status = 7;
            if (this_._internal_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CrossChainTransaction::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CrossChainTransaction*>(&to_msg);
  auto& from = static_cast<const CrossChainTransaction&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.crosschain.CrossChainTransaction)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_transaction_id().empty()) {
    _this->_internal_set_transaction_id(from._internal_transaction_id());
  }
  if (!from._internal_from_chain().empty()) {
    _this->_internal_set_from_chain(from._internal_from_chain());
  }
  if (!from._internal_to_chain().empty()) {
    _this->_internal_set_to_chain(from._internal_to_chain());
  }
  if (!from._internal_timestamp().empty()) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (!from._internal_fee().empty()) {
    _this->_internal_set_fee(from._internal_fee());
  }
  if (!from._internal_wallet_id().empty()) {
    _this->_internal_set_wallet_id(from._internal_wallet_id());
  }
  if (!from._internal_compliance_note().empty()) {
    _this->_internal_set_compliance_note(from._internal_compliance_note());
  }
  if (from._internal_amount() != 0) {
    _this->_impl_.amount_ = from._impl_.amount_;
  }
  if (from._internal_type() != 0) {
    _this->_impl_.type_ = from._impl_.type_;
  }
  if (from._internal_status() != 0) {
    _this->_impl_.status_ = from._impl_.status_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CrossChainTransaction::CopyFrom(const CrossChainTransaction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.crosschain.CrossChainTransaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CrossChainTransaction::InternalSwap(CrossChainTransaction* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.transaction_id_, &other->_impl_.transaction_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.from_chain_, &other->_impl_.from_chain_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.to_chain_, &other->_impl_.to_chain_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.timestamp_, &other->_impl_.timestamp_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.fee_, &other->_impl_.fee_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.wallet_id_, &other->_impl_.wallet_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.compliance_note_, &other->_impl_.compliance_note_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CrossChainTransaction, _impl_.status_)
      + sizeof(CrossChainTransaction::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(CrossChainTransaction, _impl_.amount_)>(
          reinterpret_cast<char*>(&_impl_.amount_),
          reinterpret_cast<char*>(&other->_impl_.amount_));
}

::google::protobuf::Metadata CrossChainTransaction::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              WrapTokenRequest_WrapMetadataEntry_DoNotUse::WrapTokenRequest_WrapMetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              WrapTokenRequest_WrapMetadataEntry_DoNotUse::WrapTokenRequest_WrapMetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              WrapTokenRequest_WrapMetadataEntry_DoNotUse::WrapTokenRequest_WrapMetadataEntry_DoNotUse() : SuperType() {}
              WrapTokenRequest_WrapMetadataEntry_DoNotUse::WrapTokenRequest_WrapMetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* WrapTokenRequest_WrapMetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) WrapTokenRequest_WrapMetadataEntry_DoNotUse(arena);
              }
              constexpr auto WrapTokenRequest_WrapMetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(WrapTokenRequest_WrapMetadataEntry_DoNotUse),
                                                          alignof(WrapTokenRequest_WrapMetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull WrapTokenRequest_WrapMetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_WrapTokenRequest_WrapMetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &WrapTokenRequest_WrapMetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<WrapTokenRequest_WrapMetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &WrapTokenRequest_WrapMetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &WrapTokenRequest_WrapMetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(WrapTokenRequest_WrapMetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &WrapTokenRequest_WrapMetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_cross_5fchain_5foperations_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* WrapTokenRequest_WrapMetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 68, 2> WrapTokenRequest_WrapMetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(WrapTokenRequest_WrapMetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::crosschain::WrapTokenRequest_WrapMetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(WrapTokenRequest_WrapMetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(WrapTokenRequest_WrapMetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(WrapTokenRequest_WrapMetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(WrapTokenRequest_WrapMetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\63\3\5\0\0\0\0\0"
    "seigr.crosschain.WrapTokenRequest.WrapMetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class WrapTokenRequest::_Internal {
 public:
};

WrapTokenRequest::WrapTokenRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.crosschain.WrapTokenRequest)
}
inline PROTOBUF_NDEBUG_INLINE WrapTokenRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::crosschain::WrapTokenRequest& from_msg)
      : wrap_metadata_{visibility, arena, from.wrap_metadata_},
        chain_name_(arena, from.chain_name_),
        destination_chain_(arena, from.destination_chain_),
        destination_wallet_id_(arena, from.destination_wallet_id_),
        _cached_size_{0} {}

WrapTokenRequest::WrapTokenRequest(
    ::google::protobuf::Arena* arena,
    const WrapTokenRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  WrapTokenRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.amount_ = from._impl_.amount_;

  // @@protoc_insertion_point(copy_constructor:seigr.crosschain.WrapTokenRequest)
}
inline PROTOBUF_NDEBUG_INLINE WrapTokenRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : wrap_metadata_{visibility, arena},
        chain_name_(arena),
        destination_chain_(arena),
        destination_wallet_id_(arena),
        _cached_size_{0} {}

inline void WrapTokenRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.amount_ = {};
}
WrapTokenRequest::~WrapTokenRequest() {
  // @@protoc_insertion_point(destructor:seigr.crosschain.WrapTokenRequest)
  SharedDtor(*this);
}
inline void WrapTokenRequest::SharedDtor(MessageLite& self) {
  WrapTokenRequest& this_ = static_cast<WrapTokenRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.chain_name_.Destroy();
  this_._impl_.destination_chain_.Destroy();
  this_._impl_.destination_wallet_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* WrapTokenRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) WrapTokenRequest(arena);
}
constexpr auto WrapTokenRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(WrapTokenRequest, _impl_.wrap_metadata_) +
          decltype(WrapTokenRequest::_impl_.wrap_metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(WrapTokenRequest, _impl_.wrap_metadata_) +
          decltype(WrapTokenRequest::_impl_.wrap_metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(WrapTokenRequest), alignof(WrapTokenRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&WrapTokenRequest::PlacementNew_,
                                 sizeof(WrapTokenRequest),
                                 alignof(WrapTokenRequest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull WrapTokenRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_WrapTokenRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &WrapTokenRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<WrapTokenRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &WrapTokenRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<WrapTokenRequest>(), &WrapTokenRequest::ByteSizeLong,
            &WrapTokenRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(WrapTokenRequest, _impl_._cached_size_),
        false,
    },
    &WrapTokenRequest::kDescriptorMethods,
    &descriptor_table_cross_5fchain_5foperations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* WrapTokenRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 5, 1, 103, 2> WrapTokenRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::crosschain::WrapTokenRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string destination_wallet_id = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(WrapTokenRequest, _impl_.destination_wallet_id_)}},
    // string chain_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(WrapTokenRequest, _impl_.chain_name_)}},
    // uint64 amount = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(WrapTokenRequest, _impl_.amount_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(WrapTokenRequest, _impl_.amount_)}},
    // string destination_chain = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(WrapTokenRequest, _impl_.destination_chain_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string chain_name = 1;
    {PROTOBUF_FIELD_OFFSET(WrapTokenRequest, _impl_.chain_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 amount = 2;
    {PROTOBUF_FIELD_OFFSET(WrapTokenRequest, _impl_.amount_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string destination_chain = 3;
    {PROTOBUF_FIELD_OFFSET(WrapTokenRequest, _impl_.destination_chain_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string destination_wallet_id = 4;
    {PROTOBUF_FIELD_OFFSET(WrapTokenRequest, _impl_.destination_wallet_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> wrap_metadata = 5;
    {PROTOBUF_FIELD_OFFSET(WrapTokenRequest, _impl_.wrap_metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(WrapTokenRequest()._impl_.wrap_metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\41\12\0\21\25\15\0\0"
    "seigr.crosschain.WrapTokenRequest"
    "chain_name"
    "destination_chain"
    "destination_wallet_id"
    "wrap_metadata"
  }},
};

PROTOBUF_NOINLINE void WrapTokenRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.crosschain.WrapTokenRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.wrap_metadata_.Clear();
  _impl_.chain_name_.ClearToEmpty();
  _impl_.destination_chain_.ClearToEmpty();
  _impl_.destination_wallet_id_.ClearToEmpty();
  _impl_.amount_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* WrapTokenRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const WrapTokenRequest& this_ = static_cast<const WrapTokenRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* WrapTokenRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const WrapTokenRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.crosschain.WrapTokenRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string chain_name = 1;
          if (!this_._internal_chain_name().empty()) {
            const std::string& _s = this_._internal_chain_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.WrapTokenRequest.chain_name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // uint64 amount = 2;
          if (this_._internal_amount() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_amount(), target);
          }

          // string destination_chain = 3;
          if (!this_._internal_destination_chain().empty()) {
            const std::string& _s = this_._internal_destination_chain();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.WrapTokenRequest.destination_chain");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string destination_wallet_id = 4;
          if (!this_._internal_destination_wallet_id().empty()) {
            const std::string& _s = this_._internal_destination_wallet_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.WrapTokenRequest.destination_wallet_id");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // map<string, string> wrap_metadata = 5;
          if (!this_._internal_wrap_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_wrap_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    5, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.WrapTokenRequest.wrap_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.WrapTokenRequest.wrap_metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    5, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.WrapTokenRequest.wrap_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.WrapTokenRequest.wrap_metadata");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.crosschain.WrapTokenRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t WrapTokenRequest::ByteSizeLong(const MessageLite& base) {
          const WrapTokenRequest& this_ = static_cast<const WrapTokenRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t WrapTokenRequest::ByteSizeLong() const {
          const WrapTokenRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.crosschain.WrapTokenRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> wrap_metadata = 5;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_wrap_metadata_size());
              for (const auto& entry : this_._internal_wrap_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string chain_name = 1;
            if (!this_._internal_chain_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_chain_name());
            }
            // string destination_chain = 3;
            if (!this_._internal_destination_chain().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_destination_chain());
            }
            // string destination_wallet_id = 4;
            if (!this_._internal_destination_wallet_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_destination_wallet_id());
            }
            // uint64 amount = 2;
            if (this_._internal_amount() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_amount());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void WrapTokenRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<WrapTokenRequest*>(&to_msg);
  auto& from = static_cast<const WrapTokenRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.crosschain.WrapTokenRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.wrap_metadata_.MergeFrom(from._impl_.wrap_metadata_);
  if (!from._internal_chain_name().empty()) {
    _this->_internal_set_chain_name(from._internal_chain_name());
  }
  if (!from._internal_destination_chain().empty()) {
    _this->_internal_set_destination_chain(from._internal_destination_chain());
  }
  if (!from._internal_destination_wallet_id().empty()) {
    _this->_internal_set_destination_wallet_id(from._internal_destination_wallet_id());
  }
  if (from._internal_amount() != 0) {
    _this->_impl_.amount_ = from._impl_.amount_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WrapTokenRequest::CopyFrom(const WrapTokenRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.crosschain.WrapTokenRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void WrapTokenRequest::InternalSwap(WrapTokenRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.wrap_metadata_.InternalSwap(&other->_impl_.wrap_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.chain_name_, &other->_impl_.chain_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.destination_chain_, &other->_impl_.destination_chain_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.destination_wallet_id_, &other->_impl_.destination_wallet_id_, arena);
        swap(_impl_.amount_, other->_impl_.amount_);
}

::google::protobuf::Metadata WrapTokenRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class WrapTokenResponse::_Internal {
 public:
};

WrapTokenResponse::WrapTokenResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.crosschain.WrapTokenResponse)
}
inline PROTOBUF_NDEBUG_INLINE WrapTokenResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::crosschain::WrapTokenResponse& from_msg)
      : message_(arena, from.message_),
        transaction_id_(arena, from.transaction_id_),
        error_code_(arena, from.error_code_),
        _cached_size_{0} {}

WrapTokenResponse::WrapTokenResponse(
    ::google::protobuf::Arena* arena,
    const WrapTokenResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  WrapTokenResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:seigr.crosschain.WrapTokenResponse)
}
inline PROTOBUF_NDEBUG_INLINE WrapTokenResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_(arena),
        transaction_id_(arena),
        error_code_(arena),
        _cached_size_{0} {}

inline void WrapTokenResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
WrapTokenResponse::~WrapTokenResponse() {
  // @@protoc_insertion_point(destructor:seigr.crosschain.WrapTokenResponse)
  SharedDtor(*this);
}
inline void WrapTokenResponse::SharedDtor(MessageLite& self) {
  WrapTokenResponse& this_ = static_cast<WrapTokenResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  this_._impl_.transaction_id_.Destroy();
  this_._impl_.error_code_.Destroy();
  this_._impl_.~Impl_();
}

inline void* WrapTokenResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) WrapTokenResponse(arena);
}
constexpr auto WrapTokenResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(WrapTokenResponse),
                                            alignof(WrapTokenResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull WrapTokenResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_WrapTokenResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &WrapTokenResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<WrapTokenResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &WrapTokenResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<WrapTokenResponse>(), &WrapTokenResponse::ByteSizeLong,
            &WrapTokenResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(WrapTokenResponse, _impl_._cached_size_),
        false,
    },
    &WrapTokenResponse::kDescriptorMethods,
    &descriptor_table_cross_5fchain_5foperations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* WrapTokenResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 74, 2> WrapTokenResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::crosschain::WrapTokenResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string error_code = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(WrapTokenResponse, _impl_.error_code_)}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(WrapTokenResponse, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(WrapTokenResponse, _impl_.success_)}},
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(WrapTokenResponse, _impl_.message_)}},
    // string transaction_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(WrapTokenResponse, _impl_.transaction_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(WrapTokenResponse, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(WrapTokenResponse, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string transaction_id = 3;
    {PROTOBUF_FIELD_OFFSET(WrapTokenResponse, _impl_.transaction_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string error_code = 4;
    {PROTOBUF_FIELD_OFFSET(WrapTokenResponse, _impl_.error_code_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\42\0\7\16\12\0\0\0"
    "seigr.crosschain.WrapTokenResponse"
    "message"
    "transaction_id"
    "error_code"
  }},
};

PROTOBUF_NOINLINE void WrapTokenResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.crosschain.WrapTokenResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _impl_.transaction_id_.ClearToEmpty();
  _impl_.error_code_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* WrapTokenResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const WrapTokenResponse& this_ = static_cast<const WrapTokenResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* WrapTokenResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const WrapTokenResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.crosschain.WrapTokenResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool success = 1;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_success(), target);
          }

          // string message = 2;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.WrapTokenResponse.message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string transaction_id = 3;
          if (!this_._internal_transaction_id().empty()) {
            const std::string& _s = this_._internal_transaction_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.WrapTokenResponse.transaction_id");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string error_code = 4;
          if (!this_._internal_error_code().empty()) {
            const std::string& _s = this_._internal_error_code();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.WrapTokenResponse.error_code");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.crosschain.WrapTokenResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t WrapTokenResponse::ByteSizeLong(const MessageLite& base) {
          const WrapTokenResponse& this_ = static_cast<const WrapTokenResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t WrapTokenResponse::ByteSizeLong() const {
          const WrapTokenResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.crosschain.WrapTokenResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string message = 2;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
            // string transaction_id = 3;
            if (!this_._internal_transaction_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_transaction_id());
            }
            // string error_code = 4;
            if (!this_._internal_error_code().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_error_code());
            }
            // bool success = 1;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void WrapTokenResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<WrapTokenResponse*>(&to_msg);
  auto& from = static_cast<const WrapTokenResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.crosschain.WrapTokenResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (!from._internal_transaction_id().empty()) {
    _this->_internal_set_transaction_id(from._internal_transaction_id());
  }
  if (!from._internal_error_code().empty()) {
    _this->_internal_set_error_code(from._internal_error_code());
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WrapTokenResponse::CopyFrom(const WrapTokenResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.crosschain.WrapTokenResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void WrapTokenResponse::InternalSwap(WrapTokenResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.transaction_id_, &other->_impl_.transaction_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_code_, &other->_impl_.error_code_, arena);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata WrapTokenResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              UnwrapTokenRequest_UnwrapMetadataEntry_DoNotUse::UnwrapTokenRequest_UnwrapMetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              UnwrapTokenRequest_UnwrapMetadataEntry_DoNotUse::UnwrapTokenRequest_UnwrapMetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              UnwrapTokenRequest_UnwrapMetadataEntry_DoNotUse::UnwrapTokenRequest_UnwrapMetadataEntry_DoNotUse() : SuperType() {}
              UnwrapTokenRequest_UnwrapMetadataEntry_DoNotUse::UnwrapTokenRequest_UnwrapMetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* UnwrapTokenRequest_UnwrapMetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) UnwrapTokenRequest_UnwrapMetadataEntry_DoNotUse(arena);
              }
              constexpr auto UnwrapTokenRequest_UnwrapMetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(UnwrapTokenRequest_UnwrapMetadataEntry_DoNotUse),
                                                          alignof(UnwrapTokenRequest_UnwrapMetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull UnwrapTokenRequest_UnwrapMetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_UnwrapTokenRequest_UnwrapMetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &UnwrapTokenRequest_UnwrapMetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<UnwrapTokenRequest_UnwrapMetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &UnwrapTokenRequest_UnwrapMetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &UnwrapTokenRequest_UnwrapMetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(UnwrapTokenRequest_UnwrapMetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &UnwrapTokenRequest_UnwrapMetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_cross_5fchain_5foperations_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* UnwrapTokenRequest_UnwrapMetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 72, 2> UnwrapTokenRequest_UnwrapMetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UnwrapTokenRequest_UnwrapMetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::crosschain::UnwrapTokenRequest_UnwrapMetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(UnwrapTokenRequest_UnwrapMetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UnwrapTokenRequest_UnwrapMetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(UnwrapTokenRequest_UnwrapMetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(UnwrapTokenRequest_UnwrapMetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\67\3\5\0\0\0\0\0"
    "seigr.crosschain.UnwrapTokenRequest.UnwrapMetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class UnwrapTokenRequest::_Internal {
 public:
};

UnwrapTokenRequest::UnwrapTokenRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.crosschain.UnwrapTokenRequest)
}
inline PROTOBUF_NDEBUG_INLINE UnwrapTokenRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::crosschain::UnwrapTokenRequest& from_msg)
      : unwrap_metadata_{visibility, arena, from.unwrap_metadata_},
        chain_name_(arena, from.chain_name_),
        destination_chain_(arena, from.destination_chain_),
        destination_wallet_id_(arena, from.destination_wallet_id_),
        _cached_size_{0} {}

UnwrapTokenRequest::UnwrapTokenRequest(
    ::google::protobuf::Arena* arena,
    const UnwrapTokenRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UnwrapTokenRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.amount_ = from._impl_.amount_;

  // @@protoc_insertion_point(copy_constructor:seigr.crosschain.UnwrapTokenRequest)
}
inline PROTOBUF_NDEBUG_INLINE UnwrapTokenRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : unwrap_metadata_{visibility, arena},
        chain_name_(arena),
        destination_chain_(arena),
        destination_wallet_id_(arena),
        _cached_size_{0} {}

inline void UnwrapTokenRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.amount_ = {};
}
UnwrapTokenRequest::~UnwrapTokenRequest() {
  // @@protoc_insertion_point(destructor:seigr.crosschain.UnwrapTokenRequest)
  SharedDtor(*this);
}
inline void UnwrapTokenRequest::SharedDtor(MessageLite& self) {
  UnwrapTokenRequest& this_ = static_cast<UnwrapTokenRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.chain_name_.Destroy();
  this_._impl_.destination_chain_.Destroy();
  this_._impl_.destination_wallet_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* UnwrapTokenRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UnwrapTokenRequest(arena);
}
constexpr auto UnwrapTokenRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(UnwrapTokenRequest, _impl_.unwrap_metadata_) +
          decltype(UnwrapTokenRequest::_impl_.unwrap_metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(UnwrapTokenRequest, _impl_.unwrap_metadata_) +
          decltype(UnwrapTokenRequest::_impl_.unwrap_metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(UnwrapTokenRequest), alignof(UnwrapTokenRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&UnwrapTokenRequest::PlacementNew_,
                                 sizeof(UnwrapTokenRequest),
                                 alignof(UnwrapTokenRequest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UnwrapTokenRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UnwrapTokenRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UnwrapTokenRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UnwrapTokenRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UnwrapTokenRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UnwrapTokenRequest>(), &UnwrapTokenRequest::ByteSizeLong,
            &UnwrapTokenRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UnwrapTokenRequest, _impl_._cached_size_),
        false,
    },
    &UnwrapTokenRequest::kDescriptorMethods,
    &descriptor_table_cross_5fchain_5foperations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UnwrapTokenRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 5, 1, 107, 2> UnwrapTokenRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::crosschain::UnwrapTokenRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string destination_wallet_id = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(UnwrapTokenRequest, _impl_.destination_wallet_id_)}},
    // string chain_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UnwrapTokenRequest, _impl_.chain_name_)}},
    // uint64 amount = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(UnwrapTokenRequest, _impl_.amount_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(UnwrapTokenRequest, _impl_.amount_)}},
    // string destination_chain = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(UnwrapTokenRequest, _impl_.destination_chain_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string chain_name = 1;
    {PROTOBUF_FIELD_OFFSET(UnwrapTokenRequest, _impl_.chain_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 amount = 2;
    {PROTOBUF_FIELD_OFFSET(UnwrapTokenRequest, _impl_.amount_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string destination_chain = 3;
    {PROTOBUF_FIELD_OFFSET(UnwrapTokenRequest, _impl_.destination_chain_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string destination_wallet_id = 4;
    {PROTOBUF_FIELD_OFFSET(UnwrapTokenRequest, _impl_.destination_wallet_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> unwrap_metadata = 5;
    {PROTOBUF_FIELD_OFFSET(UnwrapTokenRequest, _impl_.unwrap_metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(UnwrapTokenRequest()._impl_.unwrap_metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\43\12\0\21\25\17\0\0"
    "seigr.crosschain.UnwrapTokenRequest"
    "chain_name"
    "destination_chain"
    "destination_wallet_id"
    "unwrap_metadata"
  }},
};

PROTOBUF_NOINLINE void UnwrapTokenRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.crosschain.UnwrapTokenRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.unwrap_metadata_.Clear();
  _impl_.chain_name_.ClearToEmpty();
  _impl_.destination_chain_.ClearToEmpty();
  _impl_.destination_wallet_id_.ClearToEmpty();
  _impl_.amount_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UnwrapTokenRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UnwrapTokenRequest& this_ = static_cast<const UnwrapTokenRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UnwrapTokenRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UnwrapTokenRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.crosschain.UnwrapTokenRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string chain_name = 1;
          if (!this_._internal_chain_name().empty()) {
            const std::string& _s = this_._internal_chain_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.UnwrapTokenRequest.chain_name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // uint64 amount = 2;
          if (this_._internal_amount() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_amount(), target);
          }

          // string destination_chain = 3;
          if (!this_._internal_destination_chain().empty()) {
            const std::string& _s = this_._internal_destination_chain();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.UnwrapTokenRequest.destination_chain");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string destination_wallet_id = 4;
          if (!this_._internal_destination_wallet_id().empty()) {
            const std::string& _s = this_._internal_destination_wallet_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.UnwrapTokenRequest.destination_wallet_id");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // map<string, string> unwrap_metadata = 5;
          if (!this_._internal_unwrap_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_unwrap_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    5, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.UnwrapTokenRequest.unwrap_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.UnwrapTokenRequest.unwrap_metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    5, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.UnwrapTokenRequest.unwrap_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.UnwrapTokenRequest.unwrap_metadata");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.crosschain.UnwrapTokenRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UnwrapTokenRequest::ByteSizeLong(const MessageLite& base) {
          const UnwrapTokenRequest& this_ = static_cast<const UnwrapTokenRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UnwrapTokenRequest::ByteSizeLong() const {
          const UnwrapTokenRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.crosschain.UnwrapTokenRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> unwrap_metadata = 5;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_unwrap_metadata_size());
              for (const auto& entry : this_._internal_unwrap_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string chain_name = 1;
            if (!this_._internal_chain_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_chain_name());
            }
            // string destination_chain = 3;
            if (!this_._internal_destination_chain().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_destination_chain());
            }
            // string destination_wallet_id = 4;
            if (!this_._internal_destination_wallet_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_destination_wallet_id());
            }
            // uint64 amount = 2;
            if (this_._internal_amount() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_amount());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UnwrapTokenRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UnwrapTokenRequest*>(&to_msg);
  auto& from = static_cast<const UnwrapTokenRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.crosschain.UnwrapTokenRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.unwrap_metadata_.MergeFrom(from._impl_.unwrap_metadata_);
  if (!from._internal_chain_name().empty()) {
    _this->_internal_set_chain_name(from._internal_chain_name());
  }
  if (!from._internal_destination_chain().empty()) {
    _this->_internal_set_destination_chain(from._internal_destination_chain());
  }
  if (!from._internal_destination_wallet_id().empty()) {
    _this->_internal_set_destination_wallet_id(from._internal_destination_wallet_id());
  }
  if (from._internal_amount() != 0) {
    _this->_impl_.amount_ = from._impl_.amount_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UnwrapTokenRequest::CopyFrom(const UnwrapTokenRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.crosschain.UnwrapTokenRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UnwrapTokenRequest::InternalSwap(UnwrapTokenRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.unwrap_metadata_.InternalSwap(&other->_impl_.unwrap_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.chain_name_, &other->_impl_.chain_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.destination_chain_, &other->_impl_.destination_chain_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.destination_wallet_id_, &other->_impl_.destination_wallet_id_, arena);
        swap(_impl_.amount_, other->_impl_.amount_);
}

::google::protobuf::Metadata UnwrapTokenRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UnwrapTokenResponse::_Internal {
 public:
};

UnwrapTokenResponse::UnwrapTokenResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.crosschain.UnwrapTokenResponse)
}
inline PROTOBUF_NDEBUG_INLINE UnwrapTokenResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::crosschain::UnwrapTokenResponse& from_msg)
      : message_(arena, from.message_),
        transaction_id_(arena, from.transaction_id_),
        error_code_(arena, from.error_code_),
        _cached_size_{0} {}

UnwrapTokenResponse::UnwrapTokenResponse(
    ::google::protobuf::Arena* arena,
    const UnwrapTokenResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UnwrapTokenResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:seigr.crosschain.UnwrapTokenResponse)
}
inline PROTOBUF_NDEBUG_INLINE UnwrapTokenResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_(arena),
        transaction_id_(arena),
        error_code_(arena),
        _cached_size_{0} {}

inline void UnwrapTokenResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
UnwrapTokenResponse::~UnwrapTokenResponse() {
  // @@protoc_insertion_point(destructor:seigr.crosschain.UnwrapTokenResponse)
  SharedDtor(*this);
}
inline void UnwrapTokenResponse::SharedDtor(MessageLite& self) {
  UnwrapTokenResponse& this_ = static_cast<UnwrapTokenResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  this_._impl_.transaction_id_.Destroy();
  this_._impl_.error_code_.Destroy();
  this_._impl_.~Impl_();
}

inline void* UnwrapTokenResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UnwrapTokenResponse(arena);
}
constexpr auto UnwrapTokenResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(UnwrapTokenResponse),
                                            alignof(UnwrapTokenResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UnwrapTokenResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UnwrapTokenResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UnwrapTokenResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UnwrapTokenResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UnwrapTokenResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UnwrapTokenResponse>(), &UnwrapTokenResponse::ByteSizeLong,
            &UnwrapTokenResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UnwrapTokenResponse, _impl_._cached_size_),
        false,
    },
    &UnwrapTokenResponse::kDescriptorMethods,
    &descriptor_table_cross_5fchain_5foperations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UnwrapTokenResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 76, 2> UnwrapTokenResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::crosschain::UnwrapTokenResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string error_code = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(UnwrapTokenResponse, _impl_.error_code_)}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(UnwrapTokenResponse, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(UnwrapTokenResponse, _impl_.success_)}},
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(UnwrapTokenResponse, _impl_.message_)}},
    // string transaction_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(UnwrapTokenResponse, _impl_.transaction_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(UnwrapTokenResponse, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(UnwrapTokenResponse, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string transaction_id = 3;
    {PROTOBUF_FIELD_OFFSET(UnwrapTokenResponse, _impl_.transaction_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string error_code = 4;
    {PROTOBUF_FIELD_OFFSET(UnwrapTokenResponse, _impl_.error_code_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\44\0\7\16\12\0\0\0"
    "seigr.crosschain.UnwrapTokenResponse"
    "message"
    "transaction_id"
    "error_code"
  }},
};

PROTOBUF_NOINLINE void UnwrapTokenResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.crosschain.UnwrapTokenResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _impl_.transaction_id_.ClearToEmpty();
  _impl_.error_code_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UnwrapTokenResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UnwrapTokenResponse& this_ = static_cast<const UnwrapTokenResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UnwrapTokenResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UnwrapTokenResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.crosschain.UnwrapTokenResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool success = 1;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_success(), target);
          }

          // string message = 2;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.UnwrapTokenResponse.message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string transaction_id = 3;
          if (!this_._internal_transaction_id().empty()) {
            const std::string& _s = this_._internal_transaction_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.UnwrapTokenResponse.transaction_id");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string error_code = 4;
          if (!this_._internal_error_code().empty()) {
            const std::string& _s = this_._internal_error_code();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.UnwrapTokenResponse.error_code");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.crosschain.UnwrapTokenResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UnwrapTokenResponse::ByteSizeLong(const MessageLite& base) {
          const UnwrapTokenResponse& this_ = static_cast<const UnwrapTokenResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UnwrapTokenResponse::ByteSizeLong() const {
          const UnwrapTokenResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.crosschain.UnwrapTokenResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string message = 2;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
            // string transaction_id = 3;
            if (!this_._internal_transaction_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_transaction_id());
            }
            // string error_code = 4;
            if (!this_._internal_error_code().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_error_code());
            }
            // bool success = 1;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UnwrapTokenResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UnwrapTokenResponse*>(&to_msg);
  auto& from = static_cast<const UnwrapTokenResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.crosschain.UnwrapTokenResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (!from._internal_transaction_id().empty()) {
    _this->_internal_set_transaction_id(from._internal_transaction_id());
  }
  if (!from._internal_error_code().empty()) {
    _this->_internal_set_error_code(from._internal_error_code());
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UnwrapTokenResponse::CopyFrom(const UnwrapTokenResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.crosschain.UnwrapTokenResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UnwrapTokenResponse::InternalSwap(UnwrapTokenResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.transaction_id_, &other->_impl_.transaction_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_code_, &other->_impl_.error_code_, arena);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata UnwrapTokenResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              SyncGovernanceRequest_SyncMetadataEntry_DoNotUse::SyncGovernanceRequest_SyncMetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              SyncGovernanceRequest_SyncMetadataEntry_DoNotUse::SyncGovernanceRequest_SyncMetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              SyncGovernanceRequest_SyncMetadataEntry_DoNotUse::SyncGovernanceRequest_SyncMetadataEntry_DoNotUse() : SuperType() {}
              SyncGovernanceRequest_SyncMetadataEntry_DoNotUse::SyncGovernanceRequest_SyncMetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* SyncGovernanceRequest_SyncMetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) SyncGovernanceRequest_SyncMetadataEntry_DoNotUse(arena);
              }
              constexpr auto SyncGovernanceRequest_SyncMetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SyncGovernanceRequest_SyncMetadataEntry_DoNotUse),
                                                          alignof(SyncGovernanceRequest_SyncMetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull SyncGovernanceRequest_SyncMetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_SyncGovernanceRequest_SyncMetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &SyncGovernanceRequest_SyncMetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<SyncGovernanceRequest_SyncMetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &SyncGovernanceRequest_SyncMetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &SyncGovernanceRequest_SyncMetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(SyncGovernanceRequest_SyncMetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &SyncGovernanceRequest_SyncMetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_cross_5fchain_5foperations_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* SyncGovernanceRequest_SyncMetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 73, 2> SyncGovernanceRequest_SyncMetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SyncGovernanceRequest_SyncMetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::crosschain::SyncGovernanceRequest_SyncMetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SyncGovernanceRequest_SyncMetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SyncGovernanceRequest_SyncMetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(SyncGovernanceRequest_SyncMetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(SyncGovernanceRequest_SyncMetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\70\3\5\0\0\0\0\0"
    "seigr.crosschain.SyncGovernanceRequest.SyncMetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class SyncGovernanceRequest::_Internal {
 public:
};

SyncGovernanceRequest::SyncGovernanceRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.crosschain.SyncGovernanceRequest)
}
inline PROTOBUF_NDEBUG_INLINE SyncGovernanceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::crosschain::SyncGovernanceRequest& from_msg)
      : sync_metadata_{visibility, arena, from.sync_metadata_},
        chain_name_(arena, from.chain_name_),
        _cached_size_{0} {}

SyncGovernanceRequest::SyncGovernanceRequest(
    ::google::protobuf::Arena* arena,
    const SyncGovernanceRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SyncGovernanceRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:seigr.crosschain.SyncGovernanceRequest)
}
inline PROTOBUF_NDEBUG_INLINE SyncGovernanceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : sync_metadata_{visibility, arena},
        chain_name_(arena),
        _cached_size_{0} {}

inline void SyncGovernanceRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SyncGovernanceRequest::~SyncGovernanceRequest() {
  // @@protoc_insertion_point(destructor:seigr.crosschain.SyncGovernanceRequest)
  SharedDtor(*this);
}
inline void SyncGovernanceRequest::SharedDtor(MessageLite& self) {
  SyncGovernanceRequest& this_ = static_cast<SyncGovernanceRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.chain_name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* SyncGovernanceRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SyncGovernanceRequest(arena);
}
constexpr auto SyncGovernanceRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SyncGovernanceRequest, _impl_.sync_metadata_) +
          decltype(SyncGovernanceRequest::_impl_.sync_metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SyncGovernanceRequest, _impl_.sync_metadata_) +
          decltype(SyncGovernanceRequest::_impl_.sync_metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(SyncGovernanceRequest), alignof(SyncGovernanceRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SyncGovernanceRequest::PlacementNew_,
                                 sizeof(SyncGovernanceRequest),
                                 alignof(SyncGovernanceRequest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SyncGovernanceRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SyncGovernanceRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SyncGovernanceRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SyncGovernanceRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SyncGovernanceRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SyncGovernanceRequest>(), &SyncGovernanceRequest::ByteSizeLong,
            &SyncGovernanceRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SyncGovernanceRequest, _impl_._cached_size_),
        false,
    },
    &SyncGovernanceRequest::kDescriptorMethods,
    &descriptor_table_cross_5fchain_5foperations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SyncGovernanceRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 1, 70, 2> SyncGovernanceRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::crosschain::SyncGovernanceRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string chain_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SyncGovernanceRequest, _impl_.chain_name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string chain_name = 1;
    {PROTOBUF_FIELD_OFFSET(SyncGovernanceRequest, _impl_.chain_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> sync_metadata = 2;
    {PROTOBUF_FIELD_OFFSET(SyncGovernanceRequest, _impl_.sync_metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(SyncGovernanceRequest()._impl_.sync_metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\46\12\15\0\0\0\0\0"
    "seigr.crosschain.SyncGovernanceRequest"
    "chain_name"
    "sync_metadata"
  }},
};

PROTOBUF_NOINLINE void SyncGovernanceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.crosschain.SyncGovernanceRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sync_metadata_.Clear();
  _impl_.chain_name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SyncGovernanceRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SyncGovernanceRequest& this_ = static_cast<const SyncGovernanceRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SyncGovernanceRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SyncGovernanceRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.crosschain.SyncGovernanceRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string chain_name = 1;
          if (!this_._internal_chain_name().empty()) {
            const std::string& _s = this_._internal_chain_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.SyncGovernanceRequest.chain_name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // map<string, string> sync_metadata = 2;
          if (!this_._internal_sync_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_sync_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    2, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.SyncGovernanceRequest.sync_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.SyncGovernanceRequest.sync_metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    2, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.SyncGovernanceRequest.sync_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.SyncGovernanceRequest.sync_metadata");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.crosschain.SyncGovernanceRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SyncGovernanceRequest::ByteSizeLong(const MessageLite& base) {
          const SyncGovernanceRequest& this_ = static_cast<const SyncGovernanceRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SyncGovernanceRequest::ByteSizeLong() const {
          const SyncGovernanceRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.crosschain.SyncGovernanceRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> sync_metadata = 2;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_sync_metadata_size());
              for (const auto& entry : this_._internal_sync_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string chain_name = 1;
            if (!this_._internal_chain_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_chain_name());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SyncGovernanceRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SyncGovernanceRequest*>(&to_msg);
  auto& from = static_cast<const SyncGovernanceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.crosschain.SyncGovernanceRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.sync_metadata_.MergeFrom(from._impl_.sync_metadata_);
  if (!from._internal_chain_name().empty()) {
    _this->_internal_set_chain_name(from._internal_chain_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SyncGovernanceRequest::CopyFrom(const SyncGovernanceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.crosschain.SyncGovernanceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SyncGovernanceRequest::InternalSwap(SyncGovernanceRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.sync_metadata_.InternalSwap(&other->_impl_.sync_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.chain_name_, &other->_impl_.chain_name_, arena);
}

::google::protobuf::Metadata SyncGovernanceRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SyncGovernanceResponse::_Internal {
 public:
};

SyncGovernanceResponse::SyncGovernanceResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.crosschain.SyncGovernanceResponse)
}
inline PROTOBUF_NDEBUG_INLINE SyncGovernanceResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::crosschain::SyncGovernanceResponse& from_msg)
      : message_(arena, from.message_),
        transaction_id_(arena, from.transaction_id_),
        error_code_(arena, from.error_code_),
        _cached_size_{0} {}

SyncGovernanceResponse::SyncGovernanceResponse(
    ::google::protobuf::Arena* arena,
    const SyncGovernanceResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SyncGovernanceResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:seigr.crosschain.SyncGovernanceResponse)
}
inline PROTOBUF_NDEBUG_INLINE SyncGovernanceResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_(arena),
        transaction_id_(arena),
        error_code_(arena),
        _cached_size_{0} {}

inline void SyncGovernanceResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
SyncGovernanceResponse::~SyncGovernanceResponse() {
  // @@protoc_insertion_point(destructor:seigr.crosschain.SyncGovernanceResponse)
  SharedDtor(*this);
}
inline void SyncGovernanceResponse::SharedDtor(MessageLite& self) {
  SyncGovernanceResponse& this_ = static_cast<SyncGovernanceResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  this_._impl_.transaction_id_.Destroy();
  this_._impl_.error_code_.Destroy();
  this_._impl_.~Impl_();
}

inline void* SyncGovernanceResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SyncGovernanceResponse(arena);
}
constexpr auto SyncGovernanceResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SyncGovernanceResponse),
                                            alignof(SyncGovernanceResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SyncGovernanceResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SyncGovernanceResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SyncGovernanceResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SyncGovernanceResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SyncGovernanceResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SyncGovernanceResponse>(), &SyncGovernanceResponse::ByteSizeLong,
            &SyncGovernanceResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SyncGovernanceResponse, _impl_._cached_size_),
        false,
    },
    &SyncGovernanceResponse::kDescriptorMethods,
    &descriptor_table_cross_5fchain_5foperations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SyncGovernanceResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 79, 2> SyncGovernanceResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::crosschain::SyncGovernanceResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string error_code = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(SyncGovernanceResponse, _impl_.error_code_)}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SyncGovernanceResponse, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SyncGovernanceResponse, _impl_.success_)}},
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SyncGovernanceResponse, _impl_.message_)}},
    // string transaction_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(SyncGovernanceResponse, _impl_.transaction_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(SyncGovernanceResponse, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(SyncGovernanceResponse, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string transaction_id = 3;
    {PROTOBUF_FIELD_OFFSET(SyncGovernanceResponse, _impl_.transaction_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string error_code = 4;
    {PROTOBUF_FIELD_OFFSET(SyncGovernanceResponse, _impl_.error_code_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\47\0\7\16\12\0\0\0"
    "seigr.crosschain.SyncGovernanceResponse"
    "message"
    "transaction_id"
    "error_code"
  }},
};

PROTOBUF_NOINLINE void SyncGovernanceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.crosschain.SyncGovernanceResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _impl_.transaction_id_.ClearToEmpty();
  _impl_.error_code_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SyncGovernanceResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SyncGovernanceResponse& this_ = static_cast<const SyncGovernanceResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SyncGovernanceResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SyncGovernanceResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.crosschain.SyncGovernanceResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool success = 1;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_success(), target);
          }

          // string message = 2;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.SyncGovernanceResponse.message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string transaction_id = 3;
          if (!this_._internal_transaction_id().empty()) {
            const std::string& _s = this_._internal_transaction_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.SyncGovernanceResponse.transaction_id");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string error_code = 4;
          if (!this_._internal_error_code().empty()) {
            const std::string& _s = this_._internal_error_code();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.SyncGovernanceResponse.error_code");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.crosschain.SyncGovernanceResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SyncGovernanceResponse::ByteSizeLong(const MessageLite& base) {
          const SyncGovernanceResponse& this_ = static_cast<const SyncGovernanceResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SyncGovernanceResponse::ByteSizeLong() const {
          const SyncGovernanceResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.crosschain.SyncGovernanceResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string message = 2;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
            // string transaction_id = 3;
            if (!this_._internal_transaction_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_transaction_id());
            }
            // string error_code = 4;
            if (!this_._internal_error_code().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_error_code());
            }
            // bool success = 1;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SyncGovernanceResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SyncGovernanceResponse*>(&to_msg);
  auto& from = static_cast<const SyncGovernanceResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.crosschain.SyncGovernanceResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (!from._internal_transaction_id().empty()) {
    _this->_internal_set_transaction_id(from._internal_transaction_id());
  }
  if (!from._internal_error_code().empty()) {
    _this->_internal_set_error_code(from._internal_error_code());
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SyncGovernanceResponse::CopyFrom(const SyncGovernanceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.crosschain.SyncGovernanceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SyncGovernanceResponse::InternalSwap(SyncGovernanceResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.transaction_id_, &other->_impl_.transaction_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_code_, &other->_impl_.error_code_, arena);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata SyncGovernanceResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetCrossChainTransactionHistoryRequest::_Internal {
 public:
};

GetCrossChainTransactionHistoryRequest::GetCrossChainTransactionHistoryRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.crosschain.GetCrossChainTransactionHistoryRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetCrossChainTransactionHistoryRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::crosschain::GetCrossChainTransactionHistoryRequest& from_msg)
      : filter_types_{visibility, arena, from.filter_types_},
        _filter_types_cached_byte_size_{0},
        chain_name_(arena, from.chain_name_),
        date_range_start_(arena, from.date_range_start_),
        date_range_end_(arena, from.date_range_end_),
        _cached_size_{0} {}

GetCrossChainTransactionHistoryRequest::GetCrossChainTransactionHistoryRequest(
    ::google::protobuf::Arena* arena,
    const GetCrossChainTransactionHistoryRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetCrossChainTransactionHistoryRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.limit_ = from._impl_.limit_;

  // @@protoc_insertion_point(copy_constructor:seigr.crosschain.GetCrossChainTransactionHistoryRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetCrossChainTransactionHistoryRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : filter_types_{visibility, arena},
        _filter_types_cached_byte_size_{0},
        chain_name_(arena),
        date_range_start_(arena),
        date_range_end_(arena),
        _cached_size_{0} {}

inline void GetCrossChainTransactionHistoryRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.limit_ = {};
}
GetCrossChainTransactionHistoryRequest::~GetCrossChainTransactionHistoryRequest() {
  // @@protoc_insertion_point(destructor:seigr.crosschain.GetCrossChainTransactionHistoryRequest)
  SharedDtor(*this);
}
inline void GetCrossChainTransactionHistoryRequest::SharedDtor(MessageLite& self) {
  GetCrossChainTransactionHistoryRequest& this_ = static_cast<GetCrossChainTransactionHistoryRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.chain_name_.Destroy();
  this_._impl_.date_range_start_.Destroy();
  this_._impl_.date_range_end_.Destroy();
  this_._impl_.~Impl_();
}

inline void* GetCrossChainTransactionHistoryRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetCrossChainTransactionHistoryRequest(arena);
}
constexpr auto GetCrossChainTransactionHistoryRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GetCrossChainTransactionHistoryRequest, _impl_.filter_types_) +
          decltype(GetCrossChainTransactionHistoryRequest::_impl_.filter_types_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(GetCrossChainTransactionHistoryRequest), alignof(GetCrossChainTransactionHistoryRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GetCrossChainTransactionHistoryRequest::PlacementNew_,
                                 sizeof(GetCrossChainTransactionHistoryRequest),
                                 alignof(GetCrossChainTransactionHistoryRequest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetCrossChainTransactionHistoryRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetCrossChainTransactionHistoryRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetCrossChainTransactionHistoryRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetCrossChainTransactionHistoryRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetCrossChainTransactionHistoryRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetCrossChainTransactionHistoryRequest>(), &GetCrossChainTransactionHistoryRequest::ByteSizeLong,
            &GetCrossChainTransactionHistoryRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetCrossChainTransactionHistoryRequest, _impl_._cached_size_),
        false,
    },
    &GetCrossChainTransactionHistoryRequest::kDescriptorMethods,
    &descriptor_table_cross_5fchain_5foperations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetCrossChainTransactionHistoryRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 104, 2> GetCrossChainTransactionHistoryRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::crosschain::GetCrossChainTransactionHistoryRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string chain_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetCrossChainTransactionHistoryRequest, _impl_.chain_name_)}},
    // uint32 limit = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetCrossChainTransactionHistoryRequest, _impl_.limit_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GetCrossChainTransactionHistoryRequest, _impl_.limit_)}},
    // repeated .seigr.crosschain.TransactionType filter_types = 3;
    {::_pbi::TcParser::FastV32P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(GetCrossChainTransactionHistoryRequest, _impl_.filter_types_)}},
    // string date_range_start = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(GetCrossChainTransactionHistoryRequest, _impl_.date_range_start_)}},
    // string date_range_end = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(GetCrossChainTransactionHistoryRequest, _impl_.date_range_end_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string chain_name = 1;
    {PROTOBUF_FIELD_OFFSET(GetCrossChainTransactionHistoryRequest, _impl_.chain_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 limit = 2;
    {PROTOBUF_FIELD_OFFSET(GetCrossChainTransactionHistoryRequest, _impl_.limit_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated .seigr.crosschain.TransactionType filter_types = 3;
    {PROTOBUF_FIELD_OFFSET(GetCrossChainTransactionHistoryRequest, _impl_.filter_types_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // string date_range_start = 4;
    {PROTOBUF_FIELD_OFFSET(GetCrossChainTransactionHistoryRequest, _impl_.date_range_start_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string date_range_end = 5;
    {PROTOBUF_FIELD_OFFSET(GetCrossChainTransactionHistoryRequest, _impl_.date_range_end_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\67\12\0\0\20\16\0\0"
    "seigr.crosschain.GetCrossChainTransactionHistoryRequest"
    "chain_name"
    "date_range_start"
    "date_range_end"
  }},
};

PROTOBUF_NOINLINE void GetCrossChainTransactionHistoryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.crosschain.GetCrossChainTransactionHistoryRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.filter_types_.Clear();
  _impl_.chain_name_.ClearToEmpty();
  _impl_.date_range_start_.ClearToEmpty();
  _impl_.date_range_end_.ClearToEmpty();
  _impl_.limit_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetCrossChainTransactionHistoryRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetCrossChainTransactionHistoryRequest& this_ = static_cast<const GetCrossChainTransactionHistoryRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetCrossChainTransactionHistoryRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetCrossChainTransactionHistoryRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.crosschain.GetCrossChainTransactionHistoryRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string chain_name = 1;
          if (!this_._internal_chain_name().empty()) {
            const std::string& _s = this_._internal_chain_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.GetCrossChainTransactionHistoryRequest.chain_name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // uint32 limit = 2;
          if (this_._internal_limit() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_limit(), target);
          }

          // repeated .seigr.crosschain.TransactionType filter_types = 3;
          {
            std::size_t byte_size =
                                              this_._impl_._filter_types_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteEnumPacked(
                  3, this_._internal_filter_types(), byte_size, target);
            }
          }

          // string date_range_start = 4;
          if (!this_._internal_date_range_start().empty()) {
            const std::string& _s = this_._internal_date_range_start();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.GetCrossChainTransactionHistoryRequest.date_range_start");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string date_range_end = 5;
          if (!this_._internal_date_range_end().empty()) {
            const std::string& _s = this_._internal_date_range_end();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.GetCrossChainTransactionHistoryRequest.date_range_end");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.crosschain.GetCrossChainTransactionHistoryRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetCrossChainTransactionHistoryRequest::ByteSizeLong(const MessageLite& base) {
          const GetCrossChainTransactionHistoryRequest& this_ = static_cast<const GetCrossChainTransactionHistoryRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetCrossChainTransactionHistoryRequest::ByteSizeLong() const {
          const GetCrossChainTransactionHistoryRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.crosschain.GetCrossChainTransactionHistoryRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .seigr.crosschain.TransactionType filter_types = 3;
            {
              total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
                  this_._internal_filter_types(), 1, this_._impl_._filter_types_cached_byte_size_);
            }
          }
           {
            // string chain_name = 1;
            if (!this_._internal_chain_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_chain_name());
            }
            // string date_range_start = 4;
            if (!this_._internal_date_range_start().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_date_range_start());
            }
            // string date_range_end = 5;
            if (!this_._internal_date_range_end().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_date_range_end());
            }
            // uint32 limit = 2;
            if (this_._internal_limit() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_limit());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetCrossChainTransactionHistoryRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetCrossChainTransactionHistoryRequest*>(&to_msg);
  auto& from = static_cast<const GetCrossChainTransactionHistoryRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.crosschain.GetCrossChainTransactionHistoryRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_filter_types()->MergeFrom(from._internal_filter_types());
  if (!from._internal_chain_name().empty()) {
    _this->_internal_set_chain_name(from._internal_chain_name());
  }
  if (!from._internal_date_range_start().empty()) {
    _this->_internal_set_date_range_start(from._internal_date_range_start());
  }
  if (!from._internal_date_range_end().empty()) {
    _this->_internal_set_date_range_end(from._internal_date_range_end());
  }
  if (from._internal_limit() != 0) {
    _this->_impl_.limit_ = from._impl_.limit_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetCrossChainTransactionHistoryRequest::CopyFrom(const GetCrossChainTransactionHistoryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.crosschain.GetCrossChainTransactionHistoryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetCrossChainTransactionHistoryRequest::InternalSwap(GetCrossChainTransactionHistoryRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.filter_types_.InternalSwap(&other->_impl_.filter_types_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.chain_name_, &other->_impl_.chain_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.date_range_start_, &other->_impl_.date_range_start_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.date_range_end_, &other->_impl_.date_range_end_, arena);
        swap(_impl_.limit_, other->_impl_.limit_);
}

::google::protobuf::Metadata GetCrossChainTransactionHistoryRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetCrossChainTransactionHistoryResponse::_Internal {
 public:
};

GetCrossChainTransactionHistoryResponse::GetCrossChainTransactionHistoryResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.crosschain.GetCrossChainTransactionHistoryResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetCrossChainTransactionHistoryResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::crosschain::GetCrossChainTransactionHistoryResponse& from_msg)
      : transactions_{visibility, arena, from.transactions_},
        chain_name_(arena, from.chain_name_),
        _cached_size_{0} {}

GetCrossChainTransactionHistoryResponse::GetCrossChainTransactionHistoryResponse(
    ::google::protobuf::Arena* arena,
    const GetCrossChainTransactionHistoryResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetCrossChainTransactionHistoryResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:seigr.crosschain.GetCrossChainTransactionHistoryResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetCrossChainTransactionHistoryResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : transactions_{visibility, arena},
        chain_name_(arena),
        _cached_size_{0} {}

inline void GetCrossChainTransactionHistoryResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetCrossChainTransactionHistoryResponse::~GetCrossChainTransactionHistoryResponse() {
  // @@protoc_insertion_point(destructor:seigr.crosschain.GetCrossChainTransactionHistoryResponse)
  SharedDtor(*this);
}
inline void GetCrossChainTransactionHistoryResponse::SharedDtor(MessageLite& self) {
  GetCrossChainTransactionHistoryResponse& this_ = static_cast<GetCrossChainTransactionHistoryResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.chain_name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* GetCrossChainTransactionHistoryResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetCrossChainTransactionHistoryResponse(arena);
}
constexpr auto GetCrossChainTransactionHistoryResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GetCrossChainTransactionHistoryResponse, _impl_.transactions_) +
          decltype(GetCrossChainTransactionHistoryResponse::_impl_.transactions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(GetCrossChainTransactionHistoryResponse), alignof(GetCrossChainTransactionHistoryResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GetCrossChainTransactionHistoryResponse::PlacementNew_,
                                 sizeof(GetCrossChainTransactionHistoryResponse),
                                 alignof(GetCrossChainTransactionHistoryResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetCrossChainTransactionHistoryResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetCrossChainTransactionHistoryResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetCrossChainTransactionHistoryResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetCrossChainTransactionHistoryResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetCrossChainTransactionHistoryResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetCrossChainTransactionHistoryResponse>(), &GetCrossChainTransactionHistoryResponse::ByteSizeLong,
            &GetCrossChainTransactionHistoryResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetCrossChainTransactionHistoryResponse, _impl_._cached_size_),
        false,
    },
    &GetCrossChainTransactionHistoryResponse::kDescriptorMethods,
    &descriptor_table_cross_5fchain_5foperations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetCrossChainTransactionHistoryResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 75, 2> GetCrossChainTransactionHistoryResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::crosschain::GetCrossChainTransactionHistoryResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .seigr.crosschain.CrossChainTransaction transactions = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GetCrossChainTransactionHistoryResponse, _impl_.transactions_)}},
    // string chain_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetCrossChainTransactionHistoryResponse, _impl_.chain_name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string chain_name = 1;
    {PROTOBUF_FIELD_OFFSET(GetCrossChainTransactionHistoryResponse, _impl_.chain_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .seigr.crosschain.CrossChainTransaction transactions = 2;
    {PROTOBUF_FIELD_OFFSET(GetCrossChainTransactionHistoryResponse, _impl_.transactions_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::seigr::crosschain::CrossChainTransaction>()},
  }}, {{
    "\70\12\0\0\0\0\0\0"
    "seigr.crosschain.GetCrossChainTransactionHistoryResponse"
    "chain_name"
  }},
};

PROTOBUF_NOINLINE void GetCrossChainTransactionHistoryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.crosschain.GetCrossChainTransactionHistoryResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.transactions_.Clear();
  _impl_.chain_name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetCrossChainTransactionHistoryResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetCrossChainTransactionHistoryResponse& this_ = static_cast<const GetCrossChainTransactionHistoryResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetCrossChainTransactionHistoryResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetCrossChainTransactionHistoryResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.crosschain.GetCrossChainTransactionHistoryResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string chain_name = 1;
          if (!this_._internal_chain_name().empty()) {
            const std::string& _s = this_._internal_chain_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.GetCrossChainTransactionHistoryResponse.chain_name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated .seigr.crosschain.CrossChainTransaction transactions = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_transactions_size());
               i < n; i++) {
            const auto& repfield = this_._internal_transactions().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.crosschain.GetCrossChainTransactionHistoryResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetCrossChainTransactionHistoryResponse::ByteSizeLong(const MessageLite& base) {
          const GetCrossChainTransactionHistoryResponse& this_ = static_cast<const GetCrossChainTransactionHistoryResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetCrossChainTransactionHistoryResponse::ByteSizeLong() const {
          const GetCrossChainTransactionHistoryResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.crosschain.GetCrossChainTransactionHistoryResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .seigr.crosschain.CrossChainTransaction transactions = 2;
            {
              total_size += 1UL * this_._internal_transactions_size();
              for (const auto& msg : this_._internal_transactions()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string chain_name = 1;
            if (!this_._internal_chain_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_chain_name());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetCrossChainTransactionHistoryResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetCrossChainTransactionHistoryResponse*>(&to_msg);
  auto& from = static_cast<const GetCrossChainTransactionHistoryResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.crosschain.GetCrossChainTransactionHistoryResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_transactions()->MergeFrom(
      from._internal_transactions());
  if (!from._internal_chain_name().empty()) {
    _this->_internal_set_chain_name(from._internal_chain_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetCrossChainTransactionHistoryResponse::CopyFrom(const GetCrossChainTransactionHistoryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.crosschain.GetCrossChainTransactionHistoryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetCrossChainTransactionHistoryResponse::InternalSwap(GetCrossChainTransactionHistoryResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.transactions_.InternalSwap(&other->_impl_.transactions_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.chain_name_, &other->_impl_.chain_name_, arena);
}

::google::protobuf::Metadata GetCrossChainTransactionHistoryResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              UpdateCrossChainStatusRequest_UpdateMetadataEntry_DoNotUse::UpdateCrossChainStatusRequest_UpdateMetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              UpdateCrossChainStatusRequest_UpdateMetadataEntry_DoNotUse::UpdateCrossChainStatusRequest_UpdateMetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              UpdateCrossChainStatusRequest_UpdateMetadataEntry_DoNotUse::UpdateCrossChainStatusRequest_UpdateMetadataEntry_DoNotUse() : SuperType() {}
              UpdateCrossChainStatusRequest_UpdateMetadataEntry_DoNotUse::UpdateCrossChainStatusRequest_UpdateMetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* UpdateCrossChainStatusRequest_UpdateMetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) UpdateCrossChainStatusRequest_UpdateMetadataEntry_DoNotUse(arena);
              }
              constexpr auto UpdateCrossChainStatusRequest_UpdateMetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(UpdateCrossChainStatusRequest_UpdateMetadataEntry_DoNotUse),
                                                          alignof(UpdateCrossChainStatusRequest_UpdateMetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull UpdateCrossChainStatusRequest_UpdateMetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_UpdateCrossChainStatusRequest_UpdateMetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &UpdateCrossChainStatusRequest_UpdateMetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<UpdateCrossChainStatusRequest_UpdateMetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &UpdateCrossChainStatusRequest_UpdateMetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &UpdateCrossChainStatusRequest_UpdateMetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(UpdateCrossChainStatusRequest_UpdateMetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &UpdateCrossChainStatusRequest_UpdateMetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_cross_5fchain_5foperations_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* UpdateCrossChainStatusRequest_UpdateMetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 83, 2> UpdateCrossChainStatusRequest_UpdateMetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateCrossChainStatusRequest_UpdateMetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::crosschain::UpdateCrossChainStatusRequest_UpdateMetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateCrossChainStatusRequest_UpdateMetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateCrossChainStatusRequest_UpdateMetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(UpdateCrossChainStatusRequest_UpdateMetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(UpdateCrossChainStatusRequest_UpdateMetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\102\3\5\0\0\0\0\0"
    "seigr.crosschain.UpdateCrossChainStatusRequest.UpdateMetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class UpdateCrossChainStatusRequest::_Internal {
 public:
};

UpdateCrossChainStatusRequest::UpdateCrossChainStatusRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.crosschain.UpdateCrossChainStatusRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateCrossChainStatusRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::crosschain::UpdateCrossChainStatusRequest& from_msg)
      : update_metadata_{visibility, arena, from.update_metadata_},
        chain_name_(arena, from.chain_name_),
        status_reason_(arena, from.status_reason_),
        _cached_size_{0} {}

UpdateCrossChainStatusRequest::UpdateCrossChainStatusRequest(
    ::google::protobuf::Arena* arena,
    const UpdateCrossChainStatusRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateCrossChainStatusRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, new_status_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, new_status_),
           offsetof(Impl_, retry_count_) -
               offsetof(Impl_, new_status_) +
               sizeof(Impl_::retry_count_));

  // @@protoc_insertion_point(copy_constructor:seigr.crosschain.UpdateCrossChainStatusRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateCrossChainStatusRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : update_metadata_{visibility, arena},
        chain_name_(arena),
        status_reason_(arena),
        _cached_size_{0} {}

inline void UpdateCrossChainStatusRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, new_status_),
           0,
           offsetof(Impl_, retry_count_) -
               offsetof(Impl_, new_status_) +
               sizeof(Impl_::retry_count_));
}
UpdateCrossChainStatusRequest::~UpdateCrossChainStatusRequest() {
  // @@protoc_insertion_point(destructor:seigr.crosschain.UpdateCrossChainStatusRequest)
  SharedDtor(*this);
}
inline void UpdateCrossChainStatusRequest::SharedDtor(MessageLite& self) {
  UpdateCrossChainStatusRequest& this_ = static_cast<UpdateCrossChainStatusRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.chain_name_.Destroy();
  this_._impl_.status_reason_.Destroy();
  this_._impl_.~Impl_();
}

inline void* UpdateCrossChainStatusRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UpdateCrossChainStatusRequest(arena);
}
constexpr auto UpdateCrossChainStatusRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(UpdateCrossChainStatusRequest, _impl_.update_metadata_) +
          decltype(UpdateCrossChainStatusRequest::_impl_.update_metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(UpdateCrossChainStatusRequest, _impl_.update_metadata_) +
          decltype(UpdateCrossChainStatusRequest::_impl_.update_metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(UpdateCrossChainStatusRequest), alignof(UpdateCrossChainStatusRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&UpdateCrossChainStatusRequest::PlacementNew_,
                                 sizeof(UpdateCrossChainStatusRequest),
                                 alignof(UpdateCrossChainStatusRequest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UpdateCrossChainStatusRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UpdateCrossChainStatusRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UpdateCrossChainStatusRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UpdateCrossChainStatusRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UpdateCrossChainStatusRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UpdateCrossChainStatusRequest>(), &UpdateCrossChainStatusRequest::ByteSizeLong,
            &UpdateCrossChainStatusRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UpdateCrossChainStatusRequest, _impl_._cached_size_),
        false,
    },
    &UpdateCrossChainStatusRequest::kDescriptorMethods,
    &descriptor_table_cross_5fchain_5foperations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UpdateCrossChainStatusRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 5, 1, 93, 2> UpdateCrossChainStatusRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::crosschain::UpdateCrossChainStatusRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 retry_count = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UpdateCrossChainStatusRequest, _impl_.retry_count_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateCrossChainStatusRequest, _impl_.retry_count_)}},
    // string chain_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateCrossChainStatusRequest, _impl_.chain_name_)}},
    // .seigr.crosschain.CrossChainStatus new_status = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UpdateCrossChainStatusRequest, _impl_.new_status_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateCrossChainStatusRequest, _impl_.new_status_)}},
    // string status_reason = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateCrossChainStatusRequest, _impl_.status_reason_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string chain_name = 1;
    {PROTOBUF_FIELD_OFFSET(UpdateCrossChainStatusRequest, _impl_.chain_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.crosschain.CrossChainStatus new_status = 2;
    {PROTOBUF_FIELD_OFFSET(UpdateCrossChainStatusRequest, _impl_.new_status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string status_reason = 3;
    {PROTOBUF_FIELD_OFFSET(UpdateCrossChainStatusRequest, _impl_.status_reason_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 retry_count = 4;
    {PROTOBUF_FIELD_OFFSET(UpdateCrossChainStatusRequest, _impl_.retry_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // map<string, string> update_metadata = 5;
    {PROTOBUF_FIELD_OFFSET(UpdateCrossChainStatusRequest, _impl_.update_metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(UpdateCrossChainStatusRequest()._impl_.update_metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\56\12\0\15\0\17\0\0"
    "seigr.crosschain.UpdateCrossChainStatusRequest"
    "chain_name"
    "status_reason"
    "update_metadata"
  }},
};

PROTOBUF_NOINLINE void UpdateCrossChainStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.crosschain.UpdateCrossChainStatusRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.update_metadata_.Clear();
  _impl_.chain_name_.ClearToEmpty();
  _impl_.status_reason_.ClearToEmpty();
  ::memset(&_impl_.new_status_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.retry_count_) -
      reinterpret_cast<char*>(&_impl_.new_status_)) + sizeof(_impl_.retry_count_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UpdateCrossChainStatusRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UpdateCrossChainStatusRequest& this_ = static_cast<const UpdateCrossChainStatusRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UpdateCrossChainStatusRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UpdateCrossChainStatusRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.crosschain.UpdateCrossChainStatusRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string chain_name = 1;
          if (!this_._internal_chain_name().empty()) {
            const std::string& _s = this_._internal_chain_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.UpdateCrossChainStatusRequest.chain_name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // .seigr.crosschain.CrossChainStatus new_status = 2;
          if (this_._internal_new_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_new_status(), target);
          }

          // string status_reason = 3;
          if (!this_._internal_status_reason().empty()) {
            const std::string& _s = this_._internal_status_reason();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.UpdateCrossChainStatusRequest.status_reason");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // int32 retry_count = 4;
          if (this_._internal_retry_count() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<4>(
                    stream, this_._internal_retry_count(), target);
          }

          // map<string, string> update_metadata = 5;
          if (!this_._internal_update_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_update_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    5, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.UpdateCrossChainStatusRequest.update_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.UpdateCrossChainStatusRequest.update_metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    5, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.UpdateCrossChainStatusRequest.update_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.UpdateCrossChainStatusRequest.update_metadata");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.crosschain.UpdateCrossChainStatusRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UpdateCrossChainStatusRequest::ByteSizeLong(const MessageLite& base) {
          const UpdateCrossChainStatusRequest& this_ = static_cast<const UpdateCrossChainStatusRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UpdateCrossChainStatusRequest::ByteSizeLong() const {
          const UpdateCrossChainStatusRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.crosschain.UpdateCrossChainStatusRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> update_metadata = 5;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_update_metadata_size());
              for (const auto& entry : this_._internal_update_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string chain_name = 1;
            if (!this_._internal_chain_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_chain_name());
            }
            // string status_reason = 3;
            if (!this_._internal_status_reason().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_status_reason());
            }
            // .seigr.crosschain.CrossChainStatus new_status = 2;
            if (this_._internal_new_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_new_status());
            }
            // int32 retry_count = 4;
            if (this_._internal_retry_count() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_retry_count());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UpdateCrossChainStatusRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateCrossChainStatusRequest*>(&to_msg);
  auto& from = static_cast<const UpdateCrossChainStatusRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.crosschain.UpdateCrossChainStatusRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.update_metadata_.MergeFrom(from._impl_.update_metadata_);
  if (!from._internal_chain_name().empty()) {
    _this->_internal_set_chain_name(from._internal_chain_name());
  }
  if (!from._internal_status_reason().empty()) {
    _this->_internal_set_status_reason(from._internal_status_reason());
  }
  if (from._internal_new_status() != 0) {
    _this->_impl_.new_status_ = from._impl_.new_status_;
  }
  if (from._internal_retry_count() != 0) {
    _this->_impl_.retry_count_ = from._impl_.retry_count_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateCrossChainStatusRequest::CopyFrom(const UpdateCrossChainStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.crosschain.UpdateCrossChainStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateCrossChainStatusRequest::InternalSwap(UpdateCrossChainStatusRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.update_metadata_.InternalSwap(&other->_impl_.update_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.chain_name_, &other->_impl_.chain_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.status_reason_, &other->_impl_.status_reason_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateCrossChainStatusRequest, _impl_.retry_count_)
      + sizeof(UpdateCrossChainStatusRequest::_impl_.retry_count_)
      - PROTOBUF_FIELD_OFFSET(UpdateCrossChainStatusRequest, _impl_.new_status_)>(
          reinterpret_cast<char*>(&_impl_.new_status_),
          reinterpret_cast<char*>(&other->_impl_.new_status_));
}

::google::protobuf::Metadata UpdateCrossChainStatusRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateCrossChainStatusResponse::_Internal {
 public:
};

UpdateCrossChainStatusResponse::UpdateCrossChainStatusResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.crosschain.UpdateCrossChainStatusResponse)
}
inline PROTOBUF_NDEBUG_INLINE UpdateCrossChainStatusResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::crosschain::UpdateCrossChainStatusResponse& from_msg)
      : message_(arena, from.message_),
        error_code_(arena, from.error_code_),
        _cached_size_{0} {}

UpdateCrossChainStatusResponse::UpdateCrossChainStatusResponse(
    ::google::protobuf::Arena* arena,
    const UpdateCrossChainStatusResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateCrossChainStatusResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:seigr.crosschain.UpdateCrossChainStatusResponse)
}
inline PROTOBUF_NDEBUG_INLINE UpdateCrossChainStatusResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_(arena),
        error_code_(arena),
        _cached_size_{0} {}

inline void UpdateCrossChainStatusResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
UpdateCrossChainStatusResponse::~UpdateCrossChainStatusResponse() {
  // @@protoc_insertion_point(destructor:seigr.crosschain.UpdateCrossChainStatusResponse)
  SharedDtor(*this);
}
inline void UpdateCrossChainStatusResponse::SharedDtor(MessageLite& self) {
  UpdateCrossChainStatusResponse& this_ = static_cast<UpdateCrossChainStatusResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  this_._impl_.error_code_.Destroy();
  this_._impl_.~Impl_();
}

inline void* UpdateCrossChainStatusResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UpdateCrossChainStatusResponse(arena);
}
constexpr auto UpdateCrossChainStatusResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(UpdateCrossChainStatusResponse),
                                            alignof(UpdateCrossChainStatusResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UpdateCrossChainStatusResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UpdateCrossChainStatusResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UpdateCrossChainStatusResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UpdateCrossChainStatusResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UpdateCrossChainStatusResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UpdateCrossChainStatusResponse>(), &UpdateCrossChainStatusResponse::ByteSizeLong,
            &UpdateCrossChainStatusResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UpdateCrossChainStatusResponse, _impl_._cached_size_),
        false,
    },
    &UpdateCrossChainStatusResponse::kDescriptorMethods,
    &descriptor_table_cross_5fchain_5foperations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UpdateCrossChainStatusResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 73, 2> UpdateCrossChainStatusResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::crosschain::UpdateCrossChainStatusResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(UpdateCrossChainStatusResponse, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateCrossChainStatusResponse, _impl_.success_)}},
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateCrossChainStatusResponse, _impl_.message_)}},
    // string error_code = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateCrossChainStatusResponse, _impl_.error_code_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(UpdateCrossChainStatusResponse, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(UpdateCrossChainStatusResponse, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string error_code = 3;
    {PROTOBUF_FIELD_OFFSET(UpdateCrossChainStatusResponse, _impl_.error_code_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\57\0\7\12\0\0\0\0"
    "seigr.crosschain.UpdateCrossChainStatusResponse"
    "message"
    "error_code"
  }},
};

PROTOBUF_NOINLINE void UpdateCrossChainStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.crosschain.UpdateCrossChainStatusResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _impl_.error_code_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UpdateCrossChainStatusResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UpdateCrossChainStatusResponse& this_ = static_cast<const UpdateCrossChainStatusResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UpdateCrossChainStatusResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UpdateCrossChainStatusResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.crosschain.UpdateCrossChainStatusResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool success = 1;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_success(), target);
          }

          // string message = 2;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.UpdateCrossChainStatusResponse.message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string error_code = 3;
          if (!this_._internal_error_code().empty()) {
            const std::string& _s = this_._internal_error_code();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.crosschain.UpdateCrossChainStatusResponse.error_code");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.crosschain.UpdateCrossChainStatusResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UpdateCrossChainStatusResponse::ByteSizeLong(const MessageLite& base) {
          const UpdateCrossChainStatusResponse& this_ = static_cast<const UpdateCrossChainStatusResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UpdateCrossChainStatusResponse::ByteSizeLong() const {
          const UpdateCrossChainStatusResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.crosschain.UpdateCrossChainStatusResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string message = 2;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
            // string error_code = 3;
            if (!this_._internal_error_code().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_error_code());
            }
            // bool success = 1;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UpdateCrossChainStatusResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateCrossChainStatusResponse*>(&to_msg);
  auto& from = static_cast<const UpdateCrossChainStatusResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.crosschain.UpdateCrossChainStatusResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (!from._internal_error_code().empty()) {
    _this->_internal_set_error_code(from._internal_error_code());
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateCrossChainStatusResponse::CopyFrom(const UpdateCrossChainStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.crosschain.UpdateCrossChainStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateCrossChainStatusResponse::InternalSwap(UpdateCrossChainStatusResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_code_, &other->_impl_.error_code_, arena);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata UpdateCrossChainStatusResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace crosschain
}  // namespace seigr
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_cross_5fchain_5foperations_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
