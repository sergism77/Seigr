// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: network.proto
// Protobuf C++ Version: 5.29.2

#include "network.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace seigr {
namespace network {

inline constexpr ProtocolCompatibilityLog::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : compatible_versions_{},
        hyphen_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        protocol_version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        is_compatible_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ProtocolCompatibilityLog::ProtocolCompatibilityLog(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ProtocolCompatibilityLogDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProtocolCompatibilityLogDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProtocolCompatibilityLogDefaultTypeInternal() {}
  union {
    ProtocolCompatibilityLog _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProtocolCompatibilityLogDefaultTypeInternal _ProtocolCompatibilityLog_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR PeerConnection_MetadataEntry_DoNotUse::PeerConnection_MetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : PeerConnection_MetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : PeerConnection_MetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct PeerConnection_MetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PeerConnection_MetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PeerConnection_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    PeerConnection_MetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PeerConnection_MetadataEntry_DoNotUseDefaultTypeInternal _PeerConnection_MetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR NetworkStatusResponse_DiagnosticsEntry_DoNotUse::NetworkStatusResponse_DiagnosticsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : NetworkStatusResponse_DiagnosticsEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : NetworkStatusResponse_DiagnosticsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct NetworkStatusResponse_DiagnosticsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetworkStatusResponse_DiagnosticsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetworkStatusResponse_DiagnosticsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    NetworkStatusResponse_DiagnosticsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetworkStatusResponse_DiagnosticsEntry_DoNotUseDefaultTypeInternal _NetworkStatusResponse_DiagnosticsEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR NetworkStatusRequest_FiltersEntry_DoNotUse::NetworkStatusRequest_FiltersEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : NetworkStatusRequest_FiltersEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : NetworkStatusRequest_FiltersEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct NetworkStatusRequest_FiltersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetworkStatusRequest_FiltersEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetworkStatusRequest_FiltersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    NetworkStatusRequest_FiltersEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetworkStatusRequest_FiltersEntry_DoNotUseDefaultTypeInternal _NetworkStatusRequest_FiltersEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR NetworkStatistics_QosDistributionEntry_DoNotUse::NetworkStatistics_QosDistributionEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : NetworkStatistics_QosDistributionEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : NetworkStatistics_QosDistributionEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct NetworkStatistics_QosDistributionEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetworkStatistics_QosDistributionEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetworkStatistics_QosDistributionEntry_DoNotUseDefaultTypeInternal() {}
  union {
    NetworkStatistics_QosDistributionEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetworkStatistics_QosDistributionEntry_DoNotUseDefaultTypeInternal _NetworkStatistics_QosDistributionEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR NetworkStatistics_LatencyAveragesEntry_DoNotUse::NetworkStatistics_LatencyAveragesEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : NetworkStatistics_LatencyAveragesEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : NetworkStatistics_LatencyAveragesEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct NetworkStatistics_LatencyAveragesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetworkStatistics_LatencyAveragesEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetworkStatistics_LatencyAveragesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    NetworkStatistics_LatencyAveragesEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetworkStatistics_LatencyAveragesEntry_DoNotUseDefaultTypeInternal _NetworkStatistics_LatencyAveragesEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR NetworkSecurityPolicy_PolicyMetadataEntry_DoNotUse::NetworkSecurityPolicy_PolicyMetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : NetworkSecurityPolicy_PolicyMetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : NetworkSecurityPolicy_PolicyMetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct NetworkSecurityPolicy_PolicyMetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetworkSecurityPolicy_PolicyMetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetworkSecurityPolicy_PolicyMetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    NetworkSecurityPolicy_PolicyMetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetworkSecurityPolicy_PolicyMetadataEntry_DoNotUseDefaultTypeInternal _NetworkSecurityPolicy_PolicyMetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR NetworkPerformanceSummary_PerformanceNotesEntry_DoNotUse::NetworkPerformanceSummary_PerformanceNotesEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : NetworkPerformanceSummary_PerformanceNotesEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : NetworkPerformanceSummary_PerformanceNotesEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct NetworkPerformanceSummary_PerformanceNotesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetworkPerformanceSummary_PerformanceNotesEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetworkPerformanceSummary_PerformanceNotesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    NetworkPerformanceSummary_PerformanceNotesEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetworkPerformanceSummary_PerformanceNotesEntry_DoNotUseDefaultTypeInternal _NetworkPerformanceSummary_PerformanceNotesEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR NetworkOperationLog_MetadataEntry_DoNotUse::NetworkOperationLog_MetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : NetworkOperationLog_MetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : NetworkOperationLog_MetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct NetworkOperationLog_MetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetworkOperationLog_MetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetworkOperationLog_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    NetworkOperationLog_MetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetworkOperationLog_MetadataEntry_DoNotUseDefaultTypeInternal _NetworkOperationLog_MetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR NetworkHyphen_MetadataEntry_DoNotUse::NetworkHyphen_MetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : NetworkHyphen_MetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : NetworkHyphen_MetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct NetworkHyphen_MetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetworkHyphen_MetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetworkHyphen_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    NetworkHyphen_MetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetworkHyphen_MetadataEntry_DoNotUseDefaultTypeInternal _NetworkHyphen_MetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR NetworkErrorEvent_MetadataEntry_DoNotUse::NetworkErrorEvent_MetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : NetworkErrorEvent_MetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : NetworkErrorEvent_MetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct NetworkErrorEvent_MetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetworkErrorEvent_MetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetworkErrorEvent_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    NetworkErrorEvent_MetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetworkErrorEvent_MetadataEntry_DoNotUseDefaultTypeInternal _NetworkErrorEvent_MetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR NetworkConfig_ConfigMetadataEntry_DoNotUse::NetworkConfig_ConfigMetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : NetworkConfig_ConfigMetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : NetworkConfig_ConfigMetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct NetworkConfig_ConfigMetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetworkConfig_ConfigMetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetworkConfig_ConfigMetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    NetworkConfig_ConfigMetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetworkConfig_ConfigMetadataEntry_DoNotUseDefaultTypeInternal _NetworkConfig_ConfigMetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR NetworkCluster_HyphenStatusCountsEntry_DoNotUse::NetworkCluster_HyphenStatusCountsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : NetworkCluster_HyphenStatusCountsEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : NetworkCluster_HyphenStatusCountsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct NetworkCluster_HyphenStatusCountsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetworkCluster_HyphenStatusCountsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetworkCluster_HyphenStatusCountsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    NetworkCluster_HyphenStatusCountsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetworkCluster_HyphenStatusCountsEntry_DoNotUseDefaultTypeInternal _NetworkCluster_HyphenStatusCountsEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR NetworkCluster_ClusterMetadataEntry_DoNotUse::NetworkCluster_ClusterMetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : NetworkCluster_ClusterMetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : NetworkCluster_ClusterMetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct NetworkCluster_ClusterMetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetworkCluster_ClusterMetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetworkCluster_ClusterMetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    NetworkCluster_ClusterMetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetworkCluster_ClusterMetadataEntry_DoNotUseDefaultTypeInternal _NetworkCluster_ClusterMetadataEntry_DoNotUse_default_instance_;

inline constexpr PeerConnection::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : metadata_{},
        connection_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        source_hyphen_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        target_hyphen_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        created_at_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        last_updated_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        protocol_{static_cast< ::seigr::network::NetworkProtocol >(0)},
        latency_ms_{0},
        qos_level_{static_cast< ::seigr::common::QoSLevel >(0)},
        auto_scaled_qos_{false},
        data_transferred_bytes_{::int64_t{0}},
        congestion_level_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PeerConnection::PeerConnection(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PeerConnectionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PeerConnectionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PeerConnectionDefaultTypeInternal() {}
  union {
    PeerConnection _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PeerConnectionDefaultTypeInternal _PeerConnection_default_instance_;

inline constexpr NetworkStatusResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : diagnostics_{},
        request_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        hyphen_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        last_updated_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NetworkStatusResponse::NetworkStatusResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NetworkStatusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetworkStatusResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetworkStatusResponseDefaultTypeInternal() {}
  union {
    NetworkStatusResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetworkStatusResponseDefaultTypeInternal _NetworkStatusResponse_default_instance_;

inline constexpr NetworkStatusRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : filters_{},
        request_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        hyphen_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        include_diagnostics_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NetworkStatusRequest::NetworkStatusRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NetworkStatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetworkStatusRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetworkStatusRequestDefaultTypeInternal() {}
  union {
    NetworkStatusRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetworkStatusRequestDefaultTypeInternal _NetworkStatusRequest_default_instance_;

inline constexpr NetworkStatistics::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        latency_averages_{},
        qos_distribution_{},
        cluster_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        last_updated_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        performance_summary_{nullptr},
        total_hyphens_{0},
        active_connections_{0},
        total_data_transferred_mb_{0},
        avg_congestion_level_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NetworkStatistics::NetworkStatistics(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NetworkStatisticsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetworkStatisticsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetworkStatisticsDefaultTypeInternal() {}
  union {
    NetworkStatistics _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetworkStatisticsDefaultTypeInternal _NetworkStatistics_default_instance_;

inline constexpr NetworkSecurityPolicy::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : allowed_ip_ranges_{},
        blocked_ip_ranges_{},
        allowed_protocols_{},
        _allowed_protocols_cached_byte_size_{0},
        policy_metadata_{},
        policy_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        auto_response_action_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        enforce_strict_tls_{false},
        adaptive_blacklisting_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NetworkSecurityPolicy::NetworkSecurityPolicy(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NetworkSecurityPolicyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetworkSecurityPolicyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetworkSecurityPolicyDefaultTypeInternal() {}
  union {
    NetworkSecurityPolicy _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetworkSecurityPolicyDefaultTypeInternal _NetworkSecurityPolicy_default_instance_;

inline constexpr NetworkPerformanceSummary::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : performance_notes_{},
        summary_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        avg_bandwidth_utilization_{0},
        avg_response_time_{0},
        total_data_transferred_mb_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NetworkPerformanceSummary::NetworkPerformanceSummary(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NetworkPerformanceSummaryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetworkPerformanceSummaryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetworkPerformanceSummaryDefaultTypeInternal() {}
  union {
    NetworkPerformanceSummary _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetworkPerformanceSummaryDefaultTypeInternal _NetworkPerformanceSummary_default_instance_;

inline constexpr NetworkOperationLog::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : metadata_{},
        log_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        action_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        source_hyphen_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        target_hyphen_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NetworkOperationLog::NetworkOperationLog(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NetworkOperationLogDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetworkOperationLogDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetworkOperationLogDefaultTypeInternal() {}
  union {
    NetworkOperationLog _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetworkOperationLogDefaultTypeInternal _NetworkOperationLog_default_instance_;

inline constexpr NetworkHyphen::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : supported_protocols_{},
        _supported_protocols_cached_byte_size_{0},
        metadata_{},
        hyphen_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ip_address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        last_seen_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        adaptive_scaling_status_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        port_{0},
        primary_protocol_{static_cast< ::seigr::network::NetworkProtocol >(0)},
        status_{static_cast< ::seigr::network::HyphenStatus >(0)},
        load_percentage_{0},
        avg_latency_ms_{0},
        available_bandwidth_mbps_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NetworkHyphen::NetworkHyphen(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NetworkHyphenDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetworkHyphenDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetworkHyphenDefaultTypeInternal() {}
  union {
    NetworkHyphen _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetworkHyphenDefaultTypeInternal _NetworkHyphen_default_instance_;

inline constexpr NetworkErrorEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : metadata_{},
        error_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        source_hyphen_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        target_hyphen_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        error_code_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        error_message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        auto_resolved_{false},
        retry_attempts_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NetworkErrorEvent::NetworkErrorEvent(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NetworkErrorEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetworkErrorEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetworkErrorEventDefaultTypeInternal() {}
  union {
    NetworkErrorEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetworkErrorEventDefaultTypeInternal _NetworkErrorEvent_default_instance_;

inline constexpr NetworkConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : allowed_protocols_{},
        _allowed_protocols_cached_byte_size_{0},
        config_metadata_{},
        fallback_protocol_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        max_connections_{0},
        retry_limit_{0},
        timeout_seconds_{0},
        default_qos_{static_cast< ::seigr::common::QoSLevel >(0)},
        enable_encryption_{false},
        enable_dynamic_qos_scaling_{false},
        max_packet_loss_threshold_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NetworkConfig::NetworkConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NetworkConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetworkConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetworkConfigDefaultTypeInternal() {}
  union {
    NetworkConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetworkConfigDefaultTypeInternal _NetworkConfig_default_instance_;

inline constexpr NetworkCluster::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        hyphens_{},
        hyphen_status_counts_{},
        cluster_metadata_{},
        cluster_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        last_health_check_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        health_status_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        health_summary_{nullptr},
        default_qos_level_{static_cast< ::seigr::common::QoSLevel >(0)},
        load_balancing_factor_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NetworkCluster::NetworkCluster(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NetworkClusterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetworkClusterDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetworkClusterDefaultTypeInternal() {}
  union {
    NetworkCluster _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetworkClusterDefaultTypeInternal _NetworkCluster_default_instance_;
}  // namespace network
}  // namespace seigr
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_network_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_network_2eproto = nullptr;
const ::uint32_t
    TableStruct_network_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkHyphen_MetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkHyphen_MetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkHyphen_MetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkHyphen_MetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkHyphen, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkHyphen, _impl_.hyphen_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkHyphen, _impl_.ip_address_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkHyphen, _impl_.port_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkHyphen, _impl_.primary_protocol_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkHyphen, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkHyphen, _impl_.supported_protocols_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkHyphen, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkHyphen, _impl_.last_seen_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkHyphen, _impl_.load_percentage_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkHyphen, _impl_.avg_latency_ms_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkHyphen, _impl_.available_bandwidth_mbps_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkHyphen, _impl_.adaptive_scaling_status_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::PeerConnection_MetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::PeerConnection_MetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::network::PeerConnection_MetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::PeerConnection_MetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::network::PeerConnection, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::network::PeerConnection, _impl_.connection_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::PeerConnection, _impl_.source_hyphen_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::PeerConnection, _impl_.target_hyphen_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::PeerConnection, _impl_.protocol_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::PeerConnection, _impl_.latency_ms_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::PeerConnection, _impl_.qos_level_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::PeerConnection, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::PeerConnection, _impl_.created_at_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::PeerConnection, _impl_.last_updated_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::PeerConnection, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::PeerConnection, _impl_.data_transferred_bytes_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::PeerConnection, _impl_.auto_scaled_qos_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::PeerConnection, _impl_.congestion_level_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkCluster_HyphenStatusCountsEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkCluster_HyphenStatusCountsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkCluster_HyphenStatusCountsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkCluster_HyphenStatusCountsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkCluster_ClusterMetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkCluster_ClusterMetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkCluster_ClusterMetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkCluster_ClusterMetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkCluster, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkCluster, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkCluster, _impl_.cluster_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkCluster, _impl_.hyphens_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkCluster, _impl_.hyphen_status_counts_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkCluster, _impl_.default_qos_level_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkCluster, _impl_.last_health_check_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkCluster, _impl_.health_status_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkCluster, _impl_.cluster_metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkCluster, _impl_.health_summary_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkCluster, _impl_.load_balancing_factor_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkConfig_ConfigMetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkConfig_ConfigMetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkConfig_ConfigMetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkConfig_ConfigMetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkConfig, _impl_.max_connections_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkConfig, _impl_.retry_limit_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkConfig, _impl_.timeout_seconds_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkConfig, _impl_.enable_encryption_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkConfig, _impl_.default_qos_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkConfig, _impl_.allowed_protocols_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkConfig, _impl_.config_metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkConfig, _impl_.max_packet_loss_threshold_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkConfig, _impl_.enable_dynamic_qos_scaling_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkConfig, _impl_.fallback_protocol_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkStatistics_LatencyAveragesEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkStatistics_LatencyAveragesEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkStatistics_LatencyAveragesEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkStatistics_LatencyAveragesEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkStatistics_QosDistributionEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkStatistics_QosDistributionEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkStatistics_QosDistributionEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkStatistics_QosDistributionEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkStatistics, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkStatistics, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkStatistics, _impl_.cluster_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkStatistics, _impl_.total_hyphens_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkStatistics, _impl_.active_connections_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkStatistics, _impl_.total_data_transferred_mb_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkStatistics, _impl_.latency_averages_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkStatistics, _impl_.qos_distribution_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkStatistics, _impl_.last_updated_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkStatistics, _impl_.performance_summary_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkStatistics, _impl_.avg_congestion_level_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkSecurityPolicy_PolicyMetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkSecurityPolicy_PolicyMetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkSecurityPolicy_PolicyMetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkSecurityPolicy_PolicyMetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkSecurityPolicy, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkSecurityPolicy, _impl_.policy_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkSecurityPolicy, _impl_.allowed_ip_ranges_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkSecurityPolicy, _impl_.blocked_ip_ranges_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkSecurityPolicy, _impl_.enforce_strict_tls_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkSecurityPolicy, _impl_.allowed_protocols_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkSecurityPolicy, _impl_.adaptive_blacklisting_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkSecurityPolicy, _impl_.policy_metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkSecurityPolicy, _impl_.auto_response_action_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkErrorEvent_MetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkErrorEvent_MetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkErrorEvent_MetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkErrorEvent_MetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkErrorEvent, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkErrorEvent, _impl_.error_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkErrorEvent, _impl_.source_hyphen_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkErrorEvent, _impl_.target_hyphen_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkErrorEvent, _impl_.error_code_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkErrorEvent, _impl_.error_message_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkErrorEvent, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkErrorEvent, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkErrorEvent, _impl_.auto_resolved_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkErrorEvent, _impl_.retry_attempts_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkStatusRequest_FiltersEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkStatusRequest_FiltersEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkStatusRequest_FiltersEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkStatusRequest_FiltersEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkStatusRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkStatusRequest, _impl_.request_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkStatusRequest, _impl_.hyphen_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkStatusRequest, _impl_.filters_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkStatusRequest, _impl_.include_diagnostics_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkStatusResponse_DiagnosticsEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkStatusResponse_DiagnosticsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkStatusResponse_DiagnosticsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkStatusResponse_DiagnosticsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkStatusResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkStatusResponse, _impl_.request_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkStatusResponse, _impl_.hyphen_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkStatusResponse, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkStatusResponse, _impl_.diagnostics_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkStatusResponse, _impl_.last_updated_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkOperationLog_MetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkOperationLog_MetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkOperationLog_MetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkOperationLog_MetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkOperationLog, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkOperationLog, _impl_.log_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkOperationLog, _impl_.action_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkOperationLog, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkOperationLog, _impl_.source_hyphen_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkOperationLog, _impl_.target_hyphen_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkOperationLog, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkOperationLog, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkPerformanceSummary_PerformanceNotesEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkPerformanceSummary_PerformanceNotesEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkPerformanceSummary_PerformanceNotesEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkPerformanceSummary_PerformanceNotesEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkPerformanceSummary, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkPerformanceSummary, _impl_.summary_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkPerformanceSummary, _impl_.avg_bandwidth_utilization_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkPerformanceSummary, _impl_.avg_response_time_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkPerformanceSummary, _impl_.total_data_transferred_mb_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::NetworkPerformanceSummary, _impl_.performance_notes_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::network::ProtocolCompatibilityLog, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::network::ProtocolCompatibilityLog, _impl_.hyphen_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::ProtocolCompatibilityLog, _impl_.protocol_version_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::ProtocolCompatibilityLog, _impl_.compatible_versions_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::ProtocolCompatibilityLog, _impl_.is_compatible_),
        PROTOBUF_FIELD_OFFSET(::seigr::network::ProtocolCompatibilityLog, _impl_.timestamp_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::seigr::network::NetworkHyphen_MetadataEntry_DoNotUse)},
        {12, -1, -1, sizeof(::seigr::network::NetworkHyphen)},
        {32, 42, -1, sizeof(::seigr::network::PeerConnection_MetadataEntry_DoNotUse)},
        {44, -1, -1, sizeof(::seigr::network::PeerConnection)},
        {65, 75, -1, sizeof(::seigr::network::NetworkCluster_HyphenStatusCountsEntry_DoNotUse)},
        {77, 87, -1, sizeof(::seigr::network::NetworkCluster_ClusterMetadataEntry_DoNotUse)},
        {89, 106, -1, sizeof(::seigr::network::NetworkCluster)},
        {115, 125, -1, sizeof(::seigr::network::NetworkConfig_ConfigMetadataEntry_DoNotUse)},
        {127, -1, -1, sizeof(::seigr::network::NetworkConfig)},
        {145, 155, -1, sizeof(::seigr::network::NetworkStatistics_LatencyAveragesEntry_DoNotUse)},
        {157, 167, -1, sizeof(::seigr::network::NetworkStatistics_QosDistributionEntry_DoNotUse)},
        {169, 186, -1, sizeof(::seigr::network::NetworkStatistics)},
        {195, 205, -1, sizeof(::seigr::network::NetworkSecurityPolicy_PolicyMetadataEntry_DoNotUse)},
        {207, -1, -1, sizeof(::seigr::network::NetworkSecurityPolicy)},
        {223, 233, -1, sizeof(::seigr::network::NetworkErrorEvent_MetadataEntry_DoNotUse)},
        {235, -1, -1, sizeof(::seigr::network::NetworkErrorEvent)},
        {252, 262, -1, sizeof(::seigr::network::NetworkStatusRequest_FiltersEntry_DoNotUse)},
        {264, -1, -1, sizeof(::seigr::network::NetworkStatusRequest)},
        {276, 286, -1, sizeof(::seigr::network::NetworkStatusResponse_DiagnosticsEntry_DoNotUse)},
        {288, -1, -1, sizeof(::seigr::network::NetworkStatusResponse)},
        {301, 311, -1, sizeof(::seigr::network::NetworkOperationLog_MetadataEntry_DoNotUse)},
        {313, -1, -1, sizeof(::seigr::network::NetworkOperationLog)},
        {328, 338, -1, sizeof(::seigr::network::NetworkPerformanceSummary_PerformanceNotesEntry_DoNotUse)},
        {340, -1, -1, sizeof(::seigr::network::NetworkPerformanceSummary)},
        {353, -1, -1, sizeof(::seigr::network::ProtocolCompatibilityLog)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::seigr::network::_NetworkHyphen_MetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::network::_NetworkHyphen_default_instance_._instance,
    &::seigr::network::_PeerConnection_MetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::network::_PeerConnection_default_instance_._instance,
    &::seigr::network::_NetworkCluster_HyphenStatusCountsEntry_DoNotUse_default_instance_._instance,
    &::seigr::network::_NetworkCluster_ClusterMetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::network::_NetworkCluster_default_instance_._instance,
    &::seigr::network::_NetworkConfig_ConfigMetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::network::_NetworkConfig_default_instance_._instance,
    &::seigr::network::_NetworkStatistics_LatencyAveragesEntry_DoNotUse_default_instance_._instance,
    &::seigr::network::_NetworkStatistics_QosDistributionEntry_DoNotUse_default_instance_._instance,
    &::seigr::network::_NetworkStatistics_default_instance_._instance,
    &::seigr::network::_NetworkSecurityPolicy_PolicyMetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::network::_NetworkSecurityPolicy_default_instance_._instance,
    &::seigr::network::_NetworkErrorEvent_MetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::network::_NetworkErrorEvent_default_instance_._instance,
    &::seigr::network::_NetworkStatusRequest_FiltersEntry_DoNotUse_default_instance_._instance,
    &::seigr::network::_NetworkStatusRequest_default_instance_._instance,
    &::seigr::network::_NetworkStatusResponse_DiagnosticsEntry_DoNotUse_default_instance_._instance,
    &::seigr::network::_NetworkStatusResponse_default_instance_._instance,
    &::seigr::network::_NetworkOperationLog_MetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::network::_NetworkOperationLog_default_instance_._instance,
    &::seigr::network::_NetworkPerformanceSummary_PerformanceNotesEntry_DoNotUse_default_instance_._instance,
    &::seigr::network::_NetworkPerformanceSummary_default_instance_._instance,
    &::seigr::network::_ProtocolCompatibilityLog_default_instance_._instance,
};
const char descriptor_table_protodef_network_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\rnetwork.proto\022\rseigr.network\032\014common.p"
    "roto\"\336\003\n\rNetworkHyphen\022\021\n\thyphen_id\030\001 \001("
    "\t\022\022\n\nip_address\030\002 \001(\t\022\014\n\004port\030\003 \001(\005\0228\n\020p"
    "rimary_protocol\030\004 \001(\0162\036.seigr.network.Ne"
    "tworkProtocol\022+\n\006status\030\005 \001(\0162\033.seigr.ne"
    "twork.HyphenStatus\022;\n\023supported_protocol"
    "s\030\006 \003(\0162\036.seigr.network.NetworkProtocol\022"
    "<\n\010metadata\030\007 \003(\0132*.seigr.network.Networ"
    "kHyphen.MetadataEntry\022\021\n\tlast_seen\030\010 \001(\t"
    "\022\027\n\017load_percentage\030\t \001(\005\022\026\n\016avg_latency"
    "_ms\030\n \001(\005\022 \n\030available_bandwidth_mbps\030\013 "
    "\001(\005\022\037\n\027adaptive_scaling_status\030\014 \001(\t\032/\n\r"
    "MetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001("
    "\t:\0028\001\"\311\003\n\016PeerConnection\022\025\n\rconnection_i"
    "d\030\001 \001(\t\022\030\n\020source_hyphen_id\030\002 \001(\t\022\030\n\020tar"
    "get_hyphen_id\030\003 \001(\t\0220\n\010protocol\030\004 \001(\0162\036."
    "seigr.network.NetworkProtocol\022\022\n\nlatency"
    "_ms\030\005 \001(\005\022)\n\tqos_level\030\006 \001(\0162\026.seigr.com"
    "mon.QoSLevel\022\016\n\006status\030\007 \001(\t\022\022\n\ncreated_"
    "at\030\010 \001(\t\022\024\n\014last_updated\030\t \001(\t\022=\n\010metada"
    "ta\030\n \003(\0132+.seigr.network.PeerConnection."
    "MetadataEntry\022\036\n\026data_transferred_bytes\030"
    "\013 \001(\003\022\027\n\017auto_scaled_qos\030\014 \001(\010\022\030\n\020conges"
    "tion_level\030\r \001(\002\032/\n\rMetadataEntry\022\013\n\003key"
    "\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\256\004\n\016NetworkClu"
    "ster\022\022\n\ncluster_id\030\001 \001(\t\022-\n\007hyphens\030\002 \003("
    "\0132\034.seigr.network.NetworkHyphen\022S\n\024hyphe"
    "n_status_counts\030\003 \003(\01325.seigr.network.Ne"
    "tworkCluster.HyphenStatusCountsEntry\0221\n\021"
    "default_qos_level\030\004 \001(\0162\026.seigr.common.Q"
    "oSLevel\022\031\n\021last_health_check\030\005 \001(\t\022\025\n\rhe"
    "alth_status\030\006 \001(\t\022L\n\020cluster_metadata\030\007 "
    "\003(\01322.seigr.network.NetworkCluster.Clust"
    "erMetadataEntry\022\?\n\016health_summary\030\010 \001(\0132"
    "\'.seigr.common.NetworkPerformanceSummary"
    "\022\035\n\025load_balancing_factor\030\t \001(\002\0329\n\027Hyphe"
    "nStatusCountsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value"
    "\030\002 \001(\005:\0028\001\0326\n\024ClusterMetadataEntry\022\013\n\003ke"
    "y\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\275\003\n\rNetworkCo"
    "nfig\022\027\n\017max_connections\030\001 \001(\005\022\023\n\013retry_l"
    "imit\030\002 \001(\005\022\027\n\017timeout_seconds\030\003 \001(\005\022\031\n\021e"
    "nable_encryption\030\004 \001(\010\022+\n\013default_qos\030\005 "
    "\001(\0162\026.seigr.common.QoSLevel\0229\n\021allowed_p"
    "rotocols\030\006 \003(\0162\036.seigr.network.NetworkPr"
    "otocol\022I\n\017config_metadata\030\007 \003(\01320.seigr."
    "network.NetworkConfig.ConfigMetadataEntr"
    "y\022!\n\031max_packet_loss_threshold\030\010 \001(\005\022\"\n\032"
    "enable_dynamic_qos_scaling\030\t \001(\010\022\031\n\021fall"
    "back_protocol\030\n \001(\t\0325\n\023ConfigMetadataEnt"
    "ry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\211\004\n\021N"
    "etworkStatistics\022\022\n\ncluster_id\030\001 \001(\t\022\025\n\r"
    "total_hyphens\030\002 \001(\005\022\032\n\022active_connection"
    "s\030\003 \001(\005\022!\n\031total_data_transferred_mb\030\004 \001"
    "(\005\022O\n\020latency_averages\030\005 \003(\01325.seigr.net"
    "work.NetworkStatistics.LatencyAveragesEn"
    "try\022O\n\020qos_distribution\030\006 \003(\01325.seigr.ne"
    "twork.NetworkStatistics.QosDistributionE"
    "ntry\022\024\n\014last_updated\030\007 \001(\t\022D\n\023performanc"
    "e_summary\030\010 \001(\0132\'.seigr.common.NetworkPe"
    "rformanceSummary\022\034\n\024avg_congestion_level"
    "\030\t \001(\002\0326\n\024LatencyAveragesEntry\022\013\n\003key\030\001 "
    "\001(\t\022\r\n\005value\030\002 \001(\001:\0028\001\0326\n\024QosDistributio"
    "nEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\005:\0028\001\"\376"
    "\002\n\025NetworkSecurityPolicy\022\021\n\tpolicy_id\030\001 "
    "\001(\t\022\031\n\021allowed_ip_ranges\030\002 \003(\t\022\031\n\021blocke"
    "d_ip_ranges\030\003 \003(\t\022\032\n\022enforce_strict_tls\030"
    "\004 \001(\010\0229\n\021allowed_protocols\030\005 \003(\0162\036.seigr"
    ".network.NetworkProtocol\022\035\n\025adaptive_bla"
    "cklisting\030\006 \001(\010\022Q\n\017policy_metadata\030\007 \003(\013"
    "28.seigr.network.NetworkSecurityPolicy.P"
    "olicyMetadataEntry\022\034\n\024auto_response_acti"
    "on\030\010 \001(\t\0325\n\023PolicyMetadataEntry\022\013\n\003key\030\001"
    " \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\271\002\n\021NetworkError"
    "Event\022\020\n\010error_id\030\001 \001(\t\022\030\n\020source_hyphen"
    "_id\030\002 \001(\t\022\030\n\020target_hyphen_id\030\003 \001(\t\022\022\n\ne"
    "rror_code\030\004 \001(\t\022\025\n\rerror_message\030\005 \001(\t\022\021"
    "\n\ttimestamp\030\006 \001(\t\022@\n\010metadata\030\007 \003(\0132..se"
    "igr.network.NetworkErrorEvent.MetadataEn"
    "try\022\025\n\rauto_resolved\030\010 \001(\010\022\026\n\016retry_atte"
    "mpts\030\t \001(\005\032/\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t"
    "\022\r\n\005value\030\002 \001(\t:\0028\001\"\315\001\n\024NetworkStatusReq"
    "uest\022\022\n\nrequest_id\030\001 \001(\t\022\021\n\thyphen_id\030\002 "
    "\001(\t\022A\n\007filters\030\003 \003(\01320.seigr.network.Net"
    "workStatusRequest.FiltersEntry\022\033\n\023includ"
    "e_diagnostics\030\004 \001(\010\032.\n\014FiltersEntry\022\013\n\003k"
    "ey\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\344\001\n\025NetworkS"
    "tatusResponse\022\022\n\nrequest_id\030\001 \001(\t\022\021\n\thyp"
    "hen_id\030\002 \001(\t\022\016\n\006status\030\003 \001(\t\022J\n\013diagnost"
    "ics\030\004 \003(\01325.seigr.network.NetworkStatusR"
    "esponse.DiagnosticsEntry\022\024\n\014last_updated"
    "\030\005 \001(\t\0322\n\020DiagnosticsEntry\022\013\n\003key\030\001 \001(\t\022"
    "\r\n\005value\030\002 \001(\t:\0028\001\"\201\002\n\023NetworkOperationL"
    "og\022\016\n\006log_id\030\001 \001(\t\022\016\n\006action\030\002 \001(\t\022\021\n\tti"
    "mestamp\030\003 \001(\t\022\030\n\020source_hyphen_id\030\004 \001(\t\022"
    "\030\n\020target_hyphen_id\030\005 \001(\t\022\016\n\006status\030\006 \001("
    "\t\022B\n\010metadata\030\007 \003(\01320.seigr.network.Netw"
    "orkOperationLog.MetadataEntry\032/\n\rMetadat"
    "aEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\244"
    "\002\n\031NetworkPerformanceSummary\022\022\n\nsummary_"
    "id\030\001 \001(\t\022!\n\031avg_bandwidth_utilization\030\002 "
    "\001(\002\022\031\n\021avg_response_time\030\003 \001(\002\022!\n\031total_"
    "data_transferred_mb\030\004 \001(\005\022Y\n\021performance"
    "_notes\030\005 \003(\0132>.seigr.network.NetworkPerf"
    "ormanceSummary.PerformanceNotesEntry\0327\n\025"
    "PerformanceNotesEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005va"
    "lue\030\002 \001(\t:\0028\001\"\216\001\n\030ProtocolCompatibilityL"
    "og\022\021\n\thyphen_id\030\001 \001(\t\022\030\n\020protocol_versio"
    "n\030\002 \001(\t\022\033\n\023compatible_versions\030\003 \003(\t\022\025\n\r"
    "is_compatible\030\004 \001(\010\022\021\n\ttimestamp\030\005 \001(\t*\332"
    "\001\n\017NetworkProtocol\022\026\n\022PROTOCOL_UNDEFINED"
    "\020\000\022\020\n\014PROTOCOL_TCP\020\001\022\020\n\014PROTOCOL_UDP\020\002\022\021"
    "\n\rPROTOCOL_IPFS\020\003\022\023\n\017PROTOCOL_HYPHEN\020\004\022\021"
    "\n\rPROTOCOL_HTTP\020\005\022\020\n\014PROTOCOL_P2P\020\006\022\035\n\031P"
    "ROTOCOL_ADAPTIVE_LAYERED\020\007\022\037\n\033PROTOCOL_S"
    "ENARY_COMPRESSION\020\010*\325\001\n\014HyphenStatus\022\033\n\027"
    "HYPHEN_STATUS_UNDEFINED\020\000\022\021\n\rHYPHEN_ONLI"
    "NE\020\001\022\022\n\016HYPHEN_OFFLINE\020\002\022\026\n\022HYPHEN_MAINT"
    "ENANCE\020\003\022\023\n\017HYPHEN_DEGRADED\020\004\022\026\n\022HYPHEN_"
    "UNREACHABLE\020\005\022\036\n\032HYPHEN_ADAPTIVE_SCALE_D"
    "OWN\020\006\022\034\n\030HYPHEN_ADAPTIVE_SCALE_UP\020\007b\006pro"
    "to3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_network_2eproto_deps[1] =
    {
        &::descriptor_table_common_2eproto,
};
static ::absl::once_flag descriptor_table_network_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_network_2eproto = {
    false,
    false,
    4803,
    descriptor_table_protodef_network_2eproto,
    "network.proto",
    &descriptor_table_network_2eproto_once,
    descriptor_table_network_2eproto_deps,
    1,
    25,
    schemas,
    file_default_instances,
    TableStruct_network_2eproto::offsets,
    file_level_enum_descriptors_network_2eproto,
    file_level_service_descriptors_network_2eproto,
};
namespace seigr {
namespace network {
const ::google::protobuf::EnumDescriptor* NetworkProtocol_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_network_2eproto);
  return file_level_enum_descriptors_network_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t NetworkProtocol_internal_data_[] = {
    589824u, 0u, };
bool NetworkProtocol_IsValid(int value) {
  return 0 <= value && value <= 8;
}
const ::google::protobuf::EnumDescriptor* HyphenStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_network_2eproto);
  return file_level_enum_descriptors_network_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t HyphenStatus_internal_data_[] = {
    524288u, 0u, };
bool HyphenStatus_IsValid(int value) {
  return 0 <= value && value <= 7;
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              NetworkHyphen_MetadataEntry_DoNotUse::NetworkHyphen_MetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              NetworkHyphen_MetadataEntry_DoNotUse::NetworkHyphen_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              NetworkHyphen_MetadataEntry_DoNotUse::NetworkHyphen_MetadataEntry_DoNotUse() : SuperType() {}
              NetworkHyphen_MetadataEntry_DoNotUse::NetworkHyphen_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* NetworkHyphen_MetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) NetworkHyphen_MetadataEntry_DoNotUse(arena);
              }
              constexpr auto NetworkHyphen_MetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(NetworkHyphen_MetadataEntry_DoNotUse),
                                                          alignof(NetworkHyphen_MetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull NetworkHyphen_MetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_NetworkHyphen_MetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &NetworkHyphen_MetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<NetworkHyphen_MetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &NetworkHyphen_MetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &NetworkHyphen_MetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(NetworkHyphen_MetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &NetworkHyphen_MetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_network_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* NetworkHyphen_MetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 58, 2> NetworkHyphen_MetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NetworkHyphen_MetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::network::NetworkHyphen_MetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkHyphen_MetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkHyphen_MetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(NetworkHyphen_MetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(NetworkHyphen_MetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\51\3\5\0\0\0\0\0"
    "seigr.network.NetworkHyphen.MetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class NetworkHyphen::_Internal {
 public:
};

NetworkHyphen::NetworkHyphen(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.network.NetworkHyphen)
}
inline PROTOBUF_NDEBUG_INLINE NetworkHyphen::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::network::NetworkHyphen& from_msg)
      : supported_protocols_{visibility, arena, from.supported_protocols_},
        _supported_protocols_cached_byte_size_{0},
        metadata_{visibility, arena, from.metadata_},
        hyphen_id_(arena, from.hyphen_id_),
        ip_address_(arena, from.ip_address_),
        last_seen_(arena, from.last_seen_),
        adaptive_scaling_status_(arena, from.adaptive_scaling_status_),
        _cached_size_{0} {}

NetworkHyphen::NetworkHyphen(
    ::google::protobuf::Arena* arena,
    const NetworkHyphen& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NetworkHyphen* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, port_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, port_),
           offsetof(Impl_, available_bandwidth_mbps_) -
               offsetof(Impl_, port_) +
               sizeof(Impl_::available_bandwidth_mbps_));

  // @@protoc_insertion_point(copy_constructor:seigr.network.NetworkHyphen)
}
inline PROTOBUF_NDEBUG_INLINE NetworkHyphen::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : supported_protocols_{visibility, arena},
        _supported_protocols_cached_byte_size_{0},
        metadata_{visibility, arena},
        hyphen_id_(arena),
        ip_address_(arena),
        last_seen_(arena),
        adaptive_scaling_status_(arena),
        _cached_size_{0} {}

inline void NetworkHyphen::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, port_),
           0,
           offsetof(Impl_, available_bandwidth_mbps_) -
               offsetof(Impl_, port_) +
               sizeof(Impl_::available_bandwidth_mbps_));
}
NetworkHyphen::~NetworkHyphen() {
  // @@protoc_insertion_point(destructor:seigr.network.NetworkHyphen)
  SharedDtor(*this);
}
inline void NetworkHyphen::SharedDtor(MessageLite& self) {
  NetworkHyphen& this_ = static_cast<NetworkHyphen&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.hyphen_id_.Destroy();
  this_._impl_.ip_address_.Destroy();
  this_._impl_.last_seen_.Destroy();
  this_._impl_.adaptive_scaling_status_.Destroy();
  this_._impl_.~Impl_();
}

inline void* NetworkHyphen::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) NetworkHyphen(arena);
}
constexpr auto NetworkHyphen::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(NetworkHyphen, _impl_.supported_protocols_) +
          decltype(NetworkHyphen::_impl_.supported_protocols_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(NetworkHyphen, _impl_.metadata_) +
          decltype(NetworkHyphen::_impl_.metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(NetworkHyphen, _impl_.metadata_) +
          decltype(NetworkHyphen::_impl_.metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(NetworkHyphen), alignof(NetworkHyphen), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&NetworkHyphen::PlacementNew_,
                                 sizeof(NetworkHyphen),
                                 alignof(NetworkHyphen));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull NetworkHyphen::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_NetworkHyphen_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &NetworkHyphen::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<NetworkHyphen>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &NetworkHyphen::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<NetworkHyphen>(), &NetworkHyphen::ByteSizeLong,
            &NetworkHyphen::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(NetworkHyphen, _impl_._cached_size_),
        false,
    },
    &NetworkHyphen::kDescriptorMethods,
    &descriptor_table_network_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* NetworkHyphen::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 12, 1, 103, 2> NetworkHyphen::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    12, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963200,  // skipmap
    offsetof(decltype(_table_), field_entries),
    12,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::network::NetworkHyphen>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string hyphen_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkHyphen, _impl_.hyphen_id_)}},
    // string ip_address = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkHyphen, _impl_.ip_address_)}},
    // int32 port = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NetworkHyphen, _impl_.port_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkHyphen, _impl_.port_)}},
    // .seigr.network.NetworkProtocol primary_protocol = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NetworkHyphen, _impl_.primary_protocol_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkHyphen, _impl_.primary_protocol_)}},
    // .seigr.network.HyphenStatus status = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NetworkHyphen, _impl_.status_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkHyphen, _impl_.status_)}},
    // repeated .seigr.network.NetworkProtocol supported_protocols = 6;
    {::_pbi::TcParser::FastV32P1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkHyphen, _impl_.supported_protocols_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string last_seen = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkHyphen, _impl_.last_seen_)}},
    // int32 load_percentage = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NetworkHyphen, _impl_.load_percentage_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkHyphen, _impl_.load_percentage_)}},
    // int32 avg_latency_ms = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NetworkHyphen, _impl_.avg_latency_ms_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkHyphen, _impl_.avg_latency_ms_)}},
    // int32 available_bandwidth_mbps = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NetworkHyphen, _impl_.available_bandwidth_mbps_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkHyphen, _impl_.available_bandwidth_mbps_)}},
    // string adaptive_scaling_status = 12;
    {::_pbi::TcParser::FastUS1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkHyphen, _impl_.adaptive_scaling_status_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string hyphen_id = 1;
    {PROTOBUF_FIELD_OFFSET(NetworkHyphen, _impl_.hyphen_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string ip_address = 2;
    {PROTOBUF_FIELD_OFFSET(NetworkHyphen, _impl_.ip_address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 port = 3;
    {PROTOBUF_FIELD_OFFSET(NetworkHyphen, _impl_.port_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .seigr.network.NetworkProtocol primary_protocol = 4;
    {PROTOBUF_FIELD_OFFSET(NetworkHyphen, _impl_.primary_protocol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .seigr.network.HyphenStatus status = 5;
    {PROTOBUF_FIELD_OFFSET(NetworkHyphen, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // repeated .seigr.network.NetworkProtocol supported_protocols = 6;
    {PROTOBUF_FIELD_OFFSET(NetworkHyphen, _impl_.supported_protocols_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // map<string, string> metadata = 7;
    {PROTOBUF_FIELD_OFFSET(NetworkHyphen, _impl_.metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string last_seen = 8;
    {PROTOBUF_FIELD_OFFSET(NetworkHyphen, _impl_.last_seen_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 load_percentage = 9;
    {PROTOBUF_FIELD_OFFSET(NetworkHyphen, _impl_.load_percentage_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 avg_latency_ms = 10;
    {PROTOBUF_FIELD_OFFSET(NetworkHyphen, _impl_.avg_latency_ms_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 available_bandwidth_mbps = 11;
    {PROTOBUF_FIELD_OFFSET(NetworkHyphen, _impl_.available_bandwidth_mbps_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string adaptive_scaling_status = 12;
    {PROTOBUF_FIELD_OFFSET(NetworkHyphen, _impl_.adaptive_scaling_status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(NetworkHyphen()._impl_.metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\33\11\12\0\0\0\0\10\11\0\0\0\27\0\0\0"
    "seigr.network.NetworkHyphen"
    "hyphen_id"
    "ip_address"
    "metadata"
    "last_seen"
    "adaptive_scaling_status"
  }},
};

PROTOBUF_NOINLINE void NetworkHyphen::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.network.NetworkHyphen)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.supported_protocols_.Clear();
  _impl_.metadata_.Clear();
  _impl_.hyphen_id_.ClearToEmpty();
  _impl_.ip_address_.ClearToEmpty();
  _impl_.last_seen_.ClearToEmpty();
  _impl_.adaptive_scaling_status_.ClearToEmpty();
  ::memset(&_impl_.port_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.available_bandwidth_mbps_) -
      reinterpret_cast<char*>(&_impl_.port_)) + sizeof(_impl_.available_bandwidth_mbps_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* NetworkHyphen::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const NetworkHyphen& this_ = static_cast<const NetworkHyphen&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* NetworkHyphen::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const NetworkHyphen& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.network.NetworkHyphen)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string hyphen_id = 1;
          if (!this_._internal_hyphen_id().empty()) {
            const std::string& _s = this_._internal_hyphen_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkHyphen.hyphen_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string ip_address = 2;
          if (!this_._internal_ip_address().empty()) {
            const std::string& _s = this_._internal_ip_address();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkHyphen.ip_address");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // int32 port = 3;
          if (this_._internal_port() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_port(), target);
          }

          // .seigr.network.NetworkProtocol primary_protocol = 4;
          if (this_._internal_primary_protocol() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                4, this_._internal_primary_protocol(), target);
          }

          // .seigr.network.HyphenStatus status = 5;
          if (this_._internal_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                5, this_._internal_status(), target);
          }

          // repeated .seigr.network.NetworkProtocol supported_protocols = 6;
          {
            std::size_t byte_size =
                                              this_._impl_._supported_protocols_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteEnumPacked(
                  6, this_._internal_supported_protocols(), byte_size, target);
            }
          }

          // map<string, string> metadata = 7;
          if (!this_._internal_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkHyphen.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkHyphen.metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkHyphen.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkHyphen.metadata");
              }
            }
          }

          // string last_seen = 8;
          if (!this_._internal_last_seen().empty()) {
            const std::string& _s = this_._internal_last_seen();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkHyphen.last_seen");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          // int32 load_percentage = 9;
          if (this_._internal_load_percentage() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<9>(
                    stream, this_._internal_load_percentage(), target);
          }

          // int32 avg_latency_ms = 10;
          if (this_._internal_avg_latency_ms() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<10>(
                    stream, this_._internal_avg_latency_ms(), target);
          }

          // int32 available_bandwidth_mbps = 11;
          if (this_._internal_available_bandwidth_mbps() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<11>(
                    stream, this_._internal_available_bandwidth_mbps(), target);
          }

          // string adaptive_scaling_status = 12;
          if (!this_._internal_adaptive_scaling_status().empty()) {
            const std::string& _s = this_._internal_adaptive_scaling_status();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkHyphen.adaptive_scaling_status");
            target = stream->WriteStringMaybeAliased(12, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.network.NetworkHyphen)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t NetworkHyphen::ByteSizeLong(const MessageLite& base) {
          const NetworkHyphen& this_ = static_cast<const NetworkHyphen&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t NetworkHyphen::ByteSizeLong() const {
          const NetworkHyphen& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.network.NetworkHyphen)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .seigr.network.NetworkProtocol supported_protocols = 6;
            {
              total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
                  this_._internal_supported_protocols(), 1, this_._impl_._supported_protocols_cached_byte_size_);
            }
            // map<string, string> metadata = 7;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_metadata_size());
              for (const auto& entry : this_._internal_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string hyphen_id = 1;
            if (!this_._internal_hyphen_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_hyphen_id());
            }
            // string ip_address = 2;
            if (!this_._internal_ip_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_ip_address());
            }
            // string last_seen = 8;
            if (!this_._internal_last_seen().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_last_seen());
            }
            // string adaptive_scaling_status = 12;
            if (!this_._internal_adaptive_scaling_status().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_adaptive_scaling_status());
            }
            // int32 port = 3;
            if (this_._internal_port() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_port());
            }
            // .seigr.network.NetworkProtocol primary_protocol = 4;
            if (this_._internal_primary_protocol() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_primary_protocol());
            }
            // .seigr.network.HyphenStatus status = 5;
            if (this_._internal_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
            }
            // int32 load_percentage = 9;
            if (this_._internal_load_percentage() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_load_percentage());
            }
            // int32 avg_latency_ms = 10;
            if (this_._internal_avg_latency_ms() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_avg_latency_ms());
            }
            // int32 available_bandwidth_mbps = 11;
            if (this_._internal_available_bandwidth_mbps() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_available_bandwidth_mbps());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void NetworkHyphen::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NetworkHyphen*>(&to_msg);
  auto& from = static_cast<const NetworkHyphen&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.network.NetworkHyphen)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_supported_protocols()->MergeFrom(from._internal_supported_protocols());
  _this->_impl_.metadata_.MergeFrom(from._impl_.metadata_);
  if (!from._internal_hyphen_id().empty()) {
    _this->_internal_set_hyphen_id(from._internal_hyphen_id());
  }
  if (!from._internal_ip_address().empty()) {
    _this->_internal_set_ip_address(from._internal_ip_address());
  }
  if (!from._internal_last_seen().empty()) {
    _this->_internal_set_last_seen(from._internal_last_seen());
  }
  if (!from._internal_adaptive_scaling_status().empty()) {
    _this->_internal_set_adaptive_scaling_status(from._internal_adaptive_scaling_status());
  }
  if (from._internal_port() != 0) {
    _this->_impl_.port_ = from._impl_.port_;
  }
  if (from._internal_primary_protocol() != 0) {
    _this->_impl_.primary_protocol_ = from._impl_.primary_protocol_;
  }
  if (from._internal_status() != 0) {
    _this->_impl_.status_ = from._impl_.status_;
  }
  if (from._internal_load_percentage() != 0) {
    _this->_impl_.load_percentage_ = from._impl_.load_percentage_;
  }
  if (from._internal_avg_latency_ms() != 0) {
    _this->_impl_.avg_latency_ms_ = from._impl_.avg_latency_ms_;
  }
  if (from._internal_available_bandwidth_mbps() != 0) {
    _this->_impl_.available_bandwidth_mbps_ = from._impl_.available_bandwidth_mbps_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NetworkHyphen::CopyFrom(const NetworkHyphen& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.network.NetworkHyphen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NetworkHyphen::InternalSwap(NetworkHyphen* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.supported_protocols_.InternalSwap(&other->_impl_.supported_protocols_);
  _impl_.metadata_.InternalSwap(&other->_impl_.metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hyphen_id_, &other->_impl_.hyphen_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ip_address_, &other->_impl_.ip_address_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.last_seen_, &other->_impl_.last_seen_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.adaptive_scaling_status_, &other->_impl_.adaptive_scaling_status_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NetworkHyphen, _impl_.available_bandwidth_mbps_)
      + sizeof(NetworkHyphen::_impl_.available_bandwidth_mbps_)
      - PROTOBUF_FIELD_OFFSET(NetworkHyphen, _impl_.port_)>(
          reinterpret_cast<char*>(&_impl_.port_),
          reinterpret_cast<char*>(&other->_impl_.port_));
}

::google::protobuf::Metadata NetworkHyphen::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              PeerConnection_MetadataEntry_DoNotUse::PeerConnection_MetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              PeerConnection_MetadataEntry_DoNotUse::PeerConnection_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              PeerConnection_MetadataEntry_DoNotUse::PeerConnection_MetadataEntry_DoNotUse() : SuperType() {}
              PeerConnection_MetadataEntry_DoNotUse::PeerConnection_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* PeerConnection_MetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) PeerConnection_MetadataEntry_DoNotUse(arena);
              }
              constexpr auto PeerConnection_MetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PeerConnection_MetadataEntry_DoNotUse),
                                                          alignof(PeerConnection_MetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull PeerConnection_MetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_PeerConnection_MetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &PeerConnection_MetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<PeerConnection_MetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &PeerConnection_MetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &PeerConnection_MetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(PeerConnection_MetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &PeerConnection_MetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_network_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* PeerConnection_MetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 59, 2> PeerConnection_MetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PeerConnection_MetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::network::PeerConnection_MetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PeerConnection_MetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PeerConnection_MetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(PeerConnection_MetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(PeerConnection_MetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\52\3\5\0\0\0\0\0"
    "seigr.network.PeerConnection.MetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class PeerConnection::_Internal {
 public:
};

PeerConnection::PeerConnection(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.network.PeerConnection)
}
inline PROTOBUF_NDEBUG_INLINE PeerConnection::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::network::PeerConnection& from_msg)
      : metadata_{visibility, arena, from.metadata_},
        connection_id_(arena, from.connection_id_),
        source_hyphen_id_(arena, from.source_hyphen_id_),
        target_hyphen_id_(arena, from.target_hyphen_id_),
        status_(arena, from.status_),
        created_at_(arena, from.created_at_),
        last_updated_(arena, from.last_updated_),
        _cached_size_{0} {}

PeerConnection::PeerConnection(
    ::google::protobuf::Arena* arena,
    const PeerConnection& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PeerConnection* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, protocol_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, protocol_),
           offsetof(Impl_, congestion_level_) -
               offsetof(Impl_, protocol_) +
               sizeof(Impl_::congestion_level_));

  // @@protoc_insertion_point(copy_constructor:seigr.network.PeerConnection)
}
inline PROTOBUF_NDEBUG_INLINE PeerConnection::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : metadata_{visibility, arena},
        connection_id_(arena),
        source_hyphen_id_(arena),
        target_hyphen_id_(arena),
        status_(arena),
        created_at_(arena),
        last_updated_(arena),
        _cached_size_{0} {}

inline void PeerConnection::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, protocol_),
           0,
           offsetof(Impl_, congestion_level_) -
               offsetof(Impl_, protocol_) +
               sizeof(Impl_::congestion_level_));
}
PeerConnection::~PeerConnection() {
  // @@protoc_insertion_point(destructor:seigr.network.PeerConnection)
  SharedDtor(*this);
}
inline void PeerConnection::SharedDtor(MessageLite& self) {
  PeerConnection& this_ = static_cast<PeerConnection&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.connection_id_.Destroy();
  this_._impl_.source_hyphen_id_.Destroy();
  this_._impl_.target_hyphen_id_.Destroy();
  this_._impl_.status_.Destroy();
  this_._impl_.created_at_.Destroy();
  this_._impl_.last_updated_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PeerConnection::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PeerConnection(arena);
}
constexpr auto PeerConnection::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(PeerConnection, _impl_.metadata_) +
          decltype(PeerConnection::_impl_.metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(PeerConnection, _impl_.metadata_) +
          decltype(PeerConnection::_impl_.metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(PeerConnection), alignof(PeerConnection), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&PeerConnection::PlacementNew_,
                                 sizeof(PeerConnection),
                                 alignof(PeerConnection));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PeerConnection::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PeerConnection_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PeerConnection::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PeerConnection>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PeerConnection::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PeerConnection>(), &PeerConnection::ByteSizeLong,
            &PeerConnection::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PeerConnection, _impl_._cached_size_),
        false,
    },
    &PeerConnection::kDescriptorMethods,
    &descriptor_table_network_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PeerConnection::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 13, 1, 126, 2> PeerConnection::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    13, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294959104,  // skipmap
    offsetof(decltype(_table_), field_entries),
    13,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::network::PeerConnection>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string connection_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PeerConnection, _impl_.connection_id_)}},
    // string source_hyphen_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PeerConnection, _impl_.source_hyphen_id_)}},
    // string target_hyphen_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(PeerConnection, _impl_.target_hyphen_id_)}},
    // .seigr.network.NetworkProtocol protocol = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PeerConnection, _impl_.protocol_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(PeerConnection, _impl_.protocol_)}},
    // int32 latency_ms = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PeerConnection, _impl_.latency_ms_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(PeerConnection, _impl_.latency_ms_)}},
    // .seigr.common.QoSLevel qos_level = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PeerConnection, _impl_.qos_level_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(PeerConnection, _impl_.qos_level_)}},
    // string status = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(PeerConnection, _impl_.status_)}},
    // string created_at = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(PeerConnection, _impl_.created_at_)}},
    // string last_updated = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(PeerConnection, _impl_.last_updated_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // int64 data_transferred_bytes = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PeerConnection, _impl_.data_transferred_bytes_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(PeerConnection, _impl_.data_transferred_bytes_)}},
    // bool auto_scaled_qos = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PeerConnection, _impl_.auto_scaled_qos_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(PeerConnection, _impl_.auto_scaled_qos_)}},
    // float congestion_level = 13;
    {::_pbi::TcParser::FastF32S1,
     {109, 63, 0, PROTOBUF_FIELD_OFFSET(PeerConnection, _impl_.congestion_level_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string connection_id = 1;
    {PROTOBUF_FIELD_OFFSET(PeerConnection, _impl_.connection_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string source_hyphen_id = 2;
    {PROTOBUF_FIELD_OFFSET(PeerConnection, _impl_.source_hyphen_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string target_hyphen_id = 3;
    {PROTOBUF_FIELD_OFFSET(PeerConnection, _impl_.target_hyphen_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.network.NetworkProtocol protocol = 4;
    {PROTOBUF_FIELD_OFFSET(PeerConnection, _impl_.protocol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // int32 latency_ms = 5;
    {PROTOBUF_FIELD_OFFSET(PeerConnection, _impl_.latency_ms_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .seigr.common.QoSLevel qos_level = 6;
    {PROTOBUF_FIELD_OFFSET(PeerConnection, _impl_.qos_level_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string status = 7;
    {PROTOBUF_FIELD_OFFSET(PeerConnection, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string created_at = 8;
    {PROTOBUF_FIELD_OFFSET(PeerConnection, _impl_.created_at_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string last_updated = 9;
    {PROTOBUF_FIELD_OFFSET(PeerConnection, _impl_.last_updated_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> metadata = 10;
    {PROTOBUF_FIELD_OFFSET(PeerConnection, _impl_.metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // int64 data_transferred_bytes = 11;
    {PROTOBUF_FIELD_OFFSET(PeerConnection, _impl_.data_transferred_bytes_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // bool auto_scaled_qos = 12;
    {PROTOBUF_FIELD_OFFSET(PeerConnection, _impl_.auto_scaled_qos_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // float congestion_level = 13;
    {PROTOBUF_FIELD_OFFSET(PeerConnection, _impl_.congestion_level_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(PeerConnection()._impl_.metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\34\15\20\20\0\0\0\6\12\14\10\0\0\0\0\0"
    "seigr.network.PeerConnection"
    "connection_id"
    "source_hyphen_id"
    "target_hyphen_id"
    "status"
    "created_at"
    "last_updated"
    "metadata"
  }},
};

PROTOBUF_NOINLINE void PeerConnection::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.network.PeerConnection)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.metadata_.Clear();
  _impl_.connection_id_.ClearToEmpty();
  _impl_.source_hyphen_id_.ClearToEmpty();
  _impl_.target_hyphen_id_.ClearToEmpty();
  _impl_.status_.ClearToEmpty();
  _impl_.created_at_.ClearToEmpty();
  _impl_.last_updated_.ClearToEmpty();
  ::memset(&_impl_.protocol_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.congestion_level_) -
      reinterpret_cast<char*>(&_impl_.protocol_)) + sizeof(_impl_.congestion_level_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PeerConnection::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PeerConnection& this_ = static_cast<const PeerConnection&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PeerConnection::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PeerConnection& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.network.PeerConnection)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string connection_id = 1;
          if (!this_._internal_connection_id().empty()) {
            const std::string& _s = this_._internal_connection_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.PeerConnection.connection_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string source_hyphen_id = 2;
          if (!this_._internal_source_hyphen_id().empty()) {
            const std::string& _s = this_._internal_source_hyphen_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.PeerConnection.source_hyphen_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string target_hyphen_id = 3;
          if (!this_._internal_target_hyphen_id().empty()) {
            const std::string& _s = this_._internal_target_hyphen_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.PeerConnection.target_hyphen_id");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // .seigr.network.NetworkProtocol protocol = 4;
          if (this_._internal_protocol() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                4, this_._internal_protocol(), target);
          }

          // int32 latency_ms = 5;
          if (this_._internal_latency_ms() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<5>(
                    stream, this_._internal_latency_ms(), target);
          }

          // .seigr.common.QoSLevel qos_level = 6;
          if (this_._internal_qos_level() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                6, this_._internal_qos_level(), target);
          }

          // string status = 7;
          if (!this_._internal_status().empty()) {
            const std::string& _s = this_._internal_status();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.PeerConnection.status");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // string created_at = 8;
          if (!this_._internal_created_at().empty()) {
            const std::string& _s = this_._internal_created_at();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.PeerConnection.created_at");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          // string last_updated = 9;
          if (!this_._internal_last_updated().empty()) {
            const std::string& _s = this_._internal_last_updated();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.PeerConnection.last_updated");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          // map<string, string> metadata = 10;
          if (!this_._internal_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    10, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.PeerConnection.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.PeerConnection.metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    10, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.PeerConnection.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.PeerConnection.metadata");
              }
            }
          }

          // int64 data_transferred_bytes = 11;
          if (this_._internal_data_transferred_bytes() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<11>(
                    stream, this_._internal_data_transferred_bytes(), target);
          }

          // bool auto_scaled_qos = 12;
          if (this_._internal_auto_scaled_qos() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                12, this_._internal_auto_scaled_qos(), target);
          }

          // float congestion_level = 13;
          if (::absl::bit_cast<::uint32_t>(this_._internal_congestion_level()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                13, this_._internal_congestion_level(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.network.PeerConnection)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PeerConnection::ByteSizeLong(const MessageLite& base) {
          const PeerConnection& this_ = static_cast<const PeerConnection&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PeerConnection::ByteSizeLong() const {
          const PeerConnection& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.network.PeerConnection)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> metadata = 10;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_metadata_size());
              for (const auto& entry : this_._internal_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string connection_id = 1;
            if (!this_._internal_connection_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_connection_id());
            }
            // string source_hyphen_id = 2;
            if (!this_._internal_source_hyphen_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_source_hyphen_id());
            }
            // string target_hyphen_id = 3;
            if (!this_._internal_target_hyphen_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_target_hyphen_id());
            }
            // string status = 7;
            if (!this_._internal_status().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_status());
            }
            // string created_at = 8;
            if (!this_._internal_created_at().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_created_at());
            }
            // string last_updated = 9;
            if (!this_._internal_last_updated().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_last_updated());
            }
            // .seigr.network.NetworkProtocol protocol = 4;
            if (this_._internal_protocol() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_protocol());
            }
            // int32 latency_ms = 5;
            if (this_._internal_latency_ms() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_latency_ms());
            }
            // .seigr.common.QoSLevel qos_level = 6;
            if (this_._internal_qos_level() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_qos_level());
            }
            // bool auto_scaled_qos = 12;
            if (this_._internal_auto_scaled_qos() != 0) {
              total_size += 2;
            }
            // int64 data_transferred_bytes = 11;
            if (this_._internal_data_transferred_bytes() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_data_transferred_bytes());
            }
            // float congestion_level = 13;
            if (::absl::bit_cast<::uint32_t>(this_._internal_congestion_level()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PeerConnection::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PeerConnection*>(&to_msg);
  auto& from = static_cast<const PeerConnection&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.network.PeerConnection)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.metadata_.MergeFrom(from._impl_.metadata_);
  if (!from._internal_connection_id().empty()) {
    _this->_internal_set_connection_id(from._internal_connection_id());
  }
  if (!from._internal_source_hyphen_id().empty()) {
    _this->_internal_set_source_hyphen_id(from._internal_source_hyphen_id());
  }
  if (!from._internal_target_hyphen_id().empty()) {
    _this->_internal_set_target_hyphen_id(from._internal_target_hyphen_id());
  }
  if (!from._internal_status().empty()) {
    _this->_internal_set_status(from._internal_status());
  }
  if (!from._internal_created_at().empty()) {
    _this->_internal_set_created_at(from._internal_created_at());
  }
  if (!from._internal_last_updated().empty()) {
    _this->_internal_set_last_updated(from._internal_last_updated());
  }
  if (from._internal_protocol() != 0) {
    _this->_impl_.protocol_ = from._impl_.protocol_;
  }
  if (from._internal_latency_ms() != 0) {
    _this->_impl_.latency_ms_ = from._impl_.latency_ms_;
  }
  if (from._internal_qos_level() != 0) {
    _this->_impl_.qos_level_ = from._impl_.qos_level_;
  }
  if (from._internal_auto_scaled_qos() != 0) {
    _this->_impl_.auto_scaled_qos_ = from._impl_.auto_scaled_qos_;
  }
  if (from._internal_data_transferred_bytes() != 0) {
    _this->_impl_.data_transferred_bytes_ = from._impl_.data_transferred_bytes_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_congestion_level()) != 0) {
    _this->_impl_.congestion_level_ = from._impl_.congestion_level_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PeerConnection::CopyFrom(const PeerConnection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.network.PeerConnection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PeerConnection::InternalSwap(PeerConnection* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.metadata_.InternalSwap(&other->_impl_.metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.connection_id_, &other->_impl_.connection_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.source_hyphen_id_, &other->_impl_.source_hyphen_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.target_hyphen_id_, &other->_impl_.target_hyphen_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.status_, &other->_impl_.status_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.created_at_, &other->_impl_.created_at_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.last_updated_, &other->_impl_.last_updated_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PeerConnection, _impl_.congestion_level_)
      + sizeof(PeerConnection::_impl_.congestion_level_)
      - PROTOBUF_FIELD_OFFSET(PeerConnection, _impl_.protocol_)>(
          reinterpret_cast<char*>(&_impl_.protocol_),
          reinterpret_cast<char*>(&other->_impl_.protocol_));
}

::google::protobuf::Metadata PeerConnection::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              NetworkCluster_HyphenStatusCountsEntry_DoNotUse::NetworkCluster_HyphenStatusCountsEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              NetworkCluster_HyphenStatusCountsEntry_DoNotUse::NetworkCluster_HyphenStatusCountsEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              NetworkCluster_HyphenStatusCountsEntry_DoNotUse::NetworkCluster_HyphenStatusCountsEntry_DoNotUse() : SuperType() {}
              NetworkCluster_HyphenStatusCountsEntry_DoNotUse::NetworkCluster_HyphenStatusCountsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* NetworkCluster_HyphenStatusCountsEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) NetworkCluster_HyphenStatusCountsEntry_DoNotUse(arena);
              }
              constexpr auto NetworkCluster_HyphenStatusCountsEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(NetworkCluster_HyphenStatusCountsEntry_DoNotUse),
                                                          alignof(NetworkCluster_HyphenStatusCountsEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull NetworkCluster_HyphenStatusCountsEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_NetworkCluster_HyphenStatusCountsEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &NetworkCluster_HyphenStatusCountsEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<NetworkCluster_HyphenStatusCountsEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &NetworkCluster_HyphenStatusCountsEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &NetworkCluster_HyphenStatusCountsEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(NetworkCluster_HyphenStatusCountsEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &NetworkCluster_HyphenStatusCountsEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_network_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* NetworkCluster_HyphenStatusCountsEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 64, 2> NetworkCluster_HyphenStatusCountsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NetworkCluster_HyphenStatusCountsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::network::NetworkCluster_HyphenStatusCountsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 value = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NetworkCluster_HyphenStatusCountsEntry_DoNotUse, _impl_.value_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkCluster_HyphenStatusCountsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkCluster_HyphenStatusCountsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(NetworkCluster_HyphenStatusCountsEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 value = 2;
    {PROTOBUF_FIELD_OFFSET(NetworkCluster_HyphenStatusCountsEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\64\3\0\0\0\0\0\0"
    "seigr.network.NetworkCluster.HyphenStatusCountsEntry"
    "key"
  }},
};

// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              NetworkCluster_ClusterMetadataEntry_DoNotUse::NetworkCluster_ClusterMetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              NetworkCluster_ClusterMetadataEntry_DoNotUse::NetworkCluster_ClusterMetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              NetworkCluster_ClusterMetadataEntry_DoNotUse::NetworkCluster_ClusterMetadataEntry_DoNotUse() : SuperType() {}
              NetworkCluster_ClusterMetadataEntry_DoNotUse::NetworkCluster_ClusterMetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* NetworkCluster_ClusterMetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) NetworkCluster_ClusterMetadataEntry_DoNotUse(arena);
              }
              constexpr auto NetworkCluster_ClusterMetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(NetworkCluster_ClusterMetadataEntry_DoNotUse),
                                                          alignof(NetworkCluster_ClusterMetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull NetworkCluster_ClusterMetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_NetworkCluster_ClusterMetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &NetworkCluster_ClusterMetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<NetworkCluster_ClusterMetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &NetworkCluster_ClusterMetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &NetworkCluster_ClusterMetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(NetworkCluster_ClusterMetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &NetworkCluster_ClusterMetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_network_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* NetworkCluster_ClusterMetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 66, 2> NetworkCluster_ClusterMetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NetworkCluster_ClusterMetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::network::NetworkCluster_ClusterMetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkCluster_ClusterMetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkCluster_ClusterMetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(NetworkCluster_ClusterMetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(NetworkCluster_ClusterMetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\61\3\5\0\0\0\0\0"
    "seigr.network.NetworkCluster.ClusterMetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class NetworkCluster::_Internal {
 public:
  using HasBits =
      decltype(std::declval<NetworkCluster>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(NetworkCluster, _impl_._has_bits_);
};

void NetworkCluster::clear_health_summary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.health_summary_ != nullptr) _impl_.health_summary_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
NetworkCluster::NetworkCluster(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.network.NetworkCluster)
}
inline PROTOBUF_NDEBUG_INLINE NetworkCluster::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::network::NetworkCluster& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        hyphens_{visibility, arena, from.hyphens_},
        hyphen_status_counts_{visibility, arena, from.hyphen_status_counts_},
        cluster_metadata_{visibility, arena, from.cluster_metadata_},
        cluster_id_(arena, from.cluster_id_),
        last_health_check_(arena, from.last_health_check_),
        health_status_(arena, from.health_status_) {}

NetworkCluster::NetworkCluster(
    ::google::protobuf::Arena* arena,
    const NetworkCluster& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NetworkCluster* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.health_summary_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::seigr::common::NetworkPerformanceSummary>(
                              arena, *from._impl_.health_summary_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, default_qos_level_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, default_qos_level_),
           offsetof(Impl_, load_balancing_factor_) -
               offsetof(Impl_, default_qos_level_) +
               sizeof(Impl_::load_balancing_factor_));

  // @@protoc_insertion_point(copy_constructor:seigr.network.NetworkCluster)
}
inline PROTOBUF_NDEBUG_INLINE NetworkCluster::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        hyphens_{visibility, arena},
        hyphen_status_counts_{visibility, arena},
        cluster_metadata_{visibility, arena},
        cluster_id_(arena),
        last_health_check_(arena),
        health_status_(arena) {}

inline void NetworkCluster::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, health_summary_),
           0,
           offsetof(Impl_, load_balancing_factor_) -
               offsetof(Impl_, health_summary_) +
               sizeof(Impl_::load_balancing_factor_));
}
NetworkCluster::~NetworkCluster() {
  // @@protoc_insertion_point(destructor:seigr.network.NetworkCluster)
  SharedDtor(*this);
}
inline void NetworkCluster::SharedDtor(MessageLite& self) {
  NetworkCluster& this_ = static_cast<NetworkCluster&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.cluster_id_.Destroy();
  this_._impl_.last_health_check_.Destroy();
  this_._impl_.health_status_.Destroy();
  delete this_._impl_.health_summary_;
  this_._impl_.~Impl_();
}

inline void* NetworkCluster::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) NetworkCluster(arena);
}
constexpr auto NetworkCluster::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(NetworkCluster, _impl_.hyphens_) +
          decltype(NetworkCluster::_impl_.hyphens_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(NetworkCluster, _impl_.hyphen_status_counts_) +
          decltype(NetworkCluster::_impl_.hyphen_status_counts_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(NetworkCluster, _impl_.hyphen_status_counts_) +
          decltype(NetworkCluster::_impl_.hyphen_status_counts_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(NetworkCluster, _impl_.cluster_metadata_) +
          decltype(NetworkCluster::_impl_.cluster_metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(NetworkCluster, _impl_.cluster_metadata_) +
          decltype(NetworkCluster::_impl_.cluster_metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(NetworkCluster), alignof(NetworkCluster), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&NetworkCluster::PlacementNew_,
                                 sizeof(NetworkCluster),
                                 alignof(NetworkCluster));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull NetworkCluster::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_NetworkCluster_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &NetworkCluster::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<NetworkCluster>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &NetworkCluster::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<NetworkCluster>(), &NetworkCluster::ByteSizeLong,
            &NetworkCluster::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(NetworkCluster, _impl_._cached_size_),
        false,
    },
    &NetworkCluster::kDescriptorMethods,
    &descriptor_table_network_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* NetworkCluster::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 4, 121, 2> NetworkCluster::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NetworkCluster, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::network::NetworkCluster>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string cluster_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkCluster, _impl_.cluster_id_)}},
    // repeated .seigr.network.NetworkHyphen hyphens = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkCluster, _impl_.hyphens_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .seigr.common.QoSLevel default_qos_level = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NetworkCluster, _impl_.default_qos_level_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkCluster, _impl_.default_qos_level_)}},
    // string last_health_check = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkCluster, _impl_.last_health_check_)}},
    // string health_status = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkCluster, _impl_.health_status_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .seigr.common.NetworkPerformanceSummary health_summary = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 0, 1, PROTOBUF_FIELD_OFFSET(NetworkCluster, _impl_.health_summary_)}},
    // float load_balancing_factor = 9;
    {::_pbi::TcParser::FastF32S1,
     {77, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkCluster, _impl_.load_balancing_factor_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string cluster_id = 1;
    {PROTOBUF_FIELD_OFFSET(NetworkCluster, _impl_.cluster_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .seigr.network.NetworkHyphen hyphens = 2;
    {PROTOBUF_FIELD_OFFSET(NetworkCluster, _impl_.hyphens_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<string, int32> hyphen_status_counts = 3;
    {PROTOBUF_FIELD_OFFSET(NetworkCluster, _impl_.hyphen_status_counts_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // .seigr.common.QoSLevel default_qos_level = 4;
    {PROTOBUF_FIELD_OFFSET(NetworkCluster, _impl_.default_qos_level_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string last_health_check = 5;
    {PROTOBUF_FIELD_OFFSET(NetworkCluster, _impl_.last_health_check_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string health_status = 6;
    {PROTOBUF_FIELD_OFFSET(NetworkCluster, _impl_.health_status_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> cluster_metadata = 7;
    {PROTOBUF_FIELD_OFFSET(NetworkCluster, _impl_.cluster_metadata_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // .seigr.common.NetworkPerformanceSummary health_summary = 8;
    {PROTOBUF_FIELD_OFFSET(NetworkCluster, _impl_.health_summary_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // float load_balancing_factor = 9;
    {PROTOBUF_FIELD_OFFSET(NetworkCluster, _impl_.load_balancing_factor_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }}, {{
    {::_pbi::TcParser::GetTable<::seigr::network::NetworkHyphen>()},
    {::_pbi::TcParser::GetTable<::seigr::common::NetworkPerformanceSummary>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(NetworkCluster()._impl_.hyphen_status_counts_)>(
        1, 0, 0, 9,
        5)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(NetworkCluster()._impl_.cluster_metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\34\12\0\24\0\21\15\20\0\0\0\0\0\0\0\0"
    "seigr.network.NetworkCluster"
    "cluster_id"
    "hyphen_status_counts"
    "last_health_check"
    "health_status"
    "cluster_metadata"
  }},
};

PROTOBUF_NOINLINE void NetworkCluster::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.network.NetworkCluster)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.hyphens_.Clear();
  _impl_.hyphen_status_counts_.Clear();
  _impl_.cluster_metadata_.Clear();
  _impl_.cluster_id_.ClearToEmpty();
  _impl_.last_health_check_.ClearToEmpty();
  _impl_.health_status_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.health_summary_ != nullptr);
    _impl_.health_summary_->Clear();
  }
  ::memset(&_impl_.default_qos_level_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.load_balancing_factor_) -
      reinterpret_cast<char*>(&_impl_.default_qos_level_)) + sizeof(_impl_.load_balancing_factor_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* NetworkCluster::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const NetworkCluster& this_ = static_cast<const NetworkCluster&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* NetworkCluster::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const NetworkCluster& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.network.NetworkCluster)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string cluster_id = 1;
          if (!this_._internal_cluster_id().empty()) {
            const std::string& _s = this_._internal_cluster_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkCluster.cluster_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated .seigr.network.NetworkHyphen hyphens = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_hyphens_size());
               i < n; i++) {
            const auto& repfield = this_._internal_hyphens().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // map<string, int32> hyphen_status_counts = 3;
          if (!this_._internal_hyphen_status_counts().empty()) {
            using MapType = ::google::protobuf::Map<std::string, ::int32_t>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, ::int32_t,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_INT32>;
            const auto& field = this_._internal_hyphen_status_counts();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    3, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkCluster.hyphen_status_counts");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    3, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkCluster.hyphen_status_counts");
              }
            }
          }

          // .seigr.common.QoSLevel default_qos_level = 4;
          if (this_._internal_default_qos_level() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                4, this_._internal_default_qos_level(), target);
          }

          // string last_health_check = 5;
          if (!this_._internal_last_health_check().empty()) {
            const std::string& _s = this_._internal_last_health_check();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkCluster.last_health_check");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string health_status = 6;
          if (!this_._internal_health_status().empty()) {
            const std::string& _s = this_._internal_health_status();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkCluster.health_status");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // map<string, string> cluster_metadata = 7;
          if (!this_._internal_cluster_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_cluster_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkCluster.cluster_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkCluster.cluster_metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkCluster.cluster_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkCluster.cluster_metadata");
              }
            }
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .seigr.common.NetworkPerformanceSummary health_summary = 8;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                8, *this_._impl_.health_summary_, this_._impl_.health_summary_->GetCachedSize(), target,
                stream);
          }

          // float load_balancing_factor = 9;
          if (::absl::bit_cast<::uint32_t>(this_._internal_load_balancing_factor()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                9, this_._internal_load_balancing_factor(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.network.NetworkCluster)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t NetworkCluster::ByteSizeLong(const MessageLite& base) {
          const NetworkCluster& this_ = static_cast<const NetworkCluster&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t NetworkCluster::ByteSizeLong() const {
          const NetworkCluster& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.network.NetworkCluster)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .seigr.network.NetworkHyphen hyphens = 2;
            {
              total_size += 1UL * this_._internal_hyphens_size();
              for (const auto& msg : this_._internal_hyphens()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // map<string, int32> hyphen_status_counts = 3;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_hyphen_status_counts_size());
              for (const auto& entry : this_._internal_hyphen_status_counts()) {
                total_size += _pbi::MapEntryFuncs<std::string, ::int32_t,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_INT32>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // map<string, string> cluster_metadata = 7;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_cluster_metadata_size());
              for (const auto& entry : this_._internal_cluster_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string cluster_id = 1;
            if (!this_._internal_cluster_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_cluster_id());
            }
            // string last_health_check = 5;
            if (!this_._internal_last_health_check().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_last_health_check());
            }
            // string health_status = 6;
            if (!this_._internal_health_status().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_health_status());
            }
          }
           {
            // .seigr.common.NetworkPerformanceSummary health_summary = 8;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.health_summary_);
            }
          }
           {
            // .seigr.common.QoSLevel default_qos_level = 4;
            if (this_._internal_default_qos_level() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_default_qos_level());
            }
            // float load_balancing_factor = 9;
            if (::absl::bit_cast<::uint32_t>(this_._internal_load_balancing_factor()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void NetworkCluster::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NetworkCluster*>(&to_msg);
  auto& from = static_cast<const NetworkCluster&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.network.NetworkCluster)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_hyphens()->MergeFrom(
      from._internal_hyphens());
  _this->_impl_.hyphen_status_counts_.MergeFrom(from._impl_.hyphen_status_counts_);
  _this->_impl_.cluster_metadata_.MergeFrom(from._impl_.cluster_metadata_);
  if (!from._internal_cluster_id().empty()) {
    _this->_internal_set_cluster_id(from._internal_cluster_id());
  }
  if (!from._internal_last_health_check().empty()) {
    _this->_internal_set_last_health_check(from._internal_last_health_check());
  }
  if (!from._internal_health_status().empty()) {
    _this->_internal_set_health_status(from._internal_health_status());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.health_summary_ != nullptr);
    if (_this->_impl_.health_summary_ == nullptr) {
      _this->_impl_.health_summary_ =
          ::google::protobuf::Message::CopyConstruct<::seigr::common::NetworkPerformanceSummary>(arena, *from._impl_.health_summary_);
    } else {
      _this->_impl_.health_summary_->MergeFrom(*from._impl_.health_summary_);
    }
  }
  if (from._internal_default_qos_level() != 0) {
    _this->_impl_.default_qos_level_ = from._impl_.default_qos_level_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_load_balancing_factor()) != 0) {
    _this->_impl_.load_balancing_factor_ = from._impl_.load_balancing_factor_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NetworkCluster::CopyFrom(const NetworkCluster& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.network.NetworkCluster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NetworkCluster::InternalSwap(NetworkCluster* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.hyphens_.InternalSwap(&other->_impl_.hyphens_);
  _impl_.hyphen_status_counts_.InternalSwap(&other->_impl_.hyphen_status_counts_);
  _impl_.cluster_metadata_.InternalSwap(&other->_impl_.cluster_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cluster_id_, &other->_impl_.cluster_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.last_health_check_, &other->_impl_.last_health_check_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.health_status_, &other->_impl_.health_status_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NetworkCluster, _impl_.load_balancing_factor_)
      + sizeof(NetworkCluster::_impl_.load_balancing_factor_)
      - PROTOBUF_FIELD_OFFSET(NetworkCluster, _impl_.health_summary_)>(
          reinterpret_cast<char*>(&_impl_.health_summary_),
          reinterpret_cast<char*>(&other->_impl_.health_summary_));
}

::google::protobuf::Metadata NetworkCluster::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              NetworkConfig_ConfigMetadataEntry_DoNotUse::NetworkConfig_ConfigMetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              NetworkConfig_ConfigMetadataEntry_DoNotUse::NetworkConfig_ConfigMetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              NetworkConfig_ConfigMetadataEntry_DoNotUse::NetworkConfig_ConfigMetadataEntry_DoNotUse() : SuperType() {}
              NetworkConfig_ConfigMetadataEntry_DoNotUse::NetworkConfig_ConfigMetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* NetworkConfig_ConfigMetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) NetworkConfig_ConfigMetadataEntry_DoNotUse(arena);
              }
              constexpr auto NetworkConfig_ConfigMetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(NetworkConfig_ConfigMetadataEntry_DoNotUse),
                                                          alignof(NetworkConfig_ConfigMetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull NetworkConfig_ConfigMetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_NetworkConfig_ConfigMetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &NetworkConfig_ConfigMetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<NetworkConfig_ConfigMetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &NetworkConfig_ConfigMetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &NetworkConfig_ConfigMetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(NetworkConfig_ConfigMetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &NetworkConfig_ConfigMetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_network_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* NetworkConfig_ConfigMetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 64, 2> NetworkConfig_ConfigMetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NetworkConfig_ConfigMetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::network::NetworkConfig_ConfigMetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkConfig_ConfigMetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkConfig_ConfigMetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(NetworkConfig_ConfigMetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(NetworkConfig_ConfigMetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\57\3\5\0\0\0\0\0"
    "seigr.network.NetworkConfig.ConfigMetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class NetworkConfig::_Internal {
 public:
};

NetworkConfig::NetworkConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.network.NetworkConfig)
}
inline PROTOBUF_NDEBUG_INLINE NetworkConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::network::NetworkConfig& from_msg)
      : allowed_protocols_{visibility, arena, from.allowed_protocols_},
        _allowed_protocols_cached_byte_size_{0},
        config_metadata_{visibility, arena, from.config_metadata_},
        fallback_protocol_(arena, from.fallback_protocol_),
        _cached_size_{0} {}

NetworkConfig::NetworkConfig(
    ::google::protobuf::Arena* arena,
    const NetworkConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NetworkConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, max_connections_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, max_connections_),
           offsetof(Impl_, max_packet_loss_threshold_) -
               offsetof(Impl_, max_connections_) +
               sizeof(Impl_::max_packet_loss_threshold_));

  // @@protoc_insertion_point(copy_constructor:seigr.network.NetworkConfig)
}
inline PROTOBUF_NDEBUG_INLINE NetworkConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : allowed_protocols_{visibility, arena},
        _allowed_protocols_cached_byte_size_{0},
        config_metadata_{visibility, arena},
        fallback_protocol_(arena),
        _cached_size_{0} {}

inline void NetworkConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, max_connections_),
           0,
           offsetof(Impl_, max_packet_loss_threshold_) -
               offsetof(Impl_, max_connections_) +
               sizeof(Impl_::max_packet_loss_threshold_));
}
NetworkConfig::~NetworkConfig() {
  // @@protoc_insertion_point(destructor:seigr.network.NetworkConfig)
  SharedDtor(*this);
}
inline void NetworkConfig::SharedDtor(MessageLite& self) {
  NetworkConfig& this_ = static_cast<NetworkConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.fallback_protocol_.Destroy();
  this_._impl_.~Impl_();
}

inline void* NetworkConfig::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) NetworkConfig(arena);
}
constexpr auto NetworkConfig::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(NetworkConfig, _impl_.allowed_protocols_) +
          decltype(NetworkConfig::_impl_.allowed_protocols_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(NetworkConfig, _impl_.config_metadata_) +
          decltype(NetworkConfig::_impl_.config_metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(NetworkConfig, _impl_.config_metadata_) +
          decltype(NetworkConfig::_impl_.config_metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(NetworkConfig), alignof(NetworkConfig), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&NetworkConfig::PlacementNew_,
                                 sizeof(NetworkConfig),
                                 alignof(NetworkConfig));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull NetworkConfig::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_NetworkConfig_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &NetworkConfig::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<NetworkConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &NetworkConfig::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<NetworkConfig>(), &NetworkConfig::ByteSizeLong,
            &NetworkConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(NetworkConfig, _impl_._cached_size_),
        false,
    },
    &NetworkConfig::kDescriptorMethods,
    &descriptor_table_network_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* NetworkConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 1, 76, 2> NetworkConfig::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::network::NetworkConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 max_connections = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NetworkConfig, _impl_.max_connections_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkConfig, _impl_.max_connections_)}},
    // int32 retry_limit = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NetworkConfig, _impl_.retry_limit_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkConfig, _impl_.retry_limit_)}},
    // int32 timeout_seconds = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NetworkConfig, _impl_.timeout_seconds_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkConfig, _impl_.timeout_seconds_)}},
    // bool enable_encryption = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(NetworkConfig, _impl_.enable_encryption_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkConfig, _impl_.enable_encryption_)}},
    // .seigr.common.QoSLevel default_qos = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NetworkConfig, _impl_.default_qos_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkConfig, _impl_.default_qos_)}},
    // repeated .seigr.network.NetworkProtocol allowed_protocols = 6;
    {::_pbi::TcParser::FastV32P1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkConfig, _impl_.allowed_protocols_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // int32 max_packet_loss_threshold = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NetworkConfig, _impl_.max_packet_loss_threshold_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkConfig, _impl_.max_packet_loss_threshold_)}},
    // bool enable_dynamic_qos_scaling = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(NetworkConfig, _impl_.enable_dynamic_qos_scaling_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkConfig, _impl_.enable_dynamic_qos_scaling_)}},
    // string fallback_protocol = 10;
    {::_pbi::TcParser::FastUS1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkConfig, _impl_.fallback_protocol_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 max_connections = 1;
    {PROTOBUF_FIELD_OFFSET(NetworkConfig, _impl_.max_connections_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 retry_limit = 2;
    {PROTOBUF_FIELD_OFFSET(NetworkConfig, _impl_.retry_limit_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 timeout_seconds = 3;
    {PROTOBUF_FIELD_OFFSET(NetworkConfig, _impl_.timeout_seconds_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool enable_encryption = 4;
    {PROTOBUF_FIELD_OFFSET(NetworkConfig, _impl_.enable_encryption_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .seigr.common.QoSLevel default_qos = 5;
    {PROTOBUF_FIELD_OFFSET(NetworkConfig, _impl_.default_qos_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // repeated .seigr.network.NetworkProtocol allowed_protocols = 6;
    {PROTOBUF_FIELD_OFFSET(NetworkConfig, _impl_.allowed_protocols_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // map<string, string> config_metadata = 7;
    {PROTOBUF_FIELD_OFFSET(NetworkConfig, _impl_.config_metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // int32 max_packet_loss_threshold = 8;
    {PROTOBUF_FIELD_OFFSET(NetworkConfig, _impl_.max_packet_loss_threshold_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool enable_dynamic_qos_scaling = 9;
    {PROTOBUF_FIELD_OFFSET(NetworkConfig, _impl_.enable_dynamic_qos_scaling_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string fallback_protocol = 10;
    {PROTOBUF_FIELD_OFFSET(NetworkConfig, _impl_.fallback_protocol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(NetworkConfig()._impl_.config_metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\33\0\0\0\0\0\0\17\0\0\21\0\0\0\0\0"
    "seigr.network.NetworkConfig"
    "config_metadata"
    "fallback_protocol"
  }},
};

PROTOBUF_NOINLINE void NetworkConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.network.NetworkConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.allowed_protocols_.Clear();
  _impl_.config_metadata_.Clear();
  _impl_.fallback_protocol_.ClearToEmpty();
  ::memset(&_impl_.max_connections_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.max_packet_loss_threshold_) -
      reinterpret_cast<char*>(&_impl_.max_connections_)) + sizeof(_impl_.max_packet_loss_threshold_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* NetworkConfig::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const NetworkConfig& this_ = static_cast<const NetworkConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* NetworkConfig::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const NetworkConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.network.NetworkConfig)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 max_connections = 1;
          if (this_._internal_max_connections() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_max_connections(), target);
          }

          // int32 retry_limit = 2;
          if (this_._internal_retry_limit() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_retry_limit(), target);
          }

          // int32 timeout_seconds = 3;
          if (this_._internal_timeout_seconds() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_timeout_seconds(), target);
          }

          // bool enable_encryption = 4;
          if (this_._internal_enable_encryption() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_enable_encryption(), target);
          }

          // .seigr.common.QoSLevel default_qos = 5;
          if (this_._internal_default_qos() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                5, this_._internal_default_qos(), target);
          }

          // repeated .seigr.network.NetworkProtocol allowed_protocols = 6;
          {
            std::size_t byte_size =
                                              this_._impl_._allowed_protocols_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteEnumPacked(
                  6, this_._internal_allowed_protocols(), byte_size, target);
            }
          }

          // map<string, string> config_metadata = 7;
          if (!this_._internal_config_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_config_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkConfig.config_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkConfig.config_metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkConfig.config_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkConfig.config_metadata");
              }
            }
          }

          // int32 max_packet_loss_threshold = 8;
          if (this_._internal_max_packet_loss_threshold() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<8>(
                    stream, this_._internal_max_packet_loss_threshold(), target);
          }

          // bool enable_dynamic_qos_scaling = 9;
          if (this_._internal_enable_dynamic_qos_scaling() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                9, this_._internal_enable_dynamic_qos_scaling(), target);
          }

          // string fallback_protocol = 10;
          if (!this_._internal_fallback_protocol().empty()) {
            const std::string& _s = this_._internal_fallback_protocol();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkConfig.fallback_protocol");
            target = stream->WriteStringMaybeAliased(10, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.network.NetworkConfig)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t NetworkConfig::ByteSizeLong(const MessageLite& base) {
          const NetworkConfig& this_ = static_cast<const NetworkConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t NetworkConfig::ByteSizeLong() const {
          const NetworkConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.network.NetworkConfig)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .seigr.network.NetworkProtocol allowed_protocols = 6;
            {
              total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
                  this_._internal_allowed_protocols(), 1, this_._impl_._allowed_protocols_cached_byte_size_);
            }
            // map<string, string> config_metadata = 7;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_config_metadata_size());
              for (const auto& entry : this_._internal_config_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string fallback_protocol = 10;
            if (!this_._internal_fallback_protocol().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_fallback_protocol());
            }
            // int32 max_connections = 1;
            if (this_._internal_max_connections() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_max_connections());
            }
            // int32 retry_limit = 2;
            if (this_._internal_retry_limit() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_retry_limit());
            }
            // int32 timeout_seconds = 3;
            if (this_._internal_timeout_seconds() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_timeout_seconds());
            }
            // .seigr.common.QoSLevel default_qos = 5;
            if (this_._internal_default_qos() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_default_qos());
            }
            // bool enable_encryption = 4;
            if (this_._internal_enable_encryption() != 0) {
              total_size += 2;
            }
            // bool enable_dynamic_qos_scaling = 9;
            if (this_._internal_enable_dynamic_qos_scaling() != 0) {
              total_size += 2;
            }
            // int32 max_packet_loss_threshold = 8;
            if (this_._internal_max_packet_loss_threshold() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_max_packet_loss_threshold());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void NetworkConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NetworkConfig*>(&to_msg);
  auto& from = static_cast<const NetworkConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.network.NetworkConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_allowed_protocols()->MergeFrom(from._internal_allowed_protocols());
  _this->_impl_.config_metadata_.MergeFrom(from._impl_.config_metadata_);
  if (!from._internal_fallback_protocol().empty()) {
    _this->_internal_set_fallback_protocol(from._internal_fallback_protocol());
  }
  if (from._internal_max_connections() != 0) {
    _this->_impl_.max_connections_ = from._impl_.max_connections_;
  }
  if (from._internal_retry_limit() != 0) {
    _this->_impl_.retry_limit_ = from._impl_.retry_limit_;
  }
  if (from._internal_timeout_seconds() != 0) {
    _this->_impl_.timeout_seconds_ = from._impl_.timeout_seconds_;
  }
  if (from._internal_default_qos() != 0) {
    _this->_impl_.default_qos_ = from._impl_.default_qos_;
  }
  if (from._internal_enable_encryption() != 0) {
    _this->_impl_.enable_encryption_ = from._impl_.enable_encryption_;
  }
  if (from._internal_enable_dynamic_qos_scaling() != 0) {
    _this->_impl_.enable_dynamic_qos_scaling_ = from._impl_.enable_dynamic_qos_scaling_;
  }
  if (from._internal_max_packet_loss_threshold() != 0) {
    _this->_impl_.max_packet_loss_threshold_ = from._impl_.max_packet_loss_threshold_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NetworkConfig::CopyFrom(const NetworkConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.network.NetworkConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NetworkConfig::InternalSwap(NetworkConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.allowed_protocols_.InternalSwap(&other->_impl_.allowed_protocols_);
  _impl_.config_metadata_.InternalSwap(&other->_impl_.config_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.fallback_protocol_, &other->_impl_.fallback_protocol_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NetworkConfig, _impl_.max_packet_loss_threshold_)
      + sizeof(NetworkConfig::_impl_.max_packet_loss_threshold_)
      - PROTOBUF_FIELD_OFFSET(NetworkConfig, _impl_.max_connections_)>(
          reinterpret_cast<char*>(&_impl_.max_connections_),
          reinterpret_cast<char*>(&other->_impl_.max_connections_));
}

::google::protobuf::Metadata NetworkConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              NetworkStatistics_LatencyAveragesEntry_DoNotUse::NetworkStatistics_LatencyAveragesEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              NetworkStatistics_LatencyAveragesEntry_DoNotUse::NetworkStatistics_LatencyAveragesEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              NetworkStatistics_LatencyAveragesEntry_DoNotUse::NetworkStatistics_LatencyAveragesEntry_DoNotUse() : SuperType() {}
              NetworkStatistics_LatencyAveragesEntry_DoNotUse::NetworkStatistics_LatencyAveragesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* NetworkStatistics_LatencyAveragesEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) NetworkStatistics_LatencyAveragesEntry_DoNotUse(arena);
              }
              constexpr auto NetworkStatistics_LatencyAveragesEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(NetworkStatistics_LatencyAveragesEntry_DoNotUse),
                                                          alignof(NetworkStatistics_LatencyAveragesEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull NetworkStatistics_LatencyAveragesEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_NetworkStatistics_LatencyAveragesEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &NetworkStatistics_LatencyAveragesEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<NetworkStatistics_LatencyAveragesEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &NetworkStatistics_LatencyAveragesEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &NetworkStatistics_LatencyAveragesEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(NetworkStatistics_LatencyAveragesEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &NetworkStatistics_LatencyAveragesEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_network_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* NetworkStatistics_LatencyAveragesEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 64, 2> NetworkStatistics_LatencyAveragesEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NetworkStatistics_LatencyAveragesEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::network::NetworkStatistics_LatencyAveragesEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double value = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkStatistics_LatencyAveragesEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkStatistics_LatencyAveragesEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(NetworkStatistics_LatencyAveragesEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double value = 2;
    {PROTOBUF_FIELD_OFFSET(NetworkStatistics_LatencyAveragesEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
    "\64\3\0\0\0\0\0\0"
    "seigr.network.NetworkStatistics.LatencyAveragesEntry"
    "key"
  }},
};

// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              NetworkStatistics_QosDistributionEntry_DoNotUse::NetworkStatistics_QosDistributionEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              NetworkStatistics_QosDistributionEntry_DoNotUse::NetworkStatistics_QosDistributionEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              NetworkStatistics_QosDistributionEntry_DoNotUse::NetworkStatistics_QosDistributionEntry_DoNotUse() : SuperType() {}
              NetworkStatistics_QosDistributionEntry_DoNotUse::NetworkStatistics_QosDistributionEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* NetworkStatistics_QosDistributionEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) NetworkStatistics_QosDistributionEntry_DoNotUse(arena);
              }
              constexpr auto NetworkStatistics_QosDistributionEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(NetworkStatistics_QosDistributionEntry_DoNotUse),
                                                          alignof(NetworkStatistics_QosDistributionEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull NetworkStatistics_QosDistributionEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_NetworkStatistics_QosDistributionEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &NetworkStatistics_QosDistributionEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<NetworkStatistics_QosDistributionEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &NetworkStatistics_QosDistributionEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &NetworkStatistics_QosDistributionEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(NetworkStatistics_QosDistributionEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &NetworkStatistics_QosDistributionEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_network_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* NetworkStatistics_QosDistributionEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 64, 2> NetworkStatistics_QosDistributionEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NetworkStatistics_QosDistributionEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::network::NetworkStatistics_QosDistributionEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 value = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NetworkStatistics_QosDistributionEntry_DoNotUse, _impl_.value_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkStatistics_QosDistributionEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkStatistics_QosDistributionEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(NetworkStatistics_QosDistributionEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 value = 2;
    {PROTOBUF_FIELD_OFFSET(NetworkStatistics_QosDistributionEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\64\3\0\0\0\0\0\0"
    "seigr.network.NetworkStatistics.QosDistributionEntry"
    "key"
  }},
};

// ===================================================================

class NetworkStatistics::_Internal {
 public:
  using HasBits =
      decltype(std::declval<NetworkStatistics>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(NetworkStatistics, _impl_._has_bits_);
};

void NetworkStatistics::clear_performance_summary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.performance_summary_ != nullptr) _impl_.performance_summary_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
NetworkStatistics::NetworkStatistics(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.network.NetworkStatistics)
}
inline PROTOBUF_NDEBUG_INLINE NetworkStatistics::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::network::NetworkStatistics& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        latency_averages_{visibility, arena, from.latency_averages_},
        qos_distribution_{visibility, arena, from.qos_distribution_},
        cluster_id_(arena, from.cluster_id_),
        last_updated_(arena, from.last_updated_) {}

NetworkStatistics::NetworkStatistics(
    ::google::protobuf::Arena* arena,
    const NetworkStatistics& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NetworkStatistics* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.performance_summary_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::seigr::common::NetworkPerformanceSummary>(
                              arena, *from._impl_.performance_summary_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_hyphens_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, total_hyphens_),
           offsetof(Impl_, avg_congestion_level_) -
               offsetof(Impl_, total_hyphens_) +
               sizeof(Impl_::avg_congestion_level_));

  // @@protoc_insertion_point(copy_constructor:seigr.network.NetworkStatistics)
}
inline PROTOBUF_NDEBUG_INLINE NetworkStatistics::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        latency_averages_{visibility, arena},
        qos_distribution_{visibility, arena},
        cluster_id_(arena),
        last_updated_(arena) {}

inline void NetworkStatistics::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, performance_summary_),
           0,
           offsetof(Impl_, avg_congestion_level_) -
               offsetof(Impl_, performance_summary_) +
               sizeof(Impl_::avg_congestion_level_));
}
NetworkStatistics::~NetworkStatistics() {
  // @@protoc_insertion_point(destructor:seigr.network.NetworkStatistics)
  SharedDtor(*this);
}
inline void NetworkStatistics::SharedDtor(MessageLite& self) {
  NetworkStatistics& this_ = static_cast<NetworkStatistics&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.cluster_id_.Destroy();
  this_._impl_.last_updated_.Destroy();
  delete this_._impl_.performance_summary_;
  this_._impl_.~Impl_();
}

inline void* NetworkStatistics::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) NetworkStatistics(arena);
}
constexpr auto NetworkStatistics::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(NetworkStatistics, _impl_.latency_averages_) +
          decltype(NetworkStatistics::_impl_.latency_averages_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(NetworkStatistics, _impl_.latency_averages_) +
          decltype(NetworkStatistics::_impl_.latency_averages_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(NetworkStatistics, _impl_.qos_distribution_) +
          decltype(NetworkStatistics::_impl_.qos_distribution_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(NetworkStatistics, _impl_.qos_distribution_) +
          decltype(NetworkStatistics::_impl_.qos_distribution_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(NetworkStatistics), alignof(NetworkStatistics), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&NetworkStatistics::PlacementNew_,
                                 sizeof(NetworkStatistics),
                                 alignof(NetworkStatistics));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull NetworkStatistics::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_NetworkStatistics_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &NetworkStatistics::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<NetworkStatistics>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &NetworkStatistics::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<NetworkStatistics>(), &NetworkStatistics::ByteSizeLong,
            &NetworkStatistics::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(NetworkStatistics, _impl_._cached_size_),
        false,
    },
    &NetworkStatistics::kDescriptorMethods,
    &descriptor_table_network_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* NetworkStatistics::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 3, 102, 2> NetworkStatistics::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NetworkStatistics, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::network::NetworkStatistics>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string cluster_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkStatistics, _impl_.cluster_id_)}},
    // int32 total_hyphens = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NetworkStatistics, _impl_.total_hyphens_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkStatistics, _impl_.total_hyphens_)}},
    // int32 active_connections = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NetworkStatistics, _impl_.active_connections_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkStatistics, _impl_.active_connections_)}},
    // int32 total_data_transferred_mb = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NetworkStatistics, _impl_.total_data_transferred_mb_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkStatistics, _impl_.total_data_transferred_mb_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // string last_updated = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkStatistics, _impl_.last_updated_)}},
    // .seigr.common.NetworkPerformanceSummary performance_summary = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 0, 0, PROTOBUF_FIELD_OFFSET(NetworkStatistics, _impl_.performance_summary_)}},
    // float avg_congestion_level = 9;
    {::_pbi::TcParser::FastF32S1,
     {77, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkStatistics, _impl_.avg_congestion_level_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string cluster_id = 1;
    {PROTOBUF_FIELD_OFFSET(NetworkStatistics, _impl_.cluster_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 total_hyphens = 2;
    {PROTOBUF_FIELD_OFFSET(NetworkStatistics, _impl_.total_hyphens_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 active_connections = 3;
    {PROTOBUF_FIELD_OFFSET(NetworkStatistics, _impl_.active_connections_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 total_data_transferred_mb = 4;
    {PROTOBUF_FIELD_OFFSET(NetworkStatistics, _impl_.total_data_transferred_mb_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // map<string, double> latency_averages = 5;
    {PROTOBUF_FIELD_OFFSET(NetworkStatistics, _impl_.latency_averages_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<string, int32> qos_distribution = 6;
    {PROTOBUF_FIELD_OFFSET(NetworkStatistics, _impl_.qos_distribution_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string last_updated = 7;
    {PROTOBUF_FIELD_OFFSET(NetworkStatistics, _impl_.last_updated_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.common.NetworkPerformanceSummary performance_summary = 8;
    {PROTOBUF_FIELD_OFFSET(NetworkStatistics, _impl_.performance_summary_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // float avg_congestion_level = 9;
    {PROTOBUF_FIELD_OFFSET(NetworkStatistics, _impl_.avg_congestion_level_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }}, {{
    {::_pbi::TcParser::GetTable<::seigr::common::NetworkPerformanceSummary>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(NetworkStatistics()._impl_.latency_averages_)>(
        1, 0, 0, 9,
        1)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(NetworkStatistics()._impl_.qos_distribution_)>(
        1, 0, 0, 9,
        5)},
  }}, {{
    "\37\12\0\0\0\20\20\14\0\0\0\0\0\0\0\0"
    "seigr.network.NetworkStatistics"
    "cluster_id"
    "latency_averages"
    "qos_distribution"
    "last_updated"
  }},
};

PROTOBUF_NOINLINE void NetworkStatistics::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.network.NetworkStatistics)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.latency_averages_.Clear();
  _impl_.qos_distribution_.Clear();
  _impl_.cluster_id_.ClearToEmpty();
  _impl_.last_updated_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.performance_summary_ != nullptr);
    _impl_.performance_summary_->Clear();
  }
  ::memset(&_impl_.total_hyphens_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.avg_congestion_level_) -
      reinterpret_cast<char*>(&_impl_.total_hyphens_)) + sizeof(_impl_.avg_congestion_level_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* NetworkStatistics::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const NetworkStatistics& this_ = static_cast<const NetworkStatistics&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* NetworkStatistics::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const NetworkStatistics& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.network.NetworkStatistics)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string cluster_id = 1;
          if (!this_._internal_cluster_id().empty()) {
            const std::string& _s = this_._internal_cluster_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkStatistics.cluster_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // int32 total_hyphens = 2;
          if (this_._internal_total_hyphens() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_total_hyphens(), target);
          }

          // int32 active_connections = 3;
          if (this_._internal_active_connections() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_active_connections(), target);
          }

          // int32 total_data_transferred_mb = 4;
          if (this_._internal_total_data_transferred_mb() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<4>(
                    stream, this_._internal_total_data_transferred_mb(), target);
          }

          // map<string, double> latency_averages = 5;
          if (!this_._internal_latency_averages().empty()) {
            using MapType = ::google::protobuf::Map<std::string, double>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, double,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_DOUBLE>;
            const auto& field = this_._internal_latency_averages();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    5, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkStatistics.latency_averages");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    5, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkStatistics.latency_averages");
              }
            }
          }

          // map<string, int32> qos_distribution = 6;
          if (!this_._internal_qos_distribution().empty()) {
            using MapType = ::google::protobuf::Map<std::string, ::int32_t>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, ::int32_t,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_INT32>;
            const auto& field = this_._internal_qos_distribution();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkStatistics.qos_distribution");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkStatistics.qos_distribution");
              }
            }
          }

          // string last_updated = 7;
          if (!this_._internal_last_updated().empty()) {
            const std::string& _s = this_._internal_last_updated();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkStatistics.last_updated");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .seigr.common.NetworkPerformanceSummary performance_summary = 8;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                8, *this_._impl_.performance_summary_, this_._impl_.performance_summary_->GetCachedSize(), target,
                stream);
          }

          // float avg_congestion_level = 9;
          if (::absl::bit_cast<::uint32_t>(this_._internal_avg_congestion_level()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                9, this_._internal_avg_congestion_level(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.network.NetworkStatistics)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t NetworkStatistics::ByteSizeLong(const MessageLite& base) {
          const NetworkStatistics& this_ = static_cast<const NetworkStatistics&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t NetworkStatistics::ByteSizeLong() const {
          const NetworkStatistics& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.network.NetworkStatistics)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, double> latency_averages = 5;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_latency_averages_size());
              for (const auto& entry : this_._internal_latency_averages()) {
                total_size += _pbi::MapEntryFuncs<std::string, double,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_DOUBLE>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // map<string, int32> qos_distribution = 6;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_qos_distribution_size());
              for (const auto& entry : this_._internal_qos_distribution()) {
                total_size += _pbi::MapEntryFuncs<std::string, ::int32_t,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_INT32>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string cluster_id = 1;
            if (!this_._internal_cluster_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_cluster_id());
            }
            // string last_updated = 7;
            if (!this_._internal_last_updated().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_last_updated());
            }
          }
           {
            // .seigr.common.NetworkPerformanceSummary performance_summary = 8;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.performance_summary_);
            }
          }
           {
            // int32 total_hyphens = 2;
            if (this_._internal_total_hyphens() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_total_hyphens());
            }
            // int32 active_connections = 3;
            if (this_._internal_active_connections() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_active_connections());
            }
            // int32 total_data_transferred_mb = 4;
            if (this_._internal_total_data_transferred_mb() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_total_data_transferred_mb());
            }
            // float avg_congestion_level = 9;
            if (::absl::bit_cast<::uint32_t>(this_._internal_avg_congestion_level()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void NetworkStatistics::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NetworkStatistics*>(&to_msg);
  auto& from = static_cast<const NetworkStatistics&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.network.NetworkStatistics)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.latency_averages_.MergeFrom(from._impl_.latency_averages_);
  _this->_impl_.qos_distribution_.MergeFrom(from._impl_.qos_distribution_);
  if (!from._internal_cluster_id().empty()) {
    _this->_internal_set_cluster_id(from._internal_cluster_id());
  }
  if (!from._internal_last_updated().empty()) {
    _this->_internal_set_last_updated(from._internal_last_updated());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.performance_summary_ != nullptr);
    if (_this->_impl_.performance_summary_ == nullptr) {
      _this->_impl_.performance_summary_ =
          ::google::protobuf::Message::CopyConstruct<::seigr::common::NetworkPerformanceSummary>(arena, *from._impl_.performance_summary_);
    } else {
      _this->_impl_.performance_summary_->MergeFrom(*from._impl_.performance_summary_);
    }
  }
  if (from._internal_total_hyphens() != 0) {
    _this->_impl_.total_hyphens_ = from._impl_.total_hyphens_;
  }
  if (from._internal_active_connections() != 0) {
    _this->_impl_.active_connections_ = from._impl_.active_connections_;
  }
  if (from._internal_total_data_transferred_mb() != 0) {
    _this->_impl_.total_data_transferred_mb_ = from._impl_.total_data_transferred_mb_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_avg_congestion_level()) != 0) {
    _this->_impl_.avg_congestion_level_ = from._impl_.avg_congestion_level_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NetworkStatistics::CopyFrom(const NetworkStatistics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.network.NetworkStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NetworkStatistics::InternalSwap(NetworkStatistics* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.latency_averages_.InternalSwap(&other->_impl_.latency_averages_);
  _impl_.qos_distribution_.InternalSwap(&other->_impl_.qos_distribution_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cluster_id_, &other->_impl_.cluster_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.last_updated_, &other->_impl_.last_updated_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NetworkStatistics, _impl_.avg_congestion_level_)
      + sizeof(NetworkStatistics::_impl_.avg_congestion_level_)
      - PROTOBUF_FIELD_OFFSET(NetworkStatistics, _impl_.performance_summary_)>(
          reinterpret_cast<char*>(&_impl_.performance_summary_),
          reinterpret_cast<char*>(&other->_impl_.performance_summary_));
}

::google::protobuf::Metadata NetworkStatistics::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              NetworkSecurityPolicy_PolicyMetadataEntry_DoNotUse::NetworkSecurityPolicy_PolicyMetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              NetworkSecurityPolicy_PolicyMetadataEntry_DoNotUse::NetworkSecurityPolicy_PolicyMetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              NetworkSecurityPolicy_PolicyMetadataEntry_DoNotUse::NetworkSecurityPolicy_PolicyMetadataEntry_DoNotUse() : SuperType() {}
              NetworkSecurityPolicy_PolicyMetadataEntry_DoNotUse::NetworkSecurityPolicy_PolicyMetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* NetworkSecurityPolicy_PolicyMetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) NetworkSecurityPolicy_PolicyMetadataEntry_DoNotUse(arena);
              }
              constexpr auto NetworkSecurityPolicy_PolicyMetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(NetworkSecurityPolicy_PolicyMetadataEntry_DoNotUse),
                                                          alignof(NetworkSecurityPolicy_PolicyMetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull NetworkSecurityPolicy_PolicyMetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_NetworkSecurityPolicy_PolicyMetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &NetworkSecurityPolicy_PolicyMetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<NetworkSecurityPolicy_PolicyMetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &NetworkSecurityPolicy_PolicyMetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &NetworkSecurityPolicy_PolicyMetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(NetworkSecurityPolicy_PolicyMetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &NetworkSecurityPolicy_PolicyMetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_network_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* NetworkSecurityPolicy_PolicyMetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 72, 2> NetworkSecurityPolicy_PolicyMetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NetworkSecurityPolicy_PolicyMetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::network::NetworkSecurityPolicy_PolicyMetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkSecurityPolicy_PolicyMetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkSecurityPolicy_PolicyMetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(NetworkSecurityPolicy_PolicyMetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(NetworkSecurityPolicy_PolicyMetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\67\3\5\0\0\0\0\0"
    "seigr.network.NetworkSecurityPolicy.PolicyMetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class NetworkSecurityPolicy::_Internal {
 public:
};

NetworkSecurityPolicy::NetworkSecurityPolicy(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.network.NetworkSecurityPolicy)
}
inline PROTOBUF_NDEBUG_INLINE NetworkSecurityPolicy::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::network::NetworkSecurityPolicy& from_msg)
      : allowed_ip_ranges_{visibility, arena, from.allowed_ip_ranges_},
        blocked_ip_ranges_{visibility, arena, from.blocked_ip_ranges_},
        allowed_protocols_{visibility, arena, from.allowed_protocols_},
        _allowed_protocols_cached_byte_size_{0},
        policy_metadata_{visibility, arena, from.policy_metadata_},
        policy_id_(arena, from.policy_id_),
        auto_response_action_(arena, from.auto_response_action_),
        _cached_size_{0} {}

NetworkSecurityPolicy::NetworkSecurityPolicy(
    ::google::protobuf::Arena* arena,
    const NetworkSecurityPolicy& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NetworkSecurityPolicy* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, enforce_strict_tls_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, enforce_strict_tls_),
           offsetof(Impl_, adaptive_blacklisting_) -
               offsetof(Impl_, enforce_strict_tls_) +
               sizeof(Impl_::adaptive_blacklisting_));

  // @@protoc_insertion_point(copy_constructor:seigr.network.NetworkSecurityPolicy)
}
inline PROTOBUF_NDEBUG_INLINE NetworkSecurityPolicy::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : allowed_ip_ranges_{visibility, arena},
        blocked_ip_ranges_{visibility, arena},
        allowed_protocols_{visibility, arena},
        _allowed_protocols_cached_byte_size_{0},
        policy_metadata_{visibility, arena},
        policy_id_(arena),
        auto_response_action_(arena),
        _cached_size_{0} {}

inline void NetworkSecurityPolicy::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, enforce_strict_tls_),
           0,
           offsetof(Impl_, adaptive_blacklisting_) -
               offsetof(Impl_, enforce_strict_tls_) +
               sizeof(Impl_::adaptive_blacklisting_));
}
NetworkSecurityPolicy::~NetworkSecurityPolicy() {
  // @@protoc_insertion_point(destructor:seigr.network.NetworkSecurityPolicy)
  SharedDtor(*this);
}
inline void NetworkSecurityPolicy::SharedDtor(MessageLite& self) {
  NetworkSecurityPolicy& this_ = static_cast<NetworkSecurityPolicy&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.policy_id_.Destroy();
  this_._impl_.auto_response_action_.Destroy();
  this_._impl_.~Impl_();
}

inline void* NetworkSecurityPolicy::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) NetworkSecurityPolicy(arena);
}
constexpr auto NetworkSecurityPolicy::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(NetworkSecurityPolicy, _impl_.allowed_ip_ranges_) +
          decltype(NetworkSecurityPolicy::_impl_.allowed_ip_ranges_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(NetworkSecurityPolicy, _impl_.blocked_ip_ranges_) +
          decltype(NetworkSecurityPolicy::_impl_.blocked_ip_ranges_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(NetworkSecurityPolicy, _impl_.allowed_protocols_) +
          decltype(NetworkSecurityPolicy::_impl_.allowed_protocols_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(NetworkSecurityPolicy, _impl_.policy_metadata_) +
          decltype(NetworkSecurityPolicy::_impl_.policy_metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(NetworkSecurityPolicy, _impl_.policy_metadata_) +
          decltype(NetworkSecurityPolicy::_impl_.policy_metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(NetworkSecurityPolicy), alignof(NetworkSecurityPolicy), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&NetworkSecurityPolicy::PlacementNew_,
                                 sizeof(NetworkSecurityPolicy),
                                 alignof(NetworkSecurityPolicy));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull NetworkSecurityPolicy::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_NetworkSecurityPolicy_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &NetworkSecurityPolicy::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<NetworkSecurityPolicy>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &NetworkSecurityPolicy::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<NetworkSecurityPolicy>(), &NetworkSecurityPolicy::ByteSizeLong,
            &NetworkSecurityPolicy::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(NetworkSecurityPolicy, _impl_._cached_size_),
        false,
    },
    &NetworkSecurityPolicy::kDescriptorMethods,
    &descriptor_table_network_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* NetworkSecurityPolicy::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 1, 130, 2> NetworkSecurityPolicy::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::network::NetworkSecurityPolicy>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string auto_response_action = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkSecurityPolicy, _impl_.auto_response_action_)}},
    // string policy_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkSecurityPolicy, _impl_.policy_id_)}},
    // repeated string allowed_ip_ranges = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkSecurityPolicy, _impl_.allowed_ip_ranges_)}},
    // repeated string blocked_ip_ranges = 3;
    {::_pbi::TcParser::FastUR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkSecurityPolicy, _impl_.blocked_ip_ranges_)}},
    // bool enforce_strict_tls = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(NetworkSecurityPolicy, _impl_.enforce_strict_tls_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkSecurityPolicy, _impl_.enforce_strict_tls_)}},
    // repeated .seigr.network.NetworkProtocol allowed_protocols = 5;
    {::_pbi::TcParser::FastV32P1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkSecurityPolicy, _impl_.allowed_protocols_)}},
    // bool adaptive_blacklisting = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(NetworkSecurityPolicy, _impl_.adaptive_blacklisting_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkSecurityPolicy, _impl_.adaptive_blacklisting_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string policy_id = 1;
    {PROTOBUF_FIELD_OFFSET(NetworkSecurityPolicy, _impl_.policy_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string allowed_ip_ranges = 2;
    {PROTOBUF_FIELD_OFFSET(NetworkSecurityPolicy, _impl_.allowed_ip_ranges_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string blocked_ip_ranges = 3;
    {PROTOBUF_FIELD_OFFSET(NetworkSecurityPolicy, _impl_.blocked_ip_ranges_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // bool enforce_strict_tls = 4;
    {PROTOBUF_FIELD_OFFSET(NetworkSecurityPolicy, _impl_.enforce_strict_tls_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // repeated .seigr.network.NetworkProtocol allowed_protocols = 5;
    {PROTOBUF_FIELD_OFFSET(NetworkSecurityPolicy, _impl_.allowed_protocols_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // bool adaptive_blacklisting = 6;
    {PROTOBUF_FIELD_OFFSET(NetworkSecurityPolicy, _impl_.adaptive_blacklisting_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // map<string, string> policy_metadata = 7;
    {PROTOBUF_FIELD_OFFSET(NetworkSecurityPolicy, _impl_.policy_metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string auto_response_action = 8;
    {PROTOBUF_FIELD_OFFSET(NetworkSecurityPolicy, _impl_.auto_response_action_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(NetworkSecurityPolicy()._impl_.policy_metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\43\11\21\21\0\0\0\17\24\0\0\0\0\0\0\0"
    "seigr.network.NetworkSecurityPolicy"
    "policy_id"
    "allowed_ip_ranges"
    "blocked_ip_ranges"
    "policy_metadata"
    "auto_response_action"
  }},
};

PROTOBUF_NOINLINE void NetworkSecurityPolicy::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.network.NetworkSecurityPolicy)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.allowed_ip_ranges_.Clear();
  _impl_.blocked_ip_ranges_.Clear();
  _impl_.allowed_protocols_.Clear();
  _impl_.policy_metadata_.Clear();
  _impl_.policy_id_.ClearToEmpty();
  _impl_.auto_response_action_.ClearToEmpty();
  ::memset(&_impl_.enforce_strict_tls_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.adaptive_blacklisting_) -
      reinterpret_cast<char*>(&_impl_.enforce_strict_tls_)) + sizeof(_impl_.adaptive_blacklisting_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* NetworkSecurityPolicy::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const NetworkSecurityPolicy& this_ = static_cast<const NetworkSecurityPolicy&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* NetworkSecurityPolicy::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const NetworkSecurityPolicy& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.network.NetworkSecurityPolicy)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string policy_id = 1;
          if (!this_._internal_policy_id().empty()) {
            const std::string& _s = this_._internal_policy_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkSecurityPolicy.policy_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated string allowed_ip_ranges = 2;
          for (int i = 0, n = this_._internal_allowed_ip_ranges_size(); i < n; ++i) {
            const auto& s = this_._internal_allowed_ip_ranges().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkSecurityPolicy.allowed_ip_ranges");
            target = stream->WriteString(2, s, target);
          }

          // repeated string blocked_ip_ranges = 3;
          for (int i = 0, n = this_._internal_blocked_ip_ranges_size(); i < n; ++i) {
            const auto& s = this_._internal_blocked_ip_ranges().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkSecurityPolicy.blocked_ip_ranges");
            target = stream->WriteString(3, s, target);
          }

          // bool enforce_strict_tls = 4;
          if (this_._internal_enforce_strict_tls() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_enforce_strict_tls(), target);
          }

          // repeated .seigr.network.NetworkProtocol allowed_protocols = 5;
          {
            std::size_t byte_size =
                                              this_._impl_._allowed_protocols_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteEnumPacked(
                  5, this_._internal_allowed_protocols(), byte_size, target);
            }
          }

          // bool adaptive_blacklisting = 6;
          if (this_._internal_adaptive_blacklisting() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                6, this_._internal_adaptive_blacklisting(), target);
          }

          // map<string, string> policy_metadata = 7;
          if (!this_._internal_policy_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_policy_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkSecurityPolicy.policy_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkSecurityPolicy.policy_metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkSecurityPolicy.policy_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkSecurityPolicy.policy_metadata");
              }
            }
          }

          // string auto_response_action = 8;
          if (!this_._internal_auto_response_action().empty()) {
            const std::string& _s = this_._internal_auto_response_action();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkSecurityPolicy.auto_response_action");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.network.NetworkSecurityPolicy)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t NetworkSecurityPolicy::ByteSizeLong(const MessageLite& base) {
          const NetworkSecurityPolicy& this_ = static_cast<const NetworkSecurityPolicy&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t NetworkSecurityPolicy::ByteSizeLong() const {
          const NetworkSecurityPolicy& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.network.NetworkSecurityPolicy)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string allowed_ip_ranges = 2;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_allowed_ip_ranges().size());
              for (int i = 0, n = this_._internal_allowed_ip_ranges().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_allowed_ip_ranges().Get(i));
              }
            }
            // repeated string blocked_ip_ranges = 3;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_blocked_ip_ranges().size());
              for (int i = 0, n = this_._internal_blocked_ip_ranges().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_blocked_ip_ranges().Get(i));
              }
            }
            // repeated .seigr.network.NetworkProtocol allowed_protocols = 5;
            {
              total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
                  this_._internal_allowed_protocols(), 1, this_._impl_._allowed_protocols_cached_byte_size_);
            }
            // map<string, string> policy_metadata = 7;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_policy_metadata_size());
              for (const auto& entry : this_._internal_policy_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string policy_id = 1;
            if (!this_._internal_policy_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_policy_id());
            }
            // string auto_response_action = 8;
            if (!this_._internal_auto_response_action().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_auto_response_action());
            }
            // bool enforce_strict_tls = 4;
            if (this_._internal_enforce_strict_tls() != 0) {
              total_size += 2;
            }
            // bool adaptive_blacklisting = 6;
            if (this_._internal_adaptive_blacklisting() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void NetworkSecurityPolicy::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NetworkSecurityPolicy*>(&to_msg);
  auto& from = static_cast<const NetworkSecurityPolicy&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.network.NetworkSecurityPolicy)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_allowed_ip_ranges()->MergeFrom(from._internal_allowed_ip_ranges());
  _this->_internal_mutable_blocked_ip_ranges()->MergeFrom(from._internal_blocked_ip_ranges());
  _this->_internal_mutable_allowed_protocols()->MergeFrom(from._internal_allowed_protocols());
  _this->_impl_.policy_metadata_.MergeFrom(from._impl_.policy_metadata_);
  if (!from._internal_policy_id().empty()) {
    _this->_internal_set_policy_id(from._internal_policy_id());
  }
  if (!from._internal_auto_response_action().empty()) {
    _this->_internal_set_auto_response_action(from._internal_auto_response_action());
  }
  if (from._internal_enforce_strict_tls() != 0) {
    _this->_impl_.enforce_strict_tls_ = from._impl_.enforce_strict_tls_;
  }
  if (from._internal_adaptive_blacklisting() != 0) {
    _this->_impl_.adaptive_blacklisting_ = from._impl_.adaptive_blacklisting_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NetworkSecurityPolicy::CopyFrom(const NetworkSecurityPolicy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.network.NetworkSecurityPolicy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NetworkSecurityPolicy::InternalSwap(NetworkSecurityPolicy* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.allowed_ip_ranges_.InternalSwap(&other->_impl_.allowed_ip_ranges_);
  _impl_.blocked_ip_ranges_.InternalSwap(&other->_impl_.blocked_ip_ranges_);
  _impl_.allowed_protocols_.InternalSwap(&other->_impl_.allowed_protocols_);
  _impl_.policy_metadata_.InternalSwap(&other->_impl_.policy_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.policy_id_, &other->_impl_.policy_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.auto_response_action_, &other->_impl_.auto_response_action_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NetworkSecurityPolicy, _impl_.adaptive_blacklisting_)
      + sizeof(NetworkSecurityPolicy::_impl_.adaptive_blacklisting_)
      - PROTOBUF_FIELD_OFFSET(NetworkSecurityPolicy, _impl_.enforce_strict_tls_)>(
          reinterpret_cast<char*>(&_impl_.enforce_strict_tls_),
          reinterpret_cast<char*>(&other->_impl_.enforce_strict_tls_));
}

::google::protobuf::Metadata NetworkSecurityPolicy::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              NetworkErrorEvent_MetadataEntry_DoNotUse::NetworkErrorEvent_MetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              NetworkErrorEvent_MetadataEntry_DoNotUse::NetworkErrorEvent_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              NetworkErrorEvent_MetadataEntry_DoNotUse::NetworkErrorEvent_MetadataEntry_DoNotUse() : SuperType() {}
              NetworkErrorEvent_MetadataEntry_DoNotUse::NetworkErrorEvent_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* NetworkErrorEvent_MetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) NetworkErrorEvent_MetadataEntry_DoNotUse(arena);
              }
              constexpr auto NetworkErrorEvent_MetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(NetworkErrorEvent_MetadataEntry_DoNotUse),
                                                          alignof(NetworkErrorEvent_MetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull NetworkErrorEvent_MetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_NetworkErrorEvent_MetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &NetworkErrorEvent_MetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<NetworkErrorEvent_MetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &NetworkErrorEvent_MetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &NetworkErrorEvent_MetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(NetworkErrorEvent_MetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &NetworkErrorEvent_MetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_network_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* NetworkErrorEvent_MetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 62, 2> NetworkErrorEvent_MetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NetworkErrorEvent_MetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::network::NetworkErrorEvent_MetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkErrorEvent_MetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkErrorEvent_MetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(NetworkErrorEvent_MetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(NetworkErrorEvent_MetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\55\3\5\0\0\0\0\0"
    "seigr.network.NetworkErrorEvent.MetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class NetworkErrorEvent::_Internal {
 public:
};

NetworkErrorEvent::NetworkErrorEvent(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.network.NetworkErrorEvent)
}
inline PROTOBUF_NDEBUG_INLINE NetworkErrorEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::network::NetworkErrorEvent& from_msg)
      : metadata_{visibility, arena, from.metadata_},
        error_id_(arena, from.error_id_),
        source_hyphen_id_(arena, from.source_hyphen_id_),
        target_hyphen_id_(arena, from.target_hyphen_id_),
        error_code_(arena, from.error_code_),
        error_message_(arena, from.error_message_),
        timestamp_(arena, from.timestamp_),
        _cached_size_{0} {}

NetworkErrorEvent::NetworkErrorEvent(
    ::google::protobuf::Arena* arena,
    const NetworkErrorEvent& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NetworkErrorEvent* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, auto_resolved_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, auto_resolved_),
           offsetof(Impl_, retry_attempts_) -
               offsetof(Impl_, auto_resolved_) +
               sizeof(Impl_::retry_attempts_));

  // @@protoc_insertion_point(copy_constructor:seigr.network.NetworkErrorEvent)
}
inline PROTOBUF_NDEBUG_INLINE NetworkErrorEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : metadata_{visibility, arena},
        error_id_(arena),
        source_hyphen_id_(arena),
        target_hyphen_id_(arena),
        error_code_(arena),
        error_message_(arena),
        timestamp_(arena),
        _cached_size_{0} {}

inline void NetworkErrorEvent::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, auto_resolved_),
           0,
           offsetof(Impl_, retry_attempts_) -
               offsetof(Impl_, auto_resolved_) +
               sizeof(Impl_::retry_attempts_));
}
NetworkErrorEvent::~NetworkErrorEvent() {
  // @@protoc_insertion_point(destructor:seigr.network.NetworkErrorEvent)
  SharedDtor(*this);
}
inline void NetworkErrorEvent::SharedDtor(MessageLite& self) {
  NetworkErrorEvent& this_ = static_cast<NetworkErrorEvent&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.error_id_.Destroy();
  this_._impl_.source_hyphen_id_.Destroy();
  this_._impl_.target_hyphen_id_.Destroy();
  this_._impl_.error_code_.Destroy();
  this_._impl_.error_message_.Destroy();
  this_._impl_.timestamp_.Destroy();
  this_._impl_.~Impl_();
}

inline void* NetworkErrorEvent::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) NetworkErrorEvent(arena);
}
constexpr auto NetworkErrorEvent::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(NetworkErrorEvent, _impl_.metadata_) +
          decltype(NetworkErrorEvent::_impl_.metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(NetworkErrorEvent, _impl_.metadata_) +
          decltype(NetworkErrorEvent::_impl_.metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(NetworkErrorEvent), alignof(NetworkErrorEvent), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&NetworkErrorEvent::PlacementNew_,
                                 sizeof(NetworkErrorEvent),
                                 alignof(NetworkErrorEvent));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull NetworkErrorEvent::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_NetworkErrorEvent_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &NetworkErrorEvent::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<NetworkErrorEvent>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &NetworkErrorEvent::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<NetworkErrorEvent>(), &NetworkErrorEvent::ByteSizeLong,
            &NetworkErrorEvent::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(NetworkErrorEvent, _impl_._cached_size_),
        false,
    },
    &NetworkErrorEvent::kDescriptorMethods,
    &descriptor_table_network_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* NetworkErrorEvent::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 1, 128, 2> NetworkErrorEvent::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::network::NetworkErrorEvent>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string error_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkErrorEvent, _impl_.error_id_)}},
    // string source_hyphen_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkErrorEvent, _impl_.source_hyphen_id_)}},
    // string target_hyphen_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkErrorEvent, _impl_.target_hyphen_id_)}},
    // string error_code = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkErrorEvent, _impl_.error_code_)}},
    // string error_message = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkErrorEvent, _impl_.error_message_)}},
    // string timestamp = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkErrorEvent, _impl_.timestamp_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // bool auto_resolved = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(NetworkErrorEvent, _impl_.auto_resolved_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkErrorEvent, _impl_.auto_resolved_)}},
    // int32 retry_attempts = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NetworkErrorEvent, _impl_.retry_attempts_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkErrorEvent, _impl_.retry_attempts_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string error_id = 1;
    {PROTOBUF_FIELD_OFFSET(NetworkErrorEvent, _impl_.error_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string source_hyphen_id = 2;
    {PROTOBUF_FIELD_OFFSET(NetworkErrorEvent, _impl_.source_hyphen_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string target_hyphen_id = 3;
    {PROTOBUF_FIELD_OFFSET(NetworkErrorEvent, _impl_.target_hyphen_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string error_code = 4;
    {PROTOBUF_FIELD_OFFSET(NetworkErrorEvent, _impl_.error_code_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string error_message = 5;
    {PROTOBUF_FIELD_OFFSET(NetworkErrorEvent, _impl_.error_message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string timestamp = 6;
    {PROTOBUF_FIELD_OFFSET(NetworkErrorEvent, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> metadata = 7;
    {PROTOBUF_FIELD_OFFSET(NetworkErrorEvent, _impl_.metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // bool auto_resolved = 8;
    {PROTOBUF_FIELD_OFFSET(NetworkErrorEvent, _impl_.auto_resolved_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int32 retry_attempts = 9;
    {PROTOBUF_FIELD_OFFSET(NetworkErrorEvent, _impl_.retry_attempts_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(NetworkErrorEvent()._impl_.metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\37\10\20\20\12\15\11\10\0\0\0\0\0\0\0\0"
    "seigr.network.NetworkErrorEvent"
    "error_id"
    "source_hyphen_id"
    "target_hyphen_id"
    "error_code"
    "error_message"
    "timestamp"
    "metadata"
  }},
};

PROTOBUF_NOINLINE void NetworkErrorEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.network.NetworkErrorEvent)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.metadata_.Clear();
  _impl_.error_id_.ClearToEmpty();
  _impl_.source_hyphen_id_.ClearToEmpty();
  _impl_.target_hyphen_id_.ClearToEmpty();
  _impl_.error_code_.ClearToEmpty();
  _impl_.error_message_.ClearToEmpty();
  _impl_.timestamp_.ClearToEmpty();
  ::memset(&_impl_.auto_resolved_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.retry_attempts_) -
      reinterpret_cast<char*>(&_impl_.auto_resolved_)) + sizeof(_impl_.retry_attempts_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* NetworkErrorEvent::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const NetworkErrorEvent& this_ = static_cast<const NetworkErrorEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* NetworkErrorEvent::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const NetworkErrorEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.network.NetworkErrorEvent)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string error_id = 1;
          if (!this_._internal_error_id().empty()) {
            const std::string& _s = this_._internal_error_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkErrorEvent.error_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string source_hyphen_id = 2;
          if (!this_._internal_source_hyphen_id().empty()) {
            const std::string& _s = this_._internal_source_hyphen_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkErrorEvent.source_hyphen_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string target_hyphen_id = 3;
          if (!this_._internal_target_hyphen_id().empty()) {
            const std::string& _s = this_._internal_target_hyphen_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkErrorEvent.target_hyphen_id");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string error_code = 4;
          if (!this_._internal_error_code().empty()) {
            const std::string& _s = this_._internal_error_code();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkErrorEvent.error_code");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string error_message = 5;
          if (!this_._internal_error_message().empty()) {
            const std::string& _s = this_._internal_error_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkErrorEvent.error_message");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string timestamp = 6;
          if (!this_._internal_timestamp().empty()) {
            const std::string& _s = this_._internal_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkErrorEvent.timestamp");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // map<string, string> metadata = 7;
          if (!this_._internal_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkErrorEvent.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkErrorEvent.metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkErrorEvent.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkErrorEvent.metadata");
              }
            }
          }

          // bool auto_resolved = 8;
          if (this_._internal_auto_resolved() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                8, this_._internal_auto_resolved(), target);
          }

          // int32 retry_attempts = 9;
          if (this_._internal_retry_attempts() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<9>(
                    stream, this_._internal_retry_attempts(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.network.NetworkErrorEvent)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t NetworkErrorEvent::ByteSizeLong(const MessageLite& base) {
          const NetworkErrorEvent& this_ = static_cast<const NetworkErrorEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t NetworkErrorEvent::ByteSizeLong() const {
          const NetworkErrorEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.network.NetworkErrorEvent)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> metadata = 7;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_metadata_size());
              for (const auto& entry : this_._internal_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string error_id = 1;
            if (!this_._internal_error_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_error_id());
            }
            // string source_hyphen_id = 2;
            if (!this_._internal_source_hyphen_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_source_hyphen_id());
            }
            // string target_hyphen_id = 3;
            if (!this_._internal_target_hyphen_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_target_hyphen_id());
            }
            // string error_code = 4;
            if (!this_._internal_error_code().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_error_code());
            }
            // string error_message = 5;
            if (!this_._internal_error_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_error_message());
            }
            // string timestamp = 6;
            if (!this_._internal_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_timestamp());
            }
            // bool auto_resolved = 8;
            if (this_._internal_auto_resolved() != 0) {
              total_size += 2;
            }
            // int32 retry_attempts = 9;
            if (this_._internal_retry_attempts() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_retry_attempts());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void NetworkErrorEvent::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NetworkErrorEvent*>(&to_msg);
  auto& from = static_cast<const NetworkErrorEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.network.NetworkErrorEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.metadata_.MergeFrom(from._impl_.metadata_);
  if (!from._internal_error_id().empty()) {
    _this->_internal_set_error_id(from._internal_error_id());
  }
  if (!from._internal_source_hyphen_id().empty()) {
    _this->_internal_set_source_hyphen_id(from._internal_source_hyphen_id());
  }
  if (!from._internal_target_hyphen_id().empty()) {
    _this->_internal_set_target_hyphen_id(from._internal_target_hyphen_id());
  }
  if (!from._internal_error_code().empty()) {
    _this->_internal_set_error_code(from._internal_error_code());
  }
  if (!from._internal_error_message().empty()) {
    _this->_internal_set_error_message(from._internal_error_message());
  }
  if (!from._internal_timestamp().empty()) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (from._internal_auto_resolved() != 0) {
    _this->_impl_.auto_resolved_ = from._impl_.auto_resolved_;
  }
  if (from._internal_retry_attempts() != 0) {
    _this->_impl_.retry_attempts_ = from._impl_.retry_attempts_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NetworkErrorEvent::CopyFrom(const NetworkErrorEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.network.NetworkErrorEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NetworkErrorEvent::InternalSwap(NetworkErrorEvent* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.metadata_.InternalSwap(&other->_impl_.metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_id_, &other->_impl_.error_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.source_hyphen_id_, &other->_impl_.source_hyphen_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.target_hyphen_id_, &other->_impl_.target_hyphen_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_code_, &other->_impl_.error_code_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_message_, &other->_impl_.error_message_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.timestamp_, &other->_impl_.timestamp_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NetworkErrorEvent, _impl_.retry_attempts_)
      + sizeof(NetworkErrorEvent::_impl_.retry_attempts_)
      - PROTOBUF_FIELD_OFFSET(NetworkErrorEvent, _impl_.auto_resolved_)>(
          reinterpret_cast<char*>(&_impl_.auto_resolved_),
          reinterpret_cast<char*>(&other->_impl_.auto_resolved_));
}

::google::protobuf::Metadata NetworkErrorEvent::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              NetworkStatusRequest_FiltersEntry_DoNotUse::NetworkStatusRequest_FiltersEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              NetworkStatusRequest_FiltersEntry_DoNotUse::NetworkStatusRequest_FiltersEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              NetworkStatusRequest_FiltersEntry_DoNotUse::NetworkStatusRequest_FiltersEntry_DoNotUse() : SuperType() {}
              NetworkStatusRequest_FiltersEntry_DoNotUse::NetworkStatusRequest_FiltersEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* NetworkStatusRequest_FiltersEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) NetworkStatusRequest_FiltersEntry_DoNotUse(arena);
              }
              constexpr auto NetworkStatusRequest_FiltersEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(NetworkStatusRequest_FiltersEntry_DoNotUse),
                                                          alignof(NetworkStatusRequest_FiltersEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull NetworkStatusRequest_FiltersEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_NetworkStatusRequest_FiltersEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &NetworkStatusRequest_FiltersEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<NetworkStatusRequest_FiltersEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &NetworkStatusRequest_FiltersEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &NetworkStatusRequest_FiltersEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(NetworkStatusRequest_FiltersEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &NetworkStatusRequest_FiltersEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_network_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* NetworkStatusRequest_FiltersEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 64, 2> NetworkStatusRequest_FiltersEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NetworkStatusRequest_FiltersEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::network::NetworkStatusRequest_FiltersEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkStatusRequest_FiltersEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkStatusRequest_FiltersEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(NetworkStatusRequest_FiltersEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(NetworkStatusRequest_FiltersEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\57\3\5\0\0\0\0\0"
    "seigr.network.NetworkStatusRequest.FiltersEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class NetworkStatusRequest::_Internal {
 public:
};

NetworkStatusRequest::NetworkStatusRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.network.NetworkStatusRequest)
}
inline PROTOBUF_NDEBUG_INLINE NetworkStatusRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::network::NetworkStatusRequest& from_msg)
      : filters_{visibility, arena, from.filters_},
        request_id_(arena, from.request_id_),
        hyphen_id_(arena, from.hyphen_id_),
        _cached_size_{0} {}

NetworkStatusRequest::NetworkStatusRequest(
    ::google::protobuf::Arena* arena,
    const NetworkStatusRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NetworkStatusRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.include_diagnostics_ = from._impl_.include_diagnostics_;

  // @@protoc_insertion_point(copy_constructor:seigr.network.NetworkStatusRequest)
}
inline PROTOBUF_NDEBUG_INLINE NetworkStatusRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : filters_{visibility, arena},
        request_id_(arena),
        hyphen_id_(arena),
        _cached_size_{0} {}

inline void NetworkStatusRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.include_diagnostics_ = {};
}
NetworkStatusRequest::~NetworkStatusRequest() {
  // @@protoc_insertion_point(destructor:seigr.network.NetworkStatusRequest)
  SharedDtor(*this);
}
inline void NetworkStatusRequest::SharedDtor(MessageLite& self) {
  NetworkStatusRequest& this_ = static_cast<NetworkStatusRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.request_id_.Destroy();
  this_._impl_.hyphen_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* NetworkStatusRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) NetworkStatusRequest(arena);
}
constexpr auto NetworkStatusRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(NetworkStatusRequest, _impl_.filters_) +
          decltype(NetworkStatusRequest::_impl_.filters_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(NetworkStatusRequest, _impl_.filters_) +
          decltype(NetworkStatusRequest::_impl_.filters_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(NetworkStatusRequest), alignof(NetworkStatusRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&NetworkStatusRequest::PlacementNew_,
                                 sizeof(NetworkStatusRequest),
                                 alignof(NetworkStatusRequest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull NetworkStatusRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_NetworkStatusRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &NetworkStatusRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<NetworkStatusRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &NetworkStatusRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<NetworkStatusRequest>(), &NetworkStatusRequest::ByteSizeLong,
            &NetworkStatusRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(NetworkStatusRequest, _impl_._cached_size_),
        false,
    },
    &NetworkStatusRequest::kDescriptorMethods,
    &descriptor_table_network_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* NetworkStatusRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 69, 2> NetworkStatusRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::network::NetworkStatusRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool include_diagnostics = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(NetworkStatusRequest, _impl_.include_diagnostics_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkStatusRequest, _impl_.include_diagnostics_)}},
    // string request_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkStatusRequest, _impl_.request_id_)}},
    // string hyphen_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkStatusRequest, _impl_.hyphen_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string request_id = 1;
    {PROTOBUF_FIELD_OFFSET(NetworkStatusRequest, _impl_.request_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string hyphen_id = 2;
    {PROTOBUF_FIELD_OFFSET(NetworkStatusRequest, _impl_.hyphen_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> filters = 3;
    {PROTOBUF_FIELD_OFFSET(NetworkStatusRequest, _impl_.filters_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // bool include_diagnostics = 4;
    {PROTOBUF_FIELD_OFFSET(NetworkStatusRequest, _impl_.include_diagnostics_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(NetworkStatusRequest()._impl_.filters_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\42\12\11\7\0\0\0\0"
    "seigr.network.NetworkStatusRequest"
    "request_id"
    "hyphen_id"
    "filters"
  }},
};

PROTOBUF_NOINLINE void NetworkStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.network.NetworkStatusRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.filters_.Clear();
  _impl_.request_id_.ClearToEmpty();
  _impl_.hyphen_id_.ClearToEmpty();
  _impl_.include_diagnostics_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* NetworkStatusRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const NetworkStatusRequest& this_ = static_cast<const NetworkStatusRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* NetworkStatusRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const NetworkStatusRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.network.NetworkStatusRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string request_id = 1;
          if (!this_._internal_request_id().empty()) {
            const std::string& _s = this_._internal_request_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkStatusRequest.request_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string hyphen_id = 2;
          if (!this_._internal_hyphen_id().empty()) {
            const std::string& _s = this_._internal_hyphen_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkStatusRequest.hyphen_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // map<string, string> filters = 3;
          if (!this_._internal_filters().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_filters();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    3, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkStatusRequest.filters");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkStatusRequest.filters");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    3, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkStatusRequest.filters");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkStatusRequest.filters");
              }
            }
          }

          // bool include_diagnostics = 4;
          if (this_._internal_include_diagnostics() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_include_diagnostics(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.network.NetworkStatusRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t NetworkStatusRequest::ByteSizeLong(const MessageLite& base) {
          const NetworkStatusRequest& this_ = static_cast<const NetworkStatusRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t NetworkStatusRequest::ByteSizeLong() const {
          const NetworkStatusRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.network.NetworkStatusRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> filters = 3;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_filters_size());
              for (const auto& entry : this_._internal_filters()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string request_id = 1;
            if (!this_._internal_request_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_request_id());
            }
            // string hyphen_id = 2;
            if (!this_._internal_hyphen_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_hyphen_id());
            }
            // bool include_diagnostics = 4;
            if (this_._internal_include_diagnostics() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void NetworkStatusRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NetworkStatusRequest*>(&to_msg);
  auto& from = static_cast<const NetworkStatusRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.network.NetworkStatusRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.filters_.MergeFrom(from._impl_.filters_);
  if (!from._internal_request_id().empty()) {
    _this->_internal_set_request_id(from._internal_request_id());
  }
  if (!from._internal_hyphen_id().empty()) {
    _this->_internal_set_hyphen_id(from._internal_hyphen_id());
  }
  if (from._internal_include_diagnostics() != 0) {
    _this->_impl_.include_diagnostics_ = from._impl_.include_diagnostics_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NetworkStatusRequest::CopyFrom(const NetworkStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.network.NetworkStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NetworkStatusRequest::InternalSwap(NetworkStatusRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.filters_.InternalSwap(&other->_impl_.filters_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.request_id_, &other->_impl_.request_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hyphen_id_, &other->_impl_.hyphen_id_, arena);
        swap(_impl_.include_diagnostics_, other->_impl_.include_diagnostics_);
}

::google::protobuf::Metadata NetworkStatusRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              NetworkStatusResponse_DiagnosticsEntry_DoNotUse::NetworkStatusResponse_DiagnosticsEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              NetworkStatusResponse_DiagnosticsEntry_DoNotUse::NetworkStatusResponse_DiagnosticsEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              NetworkStatusResponse_DiagnosticsEntry_DoNotUse::NetworkStatusResponse_DiagnosticsEntry_DoNotUse() : SuperType() {}
              NetworkStatusResponse_DiagnosticsEntry_DoNotUse::NetworkStatusResponse_DiagnosticsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* NetworkStatusResponse_DiagnosticsEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) NetworkStatusResponse_DiagnosticsEntry_DoNotUse(arena);
              }
              constexpr auto NetworkStatusResponse_DiagnosticsEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(NetworkStatusResponse_DiagnosticsEntry_DoNotUse),
                                                          alignof(NetworkStatusResponse_DiagnosticsEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull NetworkStatusResponse_DiagnosticsEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_NetworkStatusResponse_DiagnosticsEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &NetworkStatusResponse_DiagnosticsEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<NetworkStatusResponse_DiagnosticsEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &NetworkStatusResponse_DiagnosticsEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &NetworkStatusResponse_DiagnosticsEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(NetworkStatusResponse_DiagnosticsEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &NetworkStatusResponse_DiagnosticsEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_network_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* NetworkStatusResponse_DiagnosticsEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 69, 2> NetworkStatusResponse_DiagnosticsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NetworkStatusResponse_DiagnosticsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::network::NetworkStatusResponse_DiagnosticsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkStatusResponse_DiagnosticsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkStatusResponse_DiagnosticsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(NetworkStatusResponse_DiagnosticsEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(NetworkStatusResponse_DiagnosticsEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\64\3\5\0\0\0\0\0"
    "seigr.network.NetworkStatusResponse.DiagnosticsEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class NetworkStatusResponse::_Internal {
 public:
};

NetworkStatusResponse::NetworkStatusResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.network.NetworkStatusResponse)
}
inline PROTOBUF_NDEBUG_INLINE NetworkStatusResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::network::NetworkStatusResponse& from_msg)
      : diagnostics_{visibility, arena, from.diagnostics_},
        request_id_(arena, from.request_id_),
        hyphen_id_(arena, from.hyphen_id_),
        status_(arena, from.status_),
        last_updated_(arena, from.last_updated_),
        _cached_size_{0} {}

NetworkStatusResponse::NetworkStatusResponse(
    ::google::protobuf::Arena* arena,
    const NetworkStatusResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NetworkStatusResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:seigr.network.NetworkStatusResponse)
}
inline PROTOBUF_NDEBUG_INLINE NetworkStatusResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : diagnostics_{visibility, arena},
        request_id_(arena),
        hyphen_id_(arena),
        status_(arena),
        last_updated_(arena),
        _cached_size_{0} {}

inline void NetworkStatusResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
NetworkStatusResponse::~NetworkStatusResponse() {
  // @@protoc_insertion_point(destructor:seigr.network.NetworkStatusResponse)
  SharedDtor(*this);
}
inline void NetworkStatusResponse::SharedDtor(MessageLite& self) {
  NetworkStatusResponse& this_ = static_cast<NetworkStatusResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.request_id_.Destroy();
  this_._impl_.hyphen_id_.Destroy();
  this_._impl_.status_.Destroy();
  this_._impl_.last_updated_.Destroy();
  this_._impl_.~Impl_();
}

inline void* NetworkStatusResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) NetworkStatusResponse(arena);
}
constexpr auto NetworkStatusResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(NetworkStatusResponse, _impl_.diagnostics_) +
          decltype(NetworkStatusResponse::_impl_.diagnostics_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(NetworkStatusResponse, _impl_.diagnostics_) +
          decltype(NetworkStatusResponse::_impl_.diagnostics_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(NetworkStatusResponse), alignof(NetworkStatusResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&NetworkStatusResponse::PlacementNew_,
                                 sizeof(NetworkStatusResponse),
                                 alignof(NetworkStatusResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull NetworkStatusResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_NetworkStatusResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &NetworkStatusResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<NetworkStatusResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &NetworkStatusResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<NetworkStatusResponse>(), &NetworkStatusResponse::ByteSizeLong,
            &NetworkStatusResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(NetworkStatusResponse, _impl_._cached_size_),
        false,
    },
    &NetworkStatusResponse::kDescriptorMethods,
    &descriptor_table_network_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* NetworkStatusResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 92, 2> NetworkStatusResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::network::NetworkStatusResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string request_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkStatusResponse, _impl_.request_id_)}},
    // string hyphen_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkStatusResponse, _impl_.hyphen_id_)}},
    // string status = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkStatusResponse, _impl_.status_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string last_updated = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkStatusResponse, _impl_.last_updated_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string request_id = 1;
    {PROTOBUF_FIELD_OFFSET(NetworkStatusResponse, _impl_.request_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string hyphen_id = 2;
    {PROTOBUF_FIELD_OFFSET(NetworkStatusResponse, _impl_.hyphen_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string status = 3;
    {PROTOBUF_FIELD_OFFSET(NetworkStatusResponse, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> diagnostics = 4;
    {PROTOBUF_FIELD_OFFSET(NetworkStatusResponse, _impl_.diagnostics_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string last_updated = 5;
    {PROTOBUF_FIELD_OFFSET(NetworkStatusResponse, _impl_.last_updated_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(NetworkStatusResponse()._impl_.diagnostics_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\43\12\11\6\13\14\0\0"
    "seigr.network.NetworkStatusResponse"
    "request_id"
    "hyphen_id"
    "status"
    "diagnostics"
    "last_updated"
  }},
};

PROTOBUF_NOINLINE void NetworkStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.network.NetworkStatusResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.diagnostics_.Clear();
  _impl_.request_id_.ClearToEmpty();
  _impl_.hyphen_id_.ClearToEmpty();
  _impl_.status_.ClearToEmpty();
  _impl_.last_updated_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* NetworkStatusResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const NetworkStatusResponse& this_ = static_cast<const NetworkStatusResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* NetworkStatusResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const NetworkStatusResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.network.NetworkStatusResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string request_id = 1;
          if (!this_._internal_request_id().empty()) {
            const std::string& _s = this_._internal_request_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkStatusResponse.request_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string hyphen_id = 2;
          if (!this_._internal_hyphen_id().empty()) {
            const std::string& _s = this_._internal_hyphen_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkStatusResponse.hyphen_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string status = 3;
          if (!this_._internal_status().empty()) {
            const std::string& _s = this_._internal_status();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkStatusResponse.status");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // map<string, string> diagnostics = 4;
          if (!this_._internal_diagnostics().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_diagnostics();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    4, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkStatusResponse.diagnostics");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkStatusResponse.diagnostics");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    4, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkStatusResponse.diagnostics");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkStatusResponse.diagnostics");
              }
            }
          }

          // string last_updated = 5;
          if (!this_._internal_last_updated().empty()) {
            const std::string& _s = this_._internal_last_updated();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkStatusResponse.last_updated");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.network.NetworkStatusResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t NetworkStatusResponse::ByteSizeLong(const MessageLite& base) {
          const NetworkStatusResponse& this_ = static_cast<const NetworkStatusResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t NetworkStatusResponse::ByteSizeLong() const {
          const NetworkStatusResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.network.NetworkStatusResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> diagnostics = 4;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_diagnostics_size());
              for (const auto& entry : this_._internal_diagnostics()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string request_id = 1;
            if (!this_._internal_request_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_request_id());
            }
            // string hyphen_id = 2;
            if (!this_._internal_hyphen_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_hyphen_id());
            }
            // string status = 3;
            if (!this_._internal_status().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_status());
            }
            // string last_updated = 5;
            if (!this_._internal_last_updated().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_last_updated());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void NetworkStatusResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NetworkStatusResponse*>(&to_msg);
  auto& from = static_cast<const NetworkStatusResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.network.NetworkStatusResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.diagnostics_.MergeFrom(from._impl_.diagnostics_);
  if (!from._internal_request_id().empty()) {
    _this->_internal_set_request_id(from._internal_request_id());
  }
  if (!from._internal_hyphen_id().empty()) {
    _this->_internal_set_hyphen_id(from._internal_hyphen_id());
  }
  if (!from._internal_status().empty()) {
    _this->_internal_set_status(from._internal_status());
  }
  if (!from._internal_last_updated().empty()) {
    _this->_internal_set_last_updated(from._internal_last_updated());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NetworkStatusResponse::CopyFrom(const NetworkStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.network.NetworkStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NetworkStatusResponse::InternalSwap(NetworkStatusResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.diagnostics_.InternalSwap(&other->_impl_.diagnostics_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.request_id_, &other->_impl_.request_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hyphen_id_, &other->_impl_.hyphen_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.status_, &other->_impl_.status_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.last_updated_, &other->_impl_.last_updated_, arena);
}

::google::protobuf::Metadata NetworkStatusResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              NetworkOperationLog_MetadataEntry_DoNotUse::NetworkOperationLog_MetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              NetworkOperationLog_MetadataEntry_DoNotUse::NetworkOperationLog_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              NetworkOperationLog_MetadataEntry_DoNotUse::NetworkOperationLog_MetadataEntry_DoNotUse() : SuperType() {}
              NetworkOperationLog_MetadataEntry_DoNotUse::NetworkOperationLog_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* NetworkOperationLog_MetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) NetworkOperationLog_MetadataEntry_DoNotUse(arena);
              }
              constexpr auto NetworkOperationLog_MetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(NetworkOperationLog_MetadataEntry_DoNotUse),
                                                          alignof(NetworkOperationLog_MetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull NetworkOperationLog_MetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_NetworkOperationLog_MetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &NetworkOperationLog_MetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<NetworkOperationLog_MetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &NetworkOperationLog_MetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &NetworkOperationLog_MetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(NetworkOperationLog_MetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &NetworkOperationLog_MetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_network_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* NetworkOperationLog_MetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 64, 2> NetworkOperationLog_MetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NetworkOperationLog_MetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::network::NetworkOperationLog_MetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkOperationLog_MetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkOperationLog_MetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(NetworkOperationLog_MetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(NetworkOperationLog_MetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\57\3\5\0\0\0\0\0"
    "seigr.network.NetworkOperationLog.MetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class NetworkOperationLog::_Internal {
 public:
};

NetworkOperationLog::NetworkOperationLog(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.network.NetworkOperationLog)
}
inline PROTOBUF_NDEBUG_INLINE NetworkOperationLog::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::network::NetworkOperationLog& from_msg)
      : metadata_{visibility, arena, from.metadata_},
        log_id_(arena, from.log_id_),
        action_(arena, from.action_),
        timestamp_(arena, from.timestamp_),
        source_hyphen_id_(arena, from.source_hyphen_id_),
        target_hyphen_id_(arena, from.target_hyphen_id_),
        status_(arena, from.status_),
        _cached_size_{0} {}

NetworkOperationLog::NetworkOperationLog(
    ::google::protobuf::Arena* arena,
    const NetworkOperationLog& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NetworkOperationLog* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:seigr.network.NetworkOperationLog)
}
inline PROTOBUF_NDEBUG_INLINE NetworkOperationLog::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : metadata_{visibility, arena},
        log_id_(arena),
        action_(arena),
        timestamp_(arena),
        source_hyphen_id_(arena),
        target_hyphen_id_(arena),
        status_(arena),
        _cached_size_{0} {}

inline void NetworkOperationLog::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
NetworkOperationLog::~NetworkOperationLog() {
  // @@protoc_insertion_point(destructor:seigr.network.NetworkOperationLog)
  SharedDtor(*this);
}
inline void NetworkOperationLog::SharedDtor(MessageLite& self) {
  NetworkOperationLog& this_ = static_cast<NetworkOperationLog&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.log_id_.Destroy();
  this_._impl_.action_.Destroy();
  this_._impl_.timestamp_.Destroy();
  this_._impl_.source_hyphen_id_.Destroy();
  this_._impl_.target_hyphen_id_.Destroy();
  this_._impl_.status_.Destroy();
  this_._impl_.~Impl_();
}

inline void* NetworkOperationLog::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) NetworkOperationLog(arena);
}
constexpr auto NetworkOperationLog::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(NetworkOperationLog, _impl_.metadata_) +
          decltype(NetworkOperationLog::_impl_.metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(NetworkOperationLog, _impl_.metadata_) +
          decltype(NetworkOperationLog::_impl_.metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(NetworkOperationLog), alignof(NetworkOperationLog), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&NetworkOperationLog::PlacementNew_,
                                 sizeof(NetworkOperationLog),
                                 alignof(NetworkOperationLog));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull NetworkOperationLog::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_NetworkOperationLog_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &NetworkOperationLog::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<NetworkOperationLog>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &NetworkOperationLog::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<NetworkOperationLog>(), &NetworkOperationLog::ByteSizeLong,
            &NetworkOperationLog::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(NetworkOperationLog, _impl_._cached_size_),
        false,
    },
    &NetworkOperationLog::kDescriptorMethods,
    &descriptor_table_network_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* NetworkOperationLog::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 1, 109, 2> NetworkOperationLog::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::network::NetworkOperationLog>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string log_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkOperationLog, _impl_.log_id_)}},
    // string action = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkOperationLog, _impl_.action_)}},
    // string timestamp = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkOperationLog, _impl_.timestamp_)}},
    // string source_hyphen_id = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkOperationLog, _impl_.source_hyphen_id_)}},
    // string target_hyphen_id = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkOperationLog, _impl_.target_hyphen_id_)}},
    // string status = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkOperationLog, _impl_.status_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string log_id = 1;
    {PROTOBUF_FIELD_OFFSET(NetworkOperationLog, _impl_.log_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string action = 2;
    {PROTOBUF_FIELD_OFFSET(NetworkOperationLog, _impl_.action_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string timestamp = 3;
    {PROTOBUF_FIELD_OFFSET(NetworkOperationLog, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string source_hyphen_id = 4;
    {PROTOBUF_FIELD_OFFSET(NetworkOperationLog, _impl_.source_hyphen_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string target_hyphen_id = 5;
    {PROTOBUF_FIELD_OFFSET(NetworkOperationLog, _impl_.target_hyphen_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string status = 6;
    {PROTOBUF_FIELD_OFFSET(NetworkOperationLog, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> metadata = 7;
    {PROTOBUF_FIELD_OFFSET(NetworkOperationLog, _impl_.metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(NetworkOperationLog()._impl_.metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\41\6\6\11\20\20\6\10"
    "seigr.network.NetworkOperationLog"
    "log_id"
    "action"
    "timestamp"
    "source_hyphen_id"
    "target_hyphen_id"
    "status"
    "metadata"
  }},
};

PROTOBUF_NOINLINE void NetworkOperationLog::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.network.NetworkOperationLog)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.metadata_.Clear();
  _impl_.log_id_.ClearToEmpty();
  _impl_.action_.ClearToEmpty();
  _impl_.timestamp_.ClearToEmpty();
  _impl_.source_hyphen_id_.ClearToEmpty();
  _impl_.target_hyphen_id_.ClearToEmpty();
  _impl_.status_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* NetworkOperationLog::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const NetworkOperationLog& this_ = static_cast<const NetworkOperationLog&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* NetworkOperationLog::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const NetworkOperationLog& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.network.NetworkOperationLog)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string log_id = 1;
          if (!this_._internal_log_id().empty()) {
            const std::string& _s = this_._internal_log_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkOperationLog.log_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string action = 2;
          if (!this_._internal_action().empty()) {
            const std::string& _s = this_._internal_action();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkOperationLog.action");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string timestamp = 3;
          if (!this_._internal_timestamp().empty()) {
            const std::string& _s = this_._internal_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkOperationLog.timestamp");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string source_hyphen_id = 4;
          if (!this_._internal_source_hyphen_id().empty()) {
            const std::string& _s = this_._internal_source_hyphen_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkOperationLog.source_hyphen_id");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string target_hyphen_id = 5;
          if (!this_._internal_target_hyphen_id().empty()) {
            const std::string& _s = this_._internal_target_hyphen_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkOperationLog.target_hyphen_id");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string status = 6;
          if (!this_._internal_status().empty()) {
            const std::string& _s = this_._internal_status();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkOperationLog.status");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // map<string, string> metadata = 7;
          if (!this_._internal_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkOperationLog.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkOperationLog.metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkOperationLog.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkOperationLog.metadata");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.network.NetworkOperationLog)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t NetworkOperationLog::ByteSizeLong(const MessageLite& base) {
          const NetworkOperationLog& this_ = static_cast<const NetworkOperationLog&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t NetworkOperationLog::ByteSizeLong() const {
          const NetworkOperationLog& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.network.NetworkOperationLog)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> metadata = 7;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_metadata_size());
              for (const auto& entry : this_._internal_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string log_id = 1;
            if (!this_._internal_log_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_log_id());
            }
            // string action = 2;
            if (!this_._internal_action().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_action());
            }
            // string timestamp = 3;
            if (!this_._internal_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_timestamp());
            }
            // string source_hyphen_id = 4;
            if (!this_._internal_source_hyphen_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_source_hyphen_id());
            }
            // string target_hyphen_id = 5;
            if (!this_._internal_target_hyphen_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_target_hyphen_id());
            }
            // string status = 6;
            if (!this_._internal_status().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_status());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void NetworkOperationLog::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NetworkOperationLog*>(&to_msg);
  auto& from = static_cast<const NetworkOperationLog&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.network.NetworkOperationLog)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.metadata_.MergeFrom(from._impl_.metadata_);
  if (!from._internal_log_id().empty()) {
    _this->_internal_set_log_id(from._internal_log_id());
  }
  if (!from._internal_action().empty()) {
    _this->_internal_set_action(from._internal_action());
  }
  if (!from._internal_timestamp().empty()) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (!from._internal_source_hyphen_id().empty()) {
    _this->_internal_set_source_hyphen_id(from._internal_source_hyphen_id());
  }
  if (!from._internal_target_hyphen_id().empty()) {
    _this->_internal_set_target_hyphen_id(from._internal_target_hyphen_id());
  }
  if (!from._internal_status().empty()) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NetworkOperationLog::CopyFrom(const NetworkOperationLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.network.NetworkOperationLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NetworkOperationLog::InternalSwap(NetworkOperationLog* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.metadata_.InternalSwap(&other->_impl_.metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.log_id_, &other->_impl_.log_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.action_, &other->_impl_.action_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.timestamp_, &other->_impl_.timestamp_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.source_hyphen_id_, &other->_impl_.source_hyphen_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.target_hyphen_id_, &other->_impl_.target_hyphen_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.status_, &other->_impl_.status_, arena);
}

::google::protobuf::Metadata NetworkOperationLog::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              NetworkPerformanceSummary_PerformanceNotesEntry_DoNotUse::NetworkPerformanceSummary_PerformanceNotesEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              NetworkPerformanceSummary_PerformanceNotesEntry_DoNotUse::NetworkPerformanceSummary_PerformanceNotesEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              NetworkPerformanceSummary_PerformanceNotesEntry_DoNotUse::NetworkPerformanceSummary_PerformanceNotesEntry_DoNotUse() : SuperType() {}
              NetworkPerformanceSummary_PerformanceNotesEntry_DoNotUse::NetworkPerformanceSummary_PerformanceNotesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* NetworkPerformanceSummary_PerformanceNotesEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) NetworkPerformanceSummary_PerformanceNotesEntry_DoNotUse(arena);
              }
              constexpr auto NetworkPerformanceSummary_PerformanceNotesEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(NetworkPerformanceSummary_PerformanceNotesEntry_DoNotUse),
                                                          alignof(NetworkPerformanceSummary_PerformanceNotesEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull NetworkPerformanceSummary_PerformanceNotesEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_NetworkPerformanceSummary_PerformanceNotesEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &NetworkPerformanceSummary_PerformanceNotesEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<NetworkPerformanceSummary_PerformanceNotesEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &NetworkPerformanceSummary_PerformanceNotesEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &NetworkPerformanceSummary_PerformanceNotesEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(NetworkPerformanceSummary_PerformanceNotesEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &NetworkPerformanceSummary_PerformanceNotesEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_network_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* NetworkPerformanceSummary_PerformanceNotesEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 78, 2> NetworkPerformanceSummary_PerformanceNotesEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NetworkPerformanceSummary_PerformanceNotesEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::network::NetworkPerformanceSummary_PerformanceNotesEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkPerformanceSummary_PerformanceNotesEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkPerformanceSummary_PerformanceNotesEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(NetworkPerformanceSummary_PerformanceNotesEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(NetworkPerformanceSummary_PerformanceNotesEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\75\3\5\0\0\0\0\0"
    "seigr.network.NetworkPerformanceSummary.PerformanceNotesEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class NetworkPerformanceSummary::_Internal {
 public:
};

NetworkPerformanceSummary::NetworkPerformanceSummary(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.network.NetworkPerformanceSummary)
}
inline PROTOBUF_NDEBUG_INLINE NetworkPerformanceSummary::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::network::NetworkPerformanceSummary& from_msg)
      : performance_notes_{visibility, arena, from.performance_notes_},
        summary_id_(arena, from.summary_id_),
        _cached_size_{0} {}

NetworkPerformanceSummary::NetworkPerformanceSummary(
    ::google::protobuf::Arena* arena,
    const NetworkPerformanceSummary& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NetworkPerformanceSummary* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, avg_bandwidth_utilization_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, avg_bandwidth_utilization_),
           offsetof(Impl_, total_data_transferred_mb_) -
               offsetof(Impl_, avg_bandwidth_utilization_) +
               sizeof(Impl_::total_data_transferred_mb_));

  // @@protoc_insertion_point(copy_constructor:seigr.network.NetworkPerformanceSummary)
}
inline PROTOBUF_NDEBUG_INLINE NetworkPerformanceSummary::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : performance_notes_{visibility, arena},
        summary_id_(arena),
        _cached_size_{0} {}

inline void NetworkPerformanceSummary::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, avg_bandwidth_utilization_),
           0,
           offsetof(Impl_, total_data_transferred_mb_) -
               offsetof(Impl_, avg_bandwidth_utilization_) +
               sizeof(Impl_::total_data_transferred_mb_));
}
NetworkPerformanceSummary::~NetworkPerformanceSummary() {
  // @@protoc_insertion_point(destructor:seigr.network.NetworkPerformanceSummary)
  SharedDtor(*this);
}
inline void NetworkPerformanceSummary::SharedDtor(MessageLite& self) {
  NetworkPerformanceSummary& this_ = static_cast<NetworkPerformanceSummary&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.summary_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* NetworkPerformanceSummary::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) NetworkPerformanceSummary(arena);
}
constexpr auto NetworkPerformanceSummary::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(NetworkPerformanceSummary, _impl_.performance_notes_) +
          decltype(NetworkPerformanceSummary::_impl_.performance_notes_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(NetworkPerformanceSummary, _impl_.performance_notes_) +
          decltype(NetworkPerformanceSummary::_impl_.performance_notes_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(NetworkPerformanceSummary), alignof(NetworkPerformanceSummary), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&NetworkPerformanceSummary::PlacementNew_,
                                 sizeof(NetworkPerformanceSummary),
                                 alignof(NetworkPerformanceSummary));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull NetworkPerformanceSummary::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_NetworkPerformanceSummary_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &NetworkPerformanceSummary::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<NetworkPerformanceSummary>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &NetworkPerformanceSummary::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<NetworkPerformanceSummary>(), &NetworkPerformanceSummary::ByteSizeLong,
            &NetworkPerformanceSummary::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(NetworkPerformanceSummary, _impl_._cached_size_),
        false,
    },
    &NetworkPerformanceSummary::kDescriptorMethods,
    &descriptor_table_network_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* NetworkPerformanceSummary::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 5, 1, 75, 2> NetworkPerformanceSummary::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::network::NetworkPerformanceSummary>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 total_data_transferred_mb = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NetworkPerformanceSummary, _impl_.total_data_transferred_mb_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkPerformanceSummary, _impl_.total_data_transferred_mb_)}},
    // string summary_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkPerformanceSummary, _impl_.summary_id_)}},
    // float avg_bandwidth_utilization = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkPerformanceSummary, _impl_.avg_bandwidth_utilization_)}},
    // float avg_response_time = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkPerformanceSummary, _impl_.avg_response_time_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string summary_id = 1;
    {PROTOBUF_FIELD_OFFSET(NetworkPerformanceSummary, _impl_.summary_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // float avg_bandwidth_utilization = 2;
    {PROTOBUF_FIELD_OFFSET(NetworkPerformanceSummary, _impl_.avg_bandwidth_utilization_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float avg_response_time = 3;
    {PROTOBUF_FIELD_OFFSET(NetworkPerformanceSummary, _impl_.avg_response_time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // int32 total_data_transferred_mb = 4;
    {PROTOBUF_FIELD_OFFSET(NetworkPerformanceSummary, _impl_.total_data_transferred_mb_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // map<string, string> performance_notes = 5;
    {PROTOBUF_FIELD_OFFSET(NetworkPerformanceSummary, _impl_.performance_notes_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(NetworkPerformanceSummary()._impl_.performance_notes_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\47\12\0\0\0\21\0\0"
    "seigr.network.NetworkPerformanceSummary"
    "summary_id"
    "performance_notes"
  }},
};

PROTOBUF_NOINLINE void NetworkPerformanceSummary::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.network.NetworkPerformanceSummary)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.performance_notes_.Clear();
  _impl_.summary_id_.ClearToEmpty();
  ::memset(&_impl_.avg_bandwidth_utilization_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.total_data_transferred_mb_) -
      reinterpret_cast<char*>(&_impl_.avg_bandwidth_utilization_)) + sizeof(_impl_.total_data_transferred_mb_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* NetworkPerformanceSummary::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const NetworkPerformanceSummary& this_ = static_cast<const NetworkPerformanceSummary&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* NetworkPerformanceSummary::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const NetworkPerformanceSummary& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.network.NetworkPerformanceSummary)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string summary_id = 1;
          if (!this_._internal_summary_id().empty()) {
            const std::string& _s = this_._internal_summary_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkPerformanceSummary.summary_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // float avg_bandwidth_utilization = 2;
          if (::absl::bit_cast<::uint32_t>(this_._internal_avg_bandwidth_utilization()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_avg_bandwidth_utilization(), target);
          }

          // float avg_response_time = 3;
          if (::absl::bit_cast<::uint32_t>(this_._internal_avg_response_time()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_avg_response_time(), target);
          }

          // int32 total_data_transferred_mb = 4;
          if (this_._internal_total_data_transferred_mb() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<4>(
                    stream, this_._internal_total_data_transferred_mb(), target);
          }

          // map<string, string> performance_notes = 5;
          if (!this_._internal_performance_notes().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_performance_notes();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    5, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkPerformanceSummary.performance_notes");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkPerformanceSummary.performance_notes");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    5, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkPerformanceSummary.performance_notes");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.NetworkPerformanceSummary.performance_notes");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.network.NetworkPerformanceSummary)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t NetworkPerformanceSummary::ByteSizeLong(const MessageLite& base) {
          const NetworkPerformanceSummary& this_ = static_cast<const NetworkPerformanceSummary&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t NetworkPerformanceSummary::ByteSizeLong() const {
          const NetworkPerformanceSummary& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.network.NetworkPerformanceSummary)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> performance_notes = 5;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_performance_notes_size());
              for (const auto& entry : this_._internal_performance_notes()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string summary_id = 1;
            if (!this_._internal_summary_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_summary_id());
            }
            // float avg_bandwidth_utilization = 2;
            if (::absl::bit_cast<::uint32_t>(this_._internal_avg_bandwidth_utilization()) != 0) {
              total_size += 5;
            }
            // float avg_response_time = 3;
            if (::absl::bit_cast<::uint32_t>(this_._internal_avg_response_time()) != 0) {
              total_size += 5;
            }
            // int32 total_data_transferred_mb = 4;
            if (this_._internal_total_data_transferred_mb() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_total_data_transferred_mb());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void NetworkPerformanceSummary::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NetworkPerformanceSummary*>(&to_msg);
  auto& from = static_cast<const NetworkPerformanceSummary&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.network.NetworkPerformanceSummary)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.performance_notes_.MergeFrom(from._impl_.performance_notes_);
  if (!from._internal_summary_id().empty()) {
    _this->_internal_set_summary_id(from._internal_summary_id());
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_avg_bandwidth_utilization()) != 0) {
    _this->_impl_.avg_bandwidth_utilization_ = from._impl_.avg_bandwidth_utilization_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_avg_response_time()) != 0) {
    _this->_impl_.avg_response_time_ = from._impl_.avg_response_time_;
  }
  if (from._internal_total_data_transferred_mb() != 0) {
    _this->_impl_.total_data_transferred_mb_ = from._impl_.total_data_transferred_mb_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NetworkPerformanceSummary::CopyFrom(const NetworkPerformanceSummary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.network.NetworkPerformanceSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NetworkPerformanceSummary::InternalSwap(NetworkPerformanceSummary* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.performance_notes_.InternalSwap(&other->_impl_.performance_notes_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.summary_id_, &other->_impl_.summary_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NetworkPerformanceSummary, _impl_.total_data_transferred_mb_)
      + sizeof(NetworkPerformanceSummary::_impl_.total_data_transferred_mb_)
      - PROTOBUF_FIELD_OFFSET(NetworkPerformanceSummary, _impl_.avg_bandwidth_utilization_)>(
          reinterpret_cast<char*>(&_impl_.avg_bandwidth_utilization_),
          reinterpret_cast<char*>(&other->_impl_.avg_bandwidth_utilization_));
}

::google::protobuf::Metadata NetworkPerformanceSummary::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ProtocolCompatibilityLog::_Internal {
 public:
};

ProtocolCompatibilityLog::ProtocolCompatibilityLog(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.network.ProtocolCompatibilityLog)
}
inline PROTOBUF_NDEBUG_INLINE ProtocolCompatibilityLog::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::network::ProtocolCompatibilityLog& from_msg)
      : compatible_versions_{visibility, arena, from.compatible_versions_},
        hyphen_id_(arena, from.hyphen_id_),
        protocol_version_(arena, from.protocol_version_),
        timestamp_(arena, from.timestamp_),
        _cached_size_{0} {}

ProtocolCompatibilityLog::ProtocolCompatibilityLog(
    ::google::protobuf::Arena* arena,
    const ProtocolCompatibilityLog& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ProtocolCompatibilityLog* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.is_compatible_ = from._impl_.is_compatible_;

  // @@protoc_insertion_point(copy_constructor:seigr.network.ProtocolCompatibilityLog)
}
inline PROTOBUF_NDEBUG_INLINE ProtocolCompatibilityLog::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : compatible_versions_{visibility, arena},
        hyphen_id_(arena),
        protocol_version_(arena),
        timestamp_(arena),
        _cached_size_{0} {}

inline void ProtocolCompatibilityLog::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.is_compatible_ = {};
}
ProtocolCompatibilityLog::~ProtocolCompatibilityLog() {
  // @@protoc_insertion_point(destructor:seigr.network.ProtocolCompatibilityLog)
  SharedDtor(*this);
}
inline void ProtocolCompatibilityLog::SharedDtor(MessageLite& self) {
  ProtocolCompatibilityLog& this_ = static_cast<ProtocolCompatibilityLog&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.hyphen_id_.Destroy();
  this_._impl_.protocol_version_.Destroy();
  this_._impl_.timestamp_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ProtocolCompatibilityLog::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ProtocolCompatibilityLog(arena);
}
constexpr auto ProtocolCompatibilityLog::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ProtocolCompatibilityLog, _impl_.compatible_versions_) +
          decltype(ProtocolCompatibilityLog::_impl_.compatible_versions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ProtocolCompatibilityLog), alignof(ProtocolCompatibilityLog), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ProtocolCompatibilityLog::PlacementNew_,
                                 sizeof(ProtocolCompatibilityLog),
                                 alignof(ProtocolCompatibilityLog));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ProtocolCompatibilityLog::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ProtocolCompatibilityLog_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ProtocolCompatibilityLog::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ProtocolCompatibilityLog>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ProtocolCompatibilityLog::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ProtocolCompatibilityLog>(), &ProtocolCompatibilityLog::ByteSizeLong,
            &ProtocolCompatibilityLog::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ProtocolCompatibilityLog, _impl_._cached_size_),
        false,
    },
    &ProtocolCompatibilityLog::kDescriptorMethods,
    &descriptor_table_network_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ProtocolCompatibilityLog::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 100, 2> ProtocolCompatibilityLog::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::network::ProtocolCompatibilityLog>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string hyphen_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ProtocolCompatibilityLog, _impl_.hyphen_id_)}},
    // string protocol_version = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ProtocolCompatibilityLog, _impl_.protocol_version_)}},
    // repeated string compatible_versions = 3;
    {::_pbi::TcParser::FastUR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ProtocolCompatibilityLog, _impl_.compatible_versions_)}},
    // bool is_compatible = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ProtocolCompatibilityLog, _impl_.is_compatible_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(ProtocolCompatibilityLog, _impl_.is_compatible_)}},
    // string timestamp = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(ProtocolCompatibilityLog, _impl_.timestamp_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string hyphen_id = 1;
    {PROTOBUF_FIELD_OFFSET(ProtocolCompatibilityLog, _impl_.hyphen_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string protocol_version = 2;
    {PROTOBUF_FIELD_OFFSET(ProtocolCompatibilityLog, _impl_.protocol_version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string compatible_versions = 3;
    {PROTOBUF_FIELD_OFFSET(ProtocolCompatibilityLog, _impl_.compatible_versions_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // bool is_compatible = 4;
    {PROTOBUF_FIELD_OFFSET(ProtocolCompatibilityLog, _impl_.is_compatible_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string timestamp = 5;
    {PROTOBUF_FIELD_OFFSET(ProtocolCompatibilityLog, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\46\11\20\23\0\11\0\0"
    "seigr.network.ProtocolCompatibilityLog"
    "hyphen_id"
    "protocol_version"
    "compatible_versions"
    "timestamp"
  }},
};

PROTOBUF_NOINLINE void ProtocolCompatibilityLog::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.network.ProtocolCompatibilityLog)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.compatible_versions_.Clear();
  _impl_.hyphen_id_.ClearToEmpty();
  _impl_.protocol_version_.ClearToEmpty();
  _impl_.timestamp_.ClearToEmpty();
  _impl_.is_compatible_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ProtocolCompatibilityLog::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ProtocolCompatibilityLog& this_ = static_cast<const ProtocolCompatibilityLog&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ProtocolCompatibilityLog::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ProtocolCompatibilityLog& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.network.ProtocolCompatibilityLog)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string hyphen_id = 1;
          if (!this_._internal_hyphen_id().empty()) {
            const std::string& _s = this_._internal_hyphen_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.ProtocolCompatibilityLog.hyphen_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string protocol_version = 2;
          if (!this_._internal_protocol_version().empty()) {
            const std::string& _s = this_._internal_protocol_version();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.ProtocolCompatibilityLog.protocol_version");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // repeated string compatible_versions = 3;
          for (int i = 0, n = this_._internal_compatible_versions_size(); i < n; ++i) {
            const auto& s = this_._internal_compatible_versions().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.ProtocolCompatibilityLog.compatible_versions");
            target = stream->WriteString(3, s, target);
          }

          // bool is_compatible = 4;
          if (this_._internal_is_compatible() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_is_compatible(), target);
          }

          // string timestamp = 5;
          if (!this_._internal_timestamp().empty()) {
            const std::string& _s = this_._internal_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network.ProtocolCompatibilityLog.timestamp");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.network.ProtocolCompatibilityLog)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ProtocolCompatibilityLog::ByteSizeLong(const MessageLite& base) {
          const ProtocolCompatibilityLog& this_ = static_cast<const ProtocolCompatibilityLog&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ProtocolCompatibilityLog::ByteSizeLong() const {
          const ProtocolCompatibilityLog& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.network.ProtocolCompatibilityLog)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string compatible_versions = 3;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_compatible_versions().size());
              for (int i = 0, n = this_._internal_compatible_versions().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_compatible_versions().Get(i));
              }
            }
          }
           {
            // string hyphen_id = 1;
            if (!this_._internal_hyphen_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_hyphen_id());
            }
            // string protocol_version = 2;
            if (!this_._internal_protocol_version().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_protocol_version());
            }
            // string timestamp = 5;
            if (!this_._internal_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_timestamp());
            }
            // bool is_compatible = 4;
            if (this_._internal_is_compatible() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ProtocolCompatibilityLog::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ProtocolCompatibilityLog*>(&to_msg);
  auto& from = static_cast<const ProtocolCompatibilityLog&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.network.ProtocolCompatibilityLog)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_compatible_versions()->MergeFrom(from._internal_compatible_versions());
  if (!from._internal_hyphen_id().empty()) {
    _this->_internal_set_hyphen_id(from._internal_hyphen_id());
  }
  if (!from._internal_protocol_version().empty()) {
    _this->_internal_set_protocol_version(from._internal_protocol_version());
  }
  if (!from._internal_timestamp().empty()) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (from._internal_is_compatible() != 0) {
    _this->_impl_.is_compatible_ = from._impl_.is_compatible_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ProtocolCompatibilityLog::CopyFrom(const ProtocolCompatibilityLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.network.ProtocolCompatibilityLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ProtocolCompatibilityLog::InternalSwap(ProtocolCompatibilityLog* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.compatible_versions_.InternalSwap(&other->_impl_.compatible_versions_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hyphen_id_, &other->_impl_.hyphen_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.protocol_version_, &other->_impl_.protocol_version_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.timestamp_, &other->_impl_.timestamp_, arena);
        swap(_impl_.is_compatible_, other->_impl_.is_compatible_);
}

::google::protobuf::Metadata ProtocolCompatibilityLog::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace network
}  // namespace seigr
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_network_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
