// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: inter_cluster.proto
// Protobuf C++ Version: 5.29.2

#ifndef inter_5fcluster_2eproto_2epb_2eh
#define inter_5fcluster_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_inter_5fcluster_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_inter_5fcluster_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_inter_5fcluster_2eproto;
namespace seigr {
namespace intercluster {
class ClusterCommunicationErrorLog;
struct ClusterCommunicationErrorLogDefaultTypeInternal;
extern ClusterCommunicationErrorLogDefaultTypeInternal _ClusterCommunicationErrorLog_default_instance_;
class ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUse;
struct ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUseDefaultTypeInternal;
extern ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUseDefaultTypeInternal _ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUse_default_instance_;
class ClusterEventSubscription;
struct ClusterEventSubscriptionDefaultTypeInternal;
extern ClusterEventSubscriptionDefaultTypeInternal _ClusterEventSubscription_default_instance_;
class ClusterEventSubscriptionResponse;
struct ClusterEventSubscriptionResponseDefaultTypeInternal;
extern ClusterEventSubscriptionResponseDefaultTypeInternal _ClusterEventSubscriptionResponse_default_instance_;
class ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUse;
struct ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUseDefaultTypeInternal;
extern ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUseDefaultTypeInternal _ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUse_default_instance_;
class ClusterRequest;
struct ClusterRequestDefaultTypeInternal;
extern ClusterRequestDefaultTypeInternal _ClusterRequest_default_instance_;
class ClusterRequest_RequestMetadataEntry_DoNotUse;
struct ClusterRequest_RequestMetadataEntry_DoNotUseDefaultTypeInternal;
extern ClusterRequest_RequestMetadataEntry_DoNotUseDefaultTypeInternal _ClusterRequest_RequestMetadataEntry_DoNotUse_default_instance_;
class ClusterRequest_RequestParametersEntry_DoNotUse;
struct ClusterRequest_RequestParametersEntry_DoNotUseDefaultTypeInternal;
extern ClusterRequest_RequestParametersEntry_DoNotUseDefaultTypeInternal _ClusterRequest_RequestParametersEntry_DoNotUse_default_instance_;
class ClusterRequest_SecurityContextEntry_DoNotUse;
struct ClusterRequest_SecurityContextEntry_DoNotUseDefaultTypeInternal;
extern ClusterRequest_SecurityContextEntry_DoNotUseDefaultTypeInternal _ClusterRequest_SecurityContextEntry_DoNotUse_default_instance_;
class ClusterResponse;
struct ClusterResponseDefaultTypeInternal;
extern ClusterResponseDefaultTypeInternal _ClusterResponse_default_instance_;
class ClusterResponseAck;
struct ClusterResponseAckDefaultTypeInternal;
extern ClusterResponseAckDefaultTypeInternal _ClusterResponseAck_default_instance_;
class ClusterResponse_PayloadEntry_DoNotUse;
struct ClusterResponse_PayloadEntry_DoNotUseDefaultTypeInternal;
extern ClusterResponse_PayloadEntry_DoNotUseDefaultTypeInternal _ClusterResponse_PayloadEntry_DoNotUse_default_instance_;
class ClusterResponse_ResponseMetadataEntry_DoNotUse;
struct ClusterResponse_ResponseMetadataEntry_DoNotUseDefaultTypeInternal;
extern ClusterResponse_ResponseMetadataEntry_DoNotUseDefaultTypeInternal _ClusterResponse_ResponseMetadataEntry_DoNotUse_default_instance_;
class CommunicationErrorRequest;
struct CommunicationErrorRequestDefaultTypeInternal;
extern CommunicationErrorRequestDefaultTypeInternal _CommunicationErrorRequest_default_instance_;
class CommunicationErrorResponse;
struct CommunicationErrorResponseDefaultTypeInternal;
extern CommunicationErrorResponseDefaultTypeInternal _CommunicationErrorResponse_default_instance_;
class DataTransfer;
struct DataTransferDefaultTypeInternal;
extern DataTransferDefaultTypeInternal _DataTransfer_default_instance_;
class DataTransfer_TransferMetadataEntry_DoNotUse;
struct DataTransfer_TransferMetadataEntry_DoNotUseDefaultTypeInternal;
extern DataTransfer_TransferMetadataEntry_DoNotUseDefaultTypeInternal _DataTransfer_TransferMetadataEntry_DoNotUse_default_instance_;
class TransferStatus;
struct TransferStatusDefaultTypeInternal;
extern TransferStatusDefaultTypeInternal _TransferStatus_default_instance_;
class TransferStatusRequest;
struct TransferStatusRequestDefaultTypeInternal;
extern TransferStatusRequestDefaultTypeInternal _TransferStatusRequest_default_instance_;
class TransferStatus_StatusMetadataEntry_DoNotUse;
struct TransferStatus_StatusMetadataEntry_DoNotUseDefaultTypeInternal;
extern TransferStatus_StatusMetadataEntry_DoNotUseDefaultTypeInternal _TransferStatus_StatusMetadataEntry_DoNotUse_default_instance_;
}  // namespace intercluster
}  // namespace seigr
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace seigr {
namespace intercluster {
enum ClusterRequestType : int {
  REQUEST_TYPE_UNDEFINED = 0,
  REQUEST_RESOURCE = 1,
  REQUEST_DATA = 2,
  REQUEST_WORKLOAD_BALANCE = 3,
  REQUEST_STATUS = 4,
  REQUEST_CUSTOM = 5,
  ClusterRequestType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ClusterRequestType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool ClusterRequestType_IsValid(int value);
extern const uint32_t ClusterRequestType_internal_data_[];
constexpr ClusterRequestType ClusterRequestType_MIN = static_cast<ClusterRequestType>(0);
constexpr ClusterRequestType ClusterRequestType_MAX = static_cast<ClusterRequestType>(5);
constexpr int ClusterRequestType_ARRAYSIZE = 5 + 1;
const ::google::protobuf::EnumDescriptor*
ClusterRequestType_descriptor();
template <typename T>
const std::string& ClusterRequestType_Name(T value) {
  static_assert(std::is_same<T, ClusterRequestType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ClusterRequestType_Name().");
  return ClusterRequestType_Name(static_cast<ClusterRequestType>(value));
}
template <>
inline const std::string& ClusterRequestType_Name(ClusterRequestType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ClusterRequestType_descriptor,
                                                 0, 5>(
      static_cast<int>(value));
}
inline bool ClusterRequestType_Parse(absl::string_view name, ClusterRequestType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ClusterRequestType>(
      ClusterRequestType_descriptor(), name, value);
}
enum ClusterResponseType : int {
  RESPONSE_TYPE_UNDEFINED = 0,
  RESPONSE_ACKNOWLEDGED = 1,
  RESPONSE_DATA_DELIVERED = 2,
  RESPONSE_ACCEPTED = 3,
  RESPONSE_DECLINED = 4,
  RESPONSE_PENDING = 5,
  RESPONSE_FAILED = 6,
  ClusterResponseType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ClusterResponseType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool ClusterResponseType_IsValid(int value);
extern const uint32_t ClusterResponseType_internal_data_[];
constexpr ClusterResponseType ClusterResponseType_MIN = static_cast<ClusterResponseType>(0);
constexpr ClusterResponseType ClusterResponseType_MAX = static_cast<ClusterResponseType>(6);
constexpr int ClusterResponseType_ARRAYSIZE = 6 + 1;
const ::google::protobuf::EnumDescriptor*
ClusterResponseType_descriptor();
template <typename T>
const std::string& ClusterResponseType_Name(T value) {
  static_assert(std::is_same<T, ClusterResponseType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ClusterResponseType_Name().");
  return ClusterResponseType_Name(static_cast<ClusterResponseType>(value));
}
template <>
inline const std::string& ClusterResponseType_Name(ClusterResponseType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ClusterResponseType_descriptor,
                                                 0, 6>(
      static_cast<int>(value));
}
inline bool ClusterResponseType_Parse(absl::string_view name, ClusterResponseType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ClusterResponseType>(
      ClusterResponseType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class TransferStatusRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.intercluster.TransferStatusRequest) */ {
 public:
  inline TransferStatusRequest() : TransferStatusRequest(nullptr) {}
  ~TransferStatusRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TransferStatusRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TransferStatusRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TransferStatusRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline TransferStatusRequest(const TransferStatusRequest& from) : TransferStatusRequest(nullptr, from) {}
  inline TransferStatusRequest(TransferStatusRequest&& from) noexcept
      : TransferStatusRequest(nullptr, std::move(from)) {}
  inline TransferStatusRequest& operator=(const TransferStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline TransferStatusRequest& operator=(TransferStatusRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TransferStatusRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const TransferStatusRequest* internal_default_instance() {
    return reinterpret_cast<const TransferStatusRequest*>(
        &_TransferStatusRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(TransferStatusRequest& a, TransferStatusRequest& b) { a.Swap(&b); }
  inline void Swap(TransferStatusRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TransferStatusRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TransferStatusRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TransferStatusRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TransferStatusRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TransferStatusRequest& from) { TransferStatusRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TransferStatusRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.intercluster.TransferStatusRequest"; }

 protected:
  explicit TransferStatusRequest(::google::protobuf::Arena* arena);
  TransferStatusRequest(::google::protobuf::Arena* arena, const TransferStatusRequest& from);
  TransferStatusRequest(::google::protobuf::Arena* arena, TransferStatusRequest&& from) noexcept
      : TransferStatusRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTransferIdFieldNumber = 1,
  };
  // string transfer_id = 1;
  void clear_transfer_id() ;
  const std::string& transfer_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_transfer_id(Arg_&& arg, Args_... args);
  std::string* mutable_transfer_id();
  PROTOBUF_NODISCARD std::string* release_transfer_id();
  void set_allocated_transfer_id(std::string* value);

  private:
  const std::string& _internal_transfer_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_transfer_id(
      const std::string& value);
  std::string* _internal_mutable_transfer_id();

  public:
  // @@protoc_insertion_point(class_scope:seigr.intercluster.TransferStatusRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      60, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TransferStatusRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr transfer_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_inter_5fcluster_2eproto;
};
// -------------------------------------------------------------------

class TransferStatus_StatusMetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  TransferStatus_StatusMetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TransferStatus_StatusMetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TransferStatus_StatusMetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const TransferStatus_StatusMetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TransferStatus_StatusMetadataEntry_DoNotUse*>(
        &_TransferStatus_StatusMetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_inter_5fcluster_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      70, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class DataTransfer_TransferMetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  DataTransfer_TransferMetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DataTransfer_TransferMetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit DataTransfer_TransferMetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const DataTransfer_TransferMetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const DataTransfer_TransferMetadataEntry_DoNotUse*>(
        &_DataTransfer_TransferMetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_inter_5fcluster_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      70, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class CommunicationErrorResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.intercluster.CommunicationErrorResponse) */ {
 public:
  inline CommunicationErrorResponse() : CommunicationErrorResponse(nullptr) {}
  ~CommunicationErrorResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CommunicationErrorResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CommunicationErrorResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CommunicationErrorResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CommunicationErrorResponse(const CommunicationErrorResponse& from) : CommunicationErrorResponse(nullptr, from) {}
  inline CommunicationErrorResponse(CommunicationErrorResponse&& from) noexcept
      : CommunicationErrorResponse(nullptr, std::move(from)) {}
  inline CommunicationErrorResponse& operator=(const CommunicationErrorResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CommunicationErrorResponse& operator=(CommunicationErrorResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CommunicationErrorResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CommunicationErrorResponse* internal_default_instance() {
    return reinterpret_cast<const CommunicationErrorResponse*>(
        &_CommunicationErrorResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(CommunicationErrorResponse& a, CommunicationErrorResponse& b) { a.Swap(&b); }
  inline void Swap(CommunicationErrorResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CommunicationErrorResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CommunicationErrorResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CommunicationErrorResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CommunicationErrorResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CommunicationErrorResponse& from) { CommunicationErrorResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CommunicationErrorResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.intercluster.CommunicationErrorResponse"; }

 protected:
  explicit CommunicationErrorResponse(::google::protobuf::Arena* arena);
  CommunicationErrorResponse(::google::protobuf::Arena* arena, const CommunicationErrorResponse& from);
  CommunicationErrorResponse(::google::protobuf::Arena* arena, CommunicationErrorResponse&& from) noexcept
      : CommunicationErrorResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageFieldNumber = 2,
    kSuccessFieldNumber = 1,
  };
  // string message = 2;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.intercluster.CommunicationErrorResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      61, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CommunicationErrorResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr message_;
    bool success_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_inter_5fcluster_2eproto;
};
// -------------------------------------------------------------------

class ClusterResponseAck final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.intercluster.ClusterResponseAck) */ {
 public:
  inline ClusterResponseAck() : ClusterResponseAck(nullptr) {}
  ~ClusterResponseAck() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ClusterResponseAck* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ClusterResponseAck));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ClusterResponseAck(
      ::google::protobuf::internal::ConstantInitialized);

  inline ClusterResponseAck(const ClusterResponseAck& from) : ClusterResponseAck(nullptr, from) {}
  inline ClusterResponseAck(ClusterResponseAck&& from) noexcept
      : ClusterResponseAck(nullptr, std::move(from)) {}
  inline ClusterResponseAck& operator=(const ClusterResponseAck& from) {
    CopyFrom(from);
    return *this;
  }
  inline ClusterResponseAck& operator=(ClusterResponseAck&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ClusterResponseAck& default_instance() {
    return *internal_default_instance();
  }
  static inline const ClusterResponseAck* internal_default_instance() {
    return reinterpret_cast<const ClusterResponseAck*>(
        &_ClusterResponseAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(ClusterResponseAck& a, ClusterResponseAck& b) { a.Swap(&b); }
  inline void Swap(ClusterResponseAck* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ClusterResponseAck* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ClusterResponseAck* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ClusterResponseAck>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ClusterResponseAck& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ClusterResponseAck& from) { ClusterResponseAck::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ClusterResponseAck* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.intercluster.ClusterResponseAck"; }

 protected:
  explicit ClusterResponseAck(::google::protobuf::Arena* arena);
  ClusterResponseAck(::google::protobuf::Arena* arena, const ClusterResponseAck& from);
  ClusterResponseAck(::google::protobuf::Arena* arena, ClusterResponseAck&& from) noexcept
      : ClusterResponseAck(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageFieldNumber = 2,
    kResponseIdFieldNumber = 3,
    kSuccessFieldNumber = 1,
  };
  // string message = 2;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // string response_id = 3;
  void clear_response_id() ;
  const std::string& response_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_response_id(Arg_&& arg, Args_... args);
  std::string* mutable_response_id();
  PROTOBUF_NODISCARD std::string* release_response_id();
  void set_allocated_response_id(std::string* value);

  private:
  const std::string& _internal_response_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_response_id(
      const std::string& value);
  std::string* _internal_mutable_response_id();

  public:
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.intercluster.ClusterResponseAck)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      64, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ClusterResponseAck& from_msg);
    ::google::protobuf::internal::ArenaStringPtr message_;
    ::google::protobuf::internal::ArenaStringPtr response_id_;
    bool success_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_inter_5fcluster_2eproto;
};
// -------------------------------------------------------------------

class ClusterResponse_ResponseMetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  ClusterResponse_ResponseMetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ClusterResponse_ResponseMetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit ClusterResponse_ResponseMetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const ClusterResponse_ResponseMetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const ClusterResponse_ResponseMetadataEntry_DoNotUse*>(
        &_ClusterResponse_ResponseMetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_inter_5fcluster_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      73, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class ClusterResponse_PayloadEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_BYTES> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES>;
  ClusterResponse_PayloadEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ClusterResponse_PayloadEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit ClusterResponse_PayloadEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const ClusterResponse_PayloadEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const ClusterResponse_PayloadEntry_DoNotUse*>(
        &_ClusterResponse_PayloadEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_inter_5fcluster_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      59, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class ClusterRequest_SecurityContextEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  ClusterRequest_SecurityContextEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ClusterRequest_SecurityContextEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit ClusterRequest_SecurityContextEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const ClusterRequest_SecurityContextEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const ClusterRequest_SecurityContextEntry_DoNotUse*>(
        &_ClusterRequest_SecurityContextEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_inter_5fcluster_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      71, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class ClusterRequest_RequestParametersEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  ClusterRequest_RequestParametersEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ClusterRequest_RequestParametersEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit ClusterRequest_RequestParametersEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const ClusterRequest_RequestParametersEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const ClusterRequest_RequestParametersEntry_DoNotUse*>(
        &_ClusterRequest_RequestParametersEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_inter_5fcluster_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      73, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class ClusterRequest_RequestMetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  ClusterRequest_RequestMetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ClusterRequest_RequestMetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit ClusterRequest_RequestMetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const ClusterRequest_RequestMetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const ClusterRequest_RequestMetadataEntry_DoNotUse*>(
        &_ClusterRequest_RequestMetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_inter_5fcluster_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      71, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class ClusterEventSubscriptionResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.intercluster.ClusterEventSubscriptionResponse) */ {
 public:
  inline ClusterEventSubscriptionResponse() : ClusterEventSubscriptionResponse(nullptr) {}
  ~ClusterEventSubscriptionResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ClusterEventSubscriptionResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ClusterEventSubscriptionResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ClusterEventSubscriptionResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ClusterEventSubscriptionResponse(const ClusterEventSubscriptionResponse& from) : ClusterEventSubscriptionResponse(nullptr, from) {}
  inline ClusterEventSubscriptionResponse(ClusterEventSubscriptionResponse&& from) noexcept
      : ClusterEventSubscriptionResponse(nullptr, std::move(from)) {}
  inline ClusterEventSubscriptionResponse& operator=(const ClusterEventSubscriptionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ClusterEventSubscriptionResponse& operator=(ClusterEventSubscriptionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ClusterEventSubscriptionResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ClusterEventSubscriptionResponse* internal_default_instance() {
    return reinterpret_cast<const ClusterEventSubscriptionResponse*>(
        &_ClusterEventSubscriptionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(ClusterEventSubscriptionResponse& a, ClusterEventSubscriptionResponse& b) { a.Swap(&b); }
  inline void Swap(ClusterEventSubscriptionResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ClusterEventSubscriptionResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ClusterEventSubscriptionResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ClusterEventSubscriptionResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ClusterEventSubscriptionResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ClusterEventSubscriptionResponse& from) { ClusterEventSubscriptionResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ClusterEventSubscriptionResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.intercluster.ClusterEventSubscriptionResponse"; }

 protected:
  explicit ClusterEventSubscriptionResponse(::google::protobuf::Arena* arena);
  ClusterEventSubscriptionResponse(::google::protobuf::Arena* arena, const ClusterEventSubscriptionResponse& from);
  ClusterEventSubscriptionResponse(::google::protobuf::Arena* arena, ClusterEventSubscriptionResponse&& from) noexcept
      : ClusterEventSubscriptionResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSubscriptionIdFieldNumber = 2,
    kMessageFieldNumber = 3,
    kSuccessFieldNumber = 1,
  };
  // string subscription_id = 2;
  void clear_subscription_id() ;
  const std::string& subscription_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_subscription_id(Arg_&& arg, Args_... args);
  std::string* mutable_subscription_id();
  PROTOBUF_NODISCARD std::string* release_subscription_id();
  void set_allocated_subscription_id(std::string* value);

  private:
  const std::string& _internal_subscription_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_subscription_id(
      const std::string& value);
  std::string* _internal_mutable_subscription_id();

  public:
  // string message = 3;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.intercluster.ClusterEventSubscriptionResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      82, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ClusterEventSubscriptionResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr subscription_id_;
    ::google::protobuf::internal::ArenaStringPtr message_;
    bool success_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_inter_5fcluster_2eproto;
};
// -------------------------------------------------------------------

class ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUse*>(
        &_ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_inter_5fcluster_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      86, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUse*>(
        &_ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_inter_5fcluster_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      83, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class TransferStatus final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.intercluster.TransferStatus) */ {
 public:
  inline TransferStatus() : TransferStatus(nullptr) {}
  ~TransferStatus() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TransferStatus* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TransferStatus));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TransferStatus(
      ::google::protobuf::internal::ConstantInitialized);

  inline TransferStatus(const TransferStatus& from) : TransferStatus(nullptr, from) {}
  inline TransferStatus(TransferStatus&& from) noexcept
      : TransferStatus(nullptr, std::move(from)) {}
  inline TransferStatus& operator=(const TransferStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline TransferStatus& operator=(TransferStatus&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TransferStatus& default_instance() {
    return *internal_default_instance();
  }
  static inline const TransferStatus* internal_default_instance() {
    return reinterpret_cast<const TransferStatus*>(
        &_TransferStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(TransferStatus& a, TransferStatus& b) { a.Swap(&b); }
  inline void Swap(TransferStatus* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TransferStatus* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TransferStatus* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TransferStatus>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TransferStatus& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TransferStatus& from) { TransferStatus::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TransferStatus* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.intercluster.TransferStatus"; }

 protected:
  explicit TransferStatus(::google::protobuf::Arena* arena);
  TransferStatus(::google::protobuf::Arena* arena, const TransferStatus& from);
  TransferStatus(::google::protobuf::Arena* arena, TransferStatus&& from) noexcept
      : TransferStatus(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStatusMetadataFieldNumber = 7,
    kTransferIdFieldNumber = 1,
    kCurrentStatusFieldNumber = 2,
    kLastUpdatedFieldNumber = 3,
    kSourceClusterIdFieldNumber = 5,
    kDestinationClusterIdFieldNumber = 6,
    kProgressPercentageFieldNumber = 4,
  };
  // map<string, string> status_metadata = 7;
  int status_metadata_size() const;
  private:
  int _internal_status_metadata_size() const;

  public:
  void clear_status_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& status_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_status_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_status_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_status_metadata();

  public:
  // string transfer_id = 1;
  void clear_transfer_id() ;
  const std::string& transfer_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_transfer_id(Arg_&& arg, Args_... args);
  std::string* mutable_transfer_id();
  PROTOBUF_NODISCARD std::string* release_transfer_id();
  void set_allocated_transfer_id(std::string* value);

  private:
  const std::string& _internal_transfer_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_transfer_id(
      const std::string& value);
  std::string* _internal_mutable_transfer_id();

  public:
  // string current_status = 2;
  void clear_current_status() ;
  const std::string& current_status() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_current_status(Arg_&& arg, Args_... args);
  std::string* mutable_current_status();
  PROTOBUF_NODISCARD std::string* release_current_status();
  void set_allocated_current_status(std::string* value);

  private:
  const std::string& _internal_current_status() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_current_status(
      const std::string& value);
  std::string* _internal_mutable_current_status();

  public:
  // string last_updated = 3;
  void clear_last_updated() ;
  const std::string& last_updated() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_last_updated(Arg_&& arg, Args_... args);
  std::string* mutable_last_updated();
  PROTOBUF_NODISCARD std::string* release_last_updated();
  void set_allocated_last_updated(std::string* value);

  private:
  const std::string& _internal_last_updated() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_last_updated(
      const std::string& value);
  std::string* _internal_mutable_last_updated();

  public:
  // string source_cluster_id = 5;
  void clear_source_cluster_id() ;
  const std::string& source_cluster_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_source_cluster_id(Arg_&& arg, Args_... args);
  std::string* mutable_source_cluster_id();
  PROTOBUF_NODISCARD std::string* release_source_cluster_id();
  void set_allocated_source_cluster_id(std::string* value);

  private:
  const std::string& _internal_source_cluster_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_source_cluster_id(
      const std::string& value);
  std::string* _internal_mutable_source_cluster_id();

  public:
  // string destination_cluster_id = 6;
  void clear_destination_cluster_id() ;
  const std::string& destination_cluster_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_destination_cluster_id(Arg_&& arg, Args_... args);
  std::string* mutable_destination_cluster_id();
  PROTOBUF_NODISCARD std::string* release_destination_cluster_id();
  void set_allocated_destination_cluster_id(std::string* value);

  private:
  const std::string& _internal_destination_cluster_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_destination_cluster_id(
      const std::string& value);
  std::string* _internal_mutable_destination_cluster_id();

  public:
  // double progress_percentage = 4;
  void clear_progress_percentage() ;
  double progress_percentage() const;
  void set_progress_percentage(double value);

  private:
  double _internal_progress_percentage() const;
  void _internal_set_progress_percentage(double value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.intercluster.TransferStatus)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 1,
      133, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TransferStatus& from_msg);
    ::google::protobuf::internal::MapField<TransferStatus_StatusMetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        status_metadata_;
    ::google::protobuf::internal::ArenaStringPtr transfer_id_;
    ::google::protobuf::internal::ArenaStringPtr current_status_;
    ::google::protobuf::internal::ArenaStringPtr last_updated_;
    ::google::protobuf::internal::ArenaStringPtr source_cluster_id_;
    ::google::protobuf::internal::ArenaStringPtr destination_cluster_id_;
    double progress_percentage_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_inter_5fcluster_2eproto;
};
// -------------------------------------------------------------------

class DataTransfer final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.intercluster.DataTransfer) */ {
 public:
  inline DataTransfer() : DataTransfer(nullptr) {}
  ~DataTransfer() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DataTransfer* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DataTransfer));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DataTransfer(
      ::google::protobuf::internal::ConstantInitialized);

  inline DataTransfer(const DataTransfer& from) : DataTransfer(nullptr, from) {}
  inline DataTransfer(DataTransfer&& from) noexcept
      : DataTransfer(nullptr, std::move(from)) {}
  inline DataTransfer& operator=(const DataTransfer& from) {
    CopyFrom(from);
    return *this;
  }
  inline DataTransfer& operator=(DataTransfer&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DataTransfer& default_instance() {
    return *internal_default_instance();
  }
  static inline const DataTransfer* internal_default_instance() {
    return reinterpret_cast<const DataTransfer*>(
        &_DataTransfer_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(DataTransfer& a, DataTransfer& b) { a.Swap(&b); }
  inline void Swap(DataTransfer* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DataTransfer* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DataTransfer* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DataTransfer>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DataTransfer& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DataTransfer& from) { DataTransfer::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DataTransfer* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.intercluster.DataTransfer"; }

 protected:
  explicit DataTransfer(::google::protobuf::Arena* arena);
  DataTransfer(::google::protobuf::Arena* arena, const DataTransfer& from);
  DataTransfer(::google::protobuf::Arena* arena, DataTransfer&& from) noexcept
      : DataTransfer(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTransferMetadataFieldNumber = 12,
    kTransferIdFieldNumber = 1,
    kSourceClusterIdFieldNumber = 2,
    kDestinationClusterIdFieldNumber = 3,
    kDataPayloadFieldNumber = 4,
    kDataTypeFieldNumber = 5,
    kEncryptionSchemeFieldNumber = 6,
    kCompressionMethodFieldNumber = 7,
    kTransferFormatFieldNumber = 8,
    kDataSizeBytesFieldNumber = 9,
    kValidateIntegrityFieldNumber = 10,
    kTransferTimeoutFieldNumber = 11,
  };
  // map<string, string> transfer_metadata = 12;
  int transfer_metadata_size() const;
  private:
  int _internal_transfer_metadata_size() const;

  public:
  void clear_transfer_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& transfer_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_transfer_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_transfer_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_transfer_metadata();

  public:
  // string transfer_id = 1;
  void clear_transfer_id() ;
  const std::string& transfer_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_transfer_id(Arg_&& arg, Args_... args);
  std::string* mutable_transfer_id();
  PROTOBUF_NODISCARD std::string* release_transfer_id();
  void set_allocated_transfer_id(std::string* value);

  private:
  const std::string& _internal_transfer_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_transfer_id(
      const std::string& value);
  std::string* _internal_mutable_transfer_id();

  public:
  // string source_cluster_id = 2;
  void clear_source_cluster_id() ;
  const std::string& source_cluster_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_source_cluster_id(Arg_&& arg, Args_... args);
  std::string* mutable_source_cluster_id();
  PROTOBUF_NODISCARD std::string* release_source_cluster_id();
  void set_allocated_source_cluster_id(std::string* value);

  private:
  const std::string& _internal_source_cluster_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_source_cluster_id(
      const std::string& value);
  std::string* _internal_mutable_source_cluster_id();

  public:
  // string destination_cluster_id = 3;
  void clear_destination_cluster_id() ;
  const std::string& destination_cluster_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_destination_cluster_id(Arg_&& arg, Args_... args);
  std::string* mutable_destination_cluster_id();
  PROTOBUF_NODISCARD std::string* release_destination_cluster_id();
  void set_allocated_destination_cluster_id(std::string* value);

  private:
  const std::string& _internal_destination_cluster_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_destination_cluster_id(
      const std::string& value);
  std::string* _internal_mutable_destination_cluster_id();

  public:
  // bytes data_payload = 4;
  void clear_data_payload() ;
  const std::string& data_payload() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data_payload(Arg_&& arg, Args_... args);
  std::string* mutable_data_payload();
  PROTOBUF_NODISCARD std::string* release_data_payload();
  void set_allocated_data_payload(std::string* value);

  private:
  const std::string& _internal_data_payload() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data_payload(
      const std::string& value);
  std::string* _internal_mutable_data_payload();

  public:
  // string data_type = 5;
  void clear_data_type() ;
  const std::string& data_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data_type(Arg_&& arg, Args_... args);
  std::string* mutable_data_type();
  PROTOBUF_NODISCARD std::string* release_data_type();
  void set_allocated_data_type(std::string* value);

  private:
  const std::string& _internal_data_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data_type(
      const std::string& value);
  std::string* _internal_mutable_data_type();

  public:
  // string encryption_scheme = 6;
  void clear_encryption_scheme() ;
  const std::string& encryption_scheme() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_encryption_scheme(Arg_&& arg, Args_... args);
  std::string* mutable_encryption_scheme();
  PROTOBUF_NODISCARD std::string* release_encryption_scheme();
  void set_allocated_encryption_scheme(std::string* value);

  private:
  const std::string& _internal_encryption_scheme() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_encryption_scheme(
      const std::string& value);
  std::string* _internal_mutable_encryption_scheme();

  public:
  // string compression_method = 7;
  void clear_compression_method() ;
  const std::string& compression_method() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_compression_method(Arg_&& arg, Args_... args);
  std::string* mutable_compression_method();
  PROTOBUF_NODISCARD std::string* release_compression_method();
  void set_allocated_compression_method(std::string* value);

  private:
  const std::string& _internal_compression_method() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_compression_method(
      const std::string& value);
  std::string* _internal_mutable_compression_method();

  public:
  // string transfer_format = 8;
  void clear_transfer_format() ;
  const std::string& transfer_format() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_transfer_format(Arg_&& arg, Args_... args);
  std::string* mutable_transfer_format();
  PROTOBUF_NODISCARD std::string* release_transfer_format();
  void set_allocated_transfer_format(std::string* value);

  private:
  const std::string& _internal_transfer_format() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_transfer_format(
      const std::string& value);
  std::string* _internal_mutable_transfer_format();

  public:
  // int64 data_size_bytes = 9;
  void clear_data_size_bytes() ;
  ::int64_t data_size_bytes() const;
  void set_data_size_bytes(::int64_t value);

  private:
  ::int64_t _internal_data_size_bytes() const;
  void _internal_set_data_size_bytes(::int64_t value);

  public:
  // bool validate_integrity = 10;
  void clear_validate_integrity() ;
  bool validate_integrity() const;
  void set_validate_integrity(bool value);

  private:
  bool _internal_validate_integrity() const;
  void _internal_set_validate_integrity(bool value);

  public:
  // int32 transfer_timeout = 11;
  void clear_transfer_timeout() ;
  ::int32_t transfer_timeout() const;
  void set_transfer_timeout(::int32_t value);

  private:
  ::int32_t _internal_transfer_timeout() const;
  void _internal_set_transfer_timeout(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.intercluster.DataTransfer)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 12, 1,
      174, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DataTransfer& from_msg);
    ::google::protobuf::internal::MapField<DataTransfer_TransferMetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        transfer_metadata_;
    ::google::protobuf::internal::ArenaStringPtr transfer_id_;
    ::google::protobuf::internal::ArenaStringPtr source_cluster_id_;
    ::google::protobuf::internal::ArenaStringPtr destination_cluster_id_;
    ::google::protobuf::internal::ArenaStringPtr data_payload_;
    ::google::protobuf::internal::ArenaStringPtr data_type_;
    ::google::protobuf::internal::ArenaStringPtr encryption_scheme_;
    ::google::protobuf::internal::ArenaStringPtr compression_method_;
    ::google::protobuf::internal::ArenaStringPtr transfer_format_;
    ::int64_t data_size_bytes_;
    bool validate_integrity_;
    ::int32_t transfer_timeout_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_inter_5fcluster_2eproto;
};
// -------------------------------------------------------------------

class ClusterResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.intercluster.ClusterResponse) */ {
 public:
  inline ClusterResponse() : ClusterResponse(nullptr) {}
  ~ClusterResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ClusterResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ClusterResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ClusterResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ClusterResponse(const ClusterResponse& from) : ClusterResponse(nullptr, from) {}
  inline ClusterResponse(ClusterResponse&& from) noexcept
      : ClusterResponse(nullptr, std::move(from)) {}
  inline ClusterResponse& operator=(const ClusterResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ClusterResponse& operator=(ClusterResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ClusterResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ClusterResponse* internal_default_instance() {
    return reinterpret_cast<const ClusterResponse*>(
        &_ClusterResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(ClusterResponse& a, ClusterResponse& b) { a.Swap(&b); }
  inline void Swap(ClusterResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ClusterResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ClusterResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ClusterResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ClusterResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ClusterResponse& from) { ClusterResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ClusterResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.intercluster.ClusterResponse"; }

 protected:
  explicit ClusterResponse(::google::protobuf::Arena* arena);
  ClusterResponse(::google::protobuf::Arena* arena, const ClusterResponse& from);
  ClusterResponse(::google::protobuf::Arena* arena, ClusterResponse&& from) noexcept
      : ClusterResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResponseMetadataFieldNumber = 7,
    kPayloadFieldNumber = 9,
    kResponseIdFieldNumber = 1,
    kRequestIdFieldNumber = 2,
    kOriginClusterIdFieldNumber = 4,
    kTargetClusterIdFieldNumber = 5,
    kResponseTimestampFieldNumber = 6,
    kStatusMessageFieldNumber = 8,
    kResponseTypeFieldNumber = 3,
  };
  // map<string, string> response_metadata = 7;
  int response_metadata_size() const;
  private:
  int _internal_response_metadata_size() const;

  public:
  void clear_response_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& response_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_response_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_response_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_response_metadata();

  public:
  // map<string, bytes> payload = 9;
  int payload_size() const;
  private:
  int _internal_payload_size() const;

  public:
  void clear_payload() ;
  const ::google::protobuf::Map<std::string, std::string>& payload() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_payload();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_payload() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_payload();

  public:
  // string response_id = 1;
  void clear_response_id() ;
  const std::string& response_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_response_id(Arg_&& arg, Args_... args);
  std::string* mutable_response_id();
  PROTOBUF_NODISCARD std::string* release_response_id();
  void set_allocated_response_id(std::string* value);

  private:
  const std::string& _internal_response_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_response_id(
      const std::string& value);
  std::string* _internal_mutable_response_id();

  public:
  // string request_id = 2;
  void clear_request_id() ;
  const std::string& request_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_request_id(Arg_&& arg, Args_... args);
  std::string* mutable_request_id();
  PROTOBUF_NODISCARD std::string* release_request_id();
  void set_allocated_request_id(std::string* value);

  private:
  const std::string& _internal_request_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_request_id(
      const std::string& value);
  std::string* _internal_mutable_request_id();

  public:
  // string origin_cluster_id = 4;
  void clear_origin_cluster_id() ;
  const std::string& origin_cluster_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_origin_cluster_id(Arg_&& arg, Args_... args);
  std::string* mutable_origin_cluster_id();
  PROTOBUF_NODISCARD std::string* release_origin_cluster_id();
  void set_allocated_origin_cluster_id(std::string* value);

  private:
  const std::string& _internal_origin_cluster_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_origin_cluster_id(
      const std::string& value);
  std::string* _internal_mutable_origin_cluster_id();

  public:
  // string target_cluster_id = 5;
  void clear_target_cluster_id() ;
  const std::string& target_cluster_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_target_cluster_id(Arg_&& arg, Args_... args);
  std::string* mutable_target_cluster_id();
  PROTOBUF_NODISCARD std::string* release_target_cluster_id();
  void set_allocated_target_cluster_id(std::string* value);

  private:
  const std::string& _internal_target_cluster_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_target_cluster_id(
      const std::string& value);
  std::string* _internal_mutable_target_cluster_id();

  public:
  // string response_timestamp = 6;
  void clear_response_timestamp() ;
  const std::string& response_timestamp() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_response_timestamp(Arg_&& arg, Args_... args);
  std::string* mutable_response_timestamp();
  PROTOBUF_NODISCARD std::string* release_response_timestamp();
  void set_allocated_response_timestamp(std::string* value);

  private:
  const std::string& _internal_response_timestamp() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_response_timestamp(
      const std::string& value);
  std::string* _internal_mutable_response_timestamp();

  public:
  // string status_message = 8;
  void clear_status_message() ;
  const std::string& status_message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_status_message(Arg_&& arg, Args_... args);
  std::string* mutable_status_message();
  PROTOBUF_NODISCARD std::string* release_status_message();
  void set_allocated_status_message(std::string* value);

  private:
  const std::string& _internal_status_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_status_message(
      const std::string& value);
  std::string* _internal_mutable_status_message();

  public:
  // .seigr.intercluster.ClusterResponseType response_type = 3;
  void clear_response_type() ;
  ::seigr::intercluster::ClusterResponseType response_type() const;
  void set_response_type(::seigr::intercluster::ClusterResponseType value);

  private:
  ::seigr::intercluster::ClusterResponseType _internal_response_type() const;
  void _internal_set_response_type(::seigr::intercluster::ClusterResponseType value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.intercluster.ClusterResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 9, 2,
      162, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ClusterResponse& from_msg);
    ::google::protobuf::internal::MapField<ClusterResponse_ResponseMetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        response_metadata_;
    ::google::protobuf::internal::MapField<ClusterResponse_PayloadEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES>
        payload_;
    ::google::protobuf::internal::ArenaStringPtr response_id_;
    ::google::protobuf::internal::ArenaStringPtr request_id_;
    ::google::protobuf::internal::ArenaStringPtr origin_cluster_id_;
    ::google::protobuf::internal::ArenaStringPtr target_cluster_id_;
    ::google::protobuf::internal::ArenaStringPtr response_timestamp_;
    ::google::protobuf::internal::ArenaStringPtr status_message_;
    int response_type_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_inter_5fcluster_2eproto;
};
// -------------------------------------------------------------------

class ClusterRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.intercluster.ClusterRequest) */ {
 public:
  inline ClusterRequest() : ClusterRequest(nullptr) {}
  ~ClusterRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ClusterRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ClusterRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ClusterRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ClusterRequest(const ClusterRequest& from) : ClusterRequest(nullptr, from) {}
  inline ClusterRequest(ClusterRequest&& from) noexcept
      : ClusterRequest(nullptr, std::move(from)) {}
  inline ClusterRequest& operator=(const ClusterRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ClusterRequest& operator=(ClusterRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ClusterRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ClusterRequest* internal_default_instance() {
    return reinterpret_cast<const ClusterRequest*>(
        &_ClusterRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(ClusterRequest& a, ClusterRequest& b) { a.Swap(&b); }
  inline void Swap(ClusterRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ClusterRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ClusterRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ClusterRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ClusterRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ClusterRequest& from) { ClusterRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ClusterRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.intercluster.ClusterRequest"; }

 protected:
  explicit ClusterRequest(::google::protobuf::Arena* arena);
  ClusterRequest(::google::protobuf::Arena* arena, const ClusterRequest& from);
  ClusterRequest(::google::protobuf::Arena* arena, ClusterRequest&& from) noexcept
      : ClusterRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRequestParametersFieldNumber = 5,
    kSecurityContextFieldNumber = 7,
    kRequestMetadataFieldNumber = 9,
    kRequestIdFieldNumber = 1,
    kOriginClusterIdFieldNumber = 3,
    kTargetClusterIdFieldNumber = 4,
    kInitiatedAtFieldNumber = 6,
    kRequestTypeFieldNumber = 2,
    kRequireAcknowledgmentFieldNumber = 8,
  };
  // map<string, string> request_parameters = 5;
  int request_parameters_size() const;
  private:
  int _internal_request_parameters_size() const;

  public:
  void clear_request_parameters() ;
  const ::google::protobuf::Map<std::string, std::string>& request_parameters() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_request_parameters();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_request_parameters() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_request_parameters();

  public:
  // map<string, string> security_context = 7;
  int security_context_size() const;
  private:
  int _internal_security_context_size() const;

  public:
  void clear_security_context() ;
  const ::google::protobuf::Map<std::string, std::string>& security_context() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_security_context();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_security_context() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_security_context();

  public:
  // map<string, string> request_metadata = 9;
  int request_metadata_size() const;
  private:
  int _internal_request_metadata_size() const;

  public:
  void clear_request_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& request_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_request_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_request_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_request_metadata();

  public:
  // string request_id = 1;
  void clear_request_id() ;
  const std::string& request_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_request_id(Arg_&& arg, Args_... args);
  std::string* mutable_request_id();
  PROTOBUF_NODISCARD std::string* release_request_id();
  void set_allocated_request_id(std::string* value);

  private:
  const std::string& _internal_request_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_request_id(
      const std::string& value);
  std::string* _internal_mutable_request_id();

  public:
  // string origin_cluster_id = 3;
  void clear_origin_cluster_id() ;
  const std::string& origin_cluster_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_origin_cluster_id(Arg_&& arg, Args_... args);
  std::string* mutable_origin_cluster_id();
  PROTOBUF_NODISCARD std::string* release_origin_cluster_id();
  void set_allocated_origin_cluster_id(std::string* value);

  private:
  const std::string& _internal_origin_cluster_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_origin_cluster_id(
      const std::string& value);
  std::string* _internal_mutable_origin_cluster_id();

  public:
  // string target_cluster_id = 4;
  void clear_target_cluster_id() ;
  const std::string& target_cluster_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_target_cluster_id(Arg_&& arg, Args_... args);
  std::string* mutable_target_cluster_id();
  PROTOBUF_NODISCARD std::string* release_target_cluster_id();
  void set_allocated_target_cluster_id(std::string* value);

  private:
  const std::string& _internal_target_cluster_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_target_cluster_id(
      const std::string& value);
  std::string* _internal_mutable_target_cluster_id();

  public:
  // string initiated_at = 6;
  void clear_initiated_at() ;
  const std::string& initiated_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_initiated_at(Arg_&& arg, Args_... args);
  std::string* mutable_initiated_at();
  PROTOBUF_NODISCARD std::string* release_initiated_at();
  void set_allocated_initiated_at(std::string* value);

  private:
  const std::string& _internal_initiated_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_initiated_at(
      const std::string& value);
  std::string* _internal_mutable_initiated_at();

  public:
  // .seigr.intercluster.ClusterRequestType request_type = 2;
  void clear_request_type() ;
  ::seigr::intercluster::ClusterRequestType request_type() const;
  void set_request_type(::seigr::intercluster::ClusterRequestType value);

  private:
  ::seigr::intercluster::ClusterRequestType _internal_request_type() const;
  void _internal_set_request_type(::seigr::intercluster::ClusterRequestType value);

  public:
  // bool require_acknowledgment = 8;
  void clear_require_acknowledgment() ;
  bool require_acknowledgment() const;
  void set_require_acknowledgment(bool value);

  private:
  bool _internal_require_acknowledgment() const;
  void _internal_set_require_acknowledgment(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.intercluster.ClusterRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 9, 3,
      156, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ClusterRequest& from_msg);
    ::google::protobuf::internal::MapField<ClusterRequest_RequestParametersEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        request_parameters_;
    ::google::protobuf::internal::MapField<ClusterRequest_SecurityContextEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        security_context_;
    ::google::protobuf::internal::MapField<ClusterRequest_RequestMetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        request_metadata_;
    ::google::protobuf::internal::ArenaStringPtr request_id_;
    ::google::protobuf::internal::ArenaStringPtr origin_cluster_id_;
    ::google::protobuf::internal::ArenaStringPtr target_cluster_id_;
    ::google::protobuf::internal::ArenaStringPtr initiated_at_;
    int request_type_;
    bool require_acknowledgment_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_inter_5fcluster_2eproto;
};
// -------------------------------------------------------------------

class ClusterEventSubscription final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.intercluster.ClusterEventSubscription) */ {
 public:
  inline ClusterEventSubscription() : ClusterEventSubscription(nullptr) {}
  ~ClusterEventSubscription() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ClusterEventSubscription* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ClusterEventSubscription));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ClusterEventSubscription(
      ::google::protobuf::internal::ConstantInitialized);

  inline ClusterEventSubscription(const ClusterEventSubscription& from) : ClusterEventSubscription(nullptr, from) {}
  inline ClusterEventSubscription(ClusterEventSubscription&& from) noexcept
      : ClusterEventSubscription(nullptr, std::move(from)) {}
  inline ClusterEventSubscription& operator=(const ClusterEventSubscription& from) {
    CopyFrom(from);
    return *this;
  }
  inline ClusterEventSubscription& operator=(ClusterEventSubscription&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ClusterEventSubscription& default_instance() {
    return *internal_default_instance();
  }
  static inline const ClusterEventSubscription* internal_default_instance() {
    return reinterpret_cast<const ClusterEventSubscription*>(
        &_ClusterEventSubscription_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(ClusterEventSubscription& a, ClusterEventSubscription& b) { a.Swap(&b); }
  inline void Swap(ClusterEventSubscription* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ClusterEventSubscription* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ClusterEventSubscription* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ClusterEventSubscription>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ClusterEventSubscription& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ClusterEventSubscription& from) { ClusterEventSubscription::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ClusterEventSubscription* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.intercluster.ClusterEventSubscription"; }

 protected:
  explicit ClusterEventSubscription(::google::protobuf::Arena* arena);
  ClusterEventSubscription(::google::protobuf::Arena* arena, const ClusterEventSubscription& from);
  ClusterEventSubscription(::google::protobuf::Arena* arena, ClusterEventSubscription&& from) noexcept
      : ClusterEventSubscription(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSubscribedEventsFieldNumber = 3,
    kSubscriptionMetadataFieldNumber = 5,
    kSubscriptionIdFieldNumber = 1,
    kSubscriberClusterIdFieldNumber = 2,
    kCreatedAtFieldNumber = 6,
    kReceiveAsyncNotificationsFieldNumber = 4,
  };
  // repeated .seigr.intercluster.ClusterRequestType subscribed_events = 3;
  int subscribed_events_size() const;
  private:
  int _internal_subscribed_events_size() const;

  public:
  void clear_subscribed_events() ;
  public:
  ::seigr::intercluster::ClusterRequestType subscribed_events(int index) const;
  void set_subscribed_events(int index, ::seigr::intercluster::ClusterRequestType value);
  void add_subscribed_events(::seigr::intercluster::ClusterRequestType value);
  const ::google::protobuf::RepeatedField<int>& subscribed_events() const;
  ::google::protobuf::RepeatedField<int>* mutable_subscribed_events();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_subscribed_events() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_subscribed_events();

  public:
  // map<string, string> subscription_metadata = 5;
  int subscription_metadata_size() const;
  private:
  int _internal_subscription_metadata_size() const;

  public:
  void clear_subscription_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& subscription_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_subscription_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_subscription_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_subscription_metadata();

  public:
  // string subscription_id = 1;
  void clear_subscription_id() ;
  const std::string& subscription_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_subscription_id(Arg_&& arg, Args_... args);
  std::string* mutable_subscription_id();
  PROTOBUF_NODISCARD std::string* release_subscription_id();
  void set_allocated_subscription_id(std::string* value);

  private:
  const std::string& _internal_subscription_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_subscription_id(
      const std::string& value);
  std::string* _internal_mutable_subscription_id();

  public:
  // string subscriber_cluster_id = 2;
  void clear_subscriber_cluster_id() ;
  const std::string& subscriber_cluster_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_subscriber_cluster_id(Arg_&& arg, Args_... args);
  std::string* mutable_subscriber_cluster_id();
  PROTOBUF_NODISCARD std::string* release_subscriber_cluster_id();
  void set_allocated_subscriber_cluster_id(std::string* value);

  private:
  const std::string& _internal_subscriber_cluster_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_subscriber_cluster_id(
      const std::string& value);
  std::string* _internal_mutable_subscriber_cluster_id();

  public:
  // string created_at = 6;
  void clear_created_at() ;
  const std::string& created_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_created_at(Arg_&& arg, Args_... args);
  std::string* mutable_created_at();
  PROTOBUF_NODISCARD std::string* release_created_at();
  void set_allocated_created_at(std::string* value);

  private:
  const std::string& _internal_created_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_created_at(
      const std::string& value);
  std::string* _internal_mutable_created_at();

  public:
  // bool receive_async_notifications = 4;
  void clear_receive_async_notifications() ;
  bool receive_async_notifications() const;
  void set_receive_async_notifications(bool value);

  private:
  bool _internal_receive_async_notifications() const;
  void _internal_set_receive_async_notifications(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.intercluster.ClusterEventSubscription)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 1,
      119, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ClusterEventSubscription& from_msg);
    ::google::protobuf::RepeatedField<int> subscribed_events_;
    ::google::protobuf::internal::CachedSize _subscribed_events_cached_byte_size_;
    ::google::protobuf::internal::MapField<ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        subscription_metadata_;
    ::google::protobuf::internal::ArenaStringPtr subscription_id_;
    ::google::protobuf::internal::ArenaStringPtr subscriber_cluster_id_;
    ::google::protobuf::internal::ArenaStringPtr created_at_;
    bool receive_async_notifications_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_inter_5fcluster_2eproto;
};
// -------------------------------------------------------------------

class ClusterCommunicationErrorLog final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.intercluster.ClusterCommunicationErrorLog) */ {
 public:
  inline ClusterCommunicationErrorLog() : ClusterCommunicationErrorLog(nullptr) {}
  ~ClusterCommunicationErrorLog() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ClusterCommunicationErrorLog* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ClusterCommunicationErrorLog));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ClusterCommunicationErrorLog(
      ::google::protobuf::internal::ConstantInitialized);

  inline ClusterCommunicationErrorLog(const ClusterCommunicationErrorLog& from) : ClusterCommunicationErrorLog(nullptr, from) {}
  inline ClusterCommunicationErrorLog(ClusterCommunicationErrorLog&& from) noexcept
      : ClusterCommunicationErrorLog(nullptr, std::move(from)) {}
  inline ClusterCommunicationErrorLog& operator=(const ClusterCommunicationErrorLog& from) {
    CopyFrom(from);
    return *this;
  }
  inline ClusterCommunicationErrorLog& operator=(ClusterCommunicationErrorLog&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ClusterCommunicationErrorLog& default_instance() {
    return *internal_default_instance();
  }
  static inline const ClusterCommunicationErrorLog* internal_default_instance() {
    return reinterpret_cast<const ClusterCommunicationErrorLog*>(
        &_ClusterCommunicationErrorLog_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(ClusterCommunicationErrorLog& a, ClusterCommunicationErrorLog& b) { a.Swap(&b); }
  inline void Swap(ClusterCommunicationErrorLog* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ClusterCommunicationErrorLog* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ClusterCommunicationErrorLog* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ClusterCommunicationErrorLog>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ClusterCommunicationErrorLog& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ClusterCommunicationErrorLog& from) { ClusterCommunicationErrorLog::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ClusterCommunicationErrorLog* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.intercluster.ClusterCommunicationErrorLog"; }

 protected:
  explicit ClusterCommunicationErrorLog(::google::protobuf::Arena* arena);
  ClusterCommunicationErrorLog(::google::protobuf::Arena* arena, const ClusterCommunicationErrorLog& from);
  ClusterCommunicationErrorLog(::google::protobuf::Arena* arena, ClusterCommunicationErrorLog&& from) noexcept
      : ClusterCommunicationErrorLog(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kErrorMetadataFieldNumber = 7,
    kErrorIdFieldNumber = 1,
    kAffectedClusterIdFieldNumber = 2,
    kTimestampFieldNumber = 3,
    kErrorMessageFieldNumber = 4,
    kRequestIdFieldNumber = 5,
    kResponseIdFieldNumber = 6,
  };
  // map<string, string> error_metadata = 7;
  int error_metadata_size() const;
  private:
  int _internal_error_metadata_size() const;

  public:
  void clear_error_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& error_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_error_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_error_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_error_metadata();

  public:
  // string error_id = 1;
  void clear_error_id() ;
  const std::string& error_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_error_id(Arg_&& arg, Args_... args);
  std::string* mutable_error_id();
  PROTOBUF_NODISCARD std::string* release_error_id();
  void set_allocated_error_id(std::string* value);

  private:
  const std::string& _internal_error_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_error_id(
      const std::string& value);
  std::string* _internal_mutable_error_id();

  public:
  // string affected_cluster_id = 2;
  void clear_affected_cluster_id() ;
  const std::string& affected_cluster_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_affected_cluster_id(Arg_&& arg, Args_... args);
  std::string* mutable_affected_cluster_id();
  PROTOBUF_NODISCARD std::string* release_affected_cluster_id();
  void set_allocated_affected_cluster_id(std::string* value);

  private:
  const std::string& _internal_affected_cluster_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_affected_cluster_id(
      const std::string& value);
  std::string* _internal_mutable_affected_cluster_id();

  public:
  // string timestamp = 3;
  void clear_timestamp() ;
  const std::string& timestamp() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_timestamp(Arg_&& arg, Args_... args);
  std::string* mutable_timestamp();
  PROTOBUF_NODISCARD std::string* release_timestamp();
  void set_allocated_timestamp(std::string* value);

  private:
  const std::string& _internal_timestamp() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_timestamp(
      const std::string& value);
  std::string* _internal_mutable_timestamp();

  public:
  // string error_message = 4;
  void clear_error_message() ;
  const std::string& error_message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_error_message(Arg_&& arg, Args_... args);
  std::string* mutable_error_message();
  PROTOBUF_NODISCARD std::string* release_error_message();
  void set_allocated_error_message(std::string* value);

  private:
  const std::string& _internal_error_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_error_message(
      const std::string& value);
  std::string* _internal_mutable_error_message();

  public:
  // string request_id = 5;
  void clear_request_id() ;
  const std::string& request_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_request_id(Arg_&& arg, Args_... args);
  std::string* mutable_request_id();
  PROTOBUF_NODISCARD std::string* release_request_id();
  void set_allocated_request_id(std::string* value);

  private:
  const std::string& _internal_request_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_request_id(
      const std::string& value);
  std::string* _internal_mutable_request_id();

  public:
  // string response_id = 6;
  void clear_response_id() ;
  const std::string& response_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_response_id(Arg_&& arg, Args_... args);
  std::string* mutable_response_id();
  PROTOBUF_NODISCARD std::string* release_response_id();
  void set_allocated_response_id(std::string* value);

  private:
  const std::string& _internal_response_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_response_id(
      const std::string& value);
  std::string* _internal_mutable_response_id();

  public:
  // @@protoc_insertion_point(class_scope:seigr.intercluster.ClusterCommunicationErrorLog)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 1,
      140, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ClusterCommunicationErrorLog& from_msg);
    ::google::protobuf::internal::MapField<ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        error_metadata_;
    ::google::protobuf::internal::ArenaStringPtr error_id_;
    ::google::protobuf::internal::ArenaStringPtr affected_cluster_id_;
    ::google::protobuf::internal::ArenaStringPtr timestamp_;
    ::google::protobuf::internal::ArenaStringPtr error_message_;
    ::google::protobuf::internal::ArenaStringPtr request_id_;
    ::google::protobuf::internal::ArenaStringPtr response_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_inter_5fcluster_2eproto;
};
// -------------------------------------------------------------------

class CommunicationErrorRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.intercluster.CommunicationErrorRequest) */ {
 public:
  inline CommunicationErrorRequest() : CommunicationErrorRequest(nullptr) {}
  ~CommunicationErrorRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CommunicationErrorRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CommunicationErrorRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CommunicationErrorRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CommunicationErrorRequest(const CommunicationErrorRequest& from) : CommunicationErrorRequest(nullptr, from) {}
  inline CommunicationErrorRequest(CommunicationErrorRequest&& from) noexcept
      : CommunicationErrorRequest(nullptr, std::move(from)) {}
  inline CommunicationErrorRequest& operator=(const CommunicationErrorRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CommunicationErrorRequest& operator=(CommunicationErrorRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CommunicationErrorRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CommunicationErrorRequest* internal_default_instance() {
    return reinterpret_cast<const CommunicationErrorRequest*>(
        &_CommunicationErrorRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(CommunicationErrorRequest& a, CommunicationErrorRequest& b) { a.Swap(&b); }
  inline void Swap(CommunicationErrorRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CommunicationErrorRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CommunicationErrorRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CommunicationErrorRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CommunicationErrorRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CommunicationErrorRequest& from) { CommunicationErrorRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CommunicationErrorRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.intercluster.CommunicationErrorRequest"; }

 protected:
  explicit CommunicationErrorRequest(::google::protobuf::Arena* arena);
  CommunicationErrorRequest(::google::protobuf::Arena* arena, const CommunicationErrorRequest& from);
  CommunicationErrorRequest(::google::protobuf::Arena* arena, CommunicationErrorRequest&& from) noexcept
      : CommunicationErrorRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kErrorLogFieldNumber = 1,
  };
  // .seigr.intercluster.ClusterCommunicationErrorLog error_log = 1;
  bool has_error_log() const;
  void clear_error_log() ;
  const ::seigr::intercluster::ClusterCommunicationErrorLog& error_log() const;
  PROTOBUF_NODISCARD ::seigr::intercluster::ClusterCommunicationErrorLog* release_error_log();
  ::seigr::intercluster::ClusterCommunicationErrorLog* mutable_error_log();
  void set_allocated_error_log(::seigr::intercluster::ClusterCommunicationErrorLog* value);
  void unsafe_arena_set_allocated_error_log(::seigr::intercluster::ClusterCommunicationErrorLog* value);
  ::seigr::intercluster::ClusterCommunicationErrorLog* unsafe_arena_release_error_log();

  private:
  const ::seigr::intercluster::ClusterCommunicationErrorLog& _internal_error_log() const;
  ::seigr::intercluster::ClusterCommunicationErrorLog* _internal_mutable_error_log();

  public:
  // @@protoc_insertion_point(class_scope:seigr.intercluster.CommunicationErrorRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CommunicationErrorRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::seigr::intercluster::ClusterCommunicationErrorLog* error_log_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_inter_5fcluster_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ClusterRequest

// string request_id = 1;
inline void ClusterRequest::clear_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_.ClearToEmpty();
}
inline const std::string& ClusterRequest::request_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.intercluster.ClusterRequest.request_id)
  return _internal_request_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ClusterRequest::set_request_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.intercluster.ClusterRequest.request_id)
}
inline std::string* ClusterRequest::mutable_request_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_request_id();
  // @@protoc_insertion_point(field_mutable:seigr.intercluster.ClusterRequest.request_id)
  return _s;
}
inline const std::string& ClusterRequest::_internal_request_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.request_id_.Get();
}
inline void ClusterRequest::_internal_set_request_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_.Set(value, GetArena());
}
inline std::string* ClusterRequest::_internal_mutable_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.request_id_.Mutable( GetArena());
}
inline std::string* ClusterRequest::release_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.intercluster.ClusterRequest.request_id)
  return _impl_.request_id_.Release();
}
inline void ClusterRequest::set_allocated_request_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.request_id_.IsDefault()) {
    _impl_.request_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.intercluster.ClusterRequest.request_id)
}

// .seigr.intercluster.ClusterRequestType request_type = 2;
inline void ClusterRequest::clear_request_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_type_ = 0;
}
inline ::seigr::intercluster::ClusterRequestType ClusterRequest::request_type() const {
  // @@protoc_insertion_point(field_get:seigr.intercluster.ClusterRequest.request_type)
  return _internal_request_type();
}
inline void ClusterRequest::set_request_type(::seigr::intercluster::ClusterRequestType value) {
  _internal_set_request_type(value);
  // @@protoc_insertion_point(field_set:seigr.intercluster.ClusterRequest.request_type)
}
inline ::seigr::intercluster::ClusterRequestType ClusterRequest::_internal_request_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::intercluster::ClusterRequestType>(_impl_.request_type_);
}
inline void ClusterRequest::_internal_set_request_type(::seigr::intercluster::ClusterRequestType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_type_ = value;
}

// string origin_cluster_id = 3;
inline void ClusterRequest::clear_origin_cluster_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.origin_cluster_id_.ClearToEmpty();
}
inline const std::string& ClusterRequest::origin_cluster_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.intercluster.ClusterRequest.origin_cluster_id)
  return _internal_origin_cluster_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ClusterRequest::set_origin_cluster_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.origin_cluster_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.intercluster.ClusterRequest.origin_cluster_id)
}
inline std::string* ClusterRequest::mutable_origin_cluster_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_origin_cluster_id();
  // @@protoc_insertion_point(field_mutable:seigr.intercluster.ClusterRequest.origin_cluster_id)
  return _s;
}
inline const std::string& ClusterRequest::_internal_origin_cluster_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.origin_cluster_id_.Get();
}
inline void ClusterRequest::_internal_set_origin_cluster_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.origin_cluster_id_.Set(value, GetArena());
}
inline std::string* ClusterRequest::_internal_mutable_origin_cluster_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.origin_cluster_id_.Mutable( GetArena());
}
inline std::string* ClusterRequest::release_origin_cluster_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.intercluster.ClusterRequest.origin_cluster_id)
  return _impl_.origin_cluster_id_.Release();
}
inline void ClusterRequest::set_allocated_origin_cluster_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.origin_cluster_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.origin_cluster_id_.IsDefault()) {
    _impl_.origin_cluster_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.intercluster.ClusterRequest.origin_cluster_id)
}

// string target_cluster_id = 4;
inline void ClusterRequest::clear_target_cluster_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_cluster_id_.ClearToEmpty();
}
inline const std::string& ClusterRequest::target_cluster_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.intercluster.ClusterRequest.target_cluster_id)
  return _internal_target_cluster_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ClusterRequest::set_target_cluster_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_cluster_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.intercluster.ClusterRequest.target_cluster_id)
}
inline std::string* ClusterRequest::mutable_target_cluster_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_target_cluster_id();
  // @@protoc_insertion_point(field_mutable:seigr.intercluster.ClusterRequest.target_cluster_id)
  return _s;
}
inline const std::string& ClusterRequest::_internal_target_cluster_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_cluster_id_.Get();
}
inline void ClusterRequest::_internal_set_target_cluster_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_cluster_id_.Set(value, GetArena());
}
inline std::string* ClusterRequest::_internal_mutable_target_cluster_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.target_cluster_id_.Mutable( GetArena());
}
inline std::string* ClusterRequest::release_target_cluster_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.intercluster.ClusterRequest.target_cluster_id)
  return _impl_.target_cluster_id_.Release();
}
inline void ClusterRequest::set_allocated_target_cluster_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_cluster_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.target_cluster_id_.IsDefault()) {
    _impl_.target_cluster_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.intercluster.ClusterRequest.target_cluster_id)
}

// map<string, string> request_parameters = 5;
inline int ClusterRequest::_internal_request_parameters_size() const {
  return _internal_request_parameters().size();
}
inline int ClusterRequest::request_parameters_size() const {
  return _internal_request_parameters_size();
}
inline void ClusterRequest::clear_request_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_parameters_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& ClusterRequest::_internal_request_parameters() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.request_parameters_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& ClusterRequest::request_parameters() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.intercluster.ClusterRequest.request_parameters)
  return _internal_request_parameters();
}
inline ::google::protobuf::Map<std::string, std::string>* ClusterRequest::_internal_mutable_request_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.request_parameters_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* ClusterRequest::mutable_request_parameters() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.intercluster.ClusterRequest.request_parameters)
  return _internal_mutable_request_parameters();
}

// string initiated_at = 6;
inline void ClusterRequest::clear_initiated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initiated_at_.ClearToEmpty();
}
inline const std::string& ClusterRequest::initiated_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.intercluster.ClusterRequest.initiated_at)
  return _internal_initiated_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ClusterRequest::set_initiated_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initiated_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.intercluster.ClusterRequest.initiated_at)
}
inline std::string* ClusterRequest::mutable_initiated_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_initiated_at();
  // @@protoc_insertion_point(field_mutable:seigr.intercluster.ClusterRequest.initiated_at)
  return _s;
}
inline const std::string& ClusterRequest::_internal_initiated_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.initiated_at_.Get();
}
inline void ClusterRequest::_internal_set_initiated_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initiated_at_.Set(value, GetArena());
}
inline std::string* ClusterRequest::_internal_mutable_initiated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.initiated_at_.Mutable( GetArena());
}
inline std::string* ClusterRequest::release_initiated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.intercluster.ClusterRequest.initiated_at)
  return _impl_.initiated_at_.Release();
}
inline void ClusterRequest::set_allocated_initiated_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initiated_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.initiated_at_.IsDefault()) {
    _impl_.initiated_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.intercluster.ClusterRequest.initiated_at)
}

// map<string, string> security_context = 7;
inline int ClusterRequest::_internal_security_context_size() const {
  return _internal_security_context().size();
}
inline int ClusterRequest::security_context_size() const {
  return _internal_security_context_size();
}
inline void ClusterRequest::clear_security_context() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.security_context_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& ClusterRequest::_internal_security_context() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.security_context_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& ClusterRequest::security_context() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.intercluster.ClusterRequest.security_context)
  return _internal_security_context();
}
inline ::google::protobuf::Map<std::string, std::string>* ClusterRequest::_internal_mutable_security_context() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.security_context_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* ClusterRequest::mutable_security_context() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.intercluster.ClusterRequest.security_context)
  return _internal_mutable_security_context();
}

// bool require_acknowledgment = 8;
inline void ClusterRequest::clear_require_acknowledgment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.require_acknowledgment_ = false;
}
inline bool ClusterRequest::require_acknowledgment() const {
  // @@protoc_insertion_point(field_get:seigr.intercluster.ClusterRequest.require_acknowledgment)
  return _internal_require_acknowledgment();
}
inline void ClusterRequest::set_require_acknowledgment(bool value) {
  _internal_set_require_acknowledgment(value);
  // @@protoc_insertion_point(field_set:seigr.intercluster.ClusterRequest.require_acknowledgment)
}
inline bool ClusterRequest::_internal_require_acknowledgment() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.require_acknowledgment_;
}
inline void ClusterRequest::_internal_set_require_acknowledgment(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.require_acknowledgment_ = value;
}

// map<string, string> request_metadata = 9;
inline int ClusterRequest::_internal_request_metadata_size() const {
  return _internal_request_metadata().size();
}
inline int ClusterRequest::request_metadata_size() const {
  return _internal_request_metadata_size();
}
inline void ClusterRequest::clear_request_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& ClusterRequest::_internal_request_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.request_metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& ClusterRequest::request_metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.intercluster.ClusterRequest.request_metadata)
  return _internal_request_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* ClusterRequest::_internal_mutable_request_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.request_metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* ClusterRequest::mutable_request_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.intercluster.ClusterRequest.request_metadata)
  return _internal_mutable_request_metadata();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ClusterResponse

// string response_id = 1;
inline void ClusterResponse::clear_response_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.response_id_.ClearToEmpty();
}
inline const std::string& ClusterResponse::response_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.intercluster.ClusterResponse.response_id)
  return _internal_response_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ClusterResponse::set_response_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.response_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.intercluster.ClusterResponse.response_id)
}
inline std::string* ClusterResponse::mutable_response_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_response_id();
  // @@protoc_insertion_point(field_mutable:seigr.intercluster.ClusterResponse.response_id)
  return _s;
}
inline const std::string& ClusterResponse::_internal_response_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.response_id_.Get();
}
inline void ClusterResponse::_internal_set_response_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.response_id_.Set(value, GetArena());
}
inline std::string* ClusterResponse::_internal_mutable_response_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.response_id_.Mutable( GetArena());
}
inline std::string* ClusterResponse::release_response_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.intercluster.ClusterResponse.response_id)
  return _impl_.response_id_.Release();
}
inline void ClusterResponse::set_allocated_response_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.response_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.response_id_.IsDefault()) {
    _impl_.response_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.intercluster.ClusterResponse.response_id)
}

// string request_id = 2;
inline void ClusterResponse::clear_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_.ClearToEmpty();
}
inline const std::string& ClusterResponse::request_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.intercluster.ClusterResponse.request_id)
  return _internal_request_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ClusterResponse::set_request_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.intercluster.ClusterResponse.request_id)
}
inline std::string* ClusterResponse::mutable_request_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_request_id();
  // @@protoc_insertion_point(field_mutable:seigr.intercluster.ClusterResponse.request_id)
  return _s;
}
inline const std::string& ClusterResponse::_internal_request_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.request_id_.Get();
}
inline void ClusterResponse::_internal_set_request_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_.Set(value, GetArena());
}
inline std::string* ClusterResponse::_internal_mutable_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.request_id_.Mutable( GetArena());
}
inline std::string* ClusterResponse::release_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.intercluster.ClusterResponse.request_id)
  return _impl_.request_id_.Release();
}
inline void ClusterResponse::set_allocated_request_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.request_id_.IsDefault()) {
    _impl_.request_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.intercluster.ClusterResponse.request_id)
}

// .seigr.intercluster.ClusterResponseType response_type = 3;
inline void ClusterResponse::clear_response_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.response_type_ = 0;
}
inline ::seigr::intercluster::ClusterResponseType ClusterResponse::response_type() const {
  // @@protoc_insertion_point(field_get:seigr.intercluster.ClusterResponse.response_type)
  return _internal_response_type();
}
inline void ClusterResponse::set_response_type(::seigr::intercluster::ClusterResponseType value) {
  _internal_set_response_type(value);
  // @@protoc_insertion_point(field_set:seigr.intercluster.ClusterResponse.response_type)
}
inline ::seigr::intercluster::ClusterResponseType ClusterResponse::_internal_response_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::intercluster::ClusterResponseType>(_impl_.response_type_);
}
inline void ClusterResponse::_internal_set_response_type(::seigr::intercluster::ClusterResponseType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.response_type_ = value;
}

// string origin_cluster_id = 4;
inline void ClusterResponse::clear_origin_cluster_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.origin_cluster_id_.ClearToEmpty();
}
inline const std::string& ClusterResponse::origin_cluster_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.intercluster.ClusterResponse.origin_cluster_id)
  return _internal_origin_cluster_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ClusterResponse::set_origin_cluster_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.origin_cluster_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.intercluster.ClusterResponse.origin_cluster_id)
}
inline std::string* ClusterResponse::mutable_origin_cluster_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_origin_cluster_id();
  // @@protoc_insertion_point(field_mutable:seigr.intercluster.ClusterResponse.origin_cluster_id)
  return _s;
}
inline const std::string& ClusterResponse::_internal_origin_cluster_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.origin_cluster_id_.Get();
}
inline void ClusterResponse::_internal_set_origin_cluster_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.origin_cluster_id_.Set(value, GetArena());
}
inline std::string* ClusterResponse::_internal_mutable_origin_cluster_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.origin_cluster_id_.Mutable( GetArena());
}
inline std::string* ClusterResponse::release_origin_cluster_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.intercluster.ClusterResponse.origin_cluster_id)
  return _impl_.origin_cluster_id_.Release();
}
inline void ClusterResponse::set_allocated_origin_cluster_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.origin_cluster_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.origin_cluster_id_.IsDefault()) {
    _impl_.origin_cluster_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.intercluster.ClusterResponse.origin_cluster_id)
}

// string target_cluster_id = 5;
inline void ClusterResponse::clear_target_cluster_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_cluster_id_.ClearToEmpty();
}
inline const std::string& ClusterResponse::target_cluster_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.intercluster.ClusterResponse.target_cluster_id)
  return _internal_target_cluster_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ClusterResponse::set_target_cluster_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_cluster_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.intercluster.ClusterResponse.target_cluster_id)
}
inline std::string* ClusterResponse::mutable_target_cluster_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_target_cluster_id();
  // @@protoc_insertion_point(field_mutable:seigr.intercluster.ClusterResponse.target_cluster_id)
  return _s;
}
inline const std::string& ClusterResponse::_internal_target_cluster_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_cluster_id_.Get();
}
inline void ClusterResponse::_internal_set_target_cluster_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_cluster_id_.Set(value, GetArena());
}
inline std::string* ClusterResponse::_internal_mutable_target_cluster_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.target_cluster_id_.Mutable( GetArena());
}
inline std::string* ClusterResponse::release_target_cluster_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.intercluster.ClusterResponse.target_cluster_id)
  return _impl_.target_cluster_id_.Release();
}
inline void ClusterResponse::set_allocated_target_cluster_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_cluster_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.target_cluster_id_.IsDefault()) {
    _impl_.target_cluster_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.intercluster.ClusterResponse.target_cluster_id)
}

// string response_timestamp = 6;
inline void ClusterResponse::clear_response_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.response_timestamp_.ClearToEmpty();
}
inline const std::string& ClusterResponse::response_timestamp() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.intercluster.ClusterResponse.response_timestamp)
  return _internal_response_timestamp();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ClusterResponse::set_response_timestamp(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.response_timestamp_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.intercluster.ClusterResponse.response_timestamp)
}
inline std::string* ClusterResponse::mutable_response_timestamp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_response_timestamp();
  // @@protoc_insertion_point(field_mutable:seigr.intercluster.ClusterResponse.response_timestamp)
  return _s;
}
inline const std::string& ClusterResponse::_internal_response_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.response_timestamp_.Get();
}
inline void ClusterResponse::_internal_set_response_timestamp(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.response_timestamp_.Set(value, GetArena());
}
inline std::string* ClusterResponse::_internal_mutable_response_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.response_timestamp_.Mutable( GetArena());
}
inline std::string* ClusterResponse::release_response_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.intercluster.ClusterResponse.response_timestamp)
  return _impl_.response_timestamp_.Release();
}
inline void ClusterResponse::set_allocated_response_timestamp(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.response_timestamp_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.response_timestamp_.IsDefault()) {
    _impl_.response_timestamp_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.intercluster.ClusterResponse.response_timestamp)
}

// map<string, string> response_metadata = 7;
inline int ClusterResponse::_internal_response_metadata_size() const {
  return _internal_response_metadata().size();
}
inline int ClusterResponse::response_metadata_size() const {
  return _internal_response_metadata_size();
}
inline void ClusterResponse::clear_response_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.response_metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& ClusterResponse::_internal_response_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.response_metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& ClusterResponse::response_metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.intercluster.ClusterResponse.response_metadata)
  return _internal_response_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* ClusterResponse::_internal_mutable_response_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.response_metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* ClusterResponse::mutable_response_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.intercluster.ClusterResponse.response_metadata)
  return _internal_mutable_response_metadata();
}

// string status_message = 8;
inline void ClusterResponse::clear_status_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_message_.ClearToEmpty();
}
inline const std::string& ClusterResponse::status_message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.intercluster.ClusterResponse.status_message)
  return _internal_status_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ClusterResponse::set_status_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.intercluster.ClusterResponse.status_message)
}
inline std::string* ClusterResponse::mutable_status_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_status_message();
  // @@protoc_insertion_point(field_mutable:seigr.intercluster.ClusterResponse.status_message)
  return _s;
}
inline const std::string& ClusterResponse::_internal_status_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_message_.Get();
}
inline void ClusterResponse::_internal_set_status_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_message_.Set(value, GetArena());
}
inline std::string* ClusterResponse::_internal_mutable_status_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.status_message_.Mutable( GetArena());
}
inline std::string* ClusterResponse::release_status_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.intercluster.ClusterResponse.status_message)
  return _impl_.status_message_.Release();
}
inline void ClusterResponse::set_allocated_status_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.status_message_.IsDefault()) {
    _impl_.status_message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.intercluster.ClusterResponse.status_message)
}

// map<string, bytes> payload = 9;
inline int ClusterResponse::_internal_payload_size() const {
  return _internal_payload().size();
}
inline int ClusterResponse::payload_size() const {
  return _internal_payload_size();
}
inline void ClusterResponse::clear_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payload_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& ClusterResponse::_internal_payload() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.payload_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& ClusterResponse::payload() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.intercluster.ClusterResponse.payload)
  return _internal_payload();
}
inline ::google::protobuf::Map<std::string, std::string>* ClusterResponse::_internal_mutable_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.payload_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* ClusterResponse::mutable_payload() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.intercluster.ClusterResponse.payload)
  return _internal_mutable_payload();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// DataTransfer

// string transfer_id = 1;
inline void DataTransfer::clear_transfer_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transfer_id_.ClearToEmpty();
}
inline const std::string& DataTransfer::transfer_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.intercluster.DataTransfer.transfer_id)
  return _internal_transfer_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DataTransfer::set_transfer_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transfer_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.intercluster.DataTransfer.transfer_id)
}
inline std::string* DataTransfer::mutable_transfer_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_transfer_id();
  // @@protoc_insertion_point(field_mutable:seigr.intercluster.DataTransfer.transfer_id)
  return _s;
}
inline const std::string& DataTransfer::_internal_transfer_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.transfer_id_.Get();
}
inline void DataTransfer::_internal_set_transfer_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transfer_id_.Set(value, GetArena());
}
inline std::string* DataTransfer::_internal_mutable_transfer_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.transfer_id_.Mutable( GetArena());
}
inline std::string* DataTransfer::release_transfer_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.intercluster.DataTransfer.transfer_id)
  return _impl_.transfer_id_.Release();
}
inline void DataTransfer::set_allocated_transfer_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transfer_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.transfer_id_.IsDefault()) {
    _impl_.transfer_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.intercluster.DataTransfer.transfer_id)
}

// string source_cluster_id = 2;
inline void DataTransfer::clear_source_cluster_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_cluster_id_.ClearToEmpty();
}
inline const std::string& DataTransfer::source_cluster_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.intercluster.DataTransfer.source_cluster_id)
  return _internal_source_cluster_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DataTransfer::set_source_cluster_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_cluster_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.intercluster.DataTransfer.source_cluster_id)
}
inline std::string* DataTransfer::mutable_source_cluster_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_source_cluster_id();
  // @@protoc_insertion_point(field_mutable:seigr.intercluster.DataTransfer.source_cluster_id)
  return _s;
}
inline const std::string& DataTransfer::_internal_source_cluster_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.source_cluster_id_.Get();
}
inline void DataTransfer::_internal_set_source_cluster_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_cluster_id_.Set(value, GetArena());
}
inline std::string* DataTransfer::_internal_mutable_source_cluster_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.source_cluster_id_.Mutable( GetArena());
}
inline std::string* DataTransfer::release_source_cluster_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.intercluster.DataTransfer.source_cluster_id)
  return _impl_.source_cluster_id_.Release();
}
inline void DataTransfer::set_allocated_source_cluster_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_cluster_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.source_cluster_id_.IsDefault()) {
    _impl_.source_cluster_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.intercluster.DataTransfer.source_cluster_id)
}

// string destination_cluster_id = 3;
inline void DataTransfer::clear_destination_cluster_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.destination_cluster_id_.ClearToEmpty();
}
inline const std::string& DataTransfer::destination_cluster_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.intercluster.DataTransfer.destination_cluster_id)
  return _internal_destination_cluster_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DataTransfer::set_destination_cluster_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.destination_cluster_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.intercluster.DataTransfer.destination_cluster_id)
}
inline std::string* DataTransfer::mutable_destination_cluster_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_destination_cluster_id();
  // @@protoc_insertion_point(field_mutable:seigr.intercluster.DataTransfer.destination_cluster_id)
  return _s;
}
inline const std::string& DataTransfer::_internal_destination_cluster_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.destination_cluster_id_.Get();
}
inline void DataTransfer::_internal_set_destination_cluster_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.destination_cluster_id_.Set(value, GetArena());
}
inline std::string* DataTransfer::_internal_mutable_destination_cluster_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.destination_cluster_id_.Mutable( GetArena());
}
inline std::string* DataTransfer::release_destination_cluster_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.intercluster.DataTransfer.destination_cluster_id)
  return _impl_.destination_cluster_id_.Release();
}
inline void DataTransfer::set_allocated_destination_cluster_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.destination_cluster_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.destination_cluster_id_.IsDefault()) {
    _impl_.destination_cluster_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.intercluster.DataTransfer.destination_cluster_id)
}

// bytes data_payload = 4;
inline void DataTransfer::clear_data_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_payload_.ClearToEmpty();
}
inline const std::string& DataTransfer::data_payload() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.intercluster.DataTransfer.data_payload)
  return _internal_data_payload();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DataTransfer::set_data_payload(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_payload_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.intercluster.DataTransfer.data_payload)
}
inline std::string* DataTransfer::mutable_data_payload() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data_payload();
  // @@protoc_insertion_point(field_mutable:seigr.intercluster.DataTransfer.data_payload)
  return _s;
}
inline const std::string& DataTransfer::_internal_data_payload() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_payload_.Get();
}
inline void DataTransfer::_internal_set_data_payload(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_payload_.Set(value, GetArena());
}
inline std::string* DataTransfer::_internal_mutable_data_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_payload_.Mutable( GetArena());
}
inline std::string* DataTransfer::release_data_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.intercluster.DataTransfer.data_payload)
  return _impl_.data_payload_.Release();
}
inline void DataTransfer::set_allocated_data_payload(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_payload_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.data_payload_.IsDefault()) {
    _impl_.data_payload_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.intercluster.DataTransfer.data_payload)
}

// string data_type = 5;
inline void DataTransfer::clear_data_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_type_.ClearToEmpty();
}
inline const std::string& DataTransfer::data_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.intercluster.DataTransfer.data_type)
  return _internal_data_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DataTransfer::set_data_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.intercluster.DataTransfer.data_type)
}
inline std::string* DataTransfer::mutable_data_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data_type();
  // @@protoc_insertion_point(field_mutable:seigr.intercluster.DataTransfer.data_type)
  return _s;
}
inline const std::string& DataTransfer::_internal_data_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_type_.Get();
}
inline void DataTransfer::_internal_set_data_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_type_.Set(value, GetArena());
}
inline std::string* DataTransfer::_internal_mutable_data_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_type_.Mutable( GetArena());
}
inline std::string* DataTransfer::release_data_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.intercluster.DataTransfer.data_type)
  return _impl_.data_type_.Release();
}
inline void DataTransfer::set_allocated_data_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.data_type_.IsDefault()) {
    _impl_.data_type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.intercluster.DataTransfer.data_type)
}

// string encryption_scheme = 6;
inline void DataTransfer::clear_encryption_scheme() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.encryption_scheme_.ClearToEmpty();
}
inline const std::string& DataTransfer::encryption_scheme() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.intercluster.DataTransfer.encryption_scheme)
  return _internal_encryption_scheme();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DataTransfer::set_encryption_scheme(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.encryption_scheme_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.intercluster.DataTransfer.encryption_scheme)
}
inline std::string* DataTransfer::mutable_encryption_scheme() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_encryption_scheme();
  // @@protoc_insertion_point(field_mutable:seigr.intercluster.DataTransfer.encryption_scheme)
  return _s;
}
inline const std::string& DataTransfer::_internal_encryption_scheme() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.encryption_scheme_.Get();
}
inline void DataTransfer::_internal_set_encryption_scheme(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.encryption_scheme_.Set(value, GetArena());
}
inline std::string* DataTransfer::_internal_mutable_encryption_scheme() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.encryption_scheme_.Mutable( GetArena());
}
inline std::string* DataTransfer::release_encryption_scheme() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.intercluster.DataTransfer.encryption_scheme)
  return _impl_.encryption_scheme_.Release();
}
inline void DataTransfer::set_allocated_encryption_scheme(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.encryption_scheme_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.encryption_scheme_.IsDefault()) {
    _impl_.encryption_scheme_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.intercluster.DataTransfer.encryption_scheme)
}

// string compression_method = 7;
inline void DataTransfer::clear_compression_method() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.compression_method_.ClearToEmpty();
}
inline const std::string& DataTransfer::compression_method() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.intercluster.DataTransfer.compression_method)
  return _internal_compression_method();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DataTransfer::set_compression_method(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.compression_method_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.intercluster.DataTransfer.compression_method)
}
inline std::string* DataTransfer::mutable_compression_method() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_compression_method();
  // @@protoc_insertion_point(field_mutable:seigr.intercluster.DataTransfer.compression_method)
  return _s;
}
inline const std::string& DataTransfer::_internal_compression_method() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.compression_method_.Get();
}
inline void DataTransfer::_internal_set_compression_method(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.compression_method_.Set(value, GetArena());
}
inline std::string* DataTransfer::_internal_mutable_compression_method() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.compression_method_.Mutable( GetArena());
}
inline std::string* DataTransfer::release_compression_method() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.intercluster.DataTransfer.compression_method)
  return _impl_.compression_method_.Release();
}
inline void DataTransfer::set_allocated_compression_method(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.compression_method_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.compression_method_.IsDefault()) {
    _impl_.compression_method_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.intercluster.DataTransfer.compression_method)
}

// string transfer_format = 8;
inline void DataTransfer::clear_transfer_format() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transfer_format_.ClearToEmpty();
}
inline const std::string& DataTransfer::transfer_format() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.intercluster.DataTransfer.transfer_format)
  return _internal_transfer_format();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DataTransfer::set_transfer_format(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transfer_format_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.intercluster.DataTransfer.transfer_format)
}
inline std::string* DataTransfer::mutable_transfer_format() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_transfer_format();
  // @@protoc_insertion_point(field_mutable:seigr.intercluster.DataTransfer.transfer_format)
  return _s;
}
inline const std::string& DataTransfer::_internal_transfer_format() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.transfer_format_.Get();
}
inline void DataTransfer::_internal_set_transfer_format(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transfer_format_.Set(value, GetArena());
}
inline std::string* DataTransfer::_internal_mutable_transfer_format() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.transfer_format_.Mutable( GetArena());
}
inline std::string* DataTransfer::release_transfer_format() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.intercluster.DataTransfer.transfer_format)
  return _impl_.transfer_format_.Release();
}
inline void DataTransfer::set_allocated_transfer_format(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transfer_format_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.transfer_format_.IsDefault()) {
    _impl_.transfer_format_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.intercluster.DataTransfer.transfer_format)
}

// int64 data_size_bytes = 9;
inline void DataTransfer::clear_data_size_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_size_bytes_ = ::int64_t{0};
}
inline ::int64_t DataTransfer::data_size_bytes() const {
  // @@protoc_insertion_point(field_get:seigr.intercluster.DataTransfer.data_size_bytes)
  return _internal_data_size_bytes();
}
inline void DataTransfer::set_data_size_bytes(::int64_t value) {
  _internal_set_data_size_bytes(value);
  // @@protoc_insertion_point(field_set:seigr.intercluster.DataTransfer.data_size_bytes)
}
inline ::int64_t DataTransfer::_internal_data_size_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_size_bytes_;
}
inline void DataTransfer::_internal_set_data_size_bytes(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_size_bytes_ = value;
}

// bool validate_integrity = 10;
inline void DataTransfer::clear_validate_integrity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validate_integrity_ = false;
}
inline bool DataTransfer::validate_integrity() const {
  // @@protoc_insertion_point(field_get:seigr.intercluster.DataTransfer.validate_integrity)
  return _internal_validate_integrity();
}
inline void DataTransfer::set_validate_integrity(bool value) {
  _internal_set_validate_integrity(value);
  // @@protoc_insertion_point(field_set:seigr.intercluster.DataTransfer.validate_integrity)
}
inline bool DataTransfer::_internal_validate_integrity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.validate_integrity_;
}
inline void DataTransfer::_internal_set_validate_integrity(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validate_integrity_ = value;
}

// int32 transfer_timeout = 11;
inline void DataTransfer::clear_transfer_timeout() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transfer_timeout_ = 0;
}
inline ::int32_t DataTransfer::transfer_timeout() const {
  // @@protoc_insertion_point(field_get:seigr.intercluster.DataTransfer.transfer_timeout)
  return _internal_transfer_timeout();
}
inline void DataTransfer::set_transfer_timeout(::int32_t value) {
  _internal_set_transfer_timeout(value);
  // @@protoc_insertion_point(field_set:seigr.intercluster.DataTransfer.transfer_timeout)
}
inline ::int32_t DataTransfer::_internal_transfer_timeout() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.transfer_timeout_;
}
inline void DataTransfer::_internal_set_transfer_timeout(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transfer_timeout_ = value;
}

// map<string, string> transfer_metadata = 12;
inline int DataTransfer::_internal_transfer_metadata_size() const {
  return _internal_transfer_metadata().size();
}
inline int DataTransfer::transfer_metadata_size() const {
  return _internal_transfer_metadata_size();
}
inline void DataTransfer::clear_transfer_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transfer_metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& DataTransfer::_internal_transfer_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.transfer_metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& DataTransfer::transfer_metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.intercluster.DataTransfer.transfer_metadata)
  return _internal_transfer_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* DataTransfer::_internal_mutable_transfer_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.transfer_metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* DataTransfer::mutable_transfer_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.intercluster.DataTransfer.transfer_metadata)
  return _internal_mutable_transfer_metadata();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ClusterEventSubscription

// string subscription_id = 1;
inline void ClusterEventSubscription::clear_subscription_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subscription_id_.ClearToEmpty();
}
inline const std::string& ClusterEventSubscription::subscription_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.intercluster.ClusterEventSubscription.subscription_id)
  return _internal_subscription_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ClusterEventSubscription::set_subscription_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subscription_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.intercluster.ClusterEventSubscription.subscription_id)
}
inline std::string* ClusterEventSubscription::mutable_subscription_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_subscription_id();
  // @@protoc_insertion_point(field_mutable:seigr.intercluster.ClusterEventSubscription.subscription_id)
  return _s;
}
inline const std::string& ClusterEventSubscription::_internal_subscription_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.subscription_id_.Get();
}
inline void ClusterEventSubscription::_internal_set_subscription_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subscription_id_.Set(value, GetArena());
}
inline std::string* ClusterEventSubscription::_internal_mutable_subscription_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.subscription_id_.Mutable( GetArena());
}
inline std::string* ClusterEventSubscription::release_subscription_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.intercluster.ClusterEventSubscription.subscription_id)
  return _impl_.subscription_id_.Release();
}
inline void ClusterEventSubscription::set_allocated_subscription_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subscription_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.subscription_id_.IsDefault()) {
    _impl_.subscription_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.intercluster.ClusterEventSubscription.subscription_id)
}

// string subscriber_cluster_id = 2;
inline void ClusterEventSubscription::clear_subscriber_cluster_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subscriber_cluster_id_.ClearToEmpty();
}
inline const std::string& ClusterEventSubscription::subscriber_cluster_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.intercluster.ClusterEventSubscription.subscriber_cluster_id)
  return _internal_subscriber_cluster_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ClusterEventSubscription::set_subscriber_cluster_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subscriber_cluster_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.intercluster.ClusterEventSubscription.subscriber_cluster_id)
}
inline std::string* ClusterEventSubscription::mutable_subscriber_cluster_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_subscriber_cluster_id();
  // @@protoc_insertion_point(field_mutable:seigr.intercluster.ClusterEventSubscription.subscriber_cluster_id)
  return _s;
}
inline const std::string& ClusterEventSubscription::_internal_subscriber_cluster_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.subscriber_cluster_id_.Get();
}
inline void ClusterEventSubscription::_internal_set_subscriber_cluster_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subscriber_cluster_id_.Set(value, GetArena());
}
inline std::string* ClusterEventSubscription::_internal_mutable_subscriber_cluster_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.subscriber_cluster_id_.Mutable( GetArena());
}
inline std::string* ClusterEventSubscription::release_subscriber_cluster_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.intercluster.ClusterEventSubscription.subscriber_cluster_id)
  return _impl_.subscriber_cluster_id_.Release();
}
inline void ClusterEventSubscription::set_allocated_subscriber_cluster_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subscriber_cluster_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.subscriber_cluster_id_.IsDefault()) {
    _impl_.subscriber_cluster_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.intercluster.ClusterEventSubscription.subscriber_cluster_id)
}

// repeated .seigr.intercluster.ClusterRequestType subscribed_events = 3;
inline int ClusterEventSubscription::_internal_subscribed_events_size() const {
  return _internal_subscribed_events().size();
}
inline int ClusterEventSubscription::subscribed_events_size() const {
  return _internal_subscribed_events_size();
}
inline void ClusterEventSubscription::clear_subscribed_events() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subscribed_events_.Clear();
}
inline ::seigr::intercluster::ClusterRequestType ClusterEventSubscription::subscribed_events(int index) const {
  // @@protoc_insertion_point(field_get:seigr.intercluster.ClusterEventSubscription.subscribed_events)
  return static_cast<::seigr::intercluster::ClusterRequestType>(_internal_subscribed_events().Get(index));
}
inline void ClusterEventSubscription::set_subscribed_events(int index, ::seigr::intercluster::ClusterRequestType value) {
  _internal_mutable_subscribed_events()->Set(index, value);
  // @@protoc_insertion_point(field_set:seigr.intercluster.ClusterEventSubscription.subscribed_events)
}
inline void ClusterEventSubscription::add_subscribed_events(::seigr::intercluster::ClusterRequestType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_subscribed_events()->Add(value);
  // @@protoc_insertion_point(field_add:seigr.intercluster.ClusterEventSubscription.subscribed_events)
}
inline const ::google::protobuf::RepeatedField<int>& ClusterEventSubscription::subscribed_events() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.intercluster.ClusterEventSubscription.subscribed_events)
  return _internal_subscribed_events();
}
inline ::google::protobuf::RepeatedField<int>* ClusterEventSubscription::mutable_subscribed_events()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.intercluster.ClusterEventSubscription.subscribed_events)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_subscribed_events();
}
inline const ::google::protobuf::RepeatedField<int>& ClusterEventSubscription::_internal_subscribed_events()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.subscribed_events_;
}
inline ::google::protobuf::RepeatedField<int>* ClusterEventSubscription::_internal_mutable_subscribed_events() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.subscribed_events_;
}

// bool receive_async_notifications = 4;
inline void ClusterEventSubscription::clear_receive_async_notifications() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.receive_async_notifications_ = false;
}
inline bool ClusterEventSubscription::receive_async_notifications() const {
  // @@protoc_insertion_point(field_get:seigr.intercluster.ClusterEventSubscription.receive_async_notifications)
  return _internal_receive_async_notifications();
}
inline void ClusterEventSubscription::set_receive_async_notifications(bool value) {
  _internal_set_receive_async_notifications(value);
  // @@protoc_insertion_point(field_set:seigr.intercluster.ClusterEventSubscription.receive_async_notifications)
}
inline bool ClusterEventSubscription::_internal_receive_async_notifications() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.receive_async_notifications_;
}
inline void ClusterEventSubscription::_internal_set_receive_async_notifications(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.receive_async_notifications_ = value;
}

// map<string, string> subscription_metadata = 5;
inline int ClusterEventSubscription::_internal_subscription_metadata_size() const {
  return _internal_subscription_metadata().size();
}
inline int ClusterEventSubscription::subscription_metadata_size() const {
  return _internal_subscription_metadata_size();
}
inline void ClusterEventSubscription::clear_subscription_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subscription_metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& ClusterEventSubscription::_internal_subscription_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.subscription_metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& ClusterEventSubscription::subscription_metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.intercluster.ClusterEventSubscription.subscription_metadata)
  return _internal_subscription_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* ClusterEventSubscription::_internal_mutable_subscription_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.subscription_metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* ClusterEventSubscription::mutable_subscription_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.intercluster.ClusterEventSubscription.subscription_metadata)
  return _internal_mutable_subscription_metadata();
}

// string created_at = 6;
inline void ClusterEventSubscription::clear_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.ClearToEmpty();
}
inline const std::string& ClusterEventSubscription::created_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.intercluster.ClusterEventSubscription.created_at)
  return _internal_created_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ClusterEventSubscription::set_created_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.intercluster.ClusterEventSubscription.created_at)
}
inline std::string* ClusterEventSubscription::mutable_created_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_created_at();
  // @@protoc_insertion_point(field_mutable:seigr.intercluster.ClusterEventSubscription.created_at)
  return _s;
}
inline const std::string& ClusterEventSubscription::_internal_created_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_at_.Get();
}
inline void ClusterEventSubscription::_internal_set_created_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.Set(value, GetArena());
}
inline std::string* ClusterEventSubscription::_internal_mutable_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.created_at_.Mutable( GetArena());
}
inline std::string* ClusterEventSubscription::release_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.intercluster.ClusterEventSubscription.created_at)
  return _impl_.created_at_.Release();
}
inline void ClusterEventSubscription::set_allocated_created_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.created_at_.IsDefault()) {
    _impl_.created_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.intercluster.ClusterEventSubscription.created_at)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// TransferStatus

// string transfer_id = 1;
inline void TransferStatus::clear_transfer_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transfer_id_.ClearToEmpty();
}
inline const std::string& TransferStatus::transfer_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.intercluster.TransferStatus.transfer_id)
  return _internal_transfer_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TransferStatus::set_transfer_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transfer_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.intercluster.TransferStatus.transfer_id)
}
inline std::string* TransferStatus::mutable_transfer_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_transfer_id();
  // @@protoc_insertion_point(field_mutable:seigr.intercluster.TransferStatus.transfer_id)
  return _s;
}
inline const std::string& TransferStatus::_internal_transfer_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.transfer_id_.Get();
}
inline void TransferStatus::_internal_set_transfer_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transfer_id_.Set(value, GetArena());
}
inline std::string* TransferStatus::_internal_mutable_transfer_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.transfer_id_.Mutable( GetArena());
}
inline std::string* TransferStatus::release_transfer_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.intercluster.TransferStatus.transfer_id)
  return _impl_.transfer_id_.Release();
}
inline void TransferStatus::set_allocated_transfer_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transfer_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.transfer_id_.IsDefault()) {
    _impl_.transfer_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.intercluster.TransferStatus.transfer_id)
}

// string current_status = 2;
inline void TransferStatus::clear_current_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.current_status_.ClearToEmpty();
}
inline const std::string& TransferStatus::current_status() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.intercluster.TransferStatus.current_status)
  return _internal_current_status();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TransferStatus::set_current_status(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.current_status_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.intercluster.TransferStatus.current_status)
}
inline std::string* TransferStatus::mutable_current_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_current_status();
  // @@protoc_insertion_point(field_mutable:seigr.intercluster.TransferStatus.current_status)
  return _s;
}
inline const std::string& TransferStatus::_internal_current_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.current_status_.Get();
}
inline void TransferStatus::_internal_set_current_status(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.current_status_.Set(value, GetArena());
}
inline std::string* TransferStatus::_internal_mutable_current_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.current_status_.Mutable( GetArena());
}
inline std::string* TransferStatus::release_current_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.intercluster.TransferStatus.current_status)
  return _impl_.current_status_.Release();
}
inline void TransferStatus::set_allocated_current_status(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.current_status_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.current_status_.IsDefault()) {
    _impl_.current_status_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.intercluster.TransferStatus.current_status)
}

// string last_updated = 3;
inline void TransferStatus::clear_last_updated() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_updated_.ClearToEmpty();
}
inline const std::string& TransferStatus::last_updated() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.intercluster.TransferStatus.last_updated)
  return _internal_last_updated();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TransferStatus::set_last_updated(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_updated_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.intercluster.TransferStatus.last_updated)
}
inline std::string* TransferStatus::mutable_last_updated() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_last_updated();
  // @@protoc_insertion_point(field_mutable:seigr.intercluster.TransferStatus.last_updated)
  return _s;
}
inline const std::string& TransferStatus::_internal_last_updated() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_updated_.Get();
}
inline void TransferStatus::_internal_set_last_updated(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_updated_.Set(value, GetArena());
}
inline std::string* TransferStatus::_internal_mutable_last_updated() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.last_updated_.Mutable( GetArena());
}
inline std::string* TransferStatus::release_last_updated() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.intercluster.TransferStatus.last_updated)
  return _impl_.last_updated_.Release();
}
inline void TransferStatus::set_allocated_last_updated(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_updated_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.last_updated_.IsDefault()) {
    _impl_.last_updated_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.intercluster.TransferStatus.last_updated)
}

// double progress_percentage = 4;
inline void TransferStatus::clear_progress_percentage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.progress_percentage_ = 0;
}
inline double TransferStatus::progress_percentage() const {
  // @@protoc_insertion_point(field_get:seigr.intercluster.TransferStatus.progress_percentage)
  return _internal_progress_percentage();
}
inline void TransferStatus::set_progress_percentage(double value) {
  _internal_set_progress_percentage(value);
  // @@protoc_insertion_point(field_set:seigr.intercluster.TransferStatus.progress_percentage)
}
inline double TransferStatus::_internal_progress_percentage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.progress_percentage_;
}
inline void TransferStatus::_internal_set_progress_percentage(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.progress_percentage_ = value;
}

// string source_cluster_id = 5;
inline void TransferStatus::clear_source_cluster_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_cluster_id_.ClearToEmpty();
}
inline const std::string& TransferStatus::source_cluster_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.intercluster.TransferStatus.source_cluster_id)
  return _internal_source_cluster_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TransferStatus::set_source_cluster_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_cluster_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.intercluster.TransferStatus.source_cluster_id)
}
inline std::string* TransferStatus::mutable_source_cluster_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_source_cluster_id();
  // @@protoc_insertion_point(field_mutable:seigr.intercluster.TransferStatus.source_cluster_id)
  return _s;
}
inline const std::string& TransferStatus::_internal_source_cluster_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.source_cluster_id_.Get();
}
inline void TransferStatus::_internal_set_source_cluster_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_cluster_id_.Set(value, GetArena());
}
inline std::string* TransferStatus::_internal_mutable_source_cluster_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.source_cluster_id_.Mutable( GetArena());
}
inline std::string* TransferStatus::release_source_cluster_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.intercluster.TransferStatus.source_cluster_id)
  return _impl_.source_cluster_id_.Release();
}
inline void TransferStatus::set_allocated_source_cluster_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_cluster_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.source_cluster_id_.IsDefault()) {
    _impl_.source_cluster_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.intercluster.TransferStatus.source_cluster_id)
}

// string destination_cluster_id = 6;
inline void TransferStatus::clear_destination_cluster_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.destination_cluster_id_.ClearToEmpty();
}
inline const std::string& TransferStatus::destination_cluster_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.intercluster.TransferStatus.destination_cluster_id)
  return _internal_destination_cluster_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TransferStatus::set_destination_cluster_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.destination_cluster_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.intercluster.TransferStatus.destination_cluster_id)
}
inline std::string* TransferStatus::mutable_destination_cluster_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_destination_cluster_id();
  // @@protoc_insertion_point(field_mutable:seigr.intercluster.TransferStatus.destination_cluster_id)
  return _s;
}
inline const std::string& TransferStatus::_internal_destination_cluster_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.destination_cluster_id_.Get();
}
inline void TransferStatus::_internal_set_destination_cluster_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.destination_cluster_id_.Set(value, GetArena());
}
inline std::string* TransferStatus::_internal_mutable_destination_cluster_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.destination_cluster_id_.Mutable( GetArena());
}
inline std::string* TransferStatus::release_destination_cluster_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.intercluster.TransferStatus.destination_cluster_id)
  return _impl_.destination_cluster_id_.Release();
}
inline void TransferStatus::set_allocated_destination_cluster_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.destination_cluster_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.destination_cluster_id_.IsDefault()) {
    _impl_.destination_cluster_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.intercluster.TransferStatus.destination_cluster_id)
}

// map<string, string> status_metadata = 7;
inline int TransferStatus::_internal_status_metadata_size() const {
  return _internal_status_metadata().size();
}
inline int TransferStatus::status_metadata_size() const {
  return _internal_status_metadata_size();
}
inline void TransferStatus::clear_status_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& TransferStatus::_internal_status_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& TransferStatus::status_metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.intercluster.TransferStatus.status_metadata)
  return _internal_status_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* TransferStatus::_internal_mutable_status_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.status_metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* TransferStatus::mutable_status_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.intercluster.TransferStatus.status_metadata)
  return _internal_mutable_status_metadata();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ClusterCommunicationErrorLog

// string error_id = 1;
inline void ClusterCommunicationErrorLog::clear_error_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_id_.ClearToEmpty();
}
inline const std::string& ClusterCommunicationErrorLog::error_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.intercluster.ClusterCommunicationErrorLog.error_id)
  return _internal_error_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ClusterCommunicationErrorLog::set_error_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.intercluster.ClusterCommunicationErrorLog.error_id)
}
inline std::string* ClusterCommunicationErrorLog::mutable_error_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_error_id();
  // @@protoc_insertion_point(field_mutable:seigr.intercluster.ClusterCommunicationErrorLog.error_id)
  return _s;
}
inline const std::string& ClusterCommunicationErrorLog::_internal_error_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.error_id_.Get();
}
inline void ClusterCommunicationErrorLog::_internal_set_error_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_id_.Set(value, GetArena());
}
inline std::string* ClusterCommunicationErrorLog::_internal_mutable_error_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.error_id_.Mutable( GetArena());
}
inline std::string* ClusterCommunicationErrorLog::release_error_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.intercluster.ClusterCommunicationErrorLog.error_id)
  return _impl_.error_id_.Release();
}
inline void ClusterCommunicationErrorLog::set_allocated_error_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.error_id_.IsDefault()) {
    _impl_.error_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.intercluster.ClusterCommunicationErrorLog.error_id)
}

// string affected_cluster_id = 2;
inline void ClusterCommunicationErrorLog::clear_affected_cluster_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.affected_cluster_id_.ClearToEmpty();
}
inline const std::string& ClusterCommunicationErrorLog::affected_cluster_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.intercluster.ClusterCommunicationErrorLog.affected_cluster_id)
  return _internal_affected_cluster_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ClusterCommunicationErrorLog::set_affected_cluster_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.affected_cluster_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.intercluster.ClusterCommunicationErrorLog.affected_cluster_id)
}
inline std::string* ClusterCommunicationErrorLog::mutable_affected_cluster_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_affected_cluster_id();
  // @@protoc_insertion_point(field_mutable:seigr.intercluster.ClusterCommunicationErrorLog.affected_cluster_id)
  return _s;
}
inline const std::string& ClusterCommunicationErrorLog::_internal_affected_cluster_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.affected_cluster_id_.Get();
}
inline void ClusterCommunicationErrorLog::_internal_set_affected_cluster_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.affected_cluster_id_.Set(value, GetArena());
}
inline std::string* ClusterCommunicationErrorLog::_internal_mutable_affected_cluster_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.affected_cluster_id_.Mutable( GetArena());
}
inline std::string* ClusterCommunicationErrorLog::release_affected_cluster_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.intercluster.ClusterCommunicationErrorLog.affected_cluster_id)
  return _impl_.affected_cluster_id_.Release();
}
inline void ClusterCommunicationErrorLog::set_allocated_affected_cluster_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.affected_cluster_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.affected_cluster_id_.IsDefault()) {
    _impl_.affected_cluster_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.intercluster.ClusterCommunicationErrorLog.affected_cluster_id)
}

// string timestamp = 3;
inline void ClusterCommunicationErrorLog::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.ClearToEmpty();
}
inline const std::string& ClusterCommunicationErrorLog::timestamp() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.intercluster.ClusterCommunicationErrorLog.timestamp)
  return _internal_timestamp();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ClusterCommunicationErrorLog::set_timestamp(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.intercluster.ClusterCommunicationErrorLog.timestamp)
}
inline std::string* ClusterCommunicationErrorLog::mutable_timestamp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_timestamp();
  // @@protoc_insertion_point(field_mutable:seigr.intercluster.ClusterCommunicationErrorLog.timestamp)
  return _s;
}
inline const std::string& ClusterCommunicationErrorLog::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_.Get();
}
inline void ClusterCommunicationErrorLog::_internal_set_timestamp(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.Set(value, GetArena());
}
inline std::string* ClusterCommunicationErrorLog::_internal_mutable_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.timestamp_.Mutable( GetArena());
}
inline std::string* ClusterCommunicationErrorLog::release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.intercluster.ClusterCommunicationErrorLog.timestamp)
  return _impl_.timestamp_.Release();
}
inline void ClusterCommunicationErrorLog::set_allocated_timestamp(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.timestamp_.IsDefault()) {
    _impl_.timestamp_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.intercluster.ClusterCommunicationErrorLog.timestamp)
}

// string error_message = 4;
inline void ClusterCommunicationErrorLog::clear_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.ClearToEmpty();
}
inline const std::string& ClusterCommunicationErrorLog::error_message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.intercluster.ClusterCommunicationErrorLog.error_message)
  return _internal_error_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ClusterCommunicationErrorLog::set_error_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.intercluster.ClusterCommunicationErrorLog.error_message)
}
inline std::string* ClusterCommunicationErrorLog::mutable_error_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_error_message();
  // @@protoc_insertion_point(field_mutable:seigr.intercluster.ClusterCommunicationErrorLog.error_message)
  return _s;
}
inline const std::string& ClusterCommunicationErrorLog::_internal_error_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.error_message_.Get();
}
inline void ClusterCommunicationErrorLog::_internal_set_error_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.Set(value, GetArena());
}
inline std::string* ClusterCommunicationErrorLog::_internal_mutable_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.error_message_.Mutable( GetArena());
}
inline std::string* ClusterCommunicationErrorLog::release_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.intercluster.ClusterCommunicationErrorLog.error_message)
  return _impl_.error_message_.Release();
}
inline void ClusterCommunicationErrorLog::set_allocated_error_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.error_message_.IsDefault()) {
    _impl_.error_message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.intercluster.ClusterCommunicationErrorLog.error_message)
}

// string request_id = 5;
inline void ClusterCommunicationErrorLog::clear_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_.ClearToEmpty();
}
inline const std::string& ClusterCommunicationErrorLog::request_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.intercluster.ClusterCommunicationErrorLog.request_id)
  return _internal_request_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ClusterCommunicationErrorLog::set_request_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.intercluster.ClusterCommunicationErrorLog.request_id)
}
inline std::string* ClusterCommunicationErrorLog::mutable_request_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_request_id();
  // @@protoc_insertion_point(field_mutable:seigr.intercluster.ClusterCommunicationErrorLog.request_id)
  return _s;
}
inline const std::string& ClusterCommunicationErrorLog::_internal_request_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.request_id_.Get();
}
inline void ClusterCommunicationErrorLog::_internal_set_request_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_.Set(value, GetArena());
}
inline std::string* ClusterCommunicationErrorLog::_internal_mutable_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.request_id_.Mutable( GetArena());
}
inline std::string* ClusterCommunicationErrorLog::release_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.intercluster.ClusterCommunicationErrorLog.request_id)
  return _impl_.request_id_.Release();
}
inline void ClusterCommunicationErrorLog::set_allocated_request_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.request_id_.IsDefault()) {
    _impl_.request_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.intercluster.ClusterCommunicationErrorLog.request_id)
}

// string response_id = 6;
inline void ClusterCommunicationErrorLog::clear_response_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.response_id_.ClearToEmpty();
}
inline const std::string& ClusterCommunicationErrorLog::response_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.intercluster.ClusterCommunicationErrorLog.response_id)
  return _internal_response_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ClusterCommunicationErrorLog::set_response_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.response_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.intercluster.ClusterCommunicationErrorLog.response_id)
}
inline std::string* ClusterCommunicationErrorLog::mutable_response_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_response_id();
  // @@protoc_insertion_point(field_mutable:seigr.intercluster.ClusterCommunicationErrorLog.response_id)
  return _s;
}
inline const std::string& ClusterCommunicationErrorLog::_internal_response_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.response_id_.Get();
}
inline void ClusterCommunicationErrorLog::_internal_set_response_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.response_id_.Set(value, GetArena());
}
inline std::string* ClusterCommunicationErrorLog::_internal_mutable_response_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.response_id_.Mutable( GetArena());
}
inline std::string* ClusterCommunicationErrorLog::release_response_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.intercluster.ClusterCommunicationErrorLog.response_id)
  return _impl_.response_id_.Release();
}
inline void ClusterCommunicationErrorLog::set_allocated_response_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.response_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.response_id_.IsDefault()) {
    _impl_.response_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.intercluster.ClusterCommunicationErrorLog.response_id)
}

// map<string, string> error_metadata = 7;
inline int ClusterCommunicationErrorLog::_internal_error_metadata_size() const {
  return _internal_error_metadata().size();
}
inline int ClusterCommunicationErrorLog::error_metadata_size() const {
  return _internal_error_metadata_size();
}
inline void ClusterCommunicationErrorLog::clear_error_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& ClusterCommunicationErrorLog::_internal_error_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.error_metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& ClusterCommunicationErrorLog::error_metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.intercluster.ClusterCommunicationErrorLog.error_metadata)
  return _internal_error_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* ClusterCommunicationErrorLog::_internal_mutable_error_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.error_metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* ClusterCommunicationErrorLog::mutable_error_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.intercluster.ClusterCommunicationErrorLog.error_metadata)
  return _internal_mutable_error_metadata();
}

// -------------------------------------------------------------------

// ClusterResponseAck

// bool success = 1;
inline void ClusterResponseAck::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool ClusterResponseAck::success() const {
  // @@protoc_insertion_point(field_get:seigr.intercluster.ClusterResponseAck.success)
  return _internal_success();
}
inline void ClusterResponseAck::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:seigr.intercluster.ClusterResponseAck.success)
}
inline bool ClusterResponseAck::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void ClusterResponseAck::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// string message = 2;
inline void ClusterResponseAck::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& ClusterResponseAck::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.intercluster.ClusterResponseAck.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ClusterResponseAck::set_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.intercluster.ClusterResponseAck.message)
}
inline std::string* ClusterResponseAck::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:seigr.intercluster.ClusterResponseAck.message)
  return _s;
}
inline const std::string& ClusterResponseAck::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void ClusterResponseAck::_internal_set_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(value, GetArena());
}
inline std::string* ClusterResponseAck::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* ClusterResponseAck::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.intercluster.ClusterResponseAck.message)
  return _impl_.message_.Release();
}
inline void ClusterResponseAck::set_allocated_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.intercluster.ClusterResponseAck.message)
}

// string response_id = 3;
inline void ClusterResponseAck::clear_response_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.response_id_.ClearToEmpty();
}
inline const std::string& ClusterResponseAck::response_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.intercluster.ClusterResponseAck.response_id)
  return _internal_response_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ClusterResponseAck::set_response_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.response_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.intercluster.ClusterResponseAck.response_id)
}
inline std::string* ClusterResponseAck::mutable_response_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_response_id();
  // @@protoc_insertion_point(field_mutable:seigr.intercluster.ClusterResponseAck.response_id)
  return _s;
}
inline const std::string& ClusterResponseAck::_internal_response_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.response_id_.Get();
}
inline void ClusterResponseAck::_internal_set_response_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.response_id_.Set(value, GetArena());
}
inline std::string* ClusterResponseAck::_internal_mutable_response_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.response_id_.Mutable( GetArena());
}
inline std::string* ClusterResponseAck::release_response_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.intercluster.ClusterResponseAck.response_id)
  return _impl_.response_id_.Release();
}
inline void ClusterResponseAck::set_allocated_response_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.response_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.response_id_.IsDefault()) {
    _impl_.response_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.intercluster.ClusterResponseAck.response_id)
}

// -------------------------------------------------------------------

// TransferStatusRequest

// string transfer_id = 1;
inline void TransferStatusRequest::clear_transfer_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transfer_id_.ClearToEmpty();
}
inline const std::string& TransferStatusRequest::transfer_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.intercluster.TransferStatusRequest.transfer_id)
  return _internal_transfer_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TransferStatusRequest::set_transfer_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transfer_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.intercluster.TransferStatusRequest.transfer_id)
}
inline std::string* TransferStatusRequest::mutable_transfer_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_transfer_id();
  // @@protoc_insertion_point(field_mutable:seigr.intercluster.TransferStatusRequest.transfer_id)
  return _s;
}
inline const std::string& TransferStatusRequest::_internal_transfer_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.transfer_id_.Get();
}
inline void TransferStatusRequest::_internal_set_transfer_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transfer_id_.Set(value, GetArena());
}
inline std::string* TransferStatusRequest::_internal_mutable_transfer_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.transfer_id_.Mutable( GetArena());
}
inline std::string* TransferStatusRequest::release_transfer_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.intercluster.TransferStatusRequest.transfer_id)
  return _impl_.transfer_id_.Release();
}
inline void TransferStatusRequest::set_allocated_transfer_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transfer_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.transfer_id_.IsDefault()) {
    _impl_.transfer_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.intercluster.TransferStatusRequest.transfer_id)
}

// -------------------------------------------------------------------

// CommunicationErrorRequest

// .seigr.intercluster.ClusterCommunicationErrorLog error_log = 1;
inline bool CommunicationErrorRequest::has_error_log() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.error_log_ != nullptr);
  return value;
}
inline void CommunicationErrorRequest::clear_error_log() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.error_log_ != nullptr) _impl_.error_log_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::seigr::intercluster::ClusterCommunicationErrorLog& CommunicationErrorRequest::_internal_error_log() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seigr::intercluster::ClusterCommunicationErrorLog* p = _impl_.error_log_;
  return p != nullptr ? *p : reinterpret_cast<const ::seigr::intercluster::ClusterCommunicationErrorLog&>(::seigr::intercluster::_ClusterCommunicationErrorLog_default_instance_);
}
inline const ::seigr::intercluster::ClusterCommunicationErrorLog& CommunicationErrorRequest::error_log() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.intercluster.CommunicationErrorRequest.error_log)
  return _internal_error_log();
}
inline void CommunicationErrorRequest::unsafe_arena_set_allocated_error_log(::seigr::intercluster::ClusterCommunicationErrorLog* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.error_log_);
  }
  _impl_.error_log_ = reinterpret_cast<::seigr::intercluster::ClusterCommunicationErrorLog*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seigr.intercluster.CommunicationErrorRequest.error_log)
}
inline ::seigr::intercluster::ClusterCommunicationErrorLog* CommunicationErrorRequest::release_error_log() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seigr::intercluster::ClusterCommunicationErrorLog* released = _impl_.error_log_;
  _impl_.error_log_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seigr::intercluster::ClusterCommunicationErrorLog* CommunicationErrorRequest::unsafe_arena_release_error_log() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.intercluster.CommunicationErrorRequest.error_log)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seigr::intercluster::ClusterCommunicationErrorLog* temp = _impl_.error_log_;
  _impl_.error_log_ = nullptr;
  return temp;
}
inline ::seigr::intercluster::ClusterCommunicationErrorLog* CommunicationErrorRequest::_internal_mutable_error_log() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.error_log_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seigr::intercluster::ClusterCommunicationErrorLog>(GetArena());
    _impl_.error_log_ = reinterpret_cast<::seigr::intercluster::ClusterCommunicationErrorLog*>(p);
  }
  return _impl_.error_log_;
}
inline ::seigr::intercluster::ClusterCommunicationErrorLog* CommunicationErrorRequest::mutable_error_log() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::seigr::intercluster::ClusterCommunicationErrorLog* _msg = _internal_mutable_error_log();
  // @@protoc_insertion_point(field_mutable:seigr.intercluster.CommunicationErrorRequest.error_log)
  return _msg;
}
inline void CommunicationErrorRequest::set_allocated_error_log(::seigr::intercluster::ClusterCommunicationErrorLog* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.error_log_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.error_log_ = reinterpret_cast<::seigr::intercluster::ClusterCommunicationErrorLog*>(value);
  // @@protoc_insertion_point(field_set_allocated:seigr.intercluster.CommunicationErrorRequest.error_log)
}

// -------------------------------------------------------------------

// CommunicationErrorResponse

// bool success = 1;
inline void CommunicationErrorResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool CommunicationErrorResponse::success() const {
  // @@protoc_insertion_point(field_get:seigr.intercluster.CommunicationErrorResponse.success)
  return _internal_success();
}
inline void CommunicationErrorResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:seigr.intercluster.CommunicationErrorResponse.success)
}
inline bool CommunicationErrorResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void CommunicationErrorResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// string message = 2;
inline void CommunicationErrorResponse::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& CommunicationErrorResponse::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.intercluster.CommunicationErrorResponse.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CommunicationErrorResponse::set_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.intercluster.CommunicationErrorResponse.message)
}
inline std::string* CommunicationErrorResponse::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:seigr.intercluster.CommunicationErrorResponse.message)
  return _s;
}
inline const std::string& CommunicationErrorResponse::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void CommunicationErrorResponse::_internal_set_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(value, GetArena());
}
inline std::string* CommunicationErrorResponse::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* CommunicationErrorResponse::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.intercluster.CommunicationErrorResponse.message)
  return _impl_.message_.Release();
}
inline void CommunicationErrorResponse::set_allocated_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.intercluster.CommunicationErrorResponse.message)
}

// -------------------------------------------------------------------

// ClusterEventSubscriptionResponse

// bool success = 1;
inline void ClusterEventSubscriptionResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool ClusterEventSubscriptionResponse::success() const {
  // @@protoc_insertion_point(field_get:seigr.intercluster.ClusterEventSubscriptionResponse.success)
  return _internal_success();
}
inline void ClusterEventSubscriptionResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:seigr.intercluster.ClusterEventSubscriptionResponse.success)
}
inline bool ClusterEventSubscriptionResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void ClusterEventSubscriptionResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// string subscription_id = 2;
inline void ClusterEventSubscriptionResponse::clear_subscription_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subscription_id_.ClearToEmpty();
}
inline const std::string& ClusterEventSubscriptionResponse::subscription_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.intercluster.ClusterEventSubscriptionResponse.subscription_id)
  return _internal_subscription_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ClusterEventSubscriptionResponse::set_subscription_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subscription_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.intercluster.ClusterEventSubscriptionResponse.subscription_id)
}
inline std::string* ClusterEventSubscriptionResponse::mutable_subscription_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_subscription_id();
  // @@protoc_insertion_point(field_mutable:seigr.intercluster.ClusterEventSubscriptionResponse.subscription_id)
  return _s;
}
inline const std::string& ClusterEventSubscriptionResponse::_internal_subscription_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.subscription_id_.Get();
}
inline void ClusterEventSubscriptionResponse::_internal_set_subscription_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subscription_id_.Set(value, GetArena());
}
inline std::string* ClusterEventSubscriptionResponse::_internal_mutable_subscription_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.subscription_id_.Mutable( GetArena());
}
inline std::string* ClusterEventSubscriptionResponse::release_subscription_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.intercluster.ClusterEventSubscriptionResponse.subscription_id)
  return _impl_.subscription_id_.Release();
}
inline void ClusterEventSubscriptionResponse::set_allocated_subscription_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subscription_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.subscription_id_.IsDefault()) {
    _impl_.subscription_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.intercluster.ClusterEventSubscriptionResponse.subscription_id)
}

// string message = 3;
inline void ClusterEventSubscriptionResponse::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& ClusterEventSubscriptionResponse::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.intercluster.ClusterEventSubscriptionResponse.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ClusterEventSubscriptionResponse::set_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.intercluster.ClusterEventSubscriptionResponse.message)
}
inline std::string* ClusterEventSubscriptionResponse::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:seigr.intercluster.ClusterEventSubscriptionResponse.message)
  return _s;
}
inline const std::string& ClusterEventSubscriptionResponse::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void ClusterEventSubscriptionResponse::_internal_set_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(value, GetArena());
}
inline std::string* ClusterEventSubscriptionResponse::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* ClusterEventSubscriptionResponse::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.intercluster.ClusterEventSubscriptionResponse.message)
  return _impl_.message_.Release();
}
inline void ClusterEventSubscriptionResponse::set_allocated_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.intercluster.ClusterEventSubscriptionResponse.message)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace intercluster
}  // namespace seigr


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::seigr::intercluster::ClusterRequestType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::seigr::intercluster::ClusterRequestType>() {
  return ::seigr::intercluster::ClusterRequestType_descriptor();
}
template <>
struct is_proto_enum<::seigr::intercluster::ClusterResponseType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::seigr::intercluster::ClusterResponseType>() {
  return ::seigr::intercluster::ClusterResponseType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // inter_5fcluster_2eproto_2epb_2eh
