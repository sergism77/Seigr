// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: mycelith_voting.proto
// Protobuf C++ Version: 5.29.2

#include "mycelith_voting.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace seigr {
namespace voting {
              template <typename>
PROTOBUF_CONSTEXPR VotingAuditLog_MetadataEntry_DoNotUse::VotingAuditLog_MetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : VotingAuditLog_MetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : VotingAuditLog_MetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct VotingAuditLog_MetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VotingAuditLog_MetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VotingAuditLog_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    VotingAuditLog_MetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VotingAuditLog_MetadataEntry_DoNotUseDefaultTypeInternal _VotingAuditLog_MetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR Vote_MetadataEntry_DoNotUse::Vote_MetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : Vote_MetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : Vote_MetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct Vote_MetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Vote_MetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Vote_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Vote_MetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Vote_MetadataEntry_DoNotUseDefaultTypeInternal _Vote_MetadataEntry_DoNotUse_default_instance_;

inline constexpr SubmitProposalResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : proposal_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SubmitProposalResponse::SubmitProposalResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubmitProposalResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubmitProposalResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubmitProposalResponseDefaultTypeInternal() {}
  union {
    SubmitProposalResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubmitProposalResponseDefaultTypeInternal _SubmitProposalResponse_default_instance_;

inline constexpr ProposalConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : base_influence_weight_{0},
        influence_multiplier_{0},
        consistency_factor_{0},
        min_layers_to_pass_{0u},
        required_participation_{0u},
        participation_factor_{0},
        engagement_factor_{0},
        adaptive_thresholds_{false},
        enable_dynamic_layer_adjustments_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ProposalConfig::ProposalConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ProposalConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProposalConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProposalConfigDefaultTypeInternal() {}
  union {
    ProposalConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProposalConfigDefaultTypeInternal _ProposalConfig_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR GetProposalResultResponse_MetadataEntry_DoNotUse::GetProposalResultResponse_MetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : GetProposalResultResponse_MetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : GetProposalResultResponse_MetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct GetProposalResultResponse_MetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetProposalResultResponse_MetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetProposalResultResponse_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    GetProposalResultResponse_MetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetProposalResultResponse_MetadataEntry_DoNotUseDefaultTypeInternal _GetProposalResultResponse_MetadataEntry_DoNotUse_default_instance_;

inline constexpr GetProposalResultRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : proposal_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetProposalResultRequest::GetProposalResultRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetProposalResultRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetProposalResultRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetProposalResultRequestDefaultTypeInternal() {}
  union {
    GetProposalResultRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetProposalResultRequestDefaultTypeInternal _GetProposalResultRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR GetProposalDetailsResponse_MetadataEntry_DoNotUse::GetProposalDetailsResponse_MetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : GetProposalDetailsResponse_MetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : GetProposalDetailsResponse_MetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct GetProposalDetailsResponse_MetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetProposalDetailsResponse_MetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetProposalDetailsResponse_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    GetProposalDetailsResponse_MetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetProposalDetailsResponse_MetadataEntry_DoNotUseDefaultTypeInternal _GetProposalDetailsResponse_MetadataEntry_DoNotUse_default_instance_;

inline constexpr GetProposalDetailsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : proposal_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetProposalDetailsRequest::GetProposalDetailsRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetProposalDetailsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetProposalDetailsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetProposalDetailsRequestDefaultTypeInternal() {}
  union {
    GetProposalDetailsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetProposalDetailsRequestDefaultTypeInternal _GetProposalDetailsRequest_default_instance_;

inline constexpr CastVoteResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        influence_weight_{0},
        consistency_bonus_{0},
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CastVoteResponse::CastVoteResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CastVoteResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CastVoteResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CastVoteResponseDefaultTypeInternal() {}
  union {
    CastVoteResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CastVoteResponseDefaultTypeInternal _CastVoteResponse_default_instance_;

inline constexpr CastVoteRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : proposal_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        voter_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        justification_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        layer_number_{0u},
        choice_{static_cast< ::seigr::voting::VoteChoice >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CastVoteRequest::CastVoteRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CastVoteRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CastVoteRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CastVoteRequestDefaultTypeInternal() {}
  union {
    CastVoteRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CastVoteRequestDefaultTypeInternal _CastVoteRequest_default_instance_;

inline constexpr VotingAuditLog::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : metadata_{},
        log_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        action_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        actor_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        details_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        compliance_tag_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR VotingAuditLog::VotingAuditLog(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct VotingAuditLogDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VotingAuditLogDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VotingAuditLogDefaultTypeInternal() {}
  union {
    VotingAuditLog _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VotingAuditLogDefaultTypeInternal _VotingAuditLog_default_instance_;

inline constexpr Vote::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : metadata_{},
        voter_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        justification_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        influence_weight_{0},
        choice_{static_cast< ::seigr::voting::VoteChoice >(0)},
        is_consistent_{false},
        consistency_bonus_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Vote::Vote(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct VoteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VoteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VoteDefaultTypeInternal() {}
  union {
    Vote _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VoteDefaultTypeInternal _Vote_default_instance_;

inline constexpr SubmitProposalRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        config_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SubmitProposalRequest::SubmitProposalRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubmitProposalRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubmitProposalRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubmitProposalRequestDefaultTypeInternal() {}
  union {
    SubmitProposalRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubmitProposalRequestDefaultTypeInternal _SubmitProposalRequest_default_instance_;

inline constexpr VotingLayer::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : votes_{},
        participant_ids_{},
        analysis_notes_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        layer_number_{0u},
        status_{static_cast< ::seigr::voting::LayerStatus >(0)},
        layer_influence_total_{0},
        yes_influence_total_{0},
        total_participants_{0u},
        layer_outcome_{static_cast< ::seigr::voting::VotingOutcome >(0)},
        no_influence_total_{0},
        abstain_influence_total_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR VotingLayer::VotingLayer(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct VotingLayerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VotingLayerDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VotingLayerDefaultTypeInternal() {}
  union {
    VotingLayer _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VotingLayerDefaultTypeInternal _VotingLayer_default_instance_;

inline constexpr VotingProposal::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        layers_{},
        associated_data_ids_{},
        proposal_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        created_by_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        created_timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        closing_timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        outcome_justification_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        config_{nullptr},
        status_{static_cast< ::seigr::voting::VotingStatus >(0)},
        total_layers_{0u},
        outcome_{static_cast< ::seigr::voting::VotingOutcome >(0)},
        requires_expert_review_{false} {}

template <typename>
PROTOBUF_CONSTEXPR VotingProposal::VotingProposal(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct VotingProposalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VotingProposalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VotingProposalDefaultTypeInternal() {}
  union {
    VotingProposal _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VotingProposalDefaultTypeInternal _VotingProposal_default_instance_;

inline constexpr GetProposalResultResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : layers_{},
        metadata_{},
        proposal_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        outcome_justification_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        finalized_timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        outcome_{static_cast< ::seigr::voting::VotingOutcome >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetProposalResultResponse::GetProposalResultResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetProposalResultResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetProposalResultResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetProposalResultResponseDefaultTypeInternal() {}
  union {
    GetProposalResultResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetProposalResultResponseDefaultTypeInternal _GetProposalResultResponse_default_instance_;

inline constexpr GetProposalDetailsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        audit_logs_{},
        metadata_{},
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        proposal_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetProposalDetailsResponse::GetProposalDetailsResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetProposalDetailsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetProposalDetailsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetProposalDetailsResponseDefaultTypeInternal() {}
  union {
    GetProposalDetailsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetProposalDetailsResponseDefaultTypeInternal _GetProposalDetailsResponse_default_instance_;
}  // namespace voting
}  // namespace seigr
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_mycelith_5fvoting_2eproto[4];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_mycelith_5fvoting_2eproto = nullptr;
const ::uint32_t
    TableStruct_mycelith_5fvoting_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::voting::ProposalConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::voting::ProposalConfig, _impl_.base_influence_weight_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::ProposalConfig, _impl_.influence_multiplier_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::ProposalConfig, _impl_.consistency_factor_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::ProposalConfig, _impl_.min_layers_to_pass_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::ProposalConfig, _impl_.required_participation_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::ProposalConfig, _impl_.adaptive_thresholds_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::ProposalConfig, _impl_.participation_factor_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::ProposalConfig, _impl_.engagement_factor_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::ProposalConfig, _impl_.enable_dynamic_layer_adjustments_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::VotingProposal, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::VotingProposal, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::voting::VotingProposal, _impl_.proposal_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::VotingProposal, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::VotingProposal, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::VotingProposal, _impl_.layers_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::VotingProposal, _impl_.total_layers_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::VotingProposal, _impl_.outcome_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::VotingProposal, _impl_.config_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::VotingProposal, _impl_.created_by_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::VotingProposal, _impl_.created_timestamp_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::VotingProposal, _impl_.closing_timestamp_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::VotingProposal, _impl_.outcome_justification_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::VotingProposal, _impl_.associated_data_ids_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::VotingProposal, _impl_.requires_expert_review_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::voting::VotingLayer, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::voting::VotingLayer, _impl_.layer_number_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::VotingLayer, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::VotingLayer, _impl_.votes_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::VotingLayer, _impl_.layer_influence_total_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::VotingLayer, _impl_.total_participants_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::VotingLayer, _impl_.participant_ids_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::VotingLayer, _impl_.yes_influence_total_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::VotingLayer, _impl_.no_influence_total_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::VotingLayer, _impl_.abstain_influence_total_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::VotingLayer, _impl_.layer_outcome_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::VotingLayer, _impl_.analysis_notes_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::Vote_MetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::Vote_MetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::voting::Vote_MetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::Vote_MetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::voting::Vote, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::voting::Vote, _impl_.voter_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::Vote, _impl_.choice_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::Vote, _impl_.influence_weight_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::Vote, _impl_.consistency_bonus_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::Vote, _impl_.is_consistent_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::Vote, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::Vote, _impl_.justification_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::Vote, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::VotingAuditLog_MetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::VotingAuditLog_MetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::voting::VotingAuditLog_MetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::VotingAuditLog_MetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::voting::VotingAuditLog, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::voting::VotingAuditLog, _impl_.log_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::VotingAuditLog, _impl_.action_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::VotingAuditLog, _impl_.actor_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::VotingAuditLog, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::VotingAuditLog, _impl_.details_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::VotingAuditLog, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::VotingAuditLog, _impl_.compliance_tag_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::SubmitProposalRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::SubmitProposalRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::voting::SubmitProposalRequest, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::SubmitProposalRequest, _impl_.config_),
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::voting::SubmitProposalResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::voting::SubmitProposalResponse, _impl_.proposal_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::SubmitProposalResponse, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::SubmitProposalResponse, _impl_.message_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::voting::CastVoteRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::voting::CastVoteRequest, _impl_.proposal_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::CastVoteRequest, _impl_.layer_number_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::CastVoteRequest, _impl_.voter_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::CastVoteRequest, _impl_.choice_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::CastVoteRequest, _impl_.justification_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::voting::CastVoteResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::voting::CastVoteResponse, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::CastVoteResponse, _impl_.influence_weight_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::CastVoteResponse, _impl_.consistency_bonus_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::CastVoteResponse, _impl_.message_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::voting::GetProposalResultRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::voting::GetProposalResultRequest, _impl_.proposal_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::GetProposalResultResponse_MetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::GetProposalResultResponse_MetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::voting::GetProposalResultResponse_MetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::GetProposalResultResponse_MetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::voting::GetProposalResultResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::voting::GetProposalResultResponse, _impl_.proposal_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::GetProposalResultResponse, _impl_.outcome_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::GetProposalResultResponse, _impl_.outcome_justification_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::GetProposalResultResponse, _impl_.layers_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::GetProposalResultResponse, _impl_.finalized_timestamp_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::GetProposalResultResponse, _impl_.metadata_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::voting::GetProposalDetailsRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::voting::GetProposalDetailsRequest, _impl_.proposal_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::GetProposalDetailsResponse_MetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::GetProposalDetailsResponse_MetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::voting::GetProposalDetailsResponse_MetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::GetProposalDetailsResponse_MetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::seigr::voting::GetProposalDetailsResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::GetProposalDetailsResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::voting::GetProposalDetailsResponse, _impl_.proposal_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::GetProposalDetailsResponse, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::GetProposalDetailsResponse, _impl_.audit_logs_),
        PROTOBUF_FIELD_OFFSET(::seigr::voting::GetProposalDetailsResponse, _impl_.metadata_),
        0,
        ~0u,
        ~0u,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::seigr::voting::ProposalConfig)},
        {17, 38, -1, sizeof(::seigr::voting::VotingProposal)},
        {51, -1, -1, sizeof(::seigr::voting::VotingLayer)},
        {70, 80, -1, sizeof(::seigr::voting::Vote_MetadataEntry_DoNotUse)},
        {82, -1, -1, sizeof(::seigr::voting::Vote)},
        {98, 108, -1, sizeof(::seigr::voting::VotingAuditLog_MetadataEntry_DoNotUse)},
        {110, -1, -1, sizeof(::seigr::voting::VotingAuditLog)},
        {125, 135, -1, sizeof(::seigr::voting::SubmitProposalRequest)},
        {137, -1, -1, sizeof(::seigr::voting::SubmitProposalResponse)},
        {148, -1, -1, sizeof(::seigr::voting::CastVoteRequest)},
        {161, -1, -1, sizeof(::seigr::voting::CastVoteResponse)},
        {173, -1, -1, sizeof(::seigr::voting::GetProposalResultRequest)},
        {182, 192, -1, sizeof(::seigr::voting::GetProposalResultResponse_MetadataEntry_DoNotUse)},
        {194, -1, -1, sizeof(::seigr::voting::GetProposalResultResponse)},
        {208, -1, -1, sizeof(::seigr::voting::GetProposalDetailsRequest)},
        {217, 227, -1, sizeof(::seigr::voting::GetProposalDetailsResponse_MetadataEntry_DoNotUse)},
        {229, 241, -1, sizeof(::seigr::voting::GetProposalDetailsResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::seigr::voting::_ProposalConfig_default_instance_._instance,
    &::seigr::voting::_VotingProposal_default_instance_._instance,
    &::seigr::voting::_VotingLayer_default_instance_._instance,
    &::seigr::voting::_Vote_MetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::voting::_Vote_default_instance_._instance,
    &::seigr::voting::_VotingAuditLog_MetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::voting::_VotingAuditLog_default_instance_._instance,
    &::seigr::voting::_SubmitProposalRequest_default_instance_._instance,
    &::seigr::voting::_SubmitProposalResponse_default_instance_._instance,
    &::seigr::voting::_CastVoteRequest_default_instance_._instance,
    &::seigr::voting::_CastVoteResponse_default_instance_._instance,
    &::seigr::voting::_GetProposalResultRequest_default_instance_._instance,
    &::seigr::voting::_GetProposalResultResponse_MetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::voting::_GetProposalResultResponse_default_instance_._instance,
    &::seigr::voting::_GetProposalDetailsRequest_default_instance_._instance,
    &::seigr::voting::_GetProposalDetailsResponse_MetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::voting::_GetProposalDetailsResponse_default_instance_._instance,
};
const char descriptor_table_protodef_mycelith_5fvoting_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\025mycelith_voting.proto\022\014seigr.voting\"\245\002"
    "\n\016ProposalConfig\022\035\n\025base_influence_weigh"
    "t\030\001 \001(\001\022\034\n\024influence_multiplier\030\002 \001(\001\022\032\n"
    "\022consistency_factor\030\003 \001(\001\022\032\n\022min_layers_"
    "to_pass\030\004 \001(\r\022\036\n\026required_participation\030"
    "\005 \001(\r\022\033\n\023adaptive_thresholds\030\006 \001(\010\022\034\n\024pa"
    "rticipation_factor\030\007 \001(\001\022\031\n\021engagement_f"
    "actor\030\010 \001(\001\022(\n enable_dynamic_layer_adju"
    "stments\030\t \001(\010\"\251\003\n\016VotingProposal\022\023\n\013prop"
    "osal_id\030\001 \001(\t\022\023\n\013description\030\002 \001(\t\022*\n\006st"
    "atus\030\003 \001(\0162\032.seigr.voting.VotingStatus\022)"
    "\n\006layers\030\004 \003(\0132\031.seigr.voting.VotingLaye"
    "r\022\024\n\014total_layers\030\005 \001(\r\022,\n\007outcome\030\006 \001(\016"
    "2\033.seigr.voting.VotingOutcome\022,\n\006config\030"
    "\007 \001(\0132\034.seigr.voting.ProposalConfig\022\022\n\nc"
    "reated_by\030\010 \001(\t\022\031\n\021created_timestamp\030\t \001"
    "(\t\022\031\n\021closing_timestamp\030\n \001(\t\022\035\n\025outcome"
    "_justification\030\013 \001(\t\022\033\n\023associated_data_"
    "ids\030\014 \003(\t\022\036\n\026requires_expert_review\030\r \001("
    "\010\"\353\002\n\013VotingLayer\022\024\n\014layer_number\030\001 \001(\r\022"
    ")\n\006status\030\002 \001(\0162\031.seigr.voting.LayerStat"
    "us\022!\n\005votes\030\003 \003(\0132\022.seigr.voting.Vote\022\035\n"
    "\025layer_influence_total\030\004 \001(\001\022\032\n\022total_pa"
    "rticipants\030\005 \001(\r\022\027\n\017participant_ids\030\006 \003("
    "\t\022\033\n\023yes_influence_total\030\007 \001(\001\022\032\n\022no_inf"
    "luence_total\030\010 \001(\001\022\037\n\027abstain_influence_"
    "total\030\t \001(\001\0222\n\rlayer_outcome\030\n \001(\0162\033.sei"
    "gr.voting.VotingOutcome\022\026\n\016analysis_note"
    "s\030\013 \001(\t\"\235\002\n\004Vote\022\020\n\010voter_id\030\001 \001(\t\022(\n\006ch"
    "oice\030\002 \001(\0162\030.seigr.voting.VoteChoice\022\030\n\020"
    "influence_weight\030\003 \001(\001\022\031\n\021consistency_bo"
    "nus\030\004 \001(\001\022\025\n\ris_consistent\030\005 \001(\010\022\021\n\ttime"
    "stamp\030\006 \001(\t\022\025\n\rjustification\030\007 \001(\t\0222\n\010me"
    "tadata\030\010 \003(\0132 .seigr.voting.Vote.Metadat"
    "aEntry\032/\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005"
    "value\030\002 \001(\t:\0028\001\"\355\001\n\016VotingAuditLog\022\016\n\006lo"
    "g_id\030\001 \001(\t\022\016\n\006action\030\002 \001(\t\022\020\n\010actor_id\030\003"
    " \001(\t\022\021\n\ttimestamp\030\004 \001(\t\022\017\n\007details\030\005 \001(\t"
    "\022<\n\010metadata\030\006 \003(\0132*.seigr.voting.Voting"
    "AuditLog.MetadataEntry\022\026\n\016compliance_tag"
    "\030\007 \001(\t\032/\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005"
    "value\030\002 \001(\t:\0028\001\"Z\n\025SubmitProposalRequest"
    "\022\023\n\013description\030\001 \001(\t\022,\n\006config\030\002 \001(\0132\034."
    "seigr.voting.ProposalConfig\"O\n\026SubmitPro"
    "posalResponse\022\023\n\013proposal_id\030\001 \001(\t\022\017\n\007su"
    "ccess\030\002 \001(\010\022\017\n\007message\030\003 \001(\t\"\217\001\n\017CastVot"
    "eRequest\022\023\n\013proposal_id\030\001 \001(\t\022\024\n\014layer_n"
    "umber\030\002 \001(\r\022\020\n\010voter_id\030\003 \001(\t\022(\n\006choice\030"
    "\004 \001(\0162\030.seigr.voting.VoteChoice\022\025\n\rjusti"
    "fication\030\005 \001(\t\"i\n\020CastVoteResponse\022\017\n\007su"
    "ccess\030\001 \001(\010\022\030\n\020influence_weight\030\002 \001(\001\022\031\n"
    "\021consistency_bonus\030\003 \001(\001\022\017\n\007message\030\004 \001("
    "\t\"/\n\030GetProposalResultRequest\022\023\n\013proposa"
    "l_id\030\001 \001(\t\"\277\002\n\031GetProposalResultResponse"
    "\022\023\n\013proposal_id\030\001 \001(\t\022,\n\007outcome\030\002 \001(\0162\033"
    ".seigr.voting.VotingOutcome\022\035\n\025outcome_j"
    "ustification\030\003 \001(\t\022)\n\006layers\030\004 \003(\0132\031.sei"
    "gr.voting.VotingLayer\022\033\n\023finalized_times"
    "tamp\030\005 \001(\t\022G\n\010metadata\030\006 \003(\01325.seigr.vot"
    "ing.GetProposalResultResponse.MetadataEn"
    "try\032/\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005val"
    "ue\030\002 \001(\t:\0028\001\"0\n\031GetProposalDetailsReques"
    "t\022\023\n\013proposal_id\030\001 \001(\t\"\212\002\n\032GetProposalDe"
    "tailsResponse\022.\n\010proposal\030\001 \001(\0132\034.seigr."
    "voting.VotingProposal\022\017\n\007message\030\002 \001(\t\0220"
    "\n\naudit_logs\030\003 \003(\0132\034.seigr.voting.Voting"
    "AuditLog\022H\n\010metadata\030\004 \003(\01326.seigr.votin"
    "g.GetProposalDetailsResponse.MetadataEnt"
    "ry\032/\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005valu"
    "e\030\002 \001(\t:\0028\001*Y\n\013LayerStatus\022\032\n\026LAYER_STAT"
    "US_UNDEFINED\020\000\022\025\n\021LAYER_STATUS_OPEN\020\001\022\027\n"
    "\023LAYER_STATUS_CLOSED\020\002*i\n\nVoteChoice\022\031\n\025"
    "VOTE_CHOICE_UNDEFINED\020\000\022\023\n\017VOTE_CHOICE_Y"
    "ES\020\001\022\022\n\016VOTE_CHOICE_NO\020\002\022\027\n\023VOTE_CHOICE_"
    "ABSTAIN\020\003*\227\001\n\014VotingStatus\022\033\n\027VOTING_STA"
    "TUS_UNDEFINED\020\000\022\031\n\025VOTING_STATUS_PENDING"
    "\020\001\022\030\n\024VOTING_STATUS_ACTIVE\020\002\022\033\n\027VOTING_S"
    "TATUS_COMPLETED\020\003\022\030\n\024VOTING_STATUS_FAILE"
    "D\020\004*\246\001\n\rVotingOutcome\022\034\n\030VOTING_OUTCOME_"
    "UNDECIDED\020\000\022\033\n\027VOTING_OUTCOME_APPROVED\020\001"
    "\022\033\n\027VOTING_OUTCOME_REJECTED\020\002\022\034\n\030VOTING_"
    "OUTCOME_ABSTAINED\020\003\022\037\n\033VOTING_OUTCOME_IN"
    "CONCLUSIVE\020\0042\216\003\n\025MycelithVotingService\022["
    "\n\016SubmitProposal\022#.seigr.voting.SubmitPr"
    "oposalRequest\032$.seigr.voting.SubmitPropo"
    "salResponse\022I\n\010CastVote\022\035.seigr.voting.C"
    "astVoteRequest\032\036.seigr.voting.CastVoteRe"
    "sponse\022d\n\021GetProposalResult\022&.seigr.voti"
    "ng.GetProposalResultRequest\032\'.seigr.voti"
    "ng.GetProposalResultResponse\022g\n\022GetPropo"
    "salDetails\022\'.seigr.voting.GetProposalDet"
    "ailsRequest\032(.seigr.voting.GetProposalDe"
    "tailsResponseb\006proto3"
};
static ::absl::once_flag descriptor_table_mycelith_5fvoting_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_mycelith_5fvoting_2eproto = {
    false,
    false,
    3701,
    descriptor_table_protodef_mycelith_5fvoting_2eproto,
    "mycelith_voting.proto",
    &descriptor_table_mycelith_5fvoting_2eproto_once,
    nullptr,
    0,
    17,
    schemas,
    file_default_instances,
    TableStruct_mycelith_5fvoting_2eproto::offsets,
    file_level_enum_descriptors_mycelith_5fvoting_2eproto,
    file_level_service_descriptors_mycelith_5fvoting_2eproto,
};
namespace seigr {
namespace voting {
const ::google::protobuf::EnumDescriptor* LayerStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_mycelith_5fvoting_2eproto);
  return file_level_enum_descriptors_mycelith_5fvoting_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t LayerStatus_internal_data_[] = {
    196608u, 0u, };
bool LayerStatus_IsValid(int value) {
  return 0 <= value && value <= 2;
}
const ::google::protobuf::EnumDescriptor* VoteChoice_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_mycelith_5fvoting_2eproto);
  return file_level_enum_descriptors_mycelith_5fvoting_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t VoteChoice_internal_data_[] = {
    262144u, 0u, };
bool VoteChoice_IsValid(int value) {
  return 0 <= value && value <= 3;
}
const ::google::protobuf::EnumDescriptor* VotingStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_mycelith_5fvoting_2eproto);
  return file_level_enum_descriptors_mycelith_5fvoting_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t VotingStatus_internal_data_[] = {
    327680u, 0u, };
bool VotingStatus_IsValid(int value) {
  return 0 <= value && value <= 4;
}
const ::google::protobuf::EnumDescriptor* VotingOutcome_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_mycelith_5fvoting_2eproto);
  return file_level_enum_descriptors_mycelith_5fvoting_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t VotingOutcome_internal_data_[] = {
    327680u, 0u, };
bool VotingOutcome_IsValid(int value) {
  return 0 <= value && value <= 4;
}
// ===================================================================

class ProposalConfig::_Internal {
 public:
};

ProposalConfig::ProposalConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.voting.ProposalConfig)
}
ProposalConfig::ProposalConfig(
    ::google::protobuf::Arena* arena, const ProposalConfig& from)
    : ProposalConfig(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ProposalConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ProposalConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, base_influence_weight_),
           0,
           offsetof(Impl_, enable_dynamic_layer_adjustments_) -
               offsetof(Impl_, base_influence_weight_) +
               sizeof(Impl_::enable_dynamic_layer_adjustments_));
}
ProposalConfig::~ProposalConfig() {
  // @@protoc_insertion_point(destructor:seigr.voting.ProposalConfig)
  SharedDtor(*this);
}
inline void ProposalConfig::SharedDtor(MessageLite& self) {
  ProposalConfig& this_ = static_cast<ProposalConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ProposalConfig::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ProposalConfig(arena);
}
constexpr auto ProposalConfig::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ProposalConfig),
                                            alignof(ProposalConfig));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ProposalConfig::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ProposalConfig_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ProposalConfig::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ProposalConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ProposalConfig::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ProposalConfig>(), &ProposalConfig::ByteSizeLong,
            &ProposalConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ProposalConfig, _impl_._cached_size_),
        false,
    },
    &ProposalConfig::kDescriptorMethods,
    &descriptor_table_mycelith_5fvoting_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ProposalConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 0, 0, 2> ProposalConfig::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::voting::ProposalConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double base_influence_weight = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(ProposalConfig, _impl_.base_influence_weight_)}},
    // double influence_multiplier = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(ProposalConfig, _impl_.influence_multiplier_)}},
    // double consistency_factor = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(ProposalConfig, _impl_.consistency_factor_)}},
    // uint32 min_layers_to_pass = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ProposalConfig, _impl_.min_layers_to_pass_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(ProposalConfig, _impl_.min_layers_to_pass_)}},
    // uint32 required_participation = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ProposalConfig, _impl_.required_participation_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(ProposalConfig, _impl_.required_participation_)}},
    // bool adaptive_thresholds = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ProposalConfig, _impl_.adaptive_thresholds_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(ProposalConfig, _impl_.adaptive_thresholds_)}},
    // double participation_factor = 7;
    {::_pbi::TcParser::FastF64S1,
     {57, 63, 0, PROTOBUF_FIELD_OFFSET(ProposalConfig, _impl_.participation_factor_)}},
    // double engagement_factor = 8;
    {::_pbi::TcParser::FastF64S1,
     {65, 63, 0, PROTOBUF_FIELD_OFFSET(ProposalConfig, _impl_.engagement_factor_)}},
    // bool enable_dynamic_layer_adjustments = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ProposalConfig, _impl_.enable_dynamic_layer_adjustments_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(ProposalConfig, _impl_.enable_dynamic_layer_adjustments_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // double base_influence_weight = 1;
    {PROTOBUF_FIELD_OFFSET(ProposalConfig, _impl_.base_influence_weight_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double influence_multiplier = 2;
    {PROTOBUF_FIELD_OFFSET(ProposalConfig, _impl_.influence_multiplier_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double consistency_factor = 3;
    {PROTOBUF_FIELD_OFFSET(ProposalConfig, _impl_.consistency_factor_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // uint32 min_layers_to_pass = 4;
    {PROTOBUF_FIELD_OFFSET(ProposalConfig, _impl_.min_layers_to_pass_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 required_participation = 5;
    {PROTOBUF_FIELD_OFFSET(ProposalConfig, _impl_.required_participation_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // bool adaptive_thresholds = 6;
    {PROTOBUF_FIELD_OFFSET(ProposalConfig, _impl_.adaptive_thresholds_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // double participation_factor = 7;
    {PROTOBUF_FIELD_OFFSET(ProposalConfig, _impl_.participation_factor_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double engagement_factor = 8;
    {PROTOBUF_FIELD_OFFSET(ProposalConfig, _impl_.engagement_factor_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // bool enable_dynamic_layer_adjustments = 9;
    {PROTOBUF_FIELD_OFFSET(ProposalConfig, _impl_.enable_dynamic_layer_adjustments_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void ProposalConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.voting.ProposalConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.base_influence_weight_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.enable_dynamic_layer_adjustments_) -
      reinterpret_cast<char*>(&_impl_.base_influence_weight_)) + sizeof(_impl_.enable_dynamic_layer_adjustments_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ProposalConfig::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ProposalConfig& this_ = static_cast<const ProposalConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ProposalConfig::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ProposalConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.voting.ProposalConfig)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double base_influence_weight = 1;
          if (::absl::bit_cast<::uint64_t>(this_._internal_base_influence_weight()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_base_influence_weight(), target);
          }

          // double influence_multiplier = 2;
          if (::absl::bit_cast<::uint64_t>(this_._internal_influence_multiplier()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                2, this_._internal_influence_multiplier(), target);
          }

          // double consistency_factor = 3;
          if (::absl::bit_cast<::uint64_t>(this_._internal_consistency_factor()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                3, this_._internal_consistency_factor(), target);
          }

          // uint32 min_layers_to_pass = 4;
          if (this_._internal_min_layers_to_pass() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                4, this_._internal_min_layers_to_pass(), target);
          }

          // uint32 required_participation = 5;
          if (this_._internal_required_participation() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                5, this_._internal_required_participation(), target);
          }

          // bool adaptive_thresholds = 6;
          if (this_._internal_adaptive_thresholds() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                6, this_._internal_adaptive_thresholds(), target);
          }

          // double participation_factor = 7;
          if (::absl::bit_cast<::uint64_t>(this_._internal_participation_factor()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                7, this_._internal_participation_factor(), target);
          }

          // double engagement_factor = 8;
          if (::absl::bit_cast<::uint64_t>(this_._internal_engagement_factor()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                8, this_._internal_engagement_factor(), target);
          }

          // bool enable_dynamic_layer_adjustments = 9;
          if (this_._internal_enable_dynamic_layer_adjustments() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                9, this_._internal_enable_dynamic_layer_adjustments(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.voting.ProposalConfig)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ProposalConfig::ByteSizeLong(const MessageLite& base) {
          const ProposalConfig& this_ = static_cast<const ProposalConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ProposalConfig::ByteSizeLong() const {
          const ProposalConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.voting.ProposalConfig)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // double base_influence_weight = 1;
            if (::absl::bit_cast<::uint64_t>(this_._internal_base_influence_weight()) != 0) {
              total_size += 9;
            }
            // double influence_multiplier = 2;
            if (::absl::bit_cast<::uint64_t>(this_._internal_influence_multiplier()) != 0) {
              total_size += 9;
            }
            // double consistency_factor = 3;
            if (::absl::bit_cast<::uint64_t>(this_._internal_consistency_factor()) != 0) {
              total_size += 9;
            }
            // uint32 min_layers_to_pass = 4;
            if (this_._internal_min_layers_to_pass() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_min_layers_to_pass());
            }
            // uint32 required_participation = 5;
            if (this_._internal_required_participation() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_required_participation());
            }
            // double participation_factor = 7;
            if (::absl::bit_cast<::uint64_t>(this_._internal_participation_factor()) != 0) {
              total_size += 9;
            }
            // double engagement_factor = 8;
            if (::absl::bit_cast<::uint64_t>(this_._internal_engagement_factor()) != 0) {
              total_size += 9;
            }
            // bool adaptive_thresholds = 6;
            if (this_._internal_adaptive_thresholds() != 0) {
              total_size += 2;
            }
            // bool enable_dynamic_layer_adjustments = 9;
            if (this_._internal_enable_dynamic_layer_adjustments() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ProposalConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ProposalConfig*>(&to_msg);
  auto& from = static_cast<const ProposalConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.voting.ProposalConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_base_influence_weight()) != 0) {
    _this->_impl_.base_influence_weight_ = from._impl_.base_influence_weight_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_influence_multiplier()) != 0) {
    _this->_impl_.influence_multiplier_ = from._impl_.influence_multiplier_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_consistency_factor()) != 0) {
    _this->_impl_.consistency_factor_ = from._impl_.consistency_factor_;
  }
  if (from._internal_min_layers_to_pass() != 0) {
    _this->_impl_.min_layers_to_pass_ = from._impl_.min_layers_to_pass_;
  }
  if (from._internal_required_participation() != 0) {
    _this->_impl_.required_participation_ = from._impl_.required_participation_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_participation_factor()) != 0) {
    _this->_impl_.participation_factor_ = from._impl_.participation_factor_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_engagement_factor()) != 0) {
    _this->_impl_.engagement_factor_ = from._impl_.engagement_factor_;
  }
  if (from._internal_adaptive_thresholds() != 0) {
    _this->_impl_.adaptive_thresholds_ = from._impl_.adaptive_thresholds_;
  }
  if (from._internal_enable_dynamic_layer_adjustments() != 0) {
    _this->_impl_.enable_dynamic_layer_adjustments_ = from._impl_.enable_dynamic_layer_adjustments_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ProposalConfig::CopyFrom(const ProposalConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.voting.ProposalConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ProposalConfig::InternalSwap(ProposalConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProposalConfig, _impl_.enable_dynamic_layer_adjustments_)
      + sizeof(ProposalConfig::_impl_.enable_dynamic_layer_adjustments_)
      - PROTOBUF_FIELD_OFFSET(ProposalConfig, _impl_.base_influence_weight_)>(
          reinterpret_cast<char*>(&_impl_.base_influence_weight_),
          reinterpret_cast<char*>(&other->_impl_.base_influence_weight_));
}

::google::protobuf::Metadata ProposalConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class VotingProposal::_Internal {
 public:
  using HasBits =
      decltype(std::declval<VotingProposal>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(VotingProposal, _impl_._has_bits_);
};

VotingProposal::VotingProposal(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.voting.VotingProposal)
}
inline PROTOBUF_NDEBUG_INLINE VotingProposal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::voting::VotingProposal& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        layers_{visibility, arena, from.layers_},
        associated_data_ids_{visibility, arena, from.associated_data_ids_},
        proposal_id_(arena, from.proposal_id_),
        description_(arena, from.description_),
        created_by_(arena, from.created_by_),
        created_timestamp_(arena, from.created_timestamp_),
        closing_timestamp_(arena, from.closing_timestamp_),
        outcome_justification_(arena, from.outcome_justification_) {}

VotingProposal::VotingProposal(
    ::google::protobuf::Arena* arena,
    const VotingProposal& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  VotingProposal* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.config_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::seigr::voting::ProposalConfig>(
                              arena, *from._impl_.config_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, status_),
           offsetof(Impl_, requires_expert_review_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::requires_expert_review_));

  // @@protoc_insertion_point(copy_constructor:seigr.voting.VotingProposal)
}
inline PROTOBUF_NDEBUG_INLINE VotingProposal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        layers_{visibility, arena},
        associated_data_ids_{visibility, arena},
        proposal_id_(arena),
        description_(arena),
        created_by_(arena),
        created_timestamp_(arena),
        closing_timestamp_(arena),
        outcome_justification_(arena) {}

inline void VotingProposal::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, config_),
           0,
           offsetof(Impl_, requires_expert_review_) -
               offsetof(Impl_, config_) +
               sizeof(Impl_::requires_expert_review_));
}
VotingProposal::~VotingProposal() {
  // @@protoc_insertion_point(destructor:seigr.voting.VotingProposal)
  SharedDtor(*this);
}
inline void VotingProposal::SharedDtor(MessageLite& self) {
  VotingProposal& this_ = static_cast<VotingProposal&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.proposal_id_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.created_by_.Destroy();
  this_._impl_.created_timestamp_.Destroy();
  this_._impl_.closing_timestamp_.Destroy();
  this_._impl_.outcome_justification_.Destroy();
  delete this_._impl_.config_;
  this_._impl_.~Impl_();
}

inline void* VotingProposal::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) VotingProposal(arena);
}
constexpr auto VotingProposal::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(VotingProposal, _impl_.layers_) +
          decltype(VotingProposal::_impl_.layers_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(VotingProposal, _impl_.associated_data_ids_) +
          decltype(VotingProposal::_impl_.associated_data_ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(VotingProposal), alignof(VotingProposal), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&VotingProposal::PlacementNew_,
                                 sizeof(VotingProposal),
                                 alignof(VotingProposal));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull VotingProposal::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_VotingProposal_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &VotingProposal::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<VotingProposal>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &VotingProposal::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<VotingProposal>(), &VotingProposal::ByteSizeLong,
            &VotingProposal::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(VotingProposal, _impl_._cached_size_),
        false,
    },
    &VotingProposal::kDescriptorMethods,
    &descriptor_table_mycelith_5fvoting_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* VotingProposal::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 13, 2, 150, 2> VotingProposal::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VotingProposal, _impl_._has_bits_),
    0, // no _extensions_
    13, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294959104,  // skipmap
    offsetof(decltype(_table_), field_entries),
    13,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::voting::VotingProposal>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string proposal_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(VotingProposal, _impl_.proposal_id_)}},
    // string description = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(VotingProposal, _impl_.description_)}},
    // .seigr.voting.VotingStatus status = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VotingProposal, _impl_.status_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(VotingProposal, _impl_.status_)}},
    // repeated .seigr.voting.VotingLayer layers = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(VotingProposal, _impl_.layers_)}},
    // uint32 total_layers = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VotingProposal, _impl_.total_layers_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(VotingProposal, _impl_.total_layers_)}},
    // .seigr.voting.VotingOutcome outcome = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VotingProposal, _impl_.outcome_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(VotingProposal, _impl_.outcome_)}},
    // .seigr.voting.ProposalConfig config = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 0, 1, PROTOBUF_FIELD_OFFSET(VotingProposal, _impl_.config_)}},
    // string created_by = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(VotingProposal, _impl_.created_by_)}},
    // string created_timestamp = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(VotingProposal, _impl_.created_timestamp_)}},
    // string closing_timestamp = 10;
    {::_pbi::TcParser::FastUS1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(VotingProposal, _impl_.closing_timestamp_)}},
    // string outcome_justification = 11;
    {::_pbi::TcParser::FastUS1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(VotingProposal, _impl_.outcome_justification_)}},
    // repeated string associated_data_ids = 12;
    {::_pbi::TcParser::FastUR1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(VotingProposal, _impl_.associated_data_ids_)}},
    // bool requires_expert_review = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(VotingProposal, _impl_.requires_expert_review_), 63>(),
     {104, 63, 0, PROTOBUF_FIELD_OFFSET(VotingProposal, _impl_.requires_expert_review_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string proposal_id = 1;
    {PROTOBUF_FIELD_OFFSET(VotingProposal, _impl_.proposal_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 2;
    {PROTOBUF_FIELD_OFFSET(VotingProposal, _impl_.description_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.voting.VotingStatus status = 3;
    {PROTOBUF_FIELD_OFFSET(VotingProposal, _impl_.status_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // repeated .seigr.voting.VotingLayer layers = 4;
    {PROTOBUF_FIELD_OFFSET(VotingProposal, _impl_.layers_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 total_layers = 5;
    {PROTOBUF_FIELD_OFFSET(VotingProposal, _impl_.total_layers_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .seigr.voting.VotingOutcome outcome = 6;
    {PROTOBUF_FIELD_OFFSET(VotingProposal, _impl_.outcome_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .seigr.voting.ProposalConfig config = 7;
    {PROTOBUF_FIELD_OFFSET(VotingProposal, _impl_.config_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string created_by = 8;
    {PROTOBUF_FIELD_OFFSET(VotingProposal, _impl_.created_by_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string created_timestamp = 9;
    {PROTOBUF_FIELD_OFFSET(VotingProposal, _impl_.created_timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string closing_timestamp = 10;
    {PROTOBUF_FIELD_OFFSET(VotingProposal, _impl_.closing_timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string outcome_justification = 11;
    {PROTOBUF_FIELD_OFFSET(VotingProposal, _impl_.outcome_justification_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string associated_data_ids = 12;
    {PROTOBUF_FIELD_OFFSET(VotingProposal, _impl_.associated_data_ids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // bool requires_expert_review = 13;
    {PROTOBUF_FIELD_OFFSET(VotingProposal, _impl_.requires_expert_review_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::seigr::voting::VotingLayer>()},
    {::_pbi::TcParser::GetTable<::seigr::voting::ProposalConfig>()},
  }}, {{
    "\33\13\13\0\0\0\0\0\12\21\21\25\23\0\0\0"
    "seigr.voting.VotingProposal"
    "proposal_id"
    "description"
    "created_by"
    "created_timestamp"
    "closing_timestamp"
    "outcome_justification"
    "associated_data_ids"
  }},
};

PROTOBUF_NOINLINE void VotingProposal::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.voting.VotingProposal)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.layers_.Clear();
  _impl_.associated_data_ids_.Clear();
  _impl_.proposal_id_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _impl_.created_by_.ClearToEmpty();
  _impl_.created_timestamp_.ClearToEmpty();
  _impl_.closing_timestamp_.ClearToEmpty();
  _impl_.outcome_justification_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.config_ != nullptr);
    _impl_.config_->Clear();
  }
  ::memset(&_impl_.status_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.requires_expert_review_) -
      reinterpret_cast<char*>(&_impl_.status_)) + sizeof(_impl_.requires_expert_review_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* VotingProposal::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const VotingProposal& this_ = static_cast<const VotingProposal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* VotingProposal::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const VotingProposal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.voting.VotingProposal)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string proposal_id = 1;
          if (!this_._internal_proposal_id().empty()) {
            const std::string& _s = this_._internal_proposal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.voting.VotingProposal.proposal_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string description = 2;
          if (!this_._internal_description().empty()) {
            const std::string& _s = this_._internal_description();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.voting.VotingProposal.description");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // .seigr.voting.VotingStatus status = 3;
          if (this_._internal_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_status(), target);
          }

          // repeated .seigr.voting.VotingLayer layers = 4;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_layers_size());
               i < n; i++) {
            const auto& repfield = this_._internal_layers().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // uint32 total_layers = 5;
          if (this_._internal_total_layers() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                5, this_._internal_total_layers(), target);
          }

          // .seigr.voting.VotingOutcome outcome = 6;
          if (this_._internal_outcome() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                6, this_._internal_outcome(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .seigr.voting.ProposalConfig config = 7;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                7, *this_._impl_.config_, this_._impl_.config_->GetCachedSize(), target,
                stream);
          }

          // string created_by = 8;
          if (!this_._internal_created_by().empty()) {
            const std::string& _s = this_._internal_created_by();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.voting.VotingProposal.created_by");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          // string created_timestamp = 9;
          if (!this_._internal_created_timestamp().empty()) {
            const std::string& _s = this_._internal_created_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.voting.VotingProposal.created_timestamp");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          // string closing_timestamp = 10;
          if (!this_._internal_closing_timestamp().empty()) {
            const std::string& _s = this_._internal_closing_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.voting.VotingProposal.closing_timestamp");
            target = stream->WriteStringMaybeAliased(10, _s, target);
          }

          // string outcome_justification = 11;
          if (!this_._internal_outcome_justification().empty()) {
            const std::string& _s = this_._internal_outcome_justification();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.voting.VotingProposal.outcome_justification");
            target = stream->WriteStringMaybeAliased(11, _s, target);
          }

          // repeated string associated_data_ids = 12;
          for (int i = 0, n = this_._internal_associated_data_ids_size(); i < n; ++i) {
            const auto& s = this_._internal_associated_data_ids().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.voting.VotingProposal.associated_data_ids");
            target = stream->WriteString(12, s, target);
          }

          // bool requires_expert_review = 13;
          if (this_._internal_requires_expert_review() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                13, this_._internal_requires_expert_review(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.voting.VotingProposal)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t VotingProposal::ByteSizeLong(const MessageLite& base) {
          const VotingProposal& this_ = static_cast<const VotingProposal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t VotingProposal::ByteSizeLong() const {
          const VotingProposal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.voting.VotingProposal)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .seigr.voting.VotingLayer layers = 4;
            {
              total_size += 1UL * this_._internal_layers_size();
              for (const auto& msg : this_._internal_layers()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated string associated_data_ids = 12;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_associated_data_ids().size());
              for (int i = 0, n = this_._internal_associated_data_ids().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_associated_data_ids().Get(i));
              }
            }
          }
           {
            // string proposal_id = 1;
            if (!this_._internal_proposal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_proposal_id());
            }
            // string description = 2;
            if (!this_._internal_description().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_description());
            }
            // string created_by = 8;
            if (!this_._internal_created_by().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_created_by());
            }
            // string created_timestamp = 9;
            if (!this_._internal_created_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_created_timestamp());
            }
            // string closing_timestamp = 10;
            if (!this_._internal_closing_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_closing_timestamp());
            }
            // string outcome_justification = 11;
            if (!this_._internal_outcome_justification().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_outcome_justification());
            }
          }
           {
            // .seigr.voting.ProposalConfig config = 7;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.config_);
            }
          }
           {
            // .seigr.voting.VotingStatus status = 3;
            if (this_._internal_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
            }
            // uint32 total_layers = 5;
            if (this_._internal_total_layers() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_total_layers());
            }
            // .seigr.voting.VotingOutcome outcome = 6;
            if (this_._internal_outcome() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_outcome());
            }
            // bool requires_expert_review = 13;
            if (this_._internal_requires_expert_review() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void VotingProposal::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<VotingProposal*>(&to_msg);
  auto& from = static_cast<const VotingProposal&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.voting.VotingProposal)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_layers()->MergeFrom(
      from._internal_layers());
  _this->_internal_mutable_associated_data_ids()->MergeFrom(from._internal_associated_data_ids());
  if (!from._internal_proposal_id().empty()) {
    _this->_internal_set_proposal_id(from._internal_proposal_id());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (!from._internal_created_by().empty()) {
    _this->_internal_set_created_by(from._internal_created_by());
  }
  if (!from._internal_created_timestamp().empty()) {
    _this->_internal_set_created_timestamp(from._internal_created_timestamp());
  }
  if (!from._internal_closing_timestamp().empty()) {
    _this->_internal_set_closing_timestamp(from._internal_closing_timestamp());
  }
  if (!from._internal_outcome_justification().empty()) {
    _this->_internal_set_outcome_justification(from._internal_outcome_justification());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.config_ != nullptr);
    if (_this->_impl_.config_ == nullptr) {
      _this->_impl_.config_ =
          ::google::protobuf::Message::CopyConstruct<::seigr::voting::ProposalConfig>(arena, *from._impl_.config_);
    } else {
      _this->_impl_.config_->MergeFrom(*from._impl_.config_);
    }
  }
  if (from._internal_status() != 0) {
    _this->_impl_.status_ = from._impl_.status_;
  }
  if (from._internal_total_layers() != 0) {
    _this->_impl_.total_layers_ = from._impl_.total_layers_;
  }
  if (from._internal_outcome() != 0) {
    _this->_impl_.outcome_ = from._impl_.outcome_;
  }
  if (from._internal_requires_expert_review() != 0) {
    _this->_impl_.requires_expert_review_ = from._impl_.requires_expert_review_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VotingProposal::CopyFrom(const VotingProposal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.voting.VotingProposal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void VotingProposal::InternalSwap(VotingProposal* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.layers_.InternalSwap(&other->_impl_.layers_);
  _impl_.associated_data_ids_.InternalSwap(&other->_impl_.associated_data_ids_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.proposal_id_, &other->_impl_.proposal_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.created_by_, &other->_impl_.created_by_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.created_timestamp_, &other->_impl_.created_timestamp_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.closing_timestamp_, &other->_impl_.closing_timestamp_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.outcome_justification_, &other->_impl_.outcome_justification_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VotingProposal, _impl_.requires_expert_review_)
      + sizeof(VotingProposal::_impl_.requires_expert_review_)
      - PROTOBUF_FIELD_OFFSET(VotingProposal, _impl_.config_)>(
          reinterpret_cast<char*>(&_impl_.config_),
          reinterpret_cast<char*>(&other->_impl_.config_));
}

::google::protobuf::Metadata VotingProposal::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class VotingLayer::_Internal {
 public:
};

VotingLayer::VotingLayer(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.voting.VotingLayer)
}
inline PROTOBUF_NDEBUG_INLINE VotingLayer::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::voting::VotingLayer& from_msg)
      : votes_{visibility, arena, from.votes_},
        participant_ids_{visibility, arena, from.participant_ids_},
        analysis_notes_(arena, from.analysis_notes_),
        _cached_size_{0} {}

VotingLayer::VotingLayer(
    ::google::protobuf::Arena* arena,
    const VotingLayer& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  VotingLayer* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, layer_number_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, layer_number_),
           offsetof(Impl_, abstain_influence_total_) -
               offsetof(Impl_, layer_number_) +
               sizeof(Impl_::abstain_influence_total_));

  // @@protoc_insertion_point(copy_constructor:seigr.voting.VotingLayer)
}
inline PROTOBUF_NDEBUG_INLINE VotingLayer::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : votes_{visibility, arena},
        participant_ids_{visibility, arena},
        analysis_notes_(arena),
        _cached_size_{0} {}

inline void VotingLayer::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, layer_number_),
           0,
           offsetof(Impl_, abstain_influence_total_) -
               offsetof(Impl_, layer_number_) +
               sizeof(Impl_::abstain_influence_total_));
}
VotingLayer::~VotingLayer() {
  // @@protoc_insertion_point(destructor:seigr.voting.VotingLayer)
  SharedDtor(*this);
}
inline void VotingLayer::SharedDtor(MessageLite& self) {
  VotingLayer& this_ = static_cast<VotingLayer&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.analysis_notes_.Destroy();
  this_._impl_.~Impl_();
}

inline void* VotingLayer::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) VotingLayer(arena);
}
constexpr auto VotingLayer::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(VotingLayer, _impl_.votes_) +
          decltype(VotingLayer::_impl_.votes_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(VotingLayer, _impl_.participant_ids_) +
          decltype(VotingLayer::_impl_.participant_ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(VotingLayer), alignof(VotingLayer), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&VotingLayer::PlacementNew_,
                                 sizeof(VotingLayer),
                                 alignof(VotingLayer));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull VotingLayer::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_VotingLayer_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &VotingLayer::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<VotingLayer>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &VotingLayer::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<VotingLayer>(), &VotingLayer::ByteSizeLong,
            &VotingLayer::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(VotingLayer, _impl_._cached_size_),
        false,
    },
    &VotingLayer::kDescriptorMethods,
    &descriptor_table_mycelith_5fvoting_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* VotingLayer::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 1, 70, 2> VotingLayer::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::voting::VotingLayer>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 layer_number = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VotingLayer, _impl_.layer_number_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(VotingLayer, _impl_.layer_number_)}},
    // .seigr.voting.LayerStatus status = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VotingLayer, _impl_.status_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(VotingLayer, _impl_.status_)}},
    // repeated .seigr.voting.Vote votes = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(VotingLayer, _impl_.votes_)}},
    // double layer_influence_total = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(VotingLayer, _impl_.layer_influence_total_)}},
    // uint32 total_participants = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VotingLayer, _impl_.total_participants_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(VotingLayer, _impl_.total_participants_)}},
    // repeated string participant_ids = 6;
    {::_pbi::TcParser::FastUR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(VotingLayer, _impl_.participant_ids_)}},
    // double yes_influence_total = 7;
    {::_pbi::TcParser::FastF64S1,
     {57, 63, 0, PROTOBUF_FIELD_OFFSET(VotingLayer, _impl_.yes_influence_total_)}},
    // double no_influence_total = 8;
    {::_pbi::TcParser::FastF64S1,
     {65, 63, 0, PROTOBUF_FIELD_OFFSET(VotingLayer, _impl_.no_influence_total_)}},
    // double abstain_influence_total = 9;
    {::_pbi::TcParser::FastF64S1,
     {73, 63, 0, PROTOBUF_FIELD_OFFSET(VotingLayer, _impl_.abstain_influence_total_)}},
    // .seigr.voting.VotingOutcome layer_outcome = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VotingLayer, _impl_.layer_outcome_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(VotingLayer, _impl_.layer_outcome_)}},
    // string analysis_notes = 11;
    {::_pbi::TcParser::FastUS1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(VotingLayer, _impl_.analysis_notes_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 layer_number = 1;
    {PROTOBUF_FIELD_OFFSET(VotingLayer, _impl_.layer_number_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .seigr.voting.LayerStatus status = 2;
    {PROTOBUF_FIELD_OFFSET(VotingLayer, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // repeated .seigr.voting.Vote votes = 3;
    {PROTOBUF_FIELD_OFFSET(VotingLayer, _impl_.votes_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // double layer_influence_total = 4;
    {PROTOBUF_FIELD_OFFSET(VotingLayer, _impl_.layer_influence_total_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // uint32 total_participants = 5;
    {PROTOBUF_FIELD_OFFSET(VotingLayer, _impl_.total_participants_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated string participant_ids = 6;
    {PROTOBUF_FIELD_OFFSET(VotingLayer, _impl_.participant_ids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // double yes_influence_total = 7;
    {PROTOBUF_FIELD_OFFSET(VotingLayer, _impl_.yes_influence_total_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double no_influence_total = 8;
    {PROTOBUF_FIELD_OFFSET(VotingLayer, _impl_.no_influence_total_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double abstain_influence_total = 9;
    {PROTOBUF_FIELD_OFFSET(VotingLayer, _impl_.abstain_influence_total_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // .seigr.voting.VotingOutcome layer_outcome = 10;
    {PROTOBUF_FIELD_OFFSET(VotingLayer, _impl_.layer_outcome_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string analysis_notes = 11;
    {PROTOBUF_FIELD_OFFSET(VotingLayer, _impl_.analysis_notes_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::seigr::voting::Vote>()},
  }}, {{
    "\30\0\0\0\0\0\17\0\0\0\0\16\0\0\0\0"
    "seigr.voting.VotingLayer"
    "participant_ids"
    "analysis_notes"
  }},
};

PROTOBUF_NOINLINE void VotingLayer::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.voting.VotingLayer)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.votes_.Clear();
  _impl_.participant_ids_.Clear();
  _impl_.analysis_notes_.ClearToEmpty();
  ::memset(&_impl_.layer_number_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.abstain_influence_total_) -
      reinterpret_cast<char*>(&_impl_.layer_number_)) + sizeof(_impl_.abstain_influence_total_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* VotingLayer::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const VotingLayer& this_ = static_cast<const VotingLayer&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* VotingLayer::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const VotingLayer& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.voting.VotingLayer)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 layer_number = 1;
          if (this_._internal_layer_number() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_layer_number(), target);
          }

          // .seigr.voting.LayerStatus status = 2;
          if (this_._internal_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_status(), target);
          }

          // repeated .seigr.voting.Vote votes = 3;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_votes_size());
               i < n; i++) {
            const auto& repfield = this_._internal_votes().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // double layer_influence_total = 4;
          if (::absl::bit_cast<::uint64_t>(this_._internal_layer_influence_total()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                4, this_._internal_layer_influence_total(), target);
          }

          // uint32 total_participants = 5;
          if (this_._internal_total_participants() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                5, this_._internal_total_participants(), target);
          }

          // repeated string participant_ids = 6;
          for (int i = 0, n = this_._internal_participant_ids_size(); i < n; ++i) {
            const auto& s = this_._internal_participant_ids().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.voting.VotingLayer.participant_ids");
            target = stream->WriteString(6, s, target);
          }

          // double yes_influence_total = 7;
          if (::absl::bit_cast<::uint64_t>(this_._internal_yes_influence_total()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                7, this_._internal_yes_influence_total(), target);
          }

          // double no_influence_total = 8;
          if (::absl::bit_cast<::uint64_t>(this_._internal_no_influence_total()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                8, this_._internal_no_influence_total(), target);
          }

          // double abstain_influence_total = 9;
          if (::absl::bit_cast<::uint64_t>(this_._internal_abstain_influence_total()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                9, this_._internal_abstain_influence_total(), target);
          }

          // .seigr.voting.VotingOutcome layer_outcome = 10;
          if (this_._internal_layer_outcome() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                10, this_._internal_layer_outcome(), target);
          }

          // string analysis_notes = 11;
          if (!this_._internal_analysis_notes().empty()) {
            const std::string& _s = this_._internal_analysis_notes();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.voting.VotingLayer.analysis_notes");
            target = stream->WriteStringMaybeAliased(11, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.voting.VotingLayer)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t VotingLayer::ByteSizeLong(const MessageLite& base) {
          const VotingLayer& this_ = static_cast<const VotingLayer&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t VotingLayer::ByteSizeLong() const {
          const VotingLayer& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.voting.VotingLayer)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .seigr.voting.Vote votes = 3;
            {
              total_size += 1UL * this_._internal_votes_size();
              for (const auto& msg : this_._internal_votes()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated string participant_ids = 6;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_participant_ids().size());
              for (int i = 0, n = this_._internal_participant_ids().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_participant_ids().Get(i));
              }
            }
          }
           {
            // string analysis_notes = 11;
            if (!this_._internal_analysis_notes().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_analysis_notes());
            }
            // uint32 layer_number = 1;
            if (this_._internal_layer_number() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_layer_number());
            }
            // .seigr.voting.LayerStatus status = 2;
            if (this_._internal_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
            }
            // double layer_influence_total = 4;
            if (::absl::bit_cast<::uint64_t>(this_._internal_layer_influence_total()) != 0) {
              total_size += 9;
            }
            // double yes_influence_total = 7;
            if (::absl::bit_cast<::uint64_t>(this_._internal_yes_influence_total()) != 0) {
              total_size += 9;
            }
            // uint32 total_participants = 5;
            if (this_._internal_total_participants() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_total_participants());
            }
            // .seigr.voting.VotingOutcome layer_outcome = 10;
            if (this_._internal_layer_outcome() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_layer_outcome());
            }
            // double no_influence_total = 8;
            if (::absl::bit_cast<::uint64_t>(this_._internal_no_influence_total()) != 0) {
              total_size += 9;
            }
            // double abstain_influence_total = 9;
            if (::absl::bit_cast<::uint64_t>(this_._internal_abstain_influence_total()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void VotingLayer::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<VotingLayer*>(&to_msg);
  auto& from = static_cast<const VotingLayer&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.voting.VotingLayer)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_votes()->MergeFrom(
      from._internal_votes());
  _this->_internal_mutable_participant_ids()->MergeFrom(from._internal_participant_ids());
  if (!from._internal_analysis_notes().empty()) {
    _this->_internal_set_analysis_notes(from._internal_analysis_notes());
  }
  if (from._internal_layer_number() != 0) {
    _this->_impl_.layer_number_ = from._impl_.layer_number_;
  }
  if (from._internal_status() != 0) {
    _this->_impl_.status_ = from._impl_.status_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_layer_influence_total()) != 0) {
    _this->_impl_.layer_influence_total_ = from._impl_.layer_influence_total_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_yes_influence_total()) != 0) {
    _this->_impl_.yes_influence_total_ = from._impl_.yes_influence_total_;
  }
  if (from._internal_total_participants() != 0) {
    _this->_impl_.total_participants_ = from._impl_.total_participants_;
  }
  if (from._internal_layer_outcome() != 0) {
    _this->_impl_.layer_outcome_ = from._impl_.layer_outcome_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_no_influence_total()) != 0) {
    _this->_impl_.no_influence_total_ = from._impl_.no_influence_total_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_abstain_influence_total()) != 0) {
    _this->_impl_.abstain_influence_total_ = from._impl_.abstain_influence_total_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VotingLayer::CopyFrom(const VotingLayer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.voting.VotingLayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void VotingLayer::InternalSwap(VotingLayer* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.votes_.InternalSwap(&other->_impl_.votes_);
  _impl_.participant_ids_.InternalSwap(&other->_impl_.participant_ids_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.analysis_notes_, &other->_impl_.analysis_notes_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VotingLayer, _impl_.abstain_influence_total_)
      + sizeof(VotingLayer::_impl_.abstain_influence_total_)
      - PROTOBUF_FIELD_OFFSET(VotingLayer, _impl_.layer_number_)>(
          reinterpret_cast<char*>(&_impl_.layer_number_),
          reinterpret_cast<char*>(&other->_impl_.layer_number_));
}

::google::protobuf::Metadata VotingLayer::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              Vote_MetadataEntry_DoNotUse::Vote_MetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              Vote_MetadataEntry_DoNotUse::Vote_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              Vote_MetadataEntry_DoNotUse::Vote_MetadataEntry_DoNotUse() : SuperType() {}
              Vote_MetadataEntry_DoNotUse::Vote_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* Vote_MetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) Vote_MetadataEntry_DoNotUse(arena);
              }
              constexpr auto Vote_MetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Vote_MetadataEntry_DoNotUse),
                                                          alignof(Vote_MetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull Vote_MetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_Vote_MetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &Vote_MetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<Vote_MetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &Vote_MetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &Vote_MetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(Vote_MetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &Vote_MetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_mycelith_5fvoting_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* Vote_MetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 48, 2> Vote_MetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Vote_MetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::voting::Vote_MetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Vote_MetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Vote_MetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(Vote_MetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(Vote_MetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\37\3\5\0\0\0\0\0"
    "seigr.voting.Vote.MetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class Vote::_Internal {
 public:
};

Vote::Vote(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.voting.Vote)
}
inline PROTOBUF_NDEBUG_INLINE Vote::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::voting::Vote& from_msg)
      : metadata_{visibility, arena, from.metadata_},
        voter_id_(arena, from.voter_id_),
        timestamp_(arena, from.timestamp_),
        justification_(arena, from.justification_),
        _cached_size_{0} {}

Vote::Vote(
    ::google::protobuf::Arena* arena,
    const Vote& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Vote* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, influence_weight_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, influence_weight_),
           offsetof(Impl_, consistency_bonus_) -
               offsetof(Impl_, influence_weight_) +
               sizeof(Impl_::consistency_bonus_));

  // @@protoc_insertion_point(copy_constructor:seigr.voting.Vote)
}
inline PROTOBUF_NDEBUG_INLINE Vote::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : metadata_{visibility, arena},
        voter_id_(arena),
        timestamp_(arena),
        justification_(arena),
        _cached_size_{0} {}

inline void Vote::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, influence_weight_),
           0,
           offsetof(Impl_, consistency_bonus_) -
               offsetof(Impl_, influence_weight_) +
               sizeof(Impl_::consistency_bonus_));
}
Vote::~Vote() {
  // @@protoc_insertion_point(destructor:seigr.voting.Vote)
  SharedDtor(*this);
}
inline void Vote::SharedDtor(MessageLite& self) {
  Vote& this_ = static_cast<Vote&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.voter_id_.Destroy();
  this_._impl_.timestamp_.Destroy();
  this_._impl_.justification_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Vote::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Vote(arena);
}
constexpr auto Vote::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Vote, _impl_.metadata_) +
          decltype(Vote::_impl_.metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Vote, _impl_.metadata_) +
          decltype(Vote::_impl_.metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Vote), alignof(Vote), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Vote::PlacementNew_,
                                 sizeof(Vote),
                                 alignof(Vote));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Vote::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Vote_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Vote::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Vote>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Vote::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Vote>(), &Vote::ByteSizeLong,
            &Vote::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Vote, _impl_._cached_size_),
        false,
    },
    &Vote::kDescriptorMethods,
    &descriptor_table_mycelith_5fvoting_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Vote::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 1, 72, 2> Vote::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::voting::Vote>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string voter_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Vote, _impl_.voter_id_)}},
    // .seigr.voting.VoteChoice choice = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Vote, _impl_.choice_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Vote, _impl_.choice_)}},
    // double influence_weight = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(Vote, _impl_.influence_weight_)}},
    // double consistency_bonus = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(Vote, _impl_.consistency_bonus_)}},
    // bool is_consistent = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Vote, _impl_.is_consistent_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(Vote, _impl_.is_consistent_)}},
    // string timestamp = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Vote, _impl_.timestamp_)}},
    // string justification = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(Vote, _impl_.justification_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string voter_id = 1;
    {PROTOBUF_FIELD_OFFSET(Vote, _impl_.voter_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.voting.VoteChoice choice = 2;
    {PROTOBUF_FIELD_OFFSET(Vote, _impl_.choice_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // double influence_weight = 3;
    {PROTOBUF_FIELD_OFFSET(Vote, _impl_.influence_weight_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double consistency_bonus = 4;
    {PROTOBUF_FIELD_OFFSET(Vote, _impl_.consistency_bonus_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // bool is_consistent = 5;
    {PROTOBUF_FIELD_OFFSET(Vote, _impl_.is_consistent_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string timestamp = 6;
    {PROTOBUF_FIELD_OFFSET(Vote, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string justification = 7;
    {PROTOBUF_FIELD_OFFSET(Vote, _impl_.justification_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> metadata = 8;
    {PROTOBUF_FIELD_OFFSET(Vote, _impl_.metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(Vote()._impl_.metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\21\10\0\0\0\0\11\15\10\0\0\0\0\0\0\0"
    "seigr.voting.Vote"
    "voter_id"
    "timestamp"
    "justification"
    "metadata"
  }},
};

PROTOBUF_NOINLINE void Vote::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.voting.Vote)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.metadata_.Clear();
  _impl_.voter_id_.ClearToEmpty();
  _impl_.timestamp_.ClearToEmpty();
  _impl_.justification_.ClearToEmpty();
  ::memset(&_impl_.influence_weight_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.consistency_bonus_) -
      reinterpret_cast<char*>(&_impl_.influence_weight_)) + sizeof(_impl_.consistency_bonus_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Vote::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Vote& this_ = static_cast<const Vote&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Vote::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Vote& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.voting.Vote)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string voter_id = 1;
          if (!this_._internal_voter_id().empty()) {
            const std::string& _s = this_._internal_voter_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.voting.Vote.voter_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // .seigr.voting.VoteChoice choice = 2;
          if (this_._internal_choice() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_choice(), target);
          }

          // double influence_weight = 3;
          if (::absl::bit_cast<::uint64_t>(this_._internal_influence_weight()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                3, this_._internal_influence_weight(), target);
          }

          // double consistency_bonus = 4;
          if (::absl::bit_cast<::uint64_t>(this_._internal_consistency_bonus()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                4, this_._internal_consistency_bonus(), target);
          }

          // bool is_consistent = 5;
          if (this_._internal_is_consistent() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                5, this_._internal_is_consistent(), target);
          }

          // string timestamp = 6;
          if (!this_._internal_timestamp().empty()) {
            const std::string& _s = this_._internal_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.voting.Vote.timestamp");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // string justification = 7;
          if (!this_._internal_justification().empty()) {
            const std::string& _s = this_._internal_justification();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.voting.Vote.justification");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // map<string, string> metadata = 8;
          if (!this_._internal_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    8, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.voting.Vote.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.voting.Vote.metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    8, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.voting.Vote.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.voting.Vote.metadata");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.voting.Vote)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Vote::ByteSizeLong(const MessageLite& base) {
          const Vote& this_ = static_cast<const Vote&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Vote::ByteSizeLong() const {
          const Vote& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.voting.Vote)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> metadata = 8;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_metadata_size());
              for (const auto& entry : this_._internal_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string voter_id = 1;
            if (!this_._internal_voter_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_voter_id());
            }
            // string timestamp = 6;
            if (!this_._internal_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_timestamp());
            }
            // string justification = 7;
            if (!this_._internal_justification().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_justification());
            }
            // double influence_weight = 3;
            if (::absl::bit_cast<::uint64_t>(this_._internal_influence_weight()) != 0) {
              total_size += 9;
            }
            // .seigr.voting.VoteChoice choice = 2;
            if (this_._internal_choice() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_choice());
            }
            // bool is_consistent = 5;
            if (this_._internal_is_consistent() != 0) {
              total_size += 2;
            }
            // double consistency_bonus = 4;
            if (::absl::bit_cast<::uint64_t>(this_._internal_consistency_bonus()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Vote::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Vote*>(&to_msg);
  auto& from = static_cast<const Vote&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.voting.Vote)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.metadata_.MergeFrom(from._impl_.metadata_);
  if (!from._internal_voter_id().empty()) {
    _this->_internal_set_voter_id(from._internal_voter_id());
  }
  if (!from._internal_timestamp().empty()) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (!from._internal_justification().empty()) {
    _this->_internal_set_justification(from._internal_justification());
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_influence_weight()) != 0) {
    _this->_impl_.influence_weight_ = from._impl_.influence_weight_;
  }
  if (from._internal_choice() != 0) {
    _this->_impl_.choice_ = from._impl_.choice_;
  }
  if (from._internal_is_consistent() != 0) {
    _this->_impl_.is_consistent_ = from._impl_.is_consistent_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_consistency_bonus()) != 0) {
    _this->_impl_.consistency_bonus_ = from._impl_.consistency_bonus_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Vote::CopyFrom(const Vote& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.voting.Vote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Vote::InternalSwap(Vote* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.metadata_.InternalSwap(&other->_impl_.metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.voter_id_, &other->_impl_.voter_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.timestamp_, &other->_impl_.timestamp_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.justification_, &other->_impl_.justification_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Vote, _impl_.consistency_bonus_)
      + sizeof(Vote::_impl_.consistency_bonus_)
      - PROTOBUF_FIELD_OFFSET(Vote, _impl_.influence_weight_)>(
          reinterpret_cast<char*>(&_impl_.influence_weight_),
          reinterpret_cast<char*>(&other->_impl_.influence_weight_));
}

::google::protobuf::Metadata Vote::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              VotingAuditLog_MetadataEntry_DoNotUse::VotingAuditLog_MetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              VotingAuditLog_MetadataEntry_DoNotUse::VotingAuditLog_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              VotingAuditLog_MetadataEntry_DoNotUse::VotingAuditLog_MetadataEntry_DoNotUse() : SuperType() {}
              VotingAuditLog_MetadataEntry_DoNotUse::VotingAuditLog_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* VotingAuditLog_MetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) VotingAuditLog_MetadataEntry_DoNotUse(arena);
              }
              constexpr auto VotingAuditLog_MetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(VotingAuditLog_MetadataEntry_DoNotUse),
                                                          alignof(VotingAuditLog_MetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull VotingAuditLog_MetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_VotingAuditLog_MetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &VotingAuditLog_MetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<VotingAuditLog_MetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &VotingAuditLog_MetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &VotingAuditLog_MetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(VotingAuditLog_MetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &VotingAuditLog_MetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_mycelith_5fvoting_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* VotingAuditLog_MetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 58, 2> VotingAuditLog_MetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VotingAuditLog_MetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::voting::VotingAuditLog_MetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(VotingAuditLog_MetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(VotingAuditLog_MetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(VotingAuditLog_MetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(VotingAuditLog_MetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\51\3\5\0\0\0\0\0"
    "seigr.voting.VotingAuditLog.MetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class VotingAuditLog::_Internal {
 public:
};

VotingAuditLog::VotingAuditLog(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.voting.VotingAuditLog)
}
inline PROTOBUF_NDEBUG_INLINE VotingAuditLog::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::voting::VotingAuditLog& from_msg)
      : metadata_{visibility, arena, from.metadata_},
        log_id_(arena, from.log_id_),
        action_(arena, from.action_),
        actor_id_(arena, from.actor_id_),
        timestamp_(arena, from.timestamp_),
        details_(arena, from.details_),
        compliance_tag_(arena, from.compliance_tag_),
        _cached_size_{0} {}

VotingAuditLog::VotingAuditLog(
    ::google::protobuf::Arena* arena,
    const VotingAuditLog& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  VotingAuditLog* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:seigr.voting.VotingAuditLog)
}
inline PROTOBUF_NDEBUG_INLINE VotingAuditLog::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : metadata_{visibility, arena},
        log_id_(arena),
        action_(arena),
        actor_id_(arena),
        timestamp_(arena),
        details_(arena),
        compliance_tag_(arena),
        _cached_size_{0} {}

inline void VotingAuditLog::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
VotingAuditLog::~VotingAuditLog() {
  // @@protoc_insertion_point(destructor:seigr.voting.VotingAuditLog)
  SharedDtor(*this);
}
inline void VotingAuditLog::SharedDtor(MessageLite& self) {
  VotingAuditLog& this_ = static_cast<VotingAuditLog&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.log_id_.Destroy();
  this_._impl_.action_.Destroy();
  this_._impl_.actor_id_.Destroy();
  this_._impl_.timestamp_.Destroy();
  this_._impl_.details_.Destroy();
  this_._impl_.compliance_tag_.Destroy();
  this_._impl_.~Impl_();
}

inline void* VotingAuditLog::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) VotingAuditLog(arena);
}
constexpr auto VotingAuditLog::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(VotingAuditLog, _impl_.metadata_) +
          decltype(VotingAuditLog::_impl_.metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(VotingAuditLog, _impl_.metadata_) +
          decltype(VotingAuditLog::_impl_.metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(VotingAuditLog), alignof(VotingAuditLog), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&VotingAuditLog::PlacementNew_,
                                 sizeof(VotingAuditLog),
                                 alignof(VotingAuditLog));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull VotingAuditLog::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_VotingAuditLog_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &VotingAuditLog::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<VotingAuditLog>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &VotingAuditLog::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<VotingAuditLog>(), &VotingAuditLog::ByteSizeLong,
            &VotingAuditLog::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(VotingAuditLog, _impl_._cached_size_),
        false,
    },
    &VotingAuditLog::kDescriptorMethods,
    &descriptor_table_mycelith_5fvoting_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* VotingAuditLog::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 1, 94, 2> VotingAuditLog::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::voting::VotingAuditLog>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string log_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(VotingAuditLog, _impl_.log_id_)}},
    // string action = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(VotingAuditLog, _impl_.action_)}},
    // string actor_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(VotingAuditLog, _impl_.actor_id_)}},
    // string timestamp = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(VotingAuditLog, _impl_.timestamp_)}},
    // string details = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(VotingAuditLog, _impl_.details_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string compliance_tag = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(VotingAuditLog, _impl_.compliance_tag_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string log_id = 1;
    {PROTOBUF_FIELD_OFFSET(VotingAuditLog, _impl_.log_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string action = 2;
    {PROTOBUF_FIELD_OFFSET(VotingAuditLog, _impl_.action_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string actor_id = 3;
    {PROTOBUF_FIELD_OFFSET(VotingAuditLog, _impl_.actor_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string timestamp = 4;
    {PROTOBUF_FIELD_OFFSET(VotingAuditLog, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string details = 5;
    {PROTOBUF_FIELD_OFFSET(VotingAuditLog, _impl_.details_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> metadata = 6;
    {PROTOBUF_FIELD_OFFSET(VotingAuditLog, _impl_.metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string compliance_tag = 7;
    {PROTOBUF_FIELD_OFFSET(VotingAuditLog, _impl_.compliance_tag_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(VotingAuditLog()._impl_.metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\33\6\6\10\11\7\10\16"
    "seigr.voting.VotingAuditLog"
    "log_id"
    "action"
    "actor_id"
    "timestamp"
    "details"
    "metadata"
    "compliance_tag"
  }},
};

PROTOBUF_NOINLINE void VotingAuditLog::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.voting.VotingAuditLog)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.metadata_.Clear();
  _impl_.log_id_.ClearToEmpty();
  _impl_.action_.ClearToEmpty();
  _impl_.actor_id_.ClearToEmpty();
  _impl_.timestamp_.ClearToEmpty();
  _impl_.details_.ClearToEmpty();
  _impl_.compliance_tag_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* VotingAuditLog::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const VotingAuditLog& this_ = static_cast<const VotingAuditLog&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* VotingAuditLog::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const VotingAuditLog& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.voting.VotingAuditLog)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string log_id = 1;
          if (!this_._internal_log_id().empty()) {
            const std::string& _s = this_._internal_log_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.voting.VotingAuditLog.log_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string action = 2;
          if (!this_._internal_action().empty()) {
            const std::string& _s = this_._internal_action();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.voting.VotingAuditLog.action");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string actor_id = 3;
          if (!this_._internal_actor_id().empty()) {
            const std::string& _s = this_._internal_actor_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.voting.VotingAuditLog.actor_id");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string timestamp = 4;
          if (!this_._internal_timestamp().empty()) {
            const std::string& _s = this_._internal_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.voting.VotingAuditLog.timestamp");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string details = 5;
          if (!this_._internal_details().empty()) {
            const std::string& _s = this_._internal_details();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.voting.VotingAuditLog.details");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // map<string, string> metadata = 6;
          if (!this_._internal_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.voting.VotingAuditLog.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.voting.VotingAuditLog.metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.voting.VotingAuditLog.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.voting.VotingAuditLog.metadata");
              }
            }
          }

          // string compliance_tag = 7;
          if (!this_._internal_compliance_tag().empty()) {
            const std::string& _s = this_._internal_compliance_tag();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.voting.VotingAuditLog.compliance_tag");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.voting.VotingAuditLog)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t VotingAuditLog::ByteSizeLong(const MessageLite& base) {
          const VotingAuditLog& this_ = static_cast<const VotingAuditLog&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t VotingAuditLog::ByteSizeLong() const {
          const VotingAuditLog& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.voting.VotingAuditLog)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> metadata = 6;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_metadata_size());
              for (const auto& entry : this_._internal_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string log_id = 1;
            if (!this_._internal_log_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_log_id());
            }
            // string action = 2;
            if (!this_._internal_action().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_action());
            }
            // string actor_id = 3;
            if (!this_._internal_actor_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_actor_id());
            }
            // string timestamp = 4;
            if (!this_._internal_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_timestamp());
            }
            // string details = 5;
            if (!this_._internal_details().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_details());
            }
            // string compliance_tag = 7;
            if (!this_._internal_compliance_tag().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_compliance_tag());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void VotingAuditLog::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<VotingAuditLog*>(&to_msg);
  auto& from = static_cast<const VotingAuditLog&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.voting.VotingAuditLog)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.metadata_.MergeFrom(from._impl_.metadata_);
  if (!from._internal_log_id().empty()) {
    _this->_internal_set_log_id(from._internal_log_id());
  }
  if (!from._internal_action().empty()) {
    _this->_internal_set_action(from._internal_action());
  }
  if (!from._internal_actor_id().empty()) {
    _this->_internal_set_actor_id(from._internal_actor_id());
  }
  if (!from._internal_timestamp().empty()) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (!from._internal_details().empty()) {
    _this->_internal_set_details(from._internal_details());
  }
  if (!from._internal_compliance_tag().empty()) {
    _this->_internal_set_compliance_tag(from._internal_compliance_tag());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VotingAuditLog::CopyFrom(const VotingAuditLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.voting.VotingAuditLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void VotingAuditLog::InternalSwap(VotingAuditLog* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.metadata_.InternalSwap(&other->_impl_.metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.log_id_, &other->_impl_.log_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.action_, &other->_impl_.action_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.actor_id_, &other->_impl_.actor_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.timestamp_, &other->_impl_.timestamp_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.details_, &other->_impl_.details_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.compliance_tag_, &other->_impl_.compliance_tag_, arena);
}

::google::protobuf::Metadata VotingAuditLog::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubmitProposalRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SubmitProposalRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SubmitProposalRequest, _impl_._has_bits_);
};

SubmitProposalRequest::SubmitProposalRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.voting.SubmitProposalRequest)
}
inline PROTOBUF_NDEBUG_INLINE SubmitProposalRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::voting::SubmitProposalRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        description_(arena, from.description_) {}

SubmitProposalRequest::SubmitProposalRequest(
    ::google::protobuf::Arena* arena,
    const SubmitProposalRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubmitProposalRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.config_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::seigr::voting::ProposalConfig>(
                              arena, *from._impl_.config_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:seigr.voting.SubmitProposalRequest)
}
inline PROTOBUF_NDEBUG_INLINE SubmitProposalRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        description_(arena) {}

inline void SubmitProposalRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.config_ = {};
}
SubmitProposalRequest::~SubmitProposalRequest() {
  // @@protoc_insertion_point(destructor:seigr.voting.SubmitProposalRequest)
  SharedDtor(*this);
}
inline void SubmitProposalRequest::SharedDtor(MessageLite& self) {
  SubmitProposalRequest& this_ = static_cast<SubmitProposalRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.description_.Destroy();
  delete this_._impl_.config_;
  this_._impl_.~Impl_();
}

inline void* SubmitProposalRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubmitProposalRequest(arena);
}
constexpr auto SubmitProposalRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SubmitProposalRequest),
                                            alignof(SubmitProposalRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubmitProposalRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubmitProposalRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubmitProposalRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SubmitProposalRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubmitProposalRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SubmitProposalRequest>(), &SubmitProposalRequest::ByteSizeLong,
            &SubmitProposalRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubmitProposalRequest, _impl_._cached_size_),
        false,
    },
    &SubmitProposalRequest::kDescriptorMethods,
    &descriptor_table_mycelith_5fvoting_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubmitProposalRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 54, 2> SubmitProposalRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SubmitProposalRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::voting::SubmitProposalRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .seigr.voting.ProposalConfig config = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(SubmitProposalRequest, _impl_.config_)}},
    // string description = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SubmitProposalRequest, _impl_.description_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string description = 1;
    {PROTOBUF_FIELD_OFFSET(SubmitProposalRequest, _impl_.description_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.voting.ProposalConfig config = 2;
    {PROTOBUF_FIELD_OFFSET(SubmitProposalRequest, _impl_.config_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::seigr::voting::ProposalConfig>()},
  }}, {{
    "\42\13\0\0\0\0\0\0"
    "seigr.voting.SubmitProposalRequest"
    "description"
  }},
};

PROTOBUF_NOINLINE void SubmitProposalRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.voting.SubmitProposalRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.description_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.config_ != nullptr);
    _impl_.config_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SubmitProposalRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SubmitProposalRequest& this_ = static_cast<const SubmitProposalRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SubmitProposalRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SubmitProposalRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.voting.SubmitProposalRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string description = 1;
          if (!this_._internal_description().empty()) {
            const std::string& _s = this_._internal_description();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.voting.SubmitProposalRequest.description");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .seigr.voting.ProposalConfig config = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.config_, this_._impl_.config_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.voting.SubmitProposalRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SubmitProposalRequest::ByteSizeLong(const MessageLite& base) {
          const SubmitProposalRequest& this_ = static_cast<const SubmitProposalRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SubmitProposalRequest::ByteSizeLong() const {
          const SubmitProposalRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.voting.SubmitProposalRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string description = 1;
            if (!this_._internal_description().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_description());
            }
          }
           {
            // .seigr.voting.ProposalConfig config = 2;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.config_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SubmitProposalRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubmitProposalRequest*>(&to_msg);
  auto& from = static_cast<const SubmitProposalRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.voting.SubmitProposalRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.config_ != nullptr);
    if (_this->_impl_.config_ == nullptr) {
      _this->_impl_.config_ =
          ::google::protobuf::Message::CopyConstruct<::seigr::voting::ProposalConfig>(arena, *from._impl_.config_);
    } else {
      _this->_impl_.config_->MergeFrom(*from._impl_.config_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubmitProposalRequest::CopyFrom(const SubmitProposalRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.voting.SubmitProposalRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubmitProposalRequest::InternalSwap(SubmitProposalRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  swap(_impl_.config_, other->_impl_.config_);
}

::google::protobuf::Metadata SubmitProposalRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubmitProposalResponse::_Internal {
 public:
};

SubmitProposalResponse::SubmitProposalResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.voting.SubmitProposalResponse)
}
inline PROTOBUF_NDEBUG_INLINE SubmitProposalResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::voting::SubmitProposalResponse& from_msg)
      : proposal_id_(arena, from.proposal_id_),
        message_(arena, from.message_),
        _cached_size_{0} {}

SubmitProposalResponse::SubmitProposalResponse(
    ::google::protobuf::Arena* arena,
    const SubmitProposalResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubmitProposalResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:seigr.voting.SubmitProposalResponse)
}
inline PROTOBUF_NDEBUG_INLINE SubmitProposalResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : proposal_id_(arena),
        message_(arena),
        _cached_size_{0} {}

inline void SubmitProposalResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
SubmitProposalResponse::~SubmitProposalResponse() {
  // @@protoc_insertion_point(destructor:seigr.voting.SubmitProposalResponse)
  SharedDtor(*this);
}
inline void SubmitProposalResponse::SharedDtor(MessageLite& self) {
  SubmitProposalResponse& this_ = static_cast<SubmitProposalResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.proposal_id_.Destroy();
  this_._impl_.message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* SubmitProposalResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubmitProposalResponse(arena);
}
constexpr auto SubmitProposalResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SubmitProposalResponse),
                                            alignof(SubmitProposalResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubmitProposalResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubmitProposalResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubmitProposalResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SubmitProposalResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubmitProposalResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SubmitProposalResponse>(), &SubmitProposalResponse::ByteSizeLong,
            &SubmitProposalResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubmitProposalResponse, _impl_._cached_size_),
        false,
    },
    &SubmitProposalResponse::kDescriptorMethods,
    &descriptor_table_mycelith_5fvoting_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubmitProposalResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 62, 2> SubmitProposalResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::voting::SubmitProposalResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string proposal_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SubmitProposalResponse, _impl_.proposal_id_)}},
    // bool success = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SubmitProposalResponse, _impl_.success_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SubmitProposalResponse, _impl_.success_)}},
    // string message = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(SubmitProposalResponse, _impl_.message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string proposal_id = 1;
    {PROTOBUF_FIELD_OFFSET(SubmitProposalResponse, _impl_.proposal_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool success = 2;
    {PROTOBUF_FIELD_OFFSET(SubmitProposalResponse, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string message = 3;
    {PROTOBUF_FIELD_OFFSET(SubmitProposalResponse, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\43\13\0\7\0\0\0\0"
    "seigr.voting.SubmitProposalResponse"
    "proposal_id"
    "message"
  }},
};

PROTOBUF_NOINLINE void SubmitProposalResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.voting.SubmitProposalResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.proposal_id_.ClearToEmpty();
  _impl_.message_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SubmitProposalResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SubmitProposalResponse& this_ = static_cast<const SubmitProposalResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SubmitProposalResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SubmitProposalResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.voting.SubmitProposalResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string proposal_id = 1;
          if (!this_._internal_proposal_id().empty()) {
            const std::string& _s = this_._internal_proposal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.voting.SubmitProposalResponse.proposal_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // bool success = 2;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                2, this_._internal_success(), target);
          }

          // string message = 3;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.voting.SubmitProposalResponse.message");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.voting.SubmitProposalResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SubmitProposalResponse::ByteSizeLong(const MessageLite& base) {
          const SubmitProposalResponse& this_ = static_cast<const SubmitProposalResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SubmitProposalResponse::ByteSizeLong() const {
          const SubmitProposalResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.voting.SubmitProposalResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string proposal_id = 1;
            if (!this_._internal_proposal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_proposal_id());
            }
            // string message = 3;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
            // bool success = 2;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SubmitProposalResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubmitProposalResponse*>(&to_msg);
  auto& from = static_cast<const SubmitProposalResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.voting.SubmitProposalResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_proposal_id().empty()) {
    _this->_internal_set_proposal_id(from._internal_proposal_id());
  }
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubmitProposalResponse::CopyFrom(const SubmitProposalResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.voting.SubmitProposalResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubmitProposalResponse::InternalSwap(SubmitProposalResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.proposal_id_, &other->_impl_.proposal_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata SubmitProposalResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CastVoteRequest::_Internal {
 public:
};

CastVoteRequest::CastVoteRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.voting.CastVoteRequest)
}
inline PROTOBUF_NDEBUG_INLINE CastVoteRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::voting::CastVoteRequest& from_msg)
      : proposal_id_(arena, from.proposal_id_),
        voter_id_(arena, from.voter_id_),
        justification_(arena, from.justification_),
        _cached_size_{0} {}

CastVoteRequest::CastVoteRequest(
    ::google::protobuf::Arena* arena,
    const CastVoteRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CastVoteRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, layer_number_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, layer_number_),
           offsetof(Impl_, choice_) -
               offsetof(Impl_, layer_number_) +
               sizeof(Impl_::choice_));

  // @@protoc_insertion_point(copy_constructor:seigr.voting.CastVoteRequest)
}
inline PROTOBUF_NDEBUG_INLINE CastVoteRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : proposal_id_(arena),
        voter_id_(arena),
        justification_(arena),
        _cached_size_{0} {}

inline void CastVoteRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, layer_number_),
           0,
           offsetof(Impl_, choice_) -
               offsetof(Impl_, layer_number_) +
               sizeof(Impl_::choice_));
}
CastVoteRequest::~CastVoteRequest() {
  // @@protoc_insertion_point(destructor:seigr.voting.CastVoteRequest)
  SharedDtor(*this);
}
inline void CastVoteRequest::SharedDtor(MessageLite& self) {
  CastVoteRequest& this_ = static_cast<CastVoteRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.proposal_id_.Destroy();
  this_._impl_.voter_id_.Destroy();
  this_._impl_.justification_.Destroy();
  this_._impl_.~Impl_();
}

inline void* CastVoteRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CastVoteRequest(arena);
}
constexpr auto CastVoteRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CastVoteRequest),
                                            alignof(CastVoteRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CastVoteRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CastVoteRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CastVoteRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CastVoteRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CastVoteRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CastVoteRequest>(), &CastVoteRequest::ByteSizeLong,
            &CastVoteRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CastVoteRequest, _impl_._cached_size_),
        false,
    },
    &CastVoteRequest::kDescriptorMethods,
    &descriptor_table_mycelith_5fvoting_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CastVoteRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 69, 2> CastVoteRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::voting::CastVoteRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string proposal_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CastVoteRequest, _impl_.proposal_id_)}},
    // uint32 layer_number = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CastVoteRequest, _impl_.layer_number_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(CastVoteRequest, _impl_.layer_number_)}},
    // string voter_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(CastVoteRequest, _impl_.voter_id_)}},
    // .seigr.voting.VoteChoice choice = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CastVoteRequest, _impl_.choice_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(CastVoteRequest, _impl_.choice_)}},
    // string justification = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(CastVoteRequest, _impl_.justification_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string proposal_id = 1;
    {PROTOBUF_FIELD_OFFSET(CastVoteRequest, _impl_.proposal_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 layer_number = 2;
    {PROTOBUF_FIELD_OFFSET(CastVoteRequest, _impl_.layer_number_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string voter_id = 3;
    {PROTOBUF_FIELD_OFFSET(CastVoteRequest, _impl_.voter_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.voting.VoteChoice choice = 4;
    {PROTOBUF_FIELD_OFFSET(CastVoteRequest, _impl_.choice_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string justification = 5;
    {PROTOBUF_FIELD_OFFSET(CastVoteRequest, _impl_.justification_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\34\13\0\10\0\15\0\0"
    "seigr.voting.CastVoteRequest"
    "proposal_id"
    "voter_id"
    "justification"
  }},
};

PROTOBUF_NOINLINE void CastVoteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.voting.CastVoteRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.proposal_id_.ClearToEmpty();
  _impl_.voter_id_.ClearToEmpty();
  _impl_.justification_.ClearToEmpty();
  ::memset(&_impl_.layer_number_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.choice_) -
      reinterpret_cast<char*>(&_impl_.layer_number_)) + sizeof(_impl_.choice_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CastVoteRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CastVoteRequest& this_ = static_cast<const CastVoteRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CastVoteRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CastVoteRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.voting.CastVoteRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string proposal_id = 1;
          if (!this_._internal_proposal_id().empty()) {
            const std::string& _s = this_._internal_proposal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.voting.CastVoteRequest.proposal_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // uint32 layer_number = 2;
          if (this_._internal_layer_number() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_layer_number(), target);
          }

          // string voter_id = 3;
          if (!this_._internal_voter_id().empty()) {
            const std::string& _s = this_._internal_voter_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.voting.CastVoteRequest.voter_id");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // .seigr.voting.VoteChoice choice = 4;
          if (this_._internal_choice() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                4, this_._internal_choice(), target);
          }

          // string justification = 5;
          if (!this_._internal_justification().empty()) {
            const std::string& _s = this_._internal_justification();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.voting.CastVoteRequest.justification");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.voting.CastVoteRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CastVoteRequest::ByteSizeLong(const MessageLite& base) {
          const CastVoteRequest& this_ = static_cast<const CastVoteRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CastVoteRequest::ByteSizeLong() const {
          const CastVoteRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.voting.CastVoteRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string proposal_id = 1;
            if (!this_._internal_proposal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_proposal_id());
            }
            // string voter_id = 3;
            if (!this_._internal_voter_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_voter_id());
            }
            // string justification = 5;
            if (!this_._internal_justification().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_justification());
            }
            // uint32 layer_number = 2;
            if (this_._internal_layer_number() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_layer_number());
            }
            // .seigr.voting.VoteChoice choice = 4;
            if (this_._internal_choice() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_choice());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CastVoteRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CastVoteRequest*>(&to_msg);
  auto& from = static_cast<const CastVoteRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.voting.CastVoteRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_proposal_id().empty()) {
    _this->_internal_set_proposal_id(from._internal_proposal_id());
  }
  if (!from._internal_voter_id().empty()) {
    _this->_internal_set_voter_id(from._internal_voter_id());
  }
  if (!from._internal_justification().empty()) {
    _this->_internal_set_justification(from._internal_justification());
  }
  if (from._internal_layer_number() != 0) {
    _this->_impl_.layer_number_ = from._impl_.layer_number_;
  }
  if (from._internal_choice() != 0) {
    _this->_impl_.choice_ = from._impl_.choice_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CastVoteRequest::CopyFrom(const CastVoteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.voting.CastVoteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CastVoteRequest::InternalSwap(CastVoteRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.proposal_id_, &other->_impl_.proposal_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.voter_id_, &other->_impl_.voter_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.justification_, &other->_impl_.justification_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CastVoteRequest, _impl_.choice_)
      + sizeof(CastVoteRequest::_impl_.choice_)
      - PROTOBUF_FIELD_OFFSET(CastVoteRequest, _impl_.layer_number_)>(
          reinterpret_cast<char*>(&_impl_.layer_number_),
          reinterpret_cast<char*>(&other->_impl_.layer_number_));
}

::google::protobuf::Metadata CastVoteRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CastVoteResponse::_Internal {
 public:
};

CastVoteResponse::CastVoteResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.voting.CastVoteResponse)
}
inline PROTOBUF_NDEBUG_INLINE CastVoteResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::voting::CastVoteResponse& from_msg)
      : message_(arena, from.message_),
        _cached_size_{0} {}

CastVoteResponse::CastVoteResponse(
    ::google::protobuf::Arena* arena,
    const CastVoteResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CastVoteResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, influence_weight_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, influence_weight_),
           offsetof(Impl_, success_) -
               offsetof(Impl_, influence_weight_) +
               sizeof(Impl_::success_));

  // @@protoc_insertion_point(copy_constructor:seigr.voting.CastVoteResponse)
}
inline PROTOBUF_NDEBUG_INLINE CastVoteResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_(arena),
        _cached_size_{0} {}

inline void CastVoteResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, influence_weight_),
           0,
           offsetof(Impl_, success_) -
               offsetof(Impl_, influence_weight_) +
               sizeof(Impl_::success_));
}
CastVoteResponse::~CastVoteResponse() {
  // @@protoc_insertion_point(destructor:seigr.voting.CastVoteResponse)
  SharedDtor(*this);
}
inline void CastVoteResponse::SharedDtor(MessageLite& self) {
  CastVoteResponse& this_ = static_cast<CastVoteResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* CastVoteResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CastVoteResponse(arena);
}
constexpr auto CastVoteResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CastVoteResponse),
                                            alignof(CastVoteResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CastVoteResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CastVoteResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CastVoteResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CastVoteResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CastVoteResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CastVoteResponse>(), &CastVoteResponse::ByteSizeLong,
            &CastVoteResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CastVoteResponse, _impl_._cached_size_),
        false,
    },
    &CastVoteResponse::kDescriptorMethods,
    &descriptor_table_mycelith_5fvoting_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CastVoteResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 45, 2> CastVoteResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::voting::CastVoteResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string message = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(CastVoteResponse, _impl_.message_)}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CastVoteResponse, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CastVoteResponse, _impl_.success_)}},
    // double influence_weight = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(CastVoteResponse, _impl_.influence_weight_)}},
    // double consistency_bonus = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(CastVoteResponse, _impl_.consistency_bonus_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(CastVoteResponse, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // double influence_weight = 2;
    {PROTOBUF_FIELD_OFFSET(CastVoteResponse, _impl_.influence_weight_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double consistency_bonus = 3;
    {PROTOBUF_FIELD_OFFSET(CastVoteResponse, _impl_.consistency_bonus_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // string message = 4;
    {PROTOBUF_FIELD_OFFSET(CastVoteResponse, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\35\0\0\0\7\0\0\0"
    "seigr.voting.CastVoteResponse"
    "message"
  }},
};

PROTOBUF_NOINLINE void CastVoteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.voting.CastVoteResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  ::memset(&_impl_.influence_weight_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.success_) -
      reinterpret_cast<char*>(&_impl_.influence_weight_)) + sizeof(_impl_.success_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CastVoteResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CastVoteResponse& this_ = static_cast<const CastVoteResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CastVoteResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CastVoteResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.voting.CastVoteResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool success = 1;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_success(), target);
          }

          // double influence_weight = 2;
          if (::absl::bit_cast<::uint64_t>(this_._internal_influence_weight()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                2, this_._internal_influence_weight(), target);
          }

          // double consistency_bonus = 3;
          if (::absl::bit_cast<::uint64_t>(this_._internal_consistency_bonus()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                3, this_._internal_consistency_bonus(), target);
          }

          // string message = 4;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.voting.CastVoteResponse.message");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.voting.CastVoteResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CastVoteResponse::ByteSizeLong(const MessageLite& base) {
          const CastVoteResponse& this_ = static_cast<const CastVoteResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CastVoteResponse::ByteSizeLong() const {
          const CastVoteResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.voting.CastVoteResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string message = 4;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
            // double influence_weight = 2;
            if (::absl::bit_cast<::uint64_t>(this_._internal_influence_weight()) != 0) {
              total_size += 9;
            }
            // double consistency_bonus = 3;
            if (::absl::bit_cast<::uint64_t>(this_._internal_consistency_bonus()) != 0) {
              total_size += 9;
            }
            // bool success = 1;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CastVoteResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CastVoteResponse*>(&to_msg);
  auto& from = static_cast<const CastVoteResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.voting.CastVoteResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_influence_weight()) != 0) {
    _this->_impl_.influence_weight_ = from._impl_.influence_weight_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_consistency_bonus()) != 0) {
    _this->_impl_.consistency_bonus_ = from._impl_.consistency_bonus_;
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CastVoteResponse::CopyFrom(const CastVoteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.voting.CastVoteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CastVoteResponse::InternalSwap(CastVoteResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CastVoteResponse, _impl_.success_)
      + sizeof(CastVoteResponse::_impl_.success_)
      - PROTOBUF_FIELD_OFFSET(CastVoteResponse, _impl_.influence_weight_)>(
          reinterpret_cast<char*>(&_impl_.influence_weight_),
          reinterpret_cast<char*>(&other->_impl_.influence_weight_));
}

::google::protobuf::Metadata CastVoteResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetProposalResultRequest::_Internal {
 public:
};

GetProposalResultRequest::GetProposalResultRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.voting.GetProposalResultRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetProposalResultRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::voting::GetProposalResultRequest& from_msg)
      : proposal_id_(arena, from.proposal_id_),
        _cached_size_{0} {}

GetProposalResultRequest::GetProposalResultRequest(
    ::google::protobuf::Arena* arena,
    const GetProposalResultRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetProposalResultRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:seigr.voting.GetProposalResultRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetProposalResultRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : proposal_id_(arena),
        _cached_size_{0} {}

inline void GetProposalResultRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetProposalResultRequest::~GetProposalResultRequest() {
  // @@protoc_insertion_point(destructor:seigr.voting.GetProposalResultRequest)
  SharedDtor(*this);
}
inline void GetProposalResultRequest::SharedDtor(MessageLite& self) {
  GetProposalResultRequest& this_ = static_cast<GetProposalResultRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.proposal_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* GetProposalResultRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetProposalResultRequest(arena);
}
constexpr auto GetProposalResultRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetProposalResultRequest),
                                            alignof(GetProposalResultRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetProposalResultRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetProposalResultRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetProposalResultRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetProposalResultRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetProposalResultRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetProposalResultRequest>(), &GetProposalResultRequest::ByteSizeLong,
            &GetProposalResultRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetProposalResultRequest, _impl_._cached_size_),
        false,
    },
    &GetProposalResultRequest::kDescriptorMethods,
    &descriptor_table_mycelith_5fvoting_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetProposalResultRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 57, 2> GetProposalResultRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::voting::GetProposalResultRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string proposal_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetProposalResultRequest, _impl_.proposal_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string proposal_id = 1;
    {PROTOBUF_FIELD_OFFSET(GetProposalResultRequest, _impl_.proposal_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\45\13\0\0\0\0\0\0"
    "seigr.voting.GetProposalResultRequest"
    "proposal_id"
  }},
};

PROTOBUF_NOINLINE void GetProposalResultRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.voting.GetProposalResultRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.proposal_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetProposalResultRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetProposalResultRequest& this_ = static_cast<const GetProposalResultRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetProposalResultRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetProposalResultRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.voting.GetProposalResultRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string proposal_id = 1;
          if (!this_._internal_proposal_id().empty()) {
            const std::string& _s = this_._internal_proposal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.voting.GetProposalResultRequest.proposal_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.voting.GetProposalResultRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetProposalResultRequest::ByteSizeLong(const MessageLite& base) {
          const GetProposalResultRequest& this_ = static_cast<const GetProposalResultRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetProposalResultRequest::ByteSizeLong() const {
          const GetProposalResultRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.voting.GetProposalResultRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string proposal_id = 1;
            if (!this_._internal_proposal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_proposal_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetProposalResultRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetProposalResultRequest*>(&to_msg);
  auto& from = static_cast<const GetProposalResultRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.voting.GetProposalResultRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_proposal_id().empty()) {
    _this->_internal_set_proposal_id(from._internal_proposal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetProposalResultRequest::CopyFrom(const GetProposalResultRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.voting.GetProposalResultRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetProposalResultRequest::InternalSwap(GetProposalResultRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.proposal_id_, &other->_impl_.proposal_id_, arena);
}

::google::protobuf::Metadata GetProposalResultRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              GetProposalResultResponse_MetadataEntry_DoNotUse::GetProposalResultResponse_MetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              GetProposalResultResponse_MetadataEntry_DoNotUse::GetProposalResultResponse_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              GetProposalResultResponse_MetadataEntry_DoNotUse::GetProposalResultResponse_MetadataEntry_DoNotUse() : SuperType() {}
              GetProposalResultResponse_MetadataEntry_DoNotUse::GetProposalResultResponse_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* GetProposalResultResponse_MetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) GetProposalResultResponse_MetadataEntry_DoNotUse(arena);
              }
              constexpr auto GetProposalResultResponse_MetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetProposalResultResponse_MetadataEntry_DoNotUse),
                                                          alignof(GetProposalResultResponse_MetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull GetProposalResultResponse_MetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_GetProposalResultResponse_MetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &GetProposalResultResponse_MetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<GetProposalResultResponse_MetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &GetProposalResultResponse_MetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &GetProposalResultResponse_MetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(GetProposalResultResponse_MetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &GetProposalResultResponse_MetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_mycelith_5fvoting_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* GetProposalResultResponse_MetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 69, 2> GetProposalResultResponse_MetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetProposalResultResponse_MetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::voting::GetProposalResultResponse_MetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GetProposalResultResponse_MetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetProposalResultResponse_MetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(GetProposalResultResponse_MetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(GetProposalResultResponse_MetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\64\3\5\0\0\0\0\0"
    "seigr.voting.GetProposalResultResponse.MetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class GetProposalResultResponse::_Internal {
 public:
};

GetProposalResultResponse::GetProposalResultResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.voting.GetProposalResultResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetProposalResultResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::voting::GetProposalResultResponse& from_msg)
      : layers_{visibility, arena, from.layers_},
        metadata_{visibility, arena, from.metadata_},
        proposal_id_(arena, from.proposal_id_),
        outcome_justification_(arena, from.outcome_justification_),
        finalized_timestamp_(arena, from.finalized_timestamp_),
        _cached_size_{0} {}

GetProposalResultResponse::GetProposalResultResponse(
    ::google::protobuf::Arena* arena,
    const GetProposalResultResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetProposalResultResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.outcome_ = from._impl_.outcome_;

  // @@protoc_insertion_point(copy_constructor:seigr.voting.GetProposalResultResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetProposalResultResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : layers_{visibility, arena},
        metadata_{visibility, arena},
        proposal_id_(arena),
        outcome_justification_(arena),
        finalized_timestamp_(arena),
        _cached_size_{0} {}

inline void GetProposalResultResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.outcome_ = {};
}
GetProposalResultResponse::~GetProposalResultResponse() {
  // @@protoc_insertion_point(destructor:seigr.voting.GetProposalResultResponse)
  SharedDtor(*this);
}
inline void GetProposalResultResponse::SharedDtor(MessageLite& self) {
  GetProposalResultResponse& this_ = static_cast<GetProposalResultResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.proposal_id_.Destroy();
  this_._impl_.outcome_justification_.Destroy();
  this_._impl_.finalized_timestamp_.Destroy();
  this_._impl_.~Impl_();
}

inline void* GetProposalResultResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetProposalResultResponse(arena);
}
constexpr auto GetProposalResultResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GetProposalResultResponse, _impl_.layers_) +
          decltype(GetProposalResultResponse::_impl_.layers_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GetProposalResultResponse, _impl_.metadata_) +
          decltype(GetProposalResultResponse::_impl_.metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GetProposalResultResponse, _impl_.metadata_) +
          decltype(GetProposalResultResponse::_impl_.metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(GetProposalResultResponse), alignof(GetProposalResultResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GetProposalResultResponse::PlacementNew_,
                                 sizeof(GetProposalResultResponse),
                                 alignof(GetProposalResultResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetProposalResultResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetProposalResultResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetProposalResultResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetProposalResultResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetProposalResultResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetProposalResultResponse>(), &GetProposalResultResponse::ByteSizeLong,
            &GetProposalResultResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetProposalResultResponse, _impl_._cached_size_),
        false,
    },
    &GetProposalResultResponse::kDescriptorMethods,
    &descriptor_table_mycelith_5fvoting_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetProposalResultResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 2, 106, 2> GetProposalResultResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::voting::GetProposalResultResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string proposal_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetProposalResultResponse, _impl_.proposal_id_)}},
    // .seigr.voting.VotingOutcome outcome = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetProposalResultResponse, _impl_.outcome_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GetProposalResultResponse, _impl_.outcome_)}},
    // string outcome_justification = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(GetProposalResultResponse, _impl_.outcome_justification_)}},
    // repeated .seigr.voting.VotingLayer layers = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(GetProposalResultResponse, _impl_.layers_)}},
    // string finalized_timestamp = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(GetProposalResultResponse, _impl_.finalized_timestamp_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string proposal_id = 1;
    {PROTOBUF_FIELD_OFFSET(GetProposalResultResponse, _impl_.proposal_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.voting.VotingOutcome outcome = 2;
    {PROTOBUF_FIELD_OFFSET(GetProposalResultResponse, _impl_.outcome_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string outcome_justification = 3;
    {PROTOBUF_FIELD_OFFSET(GetProposalResultResponse, _impl_.outcome_justification_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .seigr.voting.VotingLayer layers = 4;
    {PROTOBUF_FIELD_OFFSET(GetProposalResultResponse, _impl_.layers_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string finalized_timestamp = 5;
    {PROTOBUF_FIELD_OFFSET(GetProposalResultResponse, _impl_.finalized_timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> metadata = 6;
    {PROTOBUF_FIELD_OFFSET(GetProposalResultResponse, _impl_.metadata_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetTable<::seigr::voting::VotingLayer>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(GetProposalResultResponse()._impl_.metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\46\13\0\25\0\23\10\0"
    "seigr.voting.GetProposalResultResponse"
    "proposal_id"
    "outcome_justification"
    "finalized_timestamp"
    "metadata"
  }},
};

PROTOBUF_NOINLINE void GetProposalResultResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.voting.GetProposalResultResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.layers_.Clear();
  _impl_.metadata_.Clear();
  _impl_.proposal_id_.ClearToEmpty();
  _impl_.outcome_justification_.ClearToEmpty();
  _impl_.finalized_timestamp_.ClearToEmpty();
  _impl_.outcome_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetProposalResultResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetProposalResultResponse& this_ = static_cast<const GetProposalResultResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetProposalResultResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetProposalResultResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.voting.GetProposalResultResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string proposal_id = 1;
          if (!this_._internal_proposal_id().empty()) {
            const std::string& _s = this_._internal_proposal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.voting.GetProposalResultResponse.proposal_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // .seigr.voting.VotingOutcome outcome = 2;
          if (this_._internal_outcome() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_outcome(), target);
          }

          // string outcome_justification = 3;
          if (!this_._internal_outcome_justification().empty()) {
            const std::string& _s = this_._internal_outcome_justification();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.voting.GetProposalResultResponse.outcome_justification");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // repeated .seigr.voting.VotingLayer layers = 4;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_layers_size());
               i < n; i++) {
            const auto& repfield = this_._internal_layers().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // string finalized_timestamp = 5;
          if (!this_._internal_finalized_timestamp().empty()) {
            const std::string& _s = this_._internal_finalized_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.voting.GetProposalResultResponse.finalized_timestamp");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // map<string, string> metadata = 6;
          if (!this_._internal_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.voting.GetProposalResultResponse.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.voting.GetProposalResultResponse.metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.voting.GetProposalResultResponse.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.voting.GetProposalResultResponse.metadata");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.voting.GetProposalResultResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetProposalResultResponse::ByteSizeLong(const MessageLite& base) {
          const GetProposalResultResponse& this_ = static_cast<const GetProposalResultResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetProposalResultResponse::ByteSizeLong() const {
          const GetProposalResultResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.voting.GetProposalResultResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .seigr.voting.VotingLayer layers = 4;
            {
              total_size += 1UL * this_._internal_layers_size();
              for (const auto& msg : this_._internal_layers()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // map<string, string> metadata = 6;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_metadata_size());
              for (const auto& entry : this_._internal_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string proposal_id = 1;
            if (!this_._internal_proposal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_proposal_id());
            }
            // string outcome_justification = 3;
            if (!this_._internal_outcome_justification().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_outcome_justification());
            }
            // string finalized_timestamp = 5;
            if (!this_._internal_finalized_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_finalized_timestamp());
            }
            // .seigr.voting.VotingOutcome outcome = 2;
            if (this_._internal_outcome() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_outcome());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetProposalResultResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetProposalResultResponse*>(&to_msg);
  auto& from = static_cast<const GetProposalResultResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.voting.GetProposalResultResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_layers()->MergeFrom(
      from._internal_layers());
  _this->_impl_.metadata_.MergeFrom(from._impl_.metadata_);
  if (!from._internal_proposal_id().empty()) {
    _this->_internal_set_proposal_id(from._internal_proposal_id());
  }
  if (!from._internal_outcome_justification().empty()) {
    _this->_internal_set_outcome_justification(from._internal_outcome_justification());
  }
  if (!from._internal_finalized_timestamp().empty()) {
    _this->_internal_set_finalized_timestamp(from._internal_finalized_timestamp());
  }
  if (from._internal_outcome() != 0) {
    _this->_impl_.outcome_ = from._impl_.outcome_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetProposalResultResponse::CopyFrom(const GetProposalResultResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.voting.GetProposalResultResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetProposalResultResponse::InternalSwap(GetProposalResultResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.layers_.InternalSwap(&other->_impl_.layers_);
  _impl_.metadata_.InternalSwap(&other->_impl_.metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.proposal_id_, &other->_impl_.proposal_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.outcome_justification_, &other->_impl_.outcome_justification_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.finalized_timestamp_, &other->_impl_.finalized_timestamp_, arena);
  swap(_impl_.outcome_, other->_impl_.outcome_);
}

::google::protobuf::Metadata GetProposalResultResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetProposalDetailsRequest::_Internal {
 public:
};

GetProposalDetailsRequest::GetProposalDetailsRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.voting.GetProposalDetailsRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetProposalDetailsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::voting::GetProposalDetailsRequest& from_msg)
      : proposal_id_(arena, from.proposal_id_),
        _cached_size_{0} {}

GetProposalDetailsRequest::GetProposalDetailsRequest(
    ::google::protobuf::Arena* arena,
    const GetProposalDetailsRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetProposalDetailsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:seigr.voting.GetProposalDetailsRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetProposalDetailsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : proposal_id_(arena),
        _cached_size_{0} {}

inline void GetProposalDetailsRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetProposalDetailsRequest::~GetProposalDetailsRequest() {
  // @@protoc_insertion_point(destructor:seigr.voting.GetProposalDetailsRequest)
  SharedDtor(*this);
}
inline void GetProposalDetailsRequest::SharedDtor(MessageLite& self) {
  GetProposalDetailsRequest& this_ = static_cast<GetProposalDetailsRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.proposal_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* GetProposalDetailsRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetProposalDetailsRequest(arena);
}
constexpr auto GetProposalDetailsRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetProposalDetailsRequest),
                                            alignof(GetProposalDetailsRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetProposalDetailsRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetProposalDetailsRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetProposalDetailsRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetProposalDetailsRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetProposalDetailsRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetProposalDetailsRequest>(), &GetProposalDetailsRequest::ByteSizeLong,
            &GetProposalDetailsRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetProposalDetailsRequest, _impl_._cached_size_),
        false,
    },
    &GetProposalDetailsRequest::kDescriptorMethods,
    &descriptor_table_mycelith_5fvoting_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetProposalDetailsRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 58, 2> GetProposalDetailsRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::voting::GetProposalDetailsRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string proposal_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetProposalDetailsRequest, _impl_.proposal_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string proposal_id = 1;
    {PROTOBUF_FIELD_OFFSET(GetProposalDetailsRequest, _impl_.proposal_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\46\13\0\0\0\0\0\0"
    "seigr.voting.GetProposalDetailsRequest"
    "proposal_id"
  }},
};

PROTOBUF_NOINLINE void GetProposalDetailsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.voting.GetProposalDetailsRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.proposal_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetProposalDetailsRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetProposalDetailsRequest& this_ = static_cast<const GetProposalDetailsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetProposalDetailsRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetProposalDetailsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.voting.GetProposalDetailsRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string proposal_id = 1;
          if (!this_._internal_proposal_id().empty()) {
            const std::string& _s = this_._internal_proposal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.voting.GetProposalDetailsRequest.proposal_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.voting.GetProposalDetailsRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetProposalDetailsRequest::ByteSizeLong(const MessageLite& base) {
          const GetProposalDetailsRequest& this_ = static_cast<const GetProposalDetailsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetProposalDetailsRequest::ByteSizeLong() const {
          const GetProposalDetailsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.voting.GetProposalDetailsRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string proposal_id = 1;
            if (!this_._internal_proposal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_proposal_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetProposalDetailsRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetProposalDetailsRequest*>(&to_msg);
  auto& from = static_cast<const GetProposalDetailsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.voting.GetProposalDetailsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_proposal_id().empty()) {
    _this->_internal_set_proposal_id(from._internal_proposal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetProposalDetailsRequest::CopyFrom(const GetProposalDetailsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.voting.GetProposalDetailsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetProposalDetailsRequest::InternalSwap(GetProposalDetailsRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.proposal_id_, &other->_impl_.proposal_id_, arena);
}

::google::protobuf::Metadata GetProposalDetailsRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              GetProposalDetailsResponse_MetadataEntry_DoNotUse::GetProposalDetailsResponse_MetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              GetProposalDetailsResponse_MetadataEntry_DoNotUse::GetProposalDetailsResponse_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              GetProposalDetailsResponse_MetadataEntry_DoNotUse::GetProposalDetailsResponse_MetadataEntry_DoNotUse() : SuperType() {}
              GetProposalDetailsResponse_MetadataEntry_DoNotUse::GetProposalDetailsResponse_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* GetProposalDetailsResponse_MetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) GetProposalDetailsResponse_MetadataEntry_DoNotUse(arena);
              }
              constexpr auto GetProposalDetailsResponse_MetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetProposalDetailsResponse_MetadataEntry_DoNotUse),
                                                          alignof(GetProposalDetailsResponse_MetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull GetProposalDetailsResponse_MetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_GetProposalDetailsResponse_MetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &GetProposalDetailsResponse_MetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<GetProposalDetailsResponse_MetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &GetProposalDetailsResponse_MetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &GetProposalDetailsResponse_MetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(GetProposalDetailsResponse_MetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &GetProposalDetailsResponse_MetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_mycelith_5fvoting_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* GetProposalDetailsResponse_MetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 70, 2> GetProposalDetailsResponse_MetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetProposalDetailsResponse_MetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::voting::GetProposalDetailsResponse_MetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GetProposalDetailsResponse_MetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetProposalDetailsResponse_MetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(GetProposalDetailsResponse_MetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(GetProposalDetailsResponse_MetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\65\3\5\0\0\0\0\0"
    "seigr.voting.GetProposalDetailsResponse.MetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class GetProposalDetailsResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GetProposalDetailsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetProposalDetailsResponse, _impl_._has_bits_);
};

GetProposalDetailsResponse::GetProposalDetailsResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.voting.GetProposalDetailsResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetProposalDetailsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::voting::GetProposalDetailsResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        audit_logs_{visibility, arena, from.audit_logs_},
        metadata_{visibility, arena, from.metadata_},
        message_(arena, from.message_) {}

GetProposalDetailsResponse::GetProposalDetailsResponse(
    ::google::protobuf::Arena* arena,
    const GetProposalDetailsResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetProposalDetailsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.proposal_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::seigr::voting::VotingProposal>(
                              arena, *from._impl_.proposal_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:seigr.voting.GetProposalDetailsResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetProposalDetailsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        audit_logs_{visibility, arena},
        metadata_{visibility, arena},
        message_(arena) {}

inline void GetProposalDetailsResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.proposal_ = {};
}
GetProposalDetailsResponse::~GetProposalDetailsResponse() {
  // @@protoc_insertion_point(destructor:seigr.voting.GetProposalDetailsResponse)
  SharedDtor(*this);
}
inline void GetProposalDetailsResponse::SharedDtor(MessageLite& self) {
  GetProposalDetailsResponse& this_ = static_cast<GetProposalDetailsResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  delete this_._impl_.proposal_;
  this_._impl_.~Impl_();
}

inline void* GetProposalDetailsResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetProposalDetailsResponse(arena);
}
constexpr auto GetProposalDetailsResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GetProposalDetailsResponse, _impl_.audit_logs_) +
          decltype(GetProposalDetailsResponse::_impl_.audit_logs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GetProposalDetailsResponse, _impl_.metadata_) +
          decltype(GetProposalDetailsResponse::_impl_.metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GetProposalDetailsResponse, _impl_.metadata_) +
          decltype(GetProposalDetailsResponse::_impl_.metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(GetProposalDetailsResponse), alignof(GetProposalDetailsResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GetProposalDetailsResponse::PlacementNew_,
                                 sizeof(GetProposalDetailsResponse),
                                 alignof(GetProposalDetailsResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetProposalDetailsResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetProposalDetailsResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetProposalDetailsResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetProposalDetailsResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetProposalDetailsResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetProposalDetailsResponse>(), &GetProposalDetailsResponse::ByteSizeLong,
            &GetProposalDetailsResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetProposalDetailsResponse, _impl_._cached_size_),
        false,
    },
    &GetProposalDetailsResponse::kDescriptorMethods,
    &descriptor_table_mycelith_5fvoting_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetProposalDetailsResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 3, 63, 2> GetProposalDetailsResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetProposalDetailsResponse, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::voting::GetProposalDetailsResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .seigr.voting.VotingProposal proposal = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetProposalDetailsResponse, _impl_.proposal_)}},
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GetProposalDetailsResponse, _impl_.message_)}},
    // repeated .seigr.voting.VotingAuditLog audit_logs = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(GetProposalDetailsResponse, _impl_.audit_logs_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .seigr.voting.VotingProposal proposal = 1;
    {PROTOBUF_FIELD_OFFSET(GetProposalDetailsResponse, _impl_.proposal_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(GetProposalDetailsResponse, _impl_.message_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .seigr.voting.VotingAuditLog audit_logs = 3;
    {PROTOBUF_FIELD_OFFSET(GetProposalDetailsResponse, _impl_.audit_logs_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<string, string> metadata = 4;
    {PROTOBUF_FIELD_OFFSET(GetProposalDetailsResponse, _impl_.metadata_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetTable<::seigr::voting::VotingProposal>()},
    {::_pbi::TcParser::GetTable<::seigr::voting::VotingAuditLog>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(GetProposalDetailsResponse()._impl_.metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\47\0\7\0\10\0\0\0"
    "seigr.voting.GetProposalDetailsResponse"
    "message"
    "metadata"
  }},
};

PROTOBUF_NOINLINE void GetProposalDetailsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.voting.GetProposalDetailsResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.audit_logs_.Clear();
  _impl_.metadata_.Clear();
  _impl_.message_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.proposal_ != nullptr);
    _impl_.proposal_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetProposalDetailsResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetProposalDetailsResponse& this_ = static_cast<const GetProposalDetailsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetProposalDetailsResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetProposalDetailsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.voting.GetProposalDetailsResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .seigr.voting.VotingProposal proposal = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.proposal_, this_._impl_.proposal_->GetCachedSize(), target,
                stream);
          }

          // string message = 2;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.voting.GetProposalDetailsResponse.message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // repeated .seigr.voting.VotingAuditLog audit_logs = 3;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_audit_logs_size());
               i < n; i++) {
            const auto& repfield = this_._internal_audit_logs().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // map<string, string> metadata = 4;
          if (!this_._internal_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    4, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.voting.GetProposalDetailsResponse.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.voting.GetProposalDetailsResponse.metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    4, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.voting.GetProposalDetailsResponse.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.voting.GetProposalDetailsResponse.metadata");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.voting.GetProposalDetailsResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetProposalDetailsResponse::ByteSizeLong(const MessageLite& base) {
          const GetProposalDetailsResponse& this_ = static_cast<const GetProposalDetailsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetProposalDetailsResponse::ByteSizeLong() const {
          const GetProposalDetailsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.voting.GetProposalDetailsResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .seigr.voting.VotingAuditLog audit_logs = 3;
            {
              total_size += 1UL * this_._internal_audit_logs_size();
              for (const auto& msg : this_._internal_audit_logs()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // map<string, string> metadata = 4;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_metadata_size());
              for (const auto& entry : this_._internal_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string message = 2;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
          }
           {
            // .seigr.voting.VotingProposal proposal = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.proposal_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetProposalDetailsResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetProposalDetailsResponse*>(&to_msg);
  auto& from = static_cast<const GetProposalDetailsResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.voting.GetProposalDetailsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_audit_logs()->MergeFrom(
      from._internal_audit_logs());
  _this->_impl_.metadata_.MergeFrom(from._impl_.metadata_);
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.proposal_ != nullptr);
    if (_this->_impl_.proposal_ == nullptr) {
      _this->_impl_.proposal_ =
          ::google::protobuf::Message::CopyConstruct<::seigr::voting::VotingProposal>(arena, *from._impl_.proposal_);
    } else {
      _this->_impl_.proposal_->MergeFrom(*from._impl_.proposal_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetProposalDetailsResponse::CopyFrom(const GetProposalDetailsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.voting.GetProposalDetailsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetProposalDetailsResponse::InternalSwap(GetProposalDetailsResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.audit_logs_.InternalSwap(&other->_impl_.audit_logs_);
  _impl_.metadata_.InternalSwap(&other->_impl_.metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  swap(_impl_.proposal_, other->_impl_.proposal_);
}

::google::protobuf::Metadata GetProposalDetailsResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace voting
}  // namespace seigr
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_mycelith_5fvoting_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
