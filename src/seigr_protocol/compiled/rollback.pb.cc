// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: rollback.proto
// Protobuf C++ Version: 5.29.2

#include "rollback.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace seigr {
namespace rollback {
              template <typename>
PROTOBUF_CONSTEXPR RollbackValidationResult_ValidationMetadataEntry_DoNotUse::RollbackValidationResult_ValidationMetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : RollbackValidationResult_ValidationMetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : RollbackValidationResult_ValidationMetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct RollbackValidationResult_ValidationMetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RollbackValidationResult_ValidationMetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RollbackValidationResult_ValidationMetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    RollbackValidationResult_ValidationMetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RollbackValidationResult_ValidationMetadataEntry_DoNotUseDefaultTypeInternal _RollbackValidationResult_ValidationMetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR RollbackRequest_ParametersEntry_DoNotUse::RollbackRequest_ParametersEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : RollbackRequest_ParametersEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : RollbackRequest_ParametersEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct RollbackRequest_ParametersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RollbackRequest_ParametersEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RollbackRequest_ParametersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    RollbackRequest_ParametersEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RollbackRequest_ParametersEntry_DoNotUseDefaultTypeInternal _RollbackRequest_ParametersEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR RollbackProgress_ProgressMetadataEntry_DoNotUse::RollbackProgress_ProgressMetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : RollbackProgress_ProgressMetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : RollbackProgress_ProgressMetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct RollbackProgress_ProgressMetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RollbackProgress_ProgressMetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RollbackProgress_ProgressMetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    RollbackProgress_ProgressMetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RollbackProgress_ProgressMetadataEntry_DoNotUseDefaultTypeInternal _RollbackProgress_ProgressMetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR RollbackLog_MetadataEntry_DoNotUse::RollbackLog_MetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : RollbackLog_MetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : RollbackLog_MetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct RollbackLog_MetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RollbackLog_MetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RollbackLog_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    RollbackLog_MetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RollbackLog_MetadataEntry_DoNotUseDefaultTypeInternal _RollbackLog_MetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR RollbackHistory_MetadataEntry_DoNotUse::RollbackHistory_MetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : RollbackHistory_MetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : RollbackHistory_MetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct RollbackHistory_MetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RollbackHistory_MetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RollbackHistory_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    RollbackHistory_MetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RollbackHistory_MetadataEntry_DoNotUseDefaultTypeInternal _RollbackHistory_MetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR RollbackConflictResolution_ResolutionMetadataEntry_DoNotUse::RollbackConflictResolution_ResolutionMetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : RollbackConflictResolution_ResolutionMetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : RollbackConflictResolution_ResolutionMetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct RollbackConflictResolution_ResolutionMetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RollbackConflictResolution_ResolutionMetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RollbackConflictResolution_ResolutionMetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    RollbackConflictResolution_ResolutionMetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RollbackConflictResolution_ResolutionMetadataEntry_DoNotUseDefaultTypeInternal _RollbackConflictResolution_ResolutionMetadataEntry_DoNotUse_default_instance_;

inline constexpr RollbackValidationResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : validation_metadata_{},
        invalid_reasons_{},
        dependencies_checked_{},
        validation_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        segment_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        validation_message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        validated_at_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        recommended_action_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        is_valid_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RollbackValidationResult::RollbackValidationResult(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RollbackValidationResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RollbackValidationResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RollbackValidationResultDefaultTypeInternal() {}
  union {
    RollbackValidationResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RollbackValidationResultDefaultTypeInternal _RollbackValidationResult_default_instance_;

inline constexpr RollbackRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : parameters_{},
        request_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        segment_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        target_timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        requested_by_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        requested_at_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        dependent_segment_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        trigger_{static_cast< ::seigr::rollback::RollbackTrigger >(0)},
        max_retry_attempts_{0},
        validate_before_execution_{false},
        requires_approval_{false},
        eco_friendly_mode_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RollbackRequest::RollbackRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RollbackRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RollbackRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RollbackRequestDefaultTypeInternal() {}
  union {
    RollbackRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RollbackRequestDefaultTypeInternal _RollbackRequest_default_instance_;

inline constexpr RollbackProgress::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : progress_metadata_{},
        rollback_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        segment_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        last_update_timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        responsible_hyphen_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        current_status_{static_cast< ::seigr::rollback::RollbackStatus >(0)},
        progress_percentage_{0},
        remaining_estimated_time_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RollbackProgress::RollbackProgress(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RollbackProgressDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RollbackProgressDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RollbackProgressDefaultTypeInternal() {}
  union {
    RollbackProgress _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RollbackProgressDefaultTypeInternal _RollbackProgress_default_instance_;

inline constexpr RollbackLog::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : metadata_{},
        log_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        segment_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        rollback_timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        attempted_at_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        executed_at_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        user_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        details_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        conflict_resolution_status_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        event_trigger_{static_cast< ::seigr::rollback::RollbackTrigger >(0)},
        status_{static_cast< ::seigr::rollback::RollbackStatus >(0)},
        retry_attempt_{0},
        eco_friendly_execution_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RollbackLog::RollbackLog(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RollbackLogDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RollbackLogDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RollbackLogDefaultTypeInternal() {}
  union {
    RollbackLog _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RollbackLogDefaultTypeInternal _RollbackLog_default_instance_;

inline constexpr RollbackConflictResolution::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : conflicting_changes_{},
        resolution_metadata_{},
        conflict_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        segment_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        resolution_status_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        resolved_by_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        resolution_timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RollbackConflictResolution::RollbackConflictResolution(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RollbackConflictResolutionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RollbackConflictResolutionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RollbackConflictResolutionDefaultTypeInternal() {}
  union {
    RollbackConflictResolution _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RollbackConflictResolutionDefaultTypeInternal _RollbackConflictResolution_default_instance_;

inline constexpr RollbackHistory::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : rollback_logs_{},
        metadata_{},
        segment_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        last_rollback_at_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        recovery_plan_reference_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        total_rollbacks_{0},
        successful_rollbacks_{0},
        failed_rollbacks_{0},
        has_unresolved_conflicts_{false},
        eco_friendly_rollbacks_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RollbackHistory::RollbackHistory(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RollbackHistoryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RollbackHistoryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RollbackHistoryDefaultTypeInternal() {}
  union {
    RollbackHistory _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RollbackHistoryDefaultTypeInternal _RollbackHistory_default_instance_;
}  // namespace rollback
}  // namespace seigr
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_rollback_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_rollback_2eproto = nullptr;
const ::uint32_t
    TableStruct_rollback_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackLog_MetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackLog_MetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackLog_MetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackLog_MetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackLog, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackLog, _impl_.log_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackLog, _impl_.segment_hash_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackLog, _impl_.rollback_timestamp_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackLog, _impl_.attempted_at_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackLog, _impl_.executed_at_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackLog, _impl_.user_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackLog, _impl_.event_trigger_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackLog, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackLog, _impl_.details_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackLog, _impl_.retry_attempt_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackLog, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackLog, _impl_.conflict_resolution_status_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackLog, _impl_.eco_friendly_execution_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackRequest_ParametersEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackRequest_ParametersEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackRequest_ParametersEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackRequest_ParametersEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackRequest, _impl_.request_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackRequest, _impl_.segment_hash_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackRequest, _impl_.target_timestamp_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackRequest, _impl_.trigger_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackRequest, _impl_.requested_by_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackRequest, _impl_.requested_at_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackRequest, _impl_.parameters_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackRequest, _impl_.validate_before_execution_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackRequest, _impl_.max_retry_attempts_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackRequest, _impl_.requires_approval_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackRequest, _impl_.dependent_segment_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackRequest, _impl_.eco_friendly_mode_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackValidationResult_ValidationMetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackValidationResult_ValidationMetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackValidationResult_ValidationMetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackValidationResult_ValidationMetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackValidationResult, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackValidationResult, _impl_.validation_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackValidationResult, _impl_.segment_hash_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackValidationResult, _impl_.is_valid_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackValidationResult, _impl_.validation_message_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackValidationResult, _impl_.validated_at_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackValidationResult, _impl_.validation_metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackValidationResult, _impl_.invalid_reasons_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackValidationResult, _impl_.recommended_action_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackValidationResult, _impl_.dependencies_checked_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackHistory_MetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackHistory_MetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackHistory_MetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackHistory_MetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackHistory, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackHistory, _impl_.segment_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackHistory, _impl_.rollback_logs_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackHistory, _impl_.last_rollback_at_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackHistory, _impl_.total_rollbacks_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackHistory, _impl_.successful_rollbacks_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackHistory, _impl_.failed_rollbacks_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackHistory, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackHistory, _impl_.recovery_plan_reference_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackHistory, _impl_.has_unresolved_conflicts_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackHistory, _impl_.eco_friendly_rollbacks_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackProgress_ProgressMetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackProgress_ProgressMetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackProgress_ProgressMetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackProgress_ProgressMetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackProgress, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackProgress, _impl_.rollback_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackProgress, _impl_.current_status_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackProgress, _impl_.progress_percentage_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackProgress, _impl_.segment_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackProgress, _impl_.last_update_timestamp_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackProgress, _impl_.responsible_hyphen_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackProgress, _impl_.remaining_estimated_time_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackProgress, _impl_.progress_metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackConflictResolution_ResolutionMetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackConflictResolution_ResolutionMetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackConflictResolution_ResolutionMetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackConflictResolution_ResolutionMetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackConflictResolution, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackConflictResolution, _impl_.conflict_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackConflictResolution, _impl_.segment_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackConflictResolution, _impl_.conflicting_changes_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackConflictResolution, _impl_.resolution_status_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackConflictResolution, _impl_.resolved_by_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackConflictResolution, _impl_.resolution_timestamp_),
        PROTOBUF_FIELD_OFFSET(::seigr::rollback::RollbackConflictResolution, _impl_.resolution_metadata_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::seigr::rollback::RollbackLog_MetadataEntry_DoNotUse)},
        {12, -1, -1, sizeof(::seigr::rollback::RollbackLog)},
        {33, 43, -1, sizeof(::seigr::rollback::RollbackRequest_ParametersEntry_DoNotUse)},
        {45, -1, -1, sizeof(::seigr::rollback::RollbackRequest)},
        {65, 75, -1, sizeof(::seigr::rollback::RollbackValidationResult_ValidationMetadataEntry_DoNotUse)},
        {77, -1, -1, sizeof(::seigr::rollback::RollbackValidationResult)},
        {94, 104, -1, sizeof(::seigr::rollback::RollbackHistory_MetadataEntry_DoNotUse)},
        {106, -1, -1, sizeof(::seigr::rollback::RollbackHistory)},
        {124, 134, -1, sizeof(::seigr::rollback::RollbackProgress_ProgressMetadataEntry_DoNotUse)},
        {136, -1, -1, sizeof(::seigr::rollback::RollbackProgress)},
        {152, 162, -1, sizeof(::seigr::rollback::RollbackConflictResolution_ResolutionMetadataEntry_DoNotUse)},
        {164, -1, -1, sizeof(::seigr::rollback::RollbackConflictResolution)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::seigr::rollback::_RollbackLog_MetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::rollback::_RollbackLog_default_instance_._instance,
    &::seigr::rollback::_RollbackRequest_ParametersEntry_DoNotUse_default_instance_._instance,
    &::seigr::rollback::_RollbackRequest_default_instance_._instance,
    &::seigr::rollback::_RollbackValidationResult_ValidationMetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::rollback::_RollbackValidationResult_default_instance_._instance,
    &::seigr::rollback::_RollbackHistory_MetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::rollback::_RollbackHistory_default_instance_._instance,
    &::seigr::rollback::_RollbackProgress_ProgressMetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::rollback::_RollbackProgress_default_instance_._instance,
    &::seigr::rollback::_RollbackConflictResolution_ResolutionMetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::rollback::_RollbackConflictResolution_default_instance_._instance,
};
const char descriptor_table_protodef_rollback_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\016rollback.proto\022\016seigr.rollback\"\315\003\n\013Rol"
    "lbackLog\022\016\n\006log_id\030\001 \001(\t\022\024\n\014segment_hash"
    "\030\002 \001(\t\022\032\n\022rollback_timestamp\030\003 \001(\t\022\024\n\014at"
    "tempted_at\030\004 \001(\t\022\023\n\013executed_at\030\005 \001(\t\022\017\n"
    "\007user_id\030\006 \001(\t\0226\n\revent_trigger\030\007 \001(\0162\037."
    "seigr.rollback.RollbackTrigger\022.\n\006status"
    "\030\010 \001(\0162\036.seigr.rollback.RollbackStatus\022\017"
    "\n\007details\030\t \001(\t\022\025\n\rretry_attempt\030\n \001(\005\022;"
    "\n\010metadata\030\013 \003(\0132).seigr.rollback.Rollba"
    "ckLog.MetadataEntry\022\"\n\032conflict_resoluti"
    "on_status\030\014 \001(\t\022\036\n\026eco_friendly_executio"
    "n\030\r \001(\010\032/\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n"
    "\005value\030\002 \001(\t:\0028\001\"\276\003\n\017RollbackRequest\022\022\n\n"
    "request_id\030\001 \001(\t\022\024\n\014segment_hash\030\002 \001(\t\022\030"
    "\n\020target_timestamp\030\003 \001(\t\0220\n\007trigger\030\004 \001("
    "\0162\037.seigr.rollback.RollbackTrigger\022\024\n\014re"
    "quested_by\030\005 \001(\t\022\024\n\014requested_at\030\006 \001(\t\022C"
    "\n\nparameters\030\007 \003(\0132/.seigr.rollback.Roll"
    "backRequest.ParametersEntry\022!\n\031validate_"
    "before_execution\030\010 \001(\010\022\032\n\022max_retry_atte"
    "mpts\030\t \001(\005\022\031\n\021requires_approval\030\n \001(\010\022\034\n"
    "\024dependent_segment_id\030\013 \001(\t\022\031\n\021eco_frien"
    "dly_mode\030\014 \001(\010\0321\n\017ParametersEntry\022\013\n\003key"
    "\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\370\002\n\030RollbackVa"
    "lidationResult\022\025\n\rvalidation_id\030\001 \001(\t\022\024\n"
    "\014segment_hash\030\002 \001(\t\022\020\n\010is_valid\030\003 \001(\010\022\032\n"
    "\022validation_message\030\004 \001(\t\022\024\n\014validated_a"
    "t\030\005 \001(\t\022]\n\023validation_metadata\030\006 \003(\0132@.s"
    "eigr.rollback.RollbackValidationResult.V"
    "alidationMetadataEntry\022\027\n\017invalid_reason"
    "s\030\007 \003(\t\022\032\n\022recommended_action\030\010 \001(\t\022\034\n\024d"
    "ependencies_checked\030\t \003(\t\0329\n\027ValidationM"
    "etadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t"
    ":\0028\001\"\231\003\n\017RollbackHistory\022\022\n\nsegment_id\030\001"
    " \001(\t\0222\n\rrollback_logs\030\002 \003(\0132\033.seigr.roll"
    "back.RollbackLog\022\030\n\020last_rollback_at\030\003 \001"
    "(\t\022\027\n\017total_rollbacks\030\004 \001(\005\022\034\n\024successfu"
    "l_rollbacks\030\005 \001(\005\022\030\n\020failed_rollbacks\030\006 "
    "\001(\005\022\?\n\010metadata\030\007 \003(\0132-.seigr.rollback.R"
    "ollbackHistory.MetadataEntry\022\037\n\027recovery"
    "_plan_reference\030\010 \001(\t\022 \n\030has_unresolved_"
    "conflicts\030\t \001(\010\022\036\n\026eco_friendly_rollback"
    "s\030\n \001(\005\032/\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n"
    "\005value\030\002 \001(\t:\0028\001\"\371\002\n\020RollbackProgress\022\023\n"
    "\013rollback_id\030\001 \001(\t\0226\n\016current_status\030\002 \001"
    "(\0162\036.seigr.rollback.RollbackStatus\022\033\n\023pr"
    "ogress_percentage\030\003 \001(\002\022\022\n\nsegment_id\030\004 "
    "\001(\t\022\035\n\025last_update_timestamp\030\005 \001(\t\022\032\n\022re"
    "sponsible_hyphen\030\006 \001(\t\022 \n\030remaining_esti"
    "mated_time\030\007 \001(\005\022Q\n\021progress_metadata\030\010 "
    "\003(\01326.seigr.rollback.RollbackProgress.Pr"
    "ogressMetadataEntry\0327\n\025ProgressMetadataE"
    "ntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\314\002\n"
    "\032RollbackConflictResolution\022\023\n\013conflict_"
    "id\030\001 \001(\t\022\022\n\nsegment_id\030\002 \001(\t\022\033\n\023conflict"
    "ing_changes\030\003 \003(\t\022\031\n\021resolution_status\030\004"
    " \001(\t\022\023\n\013resolved_by\030\005 \001(\t\022\034\n\024resolution_"
    "timestamp\030\006 \001(\t\022_\n\023resolution_metadata\030\007"
    " \003(\0132B.seigr.rollback.RollbackConflictRe"
    "solution.ResolutionMetadataEntry\0329\n\027Reso"
    "lutionMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005valu"
    "e\030\002 \001(\t:\0028\001*\220\002\n\016RollbackStatus\022\035\n\031ROLLBA"
    "CK_STATUS_UNDEFINED\020\000\022\033\n\027ROLLBACK_STATUS"
    "_SUCCESS\020\001\022\033\n\027ROLLBACK_STATUS_FAILURE\020\002\022"
    "\033\n\027ROLLBACK_STATUS_PENDING\020\003\022\037\n\033ROLLBACK"
    "_STATUS_IN_PROGRESS\020\004\022#\n\037ROLLBACK_STATUS"
    "_PARTIAL_SUCCESS\020\005\022\033\n\027ROLLBACK_STATUS_AB"
    "ORTED\020\006\022%\n!ROLLBACK_STATUS_CONFLICT_DETE"
    "CTED\020\007*\262\002\n\017RollbackTrigger\022\036\n\032ROLLBACK_T"
    "RIGGER_UNDEFINED\020\000\022\033\n\027ROLLBACK_TRIGGER_M"
    "ANUAL\020\001\022&\n\"ROLLBACK_TRIGGER_INTEGRITY_FA"
    "ILURE\020\002\022#\n\037ROLLBACK_TRIGGER_SYSTEM_RESTO"
    "RE\020\003\022\"\n\036ROLLBACK_TRIGGER_DATA_CONFLICT\020\004"
    "\022\036\n\032ROLLBACK_TRIGGER_SCHEDULED\020\005\022%\n!ROLL"
    "BACK_TRIGGER_POLICY_VIOLATION\020\006\022*\n&ROLLB"
    "ACK_TRIGGER_RESOURCE_OPTIMIZATION\020\0072\314\003\n\017"
    "RollbackService\022P\n\020InitiateRollback\022\037.se"
    "igr.rollback.RollbackRequest\032\033.seigr.rol"
    "lback.RollbackLog\022]\n\020ValidateRollback\022\037."
    "seigr.rollback.RollbackRequest\032(.seigr.r"
    "ollback.RollbackValidationResult\022T\n\017Moni"
    "torRollback\022\037.seigr.rollback.RollbackReq"
    "uest\032 .seigr.rollback.RollbackProgress\022Z"
    "\n\017ResolveConflict\022*.seigr.rollback.Rollb"
    "ackConflictResolution\032\033.seigr.rollback.R"
    "ollbackLog\022V\n\022GetRollbackHistory\022\037.seigr"
    ".rollback.RollbackRequest\032\037.seigr.rollba"
    "ck.RollbackHistoryb\006proto3"
};
static ::absl::once_flag descriptor_table_rollback_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_rollback_2eproto = {
    false,
    false,
    3506,
    descriptor_table_protodef_rollback_2eproto,
    "rollback.proto",
    &descriptor_table_rollback_2eproto_once,
    nullptr,
    0,
    12,
    schemas,
    file_default_instances,
    TableStruct_rollback_2eproto::offsets,
    file_level_enum_descriptors_rollback_2eproto,
    file_level_service_descriptors_rollback_2eproto,
};
namespace seigr {
namespace rollback {
const ::google::protobuf::EnumDescriptor* RollbackStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_rollback_2eproto);
  return file_level_enum_descriptors_rollback_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t RollbackStatus_internal_data_[] = {
    524288u, 0u, };
bool RollbackStatus_IsValid(int value) {
  return 0 <= value && value <= 7;
}
const ::google::protobuf::EnumDescriptor* RollbackTrigger_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_rollback_2eproto);
  return file_level_enum_descriptors_rollback_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t RollbackTrigger_internal_data_[] = {
    524288u, 0u, };
bool RollbackTrigger_IsValid(int value) {
  return 0 <= value && value <= 7;
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              RollbackLog_MetadataEntry_DoNotUse::RollbackLog_MetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              RollbackLog_MetadataEntry_DoNotUse::RollbackLog_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              RollbackLog_MetadataEntry_DoNotUse::RollbackLog_MetadataEntry_DoNotUse() : SuperType() {}
              RollbackLog_MetadataEntry_DoNotUse::RollbackLog_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* RollbackLog_MetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) RollbackLog_MetadataEntry_DoNotUse(arena);
              }
              constexpr auto RollbackLog_MetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RollbackLog_MetadataEntry_DoNotUse),
                                                          alignof(RollbackLog_MetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull RollbackLog_MetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_RollbackLog_MetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &RollbackLog_MetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<RollbackLog_MetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &RollbackLog_MetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &RollbackLog_MetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(RollbackLog_MetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &RollbackLog_MetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_rollback_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* RollbackLog_MetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 57, 2> RollbackLog_MetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RollbackLog_MetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::rollback::RollbackLog_MetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackLog_MetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackLog_MetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(RollbackLog_MetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(RollbackLog_MetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\50\3\5\0\0\0\0\0"
    "seigr.rollback.RollbackLog.MetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class RollbackLog::_Internal {
 public:
};

RollbackLog::RollbackLog(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.rollback.RollbackLog)
}
inline PROTOBUF_NDEBUG_INLINE RollbackLog::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::rollback::RollbackLog& from_msg)
      : metadata_{visibility, arena, from.metadata_},
        log_id_(arena, from.log_id_),
        segment_hash_(arena, from.segment_hash_),
        rollback_timestamp_(arena, from.rollback_timestamp_),
        attempted_at_(arena, from.attempted_at_),
        executed_at_(arena, from.executed_at_),
        user_id_(arena, from.user_id_),
        details_(arena, from.details_),
        conflict_resolution_status_(arena, from.conflict_resolution_status_),
        _cached_size_{0} {}

RollbackLog::RollbackLog(
    ::google::protobuf::Arena* arena,
    const RollbackLog& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RollbackLog* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, event_trigger_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, event_trigger_),
           offsetof(Impl_, eco_friendly_execution_) -
               offsetof(Impl_, event_trigger_) +
               sizeof(Impl_::eco_friendly_execution_));

  // @@protoc_insertion_point(copy_constructor:seigr.rollback.RollbackLog)
}
inline PROTOBUF_NDEBUG_INLINE RollbackLog::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : metadata_{visibility, arena},
        log_id_(arena),
        segment_hash_(arena),
        rollback_timestamp_(arena),
        attempted_at_(arena),
        executed_at_(arena),
        user_id_(arena),
        details_(arena),
        conflict_resolution_status_(arena),
        _cached_size_{0} {}

inline void RollbackLog::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, event_trigger_),
           0,
           offsetof(Impl_, eco_friendly_execution_) -
               offsetof(Impl_, event_trigger_) +
               sizeof(Impl_::eco_friendly_execution_));
}
RollbackLog::~RollbackLog() {
  // @@protoc_insertion_point(destructor:seigr.rollback.RollbackLog)
  SharedDtor(*this);
}
inline void RollbackLog::SharedDtor(MessageLite& self) {
  RollbackLog& this_ = static_cast<RollbackLog&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.log_id_.Destroy();
  this_._impl_.segment_hash_.Destroy();
  this_._impl_.rollback_timestamp_.Destroy();
  this_._impl_.attempted_at_.Destroy();
  this_._impl_.executed_at_.Destroy();
  this_._impl_.user_id_.Destroy();
  this_._impl_.details_.Destroy();
  this_._impl_.conflict_resolution_status_.Destroy();
  this_._impl_.~Impl_();
}

inline void* RollbackLog::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RollbackLog(arena);
}
constexpr auto RollbackLog::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RollbackLog, _impl_.metadata_) +
          decltype(RollbackLog::_impl_.metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RollbackLog, _impl_.metadata_) +
          decltype(RollbackLog::_impl_.metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(RollbackLog), alignof(RollbackLog), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RollbackLog::PlacementNew_,
                                 sizeof(RollbackLog),
                                 alignof(RollbackLog));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RollbackLog::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RollbackLog_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RollbackLog::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RollbackLog>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RollbackLog::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RollbackLog>(), &RollbackLog::ByteSizeLong,
            &RollbackLog::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RollbackLog, _impl_._cached_size_),
        false,
    },
    &RollbackLog::kDescriptorMethods,
    &descriptor_table_rollback_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RollbackLog::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 13, 1, 150, 2> RollbackLog::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    13, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294959104,  // skipmap
    offsetof(decltype(_table_), field_entries),
    13,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::rollback::RollbackLog>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string log_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackLog, _impl_.log_id_)}},
    // string segment_hash = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackLog, _impl_.segment_hash_)}},
    // string rollback_timestamp = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackLog, _impl_.rollback_timestamp_)}},
    // string attempted_at = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackLog, _impl_.attempted_at_)}},
    // string executed_at = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackLog, _impl_.executed_at_)}},
    // string user_id = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackLog, _impl_.user_id_)}},
    // .seigr.rollback.RollbackTrigger event_trigger = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RollbackLog, _impl_.event_trigger_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackLog, _impl_.event_trigger_)}},
    // .seigr.rollback.RollbackStatus status = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RollbackLog, _impl_.status_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackLog, _impl_.status_)}},
    // string details = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackLog, _impl_.details_)}},
    // int32 retry_attempt = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RollbackLog, _impl_.retry_attempt_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackLog, _impl_.retry_attempt_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string conflict_resolution_status = 12;
    {::_pbi::TcParser::FastUS1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackLog, _impl_.conflict_resolution_status_)}},
    // bool eco_friendly_execution = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RollbackLog, _impl_.eco_friendly_execution_), 63>(),
     {104, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackLog, _impl_.eco_friendly_execution_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string log_id = 1;
    {PROTOBUF_FIELD_OFFSET(RollbackLog, _impl_.log_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string segment_hash = 2;
    {PROTOBUF_FIELD_OFFSET(RollbackLog, _impl_.segment_hash_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string rollback_timestamp = 3;
    {PROTOBUF_FIELD_OFFSET(RollbackLog, _impl_.rollback_timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string attempted_at = 4;
    {PROTOBUF_FIELD_OFFSET(RollbackLog, _impl_.attempted_at_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string executed_at = 5;
    {PROTOBUF_FIELD_OFFSET(RollbackLog, _impl_.executed_at_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string user_id = 6;
    {PROTOBUF_FIELD_OFFSET(RollbackLog, _impl_.user_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.rollback.RollbackTrigger event_trigger = 7;
    {PROTOBUF_FIELD_OFFSET(RollbackLog, _impl_.event_trigger_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .seigr.rollback.RollbackStatus status = 8;
    {PROTOBUF_FIELD_OFFSET(RollbackLog, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string details = 9;
    {PROTOBUF_FIELD_OFFSET(RollbackLog, _impl_.details_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 retry_attempt = 10;
    {PROTOBUF_FIELD_OFFSET(RollbackLog, _impl_.retry_attempt_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // map<string, string> metadata = 11;
    {PROTOBUF_FIELD_OFFSET(RollbackLog, _impl_.metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string conflict_resolution_status = 12;
    {PROTOBUF_FIELD_OFFSET(RollbackLog, _impl_.conflict_resolution_status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool eco_friendly_execution = 13;
    {PROTOBUF_FIELD_OFFSET(RollbackLog, _impl_.eco_friendly_execution_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(RollbackLog()._impl_.metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\32\6\14\22\14\13\7\0\0\7\0\10\32\0\0\0"
    "seigr.rollback.RollbackLog"
    "log_id"
    "segment_hash"
    "rollback_timestamp"
    "attempted_at"
    "executed_at"
    "user_id"
    "details"
    "metadata"
    "conflict_resolution_status"
  }},
};

PROTOBUF_NOINLINE void RollbackLog::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.rollback.RollbackLog)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.metadata_.Clear();
  _impl_.log_id_.ClearToEmpty();
  _impl_.segment_hash_.ClearToEmpty();
  _impl_.rollback_timestamp_.ClearToEmpty();
  _impl_.attempted_at_.ClearToEmpty();
  _impl_.executed_at_.ClearToEmpty();
  _impl_.user_id_.ClearToEmpty();
  _impl_.details_.ClearToEmpty();
  _impl_.conflict_resolution_status_.ClearToEmpty();
  ::memset(&_impl_.event_trigger_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.eco_friendly_execution_) -
      reinterpret_cast<char*>(&_impl_.event_trigger_)) + sizeof(_impl_.eco_friendly_execution_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RollbackLog::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RollbackLog& this_ = static_cast<const RollbackLog&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RollbackLog::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RollbackLog& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.rollback.RollbackLog)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string log_id = 1;
          if (!this_._internal_log_id().empty()) {
            const std::string& _s = this_._internal_log_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackLog.log_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string segment_hash = 2;
          if (!this_._internal_segment_hash().empty()) {
            const std::string& _s = this_._internal_segment_hash();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackLog.segment_hash");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string rollback_timestamp = 3;
          if (!this_._internal_rollback_timestamp().empty()) {
            const std::string& _s = this_._internal_rollback_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackLog.rollback_timestamp");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string attempted_at = 4;
          if (!this_._internal_attempted_at().empty()) {
            const std::string& _s = this_._internal_attempted_at();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackLog.attempted_at");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string executed_at = 5;
          if (!this_._internal_executed_at().empty()) {
            const std::string& _s = this_._internal_executed_at();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackLog.executed_at");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string user_id = 6;
          if (!this_._internal_user_id().empty()) {
            const std::string& _s = this_._internal_user_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackLog.user_id");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // .seigr.rollback.RollbackTrigger event_trigger = 7;
          if (this_._internal_event_trigger() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                7, this_._internal_event_trigger(), target);
          }

          // .seigr.rollback.RollbackStatus status = 8;
          if (this_._internal_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                8, this_._internal_status(), target);
          }

          // string details = 9;
          if (!this_._internal_details().empty()) {
            const std::string& _s = this_._internal_details();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackLog.details");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          // int32 retry_attempt = 10;
          if (this_._internal_retry_attempt() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<10>(
                    stream, this_._internal_retry_attempt(), target);
          }

          // map<string, string> metadata = 11;
          if (!this_._internal_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    11, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackLog.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackLog.metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    11, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackLog.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackLog.metadata");
              }
            }
          }

          // string conflict_resolution_status = 12;
          if (!this_._internal_conflict_resolution_status().empty()) {
            const std::string& _s = this_._internal_conflict_resolution_status();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackLog.conflict_resolution_status");
            target = stream->WriteStringMaybeAliased(12, _s, target);
          }

          // bool eco_friendly_execution = 13;
          if (this_._internal_eco_friendly_execution() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                13, this_._internal_eco_friendly_execution(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.rollback.RollbackLog)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RollbackLog::ByteSizeLong(const MessageLite& base) {
          const RollbackLog& this_ = static_cast<const RollbackLog&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RollbackLog::ByteSizeLong() const {
          const RollbackLog& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.rollback.RollbackLog)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> metadata = 11;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_metadata_size());
              for (const auto& entry : this_._internal_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string log_id = 1;
            if (!this_._internal_log_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_log_id());
            }
            // string segment_hash = 2;
            if (!this_._internal_segment_hash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_segment_hash());
            }
            // string rollback_timestamp = 3;
            if (!this_._internal_rollback_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_rollback_timestamp());
            }
            // string attempted_at = 4;
            if (!this_._internal_attempted_at().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_attempted_at());
            }
            // string executed_at = 5;
            if (!this_._internal_executed_at().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_executed_at());
            }
            // string user_id = 6;
            if (!this_._internal_user_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_user_id());
            }
            // string details = 9;
            if (!this_._internal_details().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_details());
            }
            // string conflict_resolution_status = 12;
            if (!this_._internal_conflict_resolution_status().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_conflict_resolution_status());
            }
            // .seigr.rollback.RollbackTrigger event_trigger = 7;
            if (this_._internal_event_trigger() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_event_trigger());
            }
            // .seigr.rollback.RollbackStatus status = 8;
            if (this_._internal_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
            }
            // int32 retry_attempt = 10;
            if (this_._internal_retry_attempt() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_retry_attempt());
            }
            // bool eco_friendly_execution = 13;
            if (this_._internal_eco_friendly_execution() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RollbackLog::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RollbackLog*>(&to_msg);
  auto& from = static_cast<const RollbackLog&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.rollback.RollbackLog)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.metadata_.MergeFrom(from._impl_.metadata_);
  if (!from._internal_log_id().empty()) {
    _this->_internal_set_log_id(from._internal_log_id());
  }
  if (!from._internal_segment_hash().empty()) {
    _this->_internal_set_segment_hash(from._internal_segment_hash());
  }
  if (!from._internal_rollback_timestamp().empty()) {
    _this->_internal_set_rollback_timestamp(from._internal_rollback_timestamp());
  }
  if (!from._internal_attempted_at().empty()) {
    _this->_internal_set_attempted_at(from._internal_attempted_at());
  }
  if (!from._internal_executed_at().empty()) {
    _this->_internal_set_executed_at(from._internal_executed_at());
  }
  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (!from._internal_details().empty()) {
    _this->_internal_set_details(from._internal_details());
  }
  if (!from._internal_conflict_resolution_status().empty()) {
    _this->_internal_set_conflict_resolution_status(from._internal_conflict_resolution_status());
  }
  if (from._internal_event_trigger() != 0) {
    _this->_impl_.event_trigger_ = from._impl_.event_trigger_;
  }
  if (from._internal_status() != 0) {
    _this->_impl_.status_ = from._impl_.status_;
  }
  if (from._internal_retry_attempt() != 0) {
    _this->_impl_.retry_attempt_ = from._impl_.retry_attempt_;
  }
  if (from._internal_eco_friendly_execution() != 0) {
    _this->_impl_.eco_friendly_execution_ = from._impl_.eco_friendly_execution_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RollbackLog::CopyFrom(const RollbackLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.rollback.RollbackLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RollbackLog::InternalSwap(RollbackLog* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.metadata_.InternalSwap(&other->_impl_.metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.log_id_, &other->_impl_.log_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.segment_hash_, &other->_impl_.segment_hash_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.rollback_timestamp_, &other->_impl_.rollback_timestamp_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.attempted_at_, &other->_impl_.attempted_at_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.executed_at_, &other->_impl_.executed_at_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_id_, &other->_impl_.user_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.details_, &other->_impl_.details_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.conflict_resolution_status_, &other->_impl_.conflict_resolution_status_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RollbackLog, _impl_.eco_friendly_execution_)
      + sizeof(RollbackLog::_impl_.eco_friendly_execution_)
      - PROTOBUF_FIELD_OFFSET(RollbackLog, _impl_.event_trigger_)>(
          reinterpret_cast<char*>(&_impl_.event_trigger_),
          reinterpret_cast<char*>(&other->_impl_.event_trigger_));
}

::google::protobuf::Metadata RollbackLog::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              RollbackRequest_ParametersEntry_DoNotUse::RollbackRequest_ParametersEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              RollbackRequest_ParametersEntry_DoNotUse::RollbackRequest_ParametersEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              RollbackRequest_ParametersEntry_DoNotUse::RollbackRequest_ParametersEntry_DoNotUse() : SuperType() {}
              RollbackRequest_ParametersEntry_DoNotUse::RollbackRequest_ParametersEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* RollbackRequest_ParametersEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) RollbackRequest_ParametersEntry_DoNotUse(arena);
              }
              constexpr auto RollbackRequest_ParametersEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RollbackRequest_ParametersEntry_DoNotUse),
                                                          alignof(RollbackRequest_ParametersEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull RollbackRequest_ParametersEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_RollbackRequest_ParametersEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &RollbackRequest_ParametersEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<RollbackRequest_ParametersEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &RollbackRequest_ParametersEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &RollbackRequest_ParametersEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(RollbackRequest_ParametersEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &RollbackRequest_ParametersEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_rollback_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* RollbackRequest_ParametersEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 63, 2> RollbackRequest_ParametersEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RollbackRequest_ParametersEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::rollback::RollbackRequest_ParametersEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackRequest_ParametersEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackRequest_ParametersEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(RollbackRequest_ParametersEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(RollbackRequest_ParametersEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\56\3\5\0\0\0\0\0"
    "seigr.rollback.RollbackRequest.ParametersEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class RollbackRequest::_Internal {
 public:
};

RollbackRequest::RollbackRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.rollback.RollbackRequest)
}
inline PROTOBUF_NDEBUG_INLINE RollbackRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::rollback::RollbackRequest& from_msg)
      : parameters_{visibility, arena, from.parameters_},
        request_id_(arena, from.request_id_),
        segment_hash_(arena, from.segment_hash_),
        target_timestamp_(arena, from.target_timestamp_),
        requested_by_(arena, from.requested_by_),
        requested_at_(arena, from.requested_at_),
        dependent_segment_id_(arena, from.dependent_segment_id_),
        _cached_size_{0} {}

RollbackRequest::RollbackRequest(
    ::google::protobuf::Arena* arena,
    const RollbackRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RollbackRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, trigger_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, trigger_),
           offsetof(Impl_, eco_friendly_mode_) -
               offsetof(Impl_, trigger_) +
               sizeof(Impl_::eco_friendly_mode_));

  // @@protoc_insertion_point(copy_constructor:seigr.rollback.RollbackRequest)
}
inline PROTOBUF_NDEBUG_INLINE RollbackRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : parameters_{visibility, arena},
        request_id_(arena),
        segment_hash_(arena),
        target_timestamp_(arena),
        requested_by_(arena),
        requested_at_(arena),
        dependent_segment_id_(arena),
        _cached_size_{0} {}

inline void RollbackRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, trigger_),
           0,
           offsetof(Impl_, eco_friendly_mode_) -
               offsetof(Impl_, trigger_) +
               sizeof(Impl_::eco_friendly_mode_));
}
RollbackRequest::~RollbackRequest() {
  // @@protoc_insertion_point(destructor:seigr.rollback.RollbackRequest)
  SharedDtor(*this);
}
inline void RollbackRequest::SharedDtor(MessageLite& self) {
  RollbackRequest& this_ = static_cast<RollbackRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.request_id_.Destroy();
  this_._impl_.segment_hash_.Destroy();
  this_._impl_.target_timestamp_.Destroy();
  this_._impl_.requested_by_.Destroy();
  this_._impl_.requested_at_.Destroy();
  this_._impl_.dependent_segment_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* RollbackRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RollbackRequest(arena);
}
constexpr auto RollbackRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RollbackRequest, _impl_.parameters_) +
          decltype(RollbackRequest::_impl_.parameters_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RollbackRequest, _impl_.parameters_) +
          decltype(RollbackRequest::_impl_.parameters_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(RollbackRequest), alignof(RollbackRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RollbackRequest::PlacementNew_,
                                 sizeof(RollbackRequest),
                                 alignof(RollbackRequest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RollbackRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RollbackRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RollbackRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RollbackRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RollbackRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RollbackRequest>(), &RollbackRequest::ByteSizeLong,
            &RollbackRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RollbackRequest, _impl_._cached_size_),
        false,
    },
    &RollbackRequest::kDescriptorMethods,
    &descriptor_table_rollback_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RollbackRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 12, 1, 139, 2> RollbackRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    12, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963200,  // skipmap
    offsetof(decltype(_table_), field_entries),
    12,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::rollback::RollbackRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string request_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackRequest, _impl_.request_id_)}},
    // string segment_hash = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackRequest, _impl_.segment_hash_)}},
    // string target_timestamp = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackRequest, _impl_.target_timestamp_)}},
    // .seigr.rollback.RollbackTrigger trigger = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RollbackRequest, _impl_.trigger_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackRequest, _impl_.trigger_)}},
    // string requested_by = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackRequest, _impl_.requested_by_)}},
    // string requested_at = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackRequest, _impl_.requested_at_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // bool validate_before_execution = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RollbackRequest, _impl_.validate_before_execution_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackRequest, _impl_.validate_before_execution_)}},
    // int32 max_retry_attempts = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RollbackRequest, _impl_.max_retry_attempts_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackRequest, _impl_.max_retry_attempts_)}},
    // bool requires_approval = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RollbackRequest, _impl_.requires_approval_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackRequest, _impl_.requires_approval_)}},
    // string dependent_segment_id = 11;
    {::_pbi::TcParser::FastUS1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackRequest, _impl_.dependent_segment_id_)}},
    // bool eco_friendly_mode = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RollbackRequest, _impl_.eco_friendly_mode_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackRequest, _impl_.eco_friendly_mode_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string request_id = 1;
    {PROTOBUF_FIELD_OFFSET(RollbackRequest, _impl_.request_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string segment_hash = 2;
    {PROTOBUF_FIELD_OFFSET(RollbackRequest, _impl_.segment_hash_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string target_timestamp = 3;
    {PROTOBUF_FIELD_OFFSET(RollbackRequest, _impl_.target_timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.rollback.RollbackTrigger trigger = 4;
    {PROTOBUF_FIELD_OFFSET(RollbackRequest, _impl_.trigger_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string requested_by = 5;
    {PROTOBUF_FIELD_OFFSET(RollbackRequest, _impl_.requested_by_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string requested_at = 6;
    {PROTOBUF_FIELD_OFFSET(RollbackRequest, _impl_.requested_at_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> parameters = 7;
    {PROTOBUF_FIELD_OFFSET(RollbackRequest, _impl_.parameters_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // bool validate_before_execution = 8;
    {PROTOBUF_FIELD_OFFSET(RollbackRequest, _impl_.validate_before_execution_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int32 max_retry_attempts = 9;
    {PROTOBUF_FIELD_OFFSET(RollbackRequest, _impl_.max_retry_attempts_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool requires_approval = 10;
    {PROTOBUF_FIELD_OFFSET(RollbackRequest, _impl_.requires_approval_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string dependent_segment_id = 11;
    {PROTOBUF_FIELD_OFFSET(RollbackRequest, _impl_.dependent_segment_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool eco_friendly_mode = 12;
    {PROTOBUF_FIELD_OFFSET(RollbackRequest, _impl_.eco_friendly_mode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(RollbackRequest()._impl_.parameters_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\36\12\14\20\0\14\14\12\0\0\0\24\0\0\0\0"
    "seigr.rollback.RollbackRequest"
    "request_id"
    "segment_hash"
    "target_timestamp"
    "requested_by"
    "requested_at"
    "parameters"
    "dependent_segment_id"
  }},
};

PROTOBUF_NOINLINE void RollbackRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.rollback.RollbackRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.parameters_.Clear();
  _impl_.request_id_.ClearToEmpty();
  _impl_.segment_hash_.ClearToEmpty();
  _impl_.target_timestamp_.ClearToEmpty();
  _impl_.requested_by_.ClearToEmpty();
  _impl_.requested_at_.ClearToEmpty();
  _impl_.dependent_segment_id_.ClearToEmpty();
  ::memset(&_impl_.trigger_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.eco_friendly_mode_) -
      reinterpret_cast<char*>(&_impl_.trigger_)) + sizeof(_impl_.eco_friendly_mode_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RollbackRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RollbackRequest& this_ = static_cast<const RollbackRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RollbackRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RollbackRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.rollback.RollbackRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string request_id = 1;
          if (!this_._internal_request_id().empty()) {
            const std::string& _s = this_._internal_request_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackRequest.request_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string segment_hash = 2;
          if (!this_._internal_segment_hash().empty()) {
            const std::string& _s = this_._internal_segment_hash();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackRequest.segment_hash");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string target_timestamp = 3;
          if (!this_._internal_target_timestamp().empty()) {
            const std::string& _s = this_._internal_target_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackRequest.target_timestamp");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // .seigr.rollback.RollbackTrigger trigger = 4;
          if (this_._internal_trigger() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                4, this_._internal_trigger(), target);
          }

          // string requested_by = 5;
          if (!this_._internal_requested_by().empty()) {
            const std::string& _s = this_._internal_requested_by();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackRequest.requested_by");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string requested_at = 6;
          if (!this_._internal_requested_at().empty()) {
            const std::string& _s = this_._internal_requested_at();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackRequest.requested_at");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // map<string, string> parameters = 7;
          if (!this_._internal_parameters().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_parameters();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackRequest.parameters");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackRequest.parameters");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackRequest.parameters");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackRequest.parameters");
              }
            }
          }

          // bool validate_before_execution = 8;
          if (this_._internal_validate_before_execution() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                8, this_._internal_validate_before_execution(), target);
          }

          // int32 max_retry_attempts = 9;
          if (this_._internal_max_retry_attempts() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<9>(
                    stream, this_._internal_max_retry_attempts(), target);
          }

          // bool requires_approval = 10;
          if (this_._internal_requires_approval() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                10, this_._internal_requires_approval(), target);
          }

          // string dependent_segment_id = 11;
          if (!this_._internal_dependent_segment_id().empty()) {
            const std::string& _s = this_._internal_dependent_segment_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackRequest.dependent_segment_id");
            target = stream->WriteStringMaybeAliased(11, _s, target);
          }

          // bool eco_friendly_mode = 12;
          if (this_._internal_eco_friendly_mode() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                12, this_._internal_eco_friendly_mode(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.rollback.RollbackRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RollbackRequest::ByteSizeLong(const MessageLite& base) {
          const RollbackRequest& this_ = static_cast<const RollbackRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RollbackRequest::ByteSizeLong() const {
          const RollbackRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.rollback.RollbackRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> parameters = 7;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_parameters_size());
              for (const auto& entry : this_._internal_parameters()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string request_id = 1;
            if (!this_._internal_request_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_request_id());
            }
            // string segment_hash = 2;
            if (!this_._internal_segment_hash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_segment_hash());
            }
            // string target_timestamp = 3;
            if (!this_._internal_target_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_target_timestamp());
            }
            // string requested_by = 5;
            if (!this_._internal_requested_by().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_requested_by());
            }
            // string requested_at = 6;
            if (!this_._internal_requested_at().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_requested_at());
            }
            // string dependent_segment_id = 11;
            if (!this_._internal_dependent_segment_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_dependent_segment_id());
            }
            // .seigr.rollback.RollbackTrigger trigger = 4;
            if (this_._internal_trigger() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_trigger());
            }
            // int32 max_retry_attempts = 9;
            if (this_._internal_max_retry_attempts() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_max_retry_attempts());
            }
            // bool validate_before_execution = 8;
            if (this_._internal_validate_before_execution() != 0) {
              total_size += 2;
            }
            // bool requires_approval = 10;
            if (this_._internal_requires_approval() != 0) {
              total_size += 2;
            }
            // bool eco_friendly_mode = 12;
            if (this_._internal_eco_friendly_mode() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RollbackRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RollbackRequest*>(&to_msg);
  auto& from = static_cast<const RollbackRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.rollback.RollbackRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.parameters_.MergeFrom(from._impl_.parameters_);
  if (!from._internal_request_id().empty()) {
    _this->_internal_set_request_id(from._internal_request_id());
  }
  if (!from._internal_segment_hash().empty()) {
    _this->_internal_set_segment_hash(from._internal_segment_hash());
  }
  if (!from._internal_target_timestamp().empty()) {
    _this->_internal_set_target_timestamp(from._internal_target_timestamp());
  }
  if (!from._internal_requested_by().empty()) {
    _this->_internal_set_requested_by(from._internal_requested_by());
  }
  if (!from._internal_requested_at().empty()) {
    _this->_internal_set_requested_at(from._internal_requested_at());
  }
  if (!from._internal_dependent_segment_id().empty()) {
    _this->_internal_set_dependent_segment_id(from._internal_dependent_segment_id());
  }
  if (from._internal_trigger() != 0) {
    _this->_impl_.trigger_ = from._impl_.trigger_;
  }
  if (from._internal_max_retry_attempts() != 0) {
    _this->_impl_.max_retry_attempts_ = from._impl_.max_retry_attempts_;
  }
  if (from._internal_validate_before_execution() != 0) {
    _this->_impl_.validate_before_execution_ = from._impl_.validate_before_execution_;
  }
  if (from._internal_requires_approval() != 0) {
    _this->_impl_.requires_approval_ = from._impl_.requires_approval_;
  }
  if (from._internal_eco_friendly_mode() != 0) {
    _this->_impl_.eco_friendly_mode_ = from._impl_.eco_friendly_mode_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RollbackRequest::CopyFrom(const RollbackRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.rollback.RollbackRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RollbackRequest::InternalSwap(RollbackRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.parameters_.InternalSwap(&other->_impl_.parameters_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.request_id_, &other->_impl_.request_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.segment_hash_, &other->_impl_.segment_hash_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.target_timestamp_, &other->_impl_.target_timestamp_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.requested_by_, &other->_impl_.requested_by_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.requested_at_, &other->_impl_.requested_at_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dependent_segment_id_, &other->_impl_.dependent_segment_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RollbackRequest, _impl_.eco_friendly_mode_)
      + sizeof(RollbackRequest::_impl_.eco_friendly_mode_)
      - PROTOBUF_FIELD_OFFSET(RollbackRequest, _impl_.trigger_)>(
          reinterpret_cast<char*>(&_impl_.trigger_),
          reinterpret_cast<char*>(&other->_impl_.trigger_));
}

::google::protobuf::Metadata RollbackRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              RollbackValidationResult_ValidationMetadataEntry_DoNotUse::RollbackValidationResult_ValidationMetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              RollbackValidationResult_ValidationMetadataEntry_DoNotUse::RollbackValidationResult_ValidationMetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              RollbackValidationResult_ValidationMetadataEntry_DoNotUse::RollbackValidationResult_ValidationMetadataEntry_DoNotUse() : SuperType() {}
              RollbackValidationResult_ValidationMetadataEntry_DoNotUse::RollbackValidationResult_ValidationMetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* RollbackValidationResult_ValidationMetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) RollbackValidationResult_ValidationMetadataEntry_DoNotUse(arena);
              }
              constexpr auto RollbackValidationResult_ValidationMetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RollbackValidationResult_ValidationMetadataEntry_DoNotUse),
                                                          alignof(RollbackValidationResult_ValidationMetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull RollbackValidationResult_ValidationMetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_RollbackValidationResult_ValidationMetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &RollbackValidationResult_ValidationMetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<RollbackValidationResult_ValidationMetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &RollbackValidationResult_ValidationMetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &RollbackValidationResult_ValidationMetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(RollbackValidationResult_ValidationMetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &RollbackValidationResult_ValidationMetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_rollback_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* RollbackValidationResult_ValidationMetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 80, 2> RollbackValidationResult_ValidationMetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RollbackValidationResult_ValidationMetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::rollback::RollbackValidationResult_ValidationMetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackValidationResult_ValidationMetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackValidationResult_ValidationMetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(RollbackValidationResult_ValidationMetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(RollbackValidationResult_ValidationMetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\77\3\5\0\0\0\0\0"
    "seigr.rollback.RollbackValidationResult.ValidationMetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class RollbackValidationResult::_Internal {
 public:
};

RollbackValidationResult::RollbackValidationResult(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.rollback.RollbackValidationResult)
}
inline PROTOBUF_NDEBUG_INLINE RollbackValidationResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::rollback::RollbackValidationResult& from_msg)
      : validation_metadata_{visibility, arena, from.validation_metadata_},
        invalid_reasons_{visibility, arena, from.invalid_reasons_},
        dependencies_checked_{visibility, arena, from.dependencies_checked_},
        validation_id_(arena, from.validation_id_),
        segment_hash_(arena, from.segment_hash_),
        validation_message_(arena, from.validation_message_),
        validated_at_(arena, from.validated_at_),
        recommended_action_(arena, from.recommended_action_),
        _cached_size_{0} {}

RollbackValidationResult::RollbackValidationResult(
    ::google::protobuf::Arena* arena,
    const RollbackValidationResult& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RollbackValidationResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.is_valid_ = from._impl_.is_valid_;

  // @@protoc_insertion_point(copy_constructor:seigr.rollback.RollbackValidationResult)
}
inline PROTOBUF_NDEBUG_INLINE RollbackValidationResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : validation_metadata_{visibility, arena},
        invalid_reasons_{visibility, arena},
        dependencies_checked_{visibility, arena},
        validation_id_(arena),
        segment_hash_(arena),
        validation_message_(arena),
        validated_at_(arena),
        recommended_action_(arena),
        _cached_size_{0} {}

inline void RollbackValidationResult::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.is_valid_ = {};
}
RollbackValidationResult::~RollbackValidationResult() {
  // @@protoc_insertion_point(destructor:seigr.rollback.RollbackValidationResult)
  SharedDtor(*this);
}
inline void RollbackValidationResult::SharedDtor(MessageLite& self) {
  RollbackValidationResult& this_ = static_cast<RollbackValidationResult&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.validation_id_.Destroy();
  this_._impl_.segment_hash_.Destroy();
  this_._impl_.validation_message_.Destroy();
  this_._impl_.validated_at_.Destroy();
  this_._impl_.recommended_action_.Destroy();
  this_._impl_.~Impl_();
}

inline void* RollbackValidationResult::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RollbackValidationResult(arena);
}
constexpr auto RollbackValidationResult::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RollbackValidationResult, _impl_.validation_metadata_) +
          decltype(RollbackValidationResult::_impl_.validation_metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RollbackValidationResult, _impl_.validation_metadata_) +
          decltype(RollbackValidationResult::_impl_.validation_metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RollbackValidationResult, _impl_.invalid_reasons_) +
          decltype(RollbackValidationResult::_impl_.invalid_reasons_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RollbackValidationResult, _impl_.dependencies_checked_) +
          decltype(RollbackValidationResult::_impl_.dependencies_checked_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(RollbackValidationResult), alignof(RollbackValidationResult), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RollbackValidationResult::PlacementNew_,
                                 sizeof(RollbackValidationResult),
                                 alignof(RollbackValidationResult));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RollbackValidationResult::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RollbackValidationResult_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RollbackValidationResult::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RollbackValidationResult>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RollbackValidationResult::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RollbackValidationResult>(), &RollbackValidationResult::ByteSizeLong,
            &RollbackValidationResult::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RollbackValidationResult, _impl_._cached_size_),
        false,
    },
    &RollbackValidationResult::kDescriptorMethods,
    &descriptor_table_rollback_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RollbackValidationResult::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 1, 183, 2> RollbackValidationResult::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::rollback::RollbackValidationResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string validation_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackValidationResult, _impl_.validation_id_)}},
    // string segment_hash = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackValidationResult, _impl_.segment_hash_)}},
    // bool is_valid = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RollbackValidationResult, _impl_.is_valid_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackValidationResult, _impl_.is_valid_)}},
    // string validation_message = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackValidationResult, _impl_.validation_message_)}},
    // string validated_at = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackValidationResult, _impl_.validated_at_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated string invalid_reasons = 7;
    {::_pbi::TcParser::FastUR1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackValidationResult, _impl_.invalid_reasons_)}},
    // string recommended_action = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackValidationResult, _impl_.recommended_action_)}},
    // repeated string dependencies_checked = 9;
    {::_pbi::TcParser::FastUR1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackValidationResult, _impl_.dependencies_checked_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string validation_id = 1;
    {PROTOBUF_FIELD_OFFSET(RollbackValidationResult, _impl_.validation_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string segment_hash = 2;
    {PROTOBUF_FIELD_OFFSET(RollbackValidationResult, _impl_.segment_hash_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool is_valid = 3;
    {PROTOBUF_FIELD_OFFSET(RollbackValidationResult, _impl_.is_valid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string validation_message = 4;
    {PROTOBUF_FIELD_OFFSET(RollbackValidationResult, _impl_.validation_message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string validated_at = 5;
    {PROTOBUF_FIELD_OFFSET(RollbackValidationResult, _impl_.validated_at_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> validation_metadata = 6;
    {PROTOBUF_FIELD_OFFSET(RollbackValidationResult, _impl_.validation_metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // repeated string invalid_reasons = 7;
    {PROTOBUF_FIELD_OFFSET(RollbackValidationResult, _impl_.invalid_reasons_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // string recommended_action = 8;
    {PROTOBUF_FIELD_OFFSET(RollbackValidationResult, _impl_.recommended_action_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string dependencies_checked = 9;
    {PROTOBUF_FIELD_OFFSET(RollbackValidationResult, _impl_.dependencies_checked_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(RollbackValidationResult()._impl_.validation_metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\47\15\14\0\22\14\23\17\22\24\0\0\0\0\0\0"
    "seigr.rollback.RollbackValidationResult"
    "validation_id"
    "segment_hash"
    "validation_message"
    "validated_at"
    "validation_metadata"
    "invalid_reasons"
    "recommended_action"
    "dependencies_checked"
  }},
};

PROTOBUF_NOINLINE void RollbackValidationResult::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.rollback.RollbackValidationResult)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.validation_metadata_.Clear();
  _impl_.invalid_reasons_.Clear();
  _impl_.dependencies_checked_.Clear();
  _impl_.validation_id_.ClearToEmpty();
  _impl_.segment_hash_.ClearToEmpty();
  _impl_.validation_message_.ClearToEmpty();
  _impl_.validated_at_.ClearToEmpty();
  _impl_.recommended_action_.ClearToEmpty();
  _impl_.is_valid_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RollbackValidationResult::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RollbackValidationResult& this_ = static_cast<const RollbackValidationResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RollbackValidationResult::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RollbackValidationResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.rollback.RollbackValidationResult)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string validation_id = 1;
          if (!this_._internal_validation_id().empty()) {
            const std::string& _s = this_._internal_validation_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackValidationResult.validation_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string segment_hash = 2;
          if (!this_._internal_segment_hash().empty()) {
            const std::string& _s = this_._internal_segment_hash();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackValidationResult.segment_hash");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // bool is_valid = 3;
          if (this_._internal_is_valid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_is_valid(), target);
          }

          // string validation_message = 4;
          if (!this_._internal_validation_message().empty()) {
            const std::string& _s = this_._internal_validation_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackValidationResult.validation_message");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string validated_at = 5;
          if (!this_._internal_validated_at().empty()) {
            const std::string& _s = this_._internal_validated_at();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackValidationResult.validated_at");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // map<string, string> validation_metadata = 6;
          if (!this_._internal_validation_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_validation_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackValidationResult.validation_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackValidationResult.validation_metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackValidationResult.validation_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackValidationResult.validation_metadata");
              }
            }
          }

          // repeated string invalid_reasons = 7;
          for (int i = 0, n = this_._internal_invalid_reasons_size(); i < n; ++i) {
            const auto& s = this_._internal_invalid_reasons().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackValidationResult.invalid_reasons");
            target = stream->WriteString(7, s, target);
          }

          // string recommended_action = 8;
          if (!this_._internal_recommended_action().empty()) {
            const std::string& _s = this_._internal_recommended_action();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackValidationResult.recommended_action");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          // repeated string dependencies_checked = 9;
          for (int i = 0, n = this_._internal_dependencies_checked_size(); i < n; ++i) {
            const auto& s = this_._internal_dependencies_checked().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackValidationResult.dependencies_checked");
            target = stream->WriteString(9, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.rollback.RollbackValidationResult)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RollbackValidationResult::ByteSizeLong(const MessageLite& base) {
          const RollbackValidationResult& this_ = static_cast<const RollbackValidationResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RollbackValidationResult::ByteSizeLong() const {
          const RollbackValidationResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.rollback.RollbackValidationResult)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> validation_metadata = 6;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_validation_metadata_size());
              for (const auto& entry : this_._internal_validation_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // repeated string invalid_reasons = 7;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_invalid_reasons().size());
              for (int i = 0, n = this_._internal_invalid_reasons().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_invalid_reasons().Get(i));
              }
            }
            // repeated string dependencies_checked = 9;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_dependencies_checked().size());
              for (int i = 0, n = this_._internal_dependencies_checked().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_dependencies_checked().Get(i));
              }
            }
          }
           {
            // string validation_id = 1;
            if (!this_._internal_validation_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_validation_id());
            }
            // string segment_hash = 2;
            if (!this_._internal_segment_hash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_segment_hash());
            }
            // string validation_message = 4;
            if (!this_._internal_validation_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_validation_message());
            }
            // string validated_at = 5;
            if (!this_._internal_validated_at().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_validated_at());
            }
            // string recommended_action = 8;
            if (!this_._internal_recommended_action().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_recommended_action());
            }
            // bool is_valid = 3;
            if (this_._internal_is_valid() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RollbackValidationResult::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RollbackValidationResult*>(&to_msg);
  auto& from = static_cast<const RollbackValidationResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.rollback.RollbackValidationResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.validation_metadata_.MergeFrom(from._impl_.validation_metadata_);
  _this->_internal_mutable_invalid_reasons()->MergeFrom(from._internal_invalid_reasons());
  _this->_internal_mutable_dependencies_checked()->MergeFrom(from._internal_dependencies_checked());
  if (!from._internal_validation_id().empty()) {
    _this->_internal_set_validation_id(from._internal_validation_id());
  }
  if (!from._internal_segment_hash().empty()) {
    _this->_internal_set_segment_hash(from._internal_segment_hash());
  }
  if (!from._internal_validation_message().empty()) {
    _this->_internal_set_validation_message(from._internal_validation_message());
  }
  if (!from._internal_validated_at().empty()) {
    _this->_internal_set_validated_at(from._internal_validated_at());
  }
  if (!from._internal_recommended_action().empty()) {
    _this->_internal_set_recommended_action(from._internal_recommended_action());
  }
  if (from._internal_is_valid() != 0) {
    _this->_impl_.is_valid_ = from._impl_.is_valid_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RollbackValidationResult::CopyFrom(const RollbackValidationResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.rollback.RollbackValidationResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RollbackValidationResult::InternalSwap(RollbackValidationResult* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.validation_metadata_.InternalSwap(&other->_impl_.validation_metadata_);
  _impl_.invalid_reasons_.InternalSwap(&other->_impl_.invalid_reasons_);
  _impl_.dependencies_checked_.InternalSwap(&other->_impl_.dependencies_checked_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.validation_id_, &other->_impl_.validation_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.segment_hash_, &other->_impl_.segment_hash_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.validation_message_, &other->_impl_.validation_message_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.validated_at_, &other->_impl_.validated_at_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.recommended_action_, &other->_impl_.recommended_action_, arena);
        swap(_impl_.is_valid_, other->_impl_.is_valid_);
}

::google::protobuf::Metadata RollbackValidationResult::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              RollbackHistory_MetadataEntry_DoNotUse::RollbackHistory_MetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              RollbackHistory_MetadataEntry_DoNotUse::RollbackHistory_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              RollbackHistory_MetadataEntry_DoNotUse::RollbackHistory_MetadataEntry_DoNotUse() : SuperType() {}
              RollbackHistory_MetadataEntry_DoNotUse::RollbackHistory_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* RollbackHistory_MetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) RollbackHistory_MetadataEntry_DoNotUse(arena);
              }
              constexpr auto RollbackHistory_MetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RollbackHistory_MetadataEntry_DoNotUse),
                                                          alignof(RollbackHistory_MetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull RollbackHistory_MetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_RollbackHistory_MetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &RollbackHistory_MetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<RollbackHistory_MetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &RollbackHistory_MetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &RollbackHistory_MetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(RollbackHistory_MetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &RollbackHistory_MetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_rollback_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* RollbackHistory_MetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 61, 2> RollbackHistory_MetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RollbackHistory_MetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::rollback::RollbackHistory_MetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackHistory_MetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackHistory_MetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(RollbackHistory_MetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(RollbackHistory_MetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\54\3\5\0\0\0\0\0"
    "seigr.rollback.RollbackHistory.MetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class RollbackHistory::_Internal {
 public:
};

RollbackHistory::RollbackHistory(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.rollback.RollbackHistory)
}
inline PROTOBUF_NDEBUG_INLINE RollbackHistory::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::rollback::RollbackHistory& from_msg)
      : rollback_logs_{visibility, arena, from.rollback_logs_},
        metadata_{visibility, arena, from.metadata_},
        segment_id_(arena, from.segment_id_),
        last_rollback_at_(arena, from.last_rollback_at_),
        recovery_plan_reference_(arena, from.recovery_plan_reference_),
        _cached_size_{0} {}

RollbackHistory::RollbackHistory(
    ::google::protobuf::Arena* arena,
    const RollbackHistory& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RollbackHistory* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_rollbacks_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, total_rollbacks_),
           offsetof(Impl_, eco_friendly_rollbacks_) -
               offsetof(Impl_, total_rollbacks_) +
               sizeof(Impl_::eco_friendly_rollbacks_));

  // @@protoc_insertion_point(copy_constructor:seigr.rollback.RollbackHistory)
}
inline PROTOBUF_NDEBUG_INLINE RollbackHistory::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : rollback_logs_{visibility, arena},
        metadata_{visibility, arena},
        segment_id_(arena),
        last_rollback_at_(arena),
        recovery_plan_reference_(arena),
        _cached_size_{0} {}

inline void RollbackHistory::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_rollbacks_),
           0,
           offsetof(Impl_, eco_friendly_rollbacks_) -
               offsetof(Impl_, total_rollbacks_) +
               sizeof(Impl_::eco_friendly_rollbacks_));
}
RollbackHistory::~RollbackHistory() {
  // @@protoc_insertion_point(destructor:seigr.rollback.RollbackHistory)
  SharedDtor(*this);
}
inline void RollbackHistory::SharedDtor(MessageLite& self) {
  RollbackHistory& this_ = static_cast<RollbackHistory&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.segment_id_.Destroy();
  this_._impl_.last_rollback_at_.Destroy();
  this_._impl_.recovery_plan_reference_.Destroy();
  this_._impl_.~Impl_();
}

inline void* RollbackHistory::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RollbackHistory(arena);
}
constexpr auto RollbackHistory::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RollbackHistory, _impl_.rollback_logs_) +
          decltype(RollbackHistory::_impl_.rollback_logs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RollbackHistory, _impl_.metadata_) +
          decltype(RollbackHistory::_impl_.metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RollbackHistory, _impl_.metadata_) +
          decltype(RollbackHistory::_impl_.metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(RollbackHistory), alignof(RollbackHistory), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RollbackHistory::PlacementNew_,
                                 sizeof(RollbackHistory),
                                 alignof(RollbackHistory));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RollbackHistory::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RollbackHistory_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RollbackHistory::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RollbackHistory>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RollbackHistory::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RollbackHistory>(), &RollbackHistory::ByteSizeLong,
            &RollbackHistory::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RollbackHistory, _impl_._cached_size_),
        false,
    },
    &RollbackHistory::kDescriptorMethods,
    &descriptor_table_rollback_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RollbackHistory::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 2, 104, 2> RollbackHistory::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::rollback::RollbackHistory>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string segment_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackHistory, _impl_.segment_id_)}},
    // repeated .seigr.rollback.RollbackLog rollback_logs = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackHistory, _impl_.rollback_logs_)}},
    // string last_rollback_at = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackHistory, _impl_.last_rollback_at_)}},
    // int32 total_rollbacks = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RollbackHistory, _impl_.total_rollbacks_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackHistory, _impl_.total_rollbacks_)}},
    // int32 successful_rollbacks = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RollbackHistory, _impl_.successful_rollbacks_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackHistory, _impl_.successful_rollbacks_)}},
    // int32 failed_rollbacks = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RollbackHistory, _impl_.failed_rollbacks_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackHistory, _impl_.failed_rollbacks_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string recovery_plan_reference = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackHistory, _impl_.recovery_plan_reference_)}},
    // bool has_unresolved_conflicts = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RollbackHistory, _impl_.has_unresolved_conflicts_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackHistory, _impl_.has_unresolved_conflicts_)}},
    // int32 eco_friendly_rollbacks = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RollbackHistory, _impl_.eco_friendly_rollbacks_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackHistory, _impl_.eco_friendly_rollbacks_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string segment_id = 1;
    {PROTOBUF_FIELD_OFFSET(RollbackHistory, _impl_.segment_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .seigr.rollback.RollbackLog rollback_logs = 2;
    {PROTOBUF_FIELD_OFFSET(RollbackHistory, _impl_.rollback_logs_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string last_rollback_at = 3;
    {PROTOBUF_FIELD_OFFSET(RollbackHistory, _impl_.last_rollback_at_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 total_rollbacks = 4;
    {PROTOBUF_FIELD_OFFSET(RollbackHistory, _impl_.total_rollbacks_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 successful_rollbacks = 5;
    {PROTOBUF_FIELD_OFFSET(RollbackHistory, _impl_.successful_rollbacks_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 failed_rollbacks = 6;
    {PROTOBUF_FIELD_OFFSET(RollbackHistory, _impl_.failed_rollbacks_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // map<string, string> metadata = 7;
    {PROTOBUF_FIELD_OFFSET(RollbackHistory, _impl_.metadata_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string recovery_plan_reference = 8;
    {PROTOBUF_FIELD_OFFSET(RollbackHistory, _impl_.recovery_plan_reference_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool has_unresolved_conflicts = 9;
    {PROTOBUF_FIELD_OFFSET(RollbackHistory, _impl_.has_unresolved_conflicts_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int32 eco_friendly_rollbacks = 10;
    {PROTOBUF_FIELD_OFFSET(RollbackHistory, _impl_.eco_friendly_rollbacks_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::seigr::rollback::RollbackLog>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(RollbackHistory()._impl_.metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\36\12\0\20\0\0\0\10\27\0\0\0\0\0\0\0"
    "seigr.rollback.RollbackHistory"
    "segment_id"
    "last_rollback_at"
    "metadata"
    "recovery_plan_reference"
  }},
};

PROTOBUF_NOINLINE void RollbackHistory::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.rollback.RollbackHistory)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rollback_logs_.Clear();
  _impl_.metadata_.Clear();
  _impl_.segment_id_.ClearToEmpty();
  _impl_.last_rollback_at_.ClearToEmpty();
  _impl_.recovery_plan_reference_.ClearToEmpty();
  ::memset(&_impl_.total_rollbacks_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.eco_friendly_rollbacks_) -
      reinterpret_cast<char*>(&_impl_.total_rollbacks_)) + sizeof(_impl_.eco_friendly_rollbacks_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RollbackHistory::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RollbackHistory& this_ = static_cast<const RollbackHistory&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RollbackHistory::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RollbackHistory& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.rollback.RollbackHistory)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string segment_id = 1;
          if (!this_._internal_segment_id().empty()) {
            const std::string& _s = this_._internal_segment_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackHistory.segment_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated .seigr.rollback.RollbackLog rollback_logs = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_rollback_logs_size());
               i < n; i++) {
            const auto& repfield = this_._internal_rollback_logs().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // string last_rollback_at = 3;
          if (!this_._internal_last_rollback_at().empty()) {
            const std::string& _s = this_._internal_last_rollback_at();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackHistory.last_rollback_at");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // int32 total_rollbacks = 4;
          if (this_._internal_total_rollbacks() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<4>(
                    stream, this_._internal_total_rollbacks(), target);
          }

          // int32 successful_rollbacks = 5;
          if (this_._internal_successful_rollbacks() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<5>(
                    stream, this_._internal_successful_rollbacks(), target);
          }

          // int32 failed_rollbacks = 6;
          if (this_._internal_failed_rollbacks() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<6>(
                    stream, this_._internal_failed_rollbacks(), target);
          }

          // map<string, string> metadata = 7;
          if (!this_._internal_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackHistory.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackHistory.metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackHistory.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackHistory.metadata");
              }
            }
          }

          // string recovery_plan_reference = 8;
          if (!this_._internal_recovery_plan_reference().empty()) {
            const std::string& _s = this_._internal_recovery_plan_reference();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackHistory.recovery_plan_reference");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          // bool has_unresolved_conflicts = 9;
          if (this_._internal_has_unresolved_conflicts() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                9, this_._internal_has_unresolved_conflicts(), target);
          }

          // int32 eco_friendly_rollbacks = 10;
          if (this_._internal_eco_friendly_rollbacks() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<10>(
                    stream, this_._internal_eco_friendly_rollbacks(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.rollback.RollbackHistory)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RollbackHistory::ByteSizeLong(const MessageLite& base) {
          const RollbackHistory& this_ = static_cast<const RollbackHistory&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RollbackHistory::ByteSizeLong() const {
          const RollbackHistory& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.rollback.RollbackHistory)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .seigr.rollback.RollbackLog rollback_logs = 2;
            {
              total_size += 1UL * this_._internal_rollback_logs_size();
              for (const auto& msg : this_._internal_rollback_logs()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // map<string, string> metadata = 7;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_metadata_size());
              for (const auto& entry : this_._internal_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string segment_id = 1;
            if (!this_._internal_segment_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_segment_id());
            }
            // string last_rollback_at = 3;
            if (!this_._internal_last_rollback_at().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_last_rollback_at());
            }
            // string recovery_plan_reference = 8;
            if (!this_._internal_recovery_plan_reference().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_recovery_plan_reference());
            }
            // int32 total_rollbacks = 4;
            if (this_._internal_total_rollbacks() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_total_rollbacks());
            }
            // int32 successful_rollbacks = 5;
            if (this_._internal_successful_rollbacks() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_successful_rollbacks());
            }
            // int32 failed_rollbacks = 6;
            if (this_._internal_failed_rollbacks() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_failed_rollbacks());
            }
            // bool has_unresolved_conflicts = 9;
            if (this_._internal_has_unresolved_conflicts() != 0) {
              total_size += 2;
            }
            // int32 eco_friendly_rollbacks = 10;
            if (this_._internal_eco_friendly_rollbacks() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_eco_friendly_rollbacks());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RollbackHistory::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RollbackHistory*>(&to_msg);
  auto& from = static_cast<const RollbackHistory&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.rollback.RollbackHistory)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_rollback_logs()->MergeFrom(
      from._internal_rollback_logs());
  _this->_impl_.metadata_.MergeFrom(from._impl_.metadata_);
  if (!from._internal_segment_id().empty()) {
    _this->_internal_set_segment_id(from._internal_segment_id());
  }
  if (!from._internal_last_rollback_at().empty()) {
    _this->_internal_set_last_rollback_at(from._internal_last_rollback_at());
  }
  if (!from._internal_recovery_plan_reference().empty()) {
    _this->_internal_set_recovery_plan_reference(from._internal_recovery_plan_reference());
  }
  if (from._internal_total_rollbacks() != 0) {
    _this->_impl_.total_rollbacks_ = from._impl_.total_rollbacks_;
  }
  if (from._internal_successful_rollbacks() != 0) {
    _this->_impl_.successful_rollbacks_ = from._impl_.successful_rollbacks_;
  }
  if (from._internal_failed_rollbacks() != 0) {
    _this->_impl_.failed_rollbacks_ = from._impl_.failed_rollbacks_;
  }
  if (from._internal_has_unresolved_conflicts() != 0) {
    _this->_impl_.has_unresolved_conflicts_ = from._impl_.has_unresolved_conflicts_;
  }
  if (from._internal_eco_friendly_rollbacks() != 0) {
    _this->_impl_.eco_friendly_rollbacks_ = from._impl_.eco_friendly_rollbacks_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RollbackHistory::CopyFrom(const RollbackHistory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.rollback.RollbackHistory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RollbackHistory::InternalSwap(RollbackHistory* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.rollback_logs_.InternalSwap(&other->_impl_.rollback_logs_);
  _impl_.metadata_.InternalSwap(&other->_impl_.metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.segment_id_, &other->_impl_.segment_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.last_rollback_at_, &other->_impl_.last_rollback_at_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.recovery_plan_reference_, &other->_impl_.recovery_plan_reference_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RollbackHistory, _impl_.eco_friendly_rollbacks_)
      + sizeof(RollbackHistory::_impl_.eco_friendly_rollbacks_)
      - PROTOBUF_FIELD_OFFSET(RollbackHistory, _impl_.total_rollbacks_)>(
          reinterpret_cast<char*>(&_impl_.total_rollbacks_),
          reinterpret_cast<char*>(&other->_impl_.total_rollbacks_));
}

::google::protobuf::Metadata RollbackHistory::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              RollbackProgress_ProgressMetadataEntry_DoNotUse::RollbackProgress_ProgressMetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              RollbackProgress_ProgressMetadataEntry_DoNotUse::RollbackProgress_ProgressMetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              RollbackProgress_ProgressMetadataEntry_DoNotUse::RollbackProgress_ProgressMetadataEntry_DoNotUse() : SuperType() {}
              RollbackProgress_ProgressMetadataEntry_DoNotUse::RollbackProgress_ProgressMetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* RollbackProgress_ProgressMetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) RollbackProgress_ProgressMetadataEntry_DoNotUse(arena);
              }
              constexpr auto RollbackProgress_ProgressMetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RollbackProgress_ProgressMetadataEntry_DoNotUse),
                                                          alignof(RollbackProgress_ProgressMetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull RollbackProgress_ProgressMetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_RollbackProgress_ProgressMetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &RollbackProgress_ProgressMetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<RollbackProgress_ProgressMetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &RollbackProgress_ProgressMetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &RollbackProgress_ProgressMetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(RollbackProgress_ProgressMetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &RollbackProgress_ProgressMetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_rollback_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* RollbackProgress_ProgressMetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 70, 2> RollbackProgress_ProgressMetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RollbackProgress_ProgressMetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::rollback::RollbackProgress_ProgressMetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackProgress_ProgressMetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackProgress_ProgressMetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(RollbackProgress_ProgressMetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(RollbackProgress_ProgressMetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\65\3\5\0\0\0\0\0"
    "seigr.rollback.RollbackProgress.ProgressMetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class RollbackProgress::_Internal {
 public:
};

RollbackProgress::RollbackProgress(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.rollback.RollbackProgress)
}
inline PROTOBUF_NDEBUG_INLINE RollbackProgress::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::rollback::RollbackProgress& from_msg)
      : progress_metadata_{visibility, arena, from.progress_metadata_},
        rollback_id_(arena, from.rollback_id_),
        segment_id_(arena, from.segment_id_),
        last_update_timestamp_(arena, from.last_update_timestamp_),
        responsible_hyphen_(arena, from.responsible_hyphen_),
        _cached_size_{0} {}

RollbackProgress::RollbackProgress(
    ::google::protobuf::Arena* arena,
    const RollbackProgress& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RollbackProgress* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, current_status_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, current_status_),
           offsetof(Impl_, remaining_estimated_time_) -
               offsetof(Impl_, current_status_) +
               sizeof(Impl_::remaining_estimated_time_));

  // @@protoc_insertion_point(copy_constructor:seigr.rollback.RollbackProgress)
}
inline PROTOBUF_NDEBUG_INLINE RollbackProgress::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : progress_metadata_{visibility, arena},
        rollback_id_(arena),
        segment_id_(arena),
        last_update_timestamp_(arena),
        responsible_hyphen_(arena),
        _cached_size_{0} {}

inline void RollbackProgress::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, current_status_),
           0,
           offsetof(Impl_, remaining_estimated_time_) -
               offsetof(Impl_, current_status_) +
               sizeof(Impl_::remaining_estimated_time_));
}
RollbackProgress::~RollbackProgress() {
  // @@protoc_insertion_point(destructor:seigr.rollback.RollbackProgress)
  SharedDtor(*this);
}
inline void RollbackProgress::SharedDtor(MessageLite& self) {
  RollbackProgress& this_ = static_cast<RollbackProgress&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.rollback_id_.Destroy();
  this_._impl_.segment_id_.Destroy();
  this_._impl_.last_update_timestamp_.Destroy();
  this_._impl_.responsible_hyphen_.Destroy();
  this_._impl_.~Impl_();
}

inline void* RollbackProgress::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RollbackProgress(arena);
}
constexpr auto RollbackProgress::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RollbackProgress, _impl_.progress_metadata_) +
          decltype(RollbackProgress::_impl_.progress_metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RollbackProgress, _impl_.progress_metadata_) +
          decltype(RollbackProgress::_impl_.progress_metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(RollbackProgress), alignof(RollbackProgress), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RollbackProgress::PlacementNew_,
                                 sizeof(RollbackProgress),
                                 alignof(RollbackProgress));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RollbackProgress::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RollbackProgress_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RollbackProgress::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RollbackProgress>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RollbackProgress::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RollbackProgress>(), &RollbackProgress::ByteSizeLong,
            &RollbackProgress::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RollbackProgress, _impl_._cached_size_),
        false,
    },
    &RollbackProgress::kDescriptorMethods,
    &descriptor_table_rollback_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RollbackProgress::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 1, 125, 2> RollbackProgress::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::rollback::RollbackProgress>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string rollback_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackProgress, _impl_.rollback_id_)}},
    // .seigr.rollback.RollbackStatus current_status = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RollbackProgress, _impl_.current_status_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackProgress, _impl_.current_status_)}},
    // float progress_percentage = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackProgress, _impl_.progress_percentage_)}},
    // string segment_id = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackProgress, _impl_.segment_id_)}},
    // string last_update_timestamp = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackProgress, _impl_.last_update_timestamp_)}},
    // string responsible_hyphen = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackProgress, _impl_.responsible_hyphen_)}},
    // int32 remaining_estimated_time = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RollbackProgress, _impl_.remaining_estimated_time_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackProgress, _impl_.remaining_estimated_time_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string rollback_id = 1;
    {PROTOBUF_FIELD_OFFSET(RollbackProgress, _impl_.rollback_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.rollback.RollbackStatus current_status = 2;
    {PROTOBUF_FIELD_OFFSET(RollbackProgress, _impl_.current_status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // float progress_percentage = 3;
    {PROTOBUF_FIELD_OFFSET(RollbackProgress, _impl_.progress_percentage_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // string segment_id = 4;
    {PROTOBUF_FIELD_OFFSET(RollbackProgress, _impl_.segment_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string last_update_timestamp = 5;
    {PROTOBUF_FIELD_OFFSET(RollbackProgress, _impl_.last_update_timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string responsible_hyphen = 6;
    {PROTOBUF_FIELD_OFFSET(RollbackProgress, _impl_.responsible_hyphen_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 remaining_estimated_time = 7;
    {PROTOBUF_FIELD_OFFSET(RollbackProgress, _impl_.remaining_estimated_time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // map<string, string> progress_metadata = 8;
    {PROTOBUF_FIELD_OFFSET(RollbackProgress, _impl_.progress_metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(RollbackProgress()._impl_.progress_metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\37\13\0\0\12\25\22\0\21\0\0\0\0\0\0\0"
    "seigr.rollback.RollbackProgress"
    "rollback_id"
    "segment_id"
    "last_update_timestamp"
    "responsible_hyphen"
    "progress_metadata"
  }},
};

PROTOBUF_NOINLINE void RollbackProgress::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.rollback.RollbackProgress)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.progress_metadata_.Clear();
  _impl_.rollback_id_.ClearToEmpty();
  _impl_.segment_id_.ClearToEmpty();
  _impl_.last_update_timestamp_.ClearToEmpty();
  _impl_.responsible_hyphen_.ClearToEmpty();
  ::memset(&_impl_.current_status_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.remaining_estimated_time_) -
      reinterpret_cast<char*>(&_impl_.current_status_)) + sizeof(_impl_.remaining_estimated_time_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RollbackProgress::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RollbackProgress& this_ = static_cast<const RollbackProgress&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RollbackProgress::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RollbackProgress& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.rollback.RollbackProgress)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string rollback_id = 1;
          if (!this_._internal_rollback_id().empty()) {
            const std::string& _s = this_._internal_rollback_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackProgress.rollback_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // .seigr.rollback.RollbackStatus current_status = 2;
          if (this_._internal_current_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_current_status(), target);
          }

          // float progress_percentage = 3;
          if (::absl::bit_cast<::uint32_t>(this_._internal_progress_percentage()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_progress_percentage(), target);
          }

          // string segment_id = 4;
          if (!this_._internal_segment_id().empty()) {
            const std::string& _s = this_._internal_segment_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackProgress.segment_id");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string last_update_timestamp = 5;
          if (!this_._internal_last_update_timestamp().empty()) {
            const std::string& _s = this_._internal_last_update_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackProgress.last_update_timestamp");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string responsible_hyphen = 6;
          if (!this_._internal_responsible_hyphen().empty()) {
            const std::string& _s = this_._internal_responsible_hyphen();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackProgress.responsible_hyphen");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // int32 remaining_estimated_time = 7;
          if (this_._internal_remaining_estimated_time() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<7>(
                    stream, this_._internal_remaining_estimated_time(), target);
          }

          // map<string, string> progress_metadata = 8;
          if (!this_._internal_progress_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_progress_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    8, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackProgress.progress_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackProgress.progress_metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    8, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackProgress.progress_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackProgress.progress_metadata");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.rollback.RollbackProgress)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RollbackProgress::ByteSizeLong(const MessageLite& base) {
          const RollbackProgress& this_ = static_cast<const RollbackProgress&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RollbackProgress::ByteSizeLong() const {
          const RollbackProgress& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.rollback.RollbackProgress)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> progress_metadata = 8;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_progress_metadata_size());
              for (const auto& entry : this_._internal_progress_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string rollback_id = 1;
            if (!this_._internal_rollback_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_rollback_id());
            }
            // string segment_id = 4;
            if (!this_._internal_segment_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_segment_id());
            }
            // string last_update_timestamp = 5;
            if (!this_._internal_last_update_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_last_update_timestamp());
            }
            // string responsible_hyphen = 6;
            if (!this_._internal_responsible_hyphen().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_responsible_hyphen());
            }
            // .seigr.rollback.RollbackStatus current_status = 2;
            if (this_._internal_current_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_current_status());
            }
            // float progress_percentage = 3;
            if (::absl::bit_cast<::uint32_t>(this_._internal_progress_percentage()) != 0) {
              total_size += 5;
            }
            // int32 remaining_estimated_time = 7;
            if (this_._internal_remaining_estimated_time() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_remaining_estimated_time());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RollbackProgress::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RollbackProgress*>(&to_msg);
  auto& from = static_cast<const RollbackProgress&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.rollback.RollbackProgress)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.progress_metadata_.MergeFrom(from._impl_.progress_metadata_);
  if (!from._internal_rollback_id().empty()) {
    _this->_internal_set_rollback_id(from._internal_rollback_id());
  }
  if (!from._internal_segment_id().empty()) {
    _this->_internal_set_segment_id(from._internal_segment_id());
  }
  if (!from._internal_last_update_timestamp().empty()) {
    _this->_internal_set_last_update_timestamp(from._internal_last_update_timestamp());
  }
  if (!from._internal_responsible_hyphen().empty()) {
    _this->_internal_set_responsible_hyphen(from._internal_responsible_hyphen());
  }
  if (from._internal_current_status() != 0) {
    _this->_impl_.current_status_ = from._impl_.current_status_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_progress_percentage()) != 0) {
    _this->_impl_.progress_percentage_ = from._impl_.progress_percentage_;
  }
  if (from._internal_remaining_estimated_time() != 0) {
    _this->_impl_.remaining_estimated_time_ = from._impl_.remaining_estimated_time_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RollbackProgress::CopyFrom(const RollbackProgress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.rollback.RollbackProgress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RollbackProgress::InternalSwap(RollbackProgress* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.progress_metadata_.InternalSwap(&other->_impl_.progress_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.rollback_id_, &other->_impl_.rollback_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.segment_id_, &other->_impl_.segment_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.last_update_timestamp_, &other->_impl_.last_update_timestamp_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.responsible_hyphen_, &other->_impl_.responsible_hyphen_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RollbackProgress, _impl_.remaining_estimated_time_)
      + sizeof(RollbackProgress::_impl_.remaining_estimated_time_)
      - PROTOBUF_FIELD_OFFSET(RollbackProgress, _impl_.current_status_)>(
          reinterpret_cast<char*>(&_impl_.current_status_),
          reinterpret_cast<char*>(&other->_impl_.current_status_));
}

::google::protobuf::Metadata RollbackProgress::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              RollbackConflictResolution_ResolutionMetadataEntry_DoNotUse::RollbackConflictResolution_ResolutionMetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              RollbackConflictResolution_ResolutionMetadataEntry_DoNotUse::RollbackConflictResolution_ResolutionMetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              RollbackConflictResolution_ResolutionMetadataEntry_DoNotUse::RollbackConflictResolution_ResolutionMetadataEntry_DoNotUse() : SuperType() {}
              RollbackConflictResolution_ResolutionMetadataEntry_DoNotUse::RollbackConflictResolution_ResolutionMetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* RollbackConflictResolution_ResolutionMetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) RollbackConflictResolution_ResolutionMetadataEntry_DoNotUse(arena);
              }
              constexpr auto RollbackConflictResolution_ResolutionMetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RollbackConflictResolution_ResolutionMetadataEntry_DoNotUse),
                                                          alignof(RollbackConflictResolution_ResolutionMetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull RollbackConflictResolution_ResolutionMetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_RollbackConflictResolution_ResolutionMetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &RollbackConflictResolution_ResolutionMetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<RollbackConflictResolution_ResolutionMetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &RollbackConflictResolution_ResolutionMetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &RollbackConflictResolution_ResolutionMetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(RollbackConflictResolution_ResolutionMetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &RollbackConflictResolution_ResolutionMetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_rollback_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* RollbackConflictResolution_ResolutionMetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 82, 2> RollbackConflictResolution_ResolutionMetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RollbackConflictResolution_ResolutionMetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::rollback::RollbackConflictResolution_ResolutionMetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackConflictResolution_ResolutionMetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackConflictResolution_ResolutionMetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(RollbackConflictResolution_ResolutionMetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(RollbackConflictResolution_ResolutionMetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\101\3\5\0\0\0\0\0"
    "seigr.rollback.RollbackConflictResolution.ResolutionMetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class RollbackConflictResolution::_Internal {
 public:
};

RollbackConflictResolution::RollbackConflictResolution(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.rollback.RollbackConflictResolution)
}
inline PROTOBUF_NDEBUG_INLINE RollbackConflictResolution::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::rollback::RollbackConflictResolution& from_msg)
      : conflicting_changes_{visibility, arena, from.conflicting_changes_},
        resolution_metadata_{visibility, arena, from.resolution_metadata_},
        conflict_id_(arena, from.conflict_id_),
        segment_id_(arena, from.segment_id_),
        resolution_status_(arena, from.resolution_status_),
        resolved_by_(arena, from.resolved_by_),
        resolution_timestamp_(arena, from.resolution_timestamp_),
        _cached_size_{0} {}

RollbackConflictResolution::RollbackConflictResolution(
    ::google::protobuf::Arena* arena,
    const RollbackConflictResolution& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RollbackConflictResolution* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:seigr.rollback.RollbackConflictResolution)
}
inline PROTOBUF_NDEBUG_INLINE RollbackConflictResolution::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : conflicting_changes_{visibility, arena},
        resolution_metadata_{visibility, arena},
        conflict_id_(arena),
        segment_id_(arena),
        resolution_status_(arena),
        resolved_by_(arena),
        resolution_timestamp_(arena),
        _cached_size_{0} {}

inline void RollbackConflictResolution::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RollbackConflictResolution::~RollbackConflictResolution() {
  // @@protoc_insertion_point(destructor:seigr.rollback.RollbackConflictResolution)
  SharedDtor(*this);
}
inline void RollbackConflictResolution::SharedDtor(MessageLite& self) {
  RollbackConflictResolution& this_ = static_cast<RollbackConflictResolution&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.conflict_id_.Destroy();
  this_._impl_.segment_id_.Destroy();
  this_._impl_.resolution_status_.Destroy();
  this_._impl_.resolved_by_.Destroy();
  this_._impl_.resolution_timestamp_.Destroy();
  this_._impl_.~Impl_();
}

inline void* RollbackConflictResolution::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RollbackConflictResolution(arena);
}
constexpr auto RollbackConflictResolution::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RollbackConflictResolution, _impl_.conflicting_changes_) +
          decltype(RollbackConflictResolution::_impl_.conflicting_changes_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RollbackConflictResolution, _impl_.resolution_metadata_) +
          decltype(RollbackConflictResolution::_impl_.resolution_metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RollbackConflictResolution, _impl_.resolution_metadata_) +
          decltype(RollbackConflictResolution::_impl_.resolution_metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(RollbackConflictResolution), alignof(RollbackConflictResolution), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RollbackConflictResolution::PlacementNew_,
                                 sizeof(RollbackConflictResolution),
                                 alignof(RollbackConflictResolution));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RollbackConflictResolution::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RollbackConflictResolution_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RollbackConflictResolution::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RollbackConflictResolution>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RollbackConflictResolution::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RollbackConflictResolution>(), &RollbackConflictResolution::ByteSizeLong,
            &RollbackConflictResolution::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RollbackConflictResolution, _impl_._cached_size_),
        false,
    },
    &RollbackConflictResolution::kDescriptorMethods,
    &descriptor_table_rollback_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RollbackConflictResolution::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 1, 157, 2> RollbackConflictResolution::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::rollback::RollbackConflictResolution>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string conflict_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackConflictResolution, _impl_.conflict_id_)}},
    // string segment_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackConflictResolution, _impl_.segment_id_)}},
    // repeated string conflicting_changes = 3;
    {::_pbi::TcParser::FastUR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackConflictResolution, _impl_.conflicting_changes_)}},
    // string resolution_status = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackConflictResolution, _impl_.resolution_status_)}},
    // string resolved_by = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackConflictResolution, _impl_.resolved_by_)}},
    // string resolution_timestamp = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(RollbackConflictResolution, _impl_.resolution_timestamp_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string conflict_id = 1;
    {PROTOBUF_FIELD_OFFSET(RollbackConflictResolution, _impl_.conflict_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string segment_id = 2;
    {PROTOBUF_FIELD_OFFSET(RollbackConflictResolution, _impl_.segment_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string conflicting_changes = 3;
    {PROTOBUF_FIELD_OFFSET(RollbackConflictResolution, _impl_.conflicting_changes_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // string resolution_status = 4;
    {PROTOBUF_FIELD_OFFSET(RollbackConflictResolution, _impl_.resolution_status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string resolved_by = 5;
    {PROTOBUF_FIELD_OFFSET(RollbackConflictResolution, _impl_.resolved_by_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string resolution_timestamp = 6;
    {PROTOBUF_FIELD_OFFSET(RollbackConflictResolution, _impl_.resolution_timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> resolution_metadata = 7;
    {PROTOBUF_FIELD_OFFSET(RollbackConflictResolution, _impl_.resolution_metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(RollbackConflictResolution()._impl_.resolution_metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\51\13\12\23\21\13\24\23"
    "seigr.rollback.RollbackConflictResolution"
    "conflict_id"
    "segment_id"
    "conflicting_changes"
    "resolution_status"
    "resolved_by"
    "resolution_timestamp"
    "resolution_metadata"
  }},
};

PROTOBUF_NOINLINE void RollbackConflictResolution::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.rollback.RollbackConflictResolution)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.conflicting_changes_.Clear();
  _impl_.resolution_metadata_.Clear();
  _impl_.conflict_id_.ClearToEmpty();
  _impl_.segment_id_.ClearToEmpty();
  _impl_.resolution_status_.ClearToEmpty();
  _impl_.resolved_by_.ClearToEmpty();
  _impl_.resolution_timestamp_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RollbackConflictResolution::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RollbackConflictResolution& this_ = static_cast<const RollbackConflictResolution&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RollbackConflictResolution::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RollbackConflictResolution& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.rollback.RollbackConflictResolution)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string conflict_id = 1;
          if (!this_._internal_conflict_id().empty()) {
            const std::string& _s = this_._internal_conflict_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackConflictResolution.conflict_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string segment_id = 2;
          if (!this_._internal_segment_id().empty()) {
            const std::string& _s = this_._internal_segment_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackConflictResolution.segment_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // repeated string conflicting_changes = 3;
          for (int i = 0, n = this_._internal_conflicting_changes_size(); i < n; ++i) {
            const auto& s = this_._internal_conflicting_changes().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackConflictResolution.conflicting_changes");
            target = stream->WriteString(3, s, target);
          }

          // string resolution_status = 4;
          if (!this_._internal_resolution_status().empty()) {
            const std::string& _s = this_._internal_resolution_status();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackConflictResolution.resolution_status");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string resolved_by = 5;
          if (!this_._internal_resolved_by().empty()) {
            const std::string& _s = this_._internal_resolved_by();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackConflictResolution.resolved_by");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string resolution_timestamp = 6;
          if (!this_._internal_resolution_timestamp().empty()) {
            const std::string& _s = this_._internal_resolution_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackConflictResolution.resolution_timestamp");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // map<string, string> resolution_metadata = 7;
          if (!this_._internal_resolution_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_resolution_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackConflictResolution.resolution_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackConflictResolution.resolution_metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackConflictResolution.resolution_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.rollback.RollbackConflictResolution.resolution_metadata");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.rollback.RollbackConflictResolution)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RollbackConflictResolution::ByteSizeLong(const MessageLite& base) {
          const RollbackConflictResolution& this_ = static_cast<const RollbackConflictResolution&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RollbackConflictResolution::ByteSizeLong() const {
          const RollbackConflictResolution& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.rollback.RollbackConflictResolution)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string conflicting_changes = 3;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_conflicting_changes().size());
              for (int i = 0, n = this_._internal_conflicting_changes().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_conflicting_changes().Get(i));
              }
            }
            // map<string, string> resolution_metadata = 7;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_resolution_metadata_size());
              for (const auto& entry : this_._internal_resolution_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string conflict_id = 1;
            if (!this_._internal_conflict_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_conflict_id());
            }
            // string segment_id = 2;
            if (!this_._internal_segment_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_segment_id());
            }
            // string resolution_status = 4;
            if (!this_._internal_resolution_status().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_resolution_status());
            }
            // string resolved_by = 5;
            if (!this_._internal_resolved_by().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_resolved_by());
            }
            // string resolution_timestamp = 6;
            if (!this_._internal_resolution_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_resolution_timestamp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RollbackConflictResolution::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RollbackConflictResolution*>(&to_msg);
  auto& from = static_cast<const RollbackConflictResolution&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.rollback.RollbackConflictResolution)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_conflicting_changes()->MergeFrom(from._internal_conflicting_changes());
  _this->_impl_.resolution_metadata_.MergeFrom(from._impl_.resolution_metadata_);
  if (!from._internal_conflict_id().empty()) {
    _this->_internal_set_conflict_id(from._internal_conflict_id());
  }
  if (!from._internal_segment_id().empty()) {
    _this->_internal_set_segment_id(from._internal_segment_id());
  }
  if (!from._internal_resolution_status().empty()) {
    _this->_internal_set_resolution_status(from._internal_resolution_status());
  }
  if (!from._internal_resolved_by().empty()) {
    _this->_internal_set_resolved_by(from._internal_resolved_by());
  }
  if (!from._internal_resolution_timestamp().empty()) {
    _this->_internal_set_resolution_timestamp(from._internal_resolution_timestamp());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RollbackConflictResolution::CopyFrom(const RollbackConflictResolution& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.rollback.RollbackConflictResolution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RollbackConflictResolution::InternalSwap(RollbackConflictResolution* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.conflicting_changes_.InternalSwap(&other->_impl_.conflicting_changes_);
  _impl_.resolution_metadata_.InternalSwap(&other->_impl_.resolution_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.conflict_id_, &other->_impl_.conflict_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.segment_id_, &other->_impl_.segment_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.resolution_status_, &other->_impl_.resolution_status_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.resolved_by_, &other->_impl_.resolved_by_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.resolution_timestamp_, &other->_impl_.resolution_timestamp_, arena);
}

::google::protobuf::Metadata RollbackConflictResolution::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace rollback
}  // namespace seigr
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_rollback_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
