src/crypto/asymmetric_utils.py:8:1: I001 [*] Import block is un-sorted or un-formatted
   |
 6 |   """
 7 |   
 8 | / import logging
 9 | | import uuid
10 | | import time
11 | | from datetime import datetime, timezone
12 | | 
13 | | from cryptography.hazmat.primitives import serialization
14 | | from cryptography.exceptions import InvalidSignature
15 | | 
16 | | # Import protobuf definitions
17 | | from src.seigr_protocol.compiled.encryption_pb2 import (
18 | |     AsymmetricKeyPair,
19 | |     SignatureLog
20 | | )
21 | | 
22 | | from src.seigr_protocol.compiled.alerting_pb2 import (
23 | |     Alert,
24 | |     AlertType,
25 | |     AlertSeverity
26 | | )
27 | | 
28 | | # Local imports
29 | | from src.crypto.constants import SEIGR_CELL_ID_PREFIX
30 | | from src.crypto.key_management import generate_rsa_key_pair
31 | | from src.crypto.secure_logging import log_secure_action
32 | | 
33 | | logger = logging.getLogger(__name__)
   | |_^ I001
   |
   = help: Organize imports

src/crypto/asymmetric_utils.py:14:37: F401 [*] `cryptography.exceptions.InvalidSignature` imported but unused
   |
13 | from cryptography.hazmat.primitives import serialization
14 | from cryptography.exceptions import InvalidSignature
   |                                     ^^^^^^^^^^^^^^^^ F401
15 | 
16 | # Import protobuf definitions
   |
   = help: Remove unused import: `cryptography.exceptions.InvalidSignature`

src/crypto/asymmetric_utils.py:19:5: F401 [*] `src.seigr_protocol.compiled.encryption_pb2.SignatureLog` imported but unused
   |
17 | from src.seigr_protocol.compiled.encryption_pb2 import (
18 |     AsymmetricKeyPair,
19 |     SignatureLog
   |     ^^^^^^^^^^^^ F401
20 | )
   |
   = help: Remove unused import: `src.seigr_protocol.compiled.encryption_pb2.SignatureLog`

src/crypto/cbor_utils.py:1:1: I001 [*] Import block is un-sorted or un-formatted
   |
 1 | / import cbor2
 2 | | import logging
 3 | | import uuid
 4 | | from datetime import datetime, timezone
 5 | | 
 6 | | from src.crypto.helpers import encode_to_senary, decode_from_senary, is_senary
 7 | | from src.crypto.constants import SEIGR_CELL_ID_PREFIX, DEFAULT_HASH_FUNCTION
 8 | | from src.crypto.hypha_crypt import HyphaCrypt
 9 | | from src.seigr_protocol.compiled.encryption_pb2 import EncryptedData
10 | | from src.seigr_protocol.compiled.error_handling_pb2 import (
11 | |     ErrorLogEntry,
12 | |     ErrorSeverity,
13 | |     ErrorResolutionStrategy,
14 | | )
15 | | from src.seigr_protocol.compiled.alerting_pb2 import Alert, AlertType, AlertSeverity
16 | | 
17 | | logger = logging.getLogger(__name__)
   | |_^ I001
   |
   = help: Organize imports

src/crypto/cbor_utils.py:7:56: F401 [*] `src.crypto.constants.DEFAULT_HASH_FUNCTION` imported but unused
  |
6 | from src.crypto.helpers import encode_to_senary, decode_from_senary, is_senary
7 | from src.crypto.constants import SEIGR_CELL_ID_PREFIX, DEFAULT_HASH_FUNCTION
  |                                                        ^^^^^^^^^^^^^^^^^^^^^ F401
8 | from src.crypto.hypha_crypt import HyphaCrypt
9 | from src.seigr_protocol.compiled.encryption_pb2 import EncryptedData
  |
  = help: Remove unused import: `src.crypto.constants.DEFAULT_HASH_FUNCTION`

src/crypto/cbor_utils.py:8:36: F401 [*] `src.crypto.hypha_crypt.HyphaCrypt` imported but unused
   |
 6 | from src.crypto.helpers import encode_to_senary, decode_from_senary, is_senary
 7 | from src.crypto.constants import SEIGR_CELL_ID_PREFIX, DEFAULT_HASH_FUNCTION
 8 | from src.crypto.hypha_crypt import HyphaCrypt
   |                                    ^^^^^^^^^^ F401
 9 | from src.seigr_protocol.compiled.encryption_pb2 import EncryptedData
10 | from src.seigr_protocol.compiled.error_handling_pb2 import (
   |
   = help: Remove unused import: `src.crypto.hypha_crypt.HyphaCrypt`

src/crypto/compliance_auditing.py:1:1: I001 [*] Import block is un-sorted or un-formatted
   |
 1 | / import logging
 2 | | import os
 3 | | import uuid
 4 | | import json
 5 | | from datetime import datetime, timezone, timedelta
 6 | | 
 7 | | from cryptography.fernet import Fernet
 8 | | 
 9 | | from src.crypto.encoding_utils import encode_to_senary
10 | | from src.crypto.hash_utils import hypha_hash
11 | | from src.crypto.key_derivation import generate_salt
12 | | from src.crypto.hypha_crypt import HyphaCrypt  # Seigr's secure encryption
13 | | from src.crypto.constants import SEIGR_CELL_ID_PREFIX, DEFAULT_RETENTION_PERIOD_DAYS
14 | | 
15 | | from src.seigr_protocol.compiled.audit_logging_pb2 import (
16 | |     AuditLogEntry,
17 | |     LogLevel,
18 | |     LogCategory,
19 | | )
20 | | from src.seigr_protocol.compiled.error_handling_pb2 import (
21 | |     ErrorLogEntry,
22 | |     ErrorSeverity,
23 | |     ErrorResolutionStrategy,
24 | | )
25 | | from src.seigr_protocol.compiled.alerting_pb2 import Alert, AlertType, AlertSeverity
26 | | 
27 | | 
28 | | # Initialize the compliance logger
   | |_^ I001
29 |   logger = logging.getLogger("compliance_auditing")
30 |   logging.basicConfig(
   |
   = help: Organize imports

src/crypto/compliance_auditing.py:2:8: F401 [*] `os` imported but unused
  |
1 | import logging
2 | import os
  |        ^^ F401
3 | import uuid
4 | import json
  |
  = help: Remove unused import: `os`

src/crypto/compliance_auditing.py:7:33: F401 [*] `cryptography.fernet.Fernet` imported but unused
  |
5 | from datetime import datetime, timezone, timedelta
6 | 
7 | from cryptography.fernet import Fernet
  |                                 ^^^^^^ F401
8 | 
9 | from src.crypto.encoding_utils import encode_to_senary
  |
  = help: Remove unused import: `cryptography.fernet.Fernet`

src/crypto/compliance_auditing.py:9:39: F401 [*] `src.crypto.encoding_utils.encode_to_senary` imported but unused
   |
 7 | from cryptography.fernet import Fernet
 8 | 
 9 | from src.crypto.encoding_utils import encode_to_senary
   |                                       ^^^^^^^^^^^^^^^^ F401
10 | from src.crypto.hash_utils import hypha_hash
11 | from src.crypto.key_derivation import generate_salt
   |
   = help: Remove unused import: `src.crypto.encoding_utils.encode_to_senary`

src/crypto/compliance_auditing.py:10:35: F401 [*] `src.crypto.hash_utils.hypha_hash` imported but unused
   |
 9 | from src.crypto.encoding_utils import encode_to_senary
10 | from src.crypto.hash_utils import hypha_hash
   |                                   ^^^^^^^^^^ F401
11 | from src.crypto.key_derivation import generate_salt
12 | from src.crypto.hypha_crypt import HyphaCrypt  # Seigr's secure encryption
   |
   = help: Remove unused import: `src.crypto.hash_utils.hypha_hash`

src/crypto/compliance_auditing.py:11:39: F401 [*] `src.crypto.key_derivation.generate_salt` imported but unused
   |
 9 | from src.crypto.encoding_utils import encode_to_senary
10 | from src.crypto.hash_utils import hypha_hash
11 | from src.crypto.key_derivation import generate_salt
   |                                       ^^^^^^^^^^^^^ F401
12 | from src.crypto.hypha_crypt import HyphaCrypt  # Seigr's secure encryption
13 | from src.crypto.constants import SEIGR_CELL_ID_PREFIX, DEFAULT_RETENTION_PERIOD_DAYS
   |
   = help: Remove unused import: `src.crypto.key_derivation.generate_salt`

src/crypto/compliance_auditing.py:12:36: F401 [*] `src.crypto.hypha_crypt.HyphaCrypt` imported but unused
   |
10 | from src.crypto.hash_utils import hypha_hash
11 | from src.crypto.key_derivation import generate_salt
12 | from src.crypto.hypha_crypt import HyphaCrypt  # Seigr's secure encryption
   |                                    ^^^^^^^^^^ F401
13 | from src.crypto.constants import SEIGR_CELL_ID_PREFIX, DEFAULT_RETENTION_PERIOD_DAYS
   |
   = help: Remove unused import: `src.crypto.hypha_crypt.HyphaCrypt`

src/crypto/config_loader.py:3:1: I001 [*] Import block is un-sorted or un-formatted
   |
 1 |   # src/crypto/config_loader.py
 2 |   
 3 | / import os
 4 | | import json
 5 | | import yaml
 6 | | import logging
 7 | | from datetime import datetime, timezone
 8 | | from typing import Any, Dict, Optional
 9 | | 
10 | | from src.crypto.helpers import encode_to_senary
11 | | from src.crypto.constants import SEIGR_CELL_ID_PREFIX
12 | | from src.seigr_protocol.compiled.error_handling_pb2 import (
13 | |     ErrorLogEntry,
14 | |     ErrorSeverity,
15 | |     ErrorResolutionStrategy,
16 | | )
17 | | 
18 | | logger = logging.getLogger(__name__)
   | |_^ I001
   |
   = help: Organize imports

src/crypto/config_loader.py:7:22: F401 [*] `datetime.datetime` imported but unused
  |
5 | import yaml
6 | import logging
7 | from datetime import datetime, timezone
  |                      ^^^^^^^^ F401
8 | from typing import Any, Dict, Optional
  |
  = help: Remove unused import

src/crypto/config_loader.py:7:32: F401 [*] `datetime.timezone` imported but unused
  |
5 | import yaml
6 | import logging
7 | from datetime import datetime, timezone
  |                                ^^^^^^^^ F401
8 | from typing import Any, Dict, Optional
  |
  = help: Remove unused import

src/crypto/config_loader.py:8:31: F401 [*] `typing.Optional` imported but unused
   |
 6 | import logging
 7 | from datetime import datetime, timezone
 8 | from typing import Any, Dict, Optional
   |                               ^^^^^^^^ F401
 9 | 
10 | from src.crypto.helpers import encode_to_senary
   |
   = help: Remove unused import: `typing.Optional`

src/crypto/config_loader.py:41:101: E501 Line too long (112 > 100)
   |
39 |         self.use_senary = use_senary
40 |         logger.debug(
41 |             f"{SEIGR_CELL_ID_PREFIX} ConfigLoader initialized for directory: {config_dir}, Senary: {use_senary}"
   |                                                                                                     ^^^^^^^^^^^^ E501
42 |         )
   |

src/crypto/config_loader.py:154:9: F841 Local variable `error_log` is assigned to but never used
    |
152 |             exception (Exception): Exception object.
153 |         """
154 |         error_log = ErrorLogEntry(
    |         ^^^^^^^^^ F841
155 |             error_id=f"{SEIGR_CELL_ID_PREFIX}_{error_id}",
156 |             severity=ErrorSeverity.ERROR_SEVERITY_HIGH,
    |
    = help: Remove assignment to unused variable `error_log`

src/crypto/config_loader.py:173:12: PLW0603 Using the global statement to update `_config_loader_instance` is discouraged
    |
172 | def _initialize_config_loader(config_dir: str = "config", use_senary: bool = False):
173 |     global _config_loader_instance
    |            ^^^^^^^^^^^^^^^^^^^^^^^ PLW0603
174 |     if _config_loader_instance is None:
175 |         _config_loader_instance = ConfigLoader(config_dir=config_dir, use_senary=use_senary)
    |

src/crypto/encoding_utils.py:1:1: I001 [*] Import block is un-sorted or un-formatted
   |
 1 | / import os
 2 | | import logging
 3 | | from datetime import datetime, timezone
 4 | | 
 5 | | from src.crypto.hypha_crypt import HyphaCrypt
 6 | | from src.crypto.helpers import encode_to_senary, apply_salt
 7 | | from src.crypto.constants import (
 8 | |     DEFAULT_HASH_FUNCTION,
 9 | |     SUPPORTED_HASH_ALGORITHMS,
10 | |     SALT_SIZE,
11 | |     SEIGR_CELL_ID_PREFIX,
12 | |     SEIGR_VERSION,
13 | | )
14 | | from src.seigr_protocol.compiled.hashing_pb2 import (
15 | |     HashData,
16 | |     HashAlgorithm,
17 | |     VerificationStatus,
18 | | )
19 | | from src.seigr_protocol.compiled.error_handling_pb2 import (
20 | |     ErrorLogEntry,
21 | |     ErrorSeverity,
22 | |     ErrorResolutionStrategy,
23 | | )
24 | | 
25 | | logger = logging.getLogger(__name__)
   | |_^ I001
26 |   
27 |   ### 📊 Hashing Functions ###
   |
   = help: Organize imports

src/crypto/encoding_utils.py:1:8: F401 [*] `os` imported but unused
  |
1 | import os
  |        ^^ F401
2 | import logging
3 | from datetime import datetime, timezone
  |
  = help: Remove unused import: `os`

src/crypto/encoding_utils.py:6:32: F401 [*] `src.crypto.helpers.encode_to_senary` imported but unused
  |
5 | from src.crypto.hypha_crypt import HyphaCrypt
6 | from src.crypto.helpers import encode_to_senary, apply_salt
  |                                ^^^^^^^^^^^^^^^^ F401
7 | from src.crypto.constants import (
8 |     DEFAULT_HASH_FUNCTION,
  |
  = help: Remove unused import

src/crypto/encoding_utils.py:6:50: F401 [*] `src.crypto.helpers.apply_salt` imported but unused
  |
5 | from src.crypto.hypha_crypt import HyphaCrypt
6 | from src.crypto.helpers import encode_to_senary, apply_salt
  |                                                  ^^^^^^^^^^ F401
7 | from src.crypto.constants import (
8 |     DEFAULT_HASH_FUNCTION,
  |
  = help: Remove unused import

src/crypto/encoding_utils.py:10:5: F401 [*] `src.crypto.constants.SALT_SIZE` imported but unused
   |
 8 |     DEFAULT_HASH_FUNCTION,
 9 |     SUPPORTED_HASH_ALGORITHMS,
10 |     SALT_SIZE,
   |     ^^^^^^^^^ F401
11 |     SEIGR_CELL_ID_PREFIX,
12 |     SEIGR_VERSION,
   |
   = help: Remove unused import

src/crypto/encoding_utils.py:12:5: F401 [*] `src.crypto.constants.SEIGR_VERSION` imported but unused
   |
10 |     SALT_SIZE,
11 |     SEIGR_CELL_ID_PREFIX,
12 |     SEIGR_VERSION,
   |     ^^^^^^^^^^^^^ F401
13 | )
14 | from src.seigr_protocol.compiled.hashing_pb2 import (
   |
   = help: Remove unused import

src/crypto/encoding_utils.py:169:101: E501 Line too long (114 > 100)
    |
167 |     """
168 |     try:
169 |         formatted_hash = f"{protobuf_hash.algorithm_version}:{protobuf_hash.algorithm}:{protobuf_hash.hash_value}"
    |                                                                                                     ^^^^^^^^^^^^^^ E501
170 |         verification_result = verify_hash(data, formatted_hash, salt=salt)
    |

src/crypto/encoding_utils.py:179:101: E501 Line too long (113 > 100)
    |
178 |         logger.info(
179 |             f"{SEIGR_CELL_ID_PREFIX} Protobuf hash verification status: {protobuf_hash.verification_status.name}"
    |                                                                                                     ^^^^^^^^^^^^^ E501
180 |         )
181 |         return verification_result
    |

src/crypto/hash_utils.py:1:1: I001 [*] Import block is un-sorted or un-formatted
   |
 1 | / import logging
 2 | | from datetime import datetime, timezone
 3 | | 
 4 | | from src.crypto.hypha_crypt import HyphaCrypt
 5 | | from src.crypto.constants import (
 6 | |     DEFAULT_HASH_FUNCTION,
 7 | |     SUPPORTED_HASH_ALGORITHMS,
 8 | |     SEIGR_CELL_ID_PREFIX,
 9 | |     SEIGR_VERSION,
10 | | )
11 | | from src.seigr_protocol.compiled.hashing_pb2 import (
12 | |     HashData,
13 | |     HashAlgorithm,
14 | |     VerificationStatus,
15 | | )
16 | | from src.seigr_protocol.compiled.error_handling_pb2 import (
17 | |     ErrorLogEntry,
18 | |     ErrorSeverity,
19 | |     ErrorResolutionStrategy,
20 | | )
21 | | 
22 | | logger = logging.getLogger(__name__)
   | |_^ I001
   |
   = help: Organize imports

src/crypto/hash_utils.py:9:5: F401 [*] `src.crypto.constants.SEIGR_VERSION` imported but unused
   |
 7 |     SUPPORTED_HASH_ALGORITHMS,
 8 |     SEIGR_CELL_ID_PREFIX,
 9 |     SEIGR_VERSION,
   |     ^^^^^^^^^^^^^ F401
10 | )
11 | from src.seigr_protocol.compiled.hashing_pb2 import (
   |
   = help: Remove unused import: `src.crypto.constants.SEIGR_VERSION`

src/crypto/hash_utils.py:169:101: E501 Line too long (110 > 100)
    |
167 |         bool: True if verification succeeds, False otherwise.
168 |     """
169 |     formatted_hash = f"{protobuf_hash.algorithm_version}:{protobuf_hash.algorithm}:{protobuf_hash.hash_value}"
    |                                                                                                     ^^^^^^^^^^ E501
170 |     verification_result = verify_hash(data, formatted_hash, salt=salt)
    |

src/crypto/hash_utils.py:179:101: E501 Line too long (109 > 100)
    |
178 |     logger.info(
179 |         f"{SEIGR_CELL_ID_PREFIX} Protobuf hash verification status: {protobuf_hash.verification_status.name}"
    |                                                                                                     ^^^^^^^^^ E501
180 |     )
181 |     return verification_result
    |

src/crypto/helpers.py:3:1: I001 [*] Import block is un-sorted or un-formatted
   |
 1 |   # src/crypto/helpers.py
 2 |   
 3 | / import logging
 4 | | import os
 5 | | from datetime import datetime, timezone
 6 | | 
 7 | | from src.crypto.constants import SEIGR_CELL_ID_PREFIX, SEIGR_VERSION, SALT_SIZE
 8 | | from src.seigr_protocol.compiled.error_handling_pb2 import (
 9 | |     ErrorLogEntry,
10 | |     ErrorSeverity,
11 | |     ErrorResolutionStrategy,
12 | | )
13 | | from src.seigr_protocol.compiled.alerting_pb2 import Alert, AlertType, AlertSeverity
14 | | 
15 | | logger = logging.getLogger(__name__)
   | |_^ I001
   |
   = help: Organize imports

src/crypto/helpers.py:134:25: PLR2004 Magic value used in comparison, consider replacing `256` with a constant variable
    |
132 |         str: Base-6 encoded string.
133 |     """
134 |     if not (0 <= byte < 256):
    |                         ^^^ PLR2004
135 |         raise ValueError("Byte out of range for encoding")
136 |     senary_digits = []
    |

src/crypto/hypha_crypt.py:1:1: I001 [*] Import block is un-sorted or un-formatted
   |
 1 | / import logging
 2 | | from os import urandom
 3 | | from datetime import datetime, timezone
 4 | | from cryptography.fernet import Fernet
 5 | | 
 6 | | from src.crypto.helpers import apply_salt, encode_to_senary
 7 | | from src.crypto.key_derivation import generate_salt, derive_key
 8 | | from src.crypto.cbor_utils import encode_data as cbor_encode, decode_data as cbor_decode
 9 | | from src.seigr_protocol.compiled.seed_dot_seigr_pb2 import (
10 | |     OperationLog,
11 | |     IntegrityVerification,
12 | |     VerificationStatus,
13 | | )
14 | | from src.seigr_protocol.compiled.error_handling_pb2 import (
15 | |     ErrorLogEntry,
16 | |     ErrorSeverity,
17 | |     ErrorResolutionStrategy,
18 | | )
19 | | from src.crypto.constants import (
20 | |     DEFAULT_HASH_FUNCTION,
21 | |     SUPPORTED_HASH_ALGORITHMS,
22 | |     SALT_SIZE,
23 | |     SEIGR_CELL_ID_PREFIX,
24 | |     SEIGR_VERSION,
25 | | )
26 | | 
27 | | # Centralized logging setup
   | |_^ I001
28 |   logger = logging.getLogger(__name__)
   |
   = help: Organize imports

src/crypto/hypha_crypt.py:2:16: F401 [*] `os.urandom` imported but unused
  |
1 | import logging
2 | from os import urandom
  |                ^^^^^^^ F401
3 | from datetime import datetime, timezone
4 | from cryptography.fernet import Fernet
  |
  = help: Remove unused import: `os.urandom`

src/crypto/hypha_crypt.py:3:22: F401 [*] `datetime.datetime` imported but unused
  |
1 | import logging
2 | from os import urandom
3 | from datetime import datetime, timezone
  |                      ^^^^^^^^ F401
4 | from cryptography.fernet import Fernet
  |
  = help: Remove unused import

src/crypto/hypha_crypt.py:3:32: F401 [*] `datetime.timezone` imported but unused
  |
1 | import logging
2 | from os import urandom
3 | from datetime import datetime, timezone
  |                                ^^^^^^^^ F401
4 | from cryptography.fernet import Fernet
  |
  = help: Remove unused import

src/crypto/hypha_crypt.py:8:50: F401 [*] `src.crypto.cbor_utils.encode_data` imported but unused
   |
 6 | from src.crypto.helpers import apply_salt, encode_to_senary
 7 | from src.crypto.key_derivation import generate_salt, derive_key
 8 | from src.crypto.cbor_utils import encode_data as cbor_encode, decode_data as cbor_decode
   |                                                  ^^^^^^^^^^^ F401
 9 | from src.seigr_protocol.compiled.seed_dot_seigr_pb2 import (
10 |     OperationLog,
   |
   = help: Remove unused import

src/crypto/hypha_crypt.py:8:78: F401 [*] `src.crypto.cbor_utils.decode_data` imported but unused
   |
 6 | from src.crypto.helpers import apply_salt, encode_to_senary
 7 | from src.crypto.key_derivation import generate_salt, derive_key
 8 | from src.crypto.cbor_utils import encode_data as cbor_encode, decode_data as cbor_decode
   |                                                                              ^^^^^^^^^^^ F401
 9 | from src.seigr_protocol.compiled.seed_dot_seigr_pb2 import (
10 |     OperationLog,
   |
   = help: Remove unused import

src/crypto/hypha_crypt.py:10:5: F401 [*] `src.seigr_protocol.compiled.seed_dot_seigr_pb2.OperationLog` imported but unused
   |
 8 | from src.crypto.cbor_utils import encode_data as cbor_encode, decode_data as cbor_decode
 9 | from src.seigr_protocol.compiled.seed_dot_seigr_pb2 import (
10 |     OperationLog,
   |     ^^^^^^^^^^^^ F401
11 |     IntegrityVerification,
12 |     VerificationStatus,
   |
   = help: Remove unused import

src/crypto/hypha_crypt.py:11:5: F401 [*] `src.seigr_protocol.compiled.seed_dot_seigr_pb2.IntegrityVerification` imported but unused
   |
 9 | from src.seigr_protocol.compiled.seed_dot_seigr_pb2 import (
10 |     OperationLog,
11 |     IntegrityVerification,
   |     ^^^^^^^^^^^^^^^^^^^^^ F401
12 |     VerificationStatus,
13 | )
   |
   = help: Remove unused import

src/crypto/hypha_crypt.py:12:5: F401 [*] `src.seigr_protocol.compiled.seed_dot_seigr_pb2.VerificationStatus` imported but unused
   |
10 |     OperationLog,
11 |     IntegrityVerification,
12 |     VerificationStatus,
   |     ^^^^^^^^^^^^^^^^^^ F401
13 | )
14 | from src.seigr_protocol.compiled.error_handling_pb2 import (
   |
   = help: Remove unused import

src/crypto/hypha_crypt.py:22:5: F401 [*] `src.crypto.constants.SALT_SIZE` imported but unused
   |
20 |     DEFAULT_HASH_FUNCTION,
21 |     SUPPORTED_HASH_ALGORITHMS,
22 |     SALT_SIZE,
   |     ^^^^^^^^^ F401
23 |     SEIGR_CELL_ID_PREFIX,
24 |     SEIGR_VERSION,
   |
   = help: Remove unused import: `src.crypto.constants.SALT_SIZE`

src/crypto/hypha_crypt.py:158:101: E501 Line too long (107 > 100)
    |
156 |         if algorithm not in SUPPORTED_HASH_ALGORITHMS:
157 |             raise ValueError(
158 |                 f"{SEIGR_CELL_ID_PREFIX}_unsupported_algorithm: Unsupported hashing algorithm: {algorithm}"
    |                                                                                                     ^^^^^^^ E501
159 |             )
    |

src/crypto/hypha_crypt.py:197:101: E501 Line too long (124 > 100)
    |
196 |         logger.info(
197 |             f"{SEIGR_CELL_ID_PREFIX} Integrity verification for segment {self.segment_id}: {verification_results['status']}"
    |                                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^ E501
198 |         )
199 |         return verification_results
    |

src/crypto/hypha_crypt.py:202:9: F841 Local variable `error_log` is assigned to but never used
    |
201 |     def _log_error(self, error_id, message, exception):
202 |         error_log = ErrorLogEntry(
    |         ^^^^^^^^^ F841
203 |             error_id=error_id,
204 |             severity=ErrorSeverity.ERROR_SEVERITY_HIGH,
    |
    = help: Remove assignment to unused variable `error_log`

src/crypto/integrity_verification.py:1:1: I001 [*] Import block is un-sorted or un-formatted
   |
 1 | / import logging
 2 | | from datetime import datetime, timezone, timedelta
 3 | | 
 4 | | from src.crypto.hypha_crypt import HyphaCrypt
 5 | | from src.crypto.hash_utils import hypha_hash, verify_hash
 6 | | from src.crypto.encoding_utils import encode_to_senary, decode_from_senary, is_senary
 7 | | from src.crypto.constants import SEIGR_CELL_ID_PREFIX, SEIGR_VERSION
 8 | | 
 9 | | from src.seigr_protocol.compiled.integrity_pb2 import (
10 | |     IntegrityVerification,
11 | |     MonitoringCycleResult,
12 | | )
13 | | from src.seigr_protocol.compiled.error_handling_pb2 import (
14 | |     ErrorLogEntry,
15 | |     ErrorSeverity,
16 | |     ErrorResolutionStrategy,
17 | | )
18 | | from src.seigr_protocol.compiled.alerting_pb2 import Alert, AlertType, AlertSeverity
19 | | 
20 | | logger = logging.getLogger(__name__)
   | |_^ I001
   |
   = help: Organize imports

src/crypto/integrity_verification.py:6:39: F401 [*] `src.crypto.encoding_utils.encode_to_senary` imported but unused
  |
4 | from src.crypto.hypha_crypt import HyphaCrypt
5 | from src.crypto.hash_utils import hypha_hash, verify_hash
6 | from src.crypto.encoding_utils import encode_to_senary, decode_from_senary, is_senary
  |                                       ^^^^^^^^^^^^^^^^ F401
7 | from src.crypto.constants import SEIGR_CELL_ID_PREFIX, SEIGR_VERSION
  |
  = help: Remove unused import

src/crypto/integrity_verification.py:6:57: F401 [*] `src.crypto.encoding_utils.decode_from_senary` imported but unused
  |
4 | from src.crypto.hypha_crypt import HyphaCrypt
5 | from src.crypto.hash_utils import hypha_hash, verify_hash
6 | from src.crypto.encoding_utils import encode_to_senary, decode_from_senary, is_senary
  |                                                         ^^^^^^^^^^^^^^^^^^ F401
7 | from src.crypto.constants import SEIGR_CELL_ID_PREFIX, SEIGR_VERSION
  |
  = help: Remove unused import

src/crypto/integrity_verification.py:7:56: F401 [*] `src.crypto.constants.SEIGR_VERSION` imported but unused
  |
5 | from src.crypto.hash_utils import hypha_hash, verify_hash
6 | from src.crypto.encoding_utils import encode_to_senary, decode_from_senary, is_senary
7 | from src.crypto.constants import SEIGR_CELL_ID_PREFIX, SEIGR_VERSION
  |                                                        ^^^^^^^^^^^^^ F401
8 | 
9 | from src.seigr_protocol.compiled.integrity_pb2 import (
  |
  = help: Remove unused import: `src.crypto.constants.SEIGR_VERSION`

src/crypto/integrity_verification.py:16:5: F401 [*] `src.seigr_protocol.compiled.error_handling_pb2.ErrorResolutionStrategy` imported but unused
   |
14 |     ErrorLogEntry,
15 |     ErrorSeverity,
16 |     ErrorResolutionStrategy,
   |     ^^^^^^^^^^^^^^^^^^^^^^^ F401
17 | )
18 | from src.seigr_protocol.compiled.alerting_pb2 import Alert, AlertType, AlertSeverity
   |
   = help: Remove unused import: `src.seigr_protocol.compiled.error_handling_pb2.ErrorResolutionStrategy`

src/crypto/integrity_verification.py:63:101: E501 Line too long (103 > 100)
   |
61 |         integrity_hash = hypha_hash(data, salt=salt, senary_output=use_senary)
62 |         logger.info(
63 |             f"{SEIGR_CELL_ID_PREFIX} Generated integrity hash: {integrity_hash} (senary: {use_senary})"
   |                                                                                                     ^^^ E501
64 |         )
65 |         return integrity_hash
   |

src/crypto/integrity_verification.py:93:101: E501 Line too long (103 > 100)
   |
91 |         match = verify_hash(data, expected_hash, salt=salt, senary_output=use_senary)
92 |         logger.info(
93 |             f"{SEIGR_CELL_ID_PREFIX} Integrity verification result: {'Match' if match else 'No Match'}"
   |                                                                                                     ^^^ E501
94 |         )
95 |         return match
   |

src/crypto/integrity_verification.py:211:5: F841 Local variable `error_log` is assigned to but never used
    |
210 | def _log_error(error_id, message, exception):
211 |     error_log = ErrorLogEntry(
    |     ^^^^^^^^^ F841
212 |         error_id=error_id,
213 |         severity=ErrorSeverity.ERROR_SEVERITY_HIGH,
    |
    = help: Remove assignment to unused variable `error_log`

src/crypto/key_derivation.py:9:1: I001 [*] Import block is un-sorted or un-formatted
   |
 7 |   """
 8 |   
 9 | / import logging
10 | | import os
11 | | import hashlib
12 | | from cryptography.hazmat.primitives.kdf.pbkdf2 import PBKDF2HMAC
13 | | from cryptography.hazmat.primitives import hashes
14 | | from cryptography.hazmat.backends import default_backend
15 | | 
16 | | from src.crypto.helpers import encode_to_senary
17 | | from src.crypto.constants import SEIGR_CELL_ID_PREFIX, SALT_SIZE
18 | | 
19 | | logger = logging.getLogger(__name__)
   | |_^ I001
20 |   
21 |   ### 🔑 Key Derivation Utilities ###
   |
   = help: Organize imports

src/crypto/key_management.py:3:1: I001 [*] Import block is un-sorted or un-formatted
   |
 1 |   # src/crypto/key_management.py
 2 |   
 3 | / import logging
 4 | | import os
 5 | | import uuid
 6 | | from typing import Tuple
 7 | | from datetime import datetime, timezone
 8 | | 
 9 | | from cryptography.hazmat.primitives import serialization
10 | | from cryptography.hazmat.primitives.asymmetric import rsa
11 | | from cryptography.hazmat.backends import default_backend
12 | | from cryptography.hazmat.primitives.asymmetric.rsa import RSAPrivateKey, RSAPublicKey
13 | | 
14 | | from src.crypto.helpers import encode_to_senary
15 | | from src.crypto.constants import SEIGR_CELL_ID_PREFIX, SEIGR_VERSION
16 | | from src.crypto.secure_logging import SecureLogger
17 | | from src.seigr_protocol.compiled.encryption_pb2 import AsymmetricKeyPair
18 | | from src.seigr_protocol.compiled.audit_logging_pb2 import LogLevel, LogCategory
19 | | from src.seigr_protocol.compiled.error_handling_pb2 import (
20 | |     ErrorLogEntry,
21 | |     ErrorSeverity,
22 | |     ErrorResolutionStrategy,
23 | | )
24 | | from src.seigr_protocol.compiled.alerting_pb2 import Alert, AlertType, AlertSeverity
25 | | 
26 | | logger = logging.getLogger(__name__)
   | |_^ I001
27 |   secure_logger = SecureLogger()
   |
   = help: Organize imports

src/crypto/key_management.py:14:32: F401 [*] `src.crypto.helpers.encode_to_senary` imported but unused
   |
12 | from cryptography.hazmat.primitives.asymmetric.rsa import RSAPrivateKey, RSAPublicKey
13 | 
14 | from src.crypto.helpers import encode_to_senary
   |                                ^^^^^^^^^^^^^^^^ F401
15 | from src.crypto.constants import SEIGR_CELL_ID_PREFIX, SEIGR_VERSION
16 | from src.crypto.secure_logging import SecureLogger
   |
   = help: Remove unused import: `src.crypto.helpers.encode_to_senary`

src/crypto/key_management.py:15:56: F401 [*] `src.crypto.constants.SEIGR_VERSION` imported but unused
   |
14 | from src.crypto.helpers import encode_to_senary
15 | from src.crypto.constants import SEIGR_CELL_ID_PREFIX, SEIGR_VERSION
   |                                                        ^^^^^^^^^^^^^ F401
16 | from src.crypto.secure_logging import SecureLogger
17 | from src.seigr_protocol.compiled.encryption_pb2 import AsymmetricKeyPair
   |
   = help: Remove unused import: `src.crypto.constants.SEIGR_VERSION`

src/crypto/key_management.py:18:59: F401 [*] `src.seigr_protocol.compiled.audit_logging_pb2.LogLevel` imported but unused
   |
16 | from src.crypto.secure_logging import SecureLogger
17 | from src.seigr_protocol.compiled.encryption_pb2 import AsymmetricKeyPair
18 | from src.seigr_protocol.compiled.audit_logging_pb2 import LogLevel, LogCategory
   |                                                           ^^^^^^^^ F401
19 | from src.seigr_protocol.compiled.error_handling_pb2 import (
20 |     ErrorLogEntry,
   |
   = help: Remove unused import

src/crypto/key_management.py:18:69: F401 [*] `src.seigr_protocol.compiled.audit_logging_pb2.LogCategory` imported but unused
   |
16 | from src.crypto.secure_logging import SecureLogger
17 | from src.seigr_protocol.compiled.encryption_pb2 import AsymmetricKeyPair
18 | from src.seigr_protocol.compiled.audit_logging_pb2 import LogLevel, LogCategory
   |                                                                     ^^^^^^^^^^^ F401
19 | from src.seigr_protocol.compiled.error_handling_pb2 import (
20 |     ErrorLogEntry,
   |
   = help: Remove unused import

src/crypto/key_management.py:22:5: F401 [*] `src.seigr_protocol.compiled.error_handling_pb2.ErrorResolutionStrategy` imported but unused
   |
20 |     ErrorLogEntry,
21 |     ErrorSeverity,
22 |     ErrorResolutionStrategy,
   |     ^^^^^^^^^^^^^^^^^^^^^^^ F401
23 | )
24 | from src.seigr_protocol.compiled.alerting_pb2 import Alert, AlertType, AlertSeverity
   |
   = help: Remove unused import: `src.seigr_protocol.compiled.error_handling_pb2.ErrorResolutionStrategy`

src/crypto/key_management.py:159:101: E501 Line too long (114 > 100)
    |
157 | ### 🔄 Key Rotation ###
158 | 
159 | def rotate_key_pair(existing_key_id: str, new_key_size: int = 2048, directory: str = "keys") -> AsymmetricKeyPair:
    |                                                                                                     ^^^^^^^^^^^^^^ E501
160 |     """
161 |     Rotates an existing RSA key pair.
    |

src/crypto/key_management.py:190:5: F841 Local variable `error_log` is assigned to but never used
    |
189 | def _log_error(error_id, message, exception):
190 |     error_log = ErrorLogEntry(
    |     ^^^^^^^^^ F841
191 |         error_id=error_id,
192 |         severity=ErrorSeverity.ERROR_SEVERITY_HIGH,
    |
    = help: Remove assignment to unused variable `error_log`

src/crypto/protocol_integrity.py:3:1: I001 [*] Import block is un-sorted or un-formatted
   |
 1 |   # src/crypto/protocol_integrity.py
 2 |   
 3 | / import logging
 4 | | from datetime import datetime, timezone, timedelta
 5 | | from typing import Dict, Any
 6 | | 
 7 | | from src.crypto.hypha_crypt import HyphaCrypt
 8 | | from src.crypto.integrity_verification import verify_integrity
 9 | | from src.crypto.helpers import is_senary, encode_to_senary
10 | | from src.seigr_protocol.compiled.integrity_pb2 import (
11 | |     IntegrityCheck,
12 | |     IntegrityReport,
13 | |     MonitoringSummary,
14 | |     VerificationStatus,
15 | | )
16 | | from src.seigr_protocol.compiled.error_handling_pb2 import (
17 | |     ErrorLogEntry,
18 | |     ErrorSeverity,
19 | |     ErrorResolutionStrategy,
20 | | )
21 | | from src.seigr_protocol.compiled.alerting_pb2 import Alert, AlertType, AlertSeverity
22 | | from src.crypto.constants import SEIGR_CELL_ID_PREFIX, SEIGR_VERSION
23 | | 
24 | | # Initialize logger
   | |_^ I001
25 |   logger = logging.getLogger(__name__)
   |
   = help: Organize imports

src/crypto/protocol_integrity.py:8:47: F401 [*] `src.crypto.integrity_verification.verify_integrity` imported but unused
   |
 7 | from src.crypto.hypha_crypt import HyphaCrypt
 8 | from src.crypto.integrity_verification import verify_integrity
   |                                               ^^^^^^^^^^^^^^^^ F401
 9 | from src.crypto.helpers import is_senary, encode_to_senary
10 | from src.seigr_protocol.compiled.integrity_pb2 import (
   |
   = help: Remove unused import: `src.crypto.integrity_verification.verify_integrity`

src/crypto/protocol_integrity.py:9:32: F401 [*] `src.crypto.helpers.is_senary` imported but unused
   |
 7 | from src.crypto.hypha_crypt import HyphaCrypt
 8 | from src.crypto.integrity_verification import verify_integrity
 9 | from src.crypto.helpers import is_senary, encode_to_senary
   |                                ^^^^^^^^^ F401
10 | from src.seigr_protocol.compiled.integrity_pb2 import (
11 |     IntegrityCheck,
   |
   = help: Remove unused import

src/crypto/protocol_integrity.py:9:43: F401 [*] `src.crypto.helpers.encode_to_senary` imported but unused
   |
 7 | from src.crypto.hypha_crypt import HyphaCrypt
 8 | from src.crypto.integrity_verification import verify_integrity
 9 | from src.crypto.helpers import is_senary, encode_to_senary
   |                                           ^^^^^^^^^^^^^^^^ F401
10 | from src.seigr_protocol.compiled.integrity_pb2 import (
11 |     IntegrityCheck,
   |
   = help: Remove unused import

src/crypto/protocol_integrity.py:19:5: F401 [*] `src.seigr_protocol.compiled.error_handling_pb2.ErrorResolutionStrategy` imported but unused
   |
17 |     ErrorLogEntry,
18 |     ErrorSeverity,
19 |     ErrorResolutionStrategy,
   |     ^^^^^^^^^^^^^^^^^^^^^^^ F401
20 | )
21 | from src.seigr_protocol.compiled.alerting_pb2 import Alert, AlertType, AlertSeverity
   |
   = help: Remove unused import: `src.seigr_protocol.compiled.error_handling_pb2.ErrorResolutionStrategy`

src/crypto/protocol_integrity.py:85:13: F841 Local variable `hierarchy` is assigned to but never used
   |
83 |         try:
84 |             primary_hash = self.crypt_instance.compute_primary_hash()
85 |             hierarchy = self.crypt_instance.compute_layered_hashes()
   |             ^^^^^^^^^ F841
86 | 
87 |             integrity_check = IntegrityCheck(
   |
   = help: Remove assignment to unused variable `hierarchy`

src/crypto/protocol_integrity.py:206:9: F841 Local variable `error_log` is assigned to but never used
    |
205 |     def _log_error(self, error_id: str, message: str, exception: Exception):
206 |         error_log = ErrorLogEntry(
    |         ^^^^^^^^^ F841
207 |             error_id=f"{SEIGR_CELL_ID_PREFIX}_{error_id}",
208 |             severity=ErrorSeverity.ERROR_SEVERITY_HIGH,
    |
    = help: Remove assignment to unused variable `error_log`

src/crypto/random_utils.py:3:1: I001 [*] Import block is un-sorted or un-formatted
   |
 1 |   # src/crypto/random_utils.py
 2 |   
 3 | / import os
 4 | | import secrets
 5 | | import logging
 6 | | from src.crypto.helpers import encode_to_senary
 7 | | 
 8 | | from src.seigr_protocol.compiled.error_handling_pb2 import (
 9 | |     ErrorLogEntry,
10 | |     ErrorSeverity,
11 | |     ErrorResolutionStrategy,
12 | | )
13 | | from src.crypto.constants import SEIGR_CELL_ID_PREFIX
14 | | 
15 | | logger = logging.getLogger(__name__)
   | |_^ I001
   |
   = help: Organize imports

src/crypto/random_utils.py:161:5: F841 Local variable `error_log` is assigned to but never used
    |
159 |         exception (Exception): Exception details.
160 |     """
161 |     error_log = ErrorLogEntry(
    |     ^^^^^^^^^ F841
162 |         error_id=f"{SEIGR_CELL_ID_PREFIX}_{error_id}",
163 |         severity=ErrorSeverity.ERROR_SEVERITY_HIGH,
    |
    = help: Remove assignment to unused variable `error_log`

src/crypto/secure_logging.py:3:1: I001 [*] Import block is un-sorted or un-formatted
   |
 1 |   # src/crypto/secure_logging.py
 2 |   
 3 | / import logging
 4 | | from datetime import datetime, timezone
 5 | | from cryptography.fernet import Fernet
 6 | | 
 7 | | from src.crypto.key_derivation import generate_salt, derive_key
 8 | | from src.crypto.helpers import encode_to_senary, decode_from_senary
 9 | | from src.seigr_protocol.compiled.audit_logging_pb2 import (
10 | |     AuditLogEntry,
11 | |     LogLevel,
12 | |     LogCategory,
13 | | )
14 | | from src.seigr_protocol.compiled.error_handling_pb2 import (
15 | |     ErrorLogEntry,
16 | |     ErrorSeverity,
17 | |     ErrorResolutionStrategy,
18 | | )
19 | | from src.seigr_protocol.compiled.alerting_pb2 import Alert, AlertType, AlertSeverity
20 | | from src.crypto.constants import SEIGR_CELL_ID_PREFIX
21 | | 
22 | | # Initialize Logger
   | |_^ I001
23 |   logger = logging.getLogger("secure_logger")
24 |   logging.basicConfig(
   |
   = help: Organize imports

src/crypto/secure_logging.py:7:39: F401 [*] `src.crypto.key_derivation.generate_salt` imported but unused
  |
5 | from cryptography.fernet import Fernet
6 | 
7 | from src.crypto.key_derivation import generate_salt, derive_key
  |                                       ^^^^^^^^^^^^^ F401
8 | from src.crypto.helpers import encode_to_senary, decode_from_senary
9 | from src.seigr_protocol.compiled.audit_logging_pb2 import (
  |
  = help: Remove unused import

src/crypto/secure_logging.py:7:54: F401 [*] `src.crypto.key_derivation.derive_key` imported but unused
  |
5 | from cryptography.fernet import Fernet
6 | 
7 | from src.crypto.key_derivation import generate_salt, derive_key
  |                                                      ^^^^^^^^^^ F401
8 | from src.crypto.helpers import encode_to_senary, decode_from_senary
9 | from src.seigr_protocol.compiled.audit_logging_pb2 import (
  |
  = help: Remove unused import

src/crypto/secure_logging.py:17:5: F401 [*] `src.seigr_protocol.compiled.error_handling_pb2.ErrorResolutionStrategy` imported but unused
   |
15 |     ErrorLogEntry,
16 |     ErrorSeverity,
17 |     ErrorResolutionStrategy,
   |     ^^^^^^^^^^^^^^^^^^^^^^^ F401
18 | )
19 | from src.seigr_protocol.compiled.alerting_pb2 import Alert, AlertType, AlertSeverity
   |
   = help: Remove unused import: `src.seigr_protocol.compiled.error_handling_pb2.ErrorResolutionStrategy`

src/crypto/secure_logging.py:19:54: F401 [*] `src.seigr_protocol.compiled.alerting_pb2.Alert` imported but unused
   |
17 |     ErrorResolutionStrategy,
18 | )
19 | from src.seigr_protocol.compiled.alerting_pb2 import Alert, AlertType, AlertSeverity
   |                                                      ^^^^^ F401
20 | from src.crypto.constants import SEIGR_CELL_ID_PREFIX
   |
   = help: Remove unused import

src/crypto/secure_logging.py:19:61: F401 [*] `src.seigr_protocol.compiled.alerting_pb2.AlertType` imported but unused
   |
17 |     ErrorResolutionStrategy,
18 | )
19 | from src.seigr_protocol.compiled.alerting_pb2 import Alert, AlertType, AlertSeverity
   |                                                             ^^^^^^^^^ F401
20 | from src.crypto.constants import SEIGR_CELL_ID_PREFIX
   |
   = help: Remove unused import

src/crypto/secure_logging.py:19:72: F401 [*] `src.seigr_protocol.compiled.alerting_pb2.AlertSeverity` imported but unused
   |
17 |     ErrorResolutionStrategy,
18 | )
19 | from src.seigr_protocol.compiled.alerting_pb2 import Alert, AlertType, AlertSeverity
   |                                                                        ^^^^^^^^^^^^^ F401
20 | from src.crypto.constants import SEIGR_CELL_ID_PREFIX
   |
   = help: Remove unused import

src/crypto/secure_logging.py:36:12: PLW0603 Using the global statement to update `_secure_logger_instance` is discouraged
   |
34 | def _initialize_secure_logger():
35 |     """Initialize a singleton instance of SecureLogger."""
36 |     global _secure_logger_instance
   |            ^^^^^^^^^^^^^^^^^^^^^^^ PLW0603
37 |     if _secure_logger_instance is None:
38 |         _secure_logger_instance = SecureLogger()
   |

src/crypto/secure_logging.py:171:101: E501 Line too long (132 > 100)
    |
169 |             )
170 | 
171 |             log_message = f"[{LogLevel.Name(audit_entry.log_level)}] {LogCategory.Name(audit_entry.category)}: {audit_entry.action}"
    |                                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E501
172 |             logger.info(log_message)
173 |             return audit_entry
    |

src/crypto/secure_logging.py:188:9: F841 Local variable `error_log` is assigned to but never used
    |
187 |     def _log_error(self, error_id: str, message: str, exception: Exception):
188 |         error_log = ErrorLogEntry(
    |         ^^^^^^^^^ F841
189 |             error_id=f"{SEIGR_CELL_ID_PREFIX}_{error_id}",
190 |             severity=ErrorSeverity.ERROR_SEVERITY_HIGH,
    |
    = help: Remove assignment to unused variable `error_log`

src/crypto/session_manager.py:3:1: I001 [*] Import block is un-sorted or un-formatted
   |
 1 |   # src/crypto/session_manager.py
 2 |   
 3 | / import os
 4 | | import uuid
 5 | | import json
 6 | | import logging
 7 | | from datetime import datetime, timezone, timedelta
 8 | | from typing import Optional, Dict
 9 | | 
10 | | from src.crypto.helpers import encode_to_senary, decode_from_senary, apply_salt
11 | | from src.crypto.key_derivation import derive_key, generate_salt
12 | | from src.crypto.constants import SEIGR_CELL_ID_PREFIX
13 | | from src.seigr_protocol.compiled.error_handling_pb2 import (
14 | |     ErrorLogEntry,
15 | |     ErrorSeverity,
16 | |     ErrorResolutionStrategy,
17 | | )
18 | | 
19 | | logger = logging.getLogger(__name__)
   | |_^ I001
   |
   = help: Organize imports

src/crypto/session_manager.py:10:32: F401 [*] `src.crypto.helpers.encode_to_senary` imported but unused
   |
 8 | from typing import Optional, Dict
 9 | 
10 | from src.crypto.helpers import encode_to_senary, decode_from_senary, apply_salt
   |                                ^^^^^^^^^^^^^^^^ F401
11 | from src.crypto.key_derivation import derive_key, generate_salt
12 | from src.crypto.constants import SEIGR_CELL_ID_PREFIX
   |
   = help: Remove unused import

src/crypto/session_manager.py:10:50: F401 [*] `src.crypto.helpers.decode_from_senary` imported but unused
   |
 8 | from typing import Optional, Dict
 9 | 
10 | from src.crypto.helpers import encode_to_senary, decode_from_senary, apply_salt
   |                                                  ^^^^^^^^^^^^^^^^^^ F401
11 | from src.crypto.key_derivation import derive_key, generate_salt
12 | from src.crypto.constants import SEIGR_CELL_ID_PREFIX
   |
   = help: Remove unused import

src/crypto/session_manager.py:10:70: F401 [*] `src.crypto.helpers.apply_salt` imported but unused
   |
 8 | from typing import Optional, Dict
 9 | 
10 | from src.crypto.helpers import encode_to_senary, decode_from_senary, apply_salt
   |                                                                      ^^^^^^^^^^ F401
11 | from src.crypto.key_derivation import derive_key, generate_salt
12 | from src.crypto.constants import SEIGR_CELL_ID_PREFIX
   |
   = help: Remove unused import

src/crypto/session_manager.py:51:101: E501 Line too long (139 > 100)
   |
49 |         os.makedirs(self.session_store, exist_ok=True)
50 |         logger.debug(
51 |             f"{SEIGR_CELL_ID_PREFIX} SessionManager initialized. Store: {session_store}, Timeout: {session_timeout}s, Senary: {use_senary}"
   |                                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E501
52 |         )
   |

src/crypto/session_manager.py:118:101: E501 Line too long (105 > 100)
    |
116 |                         if datetime.now(timezone.utc) < expires_at:
117 |                             logger.info(
118 |                                 f"{SEIGR_CELL_ID_PREFIX} Session validated: {session_data['session_id']}"
    |                                                                                                     ^^^^^ E501
119 |                             )
120 |                             return True
    |

src/crypto/session_manager.py:123:101: E501 Line too long (103 > 100)
    |
121 |                         else:
122 |                             logger.warning(
123 |                                 f"{SEIGR_CELL_ID_PREFIX} Session expired: {session_data['session_id']}"
    |                                                                                                     ^^^ E501
124 |                             )
125 |                             return False
    |

src/crypto/session_manager.py:155:101: E501 Line too long (103 > 100)
    |
153 |                         os.remove(os.path.join(self.session_store, session_file))
154 |                         logger.info(
155 |                             f"{SEIGR_CELL_ID_PREFIX} Session invalidated: {session_data['session_id']}"
    |                                                                                                     ^^^ E501
156 |                         )
157 |                         return True
    |

src/crypto/session_manager.py:182:101: E501 Line too long (107 > 100)
    |
180 |                         cleaned_count += 1
181 |                         logger.info(
182 |                             f"{SEIGR_CELL_ID_PREFIX} Expired session cleaned: {session_data['session_id']}"
    |                                                                                                     ^^^^^^^ E501
183 |                         )
184 |             return cleaned_count
    |

src/crypto/session_manager.py:199:9: F841 Local variable `error_log` is assigned to but never used
    |
197 |             exception (Exception): The raised exception.
198 |         """
199 |         error_log = ErrorLogEntry(
    |         ^^^^^^^^^ F841
200 |             error_id=f"{SEIGR_CELL_ID_PREFIX}_{error_id}",
201 |             severity=ErrorSeverity.ERROR_SEVERITY_HIGH,
    |
    = help: Remove assignment to unused variable `error_log`

src/crypto/session_manager.py:217:12: PLW0603 Using the global statement to update `_session_manager_instance` is discouraged
    |
216 | def _initialize_session_manager():
217 |     global _session_manager_instance
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^ PLW0603
218 |     if _session_manager_instance is None:
219 |         _session_manager_instance = SessionManager()
    |

src/crypto/symmetric_utils.py:3:1: I001 [*] Import block is un-sorted or un-formatted
   |
 1 |   # src/crypto/symmetric_utils.py
 2 |   
 3 | / import logging
 4 | | from datetime import datetime, timezone
 5 | | from cryptography.fernet import Fernet, InvalidToken
 6 | | 
 7 | | from src.crypto.key_derivation import derive_key, generate_salt
 8 | | from src.crypto.helpers import encode_to_senary, decode_from_senary
 9 | | from src.seigr_protocol.compiled.audit_logging_pb2 import (
10 | |     AuditLogEntry,
11 | |     LogLevel,
12 | |     LogCategory,
13 | | )
14 | | from src.seigr_protocol.compiled.error_handling_pb2 import (
15 | |     ErrorLogEntry,
16 | |     ErrorSeverity,
17 | |     ErrorResolutionStrategy,
18 | | )
19 | | from src.seigr_protocol.compiled.alerting_pb2 import Alert, AlertType, AlertSeverity
20 | | from src.crypto.constants import SEIGR_CELL_ID_PREFIX
21 | | 
22 | | # Logger Initialization
   | |_^ I001
23 |   logger = logging.getLogger("symmetric_utils")
24 |   logging.basicConfig(
   |
   = help: Organize imports

src/crypto/symmetric_utils.py:8:50: F401 [*] `src.crypto.helpers.decode_from_senary` imported but unused
   |
 7 | from src.crypto.key_derivation import derive_key, generate_salt
 8 | from src.crypto.helpers import encode_to_senary, decode_from_senary
   |                                                  ^^^^^^^^^^^^^^^^^^ F401
 9 | from src.seigr_protocol.compiled.audit_logging_pb2 import (
10 |     AuditLogEntry,
   |
   = help: Remove unused import: `src.crypto.helpers.decode_from_senary`

src/crypto/symmetric_utils.py:19:54: F401 [*] `src.seigr_protocol.compiled.alerting_pb2.Alert` imported but unused
   |
17 |     ErrorResolutionStrategy,
18 | )
19 | from src.seigr_protocol.compiled.alerting_pb2 import Alert, AlertType, AlertSeverity
   |                                                      ^^^^^ F401
20 | from src.crypto.constants import SEIGR_CELL_ID_PREFIX
   |
   = help: Remove unused import

src/crypto/symmetric_utils.py:19:61: F401 [*] `src.seigr_protocol.compiled.alerting_pb2.AlertType` imported but unused
   |
17 |     ErrorResolutionStrategy,
18 | )
19 | from src.seigr_protocol.compiled.alerting_pb2 import Alert, AlertType, AlertSeverity
   |                                                             ^^^^^^^^^ F401
20 | from src.crypto.constants import SEIGR_CELL_ID_PREFIX
   |
   = help: Remove unused import

src/crypto/symmetric_utils.py:19:72: F401 [*] `src.seigr_protocol.compiled.alerting_pb2.AlertSeverity` imported but unused
   |
17 |     ErrorResolutionStrategy,
18 | )
19 | from src.seigr_protocol.compiled.alerting_pb2 import Alert, AlertType, AlertSeverity
   |                                                                        ^^^^^^^^^^^^^ F401
20 | from src.crypto.constants import SEIGR_CELL_ID_PREFIX
   |
   = help: Remove unused import

src/crypto/symmetric_utils.py:35:12: PLW0603 Using the global statement to update `_symmetric_utils_instance` is discouraged
   |
34 | def _initialize_symmetric_utils(encryption_key=None, use_senary=False):
35 |     global _symmetric_utils_instance
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^ PLW0603
36 |     if _symmetric_utils_instance is None:
37 |         _symmetric_utils_instance = SymmetricUtils(
   |

src/crypto/symmetric_utils.py:143:9: F841 Local variable `logged_data` is assigned to but never used
    |
141 |         message = "Data encrypted securely." if not sensitive else "Sensitive data encrypted."
142 | 
143 |         logged_data = (
    |         ^^^^^^^^^^^ F841
144 |             encode_to_senary(data) if sensitive and self.use_senary else data[:10]
145 |         )
    |
    = help: Remove assignment to unused variable `logged_data`

src/crypto/symmetric_utils.py:166:9: F841 Local variable `logged_data` is assigned to but never used
    |
164 |         message = "Data decrypted securely." if not sensitive else "Sensitive data decrypted."
165 | 
166 |         logged_data = (
    |         ^^^^^^^^^^^ F841
167 |             encode_to_senary(encrypted_data)
168 |             if sensitive and self.use_senary
    |
    = help: Remove assignment to unused variable `logged_data`

src/crypto/threat_detection.py:3:1: I001 [*] Import block is un-sorted or un-formatted
   |
 1 |   # src/crypto/threat_detection.py
 2 |   
 3 | / import logging
 4 | | import uuid
 5 | | from datetime import datetime, timezone
 6 | | from typing import Dict, Any, List
 7 | | 
 8 | | from src.crypto.hash_utils import generate_hash, verify_hash
 9 | | from src.crypto.constants import SEIGR_CELL_ID_PREFIX
10 | | from src.crypto.helpers import encode_to_senary, decode_from_senary
11 | | from src.immune_system.threat_response import ThreatResponseManager  # Adjusted Import
12 | | from src.seigr_protocol.compiled.common_pb2 import (
13 | |     ThreatLevel,
14 | |     ThreatDetectionLog,
15 | |     StandardResponse,
16 | | )
17 | | from src.seigr_protocol.compiled.error_handling_pb2 import (
18 | |     ErrorLogEntry,
19 | |     ErrorSeverity,
20 | |     ErrorResolutionStrategy,
21 | | )
22 | | 
23 | | logger = logging.getLogger(__name__)
   | |_^ I001
   |
   = help: Organize imports

src/crypto/threat_detection.py:8:50: F401 [*] `src.crypto.hash_utils.verify_hash` imported but unused
   |
 6 | from typing import Dict, Any, List
 7 | 
 8 | from src.crypto.hash_utils import generate_hash, verify_hash
   |                                                  ^^^^^^^^^^^ F401
 9 | from src.crypto.constants import SEIGR_CELL_ID_PREFIX
10 | from src.crypto.helpers import encode_to_senary, decode_from_senary
   |
   = help: Remove unused import: `src.crypto.hash_utils.verify_hash`

src/crypto/threat_detection.py:10:32: F401 [*] `src.crypto.helpers.encode_to_senary` imported but unused
   |
 8 | from src.crypto.hash_utils import generate_hash, verify_hash
 9 | from src.crypto.constants import SEIGR_CELL_ID_PREFIX
10 | from src.crypto.helpers import encode_to_senary, decode_from_senary
   |                                ^^^^^^^^^^^^^^^^ F401
11 | from src.immune_system.threat_response import ThreatResponseManager  # Adjusted Import
12 | from src.seigr_protocol.compiled.common_pb2 import (
   |
   = help: Remove unused import

src/crypto/threat_detection.py:10:50: F401 [*] `src.crypto.helpers.decode_from_senary` imported but unused
   |
 8 | from src.crypto.hash_utils import generate_hash, verify_hash
 9 | from src.crypto.constants import SEIGR_CELL_ID_PREFIX
10 | from src.crypto.helpers import encode_to_senary, decode_from_senary
   |                                                  ^^^^^^^^^^^^^^^^^^ F401
11 | from src.immune_system.threat_response import ThreatResponseManager  # Adjusted Import
12 | from src.seigr_protocol.compiled.common_pb2 import (
   |
   = help: Remove unused import

src/crypto/threat_detection.py:45:101: E501 Line too long (109 > 100)
   |
43 |         logger.debug(f"{SEIGR_CELL_ID_PREFIX} ThreatDetectionEngine initialized.")
44 | 
45 |     def detect_signature_threat(self, data: bytes, known_threat_signatures: List[str]) -> ThreatDetectionLog:
   |                                                                                                     ^^^^^^^^^ E501
46 |         """
47 |         Detects threats based on known hash signatures.
   |

src/crypto/threat_detection.py:59:101: E501 Line too long (109 > 100)
   |
57 |                     mitigated=False,
58 |                 )
59 |                 logger.warning(f"{SEIGR_CELL_ID_PREFIX} Threat detected via signature analysis: {data_hash}")
   |                                                                                                     ^^^^^^^^^ E501
60 |                 self.response_manager.handle_threat(threat_event)
61 |                 return threat_event
   |

src/crypto/threat_detection.py:65:101: E501 Line too long (102 > 100)
   |
63 |             return None
64 |         except Exception as e:
65 |             self._log_error("signature_threat_detection_fail", "Failed to detect signature threat", e)
   |                                                                                                     ^^ E501
66 |             raise ValueError("Signature threat detection failed.") from e
   |

src/crypto/threat_detection.py:83:101: E501 Line too long (101 > 100)
   |
81 |                     mitigated=False,
82 |                 )
83 |                 logger.warning(f"{SEIGR_CELL_ID_PREFIX} Anomaly detected with score {anomaly_score}")
   |                                                                                                     ^ E501
84 |                 self.response_manager.handle_threat(threat_event)
85 |                 return threat_event
   |

src/crypto/threat_detection.py:118:101: E501 Line too long (103 > 100)
    |
117 |     def log_standard_response(
118 |         self, status: str, message: str, threat_level: ThreatLevel = ThreatLevel.THREAT_LEVEL_UNDEFINED
    |                                                                                                     ^^^ E501
119 |     ) -> StandardResponse:
120 |         """
    |

src/crypto/threat_detection.py:137:9: F841 Local variable `error_log` is assigned to but never used
    |
135 |         Logs an error using a structured protocol buffer entry.
136 |         """
137 |         error_log = ErrorLogEntry(
    |         ^^^^^^^^^ F841
138 |             error_id=f"{SEIGR_CELL_ID_PREFIX}_{error_id}",
139 |             severity=ErrorSeverity.ERROR_SEVERITY_HIGH,
    |
    = help: Remove assignment to unused variable `error_log`

src/dot_seigr/access_control.py:1:1: I001 [*] Import block is un-sorted or un-formatted
  |
1 | / from datetime import datetime, timezone
2 | | import logging
3 | | from typing import Dict, List, Optional
4 | | 
5 | | logger = logging.getLogger(__name__)
  | |_^ I001
  |
  = help: Organize imports

src/dot_seigr/access_control.py:3:32: F401 [*] `typing.Optional` imported but unused
  |
1 | from datetime import datetime, timezone
2 | import logging
3 | from typing import Dict, List, Optional
  |                                ^^^^^^^^ F401
4 | 
5 | logger = logging.getLogger(__name__)
  |
  = help: Remove unused import: `typing.Optional`

src/dot_seigr/access_control.py:52:101: E501 Line too long (103 > 100)
   |
50 |         }
51 |         logger.debug(
52 |             f"AccessControlManager initialized for creator {creator_id} with default admin permissions"
   |                                                                                                     ^^^ E501
53 |         )
   |

src/dot_seigr/access_control.py:66:101: E501 Line too long (108 > 100)
   |
64 |         self.access_context["hyphen_access_history"].append(hyphen_id)
65 |         logger.debug(
66 |             f"Access recorded for hyphen {hyphen_id}. Total accesses: {self.access_context['access_count']}"
   |                                                                                                     ^^^^^^^^ E501
67 |         )
   |

src/dot_seigr/access_control.py:75:101: E501 Line too long (110 > 100)
   |
73 |         Args:
74 |             user_id (str): The user or node ID to add.
75 |             role (str): Role to assign (e.g., 'viewer', 'editor', 'admin', 'AI/ML_process', 'network_system').
   |                                                                                                     ^^^^^^^^^^ E501
76 | 
77 |         Raises:
   |

src/dot_seigr/access_control.py:115:101: E501 Line too long (111 > 100)
    |
113 |         Args:
114 |             user_id (str): The user or node ID to check.
115 |             permission (str): Permission to verify (e.g., "read", "write", "rollback", "analyze", "self_heal").
    |                                                                                                     ^^^^^^^^^^^ E501
116 | 
117 |         Returns:
    |

src/dot_seigr/capsule/seigr_coordinate.py:1:1: I001 [*] Import block is un-sorted or un-formatted
  |
1 | / import logging
2 | | from src.seigr_protocol.compiled.seed_dot_seigr_pb2 import CoordinateIndex
3 | | from src.crypto.hash_utils import hypha_hash
4 | | 
5 | | logger = logging.getLogger(__name__)
  | |_^ I001
  |
  = help: Organize imports

src/dot_seigr/capsule/seigr_coordinate.py:38:101: E501 Line too long (112 > 100)
   |
37 |         logger.info(
38 |             f"Initialized SeigrCoordinateManager for segment {self.index} with dimensions: {self.dimension_map}"
   |                                                                                                     ^^^^^^^^^^^^ E501
39 |         )
   |

src/dot_seigr/capsule/seigr_coordinate.py:102:101: E501 Line too long (130 > 100)
    |
100 |             if coord_value is None or not (min_val <= coord_value <= max_val):
101 |                 logger.warning(
102 |                     f"Coordinate {dim}={coord_value} out of bounds for segment {self.index}. Expected within {min_val}-{max_val}."
    |                                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E501
103 |                 )
104 |                 return False
    |

src/dot_seigr/capsule/seigr_coordinate.py:127:101: E501 Line too long (116 > 100)
    |
125 |         self.dimension_map[dim_name] = initial_value
126 |         logger.info(
127 |             f"Extended coordinates for segment {self.index} with new dimension '{dim_name}' set to {initial_value}."
    |                                                                                                     ^^^^^^^^^^^^^^^^ E501
128 |         )
    |

src/dot_seigr/capsule/seigr_encoder_decoder.py:1:1: I001 [*] Import block is un-sorted or un-formatted
   |
 1 | / import os
 2 | | import logging
 3 | | from dot_seigr.capsule.seigr_integrity import verify_integrity, compute_integrity
 4 | | from src.crypto.hypha_crypt import encode_to_senary, decode_from_senary
 5 | | from src.seigr_protocol.compiled.seed_dot_seigr_pb2 import (
 6 | |     SeigrCluster,
 7 | |     Segment,
 8 | |     FileMetadata,
 9 | | )
10 | | from dot_seigr.seigr_file import SeigrFile
11 | | 
12 | | logger = logging.getLogger(__name__)
   | |_^ I001
   |
   = help: Organize imports

src/dot_seigr/capsule/seigr_encoder_decoder.py:7:5: F401 [*] `src.seigr_protocol.compiled.seed_dot_seigr_pb2.Segment` imported but unused
  |
5 | from src.seigr_protocol.compiled.seed_dot_seigr_pb2 import (
6 |     SeigrCluster,
7 |     Segment,
  |     ^^^^^^^ F401
8 |     FileMetadata,
9 | )
  |
  = help: Remove unused import

src/dot_seigr/capsule/seigr_encoder_decoder.py:8:5: F401 [*] `src.seigr_protocol.compiled.seed_dot_seigr_pb2.FileMetadata` imported but unused
   |
 6 |     SeigrCluster,
 7 |     Segment,
 8 |     FileMetadata,
   |     ^^^^^^^^^^^^ F401
 9 | )
10 | from dot_seigr.seigr_file import SeigrFile
   |
   = help: Remove unused import

src/dot_seigr/capsule/seigr_encoder_decoder.py:117:101: E501 Line too long (106 > 100)
    |
115 |                     original_filename = cluster.file_metadata.original_filename
116 |                     original_extension = cluster.file_metadata.original_extension
117 |                     output_filename = f"{original_filename or 'decoded_output'}{original_extension or ''}"
    |                                                                                                     ^^^^^^ E501
118 | 
119 |                 # Retrieve and sort segments by index
    |

src/dot_seigr/capsule/seigr_integrity.py:1:1: I001 [*] Import block is un-sorted or un-formatted
   |
 1 | / import logging
 2 | | from src.crypto.hash_utils import hypha_hash
 3 | | from src.seigr_protocol.compiled.seed_dot_seigr_pb2 import (
 4 | |     SegmentMetadata,
 5 | |     LineageEntry,
 6 | |     FileMetadata,
 7 | |     AccessControlList,
 8 | |     TriggerEvent,
 9 | | )
10 | | 
11 | | logger = logging.getLogger(__name__)
   | |_^ I001
   |
   = help: Organize imports

src/dot_seigr/capsule/seigr_integrity.py:53:101: E501 Line too long (103 > 100)
   |
51 | def verify_segment_integrity(segment_metadata: SegmentMetadata, data: bytes) -> bool:
52 |     """
53 |     Verifies the integrity of a `.seigr` file segment by comparing computed data hash with stored hash.
   |                                                                                                     ^^^ E501
54 | 
55 |     Args:
   |

src/dot_seigr/capsule/seigr_integrity.py:70:101: E501 Line too long (150 > 100)
   |
68 |     else:
69 |         logger.warning(
70 |             f"Integrity check failed for segment '{segment_metadata.segment_hash}'. Expected: {segment_metadata.data_hash}, Got: {computed_data_hash}"
   |                                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E501
71 |         )
72 |         return False
   |

src/dot_seigr/capsule/seigr_integrity.py:80:101: E501 Line too long (102 > 100)
   |
79 |     Args:
80 |         lineage_entries (list[LineageEntry]): List of lineage entries representing the file’s history.
   |                                                                                                     ^^ E501
81 | 
82 |     Returns:
   |

src/dot_seigr/capsule/seigr_integrity.py:92:101: E501 Line too long (122 > 100)
   |
90 |         if entry.hash != expected_hash:
91 |             logger.error(
92 |                 f"Integrity check failed for lineage entry {i}. Expected hash: {expected_hash}, Stored hash: {entry.hash}"
   |                                                                                                     ^^^^^^^^^^^^^^^^^^^^^^ E501
93 |             )
94 |             all_entries_valid = False
   |

src/dot_seigr/capsule/seigr_integrity.py:109:101: E501 Line too long (106 > 100)
    |
107 | def verify_file_metadata_integrity(file_metadata: FileMetadata) -> bool:
108 |     """
109 |     Verifies integrity of file metadata by checking the hash of all segments against the stored file hash.
    |                                                                                                     ^^^^^^ E501
110 | 
111 |     Args:
    |

src/dot_seigr/capsule/seigr_integrity.py:127:101: E501 Line too long (115 > 100)
    |
125 |     else:
126 |         logger.warning(
127 |             f"File metadata integrity check failed. Expected: {file_metadata.file_hash}, Got: {computed_file_hash}"
    |                                                                                                     ^^^^^^^^^^^^^^^ E501
128 |         )
129 |         return False
    |

src/dot_seigr/capsule/seigr_integrity.py:150:101: E501 Line too long (111 > 100)
    |
148 |         if entry.hash != expected_hash:
149 |             logger.error(
150 |                 f"Partial integrity check failed at entry {i}. Expected: {expected_hash}, Stored: {entry.hash}"
    |                                                                                                     ^^^^^^^^^^^ E501
151 |             )
152 |             return False
    |

src/dot_seigr/capsule/seigr_integrity_manager.py:1:1: I001 [*] Import block is un-sorted or un-formatted
  |
1 | / import logging
2 | | from src.crypto.hash_utils import hypha_hash
3 | | 
4 | | logger = logging.getLogger(__name__)
  | |_^ I001
  |
  = help: Organize imports

src/dot_seigr/capsule/seigr_integrity_manager.py:34:101: E501 Line too long (107 > 100)
   |
33 |         Args:
34 |             metadata (dict): Metadata related to the data capsule, including segment and file-level hashes.
   |                                                                                                     ^^^^^^^ E501
35 | 
36 |         Returns:
   |

src/dot_seigr/capsule/seigr_integrity_manager.py:65:101: E501 Line too long (103 > 100)
   |
63 |         else:
64 |             logger.error(
65 |                 f"Integrity validation failed. Expected {reference_checksum}, got {computed_checksum}."
   |                                                                                                     ^^^ E501
66 |             )
67 |         return is_valid
   |

src/dot_seigr/capsule/seigr_integrity_manager.py:122:46: F821 Undefined name `loggingLOG_LEVEL_INFO`
    |
120 |             enable (bool): Whether to enable detailed logging (default is True).
121 |         """
122 |         level = logging.DEBUG if enable else loggingLOG_LEVEL_INFO
    |                                              ^^^^^^^^^^^^^^^^^^^^^ F821
123 |         logger.setLevel(level)
124 |         logger.info(
    |

src/dot_seigr/capsule/seigr_link_manager.py:52:101: E501 Line too long (103 > 100)
   |
50 |         """
51 |         logger.debug(
52 |             f"Retrieving links: Primary: {self.links['primary']}, Secondary: {self.links['secondary']}"
   |                                                                                                     ^^^ E501
53 |         )
54 |         return self.links
   |

src/dot_seigr/capsule/seigr_link_manager.py:58:101: E501 Line too long (103 > 100)
   |
56 |     def validate_links(self) -> bool:
57 |         """
58 |         Validates that primary and secondary links are set and adhere to basic formatting requirements.
   |                                                                                                     ^^^ E501
59 | 
60 |         Returns:
   |

src/dot_seigr/capsule/seigr_manager.py:1:1: I001 [*] Import block is un-sorted or un-formatted
   |
 1 | / import os
 2 | | import logging
 3 | | from datetime import datetime, timezone
 4 | | from src.crypto.hypha_crypt import hypha_hash
 5 | | from src.replication.replication_threat import ThreatBasedReplication
 6 | | from src.replication.replication_controller import ReplicationController
 7 | | from src.seigr_protocol.compiled.seed_dot_seigr_pb2 import SeedDotSeigr, SegmentMetadata
 8 | | from dot_seigr.capsule.seigr_integrity import verify_integrity
 9 | | 
10 | | logger = logging.getLogger(__name__)
   | |_^ I001
   |
   = help: Organize imports

src/dot_seigr/capsule/seigr_manager.py:7:74: F401 [*] `src.seigr_protocol.compiled.seed_dot_seigr_pb2.SegmentMetadata` imported but unused
  |
5 | from src.replication.replication_threat import ThreatBasedReplication
6 | from src.replication.replication_controller import ReplicationController
7 | from src.seigr_protocol.compiled.seed_dot_seigr_pb2 import SeedDotSeigr, SegmentMetadata
  |                                                                          ^^^^^^^^^^^^^^^ F401
8 | from dot_seigr.capsule.seigr_integrity import verify_integrity
  |
  = help: Remove unused import: `src.seigr_protocol.compiled.seed_dot_seigr_pb2.SegmentMetadata`

src/dot_seigr/capsule/seigr_manager.py:8:47: F401 [*] `dot_seigr.capsule.seigr_integrity.verify_integrity` imported but unused
   |
 6 | from src.replication.replication_controller import ReplicationController
 7 | from src.seigr_protocol.compiled.seed_dot_seigr_pb2 import SeedDotSeigr, SegmentMetadata
 8 | from dot_seigr.capsule.seigr_integrity import verify_integrity
   |                                               ^^^^^^^^^^^^^^^^ F401
 9 | 
10 | logger = logging.getLogger(__name__)
   |
   = help: Remove unused import: `dot_seigr.capsule.seigr_integrity.verify_integrity`

src/dot_seigr/capsule/seigr_manager.py:70:101: E501 Line too long (105 > 100)
   |
69 |         logger.info(
70 |             f"Segment {segment_hash} added to cluster at index {index} with threat level {threat_level}."
   |                                                                                                     ^^^^^ E501
71 |         )
   |

src/dot_seigr/capsule/seigr_manager.py:157:101: E501 Line too long (108 > 100)
    |
155 |         else:
156 |             logger.warning(
157 |                 f"Integrity verification failed for cluster {self.cluster_hash}. Expected {reference_hash}."
    |                                                                                                     ^^^^^^^^ E501
158 |             )
159 |         return is_valid
    |

src/dot_seigr/capsule/seigr_metadata.py:1:1: I001 [*] Import block is un-sorted or un-formatted
   |
 1 | / import logging
 2 | | from datetime import datetime, timezone
 3 | | from typing import List, Optional, Dict
 4 | | from src.crypto.hash_utils import hypha_hash
 5 | | from src.seigr_protocol.compiled.seed_dot_seigr_pb2 import (
 6 | |     FileMetadata,
 7 | |     SegmentMetadata,
 8 | |     CoordinateIndex,
 9 | |     AccessContext,
10 | |     TemporalLayer,
11 | | )
12 | | from src.dot_seigr.lineage.lineage import Lineage
13 | | from src.dot_seigr.lineage.lineage_entry import LineageEntry
14 | | from src.dot_seigr.lineage.lineage_integrity import LineageIntegrity
15 | | 
16 | | logger = logging.getLogger(__name__)
   | |_^ I001
   |
   = help: Organize imports

src/dot_seigr/capsule/seigr_metadata.py:13:49: F401 [*] `src.dot_seigr.lineage.lineage_entry.LineageEntry` imported but unused
   |
11 | )
12 | from src.dot_seigr.lineage.lineage import Lineage
13 | from src.dot_seigr.lineage.lineage_entry import LineageEntry
   |                                                 ^^^^^^^^^^^^ F401
14 | from src.dot_seigr.lineage.lineage_integrity import LineageIntegrity
   |
   = help: Remove unused import: `src.dot_seigr.lineage.lineage_entry.LineageEntry`

src/dot_seigr/capsule/seigr_metadata.py:21:101: E501 Line too long (109 > 100)
   |
19 | class MetadataManager:
20 |     """
21 |     Manages segment, file, and temporal layer metadata, along with lineage tracking and integrity validation.
   |                                                                                                     ^^^^^^^^^ E501
22 |     """
   |

src/dot_seigr/capsule/seigr_metadata.py:217:101: E501 Line too long (107 > 100)
    |
216 |         logger.debug(
217 |             f"Access log updated for hyphen {hyphen_id}. Total access count: {access_context.access_count}"
    |                                                                                                     ^^^^^^^ E501
218 |         )
    |

src/dot_seigr/capsule/seigr_serializer.py:1:1: I001 [*] Import block is un-sorted or un-formatted
  |
1 | / import os
2 | | import logging
3 | | from src.seigr_protocol.compiled.seed_dot_seigr_pb2 import FileMetadata, SegmentMetadata
4 | | from src.crypto.hash_utils import hypha_hash
5 | | 
6 | | logger = logging.getLogger(__name__)
  | |_^ I001
  |
  = help: Organize imports

src/dot_seigr/capsule/seigr_serializer.py:20:101: E501 Line too long (138 > 100)
   |
19 |         Args:
20 |             capsule_data (FileMetadata or SegmentMetadata): The data to be serialized, typically a FileMetadata or SegmentMetadata object.
   |                                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E501
21 |             base_dir (str): Directory to save the capsule file.
22 |             filename (str): Filename for the saved capsule (e.g., with .seigr or .segm extension).
   |

src/dot_seigr/capsule/seigr_temporal_layer.py:1:1: I001 [*] Import block is un-sorted or un-formatted
   |
 1 | / import os
 2 | | import logging
 3 | | from datetime import datetime, timezone
 4 | | from typing import List, Dict, Optional
 5 | | from src.crypto.hash_utils import hypha_hash
 6 | | from src.seigr_protocol.compiled.seed_dot_seigr_pb2 import (
 7 | |     TemporalLayer,
 8 | |     SegmentMetadata,
 9 | | )
10 | | 
11 | | logger = logging.getLogger(__name__)
   | |_^ I001
   |
   = help: Organize imports

src/dot_seigr/capsule/seigr_temporal_layer.py:31:101: E501 Line too long (109 > 100)
   |
30 |         Args:
31 |             segments (List[SegmentMetadata]): List of SegmentMetadata objects representing the current state.
   |                                                                                                     ^^^^^^^^^ E501
32 | 
33 |         Returns:
   |

src/dot_seigr/capsule/seigr_temporal_layer.py:154:101: E501 Line too long (102 > 100)
    |
153 |         Returns:
154 |             List[Dict[str, str]]: A list of dictionaries with timestamp and layer hash for each layer.
    |                                                                                                     ^^ E501
155 |         """
156 |         layers_info = [
    |

src/dot_seigr/dot_seigr.py:1:1: I001 [*] Import block is un-sorted or un-formatted
   |
 1 | / import os
 2 | | import logging
 3 | | from datetime import datetime, timezone
 4 | | from src.crypto.hypha_crypt import HyphaCrypt
 5 | | from dot_seigr.seigr_file import SeigrFile
 6 | | from dot_seigr.seigr_constants import SEIGR_SIZE, HEADER_SIZE, MIN_REPLICATION
 7 | | from src.seigr_protocol.compiled.seed_dot_seigr_pb2 import (
 8 | |     SeedDotSeigr as SeedDotSeigrProto,
 9 | |     AccessControlList,
10 | |     AccessControlEntry,
11 | |     PipelineStage,
12 | |     TriggerEvent,
13 | |     OperationLog,
14 | | )
15 | | from dot_seigr.capsule.seigr_link_manager import FileLinkManager
16 | | from typing import Optional, List, Dict
17 | | 
18 | | # Setup logging
   | |_^ I001
19 |   logger = logging.getLogger(__name__)
   |
   = help: Organize imports

src/dot_seigr/dot_seigr.py:16:30: F401 [*] `typing.List` imported but unused
   |
14 | )
15 | from dot_seigr.capsule.seigr_link_manager import FileLinkManager
16 | from typing import Optional, List, Dict
   |                              ^^^^ F401
17 | 
18 | # Setup logging
   |
   = help: Remove unused import

src/dot_seigr/dot_seigr.py:16:36: F401 [*] `typing.Dict` imported but unused
   |
14 | )
15 | from dot_seigr.capsule.seigr_link_manager import FileLinkManager
16 | from typing import Optional, List, Dict
   |                                    ^^^^ F401
17 | 
18 | # Setup logging
   |
   = help: Remove unused import

src/dot_seigr/dot_seigr.py:30:101: E501 Line too long (107 > 100)
   |
28 |     def __init__(self, data: bytes, creator_id: str, file_type: str = "binary"):
29 |         """
30 |         Initializes a DotSeigr instance for creating and managing .seigr files with multidimensional links.
   |                                                                                                     ^^^^^^^ E501
31 | 
32 |         Args:
   |

src/dot_seigr/dot_seigr.py:51:101: E501 Line too long (102 > 100)
   |
49 |     ) -> SeedDotSeigrProto:
50 |         """
51 |         Segments data, creates .seigr files, and saves them with protocol-compliant Protobuf metadata.
   |                                                                                                     ^^ E501
52 | 
53 |         Args:
   |

src/dot_seigr/dot_seigr.py:191:9: F841 Local variable `log_entry` is assigned to but never used
    |
189 |             details (str): Additional details for context.
190 |         """
191 |         log_entry = OperationLog(
    |         ^^^^^^^^^ F841
192 |             operation_type=operation_type,
193 |             performed_by=performed_by,
    |
    = help: Remove assignment to unused variable `log_entry`

src/dot_seigr/lineage/lineage.py:1:1: I001 [*] Import block is un-sorted or un-formatted
  |
1 | / import logging
2 | | from typing import List, Optional, Dict
3 | | from datetime import datetime, timezone
4 | | from .lineage_entry import LineageEntry
5 | | from .lineage_serializer import LineageSerializer
6 | | from .lineage_storage import LineageStorage
7 | | from .lineage_integrity import LineageIntegrity
8 | | 
9 | | logger = logging.getLogger(__name__)
  | |_^ I001
  |
  = help: Organize imports

src/dot_seigr/lineage/lineage.py:5:33: F401 [*] `.lineage_serializer.LineageSerializer` imported but unused
  |
3 | from datetime import datetime, timezone
4 | from .lineage_entry import LineageEntry
5 | from .lineage_serializer import LineageSerializer
  |                                 ^^^^^^^^^^^^^^^^^ F401
6 | from .lineage_storage import LineageStorage
7 | from .lineage_integrity import LineageIntegrity
  |
  = help: Remove unused import: `.lineage_serializer.LineageSerializer`

src/dot_seigr/lineage/lineage.py:64:9: F841 Local variable `timestamp` is assigned to but never used
   |
62 |         # Set default previous_hash to current hash if none is provided
63 |         previous_hashes = previous_hashes or [self.current_hash]
64 |         timestamp = datetime.now(timezone.utc).isoformat()
   |         ^^^^^^^^^ F841
65 | 
66 |         entry = LineageEntry(
   |
   = help: Remove assignment to unused variable `timestamp`

src/dot_seigr/lineage/lineage.py:79:101: E501 Line too long (126 > 100)
   |
77 |         self.entries.append(entry.to_dict())
78 |         logger.info(
79 |             f"Added lineage entry with action '{action}' by contributor '{contributor_id}'. Updated hash: {self.current_hash}"
   |                                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^ E501
80 |         )
   |

src/dot_seigr/lineage/lineage_entry.py:1:1: I001 [*] Import block is un-sorted or un-formatted
  |
1 | / from datetime import datetime, timezone
2 | | from typing import List, Dict, Optional
3 | | from src.crypto.hypha_crypt import hypha_hash
4 | | import logging
5 | | 
6 | | logger = logging.getLogger(__name__)
  | |_^ I001
  |
  = help: Organize imports

src/dot_seigr/lineage/lineage_entry.py:15:9: PLR0913 Too many arguments in function definition (6 > 5)
   |
13 |     """
14 | 
15 |     def __init__(
   |         ^^^^^^^^ PLR0913
16 |         self,
17 |         version: str,
   |

src/dot_seigr/lineage/lineage_integrity.py:1:1: I001 [*] Import block is un-sorted or un-formatted
  |
1 | / import logging
2 | | from datetime import datetime, timezone
3 | | from typing import List, Dict
4 | | 
5 | | logger = logging.getLogger(__name__)
  | |_^ I001
  |
  = help: Organize imports

src/dot_seigr/lineage/lineage_integrity.py:17:101: E501 Line too long (102 > 100)
   |
15 |     def verify_integrity(current_hash: str, reference_hash: str) -> bool:
16 |         """
17 |         Verifies the integrity of a lineage entry by comparing the current hash with a reference hash.
   |                                                                                                     ^^ E501
18 | 
19 |         Args:
   |

src/dot_seigr/lineage/lineage_integrity.py:43:101: E501 Line too long (133 > 100)
   |
42 |         Args:
43 |             entries (List[Dict]): A list of lineage entries as dictionaries, each containing 'previous_hashes' and 'calculated_hash'.
   |                                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E501
44 |             initial_hash (str): The initial reference hash to start the verification chain.
   |

src/dot_seigr/lineage/lineage_integrity.py:58:101: E501 Line too long (122 > 100)
   |
56 |             if current_reference_hash not in previous_hashes:
57 |                 logger.error(
58 |                     f"Hash continuity error at entry {i}. Expected one of {previous_hashes}, got {current_reference_hash}"
   |                                                                                                     ^^^^^^^^^^^^^^^^^^^^^^ E501
59 |                 )
60 |                 return False
   |

src/dot_seigr/lineage/lineage_manager.py:3:1: I001 [*] Import block is un-sorted or un-formatted
   |
 1 |   # src/dot_seigr/lineage/lineage_manager.py
 2 |   
 3 | / import logging
 4 | | from datetime import datetime, timezone
 5 | | from typing import Optional, Dict, List, Union
 6 | | from .lineage import Lineage
 7 | | from .lineage_entry import LineageEntry
 8 | | from .lineage_integrity import LineageIntegrity
 9 | | from .lineage_storage import LineageStorage
10 | | from .lineage_serializer import LineageSerializer
11 | | 
12 | | logger = logging.getLogger(__name__)
   | |_^ I001
   |
   = help: Organize imports

src/dot_seigr/lineage/lineage_manager.py:4:22: F401 [*] `datetime.datetime` imported but unused
  |
3 | import logging
4 | from datetime import datetime, timezone
  |                      ^^^^^^^^ F401
5 | from typing import Optional, Dict, List, Union
6 | from .lineage import Lineage
  |
  = help: Remove unused import

src/dot_seigr/lineage/lineage_manager.py:4:32: F401 [*] `datetime.timezone` imported but unused
  |
3 | import logging
4 | from datetime import datetime, timezone
  |                                ^^^^^^^^ F401
5 | from typing import Optional, Dict, List, Union
6 | from .lineage import Lineage
  |
  = help: Remove unused import

src/dot_seigr/lineage/lineage_manager.py:7:28: F401 [*] `.lineage_entry.LineageEntry` imported but unused
  |
5 | from typing import Optional, Dict, List, Union
6 | from .lineage import Lineage
7 | from .lineage_entry import LineageEntry
  |                            ^^^^^^^^^^^^ F401
8 | from .lineage_integrity import LineageIntegrity
9 | from .lineage_storage import LineageStorage
  |
  = help: Remove unused import: `.lineage_entry.LineageEntry`

src/dot_seigr/lineage/lineage_serializer.py:1:1: I001 [*] Import block is un-sorted or un-formatted
  |
1 | / import logging
2 | | from src.seigr_protocol.compiled.lineage_pb2 import (
3 | |     Lineage as LineageProto,
4 | |     LineageEntry as LineageEntryProto,
5 | | )
6 | | from typing import Dict, Any
7 | | 
8 | | logger = logging.getLogger(__name__)
  | |_^ I001
  |
  = help: Organize imports

src/dot_seigr/lineage/lineage_serializer.py:67:101: E501 Line too long (102 > 100)
   |
66 |             logger.debug(
67 |                 f"Deserialized Protobuf to lineage data with creator ID {protobuf_message.creator_id}"
   |                                                                                                     ^^ E501
68 |             )
69 |             return lineage_data
   |

src/dot_seigr/lineage/lineage_serializer.py:80:101: E501 Line too long (106 > 100)
   |
79 |         Args:
80 |             entry (dict): A dictionary with entry fields including 'version', 'action', 'creator_id', etc.
   |                                                                                                     ^^^^^^ E501
81 | 
82 |         Returns:
   |

src/dot_seigr/lineage/lineage_storage.py:1:1: I001 [*] Import block is un-sorted or un-formatted
  |
1 | / import logging
2 | | from .lineage_serializer import LineageSerializer
3 | | from src.seigr_protocol.compiled.lineage_pb2 import Lineage as LineageProto
4 | | from typing import Dict, Any
5 | | 
6 | | logger = logging.getLogger(__name__)
  | |_^ I001
  |
  = help: Organize imports

src/dot_seigr/rollback.py:1:1: I001 [*] Import block is un-sorted or un-formatted
   |
 1 | / import logging
 2 | | from datetime import datetime, timezone
 3 | | from typing import Optional
 4 | | from dot_seigr.seigr_file import SeigrFile
 5 | | from src.seigr_protocol.compiled.seed_dot_seigr_pb2 import (
 6 | |     TemporalLayer,
 7 | |     AccessControlList,
 8 | |     TriggerEvent,
 9 | | )
10 | | from dot_seigr.capsule.seigr_integrity import (
11 | |     verify_layer_integrity,
12 | |     validate_acl_for_integrity_check,
13 | | )
14 | | 
15 | | logger = logging.getLogger(__name__)
   | |_^ I001
   |
   = help: Organize imports

src/dot_seigr/rollback.py:7:5: F401 [*] `src.seigr_protocol.compiled.seed_dot_seigr_pb2.AccessControlList` imported but unused
  |
5 | from src.seigr_protocol.compiled.seed_dot_seigr_pb2 import (
6 |     TemporalLayer,
7 |     AccessControlList,
  |     ^^^^^^^^^^^^^^^^^ F401
8 |     TriggerEvent,
9 | )
  |
  = help: Remove unused import: `src.seigr_protocol.compiled.seed_dot_seigr_pb2.AccessControlList`

src/dot_seigr/rollback.py:22:101: E501 Line too long (118 > 100)
   |
20 | ) -> bool:
21 |     """
22 |     Reverts a segment to its previous secure state using temporal layers, ensuring integrity before applying rollback.
   |                                                                                                     ^^^^^^^^^^^^^^^^^^ E501
23 | 
24 |     Args:
   |

src/dot_seigr/rollback.py:55:101: E501 Line too long (112 > 100)
   |
53 |     if not verify_layer_integrity(previous_layer, expected_hash):
54 |         logger.error(
55 |             f"Integrity verification failed for previous layer at {previous_layer.timestamp}. Rollback aborted."
   |                                                                                                     ^^^^^^^^^^^^ E501
56 |         )
57 |         return False
   |

src/dot_seigr/rollback.py:66:101: E501 Line too long (113 > 100)
   |
64 |         revert_segment_data(seigr_file, previous_layer)
65 |         logger.info(
66 |             f"Reverted segment {seigr_file.hash} data to previous layer at timestamp {previous_layer.timestamp}."
   |                                                                                                     ^^^^^^^^^^^^^ E501
67 |         )
68 |     except Exception as e:
   |

src/dot_seigr/rollback.py:75:101: E501 Line too long (111 > 100)
   |
73 |     log_rollback_success(seigr_file.hash, previous_layer.timestamp, user_id)
74 |     logger.info(
75 |         f"Rollback successful for segment {seigr_file.hash}. Reverted to timestamp {previous_layer.timestamp}."
   |                                                                                                     ^^^^^^^^^^^ E501
76 |     )
77 |     return True
   |

src/dot_seigr/rollback.py:99:101: E501 Line too long (105 > 100)
    |
 97 |     Args:
 98 |         seigr_file (SeigrFile): Instance of SeigrFile to revert.
 99 |         previous_layer (TemporalLayer): TemporalLayer containing the data snapshot of the previous state.
    |                                                                                                     ^^^^^ E501
100 |     """
101 |     logger.debug(f"Reverting segment data. Hash before revert: {seigr_file.hash}")
    |

src/dot_seigr/rollback.py:119:101: E501 Line too long (102 > 100)
    |
118 |     logger.debug(
119 |         f"Segment {seigr_file.hash} reverted to previous state with hash {previous_layer.layer_hash}."
    |                                                                                                     ^^ E501
120 |     )
    |

src/dot_seigr/seed_dot_seigr.py:1:1: I001 [*] Import block is un-sorted or un-formatted
   |
 1 | / import os
 2 | | import logging
 3 | | import time
 4 | | from datetime import datetime, timezone
 5 | | from typing import Optional
 6 | | from src.seigr_protocol.compiled.seed_dot_seigr_pb2 import (
 7 | |     SeedDotSeigr as SeedDotSeigrProto,
 8 | |     PipelineStage,
 9 | |     TriggerEvent,
10 | |     OperationLog,
11 | |     AccessControlList,
12 | |     AccessControlEntry,
13 | | )
14 | | from src.crypto.hash_utils import hypha_hash
15 | | from .seigr_constants import HEADER_SIZE, SEIGR_SIZE
16 | | 
17 | | # Constants
   | |_^ I001
18 |   CLUSTER_LIMIT = SEIGR_SIZE - HEADER_SIZE  # Max size for primary cluster
   |
   = help: Organize imports

src/dot_seigr/seed_dot_seigr.py:5:20: F401 [*] `typing.Optional` imported but unused
  |
3 | import time
4 | from datetime import datetime, timezone
5 | from typing import Optional
  |                    ^^^^^^^^ F401
6 | from src.seigr_protocol.compiled.seed_dot_seigr_pb2 import (
7 |     SeedDotSeigr as SeedDotSeigrProto,
  |
  = help: Remove unused import: `typing.Optional`

src/dot_seigr/seed_dot_seigr.py:49:101: E501 Line too long (102 > 100)
   |
47 |         self._compute_integrity_checksum()
48 |         logger.debug(
49 |             f"Initialized SeedDotSeigr with root hash {self.root_hash} and seed hash {self.seed_hash}"
   |                                                                                                     ^^ E501
50 |         )
   |

src/dot_seigr/seed_dot_seigr.py:108:101: E501 Line too long (110 > 100)
    |
106 |         if self._is_primary_cluster_full():
107 |             logger.warning(
108 |                 f"Primary cluster limit reached, creating a new secondary cluster for segment {segment_hash}."
    |                                                                                                     ^^^^^^^^^^ E501
109 |             )
110 |             self._create_new_cluster(segment_hash, index, threat_level)
    |

src/dot_seigr/seed_dot_seigr.py:119:101: E501 Line too long (112 > 100)
    |
117 |             )
118 |             logger.info(
119 |                 f"Added segment {segment_hash} (Index {index}, Threat Level {threat_level}) to primary cluster."
    |                                                                                                     ^^^^^^^^^^^^ E501
120 |             )
    |

src/dot_seigr/seigr_constants.py:1:34: F401 [*] `src.crypto.constants.DEFAULT_HASH_FUNCTION` imported but unused
  |
1 | from src.crypto.constants import DEFAULT_HASH_FUNCTION, SUPPORTED_HASH_ALGORITHMS
  |                                  ^^^^^^^^^^^^^^^^^^^^^ F401
2 | 
3 | # === Core Seigr Cell (`sc`) Specifications ===
  |
  = help: Remove unused import

src/dot_seigr/seigr_constants.py:1:57: F401 [*] `src.crypto.constants.SUPPORTED_HASH_ALGORITHMS` imported but unused
  |
1 | from src.crypto.constants import DEFAULT_HASH_FUNCTION, SUPPORTED_HASH_ALGORITHMS
  |                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^ F401
2 | 
3 | # === Core Seigr Cell (`sc`) Specifications ===
  |
  = help: Remove unused import

src/dot_seigr/seigr_file.py:1:1: I001 [*] Import block is un-sorted or un-formatted
   |
 1 | / import os
 2 | | import logging
 3 | | from datetime import datetime, timezone
 4 | | from src.crypto.hypha_crypt import HyphaCrypt
 5 | | from src.seigr_protocol.compiled.seed_dot_seigr_pb2 import FileMetadata
 6 | | from dot_seigr.seigr_constants import SEIGR_VERSION
 7 | | from src.dot_seigr.capsule.seigr_metadata import MetadataManager
 8 | | from src.dot_seigr.access_control import AccessControlManager
 9 | | from dot_seigr.temporal.temporal_layer_manager import TemporalLayerManager
10 | | from src.dot_seigr.capsule.seigr_coordinate import CoordinateManager
11 | | from src.dot_seigr.serialization_manager import SerializationManager
12 | | from src.dot_seigr.capsule.seigr_link_manager import LinkManager
13 | | from src.dot_seigr.capsule.seigr_integrity_manager import IntegrityManager
14 | | from typing import Optional
15 | | 
16 | | logger = logging.getLogger(__name__)
   | |_^ I001
   |
   = help: Organize imports

src/dot_seigr/seigr_file.py:1:8: F401 [*] `os` imported but unused
  |
1 | import os
  |        ^^ F401
2 | import logging
3 | from datetime import datetime, timezone
  |
  = help: Remove unused import: `os`

src/dot_seigr/seigr_file.py:3:22: F401 [*] `datetime.datetime` imported but unused
  |
1 | import os
2 | import logging
3 | from datetime import datetime, timezone
  |                      ^^^^^^^^ F401
4 | from src.crypto.hypha_crypt import HyphaCrypt
5 | from src.seigr_protocol.compiled.seed_dot_seigr_pb2 import FileMetadata
  |
  = help: Remove unused import

src/dot_seigr/seigr_file.py:3:32: F401 [*] `datetime.timezone` imported but unused
  |
1 | import os
2 | import logging
3 | from datetime import datetime, timezone
  |                                ^^^^^^^^ F401
4 | from src.crypto.hypha_crypt import HyphaCrypt
5 | from src.seigr_protocol.compiled.seed_dot_seigr_pb2 import FileMetadata
  |
  = help: Remove unused import

src/dot_seigr/seigr_file.py:21:101: E501 Line too long (103 > 100)
   |
19 | class SeigrFile:
20 |     """
21 |     Represents a Seigr file or segment within Seigr's decentralized ecosystem, managing data integrity,
   |                                                                                                     ^^^ E501
22 |     metadata, access control, temporal layers, and serialization.
23 |     """
   |

src/dot_seigr/seigr_ipfs_utils.py:1:1: I001 [*] Import block is un-sorted or un-formatted
  |
1 | / import logging
2 | | from typing import List
3 | | from src.crypto.hash_utils import hypha_hash
4 | | from src.ipfs.ipfs_manager import IPFSManager  # Using IPFSManager from the ipfs/ module
5 | | 
6 | | logger = logging.getLogger(__name__)
  | |_^ I001
  |
  = help: Organize imports

src/dot_seigr/seigr_ipfs_utils.py:96:101: E501 Line too long (102 > 100)
   |
94 |             else:
95 |                 logger.warning(
96 |                     f"Hash mismatch for IPFS CID {cid}. Expected {expected_hash}, got {computed_hash}"
   |                                                                                                     ^^ E501
97 |                 )
98 |                 return False
   |

src/dot_seigr/serialization_manager.py:3:1: I001 [*] Import block is un-sorted or un-formatted
  |
1 |   # src/dot_seigr/serialization_manager.py
2 |   
3 | / import os
4 | | import logging
5 | | import cbor2
6 | | from src.seigr_protocol.compiled.seed_dot_seigr_pb2 import SeedDotSeigr, FileMetadata
7 | | 
8 | | logger = logging.getLogger(__name__)
  | |_^ I001
  |
  = help: Organize imports

src/dot_seigr/temporal/temporal_layer_manager.py:3:1: I001 [*] Import block is un-sorted or un-formatted
  |
1 |   # dot_seigr/temporal_layer_manager.py
2 |   
3 | / import logging
4 | | from datetime import datetime, timezone
5 | | from src.crypto.hash_utils import hypha_hash
6 | | import cbor2
7 | | from typing import Optional, List, Dict
8 | | 
9 | | logger = logging.getLogger(__name__)
  | |_^ I001
  |
  = help: Organize imports

src/dot_seigr/temporal/temporal_layer_manager.py:14:101: E501 Line too long (104 > 100)
   |
12 | class TemporalLayerManager:
13 |     """
14 |     Manages temporal layers for snapshots of data states with integrity validation and disk persistence.
   |                                                                                                     ^^^^ E501
15 |     """
   |

src/dot_seigr/temporal/temporal_layer_manager.py:110:101: E501 Line too long (122 > 100)
    |
109 |         Returns:
110 |             Optional[bytes]: Data snapshot from the target layer if rollback is successful, or None if layer is not found.
    |                                                                                                     ^^^^^^^^^^^^^^^^^^^^^^ E501
111 |         """
112 |         target_layer = self.get_layer_by_timestamp(target_timestamp)
    |

src/dot_seigr/utils/integrity.py:3:1: I001 [*] Import block is un-sorted or un-formatted
   |
 1 |   # src/dot_seigr/utils/integrity.py
 2 |   
 3 | / from src.dot_seigr.capsule.seigr_integrity import (
 4 | |     compute_hash,
 5 | |     verify_integrity,
 6 | |     verify_segment_integrity,
 7 | |     verify_lineage_continuity,
 8 | |     verify_file_metadata_integrity,
 9 | |     verify_partial_lineage,
10 | |     verify_checksum,
11 | |     validate_acl_for_integrity_check,
12 | |     reverify_on_event,
13 | | )
   |
   = help: Organize imports

src/dot_seigr/utils/integrity.py:4:5: F401 [*] `src.dot_seigr.capsule.seigr_integrity.compute_hash` imported but unused
  |
3 | from src.dot_seigr.capsule.seigr_integrity import (
4 |     compute_hash,
  |     ^^^^^^^^^^^^ F401
5 |     verify_integrity,
6 |     verify_segment_integrity,
  |
  = help: Remove unused import

src/dot_seigr/utils/integrity.py:5:5: F401 [*] `src.dot_seigr.capsule.seigr_integrity.verify_integrity` imported but unused
  |
3 | from src.dot_seigr.capsule.seigr_integrity import (
4 |     compute_hash,
5 |     verify_integrity,
  |     ^^^^^^^^^^^^^^^^ F401
6 |     verify_segment_integrity,
7 |     verify_lineage_continuity,
  |
  = help: Remove unused import

src/dot_seigr/utils/integrity.py:6:5: F401 [*] `src.dot_seigr.capsule.seigr_integrity.verify_segment_integrity` imported but unused
  |
4 |     compute_hash,
5 |     verify_integrity,
6 |     verify_segment_integrity,
  |     ^^^^^^^^^^^^^^^^^^^^^^^^ F401
7 |     verify_lineage_continuity,
8 |     verify_file_metadata_integrity,
  |
  = help: Remove unused import

src/dot_seigr/utils/integrity.py:7:5: F401 [*] `src.dot_seigr.capsule.seigr_integrity.verify_lineage_continuity` imported but unused
  |
5 |     verify_integrity,
6 |     verify_segment_integrity,
7 |     verify_lineage_continuity,
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^ F401
8 |     verify_file_metadata_integrity,
9 |     verify_partial_lineage,
  |
  = help: Remove unused import

src/dot_seigr/utils/integrity.py:8:5: F401 [*] `src.dot_seigr.capsule.seigr_integrity.verify_file_metadata_integrity` imported but unused
   |
 6 |     verify_segment_integrity,
 7 |     verify_lineage_continuity,
 8 |     verify_file_metadata_integrity,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ F401
 9 |     verify_partial_lineage,
10 |     verify_checksum,
   |
   = help: Remove unused import

src/dot_seigr/utils/integrity.py:9:5: F401 [*] `src.dot_seigr.capsule.seigr_integrity.verify_partial_lineage` imported but unused
   |
 7 |     verify_lineage_continuity,
 8 |     verify_file_metadata_integrity,
 9 |     verify_partial_lineage,
   |     ^^^^^^^^^^^^^^^^^^^^^^ F401
10 |     verify_checksum,
11 |     validate_acl_for_integrity_check,
   |
   = help: Remove unused import

src/dot_seigr/utils/integrity.py:10:5: F401 [*] `src.dot_seigr.capsule.seigr_integrity.verify_checksum` imported but unused
   |
 8 |     verify_file_metadata_integrity,
 9 |     verify_partial_lineage,
10 |     verify_checksum,
   |     ^^^^^^^^^^^^^^^ F401
11 |     validate_acl_for_integrity_check,
12 |     reverify_on_event,
   |
   = help: Remove unused import

src/dot_seigr/utils/integrity.py:11:5: F401 [*] `src.dot_seigr.capsule.seigr_integrity.validate_acl_for_integrity_check` imported but unused
   |
 9 |     verify_partial_lineage,
10 |     verify_checksum,
11 |     validate_acl_for_integrity_check,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ F401
12 |     reverify_on_event,
13 | )
   |
   = help: Remove unused import

src/dot_seigr/utils/integrity.py:12:5: F401 [*] `src.dot_seigr.capsule.seigr_integrity.reverify_on_event` imported but unused
   |
10 |     verify_checksum,
11 |     validate_acl_for_integrity_check,
12 |     reverify_on_event,
   |     ^^^^^^^^^^^^^^^^^ F401
13 | )
   |
   = help: Remove unused import

src/dot_seigr/utils/serialization_manager.py:3:1: I001 [*] Import block is un-sorted or un-formatted
  |
1 |   # src/dot_seigr/utils/serialization_manager.py
2 |   
3 | / from src.dot_seigr.capsule.seigr_serializer import CapsuleSerializer
4 | | from src.seigr_protocol.compiled.seed_dot_seigr_pb2 import FileMetadata, SegmentMetadata
5 | | import logging
6 | | 
7 | | logger = logging.getLogger(__name__)
  | |_^ I001
8 |   
9 |   # Create an instance of CapsuleSerializer for reuse
  |
  = help: Organize imports

src/identity/encryption_manager.py:3:1: I001 [*] Import block is un-sorted or un-formatted
   |
 1 |   # src/identity/encryption_manager.py
 2 |   
 3 | / from src.crypto.hypha_crypt import (
 4 | |     generate_encryption_key,
 5 | |     generate_key_pair,
 6 | |     encrypt_data,
 7 | |     decrypt_data,
 8 | |     sign_data,
 9 | |     verify_signature,
10 | | )
11 | | import logging
12 | | 
13 | | logger = logging.getLogger(__name__)
   | |_^ I001
   |
   = help: Organize imports

src/identity/encryption_manager.py:7:5: F401 [*] `src.crypto.hypha_crypt.decrypt_data` imported but unused
  |
5 |     generate_key_pair,
6 |     encrypt_data,
7 |     decrypt_data,
  |     ^^^^^^^^^^^^ F401
8 |     sign_data,
9 |     verify_signature,
  |
  = help: Remove unused import: `src.crypto.hypha_crypt.decrypt_data`

src/identity/generate_identity.py:3:1: I001 [*] Import block is un-sorted or un-formatted
  |
1 |   # src/identity/generate_identity.py
2 |   
3 | / import os
4 | | import time
5 | | from src.crypto.hash_utils import hypha_hash
6 | | from src.crypto.hypha_crypt import encode_to_senary
7 | | import logging
8 | | 
9 | | logger = logging.getLogger(__name__)
  | |_^ I001
  |
  = help: Organize imports

src/identity/seigr_identity.py:3:1: I001 [*] Import block is un-sorted or un-formatted
   |
 1 |   # src/identity/seigr_identity.py
 2 |   
 3 | / import logging
 4 | | from src.identity.generate_identity import IdentityGenerator
 5 | | from src.identity.encryption_manager import EncryptionManager
 6 | | from src.identity.usb_manager import USBManager
 7 | | from src.identity.verification_manager import VerificationManager
 8 | | from src.crypto.hypha_crypt import encrypt_data
 9 | | from src.dot_seigr.seigr_protocol.seed_dot_seigr_pb2 import SeigrIdentityData
10 | | 
11 | | logger = logging.getLogger(__name__)
   | |_^ I001
   |
   = help: Organize imports

src/identity/usb_manager.py:3:1: I001 [*] Import block is un-sorted or un-formatted
  |
1 |   # src/identity/usb_manager.py
2 |   
3 | / import os
4 | | from src.crypto.hypha_crypt import encrypt_data, decrypt_data
5 | | from src.dot_seigr.seigr_protocol.seed_dot_seigr_pb2 import SeigrIdentityData
6 | | import logging
7 | | 
8 | | logger = logging.getLogger(__name__)
  | |_^ I001
  |
  = help: Organize imports

src/identity/usb_manager.py:4:36: F401 [*] `src.crypto.hypha_crypt.encrypt_data` imported but unused
  |
3 | import os
4 | from src.crypto.hypha_crypt import encrypt_data, decrypt_data
  |                                    ^^^^^^^^^^^^ F401
5 | from src.dot_seigr.seigr_protocol.seed_dot_seigr_pb2 import SeigrIdentityData
6 | import logging
  |
  = help: Remove unused import: `src.crypto.hypha_crypt.encrypt_data`

src/identity/verification_manager.py:3:1: I001 [*] Import block is un-sorted or un-formatted
  |
1 |   # src/identity/verification_manager.py
2 |   
3 | / import os
4 | | import logging
5 | | from src.ipfs.ipfs_manager import IPFSManager
6 | | from src.identity.usb_manager import USBManager
7 | | 
8 | | logger = logging.getLogger(__name__)
  | |_^ I001
  |
  = help: Organize imports

src/immune_system/adaptive_monitoring.py:3:1: I001 [*] Import block is un-sorted or un-formatted
   |
 1 |   # src/immune_system/adaptive_monitoring.py
 2 |   
 3 | / import logging
 4 | | from datetime import datetime, timezone
 5 | | from src.dot_seigr.seigr_protocol.seed_dot_seigr_pb2 import SegmentMetadata
 6 | | from src.replication.replication_controller import ReplicationController
 7 | | from src.immune_system.threat_detection import ThreatDetector
 8 | | from src.immune_system.integrity_monitoring import immune_ping
 9 | | 
10 | | logger = logging.getLogger(__name__)
   | |_^ I001
   |
   = help: Organize imports

src/immune_system/adaptive_monitoring.py:4:22: F401 [*] `datetime.datetime` imported but unused
  |
3 | import logging
4 | from datetime import datetime, timezone
  |                      ^^^^^^^^ F401
5 | from src.dot_seigr.seigr_protocol.seed_dot_seigr_pb2 import SegmentMetadata
6 | from src.replication.replication_controller import ReplicationController
  |
  = help: Remove unused import

src/immune_system/adaptive_monitoring.py:4:32: F401 [*] `datetime.timezone` imported but unused
  |
3 | import logging
4 | from datetime import datetime, timezone
  |                                ^^^^^^^^ F401
5 | from src.dot_seigr.seigr_protocol.seed_dot_seigr_pb2 import SegmentMetadata
6 | from src.replication.replication_controller import ReplicationController
  |
  = help: Remove unused import

src/immune_system/adaptive_monitoring.py:24:101: E501 Line too long (102 > 100)
   |
23 |         Args:
24 |             replication_controller (ReplicationController): Controller to handle replication requests.
   |                                                                                                     ^^ E501
25 |             threat_detector (ThreatDetector): Detector to log and escalate threats.
26 |             critical_threshold (int): Threshold for high-severity replication escalation.
   |

src/immune_system/adaptive_monitoring.py:50:101: E501 Line too long (112 > 100)
   |
48 |         if not is_valid:
49 |             logger.warning(
50 |                 f"Integrity check failed for segment {segment_hash}. Recording threat and handling replication."
   |                                                                                                     ^^^^^^^^^^^^ E501
51 |             )
52 |             self.threat_detector.record_threat(segment_metadata)
   |

src/immune_system/adaptive_monitoring.py:70:101: E501 Line too long (109 > 100)
   |
68 |         if threat_count >= self.critical_threshold:
69 |             logger.critical(
70 |                 f"Critical threat level reached for segment {segment_hash}. Initiating critical replication."
   |                                                                                                     ^^^^^^^^^ E501
71 |             )
72 |             self.replication_controller.trigger_critical_replication(segment_hash)
   |

src/immune_system/adaptive_monitoring.py:80:30: PLR2004 Magic value used in comparison, consider replacing `3` with a constant variable
   |
78 |                 segment_hash, threat_level=5
79 |             )
80 |         elif threat_count >= 3:
   |                              ^ PLR2004
81 |             logger.info(
82 |                 f"Moderate threat level for segment {segment_hash}. Initiating security replication."
   |

src/immune_system/adaptive_monitoring.py:82:101: E501 Line too long (101 > 100)
   |
80 |         elif threat_count >= 3:
81 |             logger.info(
82 |                 f"Moderate threat level for segment {segment_hash}. Initiating security replication."
   |                                                                                                     ^ E501
83 |             )
84 |             self.replication_controller.trigger_security_replication(segment_hash)
   |

src/immune_system/adaptive_monitoring.py:111:101: E501 Line too long (109 > 100)
    |
109 |     def escalate_critical_segments(self):
110 |         """
111 |         Escalates all segments that have reached the critical threat level, triggering necessary replication.
    |                                                                                                     ^^^^^^^^^ E501
112 |         """
113 |         high_risk_segments = self.threat_detector.detect_high_risk_segments()
    |

src/immune_system/immune_system.py:3:1: I001 [*] Import block is un-sorted or un-formatted
   |
 1 |   # src/immune_system/immune_system.py
 2 |   
 3 | / import logging
 4 | | from datetime import datetime, timezone
 5 | | from typing import Dict, Any
 6 | | 
 7 | | from src.crypto.constants import SEIGR_CELL_ID_PREFIX
 8 | | from src.crypto.hash_utils import generate_hash
 9 | | from src.crypto.helpers import encode_to_senary
10 | | from src.immune_system.integrity_monitoring import immune_ping
11 | | from src.replication.replication_controller import ReplicationController
12 | | from src.seigr_protocol.compiled.seed_dot_seigr_pb2 import SegmentMetadata
13 | | from src.seigr_protocol.compiled.common_pb2 import ThreatLevel, ThreatDetectionLog
14 | | from src.immune_system.threat_response import ThreatResponseManager
15 | | from src.immune_system.adaptive_monitoring import AdaptiveMonitor
16 | | from src.immune_system.rollback_handling import rollback_segment
17 | | 
18 | | logger = logging.getLogger(__name__)
   | |_^ I001
   |
   = help: Organize imports

src/immune_system/immune_system.py:5:26: F401 [*] `typing.Any` imported but unused
  |
3 | import logging
4 | from datetime import datetime, timezone
5 | from typing import Dict, Any
  |                          ^^^ F401
6 | 
7 | from src.crypto.constants import SEIGR_CELL_ID_PREFIX
  |
  = help: Remove unused import: `typing.Any`

src/immune_system/immune_system.py:8:35: F401 [*] `src.crypto.hash_utils.generate_hash` imported but unused
   |
 7 | from src.crypto.constants import SEIGR_CELL_ID_PREFIX
 8 | from src.crypto.hash_utils import generate_hash
   |                                   ^^^^^^^^^^^^^ F401
 9 | from src.crypto.helpers import encode_to_senary
10 | from src.immune_system.integrity_monitoring import immune_ping
   |
   = help: Remove unused import: `src.crypto.hash_utils.generate_hash`

src/immune_system/immune_system.py:9:32: F401 [*] `src.crypto.helpers.encode_to_senary` imported but unused
   |
 7 | from src.crypto.constants import SEIGR_CELL_ID_PREFIX
 8 | from src.crypto.hash_utils import generate_hash
 9 | from src.crypto.helpers import encode_to_senary
   |                                ^^^^^^^^^^^^^^^^ F401
10 | from src.immune_system.integrity_monitoring import immune_ping
11 | from src.replication.replication_controller import ReplicationController
   |
   = help: Remove unused import: `src.crypto.helpers.encode_to_senary`

src/immune_system/immune_system.py:23:76: W291 Trailing whitespace
   |
21 | class ImmuneSystem:
22 |     """
23 |     Core immune system module to handle integrity checks, threat detection, 
   |                                                                            ^ W291
24 |     adaptive monitoring, and replication strategies.
25 |     """
   |
   = help: Remove trailing whitespace

src/immune_system/integrity_monitoring.py:3:1: I001 [*] Import block is un-sorted or un-formatted
   |
 1 |   # src/immune_system/integrity_monitoring.py
 2 |   
 3 | / import logging
 4 | | from datetime import datetime, timezone
 5 | | from src.seigr_protocol.compiled.seed_dot_seigr_pb2 import SegmentMetadata
 6 | | from dot_seigr.capsule.seigr_integrity import verify_segment_integrity
 7 | | from src.dot_seigr.rollback import rollback_to_previous_state
 8 | | from src.replication.replication_manager import ReplicationManager
 9 | | 
10 | | logger = logging.getLogger(__name__)
   | |_^ I001
   |
   = help: Organize imports

src/immune_system/integrity_monitoring.py:78:101: E501 Line too long (103 > 100)
   |
77 |         logger.info(
78 |             f"Threat recorded for segment {segment_hash}. Total logged threats: {len(self.threat_log)}"
   |                                                                                                     ^^^ E501
79 |         )
   |

src/immune_system/integrity_monitoring.py:152:101: E501 Line too long (102 > 100)
    |
150 |         for segment in critical_segments:
151 |             logger.critical(
152 |                 f"Critical threat level reached for segment {segment}. Triggering urgent replication."
    |                                                                                                     ^^ E501
153 |             )
154 |             self.replication_manager.trigger_security_replication(segment)
    |

src/immune_system/rollback_handling.py:3:1: I001 [*] Import block is un-sorted or un-formatted
  |
1 |   # src/immune_system/rollback_handling.py
2 |   
3 | / import logging
4 | | from dot_seigr.seigr_file import SeigrFile
5 | | from dot_seigr.capsule.seigr_integrity import verify_segment_integrity
6 | | from src.dot_seigr.rollback import rollback_to_previous_state
7 | | from datetime import datetime, timezone
8 | | 
9 | | logger = logging.getLogger(__name__)
  | |_^ I001
  |
  = help: Organize imports

src/immune_system/rollback_handling.py:43:101: E501 Line too long (108 > 100)
   |
41 |     def __init__(self):
42 |         """
43 |         Initializes the RollbackHandler, which manages segment rollbacks when integrity issues are detected.
   |                                                                                                     ^^^^^^^^ E501
44 |         """
45 |         self.rollback_log = []
   |

src/immune_system/rollback_handling.py:75:101: E501 Line too long (108 > 100)
   |
73 |         if not self.verify_rollback_availability(seigr_file):
74 |             logger.warning(
75 |                 f"No previous layers available for rollback on segment {seigr_file.hash}. Rollback aborted."
   |                                                                                                     ^^^^^^^^ E501
76 |             )
77 |             return False
   |

src/immune_system/rollback_handling.py:87:101: E501 Line too long (116 > 100)
   |
85 |         ):
86 |             logger.error(
87 |                 f"Integrity verification failed for previous layer at {previous_layer.timestamp}. Rollback aborted."
   |                                                                                                     ^^^^^^^^^^^^^^^^ E501
88 |             )
89 |             return False
   |

src/immune_system/rollback_handling.py:96:101: E501 Line too long (115 > 100)
   |
95 |         logger.info(
96 |             f"Rollback successful for segment {seigr_file.hash}. Reverted to timestamp {previous_layer.timestamp}."
   |                                                                                                     ^^^^^^^^^^^^^^^ E501
97 |         )
98 |         return True
   |

src/immune_system/rollback_handling.py:118:101: E501 Line too long (106 > 100)
    |
116 |         seigr_file.add_temporal_layer()
117 |         logger.debug(
118 |             f"Segment {seigr_file.hash} reverted to previous state with hash {previous_layer.layer_hash}."
    |                                                                                                     ^^^^^^ E501
119 |         )
    |

src/immune_system/threat_detection.py:3:1: I001 [*] Import block is un-sorted or un-formatted
  |
1 |   # src/immune_system/threat_detection.py
2 |   
3 | / import logging
4 | | from datetime import datetime, timezone
5 | | from src.seigr_protocol.compiled.seed_dot_seigr_pb2 import SegmentMetadata
6 | | from src.replication.replication_controller import ReplicationController
7 | | from collections import defaultdict
8 | | 
9 | | logger = logging.getLogger(__name__)
  | |_^ I001
  |
  = help: Organize imports

src/immune_system/threat_detection.py:23:101: E501 Line too long (119 > 100)
   |
22 |         Args:
23 |             replication_controller (ReplicationController): Controller to handle replication when threats are detected.
   |                                                                                                     ^^^^^^^^^^^^^^^^^^^ E501
24 |             adaptive_threshold (int): Threshold to trigger adaptive replication for high-risk segments.
25 |             max_threat_log_size (int): Maximum number of threat logs to keep.
   |

src/immune_system/threat_detection.py:24:101: E501 Line too long (103 > 100)
   |
22 |         Args:
23 |             replication_controller (ReplicationController): Controller to handle replication when threats are detected.
24 |             adaptive_threshold (int): Threshold to trigger adaptive replication for high-risk segments.
   |                                                                                                     ^^^ E501
25 |             max_threat_log_size (int): Maximum number of threat logs to keep.
26 |         """
   |

src/immune_system/threat_detection.py:55:101: E501 Line too long (125 > 100)
   |
54 |         logger.info(
55 |             f"Threat recorded for segment {segment_hash}. Total threats for this segment: {self.threat_counts[segment_hash]}"
   |                                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^ E501
56 |         )
57 |         self._handle_threat_escalation(segment_hash)
   |

src/immune_system/threat_detection.py:71:101: E501 Line too long (132 > 100)
   |
69 |         if threat_count >= self.adaptive_threshold:
70 |             logger.critical(
71 |                 f"Adaptive threshold exceeded for segment {segment_hash} ({threat_count} threats). Initiating adaptive replication."
   |                                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E501
72 |             )
73 |             self.replication_controller.trigger_adaptive_replication(
   |

src/immune_system/threat_detection.py:76:30: PLR2004 Magic value used in comparison, consider replacing `3` with a constant variable
   |
74 |                 segment_hash, threat_level=5
75 |             )
76 |         elif threat_count >= 3:
   |                              ^ PLR2004
77 |             logger.warning(
78 |                 f"Security replication triggered for segment {segment_hash} due to high threat count: {threat_count}"
   |

src/immune_system/threat_detection.py:78:101: E501 Line too long (117 > 100)
   |
76 |         elif threat_count >= 3:
77 |             logger.warning(
78 |                 f"Security replication triggered for segment {segment_hash} due to high threat count: {threat_count}"
   |                                                                                                     ^^^^^^^^^^^^^^^^^ E501
79 |             )
80 |             self.replication_controller.trigger_security_replication(segment_hash)
   |

src/immune_system/threat_detection.py:83:101: E501 Line too long (110 > 100)
   |
81 |         else:
82 |             logger.info(
83 |                 f"Threat level for segment {segment_hash} is under control with threat count: {threat_count}."
   |                                                                                                     ^^^^^^^^^^ E501
84 |             )
   |

src/immune_system/threat_detection.py:114:101: E501 Line too long (107 > 100)
    |
112 |     def monitor_and_escalate(self):
113 |         """
114 |         Scans through the current threat counts and escalates any segment that reaches critical thresholds.
    |                                                                                                     ^^^^^^^ E501
115 |         """
116 |         for segment_hash in self.detect_high_risk_segments():
    |

src/immune_system/threat_detection.py:118:101: E501 Line too long (111 > 100)
    |
116 |         for segment_hash in self.detect_high_risk_segments():
117 |             logger.critical(
118 |                 f"Segment {segment_hash} has exceeded the adaptive threshold. Initiating critical replication."
    |                                                                                                     ^^^^^^^^^^^ E501
119 |             )
120 |             self.replication_controller.trigger_critical_replication(segment_hash)
    |

src/immune_system/threat_response.py:3:1: I001 [*] Import block is un-sorted or un-formatted
  |
1 |   # src/immune_system/threat_response.py
2 |   
3 | / import logging
4 | | from datetime import datetime, timezone
5 | | from src.seigr_protocol.compiled.common_pb2 import ThreatLevel, ThreatDetectionLog
6 | | from src.replication.replication_controller import ReplicationController
7 | | 
8 | | logger = logging.getLogger(__name__)
  | |_^ I001
  |
  = help: Organize imports

src/interpreter/capsule_interpreter.py:1:1: I001 [*] Import block is un-sorted or un-formatted
   |
 1 | / import logging
 2 | | from .metadata_interpreter import MetadataInterpreter
 3 | | from .data_interpreter import (
 4 | |     DataInterpreter,
 5 | | )  # Renamed to reflect visualization responsibilities
 6 | | from .compatibility import VersionCompatibility
 7 | | from dot_seigr.capsule.seigr_manager import SeigrClusterManager
 8 | | from src.seigr_protocol.compiled.seed_dot_seigr_pb2 import FileMetadata, SegmentMetadata
 9 | | 
10 | | logger = logging.getLogger(__name__)
   | |_^ I001
   |
   = help: Organize imports

src/interpreter/capsule_interpreter.py:51:26: F541 [*] f-string without any placeholders
   |
49 |                 validated_metadata
50 |             )
51 |             logger.debug(f"Segment metadata validated and prepared for display.")
   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ F541
52 |             return display_data
53 |         else:
   |
   = help: Remove extraneous `f` prefix

src/interpreter/capsule_interpreter.py:74:26: F541 [*] f-string without any placeholders
   |
72 |                 validated_metadata
73 |             )
74 |             logger.debug(f"File metadata validated and prepared for display.")
   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ F541
75 |             return display_data
76 |         else:
   |
   = help: Remove extraneous `f` prefix

src/interpreter/capsule_interpreter.py:89:101: E501 Line too long (103 > 100)
   |
88 |         Returns:
89 |             list: Decoded segment data, prepared for visualization, or an empty list if decoding fails.
   |                                                                                                     ^^^ E501
90 |         """
91 |         try:
   |

src/interpreter/compatibility.py:29:101: E501 Line too long (102 > 100)
   |
27 |         if target_version in SUPPORTED_VERSIONS:
28 |             logger.info(
29 |                 f"Version {target_version} is compatible with current version {self.current_version}."
   |                                                                                                     ^^ E501
30 |             )
31 |             return True
   |

src/interpreter/data_interpreter.py:1:1: I001 [*] Import block is un-sorted or un-formatted
   |
 1 | / import logging
 2 | | import os
 3 | | from datetime import datetime, timezone
 4 | | from src.seigr_protocol.compiled.seed_dot_seigr_pb2 import (
 5 | |     TextFileMetadata,
 6 | |     SegmentMetadata,
 7 | | )
 8 | | from src.crypto.hypha_crypt import encode_to_senary, decode_from_senary
 9 | | from src.crypto.hash_utils import hypha_hash
10 | | 
11 | | logger = logging.getLogger(__name__)
   | |_^ I001
   |
   = help: Organize imports

src/interpreter/data_interpreter.py:17:101: E501 Line too long (103 > 100)
   |
15 |     """
16 |     Processes and formats `.seigr` data for human-readable display and browser compatibility.
17 |     Provides methods for encoding, decoding, and preparing metadata and segment data for visualization.
   |                                                                                                     ^^^ E501
18 |     """
   |

src/interpreter/metadata_interpreter.py:1:1: I001 [*] Import block is un-sorted or un-formatted
   |
 1 | / import logging
 2 | | from datetime import datetime, timezone
 3 | | from src.crypto.hash_utils import hypha_hash
 4 | | from src.seigr_protocol.compiled.seed_dot_seigr_pb2 import (
 5 | |     FileMetadata,
 6 | |     SegmentMetadata,
 7 | |     AccessControlList,
 8 | | )
 9 | | 
10 | | logger = logging.getLogger(__name__)
   | |_^ I001
   |
   = help: Organize imports

src/interpreter/metadata_interpreter.py:119:101: E501 Line too long (101 > 100)
    |
117 |             str: Computed integrity hash for the metadata.
118 |         """
119 |         data_to_hash = f"{metadata.version}{metadata.file_hash}{metadata.creation_timestamp}".encode(
    |                                                                                                     ^ E501
120 |             "utf-8"
121 |         )
    |

src/interpreter/visualization_helper.py:76:101: E501 Line too long (101 > 100)
   |
74 |     def calculate_canvas_layout(self, num_elements: int, aspect_ratio=1.0) -> tuple:
75 |         """
76 |         Calculates an optimal canvas layout based on the number of elements and desired aspect ratio.
   |                                                                                                     ^ E501
77 | 
78 |         Args:
   |

src/ipfs/api_connector.py:1:1: I001 [*] Import block is un-sorted or un-formatted
  |
1 | / import requests
2 | | import logging
3 | | from time import sleep
4 | | 
5 | | logger = logging.getLogger(__name__)
  | |_^ I001
6 |   IPFS_API_URL = "http://127.0.0.1:5001/api/v0"
  |
  = help: Organize imports

src/ipfs/api_connector.py:20:44: PLR2004 Magic value used in comparison, consider replacing `200` with a constant variable
   |
18 |             try:
19 |                 response = requests.post(f"{self.api_url}/id")
20 |                 if response.status_code == 200:
   |                                            ^^^ PLR2004
21 |                     logger.info("Connected to IPFS HTTP API successfully.")
22 |                     return True
   |

src/ipfs/daemon_manager.py:1:1: I001 [*] Import block is un-sorted or un-formatted
  |
1 | / import subprocess
2 | | import atexit
3 | | import logging
4 | | import time
5 | | from datetime import datetime
6 | | 
7 | | logger = logging.getLogger(__name__)
  | |_^ I001
8 |   _ipfs_process = None
  |
  = help: Organize imports

src/ipfs/daemon_manager.py:17:16: PLW0603 Using the global statement to update `_ipfs_process` is discouraged
   |
16 |     def start_ipfs_daemon(self):
17 |         global _ipfs_process
   |                ^^^^^^^^^^^^^ PLW0603
18 |         if _ipfs_process is not None:
19 |             logger.warning("IPFS daemon is already running.")
   |

src/ipfs/daemon_manager.py:17:16: PLW0603 Using the global statement to update `_ipfs_process` is discouraged
   |
16 |     def start_ipfs_daemon(self):
17 |         global _ipfs_process
   |                ^^^^^^^^^^^^^ PLW0603
18 |         if _ipfs_process is not None:
19 |             logger.warning("IPFS daemon is already running.")
   |

src/ipfs/daemon_manager.py:46:16: PLW0603 Using the global statement to update `_ipfs_process` is discouraged
   |
45 |     def stop_ipfs_daemon(self):
46 |         global _ipfs_process
   |                ^^^^^^^^^^^^^ PLW0603
47 |         if _ipfs_process is not None:
48 |             _ipfs_process.terminate()
   |

src/ipfs/file_handler.py:1:1: I001 [*] Import block is un-sorted or un-formatted
  |
1 | / import requests
2 | | import json
3 | | import logging
4 | | 
5 | | logger = logging.getLogger(__name__)
  | |_^ I001
  |
  = help: Organize imports

src/ipfs/ipfs_manager.py:1:1: I001 [*] Import block is un-sorted or un-formatted
  |
1 | / import logging
2 | | from src.ipfs.daemon_manager import DaemonManager
3 | | from src.ipfs.api_connector import APIConnector
4 | | from src.ipfs.file_handler import FileHandler
5 | | from src.ipfs.session_tracker import SessionTracker
6 | | 
7 | | logger = logging.getLogger(__name__)
  | |_^ I001
  |
  = help: Organize imports

src/replication/__init__.py:2:1: I001 [*] Import block is un-sorted or un-formatted
  |
1 |   # src/replication/__init__.py
2 | / from .replication_controller import ReplicationController
3 | | from .replication_self_heal import initiate_self_heal
4 | | from .replication_threat import detect_replication_threat
5 | | from .replication_manager import ReplicationManager
  |
  = help: Organize imports

src/replication/replication_controller.py:1:1: I001 [*] Import block is un-sorted or un-formatted
  |
1 | / import logging
2 | | from src.replication.replication_manager import ReplicationManager
3 | | from .replication_demand import DemandBasedReplication
4 | | from .replication_threat import ThreatBasedReplication
5 | | from .replication_self_heal import SelfHealReplication
6 | | from src.dot_seigr.seigr_protocol.seed_dot_seigr_pb2 import SegmentMetadata
7 | | 
8 | | logger = logging.getLogger(__name__)
  | |_^ I001
  |
  = help: Organize imports

src/replication/replication_controller.py:36:101: E501 Line too long (105 > 100)
   |
35 |         logger.info(
36 |             "ReplicationController initialized with min_replication=%d, demand_threshold=%d, hyphens=%s",
   |                                                                                                     ^^^^^ E501
37 |             min_replication,
38 |             demand_threshold,
   |

src/replication/replication_controller.py:44:101: E501 Line too long (119 > 100)
   |
42 |     def monitor_and_adapt_replication(self, segments_status: dict):
43 |         """
44 |         Monitors replication status and dynamically adapts replication based on demand, threat, and self-healing needs.
   |                                                                                                     ^^^^^^^^^^^^^^^^^^^ E501
45 | 
46 |         Args:
   |

src/replication/replication_controller.py:47:101: E501 Line too long (130 > 100)
   |
46 |         Args:
47 |             segments_status (dict): Status info for each segment, including access counts, threat levels, and replication details.
   |                                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E501
48 |         """
49 |         for segment_hash, status in segments_status.items():
   |

src/replication/replication_controller.py:53:101: E501 Line too long (111 > 100)
   |
51 |             if not isinstance(segment_metadata, SegmentMetadata):
52 |                 logger.warning(
53 |                     f"Skipping replication adaptation for segment {segment_hash}: Invalid or missing metadata."
   |                                                                                                     ^^^^^^^^^^^ E501
54 |                 )
55 |                 continue
   |

src/replication/replication_controller.py:64:101: E501 Line too long (103 > 100)
   |
62 |             logger.debug(
63 |                 f"Monitoring segment {segment_hash}: Access={access_count}, Threat={threat_level}, "
64 |                 f"Current Replication={current_replication}, Network Replication={network_replication}"
   |                                                                                                     ^^^ E501
65 |             )
   |

src/replication/replication_controller.py:90:101: E501 Line too long (117 > 100)
   |
88 |         if access_count > self.demand_threshold:
89 |             logger.info(
90 |                 f"High demand detected for segment {segment_metadata.segment_hash} with access count {access_count}."
   |                                                                                                     ^^^^^^^^^^^^^^^^^ E501
91 |             )
92 |             try:
   |

src/replication/replication_controller.py:116:101: E501 Line too long (131 > 100)
    |
114 |         if threat_level > 0:
115 |             logger.info(
116 |                 f"Threat-based replication triggered for segment {segment_metadata.segment_hash} with threat level {threat_level}."
    |                                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E501
117 |             )
118 |             try:
    |

src/replication/replication_controller.py:143:101: E501 Line too long (123 > 100)
    |
141 |         if network_replication < self.min_replication:
142 |             logger.info(
143 |                 f"Self-healing required for segment {segment_metadata.segment_hash}. Current replication is below minimum."
    |                                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^ E501
144 |             )
145 |             try:
    |

src/replication/replication_controller.py:154:101: E501 Line too long (103 > 100)
    |
152 |             except Exception as e:
153 |                 logger.error(
154 |                     f"Self-healing replication failed for segment {segment_metadata.segment_hash}: {e}"
    |                                                                                                     ^^^ E501
155 |                 )
    |

src/replication/replication_demand.py:2:1: I001 [*] Import block is un-sorted or un-formatted
  |
1 |   # src/replication/replication_demand.py
2 | / import logging
3 | | from src.replication.replication_manager import ReplicationManager
4 | | from src.dot_seigr.seigr_protocol.seed_dot_seigr_pb2 import SegmentMetadata
5 | | 
6 | | logger = logging.getLogger(__name__)
  | |_^ I001
  |
  = help: Organize imports

src/replication/replication_demand.py:43:101: E501 Line too long (132 > 100)
   |
41 |         if access_count < demand_threshold:
42 |             logger.info(
43 |                 f"Segment {segment.segment_hash} access below threshold ({access_count}/{demand_threshold}). No replication needed."
   |                                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E501
44 |             )
45 |             return False
   |

src/replication/replication_demand.py:61:101: E501 Line too long (140 > 100)
   |
59 |             if success:
60 |                 logger.info(
61 |                     f"Demand-based replication completed for segment {segment.segment_hash} with replication count: {new_replication_count}"
   |                                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E501
62 |                 )
63 |                 return True
   |

src/replication/replication_demand.py:66:101: E501 Line too long (118 > 100)
   |
64 |             else:
65 |                 raise ValueError(
66 |                     f"Replication failed for segment {segment.segment_hash}. Requested count: {new_replication_count}"
   |                                                                                                     ^^^^^^^^^^^^^^^^^^ E501
67 |                 )
   |

src/replication/replication_demand.py:88:27: PLR2004 Magic value used in comparison, consider replacing `1000` with a constant variable
   |
86 |             int: Scaled replication count based on demand.
87 |         """
88 |         if access_count > 1000:
   |                           ^^^^ PLR2004
89 |             replication_count = max(
90 |                 min_replication, 12
   |

src/replication/replication_demand.py:92:29: PLR2004 Magic value used in comparison, consider replacing `500` with a constant variable
   |
90 |                 min_replication, 12
91 |             )  # High demand: aggressive replication
92 |         elif access_count > 500:
   |                             ^^^ PLR2004
93 |             replication_count = max(min_replication, 8)  # Moderate to high demand
94 |         elif access_count > 100:
   |

src/replication/replication_demand.py:94:29: PLR2004 Magic value used in comparison, consider replacing `100` with a constant variable
   |
92 |         elif access_count > 500:
93 |             replication_count = max(min_replication, 8)  # Moderate to high demand
94 |         elif access_count > 100:
   |                             ^^^ PLR2004
95 |             replication_count = max(min_replication, 5)  # Moderate demand
96 |         elif access_count > 10:
   |

src/replication/replication_demand.py:96:29: PLR2004 Magic value used in comparison, consider replacing `10` with a constant variable
   |
94 |         elif access_count > 100:
95 |             replication_count = max(min_replication, 5)  # Moderate demand
96 |         elif access_count > 10:
   |                             ^^ PLR2004
97 |             replication_count = max(min_replication, 3)  # Low demand
98 |         else:
   |

src/replication/replication_demand.py:102:101: E501 Line too long (103 > 100)
    |
101 |         logger.debug(
102 |             f"Calculated demand-based replication count for access {access_count}: {replication_count}"
    |                                                                                                     ^^^ E501
103 |         )
104 |         return replication_count
    |

src/replication/replication_demand.py:113:101: E501 Line too long (114 > 100)
    |
112 |         Args:
113 |             segments_status (dict): Status info for each segment, including access counts and current replication.
    |                                                                                                     ^^^^^^^^^^^^^^ E501
114 |             demand_threshold (int): Access threshold to trigger high-demand replication.
115 |             min_replication (int): Minimum replication level required for all segments.
    |

src/replication/replication_demand.py:123:101: E501 Line too long (108 > 100)
    |
121 |             if not segment_metadata:
122 |                 logger.warning(
123 |                     f"Missing metadata for segment {segment_hash}. Skipping demand-based replication check."
    |                                                                                                     ^^^^^^^^ E501
124 |                 )
125 |                 continue
    |

src/replication/replication_demand.py:150:101: E501 Line too long (104 > 100)
    |
149 |         Args:
150 |             segments_status (dict): Dictionary of segment statuses including metadata and access counts.
    |                                                                                                     ^^^^ E501
151 |             demand_threshold (int): Minimum access count to trigger demand-based replication.
152 |             min_replication (int): Minimum replication level for scaling purposes.
    |

src/replication/replication_manager.py:1:1: I001 [*] Import block is un-sorted or un-formatted
  |
1 | / import logging
2 | | from typing import List, Dict
3 | | from src.replication.target_calculator import calculate_target_replication
4 | | from src.replication.redistributor import redistribute_replicas
5 | | 
6 | | logger = logging.getLogger(__name__)
  | |_^ I001
  |
  = help: Organize imports

src/replication/replication_manager.py:27:101: E501 Line too long (115 > 100)
   |
25 |     def replicate_segment(self, segment_hash: str, replication_count: int) -> bool:
26 |         """
27 |         Manages the replication of a segment to available network hyphens based on the specified replication count.
   |                                                                                                     ^^^^^^^^^^^^^^^ E501
28 | 
29 |         Args:
   |

src/replication/replication_manager.py:79:101: E501 Line too long (107 > 100)
   |
77 |     def _replicate_to_hyphen(self, segment_hash: str, hyphen: str) -> bool:
78 |         """
79 |         Replicates a segment to a specified hyphen. This function should contain network replication logic.
   |                                                                                                     ^^^^^^^ E501
80 | 
81 |         Args:
   |

src/replication/replication_manager.py:97:101: E501 Line too long (101 > 100)
   |
95 |         except Exception as e:
96 |             logger.error(
97 |                 f"Replication to hyphen {hyphen} failed for segment {segment_hash} due to error: {e}"
   |                                                                                                     ^ E501
98 |             )
99 |             return False
   |

src/replication/replication_manager.py:103:101: E501 Line too long (101 > 100)
    |
101 |     def monitor_hyphen_status(self) -> Dict[str, bool]:
102 |         """
103 |         Monitors and returns the status of each network hyphen, assuming connectivity or load checks.
    |                                                                                                     ^ E501
104 | 
105 |         Returns:
    |

src/replication/replication_manager.py:134:101: E501 Line too long (108 > 100)
    |
132 |         if len(current_hyphens) >= target_replication:
133 |             logger.info(
134 |                 f"Segment {segment_hash} already meets target replication. Current: {len(current_hyphens)}."
    |                                                                                                     ^^^^^^^^ E501
135 |             )
136 |             return True
    |

src/replication/replication_manager.py:201:101: E501 Line too long (153 > 100)
    |
199 |         if current_replication_count >= target_replication_count:
200 |             logger.info(
201 |                 f"Segment {segment_hash} meets or exceeds target replication ({current_replication_count}/{target_replication_count}). No action needed."
    |                                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E501
202 |             )
203 |             return True
    |

src/replication/replication_manager.py:209:101: E501 Line too long (115 > 100)
    |
207 |         if success:
208 |             logger.info(
209 |                 f"Replication for segment {segment_hash} adjusted to meet target count: {target_replication_count}"
    |                                                                                                     ^^^^^^^^^^^^^^^ E501
210 |             )
211 |         else:
    |

src/replication/replication_manager.py:213:101: E501 Line too long (119 > 100)
    |
211 |         else:
212 |             logger.error(
213 |                 f"Failed to achieve target replication for segment {segment_hash}. Desired: {target_replication_count}"
    |                                                                                                     ^^^^^^^^^^^^^^^^^^^ E501
214 |             )
    |

src/replication/replication_manager.py:233:27: PLR2004 Magic value used in comparison, consider replacing `5` with a constant variable
    |
232 |         # Adjust based on threat level
233 |         if threat_level > 5:
    |                           ^ PLR2004
234 |             replication_count = max(
235 |                 replication_count, 10
    |

src/replication/replication_manager.py:237:29: PLR2004 Magic value used in comparison, consider replacing `2` with a constant variable
    |
235 |                 replication_count, 10
236 |             )  # High threat level demands higher replication
237 |         elif threat_level > 2:
    |                             ^ PLR2004
238 |             replication_count = max(replication_count, 7)  # Moderate threat level
    |

src/replication/replication_manager.py:241:27: PLR2004 Magic value used in comparison, consider replacing `1000` with a constant variable
    |
240 |         # Further adjust based on demand level
241 |         if demand_level > 1000:
    |                           ^^^^ PLR2004
242 |             replication_count = min(
243 |                 self.max_replication_count, max(replication_count, 12)
    |

src/replication/replication_manager.py:245:29: PLR2004 Magic value used in comparison, consider replacing `500` with a constant variable
    |
243 |                 self.max_replication_count, max(replication_count, 12)
244 |             )  # Very high demand
245 |         elif demand_level > 500:
    |                             ^^^ PLR2004
246 |             replication_count = min(
247 |                 self.max_replication_count, max(replication_count, 8)
    |

src/replication/replication_manager.py:249:29: PLR2004 Magic value used in comparison, consider replacing `100` with a constant variable
    |
247 |                 self.max_replication_count, max(replication_count, 8)
248 |             )  # High demand
249 |         elif demand_level > 100:
    |                             ^^^ PLR2004
250 |             replication_count = min(
251 |                 self.max_replication_count, max(replication_count, 5)
    |

src/replication/replication_manager.py:255:101: E501 Line too long (132 > 100)
    |
254 |         logger.debug(
255 |             f"Calculated target replication count based on demand ({demand_level}) and threat ({threat_level}): {replication_count}"
    |                                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E501
256 |         )
257 |         return replication_count
    |

src/replication/replication_self_heal.py:1:1: I001 [*] Import block is un-sorted or un-formatted
  |
1 | / import logging
2 | | from src.replication.replication_manager import ReplicationManager
3 | | from src.dot_seigr.seigr_protocol.seed_dot_seigr_pb2 import SegmentMetadata
4 | | 
5 | | logger = logging.getLogger(__name__)
  | |_^ I001
  |
  = help: Organize imports

src/replication/replication_self_heal.py:20:101: E501 Line too long (112 > 100)
   |
18 |     """
19 |     logger.info(
20 |         f"Initiating self-heal process for segment {segment_hash} with target replication: {target_replication}"
   |                                                                                                     ^^^^^^^^^^^^ E501
21 |     )
   |

src/replication/replication_self_heal.py:28:101: E501 Line too long (158 > 100)
   |
26 |     if current_replication_count >= target_replication:
27 |         logger.info(
28 |             f"Segment {segment_hash} already meets the target replication count ({current_replication_count}/{target_replication}). No self-healing required."
   |                                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E501
29 |         )
30 |         return True
   |

src/replication/replication_self_heal.py:42:101: E501 Line too long (116 > 100)
   |
40 |     if success:
41 |         logger.info(
42 |             f"Self-healing successful for segment {segment_hash}, reaching target replication: {target_replication}"
   |                                                                                                     ^^^^^^^^^^^^^^^^ E501
43 |         )
44 |         return True
   |

src/replication/replication_self_heal.py:47:101: E501 Line too long (119 > 100)
   |
45 |     else:
46 |         logger.error(
47 |             f"Self-healing failed for segment {segment_hash}. Could not reach target replication: {target_replication}"
   |                                                                                                     ^^^^^^^^^^^^^^^^^^^ E501
48 |         )
49 |         return False
   |

src/replication/replication_self_heal.py:89:101: E501 Line too long (155 > 100)
   |
87 |         if network_replication >= min_replication:
88 |             logger.info(
89 |                 f"Segment {segment.segment_hash} meets minimum replication requirements ({network_replication}/{min_replication}). No self-healing needed."
   |                                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E501
90 |             )
91 |             return False
   |

src/replication/replication_self_heal.py:113:101: E501 Line too long (118 > 100)
    |
111 |             else:
112 |                 raise ValueError(
113 |                     f"Replication failed for segment {segment.segment_hash}. Requested {replication_needed} replicas."
    |                                                                                                     ^^^^^^^^^^^^^^^^^^ E501
114 |                 )
    |

src/replication/replication_self_heal.py:129:101: E501 Line too long (105 > 100)
    |
128 |         Args:
129 |             segments_status (dict): Dictionary with segment hash as key and replication details as value.
    |                                                                                                     ^^^^^ E501
130 |             min_replication (int): Minimum replication level for all segments.
131 |         """
    |

src/replication/replication_self_heal.py:172:101: E501 Line too long (116 > 100)
    |
170 |         """
171 |         logger.info(
172 |             f"Initiating self-heal process for segment {segment_hash} with target replication: {target_replication}"
    |                                                                                                     ^^^^^^^^^^^^^^^^ E501
173 |         )
    |

src/replication/replication_self_heal.py:182:101: E501 Line too long (162 > 100)
    |
180 |         if current_replication_count >= target_replication:
181 |             logger.info(
182 |                 f"Segment {segment_hash} already meets the target replication count ({current_replication_count}/{target_replication}). No self-healing required."
    |                                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E501
183 |             )
184 |             return True
    |

src/replication/replication_self_heal.py:198:101: E501 Line too long (120 > 100)
    |
196 |         if success:
197 |             logger.info(
198 |                 f"Self-healing successful for segment {segment_hash}, reaching target replication: {target_replication}"
    |                                                                                                     ^^^^^^^^^^^^^^^^^^^^ E501
199 |             )
200 |             return True
    |

src/replication/replication_self_heal.py:203:101: E501 Line too long (123 > 100)
    |
201 |         else:
202 |             logger.error(
203 |                 f"Self-healing failed for segment {segment_hash}. Could not reach target replication: {target_replication}"
    |                                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^ E501
204 |             )
205 |             return False
    |

src/replication/replication_threat.py:1:1: I001 [*] Import block is un-sorted or un-formatted
  |
1 | / import logging
2 | | from src.replication.replication_manager import ReplicationManager
3 | | from src.dot_seigr.seigr_protocol.seed_dot_seigr_pb2 import SegmentMetadata
4 | | 
5 | | logger = logging.getLogger(__name__)
  | |_^ I001
  |
  = help: Organize imports

src/replication/replication_threat.py:8:5: PLR0913 Too many arguments in function definition (6 > 5)
   |
 8 | def detect_replication_threat(
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^ PLR0913
 9 |     segment_hash: str,
10 |     replication_manager: ReplicationManager,
   |

src/replication/replication_threat.py:35:101: E501 Line too long (111 > 100)
   |
33 |     if error_rate > threshold_error_rate:
34 |         logger.warning(
35 |             f"High error rate detected for segment {segment_hash} (Error Rate: {error_rate}). Threat detected."
   |                                                                                                     ^^^^^^^^^^^ E501
36 |         )
37 |         return True
   |

src/replication/replication_threat.py:42:101: E501 Line too long (126 > 100)
   |
40 |     if access_frequency > high_demand_threshold:
41 |         logger.info(
42 |             f"High demand detected for segment {segment_hash} (Access Frequency: {access_frequency}). Triggering replication."
   |                                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^ E501
43 |         )
44 |         replication_manager.replicate_segment(
   |

src/replication/replication_threat.py:125:28: PLR2004 Magic value used in comparison, consider replacing `5` with a constant variable
    |
123 |         """
124 |         # Define replication scaling based on threat level
125 |         if threat_level >= 5:
    |                            ^ PLR2004
126 |             replication_count = min_replication + 5
127 |         elif threat_level >= 3:
    |

src/replication/replication_threat.py:127:30: PLR2004 Magic value used in comparison, consider replacing `3` with a constant variable
    |
125 |         if threat_level >= 5:
126 |             replication_count = min_replication + 5
127 |         elif threat_level >= 3:
    |                              ^ PLR2004
128 |             replication_count = min_replication + 3
129 |         elif threat_level >= 1:
    |

src/replication/replication_threat.py:149:101: E501 Line too long (103 > 100)
    |
147 |         for segment in high_risk_segments:
148 |             logger.warning(
149 |                 f"High-risk segment detected: {segment.segment_hash}. Initiating adaptive replication."
    |                                                                                                     ^^^ E501
150 |             )
151 |             self.adaptive_threat_replication(
    |

src/replication/target_calculator.py:22:23: PLR2004 Magic value used in comparison, consider replacing `5` with a constant variable
   |
21 |     # Adjust replication based on demand and threat levels
22 |     if demand_level > 5:
   |                       ^ PLR2004
23 |         base_replication += 2
24 |     elif demand_level > 8:
   |

src/replication/target_calculator.py:24:25: PLR2004 Magic value used in comparison, consider replacing `8` with a constant variable
   |
22 |     if demand_level > 5:
23 |         base_replication += 2
24 |     elif demand_level > 8:
   |                         ^ PLR2004
25 |         base_replication += 4
   |

src/replication/target_calculator.py:27:23: PLR2004 Magic value used in comparison, consider replacing `7` with a constant variable
   |
25 |         base_replication += 4
26 | 
27 |     if threat_level > 7:
   |                       ^ PLR2004
28 |         base_replication += 3
29 |     elif threat_level > 9:
   |

src/replication/target_calculator.py:29:25: PLR2004 Magic value used in comparison, consider replacing `9` with a constant variable
   |
27 |     if threat_level > 7:
28 |         base_replication += 3
29 |     elif threat_level > 9:
   |                         ^ PLR2004
30 |         base_replication += 5
   |

src/replication/target_calculator.py:33:101: E501 Line too long (109 > 100)
   |
32 |     logger.debug(
33 |         f"Calculated target replication: {base_replication} (demand: {demand_level}, threat: {threat_level})"
   |                                                                                                     ^^^^^^^^^ E501
34 |     )
35 |     return base_replication
   |

src/seigr_cell/seigr_cell.py:1:1: I001 [*] Import block is un-sorted or un-formatted
   |
 1 | / import logging
 2 | | from datetime import datetime, timezone
 3 | | from src.seigr_cell.seigr_cell_encoder import SeigrCellEncoder
 4 | | from src.seigr_protocol.compiled.seigr_cell_pb2 import (
 5 | |     SeigrCell,
 6 | |     Metadata,
 7 | |     CoordinateIndex,
 8 | |     RE_License,
 9 | |     Permissions,
10 | |     CustomProperty,
11 | | )
12 | | from src.crypto.integrity_verification import verify_integrity
13 | | from src.crypto.key_derivation import generate_salt
14 | | import uuid
15 | | import hashlib
16 | | 
17 | | # Initialize logger
   | |_^ I001
18 |   logger = logging.getLogger(__name__)
   |
   = help: Organize imports

src/seigr_cell/seigr_cell.py:7:5: F401 [*] `src.seigr_protocol.compiled.seigr_cell_pb2.CoordinateIndex` imported but unused
  |
5 |     SeigrCell,
6 |     Metadata,
7 |     CoordinateIndex,
  |     ^^^^^^^^^^^^^^^ F401
8 |     RE_License,
9 |     Permissions,
  |
  = help: Remove unused import

src/seigr_cell/seigr_cell.py:8:5: F401 [*] `src.seigr_protocol.compiled.seigr_cell_pb2.RE_License` imported but unused
   |
 6 |     Metadata,
 7 |     CoordinateIndex,
 8 |     RE_License,
   |     ^^^^^^^^^^ F401
 9 |     Permissions,
10 |     CustomProperty,
   |
   = help: Remove unused import

src/seigr_cell/seigr_cell.py:9:5: F401 [*] `src.seigr_protocol.compiled.seigr_cell_pb2.Permissions` imported but unused
   |
 7 |     CoordinateIndex,
 8 |     RE_License,
 9 |     Permissions,
   |     ^^^^^^^^^^^ F401
10 |     CustomProperty,
11 | )
   |
   = help: Remove unused import

src/seigr_cell/seigr_cell.py:10:5: F401 [*] `src.seigr_protocol.compiled.seigr_cell_pb2.CustomProperty` imported but unused
   |
 8 |     RE_License,
 9 |     Permissions,
10 |     CustomProperty,
   |     ^^^^^^^^^^^^^^ F401
11 | )
12 | from src.crypto.integrity_verification import verify_integrity
   |
   = help: Remove unused import

src/seigr_cell/seigr_cell.py:13:39: F401 [*] `src.crypto.key_derivation.generate_salt` imported but unused
   |
11 | )
12 | from src.crypto.integrity_verification import verify_integrity
13 | from src.crypto.key_derivation import generate_salt
   |                                       ^^^^^^^^^^^^^ F401
14 | import uuid
15 | import hashlib
   |
   = help: Remove unused import: `src.crypto.key_derivation.generate_salt`

src/seigr_cell/seigr_cell.py:21:7: F811 Redefinition of unused `SeigrCell` from line 5
   |
21 | class SeigrCell:
   |       ^^^^^^^^^ F811
22 |     def __init__(
23 |         self,
   |
   = help: Remove definition: `SeigrCell`

src/seigr_cell/seigr_cell_decoder.py:3:1: I001 [*] Import block is un-sorted or un-formatted
   |
 1 |   # src/seigr_cell/seigr_cell_decoder.py
 2 |   
 3 | / import logging
 4 | | from src.crypto.hypha_crypt import HyphaCrypt
 5 | | from src.crypto.cbor_utils import decode_data as cbor_decode
 6 | | from src.seigr_protocol.compiled.integrity_pb2 import VerificationStatus
 7 | | from src.crypto.key_derivation import derive_key
 8 | | 
 9 | | # Initialize logging for the SeigrCellDecoder
   | |_^ I001
10 |   logger = logging.getLogger(__name__)
   |
   = help: Organize imports

src/seigr_cell/seigr_cell_decoder.py:47:13: F841 Local variable `primary_hash` is assigned to but never used
   |
45 |             encrypted_data = payload["data"]
46 |             metadata = payload.get("metadata", {})
47 |             primary_hash = payload["primary_hash"]
   |             ^^^^^^^^^^^^ F841
48 |             hash_tree = payload["hash_tree"]
49 |             logger.info(f"Decoded CBOR payload for segment {self.segment_id}")
   |
   = help: Remove assignment to unused variable `primary_hash`

src/seigr_cell/seigr_cell_decoder.py:98:13: F841 Local variable `primary_hash` is assigned to but never used
   |
96 |             payload = cbor_decode(encoded_cell)
97 |             encrypted_data = payload["data"]
98 |             primary_hash = payload["primary_hash"]
   |             ^^^^^^^^^^^^ F841
99 |             hash_tree = payload["hash_tree"]
   |
   = help: Remove assignment to unused variable `primary_hash`

src/seigr_cell/seigr_cell_decoder.py:99:13: F841 Local variable `hash_tree` is assigned to but never used
    |
 97 |             encrypted_data = payload["data"]
 98 |             primary_hash = payload["primary_hash"]
 99 |             hash_tree = payload["hash_tree"]
    |             ^^^^^^^^^ F841
100 | 
101 |             # Initialize HyphaCrypt with encrypted data
    |
    = help: Remove assignment to unused variable `hash_tree`

src/seigr_cell/seigr_cell_decoder.py:105:13: F841 Local variable `current_tree` is assigned to but never used
    |
103 |                 encrypted_data, self.segment_id, self.hash_depth, self.use_senary
104 |             )
105 |             current_tree = hypha.compute_layered_hashes()
    |             ^^^^^^^^^^^^ F841
106 |             integrity_status = hypha.verify_integrity(
107 |                 reference_hash_tree, partial_depth=self.hash_depth
    |
    = help: Remove assignment to unused variable `current_tree`

src/seigr_cell/seigr_cell_encoder.py:3:1: I001 [*] Import block is un-sorted or un-formatted
  |
1 |   # src/seigr_cell/seigr_cell_encoder.py
2 |   
3 | / import logging
4 | | from src.crypto.hypha_crypt import HyphaCrypt
5 | | from src.crypto.cbor_utils import encode_data as cbor_encode, decode_data as cbor_decode
6 | | 
7 | | # Initialize logging for the SeigrCellEncoder
  | |_^ I001
8 |   logger = logging.getLogger(__name__)
  |
  = help: Organize imports

src/seigr_cell/seigr_cell_encoder.py:12:101: E501 Line too long (106 > 100)
   |
11 | class SeigrCellEncoder:
12 |     """Encodes and decodes data into Seigr Cells with HyphaCrypt encryption and integrity verification."""
   |                                                                                                     ^^^^^^ E501
13 | 
14 |     def __init__(self, segment_id, hash_depth=4, use_senary=True):
   |

src/seigr_cell/seigr_cell_encoder.py:81:9: F841 Local variable `primary_hash` is assigned to but never used
   |
79 |         encrypted_data = payload["data"]
80 |         metadata = payload["metadata"]
81 |         primary_hash = payload["primary_hash"]
   |         ^^^^^^^^^^^^ F841
82 |         hash_tree = payload["hash_tree"]
   |
   = help: Remove assignment to unused variable `primary_hash`

src/seigr_cell/seigr_cell_manager.py:3:1: I001 [*] Import block is un-sorted or un-formatted
   |
 1 |   # src/seigr_cell/seigr_cell_manager.py
 2 |   
 3 | / import logging
 4 | | from src.seigr_cell.seigr_cell_encoder import SeigrCellEncoder
 5 | | from src.seigr_cell.seigr_cell_decoder import SeigrCellDecoder
 6 | | from src.seigr_cell.seigr_cell_validator import SeigrCellValidator
 7 | | from src.seigr_cell.seigr_cell_metadata import SeigrCellMetadata
 8 | | 
 9 | | 
10 | | class SeigrCellManager:
   | |_^ I001
11 |       """
12 |       SeigrCellManager handles the lifecycle of a Seigr Cell, managing its creation, encoding,
   |
   = help: Organize imports

src/seigr_cell/seigr_cell_manager.py:42:35: F821 Undefined name `loggingLOG_LEVEL_INFO`
   |
40 |         # Logging setup for monitoring cell actions
41 |         self.logger = logging.getLogger(__name__)
42 |         logging.basicConfig(level=loggingLOG_LEVEL_INFO)
   |                                   ^^^^^^^^^^^^^^^^^^^^^ F821
43 |         self.logger.info(
44 |             f"Initialized SeigrCellManager with segment_id={segment_id}, hash_depth={hash_depth}, use_senary={use_senary}."
   |

src/seigr_cell/seigr_cell_manager.py:44:101: E501 Line too long (123 > 100)
   |
42 |         logging.basicConfig(level=loggingLOG_LEVEL_INFO)
43 |         self.logger.info(
44 |             f"Initialized SeigrCellManager with segment_id={segment_id}, hash_depth={hash_depth}, use_senary={use_senary}."
   |                                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^ E501
45 |         )
   |

src/seigr_cell/seigr_cell_metadata.py:3:1: I001 [*] Import block is un-sorted or un-formatted
  |
1 |   # src/seigr_cell/seigr_cell_metadata.py
2 |   
3 | / import logging
4 | | from datetime import datetime, timezone
5 | | from src.crypto.helpers import generate_metadata
6 | | 
7 | | # Initialize logger for metadata management
  | |_^ I001
8 |   logger = logging.getLogger(__name__)
  |
  = help: Organize imports

src/seigr_cell/seigr_cell_validator.py:3:1: I001 [*] Import block is un-sorted or un-formatted
   |
 1 |   # src/seigr_cell/seigr_cell_validator.py
 2 |   
 3 | / import logging
 4 | | from datetime import datetime, timezone
 5 | | from src.crypto.integrity_verification import (
 6 | |     verify_integrity,
 7 | |     verify_hierarchical_integrity,
 8 | | )
 9 | | from src.seigr_protocol.compiled.error_handling_pb2 import (
10 | |     ErrorLogEntry,
11 | |     ErrorSeverity,
12 | |     ErrorResolutionStrategy,
13 | | )
14 | | from src.seigr_protocol.compiled.integrity_pb2 import VerificationStatus
15 | | 
16 | | # Initialize logger for Seigr Cell validation
   | |_^ I001
17 |   logger = logging.getLogger(__name__)
   |
   = help: Organize imports

src/seigr_cell/seigr_cell_validator.py:4:32: F401 [*] `datetime.timezone` imported but unused
  |
3 | import logging
4 | from datetime import datetime, timezone
  |                                ^^^^^^^^ F401
5 | from src.crypto.integrity_verification import (
6 |     verify_integrity,
  |
  = help: Remove unused import: `datetime.timezone`

src/seigr_cell/seigr_cell_validator.py:14:55: F401 [*] `src.seigr_protocol.compiled.integrity_pb2.VerificationStatus` imported but unused
   |
12 |     ErrorResolutionStrategy,
13 | )
14 | from src.seigr_protocol.compiled.integrity_pb2 import VerificationStatus
   |                                                       ^^^^^^^^^^^^^^^^^^ F401
15 | 
16 | # Initialize logger for Seigr Cell validation
   |
   = help: Remove unused import: `src.seigr_protocol.compiled.integrity_pb2.VerificationStatus`

src/seigr_cell/seigr_cell_validator.py:22:101: E501 Line too long (107 > 100)
   |
20 | class SeigrCellValidator:
21 |     """
22 |     Validates Seigr Cells for structural integrity, metadata correctness, and hierarchical hash conformity.
   |                                                                                                     ^^^^^^^ E501
23 |     """
   |

src/seigr_cell/seigr_cell_validator.py:192:9: F841 Local variable `error_log` is assigned to but never used
    |
190 |             exception: The exception raised during the error.
191 |         """
192 |         error_log = ErrorLogEntry(
    |         ^^^^^^^^^ F841
193 |             error_id=error_id,
194 |             severity=ErrorSeverity.ERROR_SEVERITY_HIGH,
    |
    = help: Remove assignment to unused variable `error_log`

src/seigr_protocol/compiled/access_control_pb2.py:7:1: I001 [*] Import block is un-sorted or un-formatted
   |
 5 |   # Protobuf Python Version: 5.29.2
 6 |   """Generated protocol buffer code."""
 7 | / from google.protobuf import descriptor as _descriptor
 8 | | from google.protobuf import descriptor_pool as _descriptor_pool
 9 | | from google.protobuf import runtime_version as _runtime_version
10 | | from google.protobuf import symbol_database as _symbol_database
11 | | from google.protobuf.internal import builder as _builder
12 | | _runtime_version.ValidateProtobufRuntimeVersion(
   | |_^ I001
13 |       _runtime_version.Domain.PUBLIC,
14 |       5,
   |
   = help: Organize imports

src/seigr_protocol/compiled/access_control_pb2.py:27:101: E501 Line too long (5493 > 100)
   |
27 | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x14\x61\x63\x63\x65ss_control.proto\x12\x05seigr\"\xe9\x01\n\x04Role\x12\x0f\n\x07role_id\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12*\n\x0bpermissions\x18\x03 \x03(\x0e\x32\x15.seigr.PermissionType\x12\x31\n\x0b\x63onstraints\x18\x04 \x03(\x0b\x32\x1c.seigr.Role.ConstraintsEntry\x12\x14\n\x0c\x63\x61n_delegate\x18\x05 \x01(\x08\x12\x19\n\x11inheritance_depth\x18\x06 \x01(\x05\x1a\x32\n\x10\x43onstraintsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xa1\x02\n\nPermission\x12\x11\n\tentity_id\x18\x01 \x01(\t\x12\x1d\n\x04role\x18\x02 \x01(\x0e\x32\x0f.seigr.RoleType\x12&\n\x07\x61\x63tions\x18\x03 \x03(\x0e\x32\x15.seigr.PermissionType\x12\x13\n\x0b\x63onstraints\x18\x04 \x01(\t\x12\x0e\n\x06\x65xpiry\x18\x05 \x01(\t\x12\x14\n\x0crequires_mfa\x18\x06 \x01(\x08\x12\x31\n\x08metadata\x18\x07 \x03(\x0b\x32\x1f.seigr.Permission.MetadataEntry\x12\x1a\n\x12\x63onditional_access\x18\x08 \x01(\x08\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xe1\x01\n\x12\x41\x63\x63\x65ssControlEntry\x12\x0f\n\x07user_id\x18\x01 \x01(\t\x12\x1d\n\x04role\x18\x02 \x01(\x0e\x32\x0f.seigr.RoleType\x12*\n\x0bpermissions\x18\x03 \x03(\x0e\x32\x15.seigr.PermissionType\x12\x17\n\x0f\x61llowed_actions\x18\x04 \x03(\t\x12\x14\n\x0cis_inherited\x18\x05 \x01(\x08\x12\x16\n\x0e\x65\x66\x66\x65\x63tive_from\x18\x06 \x01(\t\x12\x12\n\nexpires_on\x18\x07 \x01(\t\x12\x14\n\x0cmfa_required\x18\x08 \x01(\x08\"\xa3\x02\n\x11\x41\x63\x63\x65ssControlList\x12*\n\x07\x65ntries\x18\x01 \x03(\x0b\x32\x19.seigr.AccessControlEntry\x12\x0f\n\x07version\x18\x02 \x01(\t\x12\x38\n\x08metadata\x18\x03 \x03(\x0b\x32&.seigr.AccessControlList.MetadataEntry\x12\x11\n\tpolicy_id\x18\x04 \x01(\t\x12#\n\x06status\x18\x05 \x01(\x0e\x32\x13.seigr.PolicyStatus\x12\x15\n\rlast_reviewed\x18\x06 \x01(\t\x12\x17\n\x0fnext_review_due\x18\x07 \x01(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xcf\x02\n\x0c\x41\x63\x63\x65ssPolicy\x12\x11\n\tpolicy_id\x18\x01 \x01(\t\x12\x13\n\x0bpolicy_name\x18\x02 \x01(\t\x12#\n\x06status\x18\x03 \x01(\x0e\x32\x13.seigr.PolicyStatus\x12\x1a\n\x12\x63reation_timestamp\x18\x04 \x01(\t\x12\x19\n\x11updated_timestamp\x18\x05 \x01(\t\x12&\n\x0bpermissions\x18\x06 \x03(\x0b\x32\x11.seigr.Permission\x12\x13\n\x0b\x65nforced_on\x18\x07 \x01(\t\x12\x33\n\x08metadata\x18\x08 \x03(\x0b\x32!.seigr.AccessPolicy.MetadataEntry\x12\x18\n\x10\x61pplicable_roles\x18\t \x03(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xce\x02\n\rAccessContext\x12\x14\n\x0c\x61\x63\x63\x65ss_count\x18\x01 \x01(\x05\x12\x15\n\rlast_accessed\x18\x02 \x01(\t\x12\x1d\n\x15hyphen_access_history\x18\x03 \x03(\t\x12\x15\n\rlast_modified\x18\x04 \x01(\t\x12&\n\x0b\x61\x63\x63\x65ss_type\x18\x05 \x01(\x0e\x32\x11.seigr.AccessType\x12\x34\n\x08metadata\x18\x06 \x03(\x0b\x32\".seigr.AccessContext.MetadataEntry\x12\x16\n\x0eoriginating_ip\x18\x07 \x01(\t\x12\x11\n\tdevice_id\x18\x08 \x01(\t\x12 \n\x18unusual_activity_flagged\x18\t \x01(\x08\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xce\x02\n\x0e\x41\x63\x63\x65ssAuditLog\x12\x0f\n\x07user_id\x18\x01 \x01(\t\x12!\n\x06\x61\x63tion\x18\x02 \x01(\x0e\x32\x11.seigr.AccessType\x12\x11\n\ttimestamp\x18\x03 \x01(\t\x12\x0e\n\x06status\x18\x04 \x01(\t\x12\x0f\n\x07\x64\x65tails\x18\x05 \x01(\t\x12\x35\n\x08metadata\x18\x06 \x03(\x0b\x32#.seigr.AccessAuditLog.MetadataEntry\x12\x12\n\nip_address\x18\x07 \x01(\t\x12\x13\n\x0b\x64\x65vice_info\x18\x08 \x01(\t\x12\x14\n\x0cmfa_verified\x18\t \x01(\x08\x12\x18\n\x10\x64\x65legated_access\x18\n \x01(\x08\x12\x13\n\x0borigin_role\x18\x0b \x01(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01*\xaf\x01\n\x08RoleType\x12\x17\n\x13ROLE_TYPE_UNDEFINED\x10\x00\x12\x13\n\x0fROLE_TYPE_ADMIN\x10\x01\x12\x14\n\x10ROLE_TYPE_EDITOR\x10\x02\x12\x14\n\x10ROLE_TYPE_VIEWER\x10\x03\x12\x19\n\x15ROLE_TYPE_CONTRIBUTOR\x10\x04\x12\x15\n\x11ROLE_TYPE_AUDITOR\x10\x05\x12\x17\n\x13ROLE_TYPE_DELEGATOR\x10\x06*\x8d\x02\n\x0ePermissionType\x12\x1d\n\x19PERMISSION_TYPE_UNDEFINED\x10\x00\x12\x18\n\x14PERMISSION_TYPE_READ\x10\x01\x12\x19\n\x15PERMISSION_TYPE_WRITE\x10\x02\x12\x1b\n\x17PERMISSION_TYPE_EXECUTE\x10\x03\x12\x1a\n\x16PERMISSION_TYPE_DELETE\x10\x04\x12\x19\n\x15PERMISSION_TYPE_SHARE\x10\x05\x12\x1a\n\x16PERMISSION_TYPE_MANAGE\x10\x06\x12\x1c\n\x18PERMISSION_TYPE_DELEGATE\x10\x07\x12\x19\n\x15PERMISSION_TYPE_AUDIT\x10\x08*\xd4\x01\n\nAccessType\x12\x19\n\x15\x41\x43\x43\x45SS_TYPE_UNDEFINED\x10\x00\x12\x14\n\x10\x41\x43\x43\x45SS_TYPE_READ\x10\x01\x12\x15\n\x11\x41\x43\x43\x45SS_TYPE_WRITE\x10\x02\x12\x17\n\x13\x41\x43\x43\x45SS_TYPE_EXECUTE\x10\x03\x12\x16\n\x12\x41\x43\x43\x45SS_TYPE_DELETE\x10\x04\x12\x15\n\x11\x41\x43\x43\x45SS_TYPE_SHARE\x10\x05\x12\x1c\n\x18\x41\x43\x43\x45SS_TYPE_ADMINISTRATE\x10\x06\x12\x18\n\x14\x41\x43\x43\x45SS_TYPE_DELEGATE\x10\x07*\xdd\x01\n\x0cPolicyStatus\x12\x1b\n\x17POLICY_STATUS_UNDEFINED\x10\x00\x12\x18\n\x14POLICY_STATUS_ACTIVE\x10\x01\x12\x1a\n\x16POLICY_STATUS_INACTIVE\x10\x02\x12\x19\n\x15POLICY_STATUS_EXPIRED\x10\x03\x12\x19\n\x15POLICY_STATUS_REVOKED\x10\x04\x12 \n\x1cPOLICY_STATUS_PENDING_REVIEW\x10\x05\x12\"\n\x1ePOLICY_STATUS_SCHEDULED_REVIEW\x10\x06\x62\x06proto3')
   |
28 | 
29 | _globals = globals()
   |

src/seigr_protocol/compiled/access_policies_pb2.py:7:1: I001 [*] Import block is un-sorted or un-formatted
   |
 5 |   # Protobuf Python Version: 5.29.2
 6 |   """Generated protocol buffer code."""
 7 | / from google.protobuf import descriptor as _descriptor
 8 | | from google.protobuf import descriptor_pool as _descriptor_pool
 9 | | from google.protobuf import runtime_version as _runtime_version
10 | | from google.protobuf import symbol_database as _symbol_database
11 | | from google.protobuf.internal import builder as _builder
12 | | _runtime_version.ValidateProtobufRuntimeVersion(
   | |_^ I001
13 |       _runtime_version.Domain.PUBLIC,
14 |       5,
   |
   = help: Organize imports

src/seigr_protocol/compiled/access_policies_pb2.py:25:1: E402 Module level import not at top of file
   |
25 | import access_control_pb2 as access__control__pb2
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E402
   |

src/seigr_protocol/compiled/access_policies_pb2.py:25:1: I001 [*] Import block is un-sorted or un-formatted
   |
25 | / import access_control_pb2 as access__control__pb2
26 | | 
27 | | 
28 | | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x15\x61\x63\x63\x65ss_policies.proto\x12\x05seigr\x1a\x14\x61\x63\x63\x65ss_control.proto\"\xca\x02\n\x0f\x41\x63\x63\x65ssPolicySet\x12\x0e\n\x06set_id\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12%\n\x08policies\x18\x03 \x03(\x0b\x32\x13.seigr.AccessPolicy\x12\x19\n\x11inherited_set_ids\x18\x04 \x03(\t\x12\x1d\n\x15max_inheritance_depth\x18\x05 \x01(\x05\x12\x0f\n\x07version\x18\x06 \x01(\t\x12\x15\n\rlast_reviewed\x18\x07 \x01(\t\x12\x36\n\x08metadata\x18\x08 \x03(\x0b\x32$.seigr.AccessPolicySet.MetadataEntry\x12\'\n\x1f\x63onditional_inheritance_enabled\x18\t \x01(\x08\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x8c\x03\n\x12PolicyCheckRequest\x12\x14\n\x0crequester_id\x18\x01 \x01(\t\x12\x11\n\tpolicy_id\x18\x02 \x01(\t\x12!\n\x06\x61\x63tion\x18\x03 \x01(\x0e\x32\x11.seigr.ActionType\x12\x13\n\x0bresource_id\x18\x04 \x01(\t\x12\x37\n\x07\x63ontext\x18\x05 \x03(\x0b\x32&.seigr.PolicyCheckRequest.ContextEntry\x12,\n\x11requested_actions\x18\x06 \x03(\x0e\x32\x11.seigr.ActionType\x12\x12\n\nip_address\x18\x07 \x01(\t\x12\x13\n\x0b\x64\x65vice_info\x18\x08 \x01(\t\x12\x19\n\x11request_timestamp\x18\t \x01(\t\x12\x19\n\x11network_condition\x18\n \x01(\t\x12\x1f\n\x17\x65mergency_override_flag\x18\x0b \x01(\x08\x1a.\n\x0c\x43ontextEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xbb\x03\n\x13PolicyCheckResponse\x12\x19\n\x11is_action_allowed\x18\x01 \x01(\x08\x12\x11\n\tpolicy_id\x18\x02 \x01(\t\x12*\n\rpolicy_status\x18\x03 \x01(\x0e\x32\x13.seigr.PolicyStatus\x12\x15\n\rdenial_reason\x18\x04 \x01(\t\x12,\n\x11permitted_actions\x18\x05 \x03(\x0e\x32\x11.seigr.ActionType\x12\x45\n\x0e\x61udit_metadata\x18\x06 \x03(\x0b\x32-.seigr.PolicyCheckResponse.AuditMetadataEntry\x12\x18\n\x10\x63ompliance_score\x18\x07 \x01(\x01\x12\x12\n\nrisk_score\x18\x08 \x01(\x01\x12\x1d\n\x15\x65scalation_suggestion\x18\t \x01(\t\x12\x1a\n\x12\x64\x65\x63ision_timestamp\x18\n \x01(\t\x12\x1f\n\x17\x65mergency_override_used\x18\x0b \x01(\x08\x1a\x34\n\x12\x41uditMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01*\xaf\x02\n\nActionType\x12\x19\n\x15\x41\x43TION_TYPE_UNDEFINED\x10\x00\x12\x14\n\x10\x41\x43TION_TYPE_READ\x10\x01\x12\x15\n\x11\x41\x43TION_TYPE_WRITE\x10\x02\x12\x17\n\x13\x41\x43TION_TYPE_EXECUTE\x10\x03\x12\x16\n\x12\x41\x43TION_TYPE_DELETE\x10\x04\x12\x15\n\x11\x41\x43TION_TYPE_SHARE\x10\x05\x12\x18\n\x14\x41\x43TION_TYPE_ROLLBACK\x10\x06\x12\x1d\n\x19\x41\x43TION_TYPE_MODIFY_POLICY\x10\x07\x12\x15\n\x11\x41\x43TION_TYPE_AUDIT\x10\x08\x12\x1f\n\x1b\x41\x43TION_TYPE_OVERRIDE_POLICY\x10\t\x12 \n\x1c\x41\x43TION_TYPE_EMERGENCY_ACCESS\x10\nb\x06proto3')
   | |_^ I001
29 |   
30 |   _globals = globals()
   |
   = help: Organize imports

src/seigr_protocol/compiled/access_policies_pb2.py:25:30: F401 [*] `access_control_pb2` imported but unused
   |
25 | import access_control_pb2 as access__control__pb2
   |                              ^^^^^^^^^^^^^^^^^^^^ F401
   |
   = help: Remove unused import: `access_control_pb2`

src/seigr_protocol/compiled/access_policies_pb2.py:28:101: E501 Line too long (2796 > 100)
   |
28 | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x15\x61\x63\x63\x65ss_policies.proto\x12\x05seigr\x1a\x14\x61\x63\x63\x65ss_control.proto\"\xca\x02\n\x0f\x41\x63\x63\x65ssPolicySet\x12\x0e\n\x06set_id\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12%\n\x08policies\x18\x03 \x03(\x0b\x32\x13.seigr.AccessPolicy\x12\x19\n\x11inherited_set_ids\x18\x04 \x03(\t\x12\x1d\n\x15max_inheritance_depth\x18\x05 \x01(\x05\x12\x0f\n\x07version\x18\x06 \x01(\t\x12\x15\n\rlast_reviewed\x18\x07 \x01(\t\x12\x36\n\x08metadata\x18\x08 \x03(\x0b\x32$.seigr.AccessPolicySet.MetadataEntry\x12\'\n\x1f\x63onditional_inheritance_enabled\x18\t \x01(\x08\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x8c\x03\n\x12PolicyCheckRequest\x12\x14\n\x0crequester_id\x18\x01 \x01(\t\x12\x11\n\tpolicy_id\x18\x02 \x01(\t\x12!\n\x06\x61\x63tion\x18\x03 \x01(\x0e\x32\x11.seigr.ActionType\x12\x13\n\x0bresource_id\x18\x04 \x01(\t\x12\x37\n\x07\x63ontext\x18\x05 \x03(\x0b\x32&.seigr.PolicyCheckRequest.ContextEntry\x12,\n\x11requested_actions\x18\x06 \x03(\x0e\x32\x11.seigr.ActionType\x12\x12\n\nip_address\x18\x07 \x01(\t\x12\x13\n\x0b\x64\x65vice_info\x18\x08 \x01(\t\x12\x19\n\x11request_timestamp\x18\t \x01(\t\x12\x19\n\x11network_condition\x18\n \x01(\t\x12\x1f\n\x17\x65mergency_override_flag\x18\x0b \x01(\x08\x1a.\n\x0c\x43ontextEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xbb\x03\n\x13PolicyCheckResponse\x12\x19\n\x11is_action_allowed\x18\x01 \x01(\x08\x12\x11\n\tpolicy_id\x18\x02 \x01(\t\x12*\n\rpolicy_status\x18\x03 \x01(\x0e\x32\x13.seigr.PolicyStatus\x12\x15\n\rdenial_reason\x18\x04 \x01(\t\x12,\n\x11permitted_actions\x18\x05 \x03(\x0e\x32\x11.seigr.ActionType\x12\x45\n\x0e\x61udit_metadata\x18\x06 \x03(\x0b\x32-.seigr.PolicyCheckResponse.AuditMetadataEntry\x12\x18\n\x10\x63ompliance_score\x18\x07 \x01(\x01\x12\x12\n\nrisk_score\x18\x08 \x01(\x01\x12\x1d\n\x15\x65scalation_suggestion\x18\t \x01(\t\x12\x1a\n\x12\x64\x65\x63ision_timestamp\x18\n \x01(\t\x12\x1f\n\x17\x65mergency_override_used\x18\x0b \x01(\x08\x1a\x34\n\x12\x41uditMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01*\xaf\x02\n\nActionType\x12\x19\n\x15\x41\x43TION_TYPE_UNDEFINED\x10\x00\x12\x14\n\x10\x41\x43TION_TYPE_READ\x10\x01\x12\x15\n\x11\x41\x43TION_TYPE_WRITE\x10\x02\x12\x17\n\x13\x41\x43TION_TYPE_EXECUTE\x10\x03\x12\x16\n\x12\x41\x43TION_TYPE_DELETE\x10\x04\x12\x15\n\x11\x41\x43TION_TYPE_SHARE\x10\x05\x12\x18\n\x14\x41\x43TION_TYPE_ROLLBACK\x10\x06\x12\x1d\n\x19\x41\x43TION_TYPE_MODIFY_POLICY\x10\x07\x12\x15\n\x11\x41\x43TION_TYPE_AUDIT\x10\x08\x12\x1f\n\x1b\x41\x43TION_TYPE_OVERRIDE_POLICY\x10\t\x12 \n\x1c\x41\x43TION_TYPE_EMERGENCY_ACCESS\x10\nb\x06proto3')
   |
29 | 
30 | _globals = globals()
   |

src/seigr_protocol/compiled/ai_analysis_pb2.py:7:1: I001 [*] Import block is un-sorted or un-formatted
   |
 5 |   # Protobuf Python Version: 5.29.2
 6 |   """Generated protocol buffer code."""
 7 | / from google.protobuf import descriptor as _descriptor
 8 | | from google.protobuf import descriptor_pool as _descriptor_pool
 9 | | from google.protobuf import runtime_version as _runtime_version
10 | | from google.protobuf import symbol_database as _symbol_database
11 | | from google.protobuf.internal import builder as _builder
12 | | _runtime_version.ValidateProtobufRuntimeVersion(
   | |_^ I001
13 |       _runtime_version.Domain.PUBLIC,
14 |       5,
   |
   = help: Organize imports

src/seigr_protocol/compiled/ai_analysis_pb2.py:27:101: E501 Line too long (6157 > 100)
   |
27 | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x11\x61i_analysis.proto\x12\x05seigr\"\xb8\x03\n\x0bModelConfig\x12\x10\n\x08model_id\x18\x01 \x01(\t\x12$\n\nmodel_type\x18\x02 \x01(\x0e\x32\x10.seigr.ModelType\x12\x12\n\nmodel_name\x18\x03 \x01(\t\x12\x0f\n\x07version\x18\x04 \x01(\x05\x12\x36\n\nparameters\x18\x05 \x03(\x0b\x32\".seigr.ModelConfig.ParametersEntry\x12\"\n\x1a\x65nable_real_time_inference\x18\x06 \x01(\x08\x12\x1d\n\x15retrain_interval_days\x18\x07 \x01(\x05\x12\x12\n\ncreated_by\x18\x08 \x01(\t\x12\x12\n\ncreated_at\x18\t \x01(\t\x12?\n\x0f\x63onfig_metadata\x18\n \x03(\x0b\x32&.seigr.ModelConfig.ConfigMetadataEntry\x1a\x31\n\x0fParametersEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x01:\x02\x38\x01\x1a\x35\n\x13\x43onfigMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xf8\x02\n\x0eModelExecution\x12\x14\n\x0c\x65xecution_id\x18\x01 \x01(\t\x12\x10\n\x08model_id\x18\x02 \x01(\t\x12$\n\nmodel_type\x18\x03 \x01(\x0e\x32\x10.seigr.ModelType\x12\x14\n\x0cinitiated_by\x18\x04 \x01(\t\x12\x14\n\x0c\x64\x61ta_sources\x18\x05 \x03(\t\x12\x17\n\x0f\x61sync_execution\x18\x06 \x01(\x08\x12\x1b\n\x13\x65xecution_timestamp\x18\x07 \x01(\t\x12H\n\x12\x65xecution_metadata\x18\x08 \x03(\x0b\x32,.seigr.ModelExecution.ExecutionMetadataEntry\x12\x32\n\x10\x65xpected_outcome\x18\t \x01(\x0e\x32\x18.seigr.PredictionOutcome\x1a\x38\n\x16\x45xecutionMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xc0\x02\n\x14ModelExecutionResult\x12\x14\n\x0c\x65xecution_id\x18\x01 \x01(\t\x12\x10\n\x08model_id\x18\x02 \x01(\t\x12\x0f\n\x07success\x18\x03 \x01(\x08\x12)\n\x07outcome\x18\x04 \x01(\x0e\x32\x18.seigr.PredictionOutcome\x12\x16\n\x0eresult_message\x18\x05 \x01(\t\x12\x11\n\ttimestamp\x18\x06 \x01(\t\x12H\n\x0fresult_metadata\x18\x07 \x03(\x0b\x32/.seigr.ModelExecutionResult.ResultMetadataEntry\x12\x18\n\x10\x63onfidence_score\x18\x08 \x01(\x01\x1a\x35\n\x13ResultMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x95\x02\n\x0cTrainingData\x12\x0f\n\x07\x64\x61ta_id\x18\x01 \x01(\t\x12\x14\n\x0c\x64\x61ta_sources\x18\x02 \x03(\t\x12<\n\rdata_metadata\x18\x03 \x03(\x0b\x32%.seigr.TrainingData.DataMetadataEntry\x12\x16\n\x0e\x63ollected_from\x18\x04 \x01(\t\x12\x1b\n\x13training_started_at\x18\x05 \x01(\t\x12\x1d\n\x15training_completed_at\x18\x06 \x01(\t\x12\x17\n\x0f\x64\x61taset_size_mb\x18\x07 \x01(\x01\x1a\x33\n\x11\x44\x61taMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xf7\x02\n\x0fModelMonitoring\x12\x10\n\x08model_id\x18\x01 \x01(\t\x12\"\n\x06status\x18\x02 \x01(\x0e\x32\x12.seigr.ModelStatus\x12\x16\n\x0e\x61\x63\x63uracy_score\x18\x03 \x01(\x01\x12\x1a\n\x12\x61verage_latency_ms\x18\x04 \x01(\x01\x12\x1a\n\x12resource_usage_cpu\x18\x05 \x01(\x01\x12 \n\x18resource_usage_memory_mb\x18\x06 \x01(\x01\x12\x1e\n\x16predictions_per_minute\x18\x07 \x01(\x05\x12\x14\n\x0clast_updated\x18\x08 \x01(\t\x12K\n\x13monitoring_metadata\x18\t \x03(\x0b\x32..seigr.ModelMonitoring.MonitoringMetadataEntry\x1a\x39\n\x17MonitoringMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x95\x02\n\rModelAuditLog\x12\x0e\n\x06log_id\x18\x01 \x01(\t\x12\x10\n\x08model_id\x18\x02 \x01(\t\x12\x0e\n\x06\x61\x63tion\x18\x03 \x01(\t\x12\x14\n\x0cperformed_by\x18\x04 \x01(\t\x12\x11\n\ttimestamp\x18\x05 \x01(\t\x12;\n\x0clog_metadata\x18\x06 \x03(\x0b\x32%.seigr.ModelAuditLog.LogMetadataEntry\x12\x1d\n\x15\x63ompliance_issue_flag\x18\x07 \x01(\x08\x12\x19\n\x11\x63orrective_action\x18\x08 \x01(\t\x1a\x32\n\x10LogMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xc3\x01\n\rModelResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x10\n\x08model_id\x18\x02 \x01(\t\x12\x0f\n\x07message\x18\x03 \x01(\t\x12\x45\n\x11response_metadata\x18\x04 \x03(\x0b\x32*.seigr.ModelResponse.ResponseMetadataEntry\x1a\x37\n\x15ResponseMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"*\n\x16ModelMonitoringRequest\x12\x10\n\x08model_id\x18\x01 \x01(\t\"\xbf\x01\n\x11ModelAuditRequest\x12\x10\n\x08model_id\x18\x01 \x01(\t\x12\x18\n\x10time_range_start\x18\x02 \x01(\t\x12\x16\n\x0etime_range_end\x18\x03 \x01(\t\x12\x36\n\x07\x66ilters\x18\x04 \x03(\x0b\x32%.seigr.ModelAuditRequest.FiltersEntry\x1a.\n\x0c\x46iltersEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"Y\n\x12ModelAuditResponse\x12\"\n\x04logs\x18\x01 \x03(\x0b\x32\x14.seigr.ModelAuditLog\x12\x0e\n\x06status\x18\x02 \x01(\t\x12\x0f\n\x07message\x18\x03 \x01(\t*\xc8\x01\n\tModelType\x12\x18\n\x14MODEL_TYPE_UNDEFINED\x10\x00\x12\x1b\n\x17MODEL_ANOMALY_DETECTION\x10\x01\x12\x1b\n\x17MODEL_DEMAND_PREDICTION\x10\x02\x12\x1b\n\x17MODEL_USAGE_FORECASTING\x10\x03\x12\x19\n\x15MODEL_RISK_ASSESSMENT\x10\x04\x12\x1d\n\x19MODEL_REPLICATION_SCALING\x10\x05\x12\x10\n\x0cMODEL_CUSTOM\x10\x06*\xad\x01\n\x0bModelStatus\x12\x1a\n\x16MODEL_STATUS_UNDEFINED\x10\x00\x12\x19\n\x15MODEL_STATUS_TRAINING\x10\x01\x12\x18\n\x14MODEL_STATUS_TRAINED\x10\x02\x12\x19\n\x15MODEL_STATUS_DEPLOYED\x10\x03\x12\x19\n\x15MODEL_STATUS_INACTIVE\x10\x04\x12\x17\n\x13MODEL_STATUS_FAILED\x10\x05*\xcb\x01\n\x11PredictionOutcome\x12\x15\n\x11OUTCOME_UNDEFINED\x10\x00\x12\x1c\n\x18OUTCOME_ANOMALY_DETECTED\x10\x01\x12\x12\n\x0eOUTCOME_NORMAL\x10\x02\x12\x17\n\x13OUTCOME_HIGH_DEMAND\x10\x03\x12\x16\n\x12OUTCOME_LOW_DEMAND\x10\x04\x12\x1b\n\x17OUTCOME_RISK_IDENTIFIED\x10\x05\x12\x1f\n\x1bOUTCOME_SCALING_RECOMMENDED\x10\x06\x32\xdc\x02\n\x11\x41IAnalysisService\x12\x37\n\x0b\x43reateModel\x12\x12.seigr.ModelConfig\x1a\x14.seigr.ModelResponse\x12\x42\n\x0c\x45xecuteModel\x12\x15.seigr.ModelExecution\x1a\x1b.seigr.ModelExecutionResult\x12\x39\n\x0cRetrainModel\x12\x13.seigr.TrainingData\x1a\x14.seigr.ModelResponse\x12\x45\n\x0cMonitorModel\x12\x1d.seigr.ModelMonitoringRequest\x1a\x16.seigr.ModelMonitoring\x12H\n\x11GetModelAuditLogs\x12\x18.seigr.ModelAuditRequest\x1a\x19.seigr.ModelAuditResponseb\x06proto3')
   |
28 | 
29 | _globals = globals()
   |

src/seigr_protocol/compiled/alerting_pb2.py:7:1: I001 [*] Import block is un-sorted or un-formatted
   |
 5 |   # Protobuf Python Version: 5.29.2
 6 |   """Generated protocol buffer code."""
 7 | / from google.protobuf import descriptor as _descriptor
 8 | | from google.protobuf import descriptor_pool as _descriptor_pool
 9 | | from google.protobuf import runtime_version as _runtime_version
10 | | from google.protobuf import symbol_database as _symbol_database
11 | | from google.protobuf.internal import builder as _builder
12 | | _runtime_version.ValidateProtobufRuntimeVersion(
   | |_^ I001
13 |       _runtime_version.Domain.PUBLIC,
14 |       5,
   |
   = help: Organize imports

src/seigr_protocol/compiled/alerting_pb2.py:27:101: E501 Line too long (5128 > 100)
   |
27 | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0e\x61lerting.proto\x12\x05seigr\"\xb3\x02\n\x05\x41lert\x12\x10\n\x08\x61lert_id\x18\x01 \x01(\t\x12\x1e\n\x04type\x18\x02 \x01(\x0e\x32\x10.seigr.AlertType\x12&\n\x08severity\x18\x03 \x01(\x0e\x32\x14.seigr.AlertSeverity\x12\x0f\n\x07message\x18\x04 \x01(\t\x12\x11\n\ttimestamp\x18\x05 \x01(\t\x12\x18\n\x10source_component\x18\x06 \x01(\t\x12\x1a\n\x12\x61\x66\x66\x65\x63ted_entity_id\x18\x07 \x01(\t\x12,\n\x08metadata\x18\x08 \x03(\x0b\x32\x1a.seigr.Alert.MetadataEntry\x12\x17\n\x0fsla_target_time\x18\t \x01(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xdf\x02\n\tAlertRule\x12\x0f\n\x07rule_id\x18\x01 \x01(\t\x12$\n\nalert_type\x18\x02 \x01(\x0e\x32\x10.seigr.AlertType\x12*\n\x0cmin_severity\x18\x03 \x01(\x0e\x32\x14.seigr.AlertSeverity\x12\x1c\n\x14\x63ondition_expression\x18\x04 \x01(\t\x12\x12\n\nis_enabled\x18\x05 \x01(\x08\x12\x18\n\x10\x61lert_recipients\x18\x06 \x03(\t\x12\x1c\n\x14\x65scalation_policy_id\x18\x07 \x01(\t\x12\x30\n\x08metadata\x18\x08 \x03(\x0b\x32\x1e.seigr.AlertRule.MetadataEntry\x12\"\n\x1a\x64ynamic_thresholds_enabled\x18\t \x01(\x08\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x81\x03\n\x0f\x41lertEscalation\x12\x15\n\rescalation_id\x18\x01 \x01(\t\x12\x19\n\x11original_alert_id\x18\x02 \x01(\t\x12*\n\x0cnew_severity\x18\x03 \x01(\x0e\x32\x14.seigr.AlertSeverity\x12\x1e\n\x16\x65scalated_at_timestamp\x18\x04 \x01(\t\x12\x1d\n\x15reason_for_escalation\x18\x05 \x01(\t\x12\x1d\n\x15\x65scalation_recipients\x18\x06 \x03(\t\x12\x19\n\x11\x65scalation_status\x18\x07 \x01(\t\x12\x14\n\x0cresponder_id\x18\x08 \x01(\t\x12\x36\n\x08metadata\x18\t \x03(\x0b\x32$.seigr.AlertEscalation.MetadataEntry\x12\x18\n\x10\x65scalation_steps\x18\n \x03(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xd9\x04\n\x17\x41lertNotificationConfig\x12\x11\n\tconfig_id\x18\x01 \x01(\t\x12\x1a\n\x12\x64\x65\x66\x61ult_recipients\x18\x02 \x03(\t\x12%\n\x0b\x61lert_types\x18\x03 \x03(\x0e\x32\x10.seigr.AlertType\x12\x37\n\x19min_notification_severity\x18\x04 \x01(\x0e\x32\x14.seigr.AlertSeverity\x12#\n\x1b\x65mail_notifications_enabled\x18\x05 \x01(\x08\x12!\n\x19sms_notifications_enabled\x18\x06 \x01(\x08\x12\"\n\x1apush_notifications_enabled\x18\x07 \x01(\x08\x12!\n\x19\x64o_not_disturb_start_time\x18\x08 \x01(\t\x12\x1f\n\x17\x64o_not_disturb_end_time\x18\t \x01(\t\x12S\n\x13\x63hannel_preferences\x18\n \x03(\x0b\x32\x36.seigr.AlertNotificationConfig.ChannelPreferencesEntry\x12>\n\x08metadata\x18\x0b \x03(\x0b\x32,.seigr.AlertNotificationConfig.MetadataEntry\x1a\x39\n\x17\x43hannelPreferencesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x08:\x02\x38\x01\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xc1\x02\n\x08\x41lertLog\x12\x0e\n\x06log_id\x18\x01 \x01(\t\x12\x10\n\x08\x61lert_id\x18\x02 \x01(\t\x12&\n\x08severity\x18\x03 \x01(\x0e\x32\x14.seigr.AlertSeverity\x12\x15\n\rlog_timestamp\x18\x04 \x01(\t\x12\x14\n\x0c\x61lert_status\x18\x05 \x01(\t\x12\x16\n\x0eresolved_by_id\x18\x06 \x01(\t\x12\x1a\n\x12resolution_details\x18\x07 \x01(\t\x12/\n\x08metadata\x18\x08 \x03(\x0b\x32\x1d.seigr.AlertLog.MetadataEntry\x12\x13\n\x0b\x65vent_trace\x18\t \x03(\t\x12\x13\n\x0bstatus_code\x18\n \x01(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xb4\x02\n\x0c\x41lertRequest\x12)\n\x0frequested_types\x18\x01 \x03(\x0e\x32\x10.seigr.AlertType\x12*\n\x0cmin_severity\x18\x02 \x01(\x0e\x32\x14.seigr.AlertSeverity\x12\x19\n\x11start_time_filter\x18\x03 \x01(\t\x12\x17\n\x0f\x65nd_time_filter\x18\x04 \x01(\t\x12\x19\n\x11source_components\x18\x05 \x03(\t\x12\x31\n\x07\x66ilters\x18\x06 \x03(\x0b\x32 .seigr.AlertRequest.FiltersEntry\x12\x1b\n\x13include_escalations\x18\x07 \x01(\x08\x1a.\n\x0c\x46iltersEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xce\x01\n\rAlertResponse\x12&\n\rmatching_logs\x18\x01 \x03(\x0b\x32\x0f.seigr.AlertLog\x12\x12\n\nrequest_id\x18\x02 \x01(\t\x12\x1a\n\x12response_timestamp\x18\x03 \x01(\t\x12\x34\n\x08metadata\x18\x04 \x03(\x0b\x32\".seigr.AlertResponse.MetadataEntry\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01*\xde\x01\n\tAlertType\x12\x18\n\x14\x41LERT_TYPE_UNDEFINED\x10\x00\x12\x17\n\x13\x41LERT_TYPE_SECURITY\x10\x01\x12\x15\n\x11\x41LERT_TYPE_SYSTEM\x10\x02\x12\x1d\n\x19\x41LERT_TYPE_DATA_INTEGRITY\x10\x03\x12\x16\n\x12\x41LERT_TYPE_NETWORK\x10\x04\x12\x1a\n\x16\x41LERT_TYPE_REPLICATION\x10\x05\x12\x1d\n\x19\x41LERT_TYPE_RESOURCE_USAGE\x10\x06\x12\x15\n\x11\x41LERT_TYPE_CUSTOM\x10\x07*\x99\x01\n\rAlertSeverity\x12\x1c\n\x18\x41LERT_SEVERITY_UNDEFINED\x10\x00\x12\x17\n\x13\x41LERT_SEVERITY_INFO\x10\x01\x12\x1a\n\x16\x41LERT_SEVERITY_WARNING\x10\x02\x12\x1b\n\x17\x41LERT_SEVERITY_CRITICAL\x10\x03\x12\x18\n\x14\x41LERT_SEVERITY_FATAL\x10\x04\x62\x06proto3')
   |
28 | 
29 | _globals = globals()
   |

src/seigr_protocol/compiled/analytics_pb2.py:7:1: I001 [*] Import block is un-sorted or un-formatted
   |
 5 |   # Protobuf Python Version: 5.29.2
 6 |   """Generated protocol buffer code."""
 7 | / from google.protobuf import descriptor as _descriptor
 8 | | from google.protobuf import descriptor_pool as _descriptor_pool
 9 | | from google.protobuf import runtime_version as _runtime_version
10 | | from google.protobuf import symbol_database as _symbol_database
11 | | from google.protobuf.internal import builder as _builder
12 | | _runtime_version.ValidateProtobufRuntimeVersion(
   | |_^ I001
13 |       _runtime_version.Domain.PUBLIC,
14 |       5,
   |
   = help: Organize imports

src/seigr_protocol/compiled/analytics_pb2.py:25:1: E402 Module level import not at top of file
   |
25 | import alerting_pb2 as alerting__pb2
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E402
26 | import ai_analysis_pb2 as ai__analysis__pb2
27 | import event_pb2 as event__pb2
   |

src/seigr_protocol/compiled/analytics_pb2.py:25:1: I001 [*] Import block is un-sorted or un-formatted
   |
25 | / import alerting_pb2 as alerting__pb2
26 | | import ai_analysis_pb2 as ai__analysis__pb2
27 | | import event_pb2 as event__pb2
28 | | 
29 | | 
30 | | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0f\x61nalytics.proto\x12\x05seigr\x1a\x0e\x61lerting.proto\x1a\x11\x61i_analysis.proto\x1a\x0b\x65vent.proto\"\xc9\x03\n\x17\x41nalyticsWorkflowConfig\x12\x13\n\x0bworkflow_id\x18\x01 \x01(\t\x12\x12\n\nmetric_ids\x18\x02 \x03(\t\x12$\n\nmodel_type\x18\x03 \x01(\x0e\x32\x10.seigr.ModelType\x12#\n\x1b\x65valuation_interval_seconds\x18\x04 \x01(\x05\x12\x1a\n\x12\x65nable_forecasting\x18\x05 \x01(\x08\x12\x12\n\ncreated_by\x18\x06 \x01(\t\x12\x12\n\ncreated_at\x18\x07 \x01(\t\x12>\n\x08metadata\x18\x08 \x03(\x0b\x32,.seigr.AnalyticsWorkflowConfig.MetadataEntry\x12M\n\x10model_parameters\x18\t \x03(\x0b\x32\x33.seigr.AnalyticsWorkflowConfig.ModelParametersEntry\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x36\n\x14ModelParametersEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xcf\x02\n\x10\x41nalyticsInsight\x12\x12\n\ninsight_id\x18\x01 \x01(\t\x12\x11\n\tmetric_id\x18\x02 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x03 \x01(\t\x12\x15\n\rinsight_value\x18\x04 \x01(\x01\x12\x11\n\ttimestamp\x18\x05 \x01(\t\x12\x30\n\x10\x65scalation_level\x18\x06 \x01(\x0e\x32\x16.seigr.EscalationLevel\x12\x37\n\x08metadata\x18\x07 \x03(\x0b\x32%.seigr.AnalyticsInsight.MetadataEntry\x12\x12\n\nis_anomaly\x18\x08 \x01(\x08\x12\x14\n\x0cis_recurring\x18\t \x01(\x08\x12\x0f\n\x07\x63ontext\x18\n \x01(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xfe\x02\n\nDataMetric\x12\x11\n\tmetric_id\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12&\n\x0bmetric_type\x18\x03 \x01(\x0e\x32\x11.seigr.MetricType\x12\'\n\x08\x63\x61tegory\x18\x04 \x01(\x0e\x32\x15.seigr.MetricCategory\x12\r\n\x05value\x18\x05 \x01(\x01\x12\x0c\n\x04unit\x18\x06 \x01(\t\x12\x13\n\x0brecorded_at\x18\x07 \x01(\t\x12\x34\n\x12\x61ggregation_method\x18\x08 \x01(\x0e\x32\x18.seigr.AggregationMethod\x12\x18\n\x10source_component\x18\t \x01(\t\x12\x31\n\x08metadata\x18\n \x03(\x0b\x32\x1f.seigr.DataMetric.MetadataEntry\x12\x18\n\x10\x66orecasted_value\x18\x0b \x01(\x01\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xac\x03\n\x17\x41nalyticsAlertThreshold\x12\x14\n\x0cthreshold_id\x18\x01 \x01(\t\x12\'\n\x08\x63\x61tegory\x18\x02 \x01(\x0e\x32\x15.seigr.MetricCategory\x12\x17\n\x0fthreshold_value\x18\x03 \x01(\x01\x12&\n\x08severity\x18\x04 \x01(\x0e\x32\x14.seigr.AlertSeverity\x12\x30\n\x10\x65scalation_level\x18\x05 \x01(\x0e\x32\x16.seigr.EscalationLevel\x12\x11\n\tcondition\x18\x06 \x01(\t\x12\x1d\n\x15notification_channels\x18\x07 \x03(\t\x12>\n\x08metadata\x18\x08 \x03(\x0b\x32,.seigr.AnalyticsAlertThreshold.MetadataEntry\x12\x18\n\x10\x61\x63tion_on_breach\x18\t \x01(\t\x12\"\n\x1arestrict_to_business_hours\x18\n \x01(\x08\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xbc\x02\n\x11\x41nalyticsSettings\x12$\n\x1c\x61ggregation_interval_seconds\x18\x01 \x01(\x05\x12\x1b\n\x13\x64\x61ta_retention_days\x18\x02 \x01(\x05\x12\"\n\x1areal_time_alerting_enabled\x18\x03 \x01(\x08\x12!\n\x19\x61lert_evaluation_interval\x18\x04 \x01(\x05\x12\x32\n\nthresholds\x18\x05 \x03(\x0b\x32\x1e.seigr.AnalyticsAlertThreshold\x12\x38\n\x08metadata\x18\x06 \x03(\x0b\x32&.seigr.AnalyticsSettings.MetadataEntry\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xb6\x03\n\x10\x41nalyticsSummary\x12\x12\n\nsummary_id\x18\x01 \x01(\t\x12\'\n\x08\x63\x61tegory\x18\x02 \x01(\x0e\x32\x15.seigr.MetricCategory\x12\x15\n\raverage_value\x18\x03 \x01(\x01\x12\x11\n\tmax_value\x18\x04 \x01(\x01\x12\x11\n\tmin_value\x18\x05 \x01(\x01\x12\x1a\n\x12standard_deviation\x18\x06 \x01(\x01\x12\x44\n\x0f\x66orecast_values\x18\x07 \x03(\x0b\x32+.seigr.AnalyticsSummary.ForecastValuesEntry\x12\r\n\x05trend\x18\x08 \x01(\t\x12\x16\n\x0eperiod_covered\x18\t \x01(\t\x12\x37\n\x08metadata\x18\n \x03(\x0b\x32%.seigr.AnalyticsSummary.MetadataEntry\x1a\x35\n\x13\x46orecastValuesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x01:\x02\x38\x01\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xb3\x02\n\x0f\x41nalyticsReport\x12\x11\n\treport_id\x18\x01 \x01(\t\x12\r\n\x05title\x18\x02 \x01(\t\x12\"\n\x07metrics\x18\x03 \x03(\x0b\x32\x11.seigr.DataMetric\x12)\n\x08insights\x18\x04 \x03(\x0b\x32\x17.seigr.AnalyticsInsight\x12\x14\n\x0cgenerated_by\x18\x05 \x01(\t\x12\x11\n\ttimestamp\x18\x06 \x01(\t\x12\x36\n\x08metadata\x18\x07 \x03(\x0b\x32$.seigr.AnalyticsReport.MetadataEntry\x12\x1d\n\x15\x63omparison_report_ids\x18\x08 \x03(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xf2\x02\n\x14WorkflowTriggerEvent\x12\x10\n\x08\x65vent_id\x18\x01 \x01(\t\x12\x13\n\x0bworkflow_id\x18\x02 \x01(\t\x12$\n\nmodel_type\x18\x03 \x01(\x0e\x32\x10.seigr.ModelType\x12&\n\x08severity\x18\x04 \x01(\x0e\x32\x14.seigr.AlertSeverity\x12\x30\n\x10\x65scalation_level\x18\x05 \x01(\x0e\x32\x16.seigr.EscalationLevel\x12\x14\n\x0c\x61\x63tion_taken\x18\x06 \x01(\t\x12\x11\n\ttimestamp\x18\x07 \x01(\t\x12;\n\x08metadata\x18\x08 \x03(\x0b\x32).seigr.WorkflowTriggerEvent.MetadataEntry\x12\x1c\n\x14\x63onditional_triggers\x18\t \x03(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01*\xc6\x01\n\x0eMetricCategory\x12\x1d\n\x19METRIC_CATEGORY_UNDEFINED\x10\x00\x12\x1f\n\x1bMETRIC_CATEGORY_PERFORMANCE\x10\x01\x12\x1c\n\x18METRIC_CATEGORY_SECURITY\x10\x02\x12\x19\n\x15METRIC_CATEGORY_USAGE\x10\x03\x12\x1f\n\x1bMETRIC_CATEGORY_RELIABILITY\x10\x04\x12\x1a\n\x16METRIC_CATEGORY_CUSTOM\x10\x05*\x9f\x01\n\nMetricType\x12\x19\n\x15METRIC_TYPE_UNDEFINED\x10\x00\x12\x17\n\x13METRIC_TYPE_AVERAGE\x10\x01\x12\x17\n\x13METRIC_TYPE_MAXIMUM\x10\x02\x12\x17\n\x13METRIC_TYPE_MINIMUM\x10\x03\x12\x16\n\x12METRIC_TYPE_MEDIAN\x10\x04\x12\x13\n\x0fMETRIC_TYPE_SUM\x10\x05*\x9a\x01\n\x11\x41ggregationMethod\x12 \n\x1c\x41GGREGATION_METHOD_UNDEFINED\x10\x00\x12\x11\n\rAGGREGATE_SUM\x10\x01\x12\x15\n\x11\x41GGREGATE_AVERAGE\x10\x02\x12\x13\n\x0f\x41GGREGATE_COUNT\x10\x03\x12\x11\n\rAGGREGATE_MAX\x10\x04\x12\x11\n\rAGGREGATE_MIN\x10\x05\x62\x06proto3')
   | |_^ I001
31 |   
32 |   _globals = globals()
   |
   = help: Organize imports

src/seigr_protocol/compiled/analytics_pb2.py:25:24: F401 [*] `alerting_pb2` imported but unused
   |
25 | import alerting_pb2 as alerting__pb2
   |                        ^^^^^^^^^^^^^ F401
26 | import ai_analysis_pb2 as ai__analysis__pb2
27 | import event_pb2 as event__pb2
   |
   = help: Remove unused import: `alerting_pb2`

src/seigr_protocol/compiled/analytics_pb2.py:26:1: E402 Module level import not at top of file
   |
25 | import alerting_pb2 as alerting__pb2
26 | import ai_analysis_pb2 as ai__analysis__pb2
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E402
27 | import event_pb2 as event__pb2
   |

src/seigr_protocol/compiled/analytics_pb2.py:26:27: F401 [*] `ai_analysis_pb2` imported but unused
   |
25 | import alerting_pb2 as alerting__pb2
26 | import ai_analysis_pb2 as ai__analysis__pb2
   |                           ^^^^^^^^^^^^^^^^^ F401
27 | import event_pb2 as event__pb2
   |
   = help: Remove unused import: `ai_analysis_pb2`

src/seigr_protocol/compiled/analytics_pb2.py:27:1: E402 Module level import not at top of file
   |
25 | import alerting_pb2 as alerting__pb2
26 | import ai_analysis_pb2 as ai__analysis__pb2
27 | import event_pb2 as event__pb2
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E402
   |

src/seigr_protocol/compiled/analytics_pb2.py:27:21: F401 [*] `event_pb2` imported but unused
   |
25 | import alerting_pb2 as alerting__pb2
26 | import ai_analysis_pb2 as ai__analysis__pb2
27 | import event_pb2 as event__pb2
   |                     ^^^^^^^^^^ F401
   |
   = help: Remove unused import: `event_pb2`

src/seigr_protocol/compiled/analytics_pb2.py:30:101: E501 Line too long (6360 > 100)
   |
30 | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0f\x61nalytics.proto\x12\x05seigr\x1a\x0e\x61lerting.proto\x1a\x11\x61i_analysis.proto\x1a\x0b\x65vent.proto\"\xc9\x03\n\x17\x41nalyticsWorkflowConfig\x12\x13\n\x0bworkflow_id\x18\x01 \x01(\t\x12\x12\n\nmetric_ids\x18\x02 \x03(\t\x12$\n\nmodel_type\x18\x03 \x01(\x0e\x32\x10.seigr.ModelType\x12#\n\x1b\x65valuation_interval_seconds\x18\x04 \x01(\x05\x12\x1a\n\x12\x65nable_forecasting\x18\x05 \x01(\x08\x12\x12\n\ncreated_by\x18\x06 \x01(\t\x12\x12\n\ncreated_at\x18\x07 \x01(\t\x12>\n\x08metadata\x18\x08 \x03(\x0b\x32,.seigr.AnalyticsWorkflowConfig.MetadataEntry\x12M\n\x10model_parameters\x18\t \x03(\x0b\x32\x33.seigr.AnalyticsWorkflowConfig.ModelParametersEntry\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x36\n\x14ModelParametersEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xcf\x02\n\x10\x41nalyticsInsight\x12\x12\n\ninsight_id\x18\x01 \x01(\t\x12\x11\n\tmetric_id\x18\x02 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x03 \x01(\t\x12\x15\n\rinsight_value\x18\x04 \x01(\x01\x12\x11\n\ttimestamp\x18\x05 \x01(\t\x12\x30\n\x10\x65scalation_level\x18\x06 \x01(\x0e\x32\x16.seigr.EscalationLevel\x12\x37\n\x08metadata\x18\x07 \x03(\x0b\x32%.seigr.AnalyticsInsight.MetadataEntry\x12\x12\n\nis_anomaly\x18\x08 \x01(\x08\x12\x14\n\x0cis_recurring\x18\t \x01(\x08\x12\x0f\n\x07\x63ontext\x18\n \x01(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xfe\x02\n\nDataMetric\x12\x11\n\tmetric_id\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12&\n\x0bmetric_type\x18\x03 \x01(\x0e\x32\x11.seigr.MetricType\x12\'\n\x08\x63\x61tegory\x18\x04 \x01(\x0e\x32\x15.seigr.MetricCategory\x12\r\n\x05value\x18\x05 \x01(\x01\x12\x0c\n\x04unit\x18\x06 \x01(\t\x12\x13\n\x0brecorded_at\x18\x07 \x01(\t\x12\x34\n\x12\x61ggregation_method\x18\x08 \x01(\x0e\x32\x18.seigr.AggregationMethod\x12\x18\n\x10source_component\x18\t \x01(\t\x12\x31\n\x08metadata\x18\n \x03(\x0b\x32\x1f.seigr.DataMetric.MetadataEntry\x12\x18\n\x10\x66orecasted_value\x18\x0b \x01(\x01\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xac\x03\n\x17\x41nalyticsAlertThreshold\x12\x14\n\x0cthreshold_id\x18\x01 \x01(\t\x12\'\n\x08\x63\x61tegory\x18\x02 \x01(\x0e\x32\x15.seigr.MetricCategory\x12\x17\n\x0fthreshold_value\x18\x03 \x01(\x01\x12&\n\x08severity\x18\x04 \x01(\x0e\x32\x14.seigr.AlertSeverity\x12\x30\n\x10\x65scalation_level\x18\x05 \x01(\x0e\x32\x16.seigr.EscalationLevel\x12\x11\n\tcondition\x18\x06 \x01(\t\x12\x1d\n\x15notification_channels\x18\x07 \x03(\t\x12>\n\x08metadata\x18\x08 \x03(\x0b\x32,.seigr.AnalyticsAlertThreshold.MetadataEntry\x12\x18\n\x10\x61\x63tion_on_breach\x18\t \x01(\t\x12\"\n\x1arestrict_to_business_hours\x18\n \x01(\x08\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xbc\x02\n\x11\x41nalyticsSettings\x12$\n\x1c\x61ggregation_interval_seconds\x18\x01 \x01(\x05\x12\x1b\n\x13\x64\x61ta_retention_days\x18\x02 \x01(\x05\x12\"\n\x1areal_time_alerting_enabled\x18\x03 \x01(\x08\x12!\n\x19\x61lert_evaluation_interval\x18\x04 \x01(\x05\x12\x32\n\nthresholds\x18\x05 \x03(\x0b\x32\x1e.seigr.AnalyticsAlertThreshold\x12\x38\n\x08metadata\x18\x06 \x03(\x0b\x32&.seigr.AnalyticsSettings.MetadataEntry\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xb6\x03\n\x10\x41nalyticsSummary\x12\x12\n\nsummary_id\x18\x01 \x01(\t\x12\'\n\x08\x63\x61tegory\x18\x02 \x01(\x0e\x32\x15.seigr.MetricCategory\x12\x15\n\raverage_value\x18\x03 \x01(\x01\x12\x11\n\tmax_value\x18\x04 \x01(\x01\x12\x11\n\tmin_value\x18\x05 \x01(\x01\x12\x1a\n\x12standard_deviation\x18\x06 \x01(\x01\x12\x44\n\x0f\x66orecast_values\x18\x07 \x03(\x0b\x32+.seigr.AnalyticsSummary.ForecastValuesEntry\x12\r\n\x05trend\x18\x08 \x01(\t\x12\x16\n\x0eperiod_covered\x18\t \x01(\t\x12\x37\n\x08metadata\x18\n \x03(\x0b\x32%.seigr.AnalyticsSummary.MetadataEntry\x1a\x35\n\x13\x46orecastValuesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x01:\x02\x38\x01\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xb3\x02\n\x0f\x41nalyticsReport\x12\x11\n\treport_id\x18\x01 \x01(\t\x12\r\n\x05title\x18\x02 \x01(\t\x12\"\n\x07metrics\x18\x03 \x03(\x0b\x32\x11.seigr.DataMetric\x12)\n\x08insights\x18\x04 \x03(\x0b\x32\x17.seigr.AnalyticsInsight\x12\x14\n\x0cgenerated_by\x18\x05 \x01(\t\x12\x11\n\ttimestamp\x18\x06 \x01(\t\x12\x36\n\x08metadata\x18\x07 \x03(\x0b\x32$.seigr.AnalyticsReport.MetadataEntry\x12\x1d\n\x15\x63omparison_report_ids\x18\x08 \x03(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xf2\x02\n\x14WorkflowTriggerEvent\x12\x10\n\x08\x65vent_id\x18\x01 \x01(\t\x12\x13\n\x0bworkflow_id\x18\x02 \x01(\t\x12$\n\nmodel_type\x18\x03 \x01(\x0e\x32\x10.seigr.ModelType\x12&\n\x08severity\x18\x04 \x01(\x0e\x32\x14.seigr.AlertSeverity\x12\x30\n\x10\x65scalation_level\x18\x05 \x01(\x0e\x32\x16.seigr.EscalationLevel\x12\x14\n\x0c\x61\x63tion_taken\x18\x06 \x01(\t\x12\x11\n\ttimestamp\x18\x07 \x01(\t\x12;\n\x08metadata\x18\x08 \x03(\x0b\x32).seigr.WorkflowTriggerEvent.MetadataEntry\x12\x1c\n\x14\x63onditional_triggers\x18\t \x03(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01*\xc6\x01\n\x0eMetricCategory\x12\x1d\n\x19METRIC_CATEGORY_UNDEFINED\x10\x00\x12\x1f\n\x1bMETRIC_CATEGORY_PERFORMANCE\x10\x01\x12\x1c\n\x18METRIC_CATEGORY_SECURITY\x10\x02\x12\x19\n\x15METRIC_CATEGORY_USAGE\x10\x03\x12\x1f\n\x1bMETRIC_CATEGORY_RELIABILITY\x10\x04\x12\x1a\n\x16METRIC_CATEGORY_CUSTOM\x10\x05*\x9f\x01\n\nMetricType\x12\x19\n\x15METRIC_TYPE_UNDEFINED\x10\x00\x12\x17\n\x13METRIC_TYPE_AVERAGE\x10\x01\x12\x17\n\x13METRIC_TYPE_MAXIMUM\x10\x02\x12\x17\n\x13METRIC_TYPE_MINIMUM\x10\x03\x12\x16\n\x12METRIC_TYPE_MEDIAN\x10\x04\x12\x13\n\x0fMETRIC_TYPE_SUM\x10\x05*\x9a\x01\n\x11\x41ggregationMethod\x12 \n\x1c\x41GGREGATION_METHOD_UNDEFINED\x10\x00\x12\x11\n\rAGGREGATE_SUM\x10\x01\x12\x15\n\x11\x41GGREGATE_AVERAGE\x10\x02\x12\x13\n\x0f\x41GGREGATE_COUNT\x10\x03\x12\x11\n\rAGGREGATE_MAX\x10\x04\x12\x11\n\rAGGREGATE_MIN\x10\x05\x62\x06proto3')
   |
31 | 
32 | _globals = globals()
   |

src/seigr_protocol/compiled/audit_logging_pb2.py:7:1: I001 [*] Import block is un-sorted or un-formatted
   |
 5 |   # Protobuf Python Version: 5.29.2
 6 |   """Generated protocol buffer code."""
 7 | / from google.protobuf import descriptor as _descriptor
 8 | | from google.protobuf import descriptor_pool as _descriptor_pool
 9 | | from google.protobuf import runtime_version as _runtime_version
10 | | from google.protobuf import symbol_database as _symbol_database
11 | | from google.protobuf.internal import builder as _builder
12 | | _runtime_version.ValidateProtobufRuntimeVersion(
   | |_^ I001
13 |       _runtime_version.Domain.PUBLIC,
14 |       5,
   |
   = help: Organize imports

src/seigr_protocol/compiled/audit_logging_pb2.py:27:101: E501 Line too long (3943 > 100)
   |
27 | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x13\x61udit_logging.proto\x12\x05seigr\"\xca\x03\n\rAuditLogEntry\x12\x0e\n\x06log_id\x18\x01 \x01(\t\x12\x0f\n\x07user_id\x18\x02 \x01(\t\x12\x0c\n\x04role\x18\x03 \x01(\t\x12\x0e\n\x06\x61\x63tion\x18\x04 \x01(\t\x12\"\n\tlog_level\x18\x05 \x01(\x0e\x32\x0f.seigr.LogLevel\x12$\n\x08\x63\x61tegory\x18\x06 \x01(\x0e\x32\x12.seigr.LogCategory\x12\x11\n\ttimestamp\x18\x07 \x01(\t\x12\x34\n\x08metadata\x18\x08 \x03(\x0b\x32\".seigr.AuditLogEntry.MetadataEntry\x12\x1a\n\x12requires_attention\x18\t \x01(\x08\x12\x11\n\tcomponent\x18\n \x01(\t\x12\x16\n\x0e\x61\x63tion_details\x18\x0b \x01(\t\x12\x0c\n\x04tags\x18\x0c \x03(\t\x12\x19\n\x11\x65scalation_policy\x18\r \x01(\t\x12\x12\n\nsession_id\x18\x0e \x01(\t\x12\x10\n\x08location\x18\x0f \x01(\t\x12 \n\x18session_duration_seconds\x18\x10 \x01(\x05\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xe8\x01\n\x08\x41uditLog\x12%\n\x07\x65ntries\x18\x01 \x03(\x0b\x32\x14.seigr.AuditLogEntry\x12\x15\n\rsource_system\x18\x02 \x01(\t\x12\x13\n\x0blog_version\x18\x03 \x01(\t\x12\x10\n\x08log_date\x18\x04 \x01(\t\x12/\n\x08metadata\x18\x05 \x03(\x0b\x32\x1d.seigr.AuditLog.MetadataEntry\x12\x15\n\rcomparison_id\x18\x06 \x01(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x98\x03\n\rAuditLogQuery\x12\x10\n\x08user_ids\x18\x01 \x03(\t\x12&\n\ncategories\x18\x02 \x03(\x0e\x32\x12.seigr.LogCategory\x12#\n\nlog_levels\x18\x03 \x03(\x0e\x32\x0f.seigr.LogLevel\x12\x18\n\x10\x64\x61te_range_start\x18\x04 \x01(\t\x12\x16\n\x0e\x64\x61te_range_end\x18\x05 \x01(\t\x12\x0c\n\x04tags\x18\x06 \x03(\t\x12\x0f\n\x07\x61\x63tions\x18\x07 \x03(\t\x12G\n\x12\x61\x64\x64itional_filters\x18\x08 \x03(\x0b\x32+.seigr.AuditLogQuery.AdditionalFiltersEntry\x12\x19\n\x11time_of_day_start\x18\t \x01(\t\x12\x17\n\x0ftime_of_day_end\x18\n \x01(\t\x12 \n\x18\x65nable_pattern_detection\x18\x0b \x01(\x08\x1a\x38\n\x16\x41\x64\x64itionalFiltersEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x86\x05\n\rAuditLogStats\x12\x15\n\rtotal_entries\x18\x01 \x01(\x05\x12\x16\n\x0e\x63ritical_count\x18\x02 \x01(\x05\x12\x13\n\x0b\x65rror_count\x18\x03 \x01(\x05\x12\x15\n\rwarning_count\x18\x04 \x01(\x05\x12\x41\n\x0f\x63\x61tegory_counts\x18\x05 \x03(\x0b\x32(.seigr.AuditLogStats.CategoryCountsEntry\x12\x46\n\x12user_action_counts\x18\x06 \x03(\x0b\x32*.seigr.AuditLogStats.UserActionCountsEntry\x12\x1c\n\x14last_entry_timestamp\x18\x07 \x01(\t\x12\x16\n\x0esummary_period\x18\x08 \x01(\t\x12\x13\n\x0b\x61lert_count\x18\t \x01(\x05\x12\x1c\n\x14\x63ritical_event_ratio\x18\n \x01(\x01\x12\x1c\n\x14\x65scalation_threshold\x18\x0b \x01(\x05\x12\x1e\n\x16\x65rror_to_warning_ratio\x18\x0c \x01(\x01\x12\x41\n\x0f\x63\x61tegory_ratios\x18\r \x03(\x0b\x32(.seigr.AuditLogStats.CategoryRatiosEntry\x1a\x35\n\x13\x43\x61tegoryCountsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x05:\x02\x38\x01\x1a\x37\n\x15UserActionCountsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x05:\x02\x38\x01\x1a\x35\n\x13\x43\x61tegoryRatiosEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x01:\x02\x38\x01*\xdf\x01\n\x0bLogCategory\x12\x1a\n\x16LOG_CATEGORY_UNDEFINED\x10\x00\x12\x19\n\x15LOG_CATEGORY_SECURITY\x10\x01\x12\x1c\n\x18LOG_CATEGORY_DATA_ACCESS\x10\x02\x12!\n\x1dLOG_CATEGORY_SYSTEM_OPERATION\x10\x03\x12\x1c\n\x18LOG_CATEGORY_USER_ACTION\x10\x04\x12\x1c\n\x18LOG_CATEGORY_ERROR_EVENT\x10\x05\x12\x1c\n\x18LOG_CATEGORY_PERFORMANCE\x10\x06*\xa2\x01\n\x08LogLevel\x12\x17\n\x13LOG_LEVEL_UNDEFINED\x10\x00\x12\x12\n\x0eLOG_LEVEL_INFO\x10\x01\x12\x12\n\x0eLOG_LEVEL_WARN\x10\x02\x12\x13\n\x0fLOG_LEVEL_ERROR\x10\x03\x12\x13\n\x0fLOG_LEVEL_DEBUG\x10\x04\x12\x16\n\x12LOG_LEVEL_CRITICAL\x10\x05\x12\x13\n\x0fLOG_LEVEL_ALERT\x10\x06\x62\x06proto3')
   |
28 | 
29 | _globals = globals()
   |

src/seigr_protocol/compiled/cell_metadata_pb2.py:7:1: I001 [*] Import block is un-sorted or un-formatted
   |
 5 |   # Protobuf Python Version: 5.29.2
 6 |   """Generated protocol buffer code."""
 7 | / from google.protobuf import descriptor as _descriptor
 8 | | from google.protobuf import descriptor_pool as _descriptor_pool
 9 | | from google.protobuf import runtime_version as _runtime_version
10 | | from google.protobuf import symbol_database as _symbol_database
11 | | from google.protobuf.internal import builder as _builder
12 | | _runtime_version.ValidateProtobufRuntimeVersion(
   | |_^ I001
13 |       _runtime_version.Domain.PUBLIC,
14 |       5,
   |
   = help: Organize imports

src/seigr_protocol/compiled/cell_metadata_pb2.py:27:101: E501 Line too long (2281 > 100)
   |
27 | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x13\x63\x65ll_metadata.proto\x12\x05seigr\"\xf2\x01\n\x10\x43\x65llOperationLog\x12\x16\n\x0eoperation_type\x18\x01 \x01(\t\x12\x14\n\x0cperformed_by\x18\x02 \x01(\t\x12\x11\n\ttimestamp\x18\x03 \x01(\t\x12\x0e\n\x06status\x18\x04 \x01(\t\x12\x0f\n\x07\x64\x65tails\x18\x05 \x01(\t\x12\x37\n\x08metadata\x18\x06 \x03(\x0b\x32%.seigr.CellOperationLog.MetadataEntry\x12\x12\n\nerror_code\x18\x07 \x01(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xb7\x05\n\x0c\x43\x65llMetadata\x12\x0f\n\x07\x63\x65ll_id\x18\x01 \x01(\t\x12&\n\x0b\x63\x65ll_status\x18\x02 \x01(\x0e\x32\x11.seigr.CellStatus\x12\"\n\tcell_type\x18\x03 \x01(\x0e\x32\x0f.seigr.CellType\x12\x12\n\ncreated_by\x18\x04 \x01(\t\x12\x1a\n\x12\x63reation_timestamp\x18\x05 \x01(\t\x12\x1f\n\x17last_modified_timestamp\x18\x06 \x01(\t\x12\x14\n\x0cprimary_hash\x18\x07 \x01(\t\x12\x0f\n\x07lineage\x18\x08 \x03(\t\x12\x44\n\x11\x63ustom_attributes\x18\t \x03(\x0b\x32).seigr.CellMetadata.CustomAttributesEntry\x12/\n\x0eoperation_logs\x18\n \x03(\x0b\x32\x17.seigr.CellOperationLog\x12\x18\n\x10retention_period\x18\x0b \x01(\t\x12\x19\n\x11\x63ompliance_policy\x18\x0c \x01(\t\x12\x18\n\x10\x61uthorized_users\x18\r \x03(\t\x12\x1b\n\x13\x65ncryption_protocol\x18\x0e \x01(\t\x12\x18\n\x10network_protocol\x18\x0f \x01(\t\x12\x17\n\x0f\x62\x61\x63kup_location\x18\x10 \x01(\t\x12H\n\x13protocol_attributes\x18\x11 \x03(\x0b\x32+.seigr.CellMetadata.ProtocolAttributesEntry\x1a\x37\n\x15\x43ustomAttributesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x39\n\x17ProtocolAttributesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01*\x8f\x01\n\nCellStatus\x12\x19\n\x15\x43\x45LL_STATUS_UNDEFINED\x10\x00\x12\x0f\n\x0b\x43\x45LL_ACTIVE\x10\x01\x12\x11\n\rCELL_ARCHIVED\x10\x02\x12\x13\n\x0f\x43\x45LL_IN_TRANSIT\x10\x03\x12\x17\n\x13\x43\x45LL_PENDING_REVIEW\x10\x04\x12\x14\n\x10\x43\x45LL_COMPROMISED\x10\x05*d\n\x08\x43\x65llType\x12\x17\n\x13\x43\x45LL_TYPE_UNDEFINED\x10\x00\x12\r\n\tDATA_CELL\x10\x01\x12\x0c\n\x08LOG_CELL\x10\x02\x12\x11\n\rMETADATA_CELL\x10\x03\x12\x0f\n\x0b\x42\x41\x43KUP_CELL\x10\x04\x62\x06proto3')
   |
28 | 
29 | _globals = globals()
   |

src/seigr_protocol/compiled/common_pb2.py:7:1: I001 [*] Import block is un-sorted or un-formatted
   |
 5 |   # Protobuf Python Version: 5.29.2
 6 |   """Generated protocol buffer code."""
 7 | / from google.protobuf import descriptor as _descriptor
 8 | | from google.protobuf import descriptor_pool as _descriptor_pool
 9 | | from google.protobuf import runtime_version as _runtime_version
10 | | from google.protobuf import symbol_database as _symbol_database
11 | | from google.protobuf.internal import builder as _builder
12 | | _runtime_version.ValidateProtobufRuntimeVersion(
   | |_^ I001
13 |       _runtime_version.Domain.PUBLIC,
14 |       5,
   |
   = help: Organize imports

src/seigr_protocol/compiled/common_pb2.py:27:101: E501 Line too long (6356 > 100)
   |
27 | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0c\x63ommon.proto\x12\x05seigr\"O\n\rBasicMetadata\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t\x12\x0c\n\x04type\x18\x03 \x01(\t\x12\x14\n\x0csecurity_tag\x18\x04 \x01(\t\"\x84\x01\n\tTimestamp\x12\x12\n\ncreated_at\x18\x01 \x01(\t\x12\x12\n\nupdated_at\x18\x02 \x01(\t\x12\x13\n\x0b\x61\x63\x63\x65ssed_at\x18\x03 \x01(\t\x12\x12\n\ndeleted_at\x18\x04 \x01(\t\x12\x10\n\x08timezone\x18\x05 \x01(\t\x12\x14\n\x0cprecision_ms\x18\x06 \x01(\x05\"\xf5\x01\n\x10StandardResponse\x12(\n\x06status\x18\x01 \x01(\x0e\x32\x18.seigr.OperationalStatus\x12\x0f\n\x07message\x18\x02 \x01(\t\x12\x37\n\x08metadata\x18\x03 \x03(\x0b\x32%.seigr.StandardResponse.MetadataEntry\x12\x12\n\nrequest_id\x18\x04 \x01(\t\x12(\n\x0cthreat_level\x18\x05 \x01(\x0e\x32\x12.seigr.ThreatLevel\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xa1\x03\n\x12ThreatDetectionLog\x12(\n\x0cthreat_level\x18\x01 \x01(\x0e\x32\x12.seigr.ThreatLevel\x12\x0e\n\x06origin\x18\x02 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x03 \x01(\t\x12(\n\x0e\x64\x65tection_time\x18\x04 \x01(\x0b\x32\x10.seigr.Timestamp\x12\x39\n\x08metadata\x18\x05 \x03(\x0b\x32\'.seigr.ThreatDetectionLog.MetadataEntry\x12\x17\n\x0fresponse_action\x18\x06 \x01(\t\x12\x11\n\tmitigated\x18\x07 \x01(\x08\x12)\n\x0fmitigation_time\x18\x08 \x01(\x0b\x32\x10.seigr.Timestamp\x12\x14\n\x0cimpact_scope\x18\t \x01(\t\x12\x1b\n\x13mitigation_strategy\x18\n \x01(\t\x12\x1c\n\x14\x65scalation_policy_id\x18\x0b \x01(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xad\x02\n\x12ResourceIdentifier\x12\x13\n\x0bresource_id\x18\x01 \x01(\t\x12\"\n\tdata_type\x18\x02 \x01(\x0e\x32\x0f.seigr.DataType\x12\x13\n\x0b\x64\x65scription\x18\x03 \x01(\t\x12\x39\n\x08metadata\x18\x04 \x03(\x0b\x32\'.seigr.ResourceIdentifier.MetadataEntry\x12\x1a\n\x12parent_resource_id\x18\x05 \x01(\t\x12\x1a\n\x12\x63hild_resource_ids\x18\x06 \x03(\t\x12\x0f\n\x07version\x18\x07 \x01(\t\x12\x14\n\x0cgeo_location\x18\x08 \x01(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xee\x02\n\x13NetworkOperationLog\x12\x14\n\x0coperation_id\x18\x01 \x01(\t\x12\x16\n\x0eoperation_type\x18\x02 \x01(\t\x12\x14\n\x0cperformed_by\x18\x03 \x01(\t\x12\x18\n\x10target_hyphen_id\x18\x04 \x01(\t\x12\x10\n\x08protocol\x18\x05 \x01(\t\x12\x11\n\ttimestamp\x18\x06 \x01(\t\x12\x0e\n\x06status\x18\x07 \x01(\t\x12\x0f\n\x07\x64\x65tails\x18\x08 \x01(\t\x12M\n\x12operation_metadata\x18\t \x03(\x0b\x32\x31.seigr.NetworkOperationLog.OperationMetadataEntry\x12\x13\n\x0bretry_count\x18\n \x01(\x05\x12\x15\n\rauto_resolved\x18\x0b \x01(\x08\x1a\x38\n\x16OperationMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xb7\x02\n\x14NetworkStatusRequest\x12\x14\n\x0crequester_id\x18\x01 \x01(\t\x12\x12\n\nhyphen_ids\x18\x02 \x03(\t\x12\x17\n\x0finclude_latency\x18\x03 \x01(\x08\x12\x11\n\tprotocols\x18\x04 \x03(\t\x12\x39\n\x07options\x18\x05 \x03(\x0b\x32(.seigr.NetworkStatusRequest.OptionsEntry\x12\x18\n\x10include_metadata\x18\x06 \x01(\x08\x12\x1c\n\x14include_load_metrics\x18\x07 \x01(\x08\x12&\n\x1einclude_network_health_summary\x18\x08 \x01(\x08\x1a.\n\x0cOptionsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xc9\x02\n\x15NetworkStatusResponse\x12\x14\n\x0crequester_id\x18\x01 \x01(\t\x12\x0f\n\x07hyphens\x18\x02 \x03(\t\x12\x14\n\x0c\x63onnectivity\x18\x03 \x03(\t\x12\x11\n\ttimestamp\x18\x04 \x01(\t\x12\x0f\n\x07message\x18\x05 \x01(\t\x12M\n\x11response_metadata\x18\x06 \x03(\x0b\x32\x32.seigr.NetworkStatusResponse.ResponseMetadataEntry\x12\x12\n\nerror_logs\x18\x07 \x03(\t\x12\x33\n\x0enetwork_health\x18\x08 \x01(\x0b\x32\x1b.seigr.NetworkHealthSummary\x1a\x37\n\x15ResponseMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xae\x01\n\x14NetworkHealthSummary\x12\x15\n\rtotal_hyphens\x18\x01 \x01(\x05\x12\x16\n\x0e\x61\x63tive_hyphens\x18\x02 \x01(\x05\x12\x18\n\x10\x64\x65graded_hyphens\x18\x03 \x01(\x05\x12\x17\n\x0foffline_hyphens\x18\x04 \x01(\x05\x12\x1a\n\x12\x61verage_latency_ms\x18\x05 \x01(\x02\x12\x18\n\x10packet_loss_rate\x18\x06 \x01(\x02\"\xfe\x01\n\x19NetworkPerformanceSummary\x12\x17\n\x0f\x61verage_latency\x18\x01 \x01(\x02\x12\x1b\n\x13\x61verage_packet_loss\x18\x02 \x01(\x02\x12\x1e\n\x16total_data_transferred\x18\x03 \x01(\x03\x12\x18\n\x10reporting_period\x18\x04 \x01(\t\x12@\n\x08metadata\x18\x05 \x03(\x0b\x32..seigr.NetworkPerformanceSummary.MetadataEntry\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01*\x8c\x01\n\x0bThreatLevel\x12\x1a\n\x16THREAT_LEVEL_UNDEFINED\x10\x00\x12\x14\n\x10THREAT_LEVEL_LOW\x10\x01\x12\x19\n\x15THREAT_LEVEL_MODERATE\x10\x02\x12\x15\n\x11THREAT_LEVEL_HIGH\x10\x03\x12\x19\n\x15THREAT_LEVEL_CRITICAL\x10\x04*\xfd\x01\n\x11OperationalStatus\x12 \n\x1cOPERATIONAL_STATUS_UNDEFINED\x10\x00\x12\x19\n\x15OPERATIONAL_STATUS_OK\x10\x01\x12\x1e\n\x1aOPERATIONAL_STATUS_WARNING\x10\x02\x12\x1c\n\x18OPERATIONAL_STATUS_ERROR\x10\x03\x12\"\n\x1eOPERATIONAL_STATUS_MAINTENANCE\x10\x04\x12\x1f\n\x1bOPERATIONAL_STATUS_DEGRADED\x10\x05\x12(\n$OPERATIONAL_STATUS_DISASTER_RECOVERY\x10\x06*\xb2\x01\n\rPriorityLevel\x12\x1c\n\x18PRIORITY_LEVEL_UNDEFINED\x10\x00\x12\x16\n\x12PRIORITY_LEVEL_LOW\x10\x01\x12\x19\n\x15PRIORITY_LEVEL_MEDIUM\x10\x02\x12\x17\n\x13PRIORITY_LEVEL_HIGH\x10\x03\x12\x19\n\x15PRIORITY_LEVEL_URGENT\x10\x04\x12\x1c\n\x18PRIORITY_LEVEL_IMMEDIATE\x10\x05*x\n\x08QoSLevel\x12\x17\n\x13QOS_LEVEL_UNDEFINED\x10\x00\x12\x11\n\rQOS_LEVEL_LOW\x10\x01\x12\x14\n\x10QOS_LEVEL_MEDIUM\x10\x02\x12\x12\n\x0eQOS_LEVEL_HIGH\x10\x03\x12\x16\n\x12QOS_LEVEL_CRITICAL\x10\x04*\xec\x01\n\x08\x44\x61taType\x12\x17\n\x13\x44\x41TA_TYPE_UNDEFINED\x10\x00\x12\x12\n\x0e\x44\x41TA_TYPE_TEXT\x10\x01\x12\x13\n\x0f\x44\x41TA_TYPE_IMAGE\x10\x02\x12\x13\n\x0f\x44\x41TA_TYPE_VIDEO\x10\x03\x12\x13\n\x0f\x44\x41TA_TYPE_AUDIO\x10\x04\x12\x16\n\x12\x44\x41TA_TYPE_DOCUMENT\x10\x05\x12\x16\n\x12\x44\x41TA_TYPE_METADATA\x10\x06\x12\x14\n\x10\x44\x41TA_TYPE_BINARY\x10\x07\x12\x18\n\x14\x44\x41TA_TYPE_STRUCTURED\x10\x08\x12\x14\n\x10\x44\x41TA_TYPE_STREAM\x10\tb\x06proto3')
   |
28 | 
29 | _globals = globals()
   |

src/seigr_protocol/compiled/common_requests_pb2.py:7:1: I001 [*] Import block is un-sorted or un-formatted
   |
 5 |   # Protobuf Python Version: 5.29.2
 6 |   """Generated protocol buffer code."""
 7 | / from google.protobuf import descriptor as _descriptor
 8 | | from google.protobuf import descriptor_pool as _descriptor_pool
 9 | | from google.protobuf import runtime_version as _runtime_version
10 | | from google.protobuf import symbol_database as _symbol_database
11 | | from google.protobuf.internal import builder as _builder
12 | | _runtime_version.ValidateProtobufRuntimeVersion(
   | |_^ I001
13 |       _runtime_version.Domain.PUBLIC,
14 |       5,
   |
   = help: Organize imports

src/seigr_protocol/compiled/common_requests_pb2.py:25:1: E402 Module level import not at top of file
   |
25 | import common_pb2 as common__pb2
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E402
   |

src/seigr_protocol/compiled/common_requests_pb2.py:25:1: I001 [*] Import block is un-sorted or un-formatted
   |
25 | / import common_pb2 as common__pb2
26 | | 
27 | | 
28 | | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x15\x63ommon_requests.proto\x12\x05seigr\x1a\x0c\x63ommon.proto\"\xba\x06\n\x12ReplicationRequest\x12\x12\n\nrequest_id\x18\x01 \x01(\t\x12\x12\n\nsegment_id\x18\x02 \x01(\t\x12(\n\x0cthreat_level\x18\x03 \x01(\x0e\x32\x12.seigr.ThreatLevel\x12,\n\x08priority\x18\x04 \x01(\x0e\x32\x1a.seigr.ReplicationPriority\x12*\n\x07trigger\x18\x05 \x01(\x0e\x32\x19.seigr.ReplicationTrigger\x12,\n\x08strategy\x18\x06 \x01(\x0e\x32\x1a.seigr.ReplicationStrategy\x12\x1c\n\x14\x63ritical_replication\x18\x07 \x01(\x08\x12\x14\n\x0crequested_by\x18\x08 \x01(\t\x12\x19\n\x11request_timestamp\x18\t \x01(\t\x12=\n\nparameters\x18\n \x03(\x0b\x32).seigr.ReplicationRequest.ParametersEntry\x12\x0e\n\x06reason\x18\x0b \x01(\t\x12\x13\n\x0bmax_retries\x18\x0c \x01(\x05\x12\x1e\n\x16retry_interval_seconds\x18\r \x01(\x05\x12\x14\n\x0ctime_to_live\x18\x0e \x01(\t\x12\x18\n\x10\x63ompliance_level\x18\x0f \x01(\t\x12\x1e\n\x16\x65ncryption_requirement\x18\x10 \x01(\t\x12\x1c\n\x14\x61\x63\x63\x65ss_control_level\x18\x11 \x01(\t\x12\x14\n\x0cgeo_location\x18\x12 \x01(\t\x12\x17\n\x0f\x64ynamic_scaling\x18\x13 \x01(\x08\x12\x1b\n\x13replication_density\x18\x14 \x01(\x01\x12\x1e\n\x16\x65rror_threshold_policy\x18\x15 \x01(\t\x12\x39\n\x08metadata\x18\x16 \x03(\x0b\x32\'.seigr.ReplicationRequest.MetadataEntry\x1a\x31\n\x0fParametersEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01*\x96\x01\n\x13ReplicationPriority\x12\x16\n\x12PRIORITY_UNDEFINED\x10\x00\x12\x10\n\x0cPRIORITY_LOW\x10\x01\x12\x13\n\x0fPRIORITY_MEDIUM\x10\x02\x12\x11\n\rPRIORITY_HIGH\x10\x03\x12\x15\n\x11PRIORITY_CRITICAL\x10\x04\x12\x16\n\x12PRIORITY_EMERGENCY\x10\x05*\xdf\x02\n\x12ReplicationTrigger\x12!\n\x1dREPLICATION_TRIGGER_UNDEFINED\x10\x00\x12&\n\"REPLICATION_TRIGGER_MANUAL_REQUEST\x10\x01\x12$\n REPLICATION_TRIGGER_DEMAND_BASED\x10\x02\x12+\n\'REPLICATION_TRIGGER_IMMUNE_SYSTEM_ALERT\x10\x03\x12&\n\"REPLICATION_TRIGGER_PERIODIC_CHECK\x10\x04\x12)\n%REPLICATION_TRIGGER_NETWORK_EXPANSION\x10\x05\x12-\n)REPLICATION_TRIGGER_REGULATORY_COMPLIANCE\x10\x06\x12)\n%REPLICATION_TRIGGER_DATA_ACCESS_SPIKE\x10\x07*\x9c\x02\n\x13ReplicationStrategy\x12\"\n\x1eREPLICATION_STRATEGY_UNDEFINED\x10\x00\x12%\n!REPLICATION_STRATEGY_DEMAND_BASED\x10\x01\x12!\n\x1dREPLICATION_STRATEGY_PERIODIC\x10\x02\x12\x1d\n\x19REPLICATION_STRATEGY_FULL\x10\x03\x12!\n\x1dREPLICATION_STRATEGY_ADAPTIVE\x10\x04\x12-\n)REPLICATION_STRATEGY_GEOGRAPHICALLY_AWARE\x10\x05\x12&\n\"REPLICATION_STRATEGY_LOAD_BALANCED\x10\x06\x62\x06proto3')
   | |_^ I001
29 |   
30 |   _globals = globals()
   |
   = help: Organize imports

src/seigr_protocol/compiled/common_requests_pb2.py:25:22: F401 [*] `common_pb2` imported but unused
   |
25 | import common_pb2 as common__pb2
   |                      ^^^^^^^^^^^ F401
   |
   = help: Remove unused import: `common_pb2`

src/seigr_protocol/compiled/common_requests_pb2.py:28:101: E501 Line too long (2675 > 100)
   |
28 | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x15\x63ommon_requests.proto\x12\x05seigr\x1a\x0c\x63ommon.proto\"\xba\x06\n\x12ReplicationRequest\x12\x12\n\nrequest_id\x18\x01 \x01(\t\x12\x12\n\nsegment_id\x18\x02 \x01(\t\x12(\n\x0cthreat_level\x18\x03 \x01(\x0e\x32\x12.seigr.ThreatLevel\x12,\n\x08priority\x18\x04 \x01(\x0e\x32\x1a.seigr.ReplicationPriority\x12*\n\x07trigger\x18\x05 \x01(\x0e\x32\x19.seigr.ReplicationTrigger\x12,\n\x08strategy\x18\x06 \x01(\x0e\x32\x1a.seigr.ReplicationStrategy\x12\x1c\n\x14\x63ritical_replication\x18\x07 \x01(\x08\x12\x14\n\x0crequested_by\x18\x08 \x01(\t\x12\x19\n\x11request_timestamp\x18\t \x01(\t\x12=\n\nparameters\x18\n \x03(\x0b\x32).seigr.ReplicationRequest.ParametersEntry\x12\x0e\n\x06reason\x18\x0b \x01(\t\x12\x13\n\x0bmax_retries\x18\x0c \x01(\x05\x12\x1e\n\x16retry_interval_seconds\x18\r \x01(\x05\x12\x14\n\x0ctime_to_live\x18\x0e \x01(\t\x12\x18\n\x10\x63ompliance_level\x18\x0f \x01(\t\x12\x1e\n\x16\x65ncryption_requirement\x18\x10 \x01(\t\x12\x1c\n\x14\x61\x63\x63\x65ss_control_level\x18\x11 \x01(\t\x12\x14\n\x0cgeo_location\x18\x12 \x01(\t\x12\x17\n\x0f\x64ynamic_scaling\x18\x13 \x01(\x08\x12\x1b\n\x13replication_density\x18\x14 \x01(\x01\x12\x1e\n\x16\x65rror_threshold_policy\x18\x15 \x01(\t\x12\x39\n\x08metadata\x18\x16 \x03(\x0b\x32\'.seigr.ReplicationRequest.MetadataEntry\x1a\x31\n\x0fParametersEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01*\x96\x01\n\x13ReplicationPriority\x12\x16\n\x12PRIORITY_UNDEFINED\x10\x00\x12\x10\n\x0cPRIORITY_LOW\x10\x01\x12\x13\n\x0fPRIORITY_MEDIUM\x10\x02\x12\x11\n\rPRIORITY_HIGH\x10\x03\x12\x15\n\x11PRIORITY_CRITICAL\x10\x04\x12\x16\n\x12PRIORITY_EMERGENCY\x10\x05*\xdf\x02\n\x12ReplicationTrigger\x12!\n\x1dREPLICATION_TRIGGER_UNDEFINED\x10\x00\x12&\n\"REPLICATION_TRIGGER_MANUAL_REQUEST\x10\x01\x12$\n REPLICATION_TRIGGER_DEMAND_BASED\x10\x02\x12+\n\'REPLICATION_TRIGGER_IMMUNE_SYSTEM_ALERT\x10\x03\x12&\n\"REPLICATION_TRIGGER_PERIODIC_CHECK\x10\x04\x12)\n%REPLICATION_TRIGGER_NETWORK_EXPANSION\x10\x05\x12-\n)REPLICATION_TRIGGER_REGULATORY_COMPLIANCE\x10\x06\x12)\n%REPLICATION_TRIGGER_DATA_ACCESS_SPIKE\x10\x07*\x9c\x02\n\x13ReplicationStrategy\x12\"\n\x1eREPLICATION_STRATEGY_UNDEFINED\x10\x00\x12%\n!REPLICATION_STRATEGY_DEMAND_BASED\x10\x01\x12!\n\x1dREPLICATION_STRATEGY_PERIODIC\x10\x02\x12\x1d\n\x19REPLICATION_STRATEGY_FULL\x10\x03\x12!\n\x1dREPLICATION_STRATEGY_ADAPTIVE\x10\x04\x12-\n)REPLICATION_STRATEGY_GEOGRAPHICALLY_AWARE\x10\x05\x12&\n\"REPLICATION_STRATEGY_LOAD_BALANCED\x10\x06\x62\x06proto3')
   |
29 | 
30 | _globals = globals()
   |

src/seigr_protocol/compiled/coordinate_pb2.py:7:1: I001 [*] Import block is un-sorted or un-formatted
   |
 5 |   # Protobuf Python Version: 5.29.2
 6 |   """Generated protocol buffer code."""
 7 | / from google.protobuf import descriptor as _descriptor
 8 | | from google.protobuf import descriptor_pool as _descriptor_pool
 9 | | from google.protobuf import runtime_version as _runtime_version
10 | | from google.protobuf import symbol_database as _symbol_database
11 | | from google.protobuf.internal import builder as _builder
12 | | _runtime_version.ValidateProtobufRuntimeVersion(
   | |_^ I001
13 |       _runtime_version.Domain.PUBLIC,
14 |       5,
   |
   = help: Organize imports

src/seigr_protocol/compiled/coordinate_pb2.py:27:101: E501 Line too long (3131 > 100)
   |
27 | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x10\x63oordinate.proto\x12\x05seigr\"\x9e\x04\n\x0f\x43oordinateIndex\x12\x34\n\rrelation_type\x18\x01 \x01(\x0e\x32\x1d.seigr.CoordinateRelationType\x12\x10\n\x08layer_id\x18\x02 \x01(\t\x12$\n\nlayer_type\x18\x03 \x01(\x0e\x32\x10.seigr.LayerType\x12\x11\n\thyphen_id\x18\x04 \x01(\t\x12\x11\n\tbranch_id\x18\x05 \x01(\t\x12\x13\n\x0b\x64\x65pth_level\x18\x06 \x01(\x05\x12\x19\n\x11\x63onnected_hyphens\x18\x07 \x03(\t\x12\x13\n\x0bpath_weight\x18\x08 \x01(\x02\x12\x15\n\rparent_hyphen\x18\t \x01(\t\x12$\n\x05\x66lags\x18\n \x03(\x0e\x32\x15.seigr.CoordinateFlag\x12\x0f\n\x07version\x18\x0b \x01(\t\x12\x15\n\rlast_modified\x18\x0c \x01(\t\x12\x36\n\x08metadata\x18\r \x03(\x0b\x32$.seigr.CoordinateIndex.MetadataEntry\x12\x1b\n\x13geographic_location\x18\x0e \x01(\t\x12\x15\n\ractive_period\x18\x0f \x01(\t\x12\x16\n\x0egeo_boundaries\x18\x10 \x03(\t\x12\x18\n\x10role_description\x18\x11 \x01(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x9e\x03\n\x0e\x43oordinatePath\x12\x14\n\x0cstart_hyphen\x18\x01 \x01(\t\x12\x12\n\nend_hyphen\x18\x02 \x01(\t\x12\x1c\n\x14intermediate_hyphens\x18\x03 \x03(\t\x12\x14\n\x0ctotal_weight\x18\x04 \x01(\x02\x12\x30\n\tpath_type\x18\x05 \x01(\x0e\x32\x1d.seigr.CoordinateRelationType\x12\x35\n\x08metadata\x18\x06 \x03(\x0b\x32#.seigr.CoordinatePath.MetadataEntry\x12\x11\n\tdirection\x18\x07 \x01(\t\x12\x17\n\x0ftime_constraint\x18\x08 \x01(\t\x12\x1c\n\x14\x64irectional_strength\x18\t \x01(\x02\x12\x16\n\x0eload_threshold\x18\n \x01(\x05\x12\x16\n\x0e\x62\x61\x63kup_path_id\x18\x0b \x01(\t\x12\x1a\n\x12latency_constraint\x18\x0c \x01(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01*\xc6\x02\n\x16\x43oordinateRelationType\x12\x1b\n\x17RELATION_TYPE_UNDEFINED\x10\x00\x12\x1e\n\x1aRELATION_TYPE_PRIMARY_PATH\x10\x01\x12 \n\x1cRELATION_TYPE_SECONDARY_PATH\x10\x02\x12$\n RELATION_TYPE_HIERARCHICAL_LAYER\x10\x03\x12$\n RELATION_TYPE_CLUSTER_CONNECTION\x10\x04\x12\x1b\n\x17RELATION_TYPE_PEER_LINK\x10\x05\x12$\n RELATION_TYPE_CROSS_CLUSTER_LINK\x10\x06\x12\x1d\n\x19RELATION_TYPE_BACKUP_LINK\x10\x07\x12\x1f\n\x1bRELATION_TYPE_LOAD_BALANCED\x10\x08*\xc4\x02\n\x0e\x43oordinateFlag\x12\x1d\n\x19\x43OORDINATE_FLAG_UNDEFINED\x10\x00\x12\x1a\n\x16\x43OORDINATE_FLAG_ACTIVE\x10\x01\x12\x1c\n\x18\x43OORDINATE_FLAG_INACTIVE\x10\x02\x12\x1c\n\x18\x43OORDINATE_FLAG_ARCHIVED\x10\x03\x12\x1d\n\x19\x43OORDINATE_FLAG_TEMPORARY\x10\x04\x12\x1a\n\x16\x43OORDINATE_FLAG_LOCKED\x10\x05\x12\x1c\n\x18\x43OORDINATE_FLAG_PRIORITY\x10\x06\x12!\n\x1d\x43OORDINATE_FLAG_SYNC_REQUIRED\x10\x07\x12\x1d\n\x19\x43OORDINATE_FLAG_VALIDATOR\x10\x08\x12 \n\x1c\x43OORDINATE_FLAG_CACHE_HYPHEN\x10\t*\xc1\x01\n\tLayerType\x12\x18\n\x14LAYER_TYPE_UNDEFINED\x10\x00\x12\x17\n\x13LAYER_TYPE_TEMPORAL\x10\x01\x12\x16\n\x12LAYER_TYPE_SPATIAL\x10\x02\x12\x16\n\x12LAYER_TYPE_LOGICAL\x10\x03\x12\x17\n\x13LAYER_TYPE_SECURITY\x10\x04\x12\x1f\n\x1bLAYER_TYPE_NETWORK_TOPOLOGY\x10\x05\x12\x17\n\x13LAYER_TYPE_ADAPTIVE\x10\x06\x62\x06proto3')
   |
28 | 
29 | _globals = globals()
   |

src/seigr_protocol/compiled/cross_chain_operations_pb2.py:7:1: I001 [*] Import block is un-sorted or un-formatted
   |
 5 |   # Protobuf Python Version: 5.29.2
 6 |   """Generated protocol buffer code."""
 7 | / from google.protobuf import descriptor as _descriptor
 8 | | from google.protobuf import descriptor_pool as _descriptor_pool
 9 | | from google.protobuf import runtime_version as _runtime_version
10 | | from google.protobuf import symbol_database as _symbol_database
11 | | from google.protobuf.internal import builder as _builder
12 | | _runtime_version.ValidateProtobufRuntimeVersion(
   | |_^ I001
13 |       _runtime_version.Domain.PUBLIC,
14 |       5,
   |
   = help: Organize imports

src/seigr_protocol/compiled/cross_chain_operations_pb2.py:27:101: E501 Line too long (5035 > 100)
   |
27 | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1c\x63ross_chain_operations.proto\x12\x05seigr\"\xe0\x02\n\x0f\x43rossChainToken\x12\x12\n\nchain_name\x18\x01 \x01(\t\x12\x18\n\x10wrapped_token_id\x18\x02 \x01(\t\x12\x0e\n\x06\x61mount\x18\x03 \x01(\x04\x12\'\n\x06status\x18\x04 \x01(\x0e\x32\x17.seigr.CrossChainStatus\x12\x19\n\x11originating_chain\x18\x05 \x01(\t\x12\x19\n\x11\x64\x65stination_chain\x18\x06 \x01(\t\x12\x18\n\x10\x63ompliance_level\x18\x07 \x01(\t\x12\x1d\n\x15\x64\x65stination_wallet_id\x18\x08 \x01(\t\x12\x41\n\x0etoken_metadata\x18\t \x03(\x0b\x32).seigr.CrossChainToken.TokenMetadataEntry\x1a\x34\n\x12TokenMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xe7\x01\n\x10WrapTokenRequest\x12\x12\n\nchain_name\x18\x01 \x01(\t\x12\x0e\n\x06\x61mount\x18\x02 \x01(\x04\x12\x19\n\x11\x64\x65stination_chain\x18\x03 \x01(\t\x12\x1d\n\x15\x64\x65stination_wallet_id\x18\x04 \x01(\t\x12@\n\rwrap_metadata\x18\x05 \x03(\x0b\x32).seigr.WrapTokenRequest.WrapMetadataEntry\x1a\x33\n\x11WrapMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"a\n\x11WrapTokenResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x0f\n\x07message\x18\x02 \x01(\t\x12\x16\n\x0etransaction_id\x18\x03 \x01(\t\x12\x12\n\nerror_code\x18\x04 \x01(\t\"\xf1\x01\n\x12UnwrapTokenRequest\x12\x12\n\nchain_name\x18\x01 \x01(\t\x12\x0e\n\x06\x61mount\x18\x02 \x01(\x04\x12\x19\n\x11\x64\x65stination_chain\x18\x03 \x01(\t\x12\x1d\n\x15\x64\x65stination_wallet_id\x18\x04 \x01(\t\x12\x46\n\x0funwrap_metadata\x18\x05 \x03(\x0b\x32-.seigr.UnwrapTokenRequest.UnwrapMetadataEntry\x1a\x35\n\x13UnwrapMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"c\n\x13UnwrapTokenResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x0f\n\x07message\x18\x02 \x01(\t\x12\x16\n\x0etransaction_id\x18\x03 \x01(\t\x12\x12\n\nerror_code\x18\x04 \x01(\t\"\xa7\x01\n\x15SyncGovernanceRequest\x12\x12\n\nchain_name\x18\x01 \x01(\t\x12\x45\n\rsync_metadata\x18\x02 \x03(\x0b\x32..seigr.SyncGovernanceRequest.SyncMetadataEntry\x1a\x33\n\x11SyncMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"f\n\x16SyncGovernanceResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x0f\n\x07message\x18\x02 \x01(\t\x12\x16\n\x0etransaction_id\x18\x03 \x01(\t\x12\x12\n\nerror_code\x18\x04 \x01(\t\"\xab\x01\n&GetCrossChainTransactionHistoryRequest\x12\x12\n\nchain_name\x18\x01 \x01(\t\x12\r\n\x05limit\x18\x02 \x01(\r\x12,\n\x0c\x66ilter_types\x18\x03 \x03(\x0e\x32\x16.seigr.TransactionType\x12\x18\n\x10\x64\x61te_range_start\x18\x04 \x01(\t\x12\x16\n\x0e\x64\x61te_range_end\x18\x05 \x01(\t\"q\n\'GetCrossChainTransactionHistoryResponse\x12\x12\n\nchain_name\x18\x01 \x01(\t\x12\x32\n\x0ctransactions\x18\x02 \x03(\x0b\x32\x1c.seigr.CrossChainTransaction\"\x80\x02\n\x15\x43rossChainTransaction\x12\x16\n\x0etransaction_id\x18\x01 \x01(\t\x12\x12\n\nfrom_chain\x18\x02 \x01(\t\x12\x10\n\x08to_chain\x18\x03 \x01(\t\x12\x0e\n\x06\x61mount\x18\x04 \x01(\x04\x12\x11\n\ttimestamp\x18\x05 \x01(\t\x12$\n\x04type\x18\x06 \x01(\x0e\x32\x16.seigr.TransactionType\x12\'\n\x06status\x18\x07 \x01(\x0e\x32\x17.seigr.CrossChainStatus\x12\x0b\n\x03\x66\x65\x65\x18\x08 \x01(\t\x12\x11\n\twallet_id\x18\t \x01(\t\x12\x17\n\x0f\x63ompliance_note\x18\n \x01(\t\"\x96\x02\n\x1dUpdateCrossChainStatusRequest\x12\x12\n\nchain_name\x18\x01 \x01(\t\x12+\n\nnew_status\x18\x02 \x01(\x0e\x32\x17.seigr.CrossChainStatus\x12\x15\n\rstatus_reason\x18\x03 \x01(\t\x12\x13\n\x0bretry_count\x18\x04 \x01(\x05\x12Q\n\x0fupdate_metadata\x18\x05 \x03(\x0b\x32\x38.seigr.UpdateCrossChainStatusRequest.UpdateMetadataEntry\x1a\x35\n\x13UpdateMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"V\n\x1eUpdateCrossChainStatusResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x0f\n\x07message\x18\x02 \x01(\t\x12\x12\n\nerror_code\x18\x03 \x01(\t*\xb2\x01\n\x10\x43rossChainStatus\x12\x16\n\x12\x43ROSS_CHAIN_ACTIVE\x10\x00\x12\x16\n\x12\x43ROSS_CHAIN_SYNCED\x10\x01\x12\x18\n\x14\x43ROSS_CHAIN_INACTIVE\x10\x02\x12\x1c\n\x18\x43ROSS_CHAIN_PENDING_WRAP\x10\x03\x12\x1e\n\x1a\x43ROSS_CHAIN_PENDING_UNWRAP\x10\x04\x12\x16\n\x12\x43ROSS_CHAIN_FAILED\x10\x05*O\n\x0fTransactionType\x12\x08\n\x04WRAP\x10\x00\x12\n\n\x06UNWRAP\x10\x01\x12\x13\n\x0fGOVERNANCE_SYNC\x10\x02\x12\x11\n\rSTATUS_UPDATE\x10\x03\x32\xd2\x03\n\x11\x43rossChainService\x12>\n\tWrapToken\x12\x17.seigr.WrapTokenRequest\x1a\x18.seigr.WrapTokenResponse\x12\x44\n\x0bUnwrapToken\x12\x19.seigr.UnwrapTokenRequest\x1a\x1a.seigr.UnwrapTokenResponse\x12M\n\x0eSyncGovernance\x12\x1c.seigr.SyncGovernanceRequest\x1a\x1d.seigr.SyncGovernanceResponse\x12\x80\x01\n\x1fGetCrossChainTransactionHistory\x12-.seigr.GetCrossChainTransactionHistoryRequest\x1a..seigr.GetCrossChainTransactionHistoryResponse\x12\x65\n\x16UpdateCrossChainStatus\x12$.seigr.UpdateCrossChainStatusRequest\x1a%.seigr.UpdateCrossChainStatusResponseb\x06proto3')
   |
28 | 
29 | _globals = globals()
   |

src/seigr_protocol/compiled/encryption_pb2.py:7:1: I001 [*] Import block is un-sorted or un-formatted
   |
 5 |   # Protobuf Python Version: 5.29.2
 6 |   """Generated protocol buffer code."""
 7 | / from google.protobuf import descriptor as _descriptor
 8 | | from google.protobuf import descriptor_pool as _descriptor_pool
 9 | | from google.protobuf import runtime_version as _runtime_version
10 | | from google.protobuf import symbol_database as _symbol_database
11 | | from google.protobuf.internal import builder as _builder
12 | | _runtime_version.ValidateProtobufRuntimeVersion(
   | |_^ I001
13 |       _runtime_version.Domain.PUBLIC,
14 |       5,
   |
   = help: Organize imports

src/seigr_protocol/compiled/encryption_pb2.py:25:1: E402 Module level import not at top of file
   |
25 | import hashing_pb2 as hashing__pb2
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E402
   |

src/seigr_protocol/compiled/encryption_pb2.py:25:1: I001 [*] Import block is un-sorted or un-formatted
   |
25 | / import hashing_pb2 as hashing__pb2
26 | | 
27 | | 
28 | | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x10\x65ncryption.proto\x12\x05seigr\x1a\rhashing.proto\"\xf2\x02\n\x0cSymmetricKey\x12\x0e\n\x06key_id\x18\x01 \x01(\t\x12\x0b\n\x03key\x18\x02 \x01(\x0c\x12\x0c\n\x04salt\x18\x03 \x01(\x0c\x12\x11\n\talgorithm\x18\x04 \x01(\t\x12\x1a\n\x12\x63reation_timestamp\x18\x05 \x01(\t\x12\x1c\n\x14\x65xpiration_timestamp\x18\x06 \x01(\t\x12 \n\x06status\x18\x07 \x01(\x0e\x32\x10.seigr.KeyStatus\x12\x1a\n\x12rotation_frequency\x18\x08 \x01(\t\x12\x12\n\nkey_source\x18\t \x01(\t\x12\x11\n\tcustodian\x18\n \x01(\t\x12\x33\n\x08metadata\x18\x0b \x03(\x0b\x32!.seigr.SymmetricKey.MetadataEntry\x12\x1f\n\x17\x63ompliance_requirements\x18\x0c \x01(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xdd\x02\n\x11\x41symmetricKeyPair\x12\x13\n\x0bkey_pair_id\x18\x01 \x01(\t\x12\x12\n\npublic_key\x18\x02 \x01(\x0c\x12\x13\n\x0bprivate_key\x18\x03 \x01(\x0c\x12\x11\n\talgorithm\x18\x04 \x01(\t\x12\x1a\n\x12\x63reation_timestamp\x18\x05 \x01(\t\x12\x1c\n\x14\x65xpiration_timestamp\x18\x06 \x01(\t\x12\x18\n\x10lifecycle_status\x18\x07 \x01(\t\x12\x17\n\x0frotation_policy\x18\x08 \x01(\t\x12\x38\n\x08metadata\x18\t \x03(\x0b\x32&.seigr.AsymmetricKeyPair.MetadataEntry\x12\x1f\n\x17\x63ompliance_requirements\x18\n \x01(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xae\x02\n\x13HybridEncryptionKey\x12\x0e\n\x06key_id\x18\x01 \x01(\t\x12*\n\rsymmetric_key\x18\x02 \x01(\x0b\x32\x13.seigr.SymmetricKey\x12\x31\n\x0f\x61symmetric_keys\x18\x03 \x01(\x0b\x32\x18.seigr.AsymmetricKeyPair\x12\x1a\n\x12\x63reation_timestamp\x18\x04 \x01(\t\x12:\n\x08metadata\x18\x05 \x03(\x0b\x32(.seigr.HybridEncryptionKey.MetadataEntry\x12\x1f\n\x17\x63ompliance_requirements\x18\x06 \x01(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x92\x02\n\rEncryptedData\x12\x12\n\nciphertext\x18\x01 \x01(\x0c\x12\n\n\x02iv\x18\x02 \x01(\x0c\x12.\n\x0f\x65ncryption_type\x18\x03 \x01(\x0e\x32\x15.seigr.EncryptionType\x12\x0e\n\x06key_id\x18\x04 \x01(\t\x12\x34\n\x08metadata\x18\x05 \x03(\x0b\x32\".seigr.EncryptedData.MetadataEntry\x12\x1c\n\x14\x65ncryption_timestamp\x18\x06 \x01(\t\x12\x1c\n\x14\x65ncryption_policy_id\x18\x07 \x01(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xa3\x02\n\x0cSignatureLog\x12\x0e\n\x06log_id\x18\x01 \x01(\t\x12\x11\n\tsigner_id\x18\x02 \x01(\t\x12\x11\n\tsignature\x18\x03 \x01(\x0c\x12\x19\n\x11signing_algorithm\x18\x04 \x01(\t\x12\x18\n\x10signed_data_hash\x18\x05 \x01(\t\x12\x11\n\ttimestamp\x18\x06 \x01(\t\x12\x16\n\x0ekey_provenance\x18\x07 \x01(\t\x12\x33\n\x08metadata\x18\x08 \x03(\x0b\x32!.seigr.SignatureLog.MetadataEntry\x12\x17\n\x0f\x63ompliance_note\x18\t \x01(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xa6\x03\n\x18IntegrityVerificationLog\x12\x17\n\x0fverification_id\x18\x01 \x01(\t\x12\x12\n\nsegment_id\x18\x02 \x01(\t\x12,\n\x0ehash_algorithm\x18\x03 \x01(\x0e\x32\x14.seigr.HashAlgorithm\x12\x32\n\x0fverified_status\x18\x04 \x01(\x0e\x32\x19.seigr.VerificationStatus\x12\x1e\n\x16verification_timestamp\x18\x05 \x01(\t\x12\x1a\n\x12verification_depth\x18\x06 \x01(\t\x12\x15\n\rerror_message\x18\x07 \x01(\t\x12\x1e\n\x16parent_verification_id\x18\x08 \x01(\t\x12\x16\n\x0eretry_attempts\x18\t \x01(\x05\x12?\n\x08metadata\x18\n \x03(\x0b\x32-.seigr.IntegrityVerificationLog.MetadataEntry\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xb8\x03\n\x16\x43ryptographicOperation\x12\x14\n\x0coperation_id\x18\x01 \x01(\t\x12.\n\x0f\x65ncryption_type\x18\x02 \x01(\x0e\x32\x15.seigr.EncryptionType\x12\x39\n\x0eoperation_type\x18\x03 \x01(\x0e\x32!.seigr.CryptographicOperationType\x12\x12\n\ninput_data\x18\x04 \x01(\x0c\x12\x13\n\x0bresult_data\x18\x05 \x01(\x0c\x12\x0e\n\x06key_id\x18\x06 \x01(\t\x12\x1b\n\x13operation_timestamp\x18\x07 \x01(\t\x12\x1f\n\x17operation_result_status\x18\x08 \x01(\t\x12\x12\n\nerror_code\x18\t \x01(\t\x12\"\n\x1aoperation_duration_seconds\x18\n \x01(\x01\x12=\n\x08metadata\x18\x0b \x03(\x0b\x32+.seigr.CryptographicOperation.MetadataEntry\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xb1\x01\n\x11\x45ncryptedHashData\x12\"\n\thash_info\x18\x01 \x01(\x0b\x32\x0f.seigr.HashData\x12\x16\n\x0e\x65ncrypted_data\x18\x02 \x01(\x0c\x12,\n\x0ehash_algorithm\x18\x03 \x01(\x0e\x32\x14.seigr.HashAlgorithm\x12\x32\n\x0fverified_status\x18\x04 \x01(\x0e\x32\x19.seigr.VerificationStatus*m\n\tKeyStatus\x12\x18\n\x14KEY_STATUS_UNDEFINED\x10\x00\x12\x15\n\x11KEY_STATUS_ACTIVE\x10\x01\x12\x17\n\x13KEY_STATUS_INACTIVE\x10\x02\x12\x16\n\x12KEY_STATUS_REVOKED\x10\x03*\x8a\x01\n\x0e\x45ncryptionType\x12\x1d\n\x19\x45NCRYPTION_TYPE_UNDEFINED\x10\x00\x12\x1d\n\x19\x45NCRYPTION_TYPE_SYMMETRIC\x10\x01\x12\x1e\n\x1a\x45NCRYPTION_TYPE_ASYMMETRIC\x10\x02\x12\x1a\n\x16\x45NCRYPTION_TYPE_HYBRID\x10\x03*\xd6\x01\n\x1a\x43ryptographicOperationType\x12\x1c\n\x18OPERATION_TYPE_UNDEFINED\x10\x00\x12\x1d\n\x19OPERATION_TYPE_ENCRYPTION\x10\x01\x12\x1d\n\x19OPERATION_TYPE_DECRYPTION\x10\x02\x12\x1a\n\x16OPERATION_TYPE_SIGNING\x10\x03\x12\x1f\n\x1bOPERATION_TYPE_VERIFICATION\x10\x04\x12\x1f\n\x1bOPERATION_TYPE_KEY_ROTATION\x10\x05\x62\x06proto3')
   | |_^ I001
29 |   
30 |   _globals = globals()
   |
   = help: Organize imports

src/seigr_protocol/compiled/encryption_pb2.py:25:23: F401 [*] `hashing_pb2` imported but unused
   |
25 | import hashing_pb2 as hashing__pb2
   |                       ^^^^^^^^^^^^ F401
   |
   = help: Remove unused import: `hashing_pb2`

src/seigr_protocol/compiled/encryption_pb2.py:28:101: E501 Line too long (5463 > 100)
   |
28 | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x10\x65ncryption.proto\x12\x05seigr\x1a\rhashing.proto\"\xf2\x02\n\x0cSymmetricKey\x12\x0e\n\x06key_id\x18\x01 \x01(\t\x12\x0b\n\x03key\x18\x02 \x01(\x0c\x12\x0c\n\x04salt\x18\x03 \x01(\x0c\x12\x11\n\talgorithm\x18\x04 \x01(\t\x12\x1a\n\x12\x63reation_timestamp\x18\x05 \x01(\t\x12\x1c\n\x14\x65xpiration_timestamp\x18\x06 \x01(\t\x12 \n\x06status\x18\x07 \x01(\x0e\x32\x10.seigr.KeyStatus\x12\x1a\n\x12rotation_frequency\x18\x08 \x01(\t\x12\x12\n\nkey_source\x18\t \x01(\t\x12\x11\n\tcustodian\x18\n \x01(\t\x12\x33\n\x08metadata\x18\x0b \x03(\x0b\x32!.seigr.SymmetricKey.MetadataEntry\x12\x1f\n\x17\x63ompliance_requirements\x18\x0c \x01(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xdd\x02\n\x11\x41symmetricKeyPair\x12\x13\n\x0bkey_pair_id\x18\x01 \x01(\t\x12\x12\n\npublic_key\x18\x02 \x01(\x0c\x12\x13\n\x0bprivate_key\x18\x03 \x01(\x0c\x12\x11\n\talgorithm\x18\x04 \x01(\t\x12\x1a\n\x12\x63reation_timestamp\x18\x05 \x01(\t\x12\x1c\n\x14\x65xpiration_timestamp\x18\x06 \x01(\t\x12\x18\n\x10lifecycle_status\x18\x07 \x01(\t\x12\x17\n\x0frotation_policy\x18\x08 \x01(\t\x12\x38\n\x08metadata\x18\t \x03(\x0b\x32&.seigr.AsymmetricKeyPair.MetadataEntry\x12\x1f\n\x17\x63ompliance_requirements\x18\n \x01(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xae\x02\n\x13HybridEncryptionKey\x12\x0e\n\x06key_id\x18\x01 \x01(\t\x12*\n\rsymmetric_key\x18\x02 \x01(\x0b\x32\x13.seigr.SymmetricKey\x12\x31\n\x0f\x61symmetric_keys\x18\x03 \x01(\x0b\x32\x18.seigr.AsymmetricKeyPair\x12\x1a\n\x12\x63reation_timestamp\x18\x04 \x01(\t\x12:\n\x08metadata\x18\x05 \x03(\x0b\x32(.seigr.HybridEncryptionKey.MetadataEntry\x12\x1f\n\x17\x63ompliance_requirements\x18\x06 \x01(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x92\x02\n\rEncryptedData\x12\x12\n\nciphertext\x18\x01 \x01(\x0c\x12\n\n\x02iv\x18\x02 \x01(\x0c\x12.\n\x0f\x65ncryption_type\x18\x03 \x01(\x0e\x32\x15.seigr.EncryptionType\x12\x0e\n\x06key_id\x18\x04 \x01(\t\x12\x34\n\x08metadata\x18\x05 \x03(\x0b\x32\".seigr.EncryptedData.MetadataEntry\x12\x1c\n\x14\x65ncryption_timestamp\x18\x06 \x01(\t\x12\x1c\n\x14\x65ncryption_policy_id\x18\x07 \x01(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xa3\x02\n\x0cSignatureLog\x12\x0e\n\x06log_id\x18\x01 \x01(\t\x12\x11\n\tsigner_id\x18\x02 \x01(\t\x12\x11\n\tsignature\x18\x03 \x01(\x0c\x12\x19\n\x11signing_algorithm\x18\x04 \x01(\t\x12\x18\n\x10signed_data_hash\x18\x05 \x01(\t\x12\x11\n\ttimestamp\x18\x06 \x01(\t\x12\x16\n\x0ekey_provenance\x18\x07 \x01(\t\x12\x33\n\x08metadata\x18\x08 \x03(\x0b\x32!.seigr.SignatureLog.MetadataEntry\x12\x17\n\x0f\x63ompliance_note\x18\t \x01(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xa6\x03\n\x18IntegrityVerificationLog\x12\x17\n\x0fverification_id\x18\x01 \x01(\t\x12\x12\n\nsegment_id\x18\x02 \x01(\t\x12,\n\x0ehash_algorithm\x18\x03 \x01(\x0e\x32\x14.seigr.HashAlgorithm\x12\x32\n\x0fverified_status\x18\x04 \x01(\x0e\x32\x19.seigr.VerificationStatus\x12\x1e\n\x16verification_timestamp\x18\x05 \x01(\t\x12\x1a\n\x12verification_depth\x18\x06 \x01(\t\x12\x15\n\rerror_message\x18\x07 \x01(\t\x12\x1e\n\x16parent_verification_id\x18\x08 \x01(\t\x12\x16\n\x0eretry_attempts\x18\t \x01(\x05\x12?\n\x08metadata\x18\n \x03(\x0b\x32-.seigr.IntegrityVerificationLog.MetadataEntry\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xb8\x03\n\x16\x43ryptographicOperation\x12\x14\n\x0coperation_id\x18\x01 \x01(\t\x12.\n\x0f\x65ncryption_type\x18\x02 \x01(\x0e\x32\x15.seigr.EncryptionType\x12\x39\n\x0eoperation_type\x18\x03 \x01(\x0e\x32!.seigr.CryptographicOperationType\x12\x12\n\ninput_data\x18\x04 \x01(\x0c\x12\x13\n\x0bresult_data\x18\x05 \x01(\x0c\x12\x0e\n\x06key_id\x18\x06 \x01(\t\x12\x1b\n\x13operation_timestamp\x18\x07 \x01(\t\x12\x1f\n\x17operation_result_status\x18\x08 \x01(\t\x12\x12\n\nerror_code\x18\t \x01(\t\x12\"\n\x1aoperation_duration_seconds\x18\n \x01(\x01\x12=\n\x08metadata\x18\x0b \x03(\x0b\x32+.seigr.CryptographicOperation.MetadataEntry\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xb1\x01\n\x11\x45ncryptedHashData\x12\"\n\thash_info\x18\x01 \x01(\x0b\x32\x0f.seigr.HashData\x12\x16\n\x0e\x65ncrypted_data\x18\x02 \x01(\x0c\x12,\n\x0ehash_algorithm\x18\x03 \x01(\x0e\x32\x14.seigr.HashAlgorithm\x12\x32\n\x0fverified_status\x18\x04 \x01(\x0e\x32\x19.seigr.VerificationStatus*m\n\tKeyStatus\x12\x18\n\x14KEY_STATUS_UNDEFINED\x10\x00\x12\x15\n\x11KEY_STATUS_ACTIVE\x10\x01\x12\x17\n\x13KEY_STATUS_INACTIVE\x10\x02\x12\x16\n\x12KEY_STATUS_REVOKED\x10\x03*\x8a\x01\n\x0e\x45ncryptionType\x12\x1d\n\x19\x45NCRYPTION_TYPE_UNDEFINED\x10\x00\x12\x1d\n\x19\x45NCRYPTION_TYPE_SYMMETRIC\x10\x01\x12\x1e\n\x1a\x45NCRYPTION_TYPE_ASYMMETRIC\x10\x02\x12\x1a\n\x16\x45NCRYPTION_TYPE_HYBRID\x10\x03*\xd6\x01\n\x1a\x43ryptographicOperationType\x12\x1c\n\x18OPERATION_TYPE_UNDEFINED\x10\x00\x12\x1d\n\x19OPERATION_TYPE_ENCRYPTION\x10\x01\x12\x1d\n\x19OPERATION_TYPE_DECRYPTION\x10\x02\x12\x1a\n\x16OPERATION_TYPE_SIGNING\x10\x03\x12\x1f\n\x1bOPERATION_TYPE_VERIFICATION\x10\x04\x12\x1f\n\x1bOPERATION_TYPE_KEY_ROTATION\x10\x05\x62\x06proto3')
   |                                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E501
29 | 
30 | _globals = globals()
   |

src/seigr_protocol/compiled/error_handling_pb2.py:7:1: I001 [*] Import block is un-sorted or un-formatted
   |
 5 |   # Protobuf Python Version: 5.29.2
 6 |   """Generated protocol buffer code."""
 7 | / from google.protobuf import descriptor as _descriptor
 8 | | from google.protobuf import descriptor_pool as _descriptor_pool
 9 | | from google.protobuf import runtime_version as _runtime_version
10 | | from google.protobuf import symbol_database as _symbol_database
11 | | from google.protobuf.internal import builder as _builder
12 | | _runtime_version.ValidateProtobufRuntimeVersion(
   | |_^ I001
13 |       _runtime_version.Domain.PUBLIC,
14 |       5,
   |
   = help: Organize imports

src/seigr_protocol/compiled/error_handling_pb2.py:27:101: E501 Line too long (4782 > 100)
   |
27 | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x14\x65rror_handling.proto\x12\x05seigr\"\xd5\x03\n\rErrorLogEntry\x12\x10\n\x08\x65rror_id\x18\x01 \x01(\t\x12&\n\x08severity\x18\x02 \x01(\x0e\x32\x14.seigr.ErrorSeverity\x12\x11\n\tcomponent\x18\x03 \x01(\t\x12\x0f\n\x07message\x18\x04 \x01(\t\x12\x0f\n\x07\x64\x65tails\x18\x05 \x01(\t\x12\x11\n\ttimestamp\x18\x06 \x01(\t\x12\x10\n\x08resolved\x18\x07 \x01(\x08\x12\x1c\n\x14resolution_timestamp\x18\x08 \x01(\t\x12\x32\n\x07\x63ontext\x18\t \x03(\x0b\x32!.seigr.ErrorLogEntry.ContextEntry\x12;\n\x13resolution_strategy\x18\n \x01(\x0e\x32\x1e.seigr.ErrorResolutionStrategy\x12\x16\n\x0e\x64\x65pendency_ids\x18\x0b \x03(\t\x12\x19\n\x11user_impact_level\x18\x0c \x01(\t\x12\x12\n\nerror_code\x18\r \x01(\t\x12\x14\n\x0csource_trace\x18\x0e \x01(\t\x12\x14\n\x0cimpact_scope\x18\x0f \x01(\t\x1a.\n\x0c\x43ontextEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xae\x04\n\nErrorStats\x12\x14\n\x0ctotal_errors\x18\x01 \x01(\x05\x12\x19\n\x11unresolved_errors\x18\x02 \x01(\x05\x12>\n\x0fseverity_counts\x18\x03 \x03(\x0b\x32%.seigr.ErrorStats.SeverityCountsEntry\x12\x19\n\x11most_recent_error\x18\x04 \x01(\t\x12K\n\x16\x63omponent_error_counts\x18\x05 \x03(\x0b\x32+.seigr.ErrorStats.ComponentErrorCountsEntry\x12\x42\n\x11resolution_counts\x18\x06 \x03(\x0b\x32\'.seigr.ErrorStats.ResolutionCountsEntry\x12\x13\n\x0b\x65rror_trend\x18\x07 \x01(\t\x12#\n\x1b\x61vg_resolution_time_seconds\x18\x08 \x01(\x01\x12\x1c\n\x14\x64isaster_error_count\x18\t \x01(\x05\x1a\x35\n\x13SeverityCountsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x05:\x02\x38\x01\x1a;\n\x19\x43omponentErrorCountsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x05:\x02\x38\x01\x1a\x37\n\x15ResolutionCountsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x05:\x02\x38\x01\"\xd8\x02\n\x12\x45rrorTrendAnalysis\x12\x19\n\x11trend_analysis_id\x18\x01 \x01(\t\x12\x11\n\tcomponent\x18\x02 \x01(\t\x12\x1d\n\x15recurring_error_count\x18\x03 \x01(\x05\x12\x19\n\x11trend_description\x18\x04 \x01(\t\x12\x13\n\x0btime_period\x18\x05 \x01(\t\x12N\n\x13\x61\x64\x64itional_metadata\x18\x06 \x03(\x0b\x32\x31.seigr.ErrorTrendAnalysis.AdditionalMetadataEntry\x12\x1a\n\x12recurrence_pattern\x18\x07 \x01(\t\x12\x1e\n\x16\x61uto_adjusted_severity\x18\x08 \x01(\x08\x1a\x39\n\x17\x41\x64\x64itionalMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xe9\x03\n\x0eRecoveryConfig\x12\x11\n\tcomponent\x18\x01 \x01(\t\x12\x33\n\x15max_severity_to_retry\x18\x02 \x01(\x0e\x32\x14.seigr.ErrorSeverity\x12\x1a\n\x12max_retry_attempts\x18\x03 \x01(\x05\x12\x1e\n\x16retry_interval_seconds\x18\x04 \x01(\x05\x12\x19\n\x11notify_on_failure\x18\x05 \x01(\x08\x12\x38\n\x10\x64\x65\x66\x61ult_strategy\x18\x06 \x01(\x0e\x32\x1e.seigr.ErrorResolutionStrategy\x12J\n\x13severity_strategies\x18\x07 \x03(\x0b\x32-.seigr.RecoveryConfig.SeverityStrategiesEntry\x12\x1a\n\x12\x65scalation_contact\x18\x08 \x01(\t\x12\x19\n\x11recovery_playbook\x18\t \x01(\t\x12 \n\x18\x65nable_adaptive_strategy\x18\n \x01(\x08\x1aY\n\x17SeverityStrategiesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12-\n\x05value\x18\x02 \x01(\x0e\x32\x1e.seigr.ErrorResolutionStrategy:\x02\x38\x01\"\xe2\x02\n\x11\x45rrorNotification\x12\x10\n\x08\x65rror_id\x18\x01 \x01(\t\x12&\n\x08severity\x18\x02 \x01(\x0e\x32\x14.seigr.ErrorSeverity\x12\x1a\n\x12\x61\x66\x66\x65\x63ted_component\x18\x03 \x01(\t\x12\x15\n\ralert_message\x18\x04 \x01(\t\x12\x14\n\x0c\x63ontact_info\x18\x05 \x01(\t\x12\x14\n\x0ctriggered_at\x18\x06 \x01(\t\x12\x43\n\x0e\x61lert_metadata\x18\x07 \x03(\x0b\x32+.seigr.ErrorNotification.AlertMetadataEntry\x12\x1b\n\x13\x65scalation_pathways\x18\x08 \x03(\t\x12\x1c\n\x14recent_error_history\x18\t \x03(\t\x1a\x34\n\x12\x41lertMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01*\xb3\x01\n\rErrorSeverity\x12\x1c\n\x18\x45RROR_SEVERITY_UNDEFINED\x10\x00\x12\x16\n\x12\x45RROR_SEVERITY_LOW\x10\x01\x12\x19\n\x15\x45RROR_SEVERITY_MEDIUM\x10\x02\x12\x17\n\x13\x45RROR_SEVERITY_HIGH\x10\x03\x12\x1b\n\x17\x45RROR_SEVERITY_CRITICAL\x10\x04\x12\x1b\n\x17\x45RROR_SEVERITY_DISASTER\x10\x05*\xd9\x02\n\x17\x45rrorResolutionStrategy\x12\x1c\n\x18\x45RROR_STRATEGY_UNDEFINED\x10\x00\x12\x18\n\x14\x45RROR_STRATEGY_RETRY\x10\x01\x12#\n\x1f\x45RROR_STRATEGY_LOG_AND_CONTINUE\x10\x02\x12\x1c\n\x18\x45RROR_STRATEGY_TERMINATE\x10\x03\x12\"\n\x1e\x45RROR_STRATEGY_ALERT_AND_PAUSE\x10\x04\x12%\n!ERROR_STRATEGY_FALLBACK_OPERATION\x10\x05\x12\'\n#ERROR_STRATEGY_ESCALATE_IMMEDIATELY\x10\x06\x12,\n(ERROR_STRATEGY_ROLLING_BACK_DEPENDENCIES\x10\x07\x12!\n\x1d\x45RROR_STRATEGY_ADAPTIVE_RETRY\x10\x08\x62\x06proto3')
   |
28 | 
29 | _globals = globals()
   |

src/seigr_protocol/compiled/event_pb2.py:7:1: I001 [*] Import block is un-sorted or un-formatted
   |
 5 |   # Protobuf Python Version: 5.29.2
 6 |   """Generated protocol buffer code."""
 7 | / from google.protobuf import descriptor as _descriptor
 8 | | from google.protobuf import descriptor_pool as _descriptor_pool
 9 | | from google.protobuf import runtime_version as _runtime_version
10 | | from google.protobuf import symbol_database as _symbol_database
11 | | from google.protobuf.internal import builder as _builder
12 | | _runtime_version.ValidateProtobufRuntimeVersion(
   | |_^ I001
13 |       _runtime_version.Domain.PUBLIC,
14 |       5,
   |
   = help: Organize imports

src/seigr_protocol/compiled/event_pb2.py:25:1: E402 Module level import not at top of file
   |
25 | import common_pb2 as common__pb2
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E402
   |

src/seigr_protocol/compiled/event_pb2.py:25:1: I001 [*] Import block is un-sorted or un-formatted
   |
25 | / import common_pb2 as common__pb2
26 | | 
27 | | 
28 | | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0b\x65vent.proto\x12\x05seigr\x1a\x0c\x63ommon.proto\"\x81\x03\n\x05\x45vent\x12\x10\n\x08\x65vent_id\x18\x01 \x01(\t\x12\x1e\n\x04type\x18\x02 \x01(\x0e\x32\x10.seigr.EventType\x12&\n\x08priority\x18\x03 \x01(\x0e\x32\x14.seigr.PriorityLevel\x12\x30\n\x10\x65scalation_level\x18\x04 \x01(\x0e\x32\x16.seigr.EscalationLevel\x12\x0e\n\x06origin\x18\x05 \x01(\t\x12\x11\n\ttimestamp\x18\x06 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x07 \x01(\t\x12,\n\x08metadata\x18\x08 \x03(\x0b\x32\x1a.seigr.Event.MetadataEntry\x12\x1a\n\x12target_subscribers\x18\t \x03(\t\x12\x1f\n\x17requires_acknowledgment\x18\n \x01(\x08\x12\x18\n\x10\x61llow_forwarding\x18\x0b \x01(\x08\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xd4\x03\n\x11\x45ventSubscription\x12\x17\n\x0fsubscription_id\x18\x01 \x01(\t\x12\x15\n\rsubscriber_id\x18\x02 \x01(\t\x12%\n\x0b\x65vent_types\x18\x03 \x03(\x0e\x32\x10.seigr.EventType\x12\x36\n\x07\x66ilters\x18\x04 \x03(\x0b\x32%.seigr.EventSubscription.FiltersEntry\x12\x14\n\x0c\x63\x61llback_url\x18\x05 \x01(\t\x12Q\n\x15subscription_metadata\x18\x06 \x03(\x0b\x32\x32.seigr.EventSubscription.SubscriptionMetadataEntry\x12\x14\n\x0clast_updated\x18\x07 \x01(\t\x12\x34\n\x14min_escalation_level\x18\x08 \x01(\x0e\x32\x16.seigr.EscalationLevel\x12\x0e\n\x06\x61\x63tive\x18\t \x01(\x08\x1a.\n\x0c\x46iltersEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a;\n\x19SubscriptionMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xfa\x02\n\rEventResponse\x12\x13\n\x0bresponse_id\x18\x01 \x01(\t\x12\x10\n\x08\x65vent_id\x18\x02 \x01(\t\x12\x14\n\x0cresponder_id\x18\x03 \x01(\t\x12\x14\n\x0c\x61\x63tion_taken\x18\x04 \x01(\t\x12\x1a\n\x12response_timestamp\x18\x05 \x01(\t\x12\x45\n\x11response_metadata\x18\x06 \x03(\x0b\x32*.seigr.EventResponse.ResponseMetadataEntry\x12\x1a\n\x12requires_follow_up\x18\x07 \x01(\x08\x12\x1b\n\x13\x66ollow_up_action_id\x18\x08 \x01(\t\x12/\n\x0f\x65scalation_path\x18\t \x01(\x0e\x32\x16.seigr.EscalationLevel\x12\x10\n\x08resolved\x18\n \x01(\x08\x1a\x37\n\x15ResponseMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xa0\x02\n\x10\x45scalationConfig\x12%\n\x05level\x18\x01 \x01(\x0e\x32\x16.seigr.EscalationLevel\x12\x1a\n\x12\x65scalation_path_id\x18\x02 \x01(\t\x12;\n\nconditions\x18\x03 \x03(\x0b\x32\'.seigr.EscalationConfig.ConditionsEntry\x12\x18\n\x10\x61lert_recipients\x18\x04 \x03(\t\x12\x1b\n\x13\x65scalation_strategy\x18\x05 \x01(\t\x12\"\n\x1a\x65nable_automatic_responses\x18\x06 \x01(\x08\x1a\x31\n\x0f\x43onditionsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xa1\x02\n\x08\x45ventLog\x12\x0e\n\x06log_id\x18\x01 \x01(\t\x12\x10\n\x08\x65vent_id\x18\x02 \x01(\t\x12\x11\n\tlogged_at\x18\x03 \x01(\t\x12\x11\n\tlogger_id\x18\x04 \x01(\t\x12\x13\n\x0blog_message\x18\x05 \x01(\t\x12\x36\n\x0clog_metadata\x18\x06 \x03(\x0b\x32 .seigr.EventLog.LogMetadataEntry\x12\x37\n\x17logged_escalation_level\x18\x07 \x01(\x0e\x32\x16.seigr.EscalationLevel\x12\x13\n\x0bis_resolved\x18\x08 \x01(\x08\x1a\x32\n\x10LogMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"L\n\x0fSubscriptionAck\x12\x17\n\x0fsubscription_id\x18\x01 \x01(\t\x12\x0f\n\x07success\x18\x02 \x01(\x08\x12\x0f\n\x07message\x18\x03 \x01(\t\"_\n\x12\x41\x63knowledgeRequest\x12\x10\n\x08\x65vent_id\x18\x01 \x01(\t\x12\x15\n\rsubscriber_id\x18\x02 \x01(\t\x12 \n\x18\x61\x63knowledgment_timestamp\x18\x03 \x01(\t\"7\n\x13\x41\x63knowledgeResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x0f\n\x07message\x18\x02 \x01(\t\"f\n\x0f\x45ventLogRequest\x12\x10\n\x08\x65vent_id\x18\x01 \x01(\t\x12\x18\n\x10time_range_start\x18\x02 \x01(\t\x12\x16\n\x0etime_range_end\x18\x03 \x01(\t\x12\x0f\n\x07\x66ilters\x18\x04 \x03(\t\"R\n\x10\x45ventLogResponse\x12\x1d\n\x04logs\x18\x01 \x03(\x0b\x32\x0f.seigr.EventLog\x12\x0e\n\x06status\x18\x02 \x01(\t\x12\x0f\n\x07message\x18\x03 \x01(\t*\x85\x02\n\tEventType\x12\x18\n\x14\x45VENT_TYPE_UNDEFINED\x10\x00\x12\x14\n\x10\x45VENT_TYPE_ERROR\x10\x01\x12\x14\n\x10\x45VENT_TYPE_ALERT\x10\x02\x12\x1a\n\x16\x45VENT_TYPE_USER_ACTION\x10\x03\x12)\n%EVENT_TYPE_RESOURCE_THRESHOLD_REACHED\x10\x04\x12\x1c\n\x18\x45VENT_TYPE_SYSTEM_UPDATE\x10\x05\x12\x19\n\x15\x45VENT_TYPE_MONITORING\x10\x06\x12\x1b\n\x17\x45VENT_TYPE_SELF_HEALING\x10\x07\x12\x15\n\x11\x45VENT_TYPE_CUSTOM\x10\x08*\x9d\x01\n\x0f\x45scalationLevel\x12\x19\n\x15\x45SCALATION_LEVEL_NONE\x10\x00\x12\x18\n\x14\x45SCALATION_LEVEL_LOW\x10\x01\x12\x1b\n\x17\x45SCALATION_LEVEL_MEDIUM\x10\x02\x12\x19\n\x15\x45SCALATION_LEVEL_HIGH\x10\x03\x12\x1d\n\x19\x45SCALATION_LEVEL_CRITICAL\x10\x04\x32\x99\x02\n\x0c\x45ventService\x12\x32\n\x0cPublishEvent\x12\x0c.seigr.Event\x1a\x14.seigr.EventResponse\x12\x45\n\x11SubscribeToEvents\x12\x18.seigr.EventSubscription\x1a\x16.seigr.SubscriptionAck\x12I\n\x10\x41\x63knowledgeEvent\x12\x19.seigr.AcknowledgeRequest\x1a\x1a.seigr.AcknowledgeResponse\x12\x43\n\x10RetrieveEventLog\x12\x16.seigr.EventLogRequest\x1a\x17.seigr.EventLogResponseb\x06proto3')
   | |_^ I001
29 |   
30 |   _globals = globals()
   |
   = help: Organize imports

src/seigr_protocol/compiled/event_pb2.py:25:22: F401 [*] `common_pb2` imported but unused
   |
25 | import common_pb2 as common__pb2
   |                      ^^^^^^^^^^^ F401
   |
   = help: Remove unused import: `common_pb2`

src/seigr_protocol/compiled/event_pb2.py:28:101: E501 Line too long (5247 > 100)
   |
28 | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0b\x65vent.proto\x12\x05seigr\x1a\x0c\x63ommon.proto\"\x81\x03\n\x05\x45vent\x12\x10\n\x08\x65vent_id\x18\x01 \x01(\t\x12\x1e\n\x04type\x18\x02 \x01(\x0e\x32\x10.seigr.EventType\x12&\n\x08priority\x18\x03 \x01(\x0e\x32\x14.seigr.PriorityLevel\x12\x30\n\x10\x65scalation_level\x18\x04 \x01(\x0e\x32\x16.seigr.EscalationLevel\x12\x0e\n\x06origin\x18\x05 \x01(\t\x12\x11\n\ttimestamp\x18\x06 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x07 \x01(\t\x12,\n\x08metadata\x18\x08 \x03(\x0b\x32\x1a.seigr.Event.MetadataEntry\x12\x1a\n\x12target_subscribers\x18\t \x03(\t\x12\x1f\n\x17requires_acknowledgment\x18\n \x01(\x08\x12\x18\n\x10\x61llow_forwarding\x18\x0b \x01(\x08\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xd4\x03\n\x11\x45ventSubscription\x12\x17\n\x0fsubscription_id\x18\x01 \x01(\t\x12\x15\n\rsubscriber_id\x18\x02 \x01(\t\x12%\n\x0b\x65vent_types\x18\x03 \x03(\x0e\x32\x10.seigr.EventType\x12\x36\n\x07\x66ilters\x18\x04 \x03(\x0b\x32%.seigr.EventSubscription.FiltersEntry\x12\x14\n\x0c\x63\x61llback_url\x18\x05 \x01(\t\x12Q\n\x15subscription_metadata\x18\x06 \x03(\x0b\x32\x32.seigr.EventSubscription.SubscriptionMetadataEntry\x12\x14\n\x0clast_updated\x18\x07 \x01(\t\x12\x34\n\x14min_escalation_level\x18\x08 \x01(\x0e\x32\x16.seigr.EscalationLevel\x12\x0e\n\x06\x61\x63tive\x18\t \x01(\x08\x1a.\n\x0c\x46iltersEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a;\n\x19SubscriptionMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xfa\x02\n\rEventResponse\x12\x13\n\x0bresponse_id\x18\x01 \x01(\t\x12\x10\n\x08\x65vent_id\x18\x02 \x01(\t\x12\x14\n\x0cresponder_id\x18\x03 \x01(\t\x12\x14\n\x0c\x61\x63tion_taken\x18\x04 \x01(\t\x12\x1a\n\x12response_timestamp\x18\x05 \x01(\t\x12\x45\n\x11response_metadata\x18\x06 \x03(\x0b\x32*.seigr.EventResponse.ResponseMetadataEntry\x12\x1a\n\x12requires_follow_up\x18\x07 \x01(\x08\x12\x1b\n\x13\x66ollow_up_action_id\x18\x08 \x01(\t\x12/\n\x0f\x65scalation_path\x18\t \x01(\x0e\x32\x16.seigr.EscalationLevel\x12\x10\n\x08resolved\x18\n \x01(\x08\x1a\x37\n\x15ResponseMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xa0\x02\n\x10\x45scalationConfig\x12%\n\x05level\x18\x01 \x01(\x0e\x32\x16.seigr.EscalationLevel\x12\x1a\n\x12\x65scalation_path_id\x18\x02 \x01(\t\x12;\n\nconditions\x18\x03 \x03(\x0b\x32\'.seigr.EscalationConfig.ConditionsEntry\x12\x18\n\x10\x61lert_recipients\x18\x04 \x03(\t\x12\x1b\n\x13\x65scalation_strategy\x18\x05 \x01(\t\x12\"\n\x1a\x65nable_automatic_responses\x18\x06 \x01(\x08\x1a\x31\n\x0f\x43onditionsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xa1\x02\n\x08\x45ventLog\x12\x0e\n\x06log_id\x18\x01 \x01(\t\x12\x10\n\x08\x65vent_id\x18\x02 \x01(\t\x12\x11\n\tlogged_at\x18\x03 \x01(\t\x12\x11\n\tlogger_id\x18\x04 \x01(\t\x12\x13\n\x0blog_message\x18\x05 \x01(\t\x12\x36\n\x0clog_metadata\x18\x06 \x03(\x0b\x32 .seigr.EventLog.LogMetadataEntry\x12\x37\n\x17logged_escalation_level\x18\x07 \x01(\x0e\x32\x16.seigr.EscalationLevel\x12\x13\n\x0bis_resolved\x18\x08 \x01(\x08\x1a\x32\n\x10LogMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"L\n\x0fSubscriptionAck\x12\x17\n\x0fsubscription_id\x18\x01 \x01(\t\x12\x0f\n\x07success\x18\x02 \x01(\x08\x12\x0f\n\x07message\x18\x03 \x01(\t\"_\n\x12\x41\x63knowledgeRequest\x12\x10\n\x08\x65vent_id\x18\x01 \x01(\t\x12\x15\n\rsubscriber_id\x18\x02 \x01(\t\x12 \n\x18\x61\x63knowledgment_timestamp\x18\x03 \x01(\t\"7\n\x13\x41\x63knowledgeResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x0f\n\x07message\x18\x02 \x01(\t\"f\n\x0f\x45ventLogRequest\x12\x10\n\x08\x65vent_id\x18\x01 \x01(\t\x12\x18\n\x10time_range_start\x18\x02 \x01(\t\x12\x16\n\x0etime_range_end\x18\x03 \x01(\t\x12\x0f\n\x07\x66ilters\x18\x04 \x03(\t\"R\n\x10\x45ventLogResponse\x12\x1d\n\x04logs\x18\x01 \x03(\x0b\x32\x0f.seigr.EventLog\x12\x0e\n\x06status\x18\x02 \x01(\t\x12\x0f\n\x07message\x18\x03 \x01(\t*\x85\x02\n\tEventType\x12\x18\n\x14\x45VENT_TYPE_UNDEFINED\x10\x00\x12\x14\n\x10\x45VENT_TYPE_ERROR\x10\x01\x12\x14\n\x10\x45VENT_TYPE_ALERT\x10\x02\x12\x1a\n\x16\x45VENT_TYPE_USER_ACTION\x10\x03\x12)\n%EVENT_TYPE_RESOURCE_THRESHOLD_REACHED\x10\x04\x12\x1c\n\x18\x45VENT_TYPE_SYSTEM_UPDATE\x10\x05\x12\x19\n\x15\x45VENT_TYPE_MONITORING\x10\x06\x12\x1b\n\x17\x45VENT_TYPE_SELF_HEALING\x10\x07\x12\x15\n\x11\x45VENT_TYPE_CUSTOM\x10\x08*\x9d\x01\n\x0f\x45scalationLevel\x12\x19\n\x15\x45SCALATION_LEVEL_NONE\x10\x00\x12\x18\n\x14\x45SCALATION_LEVEL_LOW\x10\x01\x12\x1b\n\x17\x45SCALATION_LEVEL_MEDIUM\x10\x02\x12\x19\n\x15\x45SCALATION_LEVEL_HIGH\x10\x03\x12\x1d\n\x19\x45SCALATION_LEVEL_CRITICAL\x10\x04\x32\x99\x02\n\x0c\x45ventService\x12\x32\n\x0cPublishEvent\x12\x0c.seigr.Event\x1a\x14.seigr.EventResponse\x12\x45\n\x11SubscribeToEvents\x12\x18.seigr.EventSubscription\x1a\x16.seigr.SubscriptionAck\x12I\n\x10\x41\x63knowledgeEvent\x12\x19.seigr.AcknowledgeRequest\x1a\x1a.seigr.AcknowledgeResponse\x12\x43\n\x10RetrieveEventLog\x12\x16.seigr.EventLogRequest\x1a\x17.seigr.EventLogResponseb\x06proto3')
   |
29 | 
30 | _globals = globals()
   |

src/seigr_protocol/compiled/file_metadata_pb2.py:7:1: I001 [*] Import block is un-sorted or un-formatted
   |
 5 |   # Protobuf Python Version: 5.29.2
 6 |   """Generated protocol buffer code."""
 7 | / from google.protobuf import descriptor as _descriptor
 8 | | from google.protobuf import descriptor_pool as _descriptor_pool
 9 | | from google.protobuf import runtime_version as _runtime_version
10 | | from google.protobuf import symbol_database as _symbol_database
11 | | from google.protobuf.internal import builder as _builder
12 | | _runtime_version.ValidateProtobufRuntimeVersion(
   | |_^ I001
13 |       _runtime_version.Domain.PUBLIC,
14 |       5,
   |
   = help: Organize imports

src/seigr_protocol/compiled/file_metadata_pb2.py:25:1: E402 Module level import not at top of file
   |
25 | import segment_metadata_pb2 as segment__metadata__pb2
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E402
   |

src/seigr_protocol/compiled/file_metadata_pb2.py:25:1: I001 [*] Import block is un-sorted or un-formatted
   |
25 | / import segment_metadata_pb2 as segment__metadata__pb2
26 | | 
27 | | 
28 | | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x13\x66ile_metadata.proto\x12\x05seigr\x1a\x16segment_metadata.proto\"\xea\x01\n\x0cOperationLog\x12\x16\n\x0eoperation_type\x18\x01 \x01(\t\x12\x14\n\x0cperformed_by\x18\x02 \x01(\t\x12\x11\n\ttimestamp\x18\x03 \x01(\t\x12\x0e\n\x06status\x18\x04 \x01(\t\x12\x0f\n\x07\x64\x65tails\x18\x05 \x01(\t\x12\x33\n\x08metadata\x18\x06 \x03(\x0b\x32!.seigr.OperationLog.MetadataEntry\x12\x12\n\nerror_code\x18\x07 \x01(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xa6\x03\n\rTemporalLayer\x12\x11\n\ttimestamp\x18\x01 \x01(\t\x12(\n\x08segments\x18\x02 \x03(\x0b\x32\x16.seigr.SegmentMetadata\x12\x12\n\nlayer_hash\x18\x03 \x01(\t\x12=\n\rdata_snapshot\x18\x04 \x03(\x0b\x32&.seigr.TemporalLayer.DataSnapshotEntry\x12\x1b\n\x13previous_layer_hash\x18\x05 \x01(\t\x12\x18\n\x10rollback_allowed\x18\x06 \x01(\x08\x12\x34\n\x08metadata\x18\x07 \x03(\x0b\x32\".seigr.TemporalLayer.MetadataEntry\x12\x19\n\x11\x63hecksum_segments\x18\x08 \x03(\t\x12\x17\n\x0f\x62\x61\x63kup_location\x18\t \x01(\t\x1a\x33\n\x11\x44\x61taSnapshotEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x0c:\x02\x38\x01\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xd9\x01\n\nAccessRule\x12\x0f\n\x07rule_id\x18\x01 \x01(\t\x12\x0c\n\x04role\x18\x02 \x01(\t\x12\x13\n\x0bpermissions\x18\x03 \x03(\t\x12\x12\n\nexpiration\x18\x04 \x01(\t\x12\x12\n\nconditions\x18\x05 \x01(\t\x12:\n\rrule_metadata\x18\x06 \x03(\x0b\x32#.seigr.AccessRule.RuleMetadataEntry\x1a\x33\n\x11RuleMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x9a\x08\n\x0c\x46ileMetadata\x12\x0f\n\x07version\x18\x01 \x01(\t\x12\x12\n\ncreator_id\x18\x02 \x01(\t\x12\"\n\tfile_type\x18\x03 \x01(\x0e\x32\x0f.seigr.FileType\x12&\n\x0b\x66ile_status\x18\x04 \x01(\x0e\x32\x11.seigr.FileStatus\x12\x19\n\x11original_filename\x18\x05 \x01(\t\x12\x1a\n\x12original_extension\x18\x06 \x01(\t\x12\x1a\n\x12\x63reation_timestamp\x18\x07 \x01(\t\x12\x11\n\tfile_hash\x18\x08 \x01(\t\x12(\n\x08segments\x18\t \x03(\x0b\x32\x16.seigr.SegmentMetadata\x12-\n\x0ftemporal_layers\x18\n \x03(\x0b\x32\x14.seigr.TemporalLayer\x12+\n\x0eoperation_logs\x18\x0b \x03(\x0b\x32\x13.seigr.OperationLog\x12\x44\n\x11\x63ustom_attributes\x18\x0c \x03(\x0b\x32).seigr.FileMetadata.CustomAttributesEntry\x12\x18\n\x10\x61\x63\x63\x65ss_policy_id\x18\r \x01(\t\x12\x1b\n\x13\x65ncryption_protocol\x18\x0e \x01(\t\x12\x18\n\x10network_protocol\x18\x0f \x01(\t\x12#\n\x1bintegrity_verification_hash\x18\x10 \x01(\t\x12\x18\n\x10redundancy_level\x18\x11 \x01(\x05\x12\x18\n\x10\x61uthorized_users\x18\x12 \x03(\t\x12H\n\x13protocol_attributes\x18\x13 \x03(\x0b\x32+.seigr.FileMetadata.ProtocolAttributesEntry\x12\x1b\n\x13\x61\x63\x63\x65ss_control_list\x18\x14 \x03(\t\x12\'\n\x0c\x61\x63\x63\x65ss_rules\x18\x15 \x03(\x0b\x32\x11.seigr.AccessRule\x12\x1e\n\x16\x63ompliance_requirement\x18\x16 \x01(\t\x12\x18\n\x10retention_period\x18\x17 \x01(\t\x12\x1a\n\x12origin_data_source\x18\x18 \x01(\t\x12\x1f\n\x17last_modified_timestamp\x18\x19 \x01(\t\x12!\n\x19\x66ormat_conversion_history\x18\x1a \x03(\t\x12\x1f\n\x17primary_backup_location\x18\x1b \x01(\t\x1a\x37\n\x15\x43ustomAttributesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x39\n\x17ProtocolAttributesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01*\x8f\x01\n\x08\x46ileType\x12\x12\n\x0e\x46ILE_UNDEFINED\x10\x00\x12\n\n\x06\x42INARY\x10\x01\x12\n\n\x06SENARY\x10\x02\x12\x11\n\rCUSTOM_FORMAT\x10\x03\x12\x08\n\x04TEXT\x10\x04\x12\t\n\x05IMAGE\x10\x05\x12\t\n\x05VIDEO\x10\x06\x12\t\n\x05\x41UDIO\x10\x07\x12\x0b\n\x07\x41RCHIVE\x10\x08\x12\x0c\n\x08\x44\x41TABASE\x10\t*\x95\x01\n\nFileStatus\x12\x19\n\x15\x46ILE_STATUS_UNDEFINED\x10\x00\x12\x16\n\x12\x46ILE_STATUS_ACTIVE\x10\x01\x12\x18\n\x14\x46ILE_STATUS_ARCHIVED\x10\x02\x12\x1e\n\x1a\x46ILE_STATUS_PENDING_REVIEW\x10\x03\x12\x1a\n\x16\x46ILE_STATUS_RESTRICTED\x10\x04\x62\x06proto3')
   | |_^ I001
29 |   
30 |   _globals = globals()
   |
   = help: Organize imports

src/seigr_protocol/compiled/file_metadata_pb2.py:25:32: F401 [*] `segment_metadata_pb2` imported but unused
   |
25 | import segment_metadata_pb2 as segment__metadata__pb2
   |                                ^^^^^^^^^^^^^^^^^^^^^^ F401
   |
   = help: Remove unused import: `segment_metadata_pb2`

src/seigr_protocol/compiled/file_metadata_pb2.py:28:101: E501 Line too long (4128 > 100)
   |
28 | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x13\x66ile_metadata.proto\x12\x05seigr\x1a\x16segment_metadata.proto\"\xea\x01\n\x0cOperationLog\x12\x16\n\x0eoperation_type\x18\x01 \x01(\t\x12\x14\n\x0cperformed_by\x18\x02 \x01(\t\x12\x11\n\ttimestamp\x18\x03 \x01(\t\x12\x0e\n\x06status\x18\x04 \x01(\t\x12\x0f\n\x07\x64\x65tails\x18\x05 \x01(\t\x12\x33\n\x08metadata\x18\x06 \x03(\x0b\x32!.seigr.OperationLog.MetadataEntry\x12\x12\n\nerror_code\x18\x07 \x01(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xa6\x03\n\rTemporalLayer\x12\x11\n\ttimestamp\x18\x01 \x01(\t\x12(\n\x08segments\x18\x02 \x03(\x0b\x32\x16.seigr.SegmentMetadata\x12\x12\n\nlayer_hash\x18\x03 \x01(\t\x12=\n\rdata_snapshot\x18\x04 \x03(\x0b\x32&.seigr.TemporalLayer.DataSnapshotEntry\x12\x1b\n\x13previous_layer_hash\x18\x05 \x01(\t\x12\x18\n\x10rollback_allowed\x18\x06 \x01(\x08\x12\x34\n\x08metadata\x18\x07 \x03(\x0b\x32\".seigr.TemporalLayer.MetadataEntry\x12\x19\n\x11\x63hecksum_segments\x18\x08 \x03(\t\x12\x17\n\x0f\x62\x61\x63kup_location\x18\t \x01(\t\x1a\x33\n\x11\x44\x61taSnapshotEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x0c:\x02\x38\x01\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xd9\x01\n\nAccessRule\x12\x0f\n\x07rule_id\x18\x01 \x01(\t\x12\x0c\n\x04role\x18\x02 \x01(\t\x12\x13\n\x0bpermissions\x18\x03 \x03(\t\x12\x12\n\nexpiration\x18\x04 \x01(\t\x12\x12\n\nconditions\x18\x05 \x01(\t\x12:\n\rrule_metadata\x18\x06 \x03(\x0b\x32#.seigr.AccessRule.RuleMetadataEntry\x1a\x33\n\x11RuleMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x9a\x08\n\x0c\x46ileMetadata\x12\x0f\n\x07version\x18\x01 \x01(\t\x12\x12\n\ncreator_id\x18\x02 \x01(\t\x12\"\n\tfile_type\x18\x03 \x01(\x0e\x32\x0f.seigr.FileType\x12&\n\x0b\x66ile_status\x18\x04 \x01(\x0e\x32\x11.seigr.FileStatus\x12\x19\n\x11original_filename\x18\x05 \x01(\t\x12\x1a\n\x12original_extension\x18\x06 \x01(\t\x12\x1a\n\x12\x63reation_timestamp\x18\x07 \x01(\t\x12\x11\n\tfile_hash\x18\x08 \x01(\t\x12(\n\x08segments\x18\t \x03(\x0b\x32\x16.seigr.SegmentMetadata\x12-\n\x0ftemporal_layers\x18\n \x03(\x0b\x32\x14.seigr.TemporalLayer\x12+\n\x0eoperation_logs\x18\x0b \x03(\x0b\x32\x13.seigr.OperationLog\x12\x44\n\x11\x63ustom_attributes\x18\x0c \x03(\x0b\x32).seigr.FileMetadata.CustomAttributesEntry\x12\x18\n\x10\x61\x63\x63\x65ss_policy_id\x18\r \x01(\t\x12\x1b\n\x13\x65ncryption_protocol\x18\x0e \x01(\t\x12\x18\n\x10network_protocol\x18\x0f \x01(\t\x12#\n\x1bintegrity_verification_hash\x18\x10 \x01(\t\x12\x18\n\x10redundancy_level\x18\x11 \x01(\x05\x12\x18\n\x10\x61uthorized_users\x18\x12 \x03(\t\x12H\n\x13protocol_attributes\x18\x13 \x03(\x0b\x32+.seigr.FileMetadata.ProtocolAttributesEntry\x12\x1b\n\x13\x61\x63\x63\x65ss_control_list\x18\x14 \x03(\t\x12\'\n\x0c\x61\x63\x63\x65ss_rules\x18\x15 \x03(\x0b\x32\x11.seigr.AccessRule\x12\x1e\n\x16\x63ompliance_requirement\x18\x16 \x01(\t\x12\x18\n\x10retention_period\x18\x17 \x01(\t\x12\x1a\n\x12origin_data_source\x18\x18 \x01(\t\x12\x1f\n\x17last_modified_timestamp\x18\x19 \x01(\t\x12!\n\x19\x66ormat_conversion_history\x18\x1a \x03(\t\x12\x1f\n\x17primary_backup_location\x18\x1b \x01(\t\x1a\x37\n\x15\x43ustomAttributesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x39\n\x17ProtocolAttributesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01*\x8f\x01\n\x08\x46ileType\x12\x12\n\x0e\x46ILE_UNDEFINED\x10\x00\x12\n\n\x06\x42INARY\x10\x01\x12\n\n\x06SENARY\x10\x02\x12\x11\n\rCUSTOM_FORMAT\x10\x03\x12\x08\n\x04TEXT\x10\x04\x12\t\n\x05IMAGE\x10\x05\x12\t\n\x05VIDEO\x10\x06\x12\t\n\x05\x41UDIO\x10\x07\x12\x0b\n\x07\x41RCHIVE\x10\x08\x12\x0c\n\x08\x44\x41TABASE\x10\t*\x95\x01\n\nFileStatus\x12\x19\n\x15\x46ILE_STATUS_UNDEFINED\x10\x00\x12\x16\n\x12\x46ILE_STATUS_ACTIVE\x10\x01\x12\x18\n\x14\x46ILE_STATUS_ARCHIVED\x10\x02\x12\x1e\n\x1a\x46ILE_STATUS_PENDING_REVIEW\x10\x03\x12\x1a\n\x16\x46ILE_STATUS_RESTRICTED\x10\x04\x62\x06proto3')
   |
29 | 
30 | _globals = globals()
   |

src/seigr_protocol/compiled/hashing_pb2.py:7:1: I001 [*] Import block is un-sorted or un-formatted
   |
 5 |   # Protobuf Python Version: 5.29.2
 6 |   """Generated protocol buffer code."""
 7 | / from google.protobuf import descriptor as _descriptor
 8 | | from google.protobuf import descriptor_pool as _descriptor_pool
 9 | | from google.protobuf import runtime_version as _runtime_version
10 | | from google.protobuf import symbol_database as _symbol_database
11 | | from google.protobuf.internal import builder as _builder
12 | | _runtime_version.ValidateProtobufRuntimeVersion(
   | |_^ I001
13 |       _runtime_version.Domain.PUBLIC,
14 |       5,
   |
   = help: Organize imports

src/seigr_protocol/compiled/hashing_pb2.py:27:101: E501 Line too long (3929 > 100)
   |
27 | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\rhashing.proto\x12\x05seigr\"\xc2\x05\n\x08HashData\x12\x0f\n\x07hash_id\x18\x01 \x01(\t\x12\'\n\talgorithm\x18\x02 \x01(\x0e\x32\x14.seigr.HashAlgorithm\x12\x15\n\rdata_snapshot\x18\x03 \x01(\x0c\x12\x0c\n\x04salt\x18\x04 \x01(\t\x12\x12\n\nhash_value\x18\x05 \x01(\t\x12\x19\n\x11\x61lgorithm_version\x18\x06 \x01(\x05\x12\x16\n\x0esenary_encoded\x18\x07 \x01(\x08\x12\x1a\n\x12\x63reation_timestamp\x18\x08 \x01(\t\x12\x12\n\ntrace_code\x18\t \x01(\t\x12\x36\n\x13verification_status\x18\n \x01(\x0e\x32\x19.seigr.VerificationStatus\x12\x15\n\rprevious_hash\x18\x0b \x01(\t\x12\x15\n\rlinked_hashes\x18\x0c \x03(\t\x12\x44\n\x13\x61\x64\x61ptive_parameters\x18\r \x03(\x0b\x32\'.seigr.HashData.AdaptiveParametersEntry\x12\x16\n\x0esenary_version\x18\x0e \x01(\x05\x12/\n\x08metadata\x18\x0f \x03(\x0b\x32\x1d.seigr.HashData.MetadataEntry\x12\x17\n\x0fhash_expiration\x18\x10 \x01(\t\x12\x15\n\rentropy_level\x18\x11 \x01(\x02\x12\x17\n\x0fhash_adaptation\x18\x12 \x01(\t\x12\x17\n\x0f\x65ntropy_sources\x18\x13 \x03(\t\x12\x1d\n\x15origin_data_reference\x18\x14 \x01(\t\x1a\x39\n\x17\x41\x64\x61ptiveParametersEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xf3\x04\n\x08HashTree\x12\x0f\n\x07tree_id\x18\x01 \x01(\t\x12$\n\x0broot_hashes\x18\x02 \x03(\x0b\x32\x0f.seigr.HashData\x12+\n\x06layers\x18\x03 \x03(\x0b\x32\x1b.seigr.HashTree.LayersEntry\x12\r\n\x05\x64\x65pth\x18\x04 \x01(\x05\x12\x1a\n\x12\x63reation_timestamp\x18\x05 \x01(\t\x12\x33\n\x10integrity_status\x18\x06 \x01(\x0e\x32\x19.seigr.VerificationStatus\x12/\n\x08metadata\x18\x07 \x03(\x0b\x32\x1d.seigr.HashTree.MetadataEntry\x12\x1f\n\x17last_verified_timestamp\x18\x08 \x01(\t\x12\x1b\n\x13integrity_threshold\x18\t \x01(\x02\x12\x19\n\x11\x64\x65pendency_hashes\x18\n \x03(\t\x12\x1d\n\x15root_confidence_level\x18\x0b \x01(\x02\x12K\n\x17layer_confidence_levels\x18\x0c \x03(\x0b\x32*.seigr.HashTree.LayerConfidenceLevelsEntry\x1a>\n\x0bLayersEntry\x12\x0b\n\x03key\x18\x01 \x01(\x05\x12\x1e\n\x05value\x18\x02 \x01(\x0b\x32\x0f.seigr.HashData:\x02\x38\x01\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a<\n\x1aLayerConfidenceLevelsEntry\x12\x0b\n\x03key\x18\x01 \x01(\x05\x12\r\n\x05value\x18\x02 \x01(\x02:\x02\x38\x01\"\x80\x04\n\x0fVerificationLog\x12\x17\n\x0fverification_id\x18\x01 \x01(\t\x12\x16\n\x0etarget_hash_id\x18\x02 \x01(\t\x12)\n\x06status\x18\x03 \x01(\x0e\x32\x19.seigr.VerificationStatus\x12\x13\n\x0bverifier_id\x18\x04 \x01(\t\x12\x1e\n\x16verification_timestamp\x18\x05 \x01(\t\x12\x15\n\rerror_message\x18\x06 \x01(\t\x12\x16\n\x0everified_depth\x18\x07 \x01(\x05\x12O\n\x15verification_metadata\x18\x08 \x03(\x0b\x32\x30.seigr.VerificationLog.VerificationMetadataEntry\x12\x16\n\x0e\x61lgorithm_used\x18\t \x01(\t\x12\x1f\n\x17verification_confidence\x18\n \x01(\x02\x12\x13\n\x0b\x61udit_trail\x18\x0b \x03(\t\x12\x1a\n\x12verification_notes\x18\x0c \x01(\t\x12\x16\n\x0eretry_attempts\x18\r \x01(\x05\x12\x1d\n\x15verification_duration\x18\x0e \x01(\t\x1a;\n\x19VerificationMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01*\x9c\x01\n\rHashAlgorithm\x12\x1c\n\x18HASH_ALGORITHM_UNDEFINED\x10\x00\x12\x0f\n\x0bHASH_SHA256\x10\x01\x12\x0f\n\x0bHASH_SHA512\x10\x02\x12\x10\n\x0cHASH_BLAKE2B\x10\x03\x12\x15\n\x11HASH_SEIGR_SENARY\x10\x04\x12\x11\n\rHASH_SHA3_256\x10\x05\x12\x0f\n\x0bHASH_ARGON2\x10\x06*\xb8\x01\n\x12VerificationStatus\x12!\n\x1dVERIFICATION_STATUS_UNDEFINED\x10\x00\x12\x0c\n\x08VERIFIED\x10\x01\x12\x0e\n\nUNVERIFIED\x10\x02\x12\x14\n\x10HASH_COMPROMISED\x10\x03\x12\x18\n\x14VERIFICATION_PENDING\x10\x04\x12\x16\n\x12PARTIALLY_VERIFIED\x10\x05\x12\x19\n\x15REQUIRES_REVALIDATION\x10\x06\x62\x06proto3')
   |
28 | 
29 | _globals = globals()
   |

src/seigr_protocol/compiled/identity_pb2.py:7:1: I001 [*] Import block is un-sorted or un-formatted
   |
 5 |   # Protobuf Python Version: 5.29.2
 6 |   """Generated protocol buffer code."""
 7 | / from google.protobuf import descriptor as _descriptor
 8 | | from google.protobuf import descriptor_pool as _descriptor_pool
 9 | | from google.protobuf import runtime_version as _runtime_version
10 | | from google.protobuf import symbol_database as _symbol_database
11 | | from google.protobuf.internal import builder as _builder
12 | | _runtime_version.ValidateProtobufRuntimeVersion(
   | |_^ I001
13 |       _runtime_version.Domain.PUBLIC,
14 |       5,
   |
   = help: Organize imports

src/seigr_protocol/compiled/identity_pb2.py:25:1: E402 Module level import not at top of file
   |
25 | import access_control_pb2 as access__control__pb2
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E402
   |

src/seigr_protocol/compiled/identity_pb2.py:25:1: I001 [*] Import block is un-sorted or un-formatted
   |
25 | / import access_control_pb2 as access__control__pb2
26 | | 
27 | | 
28 | | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0eidentity.proto\x12\x05seigr\x1a\x14\x61\x63\x63\x65ss_control.proto\"\xcb\x03\n\rAliasIdentity\x12\x10\n\x08\x61lias_id\x18\x01 \x01(\t\x12%\n\x06status\x18\x02 \x01(\x0e\x32\x15.seigr.IdentityStatus\x12*\n\rprivacy_level\x18\x03 \x01(\x0e\x32\x13.seigr.PrivacyLevel\x12*\n\ridentity_type\x18\x04 \x01(\x0e\x32\x13.seigr.IdentityType\x12\x12\n\nalias_name\x18\x05 \x01(\t\x12\x17\n\x0f\x61lias_signature\x18\x06 \x01(\t\x12\x32\n\x15\x61lias_access_policies\x18\x07 \x03(\x0b\x32\x13.seigr.AccessPolicy\x12?\n\x0e\x61lias_metadata\x18\x08 \x03(\x0b\x32\'.seigr.AliasIdentity.AliasMetadataEntry\x12\x1c\n\x14\x65xpiration_timestamp\x18\t \x01(\t\x12\x17\n\x0frelated_aliases\x18\n \x03(\t\x12\x1a\n\x12traceability_level\x18\x0b \x01(\t\x1a\x34\n\x12\x41liasMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xe8\x02\n\x10IdentityAuditLog\x12\x0e\n\x06\x61\x63tion\x18\x01 \x01(\t\x12\x14\n\x0cperformed_by\x18\x02 \x01(\t\x12\x11\n\ttimestamp\x18\x03 \x01(\t\x12\x0e\n\x06status\x18\x04 \x01(\t\x12\x0f\n\x07\x64\x65tails\x18\x05 \x01(\t\x12\x37\n\x08metadata\x18\x06 \x03(\x0b\x32%.seigr.IdentityAuditLog.MetadataEntry\x12\x42\n\x0e\x61\x63tion_details\x18\x07 \x03(\x0b\x32*.seigr.IdentityAuditLog.ActionDetailsEntry\x12\x16\n\x0e\x63ompliance_tag\x18\x08 \x01(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x34\n\x12\x41\x63tionDetailsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x84\t\n\x11SeigrIdentityData\x12\x1a\n\x12\x63reation_timestamp\x18\x01 \x01(\x03\x12*\n\ridentity_type\x18\x02 \x01(\x0e\x32\x13.seigr.IdentityType\x12%\n\x06status\x18\x03 \x01(\x0e\x32\x15.seigr.IdentityStatus\x12\x11\n\tsenary_id\x18\x04 \x01(\x0c\x12\x18\n\x10owner_public_key\x18\x05 \x01(\x0c\x12\x1d\n\x15\x65ncrypted_private_key\x18\x06 \x01(\x0c\x12\x17\n\x0fowner_signature\x18\x07 \x01(\x0c\x12\x0f\n\x07revoked\x18\x08 \x01(\x08\x12\x19\n\x11revocation_reason\x18\t \x01(\t\x12\x34\n\x12verification_level\x18\n \x01(\x0e\x32\x18.seigr.VerificationLevel\x12Q\n\x15verification_metadata\x18\x0b \x03(\x0b\x32\x32.seigr.SeigrIdentityData.VerificationMetadataEntry\x12,\n\x0f\x61\x63\x63\x65ss_policies\x18\x0c \x03(\x0b\x32\x13.seigr.AccessPolicy\x12+\n\naudit_logs\x18\r \x03(\x0b\x32\x17.seigr.IdentityAuditLog\x12\x0f\n\x07version\x18\x0e \x01(\t\x12\x38\n\x08metadata\x18\x0f \x03(\x0b\x32&.seigr.SeigrIdentityData.MetadataEntry\x12\x16\n\x0e\x65ncryption_key\x18\x10 \x01(\x0c\x12\x10\n\x08usb_path\x18\x11 \x01(\t\x12\x14\n\x0cusb_required\x18\x12 \x01(\x08\x12\x1b\n\x13last_used_timestamp\x18\x13 \x01(\t\x12M\n\x13security_parameters\x18\x14 \x03(\x0b\x32\x30.seigr.SeigrIdentityData.SecurityParametersEntry\x12\x1c\n\x14multi_factor_enabled\x18\x15 \x01(\x08\x12\x1a\n\x12security_policy_id\x18\x16 \x01(\t\x12%\n\x07\x61liases\x18\x17 \x03(\x0b\x32\x14.seigr.AliasIdentity\x12\x1c\n\x14\x65xpiration_timestamp\x18\x18 \x01(\t\x12\x19\n\x11reactivation_code\x18\x19 \x01(\t\x12\x1d\n\x15key_rotation_schedule\x18\x1a \x01(\t\x12\x32\n\x15\x64\x65\x66\x61ult_privacy_level\x18\x1b \x01(\x0e\x32\x13.seigr.PrivacyLevel\x1a;\n\x19VerificationMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x39\n\x17SecurityParametersEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01*\xab\x01\n\x0eIdentityStatus\x12\x1d\n\x19IDENTITY_STATUS_UNDEFINED\x10\x00\x12\x13\n\x0fIDENTITY_ACTIVE\x10\x01\x12\x16\n\x12IDENTITY_SUSPENDED\x10\x02\x12\x14\n\x10IDENTITY_REVOKED\x10\x03\x12!\n\x1dIDENTITY_PENDING_VERIFICATION\x10\x04\x12\x14\n\x10IDENTITY_EXPIRED\x10\x05*\x97\x01\n\x0cIdentityType\x12\x1b\n\x17IDENTITY_TYPE_UNDEFINED\x10\x00\x12\x11\n\rIDENTITY_USER\x10\x01\x12\x13\n\x0fIDENTITY_SENSOR\x10\x02\x12\x13\n\x0fIDENTITY_SERVER\x10\x03\x12\x18\n\x14IDENTITY_APPLICATION\x10\x04\x12\x13\n\x0fIDENTITY_DEVICE\x10\x05*\x95\x01\n\x0cPrivacyLevel\x12\x12\n\x0ePRIVACY_PUBLIC\x10\x00\x12\x19\n\x15PRIVACY_PARTIAL_TRACE\x10\x01\x12\x1a\n\x16PRIVACY_SEMI_ANONYMOUS\x10\x02\x12\x1a\n\x16PRIVACY_FULL_ANONYMOUS\x10\x03\x12\x1e\n\x1aPRIVACY_SELECTIVE_EXPOSURE\x10\x04*\xc7\x01\n\x11VerificationLevel\x12 \n\x1cVERIFICATION_LEVEL_UNDEFINED\x10\x00\x12\x1a\n\x16VERIFICATION_LOW_TRUST\x10\x01\x12\x1d\n\x19VERIFICATION_MEDIUM_TRUST\x10\x02\x12\x1b\n\x17VERIFICATION_HIGH_TRUST\x10\x03\x12\x1f\n\x1bVERIFICATION_ADMIN_VERIFIED\x10\x04\x12\x17\n\x13VERIFICATION_CUSTOM\x10\x05\x62\x06proto3')
   | |_^ I001
29 |   
30 |   _globals = globals()
   |
   = help: Organize imports

src/seigr_protocol/compiled/identity_pb2.py:25:30: F401 [*] `access_control_pb2` imported but unused
   |
25 | import access_control_pb2 as access__control__pb2
   |                              ^^^^^^^^^^^^^^^^^^^^ F401
   |
   = help: Remove unused import: `access_control_pb2`

src/seigr_protocol/compiled/identity_pb2.py:28:101: E501 Line too long (4663 > 100)
   |
28 | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0eidentity.proto\x12\x05seigr\x1a\x14\x61\x63\x63\x65ss_control.proto\"\xcb\x03\n\rAliasIdentity\x12\x10\n\x08\x61lias_id\x18\x01 \x01(\t\x12%\n\x06status\x18\x02 \x01(\x0e\x32\x15.seigr.IdentityStatus\x12*\n\rprivacy_level\x18\x03 \x01(\x0e\x32\x13.seigr.PrivacyLevel\x12*\n\ridentity_type\x18\x04 \x01(\x0e\x32\x13.seigr.IdentityType\x12\x12\n\nalias_name\x18\x05 \x01(\t\x12\x17\n\x0f\x61lias_signature\x18\x06 \x01(\t\x12\x32\n\x15\x61lias_access_policies\x18\x07 \x03(\x0b\x32\x13.seigr.AccessPolicy\x12?\n\x0e\x61lias_metadata\x18\x08 \x03(\x0b\x32\'.seigr.AliasIdentity.AliasMetadataEntry\x12\x1c\n\x14\x65xpiration_timestamp\x18\t \x01(\t\x12\x17\n\x0frelated_aliases\x18\n \x03(\t\x12\x1a\n\x12traceability_level\x18\x0b \x01(\t\x1a\x34\n\x12\x41liasMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xe8\x02\n\x10IdentityAuditLog\x12\x0e\n\x06\x61\x63tion\x18\x01 \x01(\t\x12\x14\n\x0cperformed_by\x18\x02 \x01(\t\x12\x11\n\ttimestamp\x18\x03 \x01(\t\x12\x0e\n\x06status\x18\x04 \x01(\t\x12\x0f\n\x07\x64\x65tails\x18\x05 \x01(\t\x12\x37\n\x08metadata\x18\x06 \x03(\x0b\x32%.seigr.IdentityAuditLog.MetadataEntry\x12\x42\n\x0e\x61\x63tion_details\x18\x07 \x03(\x0b\x32*.seigr.IdentityAuditLog.ActionDetailsEntry\x12\x16\n\x0e\x63ompliance_tag\x18\x08 \x01(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x34\n\x12\x41\x63tionDetailsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x84\t\n\x11SeigrIdentityData\x12\x1a\n\x12\x63reation_timestamp\x18\x01 \x01(\x03\x12*\n\ridentity_type\x18\x02 \x01(\x0e\x32\x13.seigr.IdentityType\x12%\n\x06status\x18\x03 \x01(\x0e\x32\x15.seigr.IdentityStatus\x12\x11\n\tsenary_id\x18\x04 \x01(\x0c\x12\x18\n\x10owner_public_key\x18\x05 \x01(\x0c\x12\x1d\n\x15\x65ncrypted_private_key\x18\x06 \x01(\x0c\x12\x17\n\x0fowner_signature\x18\x07 \x01(\x0c\x12\x0f\n\x07revoked\x18\x08 \x01(\x08\x12\x19\n\x11revocation_reason\x18\t \x01(\t\x12\x34\n\x12verification_level\x18\n \x01(\x0e\x32\x18.seigr.VerificationLevel\x12Q\n\x15verification_metadata\x18\x0b \x03(\x0b\x32\x32.seigr.SeigrIdentityData.VerificationMetadataEntry\x12,\n\x0f\x61\x63\x63\x65ss_policies\x18\x0c \x03(\x0b\x32\x13.seigr.AccessPolicy\x12+\n\naudit_logs\x18\r \x03(\x0b\x32\x17.seigr.IdentityAuditLog\x12\x0f\n\x07version\x18\x0e \x01(\t\x12\x38\n\x08metadata\x18\x0f \x03(\x0b\x32&.seigr.SeigrIdentityData.MetadataEntry\x12\x16\n\x0e\x65ncryption_key\x18\x10 \x01(\x0c\x12\x10\n\x08usb_path\x18\x11 \x01(\t\x12\x14\n\x0cusb_required\x18\x12 \x01(\x08\x12\x1b\n\x13last_used_timestamp\x18\x13 \x01(\t\x12M\n\x13security_parameters\x18\x14 \x03(\x0b\x32\x30.seigr.SeigrIdentityData.SecurityParametersEntry\x12\x1c\n\x14multi_factor_enabled\x18\x15 \x01(\x08\x12\x1a\n\x12security_policy_id\x18\x16 \x01(\t\x12%\n\x07\x61liases\x18\x17 \x03(\x0b\x32\x14.seigr.AliasIdentity\x12\x1c\n\x14\x65xpiration_timestamp\x18\x18 \x01(\t\x12\x19\n\x11reactivation_code\x18\x19 \x01(\t\x12\x1d\n\x15key_rotation_schedule\x18\x1a \x01(\t\x12\x32\n\x15\x64\x65\x66\x61ult_privacy_level\x18\x1b \x01(\x0e\x32\x13.seigr.PrivacyLevel\x1a;\n\x19VerificationMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x39\n\x17SecurityParametersEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01*\xab\x01\n\x0eIdentityStatus\x12\x1d\n\x19IDENTITY_STATUS_UNDEFINED\x10\x00\x12\x13\n\x0fIDENTITY_ACTIVE\x10\x01\x12\x16\n\x12IDENTITY_SUSPENDED\x10\x02\x12\x14\n\x10IDENTITY_REVOKED\x10\x03\x12!\n\x1dIDENTITY_PENDING_VERIFICATION\x10\x04\x12\x14\n\x10IDENTITY_EXPIRED\x10\x05*\x97\x01\n\x0cIdentityType\x12\x1b\n\x17IDENTITY_TYPE_UNDEFINED\x10\x00\x12\x11\n\rIDENTITY_USER\x10\x01\x12\x13\n\x0fIDENTITY_SENSOR\x10\x02\x12\x13\n\x0fIDENTITY_SERVER\x10\x03\x12\x18\n\x14IDENTITY_APPLICATION\x10\x04\x12\x13\n\x0fIDENTITY_DEVICE\x10\x05*\x95\x01\n\x0cPrivacyLevel\x12\x12\n\x0ePRIVACY_PUBLIC\x10\x00\x12\x19\n\x15PRIVACY_PARTIAL_TRACE\x10\x01\x12\x1a\n\x16PRIVACY_SEMI_ANONYMOUS\x10\x02\x12\x1a\n\x16PRIVACY_FULL_ANONYMOUS\x10\x03\x12\x1e\n\x1aPRIVACY_SELECTIVE_EXPOSURE\x10\x04*\xc7\x01\n\x11VerificationLevel\x12 \n\x1cVERIFICATION_LEVEL_UNDEFINED\x10\x00\x12\x1a\n\x16VERIFICATION_LOW_TRUST\x10\x01\x12\x1d\n\x19VERIFICATION_MEDIUM_TRUST\x10\x02\x12\x1b\n\x17VERIFICATION_HIGH_TRUST\x10\x03\x12\x1f\n\x1bVERIFICATION_ADMIN_VERIFIED\x10\x04\x12\x17\n\x13VERIFICATION_CUSTOM\x10\x05\x62\x06proto3')
   |
29 | 
30 | _globals = globals()
   |

src/seigr_protocol/compiled/integrity_pb2.py:7:1: I001 [*] Import block is un-sorted or un-formatted
   |
 5 |   # Protobuf Python Version: 5.29.2
 6 |   """Generated protocol buffer code."""
 7 | / from google.protobuf import descriptor as _descriptor
 8 | | from google.protobuf import descriptor_pool as _descriptor_pool
 9 | | from google.protobuf import runtime_version as _runtime_version
10 | | from google.protobuf import symbol_database as _symbol_database
11 | | from google.protobuf.internal import builder as _builder
12 | | _runtime_version.ValidateProtobufRuntimeVersion(
   | |_^ I001
13 |       _runtime_version.Domain.PUBLIC,
14 |       5,
   |
   = help: Organize imports

src/seigr_protocol/compiled/integrity_pb2.py:25:1: E402 Module level import not at top of file
   |
25 | import segment_metadata_pb2 as segment__metadata__pb2
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E402
26 | import encryption_pb2 as encryption__pb2
   |

src/seigr_protocol/compiled/integrity_pb2.py:25:1: I001 [*] Import block is un-sorted or un-formatted
   |
25 | / import segment_metadata_pb2 as segment__metadata__pb2
26 | | import encryption_pb2 as encryption__pb2
27 | | 
28 | | 
29 | | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0fintegrity.proto\x12\x05seigr\x1a\x16segment_metadata.proto\x1a\x10\x65ncryption.proto\"\xe3\x04\n\x15MonitoringCycleResult\x12\x10\n\x08\x63ycle_id\x18\x01 \x01(\t\x12-\n\x0fsegments_status\x18\x02 \x03(\x0b\x32\x14.seigr.SegmentStatus\x12\x14\n\x0c\x63ompleted_at\x18\x03 \x01(\t\x12\x1e\n\x16total_threats_detected\x18\x04 \x01(\x05\x12\x1c\n\x14new_threats_detected\x18\x05 \x01(\x05\x12I\n\x0f\x61\x64\x64itional_info\x18\x06 \x03(\x0b\x32\x30.seigr.MonitoringCycleResult.AdditionalInfoEntry\x12\x16\n\x0e\x63ycle_duration\x18\x07 \x01(\t\x12\x14\n\x0cinitiated_by\x18\x08 \x01(\t\x12\x30\n\x11threat_severities\x18\t \x03(\x0e\x32\x15.seigr.ThreatSeverity\x12\x19\n\x11resolution_status\x18\n \x01(\t\x12G\n\x0ethreat_summary\x18\x0b \x03(\x0b\x32/.seigr.MonitoringCycleResult.ThreatSummaryEntry\x12\x1c\n\x14next_cycle_scheduled\x18\x0c \x01(\t\x12\x1b\n\x13impacted_components\x18\r \x03(\t\x1a\x35\n\x13\x41\x64\x64itionalInfoEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x34\n\x12ThreatSummaryEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x05:\x02\x38\x01\"\x99\t\n\x14ThreatAnalysisReport\x12\x11\n\treport_id\x18\x01 \x01(\t\x12\x34\n\x0bthreat_logs\x18\x02 \x03(\x0b\x32\x1f.seigr.IntegrityVerificationLog\x12\x1e\n\x16total_critical_threats\x18\x03 \x01(\x05\x12\x1a\n\x12total_high_threats\x18\x04 \x01(\x05\x12\x1e\n\x16total_moderate_threats\x18\x05 \x01(\x05\x12\x19\n\x11total_low_threats\x18\x06 \x01(\x05\x12\x1a\n\x12\x61nalysis_timestamp\x18\x07 \x01(\t\x12P\n\x13recommended_actions\x18\x08 \x03(\x0b\x32\x33.seigr.ThreatAnalysisReport.RecommendedActionsEntry\x12;\n\x08metadata\x18\t \x03(\x0b\x32).seigr.ThreatAnalysisReport.MetadataEntry\x12H\n\x0f\x61\x63tion_priority\x18\n \x03(\x0b\x32/.seigr.ThreatAnalysisReport.ActionPriorityEntry\x12\x15\n\rreport_author\x18\x0b \x01(\t\x12\x17\n\x0freport_duration\x18\x0c \x01(\t\x12L\n\x11threat_recurrence\x18\r \x03(\x0b\x32\x31.seigr.ThreatAnalysisReport.ThreatRecurrenceEntry\x12\x17\n\x0f\x65scalation_path\x18\x0e \x03(\t\x12\x1a\n\x12unresolved_threats\x18\x0f \x03(\t\x12L\n\x11\x61\x64\x61ptive_response\x18\x10 \x03(\x0b\x32\x31.seigr.ThreatAnalysisReport.AdaptiveResponseEntry\x12\x1f\n\x17next_analysis_scheduled\x18\x11 \x01(\t\x12W\n\x17\x63omponent_threat_counts\x18\x12 \x03(\x0b\x32\x36.seigr.ThreatAnalysisReport.ComponentThreatCountsEntry\x1a\x39\n\x17RecommendedActionsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x35\n\x13\x41\x63tionPriorityEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x05:\x02\x38\x01\x1a\x37\n\x15ThreatRecurrenceEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x05:\x02\x38\x01\x1a\x37\n\x15\x41\x64\x61ptiveResponseEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a<\n\x1a\x43omponentThreatCountsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x05:\x02\x38\x01*\x9e\x01\n\x0eThreatSeverity\x12\x1d\n\x19THREAT_SEVERITY_UNDEFINED\x10\x00\x12\x17\n\x13THREAT_SEVERITY_LOW\x10\x01\x12\x1c\n\x18THREAT_SEVERITY_MODERATE\x10\x02\x12\x18\n\x14THREAT_SEVERITY_HIGH\x10\x03\x12\x1c\n\x18THREAT_SEVERITY_CRITICAL\x10\x04\x62\x06proto3')
   | |_^ I001
30 |   
31 |   _globals = globals()
   |
   = help: Organize imports

src/seigr_protocol/compiled/integrity_pb2.py:25:32: F401 [*] `segment_metadata_pb2` imported but unused
   |
25 | import segment_metadata_pb2 as segment__metadata__pb2
   |                                ^^^^^^^^^^^^^^^^^^^^^^ F401
26 | import encryption_pb2 as encryption__pb2
   |
   = help: Remove unused import: `segment_metadata_pb2`

src/seigr_protocol/compiled/integrity_pb2.py:26:1: E402 Module level import not at top of file
   |
25 | import segment_metadata_pb2 as segment__metadata__pb2
26 | import encryption_pb2 as encryption__pb2
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E402
   |

src/seigr_protocol/compiled/integrity_pb2.py:26:26: F401 [*] `encryption_pb2` imported but unused
   |
25 | import segment_metadata_pb2 as segment__metadata__pb2
26 | import encryption_pb2 as encryption__pb2
   |                          ^^^^^^^^^^^^^^^ F401
   |
   = help: Remove unused import: `encryption_pb2`

src/seigr_protocol/compiled/integrity_pb2.py:29:101: E501 Line too long (3425 > 100)
   |
29 | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0fintegrity.proto\x12\x05seigr\x1a\x16segment_metadata.proto\x1a\x10\x65ncryption.proto\"\xe3\x04\n\x15MonitoringCycleResult\x12\x10\n\x08\x63ycle_id\x18\x01 \x01(\t\x12-\n\x0fsegments_status\x18\x02 \x03(\x0b\x32\x14.seigr.SegmentStatus\x12\x14\n\x0c\x63ompleted_at\x18\x03 \x01(\t\x12\x1e\n\x16total_threats_detected\x18\x04 \x01(\x05\x12\x1c\n\x14new_threats_detected\x18\x05 \x01(\x05\x12I\n\x0f\x61\x64\x64itional_info\x18\x06 \x03(\x0b\x32\x30.seigr.MonitoringCycleResult.AdditionalInfoEntry\x12\x16\n\x0e\x63ycle_duration\x18\x07 \x01(\t\x12\x14\n\x0cinitiated_by\x18\x08 \x01(\t\x12\x30\n\x11threat_severities\x18\t \x03(\x0e\x32\x15.seigr.ThreatSeverity\x12\x19\n\x11resolution_status\x18\n \x01(\t\x12G\n\x0ethreat_summary\x18\x0b \x03(\x0b\x32/.seigr.MonitoringCycleResult.ThreatSummaryEntry\x12\x1c\n\x14next_cycle_scheduled\x18\x0c \x01(\t\x12\x1b\n\x13impacted_components\x18\r \x03(\t\x1a\x35\n\x13\x41\x64\x64itionalInfoEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x34\n\x12ThreatSummaryEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x05:\x02\x38\x01\"\x99\t\n\x14ThreatAnalysisReport\x12\x11\n\treport_id\x18\x01 \x01(\t\x12\x34\n\x0bthreat_logs\x18\x02 \x03(\x0b\x32\x1f.seigr.IntegrityVerificationLog\x12\x1e\n\x16total_critical_threats\x18\x03 \x01(\x05\x12\x1a\n\x12total_high_threats\x18\x04 \x01(\x05\x12\x1e\n\x16total_moderate_threats\x18\x05 \x01(\x05\x12\x19\n\x11total_low_threats\x18\x06 \x01(\x05\x12\x1a\n\x12\x61nalysis_timestamp\x18\x07 \x01(\t\x12P\n\x13recommended_actions\x18\x08 \x03(\x0b\x32\x33.seigr.ThreatAnalysisReport.RecommendedActionsEntry\x12;\n\x08metadata\x18\t \x03(\x0b\x32).seigr.ThreatAnalysisReport.MetadataEntry\x12H\n\x0f\x61\x63tion_priority\x18\n \x03(\x0b\x32/.seigr.ThreatAnalysisReport.ActionPriorityEntry\x12\x15\n\rreport_author\x18\x0b \x01(\t\x12\x17\n\x0freport_duration\x18\x0c \x01(\t\x12L\n\x11threat_recurrence\x18\r \x03(\x0b\x32\x31.seigr.ThreatAnalysisReport.ThreatRecurrenceEntry\x12\x17\n\x0f\x65scalation_path\x18\x0e \x03(\t\x12\x1a\n\x12unresolved_threats\x18\x0f \x03(\t\x12L\n\x11\x61\x64\x61ptive_response\x18\x10 \x03(\x0b\x32\x31.seigr.ThreatAnalysisReport.AdaptiveResponseEntry\x12\x1f\n\x17next_analysis_scheduled\x18\x11 \x01(\t\x12W\n\x17\x63omponent_threat_counts\x18\x12 \x03(\x0b\x32\x36.seigr.ThreatAnalysisReport.ComponentThreatCountsEntry\x1a\x39\n\x17RecommendedActionsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x35\n\x13\x41\x63tionPriorityEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x05:\x02\x38\x01\x1a\x37\n\x15ThreatRecurrenceEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x05:\x02\x38\x01\x1a\x37\n\x15\x41\x64\x61ptiveResponseEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a<\n\x1a\x43omponentThreatCountsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x05:\x02\x38\x01*\x9e\x01\n\x0eThreatSeverity\x12\x1d\n\x19THREAT_SEVERITY_UNDEFINED\x10\x00\x12\x17\n\x13THREAT_SEVERITY_LOW\x10\x01\x12\x1c\n\x18THREAT_SEVERITY_MODERATE\x10\x02\x12\x18\n\x14THREAT_SEVERITY_HIGH\x10\x03\x12\x1c\n\x18THREAT_SEVERITY_CRITICAL\x10\x04\x62\x06proto3')
   |
30 | 
31 | _globals = globals()
   |

src/seigr_protocol/compiled/inter_cluster_pb2.py:7:1: I001 [*] Import block is un-sorted or un-formatted
   |
 5 |   # Protobuf Python Version: 5.29.2
 6 |   """Generated protocol buffer code."""
 7 | / from google.protobuf import descriptor as _descriptor
 8 | | from google.protobuf import descriptor_pool as _descriptor_pool
 9 | | from google.protobuf import runtime_version as _runtime_version
10 | | from google.protobuf import symbol_database as _symbol_database
11 | | from google.protobuf.internal import builder as _builder
12 | | _runtime_version.ValidateProtobufRuntimeVersion(
   | |_^ I001
13 |       _runtime_version.Domain.PUBLIC,
14 |       5,
   |
   = help: Organize imports

src/seigr_protocol/compiled/inter_cluster_pb2.py:27:101: E501 Line too long (6064 > 100)
   |
27 | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x13inter_cluster.proto\x12\x05seigr\"\xc1\x04\n\x0e\x43lusterRequest\x12\x12\n\nrequest_id\x18\x01 \x01(\t\x12/\n\x0crequest_type\x18\x02 \x01(\x0e\x32\x19.seigr.ClusterRequestType\x12\x19\n\x11origin_cluster_id\x18\x03 \x01(\t\x12\x19\n\x11target_cluster_id\x18\x04 \x01(\t\x12H\n\x12request_parameters\x18\x05 \x03(\x0b\x32,.seigr.ClusterRequest.RequestParametersEntry\x12\x14\n\x0cinitiated_at\x18\x06 \x01(\t\x12\x44\n\x10security_context\x18\x07 \x03(\x0b\x32*.seigr.ClusterRequest.SecurityContextEntry\x12\x1e\n\x16require_acknowledgment\x18\x08 \x01(\x08\x12\x44\n\x10request_metadata\x18\t \x03(\x0b\x32*.seigr.ClusterRequest.RequestMetadataEntry\x1a\x38\n\x16RequestParametersEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x36\n\x14SecurityContextEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x36\n\x14RequestMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xbf\x03\n\x0f\x43lusterResponse\x12\x13\n\x0bresponse_id\x18\x01 \x01(\t\x12\x12\n\nrequest_id\x18\x02 \x01(\t\x12\x31\n\rresponse_type\x18\x03 \x01(\x0e\x32\x1a.seigr.ClusterResponseType\x12\x19\n\x11origin_cluster_id\x18\x04 \x01(\t\x12\x19\n\x11target_cluster_id\x18\x05 \x01(\t\x12\x1a\n\x12response_timestamp\x18\x06 \x01(\t\x12G\n\x11response_metadata\x18\x07 \x03(\x0b\x32,.seigr.ClusterResponse.ResponseMetadataEntry\x12\x16\n\x0estatus_message\x18\x08 \x01(\t\x12\x34\n\x07payload\x18\t \x03(\x0b\x32#.seigr.ClusterResponse.PayloadEntry\x1a\x37\n\x15ResponseMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a.\n\x0cPayloadEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x0c:\x02\x38\x01\"\xa5\x03\n\x0c\x44\x61taTransfer\x12\x13\n\x0btransfer_id\x18\x01 \x01(\t\x12\x19\n\x11source_cluster_id\x18\x02 \x01(\t\x12\x1e\n\x16\x64\x65stination_cluster_id\x18\x03 \x01(\t\x12\x14\n\x0c\x64\x61ta_payload\x18\x04 \x01(\x0c\x12\x11\n\tdata_type\x18\x05 \x01(\t\x12\x19\n\x11\x65ncryption_scheme\x18\x06 \x01(\t\x12\x1a\n\x12\x63ompression_method\x18\x07 \x01(\t\x12\x17\n\x0ftransfer_format\x18\x08 \x01(\t\x12\x17\n\x0f\x64\x61ta_size_bytes\x18\t \x01(\x03\x12\x1a\n\x12validate_integrity\x18\n \x01(\x08\x12\x18\n\x10transfer_timeout\x18\x0b \x01(\x05\x12\x44\n\x11transfer_metadata\x18\x0c \x03(\x0b\x32).seigr.DataTransfer.TransferMetadataEntry\x1a\x37\n\x15TransferMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xd8\x02\n\x18\x43lusterEventSubscription\x12\x17\n\x0fsubscription_id\x18\x01 \x01(\t\x12\x1d\n\x15subscriber_cluster_id\x18\x02 \x01(\t\x12\x34\n\x11subscribed_events\x18\x03 \x03(\x0e\x32\x19.seigr.ClusterRequestType\x12#\n\x1breceive_async_notifications\x18\x04 \x01(\x08\x12X\n\x15subscription_metadata\x18\x05 \x03(\x0b\x32\x39.seigr.ClusterEventSubscription.SubscriptionMetadataEntry\x12\x12\n\ncreated_at\x18\x06 \x01(\t\x1a;\n\x19SubscriptionMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xa6\x02\n\x0eTransferStatus\x12\x13\n\x0btransfer_id\x18\x01 \x01(\t\x12\x16\n\x0e\x63urrent_status\x18\x02 \x01(\t\x12\x14\n\x0clast_updated\x18\x03 \x01(\t\x12\x1b\n\x13progress_percentage\x18\x04 \x01(\x01\x12\x19\n\x11source_cluster_id\x18\x05 \x01(\t\x12\x1e\n\x16\x64\x65stination_cluster_id\x18\x06 \x01(\t\x12\x42\n\x0fstatus_metadata\x18\x07 \x03(\x0b\x32).seigr.TransferStatus.StatusMetadataEntry\x1a\x35\n\x13StatusMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xa6\x02\n\x1c\x43lusterCommunicationErrorLog\x12\x10\n\x08\x65rror_id\x18\x01 \x01(\t\x12\x1b\n\x13\x61\x66\x66\x65\x63ted_cluster_id\x18\x02 \x01(\t\x12\x11\n\ttimestamp\x18\x03 \x01(\t\x12\x15\n\rerror_message\x18\x04 \x01(\t\x12\x12\n\nrequest_id\x18\x05 \x01(\t\x12\x13\n\x0bresponse_id\x18\x06 \x01(\t\x12N\n\x0e\x65rror_metadata\x18\x07 \x03(\x0b\x32\x36.seigr.ClusterCommunicationErrorLog.ErrorMetadataEntry\x1a\x34\n\x12\x45rrorMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"K\n\x12\x43lusterResponseAck\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x0f\n\x07message\x18\x02 \x01(\t\x12\x13\n\x0bresponse_id\x18\x03 \x01(\t\",\n\x15TransferStatusRequest\x12\x13\n\x0btransfer_id\x18\x01 \x01(\t\"S\n\x19\x43ommunicationErrorRequest\x12\x36\n\terror_log\x18\x01 \x01(\x0b\x32#.seigr.ClusterCommunicationErrorLog\">\n\x1a\x43ommunicationErrorResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x0f\n\x07message\x18\x02 \x01(\t\"]\n ClusterEventSubscriptionResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x17\n\x0fsubscription_id\x18\x02 \x01(\t\x12\x0f\n\x07message\x18\x03 \x01(\t*\x9e\x01\n\x12\x43lusterRequestType\x12\x1a\n\x16REQUEST_TYPE_UNDEFINED\x10\x00\x12\x14\n\x10REQUEST_RESOURCE\x10\x01\x12\x10\n\x0cREQUEST_DATA\x10\x02\x12\x1c\n\x18REQUEST_WORKLOAD_BALANCE\x10\x03\x12\x12\n\x0eREQUEST_STATUS\x10\x04\x12\x12\n\x0eREQUEST_CUSTOM\x10\x05*\xc3\x01\n\x13\x43lusterResponseType\x12\x1b\n\x17RESPONSE_TYPE_UNDEFINED\x10\x00\x12\x19\n\x15RESPONSE_ACKNOWLEDGED\x10\x01\x12\x1b\n\x17RESPONSE_DATA_DELIVERED\x10\x02\x12\x15\n\x11RESPONSE_ACCEPTED\x10\x03\x12\x15\n\x11RESPONSE_DECLINED\x10\x04\x12\x14\n\x10RESPONSE_PENDING\x10\x05\x12\x13\n\x0fRESPONSE_FAILED\x10\x06\x32\x8e\x04\n InterClusterCommunicationService\x12\x43\n\x12SendClusterRequest\x12\x15.seigr.ClusterRequest\x1a\x16.seigr.ClusterResponse\x12O\n\x1a\x41\x63knowledgeClusterResponse\x12\x16.seigr.ClusterResponse\x1a\x19.seigr.ClusterResponseAck\x12\x42\n\x14InitiateDataTransfer\x12\x13.seigr.DataTransfer\x1a\x15.seigr.TransferStatus\x12L\n\x15MonitorTransferStatus\x12\x1c.seigr.TransferStatusRequest\x1a\x15.seigr.TransferStatus\x12\\\n\x15LogCommunicationError\x12 .seigr.CommunicationErrorRequest\x1a!.seigr.CommunicationErrorResponse\x12\x64\n\x18SubscribeToClusterEvents\x12\x1f.seigr.ClusterEventSubscription\x1a\'.seigr.ClusterEventSubscriptionResponseb\x06proto3')
   |                                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E501
28 | 
29 | _globals = globals()
   |

src/seigr_protocol/compiled/interpretation_pb2.py:7:1: I001 [*] Import block is un-sorted or un-formatted
   |
 5 |   # Protobuf Python Version: 5.29.2
 6 |   """Generated protocol buffer code."""
 7 | / from google.protobuf import descriptor as _descriptor
 8 | | from google.protobuf import descriptor_pool as _descriptor_pool
 9 | | from google.protobuf import runtime_version as _runtime_version
10 | | from google.protobuf import symbol_database as _symbol_database
11 | | from google.protobuf.internal import builder as _builder
12 | | _runtime_version.ValidateProtobufRuntimeVersion(
   | |_^ I001
13 |       _runtime_version.Domain.PUBLIC,
14 |       5,
   |
   = help: Organize imports

src/seigr_protocol/compiled/interpretation_pb2.py:25:1: E402 Module level import not at top of file
   |
25 | import access_control_pb2 as access__control__pb2
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E402
   |

src/seigr_protocol/compiled/interpretation_pb2.py:25:1: I001 [*] Import block is un-sorted or un-formatted
   |
25 | / import access_control_pb2 as access__control__pb2
26 | | 
27 | | 
28 | | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x14interpretation.proto\x12\x05seigr\x1a\x14\x61\x63\x63\x65ss_control.proto\"\x89\x05\n\x14InterpretationResult\x12+\n\x06status\x18\x01 \x01(\x0e\x32\x1b.seigr.InterpretationStatus\x12\x0f\n\x07message\x18\x02 \x01(\t\x12\x11\n\ttimestamp\x18\x03 \x01(\t\x12\x1b\n\x13interpreted_version\x18\x04 \x01(\t\x12H\n\x0f\x61\x64\x64itional_info\x18\x05 \x03(\x0b\x32/.seigr.InterpretationResult.AdditionalInfoEntry\x12\x16\n\x0einterpreter_id\x18\x06 \x01(\t\x12\x1a\n\x12requires_attention\x18\x07 \x01(\x08\x12\x42\n\x0clinked_files\x18\x08 \x03(\x0b\x32,.seigr.InterpretationResult.LinkedFilesEntry\x12\x16\n\x0esource_data_id\x18\t \x01(\t\x12\x16\n\x0epriority_level\x18\n \x01(\x05\x12T\n\x15\x63ontextual_conditions\x18\x0b \x03(\x0b\x32\x35.seigr.InterpretationResult.ContextualConditionsEntry\x12\x13\n\x0b\x65rror_codes\x18\x0c \x03(\t\x1a\x35\n\x13\x41\x64\x64itionalInfoEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x32\n\x10LinkedFilesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a;\n\x19\x43ontextualConditionsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xbb\x04\n\tAccessLog\x12\x11\n\thyphen_id\x18\x01 \x01(\t\x12&\n\x0b\x61\x63\x63\x65ss_type\x18\x02 \x01(\x0e\x32\x11.seigr.AccessType\x12\x11\n\ttimestamp\x18\x03 \x01(\t\x12\x18\n\x10metadata_version\x18\x04 \x01(\t\x12\x0f\n\x07success\x18\x05 \x01(\x08\x12\x0f\n\x07\x64\x65tails\x18\x06 \x01(\t\x12\x0f\n\x07user_id\x18\x07 \x01(\t\x12\x30\n\x08metadata\x18\x08 \x03(\x0b\x32\x1e.seigr.AccessLog.MetadataEntry\x12\x17\n\x0f\x61\x63\x63\x65ss_location\x18\t \x01(\t\x12\x41\n\x11\x61\x63\x63\x65ss_conditions\x18\n \x03(\x0b\x32&.seigr.AccessLog.AccessConditionsEntry\x12\x13\n\x0bresult_code\x18\x0b \x01(\x05\x12I\n\x15\x65nvironmental_factors\x18\x0c \x03(\x0b\x32*.seigr.AccessLog.EnvironmentalFactorsEntry\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x37\n\x15\x41\x63\x63\x65ssConditionsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a;\n\x19\x45nvironmentalFactorsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xb9\x03\n\x12\x43ompatibilityCheck\x12\x18\n\x10metadata_version\x18\x01 \x01(\t\x12\x18\n\x10protocol_version\x18\x02 \x01(\t\x12\x1b\n\x13\x63ompatible_versions\x18\x03 \x03(\t\x12\x15\n\ris_compatible\x18\x04 \x01(\x08\x12\x0f\n\x07message\x18\x05 \x01(\t\x12\x1a\n\x12recommended_action\x18\x06 \x01(\t\x12\x15\n\rlast_verified\x18\x07 \x01(\t\x12\x18\n\x10\x66\x61llback_version\x18\x08 \x01(\t\x12N\n\x13\x63ompatibility_notes\x18\t \x03(\x0b\x32\x31.seigr.CompatibilityCheck.CompatibilityNotesEntry\x12\x1f\n\x17\x64\x65pendency_requirements\x18\n \x03(\t\x12\x18\n\x10\x66\x61llback_options\x18\x0b \x03(\t\x12\x17\n\x0frequires_update\x18\x0c \x01(\x08\x1a\x39\n\x17\x43ompatibilityNotesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x9a\x05\n\x13\x43\x61pabilityExpansion\x12\x16\n\x0etarget_version\x18\x01 \x01(\t\x12!\n\x19\x61\x64vanced_metadata_enabled\x18\x02 \x01(\x08\x12!\n\x19\x65nhanced_encoding_enabled\x18\x03 \x01(\x08\x12W\n\x17\x61\x64\x64itional_capabilities\x18\x04 \x03(\x0b\x32\x36.seigr.CapabilityExpansion.AdditionalCapabilitiesEntry\x12\x1b\n\x13\x65xpansion_timestamp\x18\x05 \x01(\t\x12\x14\n\x0c\x64\x65pendencies\x18\x06 \x03(\t\x12\x13\n\x0b\x65xpanded_by\x18\x07 \x01(\t\x12K\n\x11\x65xpansion_context\x18\x08 \x03(\x0b\x32\x30.seigr.CapabilityExpansion.ExpansionContextEntry\x12\x17\n\x0fis_experimental\x18\t \x01(\x08\x12\x1a\n\x12\x64\x65precation_notice\x18\n \x01(\t\x12O\n\x13\x66uture_capabilities\x18\x0b \x03(\x0b\x32\x32.seigr.CapabilityExpansion.FutureCapabilitiesEntry\x1a=\n\x1b\x41\x64\x64itionalCapabilitiesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x37\n\x15\x45xpansionContextEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x39\n\x17\x46utureCapabilitiesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01*\xbc\x01\n\x14InterpretationStatus\x12#\n\x1fINTERPRETATION_STATUS_UNDEFINED\x10\x00\x12\x1a\n\x16INTERPRETATION_SUCCESS\x10\x01\x12\x1a\n\x16INTERPRETATION_WARNING\x10\x02\x12\x18\n\x14INTERPRETATION_ERROR\x10\x03\x12\x18\n\x14INCOMPATIBLE_VERSION\x10\x04\x12\x13\n\x0fPARTIAL_SUCCESS\x10\x05\x62\x06proto3')
   | |_^ I001
29 |   
30 |   _globals = globals()
   |
   = help: Organize imports

src/seigr_protocol/compiled/interpretation_pb2.py:25:30: F401 [*] `access_control_pb2` imported but unused
   |
25 | import access_control_pb2 as access__control__pb2
   |                              ^^^^^^^^^^^^^^^^^^^^ F401
   |
   = help: Remove unused import: `access_control_pb2`

src/seigr_protocol/compiled/interpretation_pb2.py:28:101: E501 Line too long (4549 > 100)
   |
28 | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x14interpretation.proto\x12\x05seigr\x1a\x14\x61\x63\x63\x65ss_control.proto\"\x89\x05\n\x14InterpretationResult\x12+\n\x06status\x18\x01 \x01(\x0e\x32\x1b.seigr.InterpretationStatus\x12\x0f\n\x07message\x18\x02 \x01(\t\x12\x11\n\ttimestamp\x18\x03 \x01(\t\x12\x1b\n\x13interpreted_version\x18\x04 \x01(\t\x12H\n\x0f\x61\x64\x64itional_info\x18\x05 \x03(\x0b\x32/.seigr.InterpretationResult.AdditionalInfoEntry\x12\x16\n\x0einterpreter_id\x18\x06 \x01(\t\x12\x1a\n\x12requires_attention\x18\x07 \x01(\x08\x12\x42\n\x0clinked_files\x18\x08 \x03(\x0b\x32,.seigr.InterpretationResult.LinkedFilesEntry\x12\x16\n\x0esource_data_id\x18\t \x01(\t\x12\x16\n\x0epriority_level\x18\n \x01(\x05\x12T\n\x15\x63ontextual_conditions\x18\x0b \x03(\x0b\x32\x35.seigr.InterpretationResult.ContextualConditionsEntry\x12\x13\n\x0b\x65rror_codes\x18\x0c \x03(\t\x1a\x35\n\x13\x41\x64\x64itionalInfoEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x32\n\x10LinkedFilesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a;\n\x19\x43ontextualConditionsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xbb\x04\n\tAccessLog\x12\x11\n\thyphen_id\x18\x01 \x01(\t\x12&\n\x0b\x61\x63\x63\x65ss_type\x18\x02 \x01(\x0e\x32\x11.seigr.AccessType\x12\x11\n\ttimestamp\x18\x03 \x01(\t\x12\x18\n\x10metadata_version\x18\x04 \x01(\t\x12\x0f\n\x07success\x18\x05 \x01(\x08\x12\x0f\n\x07\x64\x65tails\x18\x06 \x01(\t\x12\x0f\n\x07user_id\x18\x07 \x01(\t\x12\x30\n\x08metadata\x18\x08 \x03(\x0b\x32\x1e.seigr.AccessLog.MetadataEntry\x12\x17\n\x0f\x61\x63\x63\x65ss_location\x18\t \x01(\t\x12\x41\n\x11\x61\x63\x63\x65ss_conditions\x18\n \x03(\x0b\x32&.seigr.AccessLog.AccessConditionsEntry\x12\x13\n\x0bresult_code\x18\x0b \x01(\x05\x12I\n\x15\x65nvironmental_factors\x18\x0c \x03(\x0b\x32*.seigr.AccessLog.EnvironmentalFactorsEntry\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x37\n\x15\x41\x63\x63\x65ssConditionsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a;\n\x19\x45nvironmentalFactorsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xb9\x03\n\x12\x43ompatibilityCheck\x12\x18\n\x10metadata_version\x18\x01 \x01(\t\x12\x18\n\x10protocol_version\x18\x02 \x01(\t\x12\x1b\n\x13\x63ompatible_versions\x18\x03 \x03(\t\x12\x15\n\ris_compatible\x18\x04 \x01(\x08\x12\x0f\n\x07message\x18\x05 \x01(\t\x12\x1a\n\x12recommended_action\x18\x06 \x01(\t\x12\x15\n\rlast_verified\x18\x07 \x01(\t\x12\x18\n\x10\x66\x61llback_version\x18\x08 \x01(\t\x12N\n\x13\x63ompatibility_notes\x18\t \x03(\x0b\x32\x31.seigr.CompatibilityCheck.CompatibilityNotesEntry\x12\x1f\n\x17\x64\x65pendency_requirements\x18\n \x03(\t\x12\x18\n\x10\x66\x61llback_options\x18\x0b \x03(\t\x12\x17\n\x0frequires_update\x18\x0c \x01(\x08\x1a\x39\n\x17\x43ompatibilityNotesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x9a\x05\n\x13\x43\x61pabilityExpansion\x12\x16\n\x0etarget_version\x18\x01 \x01(\t\x12!\n\x19\x61\x64vanced_metadata_enabled\x18\x02 \x01(\x08\x12!\n\x19\x65nhanced_encoding_enabled\x18\x03 \x01(\x08\x12W\n\x17\x61\x64\x64itional_capabilities\x18\x04 \x03(\x0b\x32\x36.seigr.CapabilityExpansion.AdditionalCapabilitiesEntry\x12\x1b\n\x13\x65xpansion_timestamp\x18\x05 \x01(\t\x12\x14\n\x0c\x64\x65pendencies\x18\x06 \x03(\t\x12\x13\n\x0b\x65xpanded_by\x18\x07 \x01(\t\x12K\n\x11\x65xpansion_context\x18\x08 \x03(\x0b\x32\x30.seigr.CapabilityExpansion.ExpansionContextEntry\x12\x17\n\x0fis_experimental\x18\t \x01(\x08\x12\x1a\n\x12\x64\x65precation_notice\x18\n \x01(\t\x12O\n\x13\x66uture_capabilities\x18\x0b \x03(\x0b\x32\x32.seigr.CapabilityExpansion.FutureCapabilitiesEntry\x1a=\n\x1b\x41\x64\x64itionalCapabilitiesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x37\n\x15\x45xpansionContextEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x39\n\x17\x46utureCapabilitiesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01*\xbc\x01\n\x14InterpretationStatus\x12#\n\x1fINTERPRETATION_STATUS_UNDEFINED\x10\x00\x12\x1a\n\x16INTERPRETATION_SUCCESS\x10\x01\x12\x1a\n\x16INTERPRETATION_WARNING\x10\x02\x12\x18\n\x14INTERPRETATION_ERROR\x10\x03\x12\x18\n\x14INCOMPATIBLE_VERSION\x10\x04\x12\x13\n\x0fPARTIAL_SUCCESS\x10\x05\x62\x06proto3')
   |
29 | 
30 | _globals = globals()
   |

src/seigr_protocol/compiled/lineage_pb2.py:7:1: I001 [*] Import block is un-sorted or un-formatted
   |
 5 |   # Protobuf Python Version: 5.29.2
 6 |   """Generated protocol buffer code."""
 7 | / from google.protobuf import descriptor as _descriptor
 8 | | from google.protobuf import descriptor_pool as _descriptor_pool
 9 | | from google.protobuf import runtime_version as _runtime_version
10 | | from google.protobuf import symbol_database as _symbol_database
11 | | from google.protobuf.internal import builder as _builder
12 | | _runtime_version.ValidateProtobufRuntimeVersion(
   | |_^ I001
13 |       _runtime_version.Domain.PUBLIC,
14 |       5,
   |
   = help: Organize imports

src/seigr_protocol/compiled/lineage_pb2.py:27:101: E501 Line too long (3482 > 100)
   |
27 | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\rlineage.proto\x12\x05seigr\"\xa2\x05\n\x07Lineage\x12\x12\n\nlineage_id\x18\x01 \x01(\t\x12\x12\n\ncreator_id\x18\x02 \x01(\t\x12\x14\n\x0c\x63urrent_hash\x18\x03 \x01(\t\x12\x16\n\x0e\x66ormat_version\x18\x04 \x01(\t\x12(\n\x0clineage_type\x18\x05 \x01(\x0e\x32\x12.seigr.LineageType\x12$\n\x06status\x18\x06 \x01(\x0e\x32\x14.seigr.LineageStatus\x12$\n\x07\x65ntries\x18\x07 \x03(\x0b\x32\x13.seigr.LineageEntry\x12\x1a\n\x12integrity_checksum\x18\x08 \x01(\t\x12.\n\x08metadata\x18\t \x03(\x0b\x32\x1c.seigr.Lineage.MetadataEntry\x12\x19\n\x11parent_lineage_id\x18\n \x01(\t\x12\x19\n\x11\x61rchive_timestamp\x18\x0b \x01(\t\x12\x18\n\x10\x61ssociated_files\x18\x0c \x03(\t\x12\x1c\n\x14network_reference_id\x18\r \x01(\t\x12\x1a\n\x12\x61\x63\x63\x65ss_permissions\x18\x0e \x03(\t\x12\x17\n\x0flinked_lineages\x18\x0f \x03(\t\x12\x15\n\rlast_modified\x18\x10 \x01(\t\x12?\n\x11\x61\x64\x61ptive_triggers\x18\x11 \x03(\x0b\x32$.seigr.Lineage.AdaptiveTriggersEntry\x12\x1a\n\x12\x64\x65precation_policy\x18\x12 \x01(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x37\n\x15\x41\x64\x61ptiveTriggersEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xcb\x06\n\x0cLineageEntry\x12\x10\n\x08\x65ntry_id\x18\x01 \x01(\t\x12\x15\n\rentry_version\x18\x02 \x01(\t\x12$\n\nentry_type\x18\x03 \x01(\x0e\x32\x10.seigr.EntryType\x12\x0e\n\x06\x61\x63tion\x18\x04 \x01(\t\x12\x12\n\ncreator_id\x18\x05 \x01(\t\x12\x16\n\x0e\x63ontributor_id\x18\x06 \x01(\t\x12\x11\n\ttimestamp\x18\x07 \x01(\t\x12\x17\n\x0fprevious_hashes\x18\x08 \x03(\t\x12\x11\n\tparent_id\x18\t \x01(\t\x12\x15\n\revent_trigger\x18\n \x01(\t\x12\x33\n\x08metadata\x18\x0b \x03(\x0b\x32!.seigr.LineageEntry.MetadataEntry\x12\x16\n\x0e\x65ntry_checksum\x18\x0c \x01(\t\x12\x1d\n\x15\x65xternal_reference_id\x18\r \x01(\t\x12\x16\n\x0e\x64\x65pendency_ids\x18\x0e \x03(\t\x12:\n\x0c\x63ontext_data\x18\x0f \x03(\x0b\x32$.seigr.LineageEntry.ContextDataEntry\x12\x18\n\x10\x61ssociated_files\x18\x10 \x03(\t\x12\x1c\n\x14\x61\x64\x61ptive_update_flag\x18\x11 \x01(\x08\x12$\n\x1c\x63onflict_resolution_strategy\x18\x12 \x01(\t\x12\x1d\n\x15resolved_dependencies\x18\x13 \x03(\t\x12\x16\n\x0erevision_notes\x18\x14 \x01(\t\x12H\n\x13\x61\x64\x61ptive_conditions\x18\x15 \x03(\x0b\x32+.seigr.LineageEntry.AdaptiveConditionsEntry\x12\x1b\n\x13rollback_checkpoint\x18\x16 \x01(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x32\n\x10\x43ontextDataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x39\n\x17\x41\x64\x61ptiveConditionsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01*C\n\x0bLineageType\x12\x0c\n\x08STANDARD\x10\x00\x12\x0c\n\x08\x42RANCHED\x10\x01\x12\n\n\x06MERGED\x10\x02\x12\x0c\n\x08\x41RCHIVED\x10\x03*~\n\tEntryType\x12\x0c\n\x08\x43REATION\x10\x00\x12\x10\n\x0cMODIFICATION\x10\x01\x12\t\n\x05MERGE\x10\x02\x12\x0c\n\x08\x44\x45LETION\x10\x03\x12\x08\n\x04\x46ORK\x10\x04\x12\x0b\n\x07RESTORE\x10\x05\x12\x0c\n\x08SNAPSHOT\x10\x06\x12\x13\n\x0f\x41\x44\x41PTIVE_UPDATE\x10\x07*\x80\x01\n\rLineageStatus\x12\x1c\n\x18LINEAGE_STATUS_UNDEFINED\x10\x00\x12\x12\n\x0eLINEAGE_ACTIVE\x10\x01\x12\x14\n\x10LINEAGE_ARCHIVED\x10\x02\x12\x12\n\x0eLINEAGE_LOCKED\x10\x03\x12\x13\n\x0fLINEAGE_RETIRED\x10\x04\x62\x06proto3')
   |
28 | 
29 | _globals = globals()
   |

src/seigr_protocol/compiled/machine_learning_pb2.py:7:1: I001 [*] Import block is un-sorted or un-formatted
   |
 5 |   # Protobuf Python Version: 5.29.2
 6 |   """Generated protocol buffer code."""
 7 | / from google.protobuf import descriptor as _descriptor
 8 | | from google.protobuf import descriptor_pool as _descriptor_pool
 9 | | from google.protobuf import runtime_version as _runtime_version
10 | | from google.protobuf import symbol_database as _symbol_database
11 | | from google.protobuf.internal import builder as _builder
12 | | _runtime_version.ValidateProtobufRuntimeVersion(
   | |_^ I001
13 |       _runtime_version.Domain.PUBLIC,
14 |       5,
   |
   = help: Organize imports

src/seigr_protocol/compiled/machine_learning_pb2.py:27:101: E501 Line too long (5560 > 100)
   |
27 | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x16machine_learning.proto\x12\x05seigr\"\xf2\x01\n\x10MultiModalConfig\x12)\n\x0binput_types\x18\x01 \x03(\x0e\x32\x14.seigr.DataInputType\x12P\n\x15processing_parameters\x18\x02 \x03(\x0b\x32\x31.seigr.MultiModalConfig.ProcessingParametersEntry\x12$\n\x1c\x65nable_cross_modal_attention\x18\x03 \x01(\x08\x1a;\n\x19ProcessingParametersEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xc9\x03\n\x07MLModel\x12\x10\n\x08model_id\x18\x01 \x01(\t\x12&\n\nmodel_type\x18\x02 \x01(\x0e\x32\x12.seigr.MLModelType\x12\x0f\n\x07version\x18\x03 \x01(\t\x12\x12\n\ncreated_at\x18\x04 \x01(\t\x12\x12\n\ncreated_by\x18\x05 \x01(\t\x12\x14\n\x0cmodel_format\x18\x06 \x01(\t\x12<\n\x0fhyperparameters\x18\x07 \x03(\x0b\x32#.seigr.MLModel.HyperparametersEntry\x12\x33\n\x12multi_modal_config\x18\x08 \x01(\x0b\x32\x17.seigr.MultiModalConfig\x12\x19\n\x11senary_compatible\x18\t \x01(\x08\x12\x39\n\x0emodel_metadata\x18\n \x03(\x0b\x32!.seigr.MLModel.ModelMetadataEntry\x1a\x36\n\x14HyperparametersEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x34\n\x12ModelMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xdc\x02\n\x0eTrainingConfig\x12\x10\n\x08model_id\x18\x01 \x01(\t\x12\x0e\n\x06\x65pochs\x18\x02 \x01(\x05\x12\x12\n\nbatch_size\x18\x03 \x01(\x05\x12\x15\n\rlearning_rate\x18\x04 \x01(\x01\x12\x0f\n\x07use_gpu\x18\x05 \x01(\x08\x12\x11\n\toptimizer\x18\x06 \x01(\t\x12\x46\n\x11training_metadata\x18\x07 \x03(\x0b\x32+.seigr.TrainingConfig.TrainingMetadataEntry\x12\x1b\n\x13training_dataset_id\x18\x08 \x01(\t\x12 \n\x18\x65nable_transfer_learning\x18\t \x01(\x08\x12\x19\n\x11\x61\x64\x61ptive_learning\x18\n \x01(\x08\x1a\x37\n\x15TrainingMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"^\n\x16\x45valuationMetricResult\x12.\n\x0bmetric_type\x18\x01 \x01(\x0e\x32\x19.seigr.MLEvaluationMetric\x12\x14\n\x0cmetric_value\x18\x02 \x01(\x01\"\xaf\x02\n\x0eTrainingResult\x12\x10\n\x08model_id\x18\x01 \x01(\t\x12\'\n\x06status\x18\x02 \x01(\x0e\x32\x17.seigr.MLTrainingStatus\x12.\n\x07metrics\x18\x03 \x03(\x0b\x32\x1d.seigr.EvaluationMetricResult\x12\x14\n\x0c\x63ompleted_at\x18\x04 \x01(\t\x12\x42\n\x0fresult_metadata\x18\x05 \x03(\x0b\x32).seigr.TrainingResult.ResultMetadataEntry\x12!\n\x19training_duration_seconds\x18\x06 \x01(\x02\x1a\x35\n\x13ResultMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xc5\x01\n\x11PredictionRequest\x12\x10\n\x08model_id\x18\x01 \x01(\t\x12\x12\n\ninput_data\x18\x02 \x03(\x0c\x12\x15\n\rasync_request\x18\x03 \x01(\x08\x12?\n\x0c\x63ontext_data\x18\x04 \x03(\x0b\x32).seigr.PredictionRequest.ContextDataEntry\x1a\x32\n\x10\x43ontextDataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xc1\x01\n\x12PredictionResponse\x12\x10\n\x08model_id\x18\x01 \x01(\t\x12\x18\n\x10predicted_labels\x18\x02 \x03(\t\x12\x18\n\x10predicted_values\x18\x03 \x03(\x01\x12\x0f\n\x07success\x18\x04 \x01(\x08\x12\x15\n\rerror_message\x18\x05 \x01(\t\x12\x1d\n\x15prediction_confidence\x18\x06 \x01(\x02\x12\x1e\n\x16prediction_explanation\x18\x07 \x01(\t\"\xca\x02\n\x13ModelPerformanceLog\x12\x10\n\x08model_id\x18\x01 \x01(\t\x12.\n\x07metrics\x18\x02 \x03(\x0b\x32\x1d.seigr.EvaluationMetricResult\x12\x18\n\x10\x64\x61ta_drift_score\x18\x03 \x01(\x02\x12\x19\n\x11model_drift_score\x18\x04 \x01(\x02\x12\x14\n\x0c\x64rift_alerts\x18\x05 \x03(\t\x12Q\n\x14performance_metadata\x18\x06 \x03(\x0b\x32\x33.seigr.ModelPerformanceLog.PerformanceMetadataEntry\x12\x17\n\x0f\x63ontext_factors\x18\x07 \x03(\t\x1a:\n\x18PerformanceMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01*\xc1\x02\n\x0bMLModelType\x12\x1b\n\x17ML_MODEL_TYPE_UNDEFINED\x10\x00\x12 \n\x1cML_MODEL_TYPE_CLASSIFICATION\x10\x01\x12\x1c\n\x18ML_MODEL_TYPE_REGRESSION\x10\x02\x12\x1c\n\x18ML_MODEL_TYPE_CLUSTERING\x10\x03\x12\x1d\n\x19ML_MODEL_TYPE_RECOMMENDER\x10\x04\x12\x15\n\x11ML_MODEL_TYPE_NLP\x10\x05\x12\x1f\n\x1bML_MODEL_TYPE_DEEP_LEARNING\x10\x06\x12#\n\x1fML_MODEL_TYPE_ANOMALY_DETECTION\x10\x07\x12\x1c\n\x18ML_MODEL_TYPE_GENERATIVE\x10\x08\x12\x1d\n\x19ML_MODEL_TYPE_MULTI_MODAL\x10\t*\xda\x01\n\rDataInputType\x12\x1d\n\x19\x44\x41TA_INPUT_TYPE_UNDEFINED\x10\x00\x12\x18\n\x14\x44\x41TA_INPUT_TYPE_TEXT\x10\x01\x12\x19\n\x15\x44\x41TA_INPUT_TYPE_AUDIO\x10\x02\x12\x19\n\x15\x44\x41TA_INPUT_TYPE_IMAGE\x10\x03\x12\x19\n\x15\x44\x41TA_INPUT_TYPE_VIDEO\x10\x04\x12\x1a\n\x16\x44\x41TA_INPUT_TYPE_SENSOR\x10\x05\x12#\n\x1f\x44\x41TA_INPUT_TYPE_STRUCTURED_DATA\x10\x06*\xdc\x01\n\x10MLTrainingStatus\x12 \n\x1cML_TRAINING_STATUS_UNDEFINED\x10\x00\x12\"\n\x1eML_TRAINING_STATUS_IN_PROGRESS\x10\x01\x12 \n\x1cML_TRAINING_STATUS_COMPLETED\x10\x02\x12\x1d\n\x19ML_TRAINING_STATUS_FAILED\x10\x03\x12\x1e\n\x1aML_TRAINING_STATUS_PENDING\x10\x04\x12!\n\x1dML_TRAINING_STATUS_CONTINUOUS\x10\x05*\xe1\x02\n\x12MLEvaluationMetric\x12\"\n\x1eML_EVALUATION_METRIC_UNDEFINED\x10\x00\x12!\n\x1dML_EVALUATION_METRIC_ACCURACY\x10\x01\x12\"\n\x1eML_EVALUATION_METRIC_PRECISION\x10\x02\x12\x1f\n\x1bML_EVALUATION_METRIC_RECALL\x10\x03\x12!\n\x1dML_EVALUATION_METRIC_F1_SCORE\x10\x04\x12\x1c\n\x18ML_EVALUATION_METRIC_MSE\x10\x05\x12\x1c\n\x18ML_EVALUATION_METRIC_MAE\x10\x06\x12\x1c\n\x18ML_EVALUATION_METRIC_AUC\x10\x07\x12\x1d\n\x19ML_EVALUATION_METRIC_RMSE\x10\x08\x12#\n\x1fML_EVALUATION_METRIC_SILHOUETTE\x10\tb\x06proto3')
   |
28 | 
29 | _globals = globals()
   |

src/seigr_protocol/compiled/monitoring_pb2.py:7:1: I001 [*] Import block is un-sorted or un-formatted
   |
 5 |   # Protobuf Python Version: 5.29.2
 6 |   """Generated protocol buffer code."""
 7 | / from google.protobuf import descriptor as _descriptor
 8 | | from google.protobuf import descriptor_pool as _descriptor_pool
 9 | | from google.protobuf import runtime_version as _runtime_version
10 | | from google.protobuf import symbol_database as _symbol_database
11 | | from google.protobuf.internal import builder as _builder
12 | | _runtime_version.ValidateProtobufRuntimeVersion(
   | |_^ I001
13 |       _runtime_version.Domain.PUBLIC,
14 |       5,
   |
   = help: Organize imports

src/seigr_protocol/compiled/monitoring_pb2.py:25:1: E402 Module level import not at top of file
   |
25 | import common_pb2 as common__pb2
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E402
   |

src/seigr_protocol/compiled/monitoring_pb2.py:25:1: I001 [*] Import block is un-sorted or un-formatted
   |
25 | / import common_pb2 as common__pb2
26 | | 
27 | | 
28 | | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x10monitoring.proto\x12\x05seigr\x1a\x0c\x63ommon.proto\"\xe5\x04\n\nEscalation\x12\x15\n\rescalation_id\x18\x01 \x01(\t\x12\x14\n\x0csegment_hash\x18\x02 \x01(\t\x12(\n\x0cthreat_level\x18\x03 \x01(\x0e\x32\x12.seigr.ThreatLevel\x12.\n\x0f\x65scalation_type\x18\x04 \x01(\x0e\x32\x15.seigr.EscalationType\x12\x14\n\x0c\x65scalated_at\x18\x05 \x01(\t\x12\x1d\n\x15replication_triggered\x18\x06 \x01(\x08\x12\x19\n\x11\x65scalation_reason\x18\x07 \x01(\t\x12\x18\n\x10\x61lert_recipients\x18\x08 \x03(\t\x12\x31\n\x08metadata\x18\t \x03(\x0b\x32\x1f.seigr.Escalation.MetadataEntry\x12\x17\n\x0fresponse_status\x18\n \x01(\t\x12\x14\n\x0cresponder_id\x18\x0b \x01(\t\x12\x1c\n\x14resolution_timestamp\x18\x0c \x01(\t\x12\x18\n\x10response_details\x18\r \x01(\t\x12\x1d\n\x15next_review_timestamp\x18\x0e \x01(\t\x12\x34\n\x12\x65scalation_history\x18\x0f \x03(\x0b\x32\x18.seigr.EscalationHistory\x12\"\n\x1a\x63ritical_protocol_override\x18\x10 \x01(\x08\x12\"\n\x1auser_intervention_required\x18\x11 \x01(\x08\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xb0\x02\n\x11\x45scalationHistory\x12\x11\n\tupdate_id\x18\x01 \x01(\t\x12\x11\n\ttimestamp\x18\x02 \x01(\t\x12\x0e\n\x06status\x18\x03 \x01(\t\x12\x14\n\x0c\x61\x63tion_taken\x18\x04 \x01(\t\x12\x12\n\nupdated_by\x18\x05 \x01(\t\x12\x45\n\x0f\x61\x64\x64itional_info\x18\x06 \x03(\x0b\x32,.seigr.EscalationHistory.AdditionalInfoEntry\x12\x1c\n\x14\x61\x64\x61ptive_action_flag\x18\x07 \x01(\x08\x12\x1f\n\x17threat_escalation_score\x18\x08 \x01(\x02\x1a\x35\n\x13\x41\x64\x64itionalInfoEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xaf\x05\n\x10MonitoringConfig\x12\x1a\n\x12\x63ritical_threshold\x18\x01 \x01(\x05\x12\x18\n\x10severe_threshold\x18\x02 \x01(\x05\x12\x1a\n\x12moderate_threshold\x18\x03 \x01(\x05\x12\'\n\x1f\x61\x64\x61ptive_check_interval_seconds\x18\x04 \x01(\x05\x12\x1f\n\x17\x61lert_frequency_minutes\x18\x05 \x01(\x05\x12\x1c\n\x14\x65nable_auto_lockdown\x18\x06 \x01(\x08\x12\x44\n\x0f\x63onfig_metadata\x18\x07 \x03(\x0b\x32+.seigr.MonitoringConfig.ConfigMetadataEntry\x12\x16\n\x0e\x63onfig_version\x18\x08 \x01(\t\x12\x14\n\x0clast_updated\x18\t \x01(\t\x12\x1f\n\x17\x65nable_severity_scaling\x18\n \x01(\x08\x12!\n\x19\x64\x65\x66\x61ult_response_strategy\x18\x0b \x01(\t\x12\x1d\n\x15\x64ynamic_alert_scaling\x18\x0c \x01(\x08\x12\x19\n\x11\x66\x61llback_strategy\x18\r \x01(\t\x12\x1d\n\x15\x64\x61ta_volume_threshold\x18\x0e \x01(\x05\x12*\n\"high_frequency_monitoring_interval\x18\x0f \x01(\x05\x12%\n\x1d\x61\x64\x61ptive_threshold_adjustment\x18\x10 \x01(\x02\x12\"\n\x1a\x65nable_centralized_logging\x18\x11 \x01(\x08\x12\"\n\x1aprioritize_high_risk_zones\x18\x12 \x01(\x08\x1a\x35\n\x13\x43onfigMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xc5\x05\n\x15\x41\x64\x61ptiveMonitoringLog\x12\x0e\n\x06log_id\x18\x01 \x01(\t\x12\x19\n\x11monitored_segment\x18\x02 \x01(\t\x12\x31\n\x15\x64\x65tected_threat_level\x18\x03 \x01(\x0e\x32\x12.seigr.ThreatLevel\x12\x17\n\x0f\x63heck_timestamp\x18\x04 \x01(\t\x12\x1c\n\x14triggered_escalation\x18\x05 \x01(\x08\x12\x15\n\rescalation_id\x18\x06 \x01(\t\x12\x43\n\x0clog_metadata\x18\x07 \x03(\x0b\x32-.seigr.AdaptiveMonitoringLog.LogMetadataEntry\x12\x1d\n\x15response_action_taken\x18\x08 \x01(\t\x12\x1c\n\x14next_check_scheduled\x18\t \x01(\t\x12\x1a\n\x12\x64\x65tection_accuracy\x18\n \x01(\x02\x12\x1b\n\x13monitoring_operator\x18\x0b \x01(\t\x12Q\n\x13\x61\x64\x61ptive_parameters\x18\x0c \x03(\x0b\x32\x34.seigr.AdaptiveMonitoringLog.AdaptiveParametersEntry\x12$\n\x1c\x65scalation_probability_score\x18\r \x01(\x02\x12!\n\x19protocol_adjustment_notes\x18\x0e \x01(\t\x12\x16\n\x0e\x64\x61ta_source_id\x18\x0f \x01(\t\x12\"\n\x1aproactive_response_enabled\x18\x10 \x01(\x08\x1a\x32\n\x10LogMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x39\n\x17\x41\x64\x61ptiveParametersEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xe9\x05\n\x16MonitoringCycleSummary\x12\x12\n\nsummary_id\x18\x01 \x01(\t\x12\x17\n\x0f\x63ycle_timestamp\x18\x02 \x01(\t\x12\x1e\n\x16total_checks_conducted\x18\x03 \x01(\x05\x12\x1d\n\x15\x65scalations_triggered\x18\x04 \x01(\x05\x12\x1b\n\x13\x63ritical_detections\x18\x05 \x01(\x05\x12\"\n\x1a\x61verage_detection_accuracy\x18\x06 \x01(\x02\x12\x1c\n\x14highlighted_segments\x18\x07 \x03(\t\x12H\n\x0e\x63ycle_metadata\x18\x08 \x03(\x0b\x32\x30.seigr.MonitoringCycleSummary.CycleMetadataEntry\x12\x1c\n\x14next_cycle_scheduled\x18\t \x01(\t\x12!\n\x19\x61\x64\x61ptive_measures_applied\x18\n \x01(\x08\x12P\n\x12\x65scalation_summary\x18\x0b \x03(\x0b\x32\x34.seigr.MonitoringCycleSummary.EscalationSummaryEntry\x12[\n\x18\x64\x65tection_trend_analysis\x18\x0c \x03(\x0b\x32\x39.seigr.MonitoringCycleSummary.DetectionTrendAnalysisEntry\x12\x1b\n\x13\x63ycle_summary_notes\x18\r \x01(\t\x1a\x34\n\x12\x43ycleMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x38\n\x16\x45scalationSummaryEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x05:\x02\x38\x01\x1a=\n\x1b\x44\x65tectionTrendAnalysisEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x02:\x02\x38\x01*\xf5\x01\n\x0e\x45scalationType\x12\x1d\n\x19\x45SCALATION_TYPE_UNDEFINED\x10\x00\x12&\n\"ESCALATION_TYPE_THREAT_REPLICATION\x10\x01\x12\x1e\n\x1a\x45SCALATION_TYPE_ALERT_ONLY\x10\x02\x12#\n\x1f\x45SCALATION_TYPE_SYSTEM_LOCKDOWN\x10\x03\x12,\n(ESCALATION_TYPE_ADAPTIVE_RECONFIGURATION\x10\x04\x12)\n%ESCALATION_TYPE_USER_ALERT_ESCALATION\x10\x05\x62\x06proto3')
   | |_^ I001
29 |   
30 |   _globals = globals()
   |
   = help: Organize imports

src/seigr_protocol/compiled/monitoring_pb2.py:25:22: F401 [*] `common_pb2` imported but unused
   |
25 | import common_pb2 as common__pb2
   |                      ^^^^^^^^^^^ F401
   |
   = help: Remove unused import: `common_pb2`

src/seigr_protocol/compiled/monitoring_pb2.py:28:101: E501 Line too long (5773 > 100)
   |
28 | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x10monitoring.proto\x12\x05seigr\x1a\x0c\x63ommon.proto\"\xe5\x04\n\nEscalation\x12\x15\n\rescalation_id\x18\x01 \x01(\t\x12\x14\n\x0csegment_hash\x18\x02 \x01(\t\x12(\n\x0cthreat_level\x18\x03 \x01(\x0e\x32\x12.seigr.ThreatLevel\x12.\n\x0f\x65scalation_type\x18\x04 \x01(\x0e\x32\x15.seigr.EscalationType\x12\x14\n\x0c\x65scalated_at\x18\x05 \x01(\t\x12\x1d\n\x15replication_triggered\x18\x06 \x01(\x08\x12\x19\n\x11\x65scalation_reason\x18\x07 \x01(\t\x12\x18\n\x10\x61lert_recipients\x18\x08 \x03(\t\x12\x31\n\x08metadata\x18\t \x03(\x0b\x32\x1f.seigr.Escalation.MetadataEntry\x12\x17\n\x0fresponse_status\x18\n \x01(\t\x12\x14\n\x0cresponder_id\x18\x0b \x01(\t\x12\x1c\n\x14resolution_timestamp\x18\x0c \x01(\t\x12\x18\n\x10response_details\x18\r \x01(\t\x12\x1d\n\x15next_review_timestamp\x18\x0e \x01(\t\x12\x34\n\x12\x65scalation_history\x18\x0f \x03(\x0b\x32\x18.seigr.EscalationHistory\x12\"\n\x1a\x63ritical_protocol_override\x18\x10 \x01(\x08\x12\"\n\x1auser_intervention_required\x18\x11 \x01(\x08\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xb0\x02\n\x11\x45scalationHistory\x12\x11\n\tupdate_id\x18\x01 \x01(\t\x12\x11\n\ttimestamp\x18\x02 \x01(\t\x12\x0e\n\x06status\x18\x03 \x01(\t\x12\x14\n\x0c\x61\x63tion_taken\x18\x04 \x01(\t\x12\x12\n\nupdated_by\x18\x05 \x01(\t\x12\x45\n\x0f\x61\x64\x64itional_info\x18\x06 \x03(\x0b\x32,.seigr.EscalationHistory.AdditionalInfoEntry\x12\x1c\n\x14\x61\x64\x61ptive_action_flag\x18\x07 \x01(\x08\x12\x1f\n\x17threat_escalation_score\x18\x08 \x01(\x02\x1a\x35\n\x13\x41\x64\x64itionalInfoEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xaf\x05\n\x10MonitoringConfig\x12\x1a\n\x12\x63ritical_threshold\x18\x01 \x01(\x05\x12\x18\n\x10severe_threshold\x18\x02 \x01(\x05\x12\x1a\n\x12moderate_threshold\x18\x03 \x01(\x05\x12\'\n\x1f\x61\x64\x61ptive_check_interval_seconds\x18\x04 \x01(\x05\x12\x1f\n\x17\x61lert_frequency_minutes\x18\x05 \x01(\x05\x12\x1c\n\x14\x65nable_auto_lockdown\x18\x06 \x01(\x08\x12\x44\n\x0f\x63onfig_metadata\x18\x07 \x03(\x0b\x32+.seigr.MonitoringConfig.ConfigMetadataEntry\x12\x16\n\x0e\x63onfig_version\x18\x08 \x01(\t\x12\x14\n\x0clast_updated\x18\t \x01(\t\x12\x1f\n\x17\x65nable_severity_scaling\x18\n \x01(\x08\x12!\n\x19\x64\x65\x66\x61ult_response_strategy\x18\x0b \x01(\t\x12\x1d\n\x15\x64ynamic_alert_scaling\x18\x0c \x01(\x08\x12\x19\n\x11\x66\x61llback_strategy\x18\r \x01(\t\x12\x1d\n\x15\x64\x61ta_volume_threshold\x18\x0e \x01(\x05\x12*\n\"high_frequency_monitoring_interval\x18\x0f \x01(\x05\x12%\n\x1d\x61\x64\x61ptive_threshold_adjustment\x18\x10 \x01(\x02\x12\"\n\x1a\x65nable_centralized_logging\x18\x11 \x01(\x08\x12\"\n\x1aprioritize_high_risk_zones\x18\x12 \x01(\x08\x1a\x35\n\x13\x43onfigMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xc5\x05\n\x15\x41\x64\x61ptiveMonitoringLog\x12\x0e\n\x06log_id\x18\x01 \x01(\t\x12\x19\n\x11monitored_segment\x18\x02 \x01(\t\x12\x31\n\x15\x64\x65tected_threat_level\x18\x03 \x01(\x0e\x32\x12.seigr.ThreatLevel\x12\x17\n\x0f\x63heck_timestamp\x18\x04 \x01(\t\x12\x1c\n\x14triggered_escalation\x18\x05 \x01(\x08\x12\x15\n\rescalation_id\x18\x06 \x01(\t\x12\x43\n\x0clog_metadata\x18\x07 \x03(\x0b\x32-.seigr.AdaptiveMonitoringLog.LogMetadataEntry\x12\x1d\n\x15response_action_taken\x18\x08 \x01(\t\x12\x1c\n\x14next_check_scheduled\x18\t \x01(\t\x12\x1a\n\x12\x64\x65tection_accuracy\x18\n \x01(\x02\x12\x1b\n\x13monitoring_operator\x18\x0b \x01(\t\x12Q\n\x13\x61\x64\x61ptive_parameters\x18\x0c \x03(\x0b\x32\x34.seigr.AdaptiveMonitoringLog.AdaptiveParametersEntry\x12$\n\x1c\x65scalation_probability_score\x18\r \x01(\x02\x12!\n\x19protocol_adjustment_notes\x18\x0e \x01(\t\x12\x16\n\x0e\x64\x61ta_source_id\x18\x0f \x01(\t\x12\"\n\x1aproactive_response_enabled\x18\x10 \x01(\x08\x1a\x32\n\x10LogMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x39\n\x17\x41\x64\x61ptiveParametersEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xe9\x05\n\x16MonitoringCycleSummary\x12\x12\n\nsummary_id\x18\x01 \x01(\t\x12\x17\n\x0f\x63ycle_timestamp\x18\x02 \x01(\t\x12\x1e\n\x16total_checks_conducted\x18\x03 \x01(\x05\x12\x1d\n\x15\x65scalations_triggered\x18\x04 \x01(\x05\x12\x1b\n\x13\x63ritical_detections\x18\x05 \x01(\x05\x12\"\n\x1a\x61verage_detection_accuracy\x18\x06 \x01(\x02\x12\x1c\n\x14highlighted_segments\x18\x07 \x03(\t\x12H\n\x0e\x63ycle_metadata\x18\x08 \x03(\x0b\x32\x30.seigr.MonitoringCycleSummary.CycleMetadataEntry\x12\x1c\n\x14next_cycle_scheduled\x18\t \x01(\t\x12!\n\x19\x61\x64\x61ptive_measures_applied\x18\n \x01(\x08\x12P\n\x12\x65scalation_summary\x18\x0b \x03(\x0b\x32\x34.seigr.MonitoringCycleSummary.EscalationSummaryEntry\x12[\n\x18\x64\x65tection_trend_analysis\x18\x0c \x03(\x0b\x32\x39.seigr.MonitoringCycleSummary.DetectionTrendAnalysisEntry\x12\x1b\n\x13\x63ycle_summary_notes\x18\r \x01(\t\x1a\x34\n\x12\x43ycleMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x38\n\x16\x45scalationSummaryEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x05:\x02\x38\x01\x1a=\n\x1b\x44\x65tectionTrendAnalysisEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x02:\x02\x38\x01*\xf5\x01\n\x0e\x45scalationType\x12\x1d\n\x19\x45SCALATION_TYPE_UNDEFINED\x10\x00\x12&\n\"ESCALATION_TYPE_THREAT_REPLICATION\x10\x01\x12\x1e\n\x1a\x45SCALATION_TYPE_ALERT_ONLY\x10\x02\x12#\n\x1f\x45SCALATION_TYPE_SYSTEM_LOCKDOWN\x10\x03\x12,\n(ESCALATION_TYPE_ADAPTIVE_RECONFIGURATION\x10\x04\x12)\n%ESCALATION_TYPE_USER_ALERT_ESCALATION\x10\x05\x62\x06proto3')
   |
29 | 
30 | _globals = globals()
   |

src/seigr_protocol/compiled/mycelith_voting_pb2.py:7:1: I001 [*] Import block is un-sorted or un-formatted
   |
 5 |   # Protobuf Python Version: 5.29.2
 6 |   """Generated protocol buffer code."""
 7 | / from google.protobuf import descriptor as _descriptor
 8 | | from google.protobuf import descriptor_pool as _descriptor_pool
 9 | | from google.protobuf import runtime_version as _runtime_version
10 | | from google.protobuf import symbol_database as _symbol_database
11 | | from google.protobuf.internal import builder as _builder
12 | | _runtime_version.ValidateProtobufRuntimeVersion(
   | |_^ I001
13 |       _runtime_version.Domain.PUBLIC,
14 |       5,
   |
   = help: Organize imports

src/seigr_protocol/compiled/mycelith_voting_pb2.py:27:101: E501 Line too long (5898 > 100)
   |
27 | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x15mycelith_voting.proto\x12\x05seigr\"\x8d\x03\n\x0eVotingProposal\x12\x13\n\x0bproposal_id\x18\x01 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x02 \x01(\t\x12#\n\x06status\x18\x03 \x01(\x0e\x32\x13.seigr.VotingStatus\x12\"\n\x06layers\x18\x04 \x03(\x0b\x32\x12.seigr.VotingLayer\x12\x14\n\x0ctotal_layers\x18\x05 \x01(\r\x12%\n\x07outcome\x18\x06 \x01(\x0e\x32\x14.seigr.VotingOutcome\x12%\n\x06\x63onfig\x18\x07 \x01(\x0b\x32\x15.seigr.ProposalConfig\x12\x12\n\ncreated_by\x18\x08 \x01(\t\x12\x19\n\x11\x63reated_timestamp\x18\t \x01(\t\x12\x19\n\x11\x63losing_timestamp\x18\n \x01(\t\x12\x1d\n\x15outcome_justification\x18\x0b \x01(\t\x12\x1b\n\x13\x61ssociated_data_ids\x18\x0c \x03(\t\x12\x1e\n\x16requires_expert_review\x18\r \x01(\x08\"\xa5\x02\n\x0eProposalConfig\x12\x1d\n\x15\x62\x61se_influence_weight\x18\x01 \x01(\x01\x12\x1c\n\x14influence_multiplier\x18\x02 \x01(\x01\x12\x1a\n\x12\x63onsistency_factor\x18\x03 \x01(\x01\x12\x1a\n\x12min_layers_to_pass\x18\x04 \x01(\r\x12\x1e\n\x16required_participation\x18\x05 \x01(\r\x12\x1b\n\x13\x61\x64\x61ptive_thresholds\x18\x06 \x01(\x08\x12\x1c\n\x14participation_factor\x18\x07 \x01(\x01\x12\x19\n\x11\x65ngagement_factor\x18\x08 \x01(\x01\x12(\n enable_dynamic_layer_adjustments\x18\t \x01(\x08\"\xd6\x02\n\x0bVotingLayer\x12\x14\n\x0clayer_number\x18\x01 \x01(\r\x12\"\n\x06status\x18\x02 \x01(\x0e\x32\x12.seigr.LayerStatus\x12\x1a\n\x05votes\x18\x03 \x03(\x0b\x32\x0b.seigr.Vote\x12\x1d\n\x15layer_influence_total\x18\x04 \x01(\x01\x12\x1a\n\x12total_participants\x18\x05 \x01(\r\x12\x17\n\x0fparticipant_ids\x18\x06 \x03(\t\x12\x1b\n\x13yes_influence_total\x18\x07 \x01(\x01\x12\x1a\n\x12no_influence_total\x18\x08 \x01(\x01\x12\x1f\n\x17\x61\x62stain_influence_total\x18\t \x01(\x01\x12+\n\rlayer_outcome\x18\n \x01(\x0e\x32\x14.seigr.VotingOutcome\x12\x16\n\x0e\x61nalysis_notes\x18\x0b \x01(\t\"\x8f\x02\n\x04Vote\x12\x10\n\x08voter_id\x18\x01 \x01(\t\x12!\n\x06\x63hoice\x18\x02 \x01(\x0e\x32\x11.seigr.VoteChoice\x12\x18\n\x10influence_weight\x18\x03 \x01(\x01\x12\x19\n\x11\x63onsistency_bonus\x18\x04 \x01(\x01\x12\x15\n\ris_consistent\x18\x05 \x01(\x08\x12\x11\n\ttimestamp\x18\x06 \x01(\t\x12\x15\n\rjustification\x18\x07 \x01(\t\x12+\n\x08metadata\x18\x08 \x03(\x0b\x32\x19.seigr.Vote.MetadataEntry\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"S\n\x15SubmitProposalRequest\x12\x13\n\x0b\x64\x65scription\x18\x01 \x01(\t\x12%\n\x06\x63onfig\x18\x02 \x01(\x0b\x32\x15.seigr.ProposalConfig\"O\n\x16SubmitProposalResponse\x12\x13\n\x0bproposal_id\x18\x01 \x01(\t\x12\x0f\n\x07success\x18\x02 \x01(\x08\x12\x0f\n\x07message\x18\x03 \x01(\t\"\x88\x01\n\x0f\x43\x61stVoteRequest\x12\x13\n\x0bproposal_id\x18\x01 \x01(\t\x12\x14\n\x0clayer_number\x18\x02 \x01(\r\x12\x10\n\x08voter_id\x18\x03 \x01(\t\x12!\n\x06\x63hoice\x18\x04 \x01(\x0e\x32\x11.seigr.VoteChoice\x12\x15\n\rjustification\x18\x05 \x01(\t\"i\n\x10\x43\x61stVoteResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x18\n\x10influence_weight\x18\x02 \x01(\x01\x12\x19\n\x11\x63onsistency_bonus\x18\x03 \x01(\x01\x12\x0f\n\x07message\x18\x04 \x01(\t\"/\n\x18GetProposalResultRequest\x12\x13\n\x0bproposal_id\x18\x01 \x01(\t\"\x9e\x01\n\x19GetProposalResultResponse\x12%\n\x07outcome\x18\x01 \x01(\x0e\x32\x14.seigr.VotingOutcome\x12\x0f\n\x07message\x18\x02 \x01(\t\x12)\n\rlayer_results\x18\x03 \x03(\x0b\x32\x12.seigr.LayerResult\x12\x1e\n\x16\x65xpert_review_required\x18\x04 \x01(\x08\"\xb2\x01\n\x0bLayerResult\x12\x14\n\x0clayer_number\x18\x01 \x01(\r\x12\x15\n\ryes_influence\x18\x02 \x01(\x01\x12\x14\n\x0cno_influence\x18\x03 \x01(\x01\x12\x19\n\x11\x61\x62stain_influence\x18\x04 \x01(\x01\x12+\n\rlayer_outcome\x18\x05 \x01(\x0e\x32\x14.seigr.VotingOutcome\x12\x18\n\x10\x61nalysis_summary\x18\x06 \x01(\t\"0\n\x19GetProposalDetailsRequest\x12\x13\n\x0bproposal_id\x18\x01 \x01(\t\"\x94\x01\n\x1aGetProposalDetailsResponse\x12\'\n\x08proposal\x18\x01 \x01(\x0b\x32\x15.seigr.VotingProposal\x12\"\n\x06layers\x18\x02 \x03(\x0b\x32\x12.seigr.VotingLayer\x12)\n\naudit_logs\x18\x03 \x03(\x0b\x32\x15.seigr.VotingAuditLog\"\xe6\x01\n\x0eVotingAuditLog\x12\x0e\n\x06log_id\x18\x01 \x01(\t\x12\x0e\n\x06\x61\x63tion\x18\x02 \x01(\t\x12\x10\n\x08\x61\x63tor_id\x18\x03 \x01(\t\x12\x11\n\ttimestamp\x18\x04 \x01(\t\x12\x0f\n\x07\x64\x65tails\x18\x05 \x01(\t\x12\x35\n\x08metadata\x18\x06 \x03(\x0b\x32#.seigr.VotingAuditLog.MetadataEntry\x12\x16\n\x0e\x63ompliance_tag\x18\x07 \x01(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01*Y\n\x0bLayerStatus\x12\x1a\n\x16LAYER_STATUS_UNDEFINED\x10\x00\x12\x15\n\x11LAYER_STATUS_OPEN\x10\x01\x12\x17\n\x13LAYER_STATUS_CLOSED\x10\x02*i\n\nVoteChoice\x12\x19\n\x15VOTE_CHOICE_UNDEFINED\x10\x00\x12\x13\n\x0fVOTE_CHOICE_YES\x10\x01\x12\x12\n\x0eVOTE_CHOICE_NO\x10\x02\x12\x17\n\x13VOTE_CHOICE_ABSTAIN\x10\x03*\x97\x01\n\x0cVotingStatus\x12\x1b\n\x17VOTING_STATUS_UNDEFINED\x10\x00\x12\x19\n\x15VOTING_STATUS_PENDING\x10\x01\x12\x18\n\x14VOTING_STATUS_ACTIVE\x10\x02\x12\x1b\n\x17VOTING_STATUS_COMPLETED\x10\x03\x12\x18\n\x14VOTING_STATUS_FAILED\x10\x04*\xa6\x01\n\rVotingOutcome\x12\x1c\n\x18VOTING_OUTCOME_UNDECIDED\x10\x00\x12\x1b\n\x17VOTING_OUTCOME_APPROVED\x10\x01\x12\x1b\n\x17VOTING_OUTCOME_REJECTED\x10\x02\x12\x1c\n\x18VOTING_OUTCOME_ABSTAINED\x10\x03\x12\x1f\n\x1bVOTING_OUTCOME_INCONCLUSIVE\x10\x04\x32\xd6\x02\n\x15MycelithVotingService\x12M\n\x0eSubmitProposal\x12\x1c.seigr.SubmitProposalRequest\x1a\x1d.seigr.SubmitProposalResponse\x12;\n\x08\x43\x61stVote\x12\x16.seigr.CastVoteRequest\x1a\x17.seigr.CastVoteResponse\x12V\n\x11GetProposalResult\x12\x1f.seigr.GetProposalResultRequest\x1a .seigr.GetProposalResultResponse\x12Y\n\x12GetProposalDetails\x12 .seigr.GetProposalDetailsRequest\x1a!.seigr.GetProposalDetailsResponseb\x06proto3')
   |
28 | 
29 | _globals = globals()
   |

src/seigr_protocol/compiled/network_management_pb2.py:7:1: I001 [*] Import block is un-sorted or un-formatted
   |
 5 |   # Protobuf Python Version: 5.29.2
 6 |   """Generated protocol buffer code."""
 7 | / from google.protobuf import descriptor as _descriptor
 8 | | from google.protobuf import descriptor_pool as _descriptor_pool
 9 | | from google.protobuf import runtime_version as _runtime_version
10 | | from google.protobuf import symbol_database as _symbol_database
11 | | from google.protobuf.internal import builder as _builder
12 | | _runtime_version.ValidateProtobufRuntimeVersion(
   | |_^ I001
13 |       _runtime_version.Domain.PUBLIC,
14 |       5,
   |
   = help: Organize imports

src/seigr_protocol/compiled/network_management_pb2.py:25:1: E402 Module level import not at top of file
   |
25 | import common_pb2 as common__pb2
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E402
26 | import network_pb2 as network__pb2
   |

src/seigr_protocol/compiled/network_management_pb2.py:25:1: I001 [*] Import block is un-sorted or un-formatted
   |
25 | / import common_pb2 as common__pb2
26 | | import network_pb2 as network__pb2
27 | | 
28 | | 
29 | | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x18network_management.proto\x12\x05seigr\x1a\x0c\x63ommon.proto\x1a\rnetwork.proto\"\x89\x04\n\nHyphenInfo\x12\x11\n\thyphen_id\x18\x01 \x01(\t\x12\x1f\n\x04role\x18\x02 \x01(\x0e\x32\x11.seigr.HyphenRole\x12\x30\n\x10primary_protocol\x18\x03 \x01(\x0e\x32\x16.seigr.NetworkProtocol\x12#\n\x06status\x18\x04 \x01(\x0e\x32\x13.seigr.HyphenStatus\x12\x11\n\tlast_seen\x18\x05 \x01(\t\x12\x31\n\x08metadata\x18\x06 \x03(\x0b\x32\x1f.seigr.HyphenInfo.MetadataEntry\x12\x33\n\x13supported_protocols\x18\x07 \x03(\x0e\x32\x16.seigr.NetworkProtocol\x12\x14\n\x0c\x63urrent_load\x18\x08 \x01(\x03\x12\x14\n\x0clast_updated\x18\t \x01(\t\x12\x1d\n\x15\x61vailable_cpu_percent\x18\n \x01(\x05\x12\x1b\n\x13\x61vailable_memory_mb\x18\x0b \x01(\x05\x12 \n\x18\x61vailable_bandwidth_mbps\x18\x0c \x01(\x05\x12\x1d\n\x15supports_self_healing\x18\r \x01(\x08\x12\x1b\n\x13self_healing_status\x18\x0e \x01(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xf0\x03\n\x12\x43onnectivityStatus\x12\x18\n\x10source_hyphen_id\x18\x01 \x01(\t\x12\x18\n\x10target_hyphen_id\x18\x02 \x01(\t\x12(\n\x08protocol\x18\x03 \x01(\x0e\x32\x16.seigr.NetworkProtocol\x12.\n\x11\x63onnection_status\x18\x04 \x01(\x0e\x32\x13.seigr.HyphenStatus\x12\x1c\n\x14protocol_specific_id\x18\x05 \x01(\t\x12\x12\n\nlatency_ms\x18\x06 \x01(\x05\x12\x11\n\ttimestamp\x18\x07 \x01(\t\x12\x15\n\rerror_message\x18\x08 \x01(\t\x12N\n\x13\x63onnection_metadata\x18\t \x03(\x0b\x32\x31.seigr.ConnectivityStatus.ConnectionMetadataEntry\x12\x18\n\x10packet_loss_rate\x18\n \x01(\x02\x12\x16\n\x0e\x61uto_re_routed\x18\x0b \x01(\x08\x12\x15\n\rre_route_path\x18\x0c \x01(\t\x12\x1c\n\x14\x61lternative_protocol\x18\r \x01(\t\x1a\x39\n\x17\x43onnectionMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xc4\x03\n\rDataSyncEvent\x12\x0f\n\x07sync_id\x18\x01 \x01(\t\x12\x18\n\x10source_hyphen_id\x18\x02 \x01(\t\x12\x18\n\x10target_hyphen_id\x18\x03 \x01(\t\x12(\n\x08protocol\x18\x04 \x01(\x0e\x32\x16.seigr.NetworkProtocol\x12\x11\n\tdata_hash\x18\x05 \x01(\t\x12\"\n\tsync_type\x18\x06 \x01(\x0e\x32\x0f.seigr.SyncType\x12\x0f\n\x07success\x18\x07 \x01(\x08\x12\x11\n\ttimestamp\x18\x08 \x01(\t\x12\x34\n\x08metadata\x18\t \x03(\x0b\x32\".seigr.DataSyncEvent.MetadataEntry\x12\x17\n\x0f\x64\x61ta_size_bytes\x18\n \x01(\x03\x12\x0f\n\x07retries\x18\x0b \x01(\x05\x12\x1f\n\x17\x61\x64\x61ptive_bandwidth_used\x18\x0c \x01(\t\x12\x1a\n\x12redundancy_applied\x18\r \x01(\t\x12\x1b\n\x13network_load_factor\x18\x0e \x01(\x02\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"O\n\x1aNetworkOperationLogWrapper\x12\x31\n\roperation_log\x18\x01 \x01(\x0b\x32\x1a.seigr.NetworkOperationLog\"R\n\x1bNetworkStatusRequestWrapper\x12\x33\n\x0estatus_request\x18\x01 \x01(\x0b\x32\x1b.seigr.NetworkStatusRequest\"U\n\x1cNetworkStatusResponseWrapper\x12\x35\n\x0fstatus_response\x18\x01 \x01(\x0b\x32\x1c.seigr.NetworkStatusResponse\"R\n\x1bNetworkHealthSummaryWrapper\x12\x33\n\x0ehealth_summary\x18\x01 \x01(\x0b\x32\x1b.seigr.NetworkHealthSummary\"a\n NetworkPerformanceSummaryWrapper\x12=\n\x13performance_summary\x18\x01 \x01(\x0b\x32 .seigr.NetworkPerformanceSummary\"\xd6\x02\n\x18ProtocolCompatibilityLog\x12\x11\n\thyphen_id\x18\x01 \x01(\t\x12\x18\n\x10protocol_version\x18\x02 \x01(\t\x12\x1b\n\x13\x63ompatible_versions\x18\x03 \x03(\t\x12\x15\n\ris_compatible\x18\x04 \x01(\x08\x12%\n\x1d\x63ompatibility_check_timestamp\x18\x05 \x01(\t\x12!\n\x19suggested_protocol_update\x18\x06 \x01(\t\x12T\n\x13\x63ompatibility_notes\x18\x07 \x03(\x0b\x32\x37.seigr.ProtocolCompatibilityLog.CompatibilityNotesEntry\x1a\x39\n\x17\x43ompatibilityNotesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xe7\x02\n\x13NetworkAnomalyAlert\x12\x10\n\x08\x61lert_id\x18\x01 \x01(\t\x12\x13\n\x0b\x64\x65tected_by\x18\x02 \x01(\t\x12(\n\x0cthreat_level\x18\x03 \x01(\x0e\x32\x12.seigr.ThreatLevel\x12\x13\n\x0b\x64\x65scription\x18\x04 \x01(\t\x12\x11\n\ttimestamp\x18\x05 \x01(\t\x12\x14\n\x0c\x61\x63tion_taken\x18\x06 \x01(\t\x12\x1b\n\x13suggested_follow_up\x18\x07 \x01(\t\x12:\n\x08metadata\x18\x08 \x03(\x0b\x32(.seigr.NetworkAnomalyAlert.MetadataEntry\x12\x19\n\x11resolution_status\x18\t \x01(\t\x12\x1c\n\x14resolution_timestamp\x18\n \x01(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01*\x97\x01\n\nHyphenRole\x12\x12\n\x0eROLE_UNDEFINED\x10\x00\x12\x14\n\x10ROLE_USER_HYPHEN\x10\x01\x12\x18\n\x14ROLE_NON_USER_HYPHEN\x10\x02\x12\x0f\n\x0bROLE_MASTER\x10\x03\x12\x0f\n\x0bROLE_WORKER\x10\x04\x12\x10\n\x0cROLE_GATEWAY\x10\x05\x12\x11\n\rROLE_ADAPTIVE\x10\x06*k\n\x08SyncType\x12\x17\n\x13SYNC_TYPE_UNDEFINED\x10\x00\x12\x12\n\x0eSYNC_TYPE_FULL\x10\x01\x12\x19\n\x15SYNC_TYPE_INCREMENTAL\x10\x02\x12\x17\n\x13SYNC_TYPE_REAL_TIME\x10\x03\x62\x06proto3')
   | |_^ I001
30 |   
31 |   _globals = globals()
   |
   = help: Organize imports

src/seigr_protocol/compiled/network_management_pb2.py:25:22: F401 [*] `common_pb2` imported but unused
   |
25 | import common_pb2 as common__pb2
   |                      ^^^^^^^^^^^ F401
26 | import network_pb2 as network__pb2
   |
   = help: Remove unused import: `common_pb2`

src/seigr_protocol/compiled/network_management_pb2.py:26:1: E402 Module level import not at top of file
   |
25 | import common_pb2 as common__pb2
26 | import network_pb2 as network__pb2
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E402
   |

src/seigr_protocol/compiled/network_management_pb2.py:26:23: F401 [*] `network_pb2` imported but unused
   |
25 | import common_pb2 as common__pb2
26 | import network_pb2 as network__pb2
   |                       ^^^^^^^^^^^^ F401
   |
   = help: Remove unused import: `network_pb2`

src/seigr_protocol/compiled/network_management_pb2.py:29:101: E501 Line too long (4995 > 100)
   |
29 | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x18network_management.proto\x12\x05seigr\x1a\x0c\x63ommon.proto\x1a\rnetwork.proto\"\x89\x04\n\nHyphenInfo\x12\x11\n\thyphen_id\x18\x01 \x01(\t\x12\x1f\n\x04role\x18\x02 \x01(\x0e\x32\x11.seigr.HyphenRole\x12\x30\n\x10primary_protocol\x18\x03 \x01(\x0e\x32\x16.seigr.NetworkProtocol\x12#\n\x06status\x18\x04 \x01(\x0e\x32\x13.seigr.HyphenStatus\x12\x11\n\tlast_seen\x18\x05 \x01(\t\x12\x31\n\x08metadata\x18\x06 \x03(\x0b\x32\x1f.seigr.HyphenInfo.MetadataEntry\x12\x33\n\x13supported_protocols\x18\x07 \x03(\x0e\x32\x16.seigr.NetworkProtocol\x12\x14\n\x0c\x63urrent_load\x18\x08 \x01(\x03\x12\x14\n\x0clast_updated\x18\t \x01(\t\x12\x1d\n\x15\x61vailable_cpu_percent\x18\n \x01(\x05\x12\x1b\n\x13\x61vailable_memory_mb\x18\x0b \x01(\x05\x12 \n\x18\x61vailable_bandwidth_mbps\x18\x0c \x01(\x05\x12\x1d\n\x15supports_self_healing\x18\r \x01(\x08\x12\x1b\n\x13self_healing_status\x18\x0e \x01(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xf0\x03\n\x12\x43onnectivityStatus\x12\x18\n\x10source_hyphen_id\x18\x01 \x01(\t\x12\x18\n\x10target_hyphen_id\x18\x02 \x01(\t\x12(\n\x08protocol\x18\x03 \x01(\x0e\x32\x16.seigr.NetworkProtocol\x12.\n\x11\x63onnection_status\x18\x04 \x01(\x0e\x32\x13.seigr.HyphenStatus\x12\x1c\n\x14protocol_specific_id\x18\x05 \x01(\t\x12\x12\n\nlatency_ms\x18\x06 \x01(\x05\x12\x11\n\ttimestamp\x18\x07 \x01(\t\x12\x15\n\rerror_message\x18\x08 \x01(\t\x12N\n\x13\x63onnection_metadata\x18\t \x03(\x0b\x32\x31.seigr.ConnectivityStatus.ConnectionMetadataEntry\x12\x18\n\x10packet_loss_rate\x18\n \x01(\x02\x12\x16\n\x0e\x61uto_re_routed\x18\x0b \x01(\x08\x12\x15\n\rre_route_path\x18\x0c \x01(\t\x12\x1c\n\x14\x61lternative_protocol\x18\r \x01(\t\x1a\x39\n\x17\x43onnectionMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xc4\x03\n\rDataSyncEvent\x12\x0f\n\x07sync_id\x18\x01 \x01(\t\x12\x18\n\x10source_hyphen_id\x18\x02 \x01(\t\x12\x18\n\x10target_hyphen_id\x18\x03 \x01(\t\x12(\n\x08protocol\x18\x04 \x01(\x0e\x32\x16.seigr.NetworkProtocol\x12\x11\n\tdata_hash\x18\x05 \x01(\t\x12\"\n\tsync_type\x18\x06 \x01(\x0e\x32\x0f.seigr.SyncType\x12\x0f\n\x07success\x18\x07 \x01(\x08\x12\x11\n\ttimestamp\x18\x08 \x01(\t\x12\x34\n\x08metadata\x18\t \x03(\x0b\x32\".seigr.DataSyncEvent.MetadataEntry\x12\x17\n\x0f\x64\x61ta_size_bytes\x18\n \x01(\x03\x12\x0f\n\x07retries\x18\x0b \x01(\x05\x12\x1f\n\x17\x61\x64\x61ptive_bandwidth_used\x18\x0c \x01(\t\x12\x1a\n\x12redundancy_applied\x18\r \x01(\t\x12\x1b\n\x13network_load_factor\x18\x0e \x01(\x02\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"O\n\x1aNetworkOperationLogWrapper\x12\x31\n\roperation_log\x18\x01 \x01(\x0b\x32\x1a.seigr.NetworkOperationLog\"R\n\x1bNetworkStatusRequestWrapper\x12\x33\n\x0estatus_request\x18\x01 \x01(\x0b\x32\x1b.seigr.NetworkStatusRequest\"U\n\x1cNetworkStatusResponseWrapper\x12\x35\n\x0fstatus_response\x18\x01 \x01(\x0b\x32\x1c.seigr.NetworkStatusResponse\"R\n\x1bNetworkHealthSummaryWrapper\x12\x33\n\x0ehealth_summary\x18\x01 \x01(\x0b\x32\x1b.seigr.NetworkHealthSummary\"a\n NetworkPerformanceSummaryWrapper\x12=\n\x13performance_summary\x18\x01 \x01(\x0b\x32 .seigr.NetworkPerformanceSummary\"\xd6\x02\n\x18ProtocolCompatibilityLog\x12\x11\n\thyphen_id\x18\x01 \x01(\t\x12\x18\n\x10protocol_version\x18\x02 \x01(\t\x12\x1b\n\x13\x63ompatible_versions\x18\x03 \x03(\t\x12\x15\n\ris_compatible\x18\x04 \x01(\x08\x12%\n\x1d\x63ompatibility_check_timestamp\x18\x05 \x01(\t\x12!\n\x19suggested_protocol_update\x18\x06 \x01(\t\x12T\n\x13\x63ompatibility_notes\x18\x07 \x03(\x0b\x32\x37.seigr.ProtocolCompatibilityLog.CompatibilityNotesEntry\x1a\x39\n\x17\x43ompatibilityNotesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xe7\x02\n\x13NetworkAnomalyAlert\x12\x10\n\x08\x61lert_id\x18\x01 \x01(\t\x12\x13\n\x0b\x64\x65tected_by\x18\x02 \x01(\t\x12(\n\x0cthreat_level\x18\x03 \x01(\x0e\x32\x12.seigr.ThreatLevel\x12\x13\n\x0b\x64\x65scription\x18\x04 \x01(\t\x12\x11\n\ttimestamp\x18\x05 \x01(\t\x12\x14\n\x0c\x61\x63tion_taken\x18\x06 \x01(\t\x12\x1b\n\x13suggested_follow_up\x18\x07 \x01(\t\x12:\n\x08metadata\x18\x08 \x03(\x0b\x32(.seigr.NetworkAnomalyAlert.MetadataEntry\x12\x19\n\x11resolution_status\x18\t \x01(\t\x12\x1c\n\x14resolution_timestamp\x18\n \x01(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01*\x97\x01\n\nHyphenRole\x12\x12\n\x0eROLE_UNDEFINED\x10\x00\x12\x14\n\x10ROLE_USER_HYPHEN\x10\x01\x12\x18\n\x14ROLE_NON_USER_HYPHEN\x10\x02\x12\x0f\n\x0bROLE_MASTER\x10\x03\x12\x0f\n\x0bROLE_WORKER\x10\x04\x12\x10\n\x0cROLE_GATEWAY\x10\x05\x12\x11\n\rROLE_ADAPTIVE\x10\x06*k\n\x08SyncType\x12\x17\n\x13SYNC_TYPE_UNDEFINED\x10\x00\x12\x12\n\x0eSYNC_TYPE_FULL\x10\x01\x12\x19\n\x15SYNC_TYPE_INCREMENTAL\x10\x02\x12\x17\n\x13SYNC_TYPE_REAL_TIME\x10\x03\x62\x06proto3')
   |
30 | 
31 | _globals = globals()
   |

src/seigr_protocol/compiled/network_pb2.py:7:1: I001 [*] Import block is un-sorted or un-formatted
   |
 5 |   # Protobuf Python Version: 5.29.2
 6 |   """Generated protocol buffer code."""
 7 | / from google.protobuf import descriptor as _descriptor
 8 | | from google.protobuf import descriptor_pool as _descriptor_pool
 9 | | from google.protobuf import runtime_version as _runtime_version
10 | | from google.protobuf import symbol_database as _symbol_database
11 | | from google.protobuf.internal import builder as _builder
12 | | _runtime_version.ValidateProtobufRuntimeVersion(
   | |_^ I001
13 |       _runtime_version.Domain.PUBLIC,
14 |       5,
   |
   = help: Organize imports

src/seigr_protocol/compiled/network_pb2.py:25:1: E402 Module level import not at top of file
   |
25 | import common_pb2 as common__pb2
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E402
   |

src/seigr_protocol/compiled/network_pb2.py:25:1: I001 [*] Import block is un-sorted or un-formatted
   |
25 | / import common_pb2 as common__pb2
26 | | 
27 | | 
28 | | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\rnetwork.proto\x12\x05seigr\x1a\x0c\x63ommon.proto\"\xbe\x03\n\rNetworkHyphen\x12\x11\n\thyphen_id\x18\x01 \x01(\t\x12\x12\n\nip_address\x18\x02 \x01(\t\x12\x0c\n\x04port\x18\x03 \x01(\x05\x12\x30\n\x10primary_protocol\x18\x04 \x01(\x0e\x32\x16.seigr.NetworkProtocol\x12#\n\x06status\x18\x05 \x01(\x0e\x32\x13.seigr.HyphenStatus\x12\x33\n\x13supported_protocols\x18\x06 \x03(\x0e\x32\x16.seigr.NetworkProtocol\x12\x34\n\x08metadata\x18\x07 \x03(\x0b\x32\".seigr.NetworkHyphen.MetadataEntry\x12\x11\n\tlast_seen\x18\x08 \x01(\t\x12\x17\n\x0fload_percentage\x18\t \x01(\x05\x12\x16\n\x0e\x61vg_latency_ms\x18\n \x01(\x05\x12 \n\x18\x61vailable_bandwidth_mbps\x18\x0b \x01(\x05\x12\x1f\n\x17\x61\x64\x61ptive_scaling_status\x18\x0c \x01(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xb2\x03\n\x0ePeerConnection\x12\x15\n\rconnection_id\x18\x01 \x01(\t\x12\x18\n\x10source_hyphen_id\x18\x02 \x01(\t\x12\x18\n\x10target_hyphen_id\x18\x03 \x01(\t\x12(\n\x08protocol\x18\x04 \x01(\x0e\x32\x16.seigr.NetworkProtocol\x12\x12\n\nlatency_ms\x18\x05 \x01(\x05\x12\"\n\tqos_level\x18\x06 \x01(\x0e\x32\x0f.seigr.QoSLevel\x12\x0e\n\x06status\x18\x07 \x01(\t\x12\x12\n\ncreated_at\x18\x08 \x01(\t\x12\x14\n\x0clast_updated\x18\t \x01(\t\x12\x35\n\x08metadata\x18\n \x03(\x0b\x32#.seigr.PeerConnection.MetadataEntry\x12\x1e\n\x16\x64\x61ta_transferred_bytes\x18\x0b \x01(\x03\x12\x17\n\x0f\x61uto_scaled_qos\x18\x0c \x01(\x08\x12\x18\n\x10\x63ongestion_level\x18\r \x01(\x02\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x83\x04\n\x0eNetworkCluster\x12\x12\n\ncluster_id\x18\x01 \x01(\t\x12%\n\x07hyphens\x18\x02 \x03(\x0b\x32\x14.seigr.NetworkHyphen\x12K\n\x14hyphen_status_counts\x18\x03 \x03(\x0b\x32-.seigr.NetworkCluster.HyphenStatusCountsEntry\x12*\n\x11\x64\x65\x66\x61ult_qos_level\x18\x04 \x01(\x0e\x32\x0f.seigr.QoSLevel\x12\x19\n\x11last_health_check\x18\x05 \x01(\t\x12\x15\n\rhealth_status\x18\x06 \x01(\t\x12\x44\n\x10\x63luster_metadata\x18\x07 \x03(\x0b\x32*.seigr.NetworkCluster.ClusterMetadataEntry\x12\x33\n\x0ehealth_summary\x18\x08 \x01(\x0b\x32\x1b.seigr.NetworkHealthSummary\x12\x1d\n\x15load_balancing_factor\x18\t \x01(\x02\x1a\x39\n\x17HyphenStatusCountsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x05:\x02\x38\x01\x1a\x36\n\x14\x43lusterMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xa6\x03\n\rNetworkConfig\x12\x17\n\x0fmax_connections\x18\x01 \x01(\x05\x12\x13\n\x0bretry_limit\x18\x02 \x01(\x05\x12\x17\n\x0ftimeout_seconds\x18\x03 \x01(\x05\x12\x19\n\x11\x65nable_encryption\x18\x04 \x01(\x08\x12$\n\x0b\x64\x65\x66\x61ult_qos\x18\x05 \x01(\x0e\x32\x0f.seigr.QoSLevel\x12\x31\n\x11\x61llowed_protocols\x18\x06 \x03(\x0e\x32\x16.seigr.NetworkProtocol\x12\x41\n\x0f\x63onfig_metadata\x18\x07 \x03(\x0b\x32(.seigr.NetworkConfig.ConfigMetadataEntry\x12!\n\x19max_packet_loss_threshold\x18\x08 \x01(\x05\x12\"\n\x1a\x65nable_dynamic_qos_scaling\x18\t \x01(\x08\x12\x19\n\x11\x66\x61llback_protocol\x18\n \x01(\t\x1a\x35\n\x13\x43onfigMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xf2\x03\n\x11NetworkStatistics\x12\x12\n\ncluster_id\x18\x01 \x01(\t\x12\x15\n\rtotal_hyphens\x18\x02 \x01(\x05\x12\x1a\n\x12\x61\x63tive_connections\x18\x03 \x01(\x05\x12!\n\x19total_data_transferred_mb\x18\x04 \x01(\x05\x12G\n\x10latency_averages\x18\x05 \x03(\x0b\x32-.seigr.NetworkStatistics.LatencyAveragesEntry\x12G\n\x10qos_distribution\x18\x06 \x03(\x0b\x32-.seigr.NetworkStatistics.QosDistributionEntry\x12\x14\n\x0clast_updated\x18\x07 \x01(\t\x12=\n\x13performance_summary\x18\x08 \x01(\x0b\x32 .seigr.NetworkPerformanceSummary\x12\x1c\n\x14\x61vg_congestion_level\x18\t \x01(\x02\x1a\x36\n\x14LatencyAveragesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x01:\x02\x38\x01\x1a\x36\n\x14QosDistributionEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x05:\x02\x38\x01\"\xb4\x03\n\x15NetworkSecurityPolicy\x12\x11\n\tpolicy_id\x18\x01 \x01(\t\x12\x19\n\x11\x61llowed_ip_ranges\x18\x02 \x03(\t\x12\x19\n\x11\x62locked_ip_ranges\x18\x03 \x03(\t\x12\x1a\n\x12\x65nforce_strict_tls\x18\x04 \x01(\x08\x12\x31\n\x11\x61llowed_protocols\x18\x05 \x03(\x0e\x32\x16.seigr.NetworkProtocol\x12\x1d\n\x15\x61\x64\x61ptive_blacklisting\x18\x06 \x01(\x08\x12I\n\x0fpolicy_metadata\x18\x07 \x03(\x0b\x32\x30.seigr.NetworkSecurityPolicy.PolicyMetadataEntry\x12\x1c\n\x14\x61uto_response_action\x18\x08 \x01(\t\x12\"\n\x1a\x65nable_intrusion_detection\x18\t \x01(\x08\x12 \n\x18security_update_schedule\x18\n \x01(\t\x1a\x35\n\x13PolicyMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xb7\x03\n\x11NetworkErrorEvent\x12\x10\n\x08\x65rror_id\x18\x01 \x01(\t\x12\x18\n\x10source_hyphen_id\x18\x02 \x01(\t\x12\x18\n\x10target_hyphen_id\x18\x03 \x01(\t\x12(\n\x08protocol\x18\x04 \x01(\x0e\x32\x16.seigr.NetworkProtocol\x12\x12\n\nerror_code\x18\x05 \x01(\t\x12\x15\n\rerror_message\x18\x06 \x01(\t\x12\x11\n\ttimestamp\x18\x07 \x01(\t\x12\x38\n\x08metadata\x18\x08 \x03(\x0b\x32&.seigr.NetworkErrorEvent.MetadataEntry\x12\x15\n\rauto_resolved\x18\t \x01(\x08\x12\x16\n\x0eretry_attempts\x18\n \x01(\x05\x12\x1b\n\x13\x65scalation_strategy\x18\x0b \x01(\t\x12#\n\x1brecommended_followup_action\x18\x0c \x01(\t\x12\x18\n\x10\x61lert_recipients\x18\r \x01(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01*\xda\x01\n\x0fNetworkProtocol\x12\x16\n\x12PROTOCOL_UNDEFINED\x10\x00\x12\x10\n\x0cPROTOCOL_TCP\x10\x01\x12\x10\n\x0cPROTOCOL_UDP\x10\x02\x12\x11\n\rPROTOCOL_IPFS\x10\x03\x12\x13\n\x0fPROTOCOL_HYPHEN\x10\x04\x12\x11\n\rPROTOCOL_HTTP\x10\x05\x12\x10\n\x0cPROTOCOL_P2P\x10\x06\x12\x1d\n\x19PROTOCOL_ADAPTIVE_LAYERED\x10\x07\x12\x1f\n\x1bPROTOCOL_SENARY_COMPRESSION\x10\x08*\xd5\x01\n\x0cHyphenStatus\x12\x1b\n\x17HYPHEN_STATUS_UNDEFINED\x10\x00\x12\x11\n\rHYPHEN_ONLINE\x10\x01\x12\x12\n\x0eHYPHEN_OFFLINE\x10\x02\x12\x16\n\x12HYPHEN_MAINTENANCE\x10\x03\x12\x13\n\x0fHYPHEN_DEGRADED\x10\x04\x12\x16\n\x12HYPHEN_UNREACHABLE\x10\x05\x12\x1e\n\x1aHYPHEN_ADAPTIVE_SCALE_DOWN\x10\x06\x12\x1c\n\x18HYPHEN_ADAPTIVE_SCALE_UP\x10\x07\x62\x06proto3')
   | |_^ I001
29 |   
30 |   _globals = globals()
   |
   = help: Organize imports

src/seigr_protocol/compiled/network_pb2.py:25:22: F401 [*] `common_pb2` imported but unused
   |
25 | import common_pb2 as common__pb2
   |                      ^^^^^^^^^^^ F401
   |
   = help: Remove unused import: `common_pb2`

src/seigr_protocol/compiled/network_pb2.py:28:101: E501 Line too long (6367 > 100)
   |
28 | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\rnetwork.proto\x12\x05seigr\x1a\x0c\x63ommon.proto\"\xbe\x03\n\rNetworkHyphen\x12\x11\n\thyphen_id\x18\x01 \x01(\t\x12\x12\n\nip_address\x18\x02 \x01(\t\x12\x0c\n\x04port\x18\x03 \x01(\x05\x12\x30\n\x10primary_protocol\x18\x04 \x01(\x0e\x32\x16.seigr.NetworkProtocol\x12#\n\x06status\x18\x05 \x01(\x0e\x32\x13.seigr.HyphenStatus\x12\x33\n\x13supported_protocols\x18\x06 \x03(\x0e\x32\x16.seigr.NetworkProtocol\x12\x34\n\x08metadata\x18\x07 \x03(\x0b\x32\".seigr.NetworkHyphen.MetadataEntry\x12\x11\n\tlast_seen\x18\x08 \x01(\t\x12\x17\n\x0fload_percentage\x18\t \x01(\x05\x12\x16\n\x0e\x61vg_latency_ms\x18\n \x01(\x05\x12 \n\x18\x61vailable_bandwidth_mbps\x18\x0b \x01(\x05\x12\x1f\n\x17\x61\x64\x61ptive_scaling_status\x18\x0c \x01(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xb2\x03\n\x0ePeerConnection\x12\x15\n\rconnection_id\x18\x01 \x01(\t\x12\x18\n\x10source_hyphen_id\x18\x02 \x01(\t\x12\x18\n\x10target_hyphen_id\x18\x03 \x01(\t\x12(\n\x08protocol\x18\x04 \x01(\x0e\x32\x16.seigr.NetworkProtocol\x12\x12\n\nlatency_ms\x18\x05 \x01(\x05\x12\"\n\tqos_level\x18\x06 \x01(\x0e\x32\x0f.seigr.QoSLevel\x12\x0e\n\x06status\x18\x07 \x01(\t\x12\x12\n\ncreated_at\x18\x08 \x01(\t\x12\x14\n\x0clast_updated\x18\t \x01(\t\x12\x35\n\x08metadata\x18\n \x03(\x0b\x32#.seigr.PeerConnection.MetadataEntry\x12\x1e\n\x16\x64\x61ta_transferred_bytes\x18\x0b \x01(\x03\x12\x17\n\x0f\x61uto_scaled_qos\x18\x0c \x01(\x08\x12\x18\n\x10\x63ongestion_level\x18\r \x01(\x02\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x83\x04\n\x0eNetworkCluster\x12\x12\n\ncluster_id\x18\x01 \x01(\t\x12%\n\x07hyphens\x18\x02 \x03(\x0b\x32\x14.seigr.NetworkHyphen\x12K\n\x14hyphen_status_counts\x18\x03 \x03(\x0b\x32-.seigr.NetworkCluster.HyphenStatusCountsEntry\x12*\n\x11\x64\x65\x66\x61ult_qos_level\x18\x04 \x01(\x0e\x32\x0f.seigr.QoSLevel\x12\x19\n\x11last_health_check\x18\x05 \x01(\t\x12\x15\n\rhealth_status\x18\x06 \x01(\t\x12\x44\n\x10\x63luster_metadata\x18\x07 \x03(\x0b\x32*.seigr.NetworkCluster.ClusterMetadataEntry\x12\x33\n\x0ehealth_summary\x18\x08 \x01(\x0b\x32\x1b.seigr.NetworkHealthSummary\x12\x1d\n\x15load_balancing_factor\x18\t \x01(\x02\x1a\x39\n\x17HyphenStatusCountsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x05:\x02\x38\x01\x1a\x36\n\x14\x43lusterMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xa6\x03\n\rNetworkConfig\x12\x17\n\x0fmax_connections\x18\x01 \x01(\x05\x12\x13\n\x0bretry_limit\x18\x02 \x01(\x05\x12\x17\n\x0ftimeout_seconds\x18\x03 \x01(\x05\x12\x19\n\x11\x65nable_encryption\x18\x04 \x01(\x08\x12$\n\x0b\x64\x65\x66\x61ult_qos\x18\x05 \x01(\x0e\x32\x0f.seigr.QoSLevel\x12\x31\n\x11\x61llowed_protocols\x18\x06 \x03(\x0e\x32\x16.seigr.NetworkProtocol\x12\x41\n\x0f\x63onfig_metadata\x18\x07 \x03(\x0b\x32(.seigr.NetworkConfig.ConfigMetadataEntry\x12!\n\x19max_packet_loss_threshold\x18\x08 \x01(\x05\x12\"\n\x1a\x65nable_dynamic_qos_scaling\x18\t \x01(\x08\x12\x19\n\x11\x66\x61llback_protocol\x18\n \x01(\t\x1a\x35\n\x13\x43onfigMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xf2\x03\n\x11NetworkStatistics\x12\x12\n\ncluster_id\x18\x01 \x01(\t\x12\x15\n\rtotal_hyphens\x18\x02 \x01(\x05\x12\x1a\n\x12\x61\x63tive_connections\x18\x03 \x01(\x05\x12!\n\x19total_data_transferred_mb\x18\x04 \x01(\x05\x12G\n\x10latency_averages\x18\x05 \x03(\x0b\x32-.seigr.NetworkStatistics.LatencyAveragesEntry\x12G\n\x10qos_distribution\x18\x06 \x03(\x0b\x32-.seigr.NetworkStatistics.QosDistributionEntry\x12\x14\n\x0clast_updated\x18\x07 \x01(\t\x12=\n\x13performance_summary\x18\x08 \x01(\x0b\x32 .seigr.NetworkPerformanceSummary\x12\x1c\n\x14\x61vg_congestion_level\x18\t \x01(\x02\x1a\x36\n\x14LatencyAveragesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x01:\x02\x38\x01\x1a\x36\n\x14QosDistributionEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x05:\x02\x38\x01\"\xb4\x03\n\x15NetworkSecurityPolicy\x12\x11\n\tpolicy_id\x18\x01 \x01(\t\x12\x19\n\x11\x61llowed_ip_ranges\x18\x02 \x03(\t\x12\x19\n\x11\x62locked_ip_ranges\x18\x03 \x03(\t\x12\x1a\n\x12\x65nforce_strict_tls\x18\x04 \x01(\x08\x12\x31\n\x11\x61llowed_protocols\x18\x05 \x03(\x0e\x32\x16.seigr.NetworkProtocol\x12\x1d\n\x15\x61\x64\x61ptive_blacklisting\x18\x06 \x01(\x08\x12I\n\x0fpolicy_metadata\x18\x07 \x03(\x0b\x32\x30.seigr.NetworkSecurityPolicy.PolicyMetadataEntry\x12\x1c\n\x14\x61uto_response_action\x18\x08 \x01(\t\x12\"\n\x1a\x65nable_intrusion_detection\x18\t \x01(\x08\x12 \n\x18security_update_schedule\x18\n \x01(\t\x1a\x35\n\x13PolicyMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xb7\x03\n\x11NetworkErrorEvent\x12\x10\n\x08\x65rror_id\x18\x01 \x01(\t\x12\x18\n\x10source_hyphen_id\x18\x02 \x01(\t\x12\x18\n\x10target_hyphen_id\x18\x03 \x01(\t\x12(\n\x08protocol\x18\x04 \x01(\x0e\x32\x16.seigr.NetworkProtocol\x12\x12\n\nerror_code\x18\x05 \x01(\t\x12\x15\n\rerror_message\x18\x06 \x01(\t\x12\x11\n\ttimestamp\x18\x07 \x01(\t\x12\x38\n\x08metadata\x18\x08 \x03(\x0b\x32&.seigr.NetworkErrorEvent.MetadataEntry\x12\x15\n\rauto_resolved\x18\t \x01(\x08\x12\x16\n\x0eretry_attempts\x18\n \x01(\x05\x12\x1b\n\x13\x65scalation_strategy\x18\x0b \x01(\t\x12#\n\x1brecommended_followup_action\x18\x0c \x01(\t\x12\x18\n\x10\x61lert_recipients\x18\r \x01(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01*\xda\x01\n\x0fNetworkProtocol\x12\x16\n\x12PROTOCOL_UNDEFINED\x10\x00\x12\x10\n\x0cPROTOCOL_TCP\x10\x01\x12\x10\n\x0cPROTOCOL_UDP\x10\x02\x12\x11\n\rPROTOCOL_IPFS\x10\x03\x12\x13\n\x0fPROTOCOL_HYPHEN\x10\x04\x12\x11\n\rPROTOCOL_HTTP\x10\x05\x12\x10\n\x0cPROTOCOL_P2P\x10\x06\x12\x1d\n\x19PROTOCOL_ADAPTIVE_LAYERED\x10\x07\x12\x1f\n\x1bPROTOCOL_SENARY_COMPRESSION\x10\x08*\xd5\x01\n\x0cHyphenStatus\x12\x1b\n\x17HYPHEN_STATUS_UNDEFINED\x10\x00\x12\x11\n\rHYPHEN_ONLINE\x10\x01\x12\x12\n\x0eHYPHEN_OFFLINE\x10\x02\x12\x16\n\x12HYPHEN_MAINTENANCE\x10\x03\x12\x13\n\x0fHYPHEN_DEGRADED\x10\x04\x12\x16\n\x12HYPHEN_UNREACHABLE\x10\x05\x12\x1e\n\x1aHYPHEN_ADAPTIVE_SCALE_DOWN\x10\x06\x12\x1c\n\x18HYPHEN_ADAPTIVE_SCALE_UP\x10\x07\x62\x06proto3')
   |
29 | 
30 | _globals = globals()
   |

src/seigr_protocol/compiled/notification_pb2.py:7:1: I001 [*] Import block is un-sorted or un-formatted
   |
 5 |   # Protobuf Python Version: 5.29.2
 6 |   """Generated protocol buffer code."""
 7 | / from google.protobuf import descriptor as _descriptor
 8 | | from google.protobuf import descriptor_pool as _descriptor_pool
 9 | | from google.protobuf import runtime_version as _runtime_version
10 | | from google.protobuf import symbol_database as _symbol_database
11 | | from google.protobuf.internal import builder as _builder
12 | | _runtime_version.ValidateProtobufRuntimeVersion(
   | |_^ I001
13 |       _runtime_version.Domain.PUBLIC,
14 |       5,
   |
   = help: Organize imports

src/seigr_protocol/compiled/notification_pb2.py:25:1: E402 Module level import not at top of file
   |
25 | import common_pb2 as common__pb2
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E402
   |

src/seigr_protocol/compiled/notification_pb2.py:25:1: I001 [*] Import block is un-sorted or un-formatted
   |
25 | / import common_pb2 as common__pb2
26 | | 
27 | | 
28 | | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x12notification.proto\x12\x05seigr\x1a\x0c\x63ommon.proto\"\xf6\x05\n\x0cNotification\x12\x17\n\x0fnotification_id\x18\x01 \x01(\t\x12%\n\x04type\x18\x02 \x01(\x0e\x32\x17.seigr.NotificationType\x12\x0f\n\x07message\x18\x03 \x01(\t\x12\x14\n\x0crecipient_id\x18\x04 \x01(\t\x12.\n\x0f\x64\x65livery_method\x18\x05 \x01(\x0e\x32\x15.seigr.DeliveryMethod\x12\x11\n\ttimestamp\x18\x06 \x01(\t\x12\x33\n\x08metadata\x18\x07 \x03(\x0b\x32!.seigr.Notification.MetadataEntry\x12\x1f\n\x17requires_acknowledgment\x18\x08 \x01(\x08\x12\x13\n\x0bretry_count\x18\t \x01(\x05\x12&\n\x08priority\x18\n \x01(\x0e\x32\x14.seigr.PriorityLevel\x12\x12\n\naction_url\x18\x0b \x01(\t\x12\x1c\n\x14time_to_live_seconds\x18\x0c \x01(\x05\x12\x18\n\x10\x61\x63tionable_items\x18\r \x03(\t\x12\x15\n\raggregateable\x18\x0e \x01(\x08\x12\x42\n\x10response_options\x18\x0f \x03(\x0b\x32(.seigr.Notification.ResponseOptionsEntry\x12\x14\n\x0c\x63\x61llback_url\x18\x10 \x01(\t\x12H\n\x13\x61\x64\x61ptive_parameters\x18\x11 \x03(\x0b\x32+.seigr.Notification.AdaptiveParametersEntry\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x36\n\x14ResponseOptionsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x39\n\x17\x41\x64\x61ptiveParametersEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xab\x03\n\x12NotificationStatus\x12\x17\n\x0fnotification_id\x18\x01 \x01(\t\x12\x14\n\x0crecipient_id\x18\x02 \x01(\t\x12\x11\n\tdelivered\x18\x03 \x01(\x08\x12\x14\n\x0c\x61\x63knowledged\x18\x04 \x01(\x08\x12\x14\n\x0c\x64\x65livered_at\x18\x05 \x01(\t\x12\x17\n\x0f\x61\x63knowledged_at\x18\x06 \x01(\t\x12\x16\n\x0e\x66\x61ilure_reason\x18\x07 \x01(\t\x12J\n\x11\x64\x65livery_metadata\x18\x08 \x03(\x0b\x32/.seigr.NotificationStatus.DeliveryMetadataEntry\x12\x16\n\x0eretry_attempts\x18\t \x01(\x05\x12\x1c\n\x14last_retry_timestamp\x18\n \x01(\t\x12\x19\n\x11\x65scalation_policy\x18\x0b \x01(\t\x12 \n\x18\x61\x64\x61ptive_response_action\x18\x0c \x01(\t\x1a\x37\n\x15\x44\x65liveryMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xbf\x05\n\x13NotificationHistory\x12\x14\n\x0crecipient_id\x18\x01 \x01(\t\x12*\n\rnotifications\x18\x02 \x03(\x0b\x32\x13.seigr.Notification\x12\x12\n\nstart_date\x18\x03 \x01(\t\x12\x10\n\x08\x65nd_date\x18\x04 \x01(\t\x12O\n\x13notification_counts\x18\x05 \x03(\x0b\x32\x32.seigr.NotificationHistory.NotificationCountsEntry\x12\x1b\n\x13total_notifications\x18\x06 \x01(\x05\x12G\n\x0fpriority_counts\x18\x07 \x03(\x0b\x32..seigr.NotificationHistory.PriorityCountsEntry\x12R\n\x15response_time_average\x18\x08 \x03(\x0b\x32\x33.seigr.NotificationHistory.ResponseTimeAverageEntry\x12M\n\x12\x65ngagement_metrics\x18\t \x03(\x0b\x32\x31.seigr.NotificationHistory.EngagementMetricsEntry\x1a\x39\n\x17NotificationCountsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x05:\x02\x38\x01\x1a\x35\n\x13PriorityCountsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x05:\x02\x38\x01\x1a:\n\x18ResponseTimeAverageEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x05:\x02\x38\x01\x1a\x38\n\x16\x45ngagementMetricsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x89\x05\n\x17NotificationPreferences\x12\x14\n\x0crecipient_id\x18\x01 \x01(\t\x12\x30\n\x11preferred_methods\x18\x02 \x03(\x0e\x32\x15.seigr.DeliveryMethod\x12\x1a\n\x12mute_notifications\x18\x03 \x01(\x08\x12M\n\x10type_preferences\x18\x04 \x03(\x0b\x32\x33.seigr.NotificationPreferences.TypePreferencesEntry\x12\x1f\n\x17max_daily_notifications\x18\x05 \x01(\x05\x12\x1c\n\x14\x64o_not_disturb_start\x18\x06 \x01(\t\x12\x1a\n\x12\x64o_not_disturb_end\x18\x07 \x01(\t\x12.\n\x10minimum_priority\x18\x08 \x01(\x0e\x32\x14.seigr.PriorityLevel\x12$\n\x1c\x63ustom_notification_interval\x18\t \x01(\t\x12W\n\x15\x65scalation_conditions\x18\n \x03(\x0b\x32\x38.seigr.NotificationPreferences.EscalationConditionsEntry\x12\x1a\n\x12\x64ynamic_thresholds\x18\x0b \x01(\x08\x12 \n\x18max_urgent_notifications\x18\x0c \x01(\x05\x1a\x36\n\x14TypePreferencesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x08:\x02\x38\x01\x1a;\n\x19\x45scalationConditionsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x08:\x02\x38\x01\"\xdd\x02\n\x11NotificationBatch\x12\x10\n\x08\x62\x61tch_id\x18\x01 \x01(\t\x12*\n\rnotifications\x18\x02 \x03(\x0b\x32\x13.seigr.Notification\x12\x11\n\ttimestamp\x18\x03 \x01(\t\x12.\n\x0f\x64\x65livery_method\x18\x04 \x01(\x0e\x32\x15.seigr.DeliveryMethod\x12\x38\n\x08metadata\x18\x05 \x03(\x0b\x32&.seigr.NotificationBatch.MetadataEntry\x12%\n\x1drequires_batch_acknowledgment\x18\x06 \x01(\x08\x12\x15\n\rtotal_retries\x18\x07 \x01(\x05\x12\x1e\n\x16\x61\x64\x61ptive_batch_scaling\x18\x08 \x01(\x08\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x92\x03\n\x14NotificationSchedule\x12\x17\n\x0fnotification_id\x18\x01 \x01(\t\x12\x16\n\x0escheduled_time\x18\x02 \x01(\t\x12\x11\n\trecurring\x18\x03 \x01(\x08\x12\x1a\n\x12recurrence_pattern\x18\x04 \x01(\t\x12\x10\n\x08\x65nd_date\x18\x05 \x01(\t\x12P\n\x13scheduling_metadata\x18\x06 \x03(\x0b\x32\x33.seigr.NotificationSchedule.SchedulingMetadataEntry\x12\x1c\n\x14grace_period_minutes\x18\x07 \x01(\x05\x12\x1d\n\x15\x61uto_retry_on_failure\x18\x08 \x01(\x08\x12\x1d\n\x15\x61\x64\x61ptive_grace_period\x18\t \x01(\x05\x12\x1f\n\x17user_activity_dependent\x18\n \x01(\x08\x1a\x39\n\x17SchedulingMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01*\xc9\x01\n\x10NotificationType\x12\x1a\n\x16NOTIFICATION_UNDEFINED\x10\x00\x12\x15\n\x11NOTIFICATION_INFO\x10\x01\x12\x16\n\x12NOTIFICATION_ALERT\x10\x02\x12\x18\n\x14NOTIFICATION_WARNING\x10\x03\x12\x16\n\x12NOTIFICATION_ERROR\x10\x04\x12\x18\n\x14NOTIFICATION_SUCCESS\x10\x05\x12\x1e\n\x1aNOTIFICATION_SYSTEM_UPDATE\x10\x06*\xbd\x01\n\x0e\x44\x65liveryMethod\x12\x16\n\x12\x44\x45LIVERY_UNDEFINED\x10\x00\x12\x12\n\x0e\x44\x45LIVERY_EMAIL\x10\x01\x12\x10\n\x0c\x44\x45LIVERY_SMS\x10\x02\x12\x11\n\rDELIVERY_PUSH\x10\x03\x12\x19\n\x15\x44\x45LIVERY_SYSTEM_ALERT\x10\x04\x12\x14\n\x10\x44\x45LIVERY_WEBHOOK\x10\x05\x12\x12\n\x0e\x44\x45LIVERY_BATCH\x10\x06\x12\x15\n\x11\x44\x45LIVERY_ADAPTIVE\x10\x07\x62\x06proto3')
   | |_^ I001
29 |   
30 |   _globals = globals()
   |
   = help: Organize imports

src/seigr_protocol/compiled/notification_pb2.py:25:22: F401 [*] `common_pb2` imported but unused
   |
25 | import common_pb2 as common__pb2
   |                      ^^^^^^^^^^^ F401
   |
   = help: Remove unused import: `common_pb2`

src/seigr_protocol/compiled/notification_pb2.py:28:101: E501 Line too long (6477 > 100)
   |
28 | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x12notification.proto\x12\x05seigr\x1a\x0c\x63ommon.proto\"\xf6\x05\n\x0cNotification\x12\x17\n\x0fnotification_id\x18\x01 \x01(\t\x12%\n\x04type\x18\x02 \x01(\x0e\x32\x17.seigr.NotificationType\x12\x0f\n\x07message\x18\x03 \x01(\t\x12\x14\n\x0crecipient_id\x18\x04 \x01(\t\x12.\n\x0f\x64\x65livery_method\x18\x05 \x01(\x0e\x32\x15.seigr.DeliveryMethod\x12\x11\n\ttimestamp\x18\x06 \x01(\t\x12\x33\n\x08metadata\x18\x07 \x03(\x0b\x32!.seigr.Notification.MetadataEntry\x12\x1f\n\x17requires_acknowledgment\x18\x08 \x01(\x08\x12\x13\n\x0bretry_count\x18\t \x01(\x05\x12&\n\x08priority\x18\n \x01(\x0e\x32\x14.seigr.PriorityLevel\x12\x12\n\naction_url\x18\x0b \x01(\t\x12\x1c\n\x14time_to_live_seconds\x18\x0c \x01(\x05\x12\x18\n\x10\x61\x63tionable_items\x18\r \x03(\t\x12\x15\n\raggregateable\x18\x0e \x01(\x08\x12\x42\n\x10response_options\x18\x0f \x03(\x0b\x32(.seigr.Notification.ResponseOptionsEntry\x12\x14\n\x0c\x63\x61llback_url\x18\x10 \x01(\t\x12H\n\x13\x61\x64\x61ptive_parameters\x18\x11 \x03(\x0b\x32+.seigr.Notification.AdaptiveParametersEntry\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x36\n\x14ResponseOptionsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x39\n\x17\x41\x64\x61ptiveParametersEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xab\x03\n\x12NotificationStatus\x12\x17\n\x0fnotification_id\x18\x01 \x01(\t\x12\x14\n\x0crecipient_id\x18\x02 \x01(\t\x12\x11\n\tdelivered\x18\x03 \x01(\x08\x12\x14\n\x0c\x61\x63knowledged\x18\x04 \x01(\x08\x12\x14\n\x0c\x64\x65livered_at\x18\x05 \x01(\t\x12\x17\n\x0f\x61\x63knowledged_at\x18\x06 \x01(\t\x12\x16\n\x0e\x66\x61ilure_reason\x18\x07 \x01(\t\x12J\n\x11\x64\x65livery_metadata\x18\x08 \x03(\x0b\x32/.seigr.NotificationStatus.DeliveryMetadataEntry\x12\x16\n\x0eretry_attempts\x18\t \x01(\x05\x12\x1c\n\x14last_retry_timestamp\x18\n \x01(\t\x12\x19\n\x11\x65scalation_policy\x18\x0b \x01(\t\x12 \n\x18\x61\x64\x61ptive_response_action\x18\x0c \x01(\t\x1a\x37\n\x15\x44\x65liveryMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xbf\x05\n\x13NotificationHistory\x12\x14\n\x0crecipient_id\x18\x01 \x01(\t\x12*\n\rnotifications\x18\x02 \x03(\x0b\x32\x13.seigr.Notification\x12\x12\n\nstart_date\x18\x03 \x01(\t\x12\x10\n\x08\x65nd_date\x18\x04 \x01(\t\x12O\n\x13notification_counts\x18\x05 \x03(\x0b\x32\x32.seigr.NotificationHistory.NotificationCountsEntry\x12\x1b\n\x13total_notifications\x18\x06 \x01(\x05\x12G\n\x0fpriority_counts\x18\x07 \x03(\x0b\x32..seigr.NotificationHistory.PriorityCountsEntry\x12R\n\x15response_time_average\x18\x08 \x03(\x0b\x32\x33.seigr.NotificationHistory.ResponseTimeAverageEntry\x12M\n\x12\x65ngagement_metrics\x18\t \x03(\x0b\x32\x31.seigr.NotificationHistory.EngagementMetricsEntry\x1a\x39\n\x17NotificationCountsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x05:\x02\x38\x01\x1a\x35\n\x13PriorityCountsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x05:\x02\x38\x01\x1a:\n\x18ResponseTimeAverageEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x05:\x02\x38\x01\x1a\x38\n\x16\x45ngagementMetricsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x89\x05\n\x17NotificationPreferences\x12\x14\n\x0crecipient_id\x18\x01 \x01(\t\x12\x30\n\x11preferred_methods\x18\x02 \x03(\x0e\x32\x15.seigr.DeliveryMethod\x12\x1a\n\x12mute_notifications\x18\x03 \x01(\x08\x12M\n\x10type_preferences\x18\x04 \x03(\x0b\x32\x33.seigr.NotificationPreferences.TypePreferencesEntry\x12\x1f\n\x17max_daily_notifications\x18\x05 \x01(\x05\x12\x1c\n\x14\x64o_not_disturb_start\x18\x06 \x01(\t\x12\x1a\n\x12\x64o_not_disturb_end\x18\x07 \x01(\t\x12.\n\x10minimum_priority\x18\x08 \x01(\x0e\x32\x14.seigr.PriorityLevel\x12$\n\x1c\x63ustom_notification_interval\x18\t \x01(\t\x12W\n\x15\x65scalation_conditions\x18\n \x03(\x0b\x32\x38.seigr.NotificationPreferences.EscalationConditionsEntry\x12\x1a\n\x12\x64ynamic_thresholds\x18\x0b \x01(\x08\x12 \n\x18max_urgent_notifications\x18\x0c \x01(\x05\x1a\x36\n\x14TypePreferencesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x08:\x02\x38\x01\x1a;\n\x19\x45scalationConditionsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x08:\x02\x38\x01\"\xdd\x02\n\x11NotificationBatch\x12\x10\n\x08\x62\x61tch_id\x18\x01 \x01(\t\x12*\n\rnotifications\x18\x02 \x03(\x0b\x32\x13.seigr.Notification\x12\x11\n\ttimestamp\x18\x03 \x01(\t\x12.\n\x0f\x64\x65livery_method\x18\x04 \x01(\x0e\x32\x15.seigr.DeliveryMethod\x12\x38\n\x08metadata\x18\x05 \x03(\x0b\x32&.seigr.NotificationBatch.MetadataEntry\x12%\n\x1drequires_batch_acknowledgment\x18\x06 \x01(\x08\x12\x15\n\rtotal_retries\x18\x07 \x01(\x05\x12\x1e\n\x16\x61\x64\x61ptive_batch_scaling\x18\x08 \x01(\x08\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x92\x03\n\x14NotificationSchedule\x12\x17\n\x0fnotification_id\x18\x01 \x01(\t\x12\x16\n\x0escheduled_time\x18\x02 \x01(\t\x12\x11\n\trecurring\x18\x03 \x01(\x08\x12\x1a\n\x12recurrence_pattern\x18\x04 \x01(\t\x12\x10\n\x08\x65nd_date\x18\x05 \x01(\t\x12P\n\x13scheduling_metadata\x18\x06 \x03(\x0b\x32\x33.seigr.NotificationSchedule.SchedulingMetadataEntry\x12\x1c\n\x14grace_period_minutes\x18\x07 \x01(\x05\x12\x1d\n\x15\x61uto_retry_on_failure\x18\x08 \x01(\x08\x12\x1d\n\x15\x61\x64\x61ptive_grace_period\x18\t \x01(\x05\x12\x1f\n\x17user_activity_dependent\x18\n \x01(\x08\x1a\x39\n\x17SchedulingMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01*\xc9\x01\n\x10NotificationType\x12\x1a\n\x16NOTIFICATION_UNDEFINED\x10\x00\x12\x15\n\x11NOTIFICATION_INFO\x10\x01\x12\x16\n\x12NOTIFICATION_ALERT\x10\x02\x12\x18\n\x14NOTIFICATION_WARNING\x10\x03\x12\x16\n\x12NOTIFICATION_ERROR\x10\x04\x12\x18\n\x14NOTIFICATION_SUCCESS\x10\x05\x12\x1e\n\x1aNOTIFICATION_SYSTEM_UPDATE\x10\x06*\xbd\x01\n\x0e\x44\x65liveryMethod\x12\x16\n\x12\x44\x45LIVERY_UNDEFINED\x10\x00\x12\x12\n\x0e\x44\x45LIVERY_EMAIL\x10\x01\x12\x10\n\x0c\x44\x45LIVERY_SMS\x10\x02\x12\x11\n\rDELIVERY_PUSH\x10\x03\x12\x19\n\x15\x44\x45LIVERY_SYSTEM_ALERT\x10\x04\x12\x14\n\x10\x44\x45LIVERY_WEBHOOK\x10\x05\x12\x12\n\x0e\x44\x45LIVERY_BATCH\x10\x06\x12\x15\n\x11\x44\x45LIVERY_ADAPTIVE\x10\x07\x62\x06proto3')
   |
29 | 
30 | _globals = globals()
   |

src/seigr_protocol/compiled/orchestration_pb2.py:7:1: I001 [*] Import block is un-sorted or un-formatted
   |
 5 |   # Protobuf Python Version: 5.29.2
 6 |   """Generated protocol buffer code."""
 7 | / from google.protobuf import descriptor as _descriptor
 8 | | from google.protobuf import descriptor_pool as _descriptor_pool
 9 | | from google.protobuf import runtime_version as _runtime_version
10 | | from google.protobuf import symbol_database as _symbol_database
11 | | from google.protobuf.internal import builder as _builder
12 | | _runtime_version.ValidateProtobufRuntimeVersion(
   | |_^ I001
13 |       _runtime_version.Domain.PUBLIC,
14 |       5,
   |
   = help: Organize imports

src/seigr_protocol/compiled/orchestration_pb2.py:27:101: E501 Line too long (8482 > 100)
   |
27 | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x13orchestration.proto\x12\x05seigr\"\xbc\x07\n\x04Task\x12\x0f\n\x07task_id\x18\x01 \x01(\t\x12\x11\n\ttask_type\x18\x02 \x01(\t\x12!\n\x06status\x18\x03 \x01(\x0e\x32\x11.seigr.TaskStatus\x12%\n\x08priority\x18\x04 \x01(\x0e\x32\x13.seigr.TaskPriority\x12\x17\n\x0f\x61ssigned_hyphen\x18\x05 \x01(\t\x12\x14\n\x0c\x64\x65pendencies\x18\x06 \x03(\t\x12:\n\x10\x64\x65pendency_types\x18\x07 \x03(\x0b\x32 .seigr.Task.DependencyTypesEntry\x12\x13\n\x0bmax_retries\x18\x08 \x01(\x05\x12\x12\n\ncreated_at\x18\t \x01(\t\x12\x14\n\x0c\x63ompleted_at\x18\n \x01(\t\x12/\n\nparameters\x18\x0b \x03(\x0b\x32\x1b.seigr.Task.ParametersEntry\x12\x30\n\x0bresult_data\x18\x0c \x03(\x0b\x32\x1b.seigr.Task.ResultDataEntry\x12\x1e\n\x16last_attempt_timestamp\x18\r \x01(\t\x12\x15\n\rerror_message\x18\x0e \x01(\t\x12\x44\n\x15resource_requirements\x18\x0f \x03(\x0b\x32%.seigr.Task.ResourceRequirementsEntry\x12\x14\n\x0cretry_policy\x18\x10 \x01(\t\x12\x1b\n\x13rollback_on_failure\x18\x11 \x01(\x08\x12<\n\x11\x61\x64\x61ptive_settings\x18\x12 \x03(\x0b\x32!.seigr.Task.AdaptiveSettingsEntry\x12\x1c\n\x14\x65scalation_policy_id\x18\x13 \x01(\t\x1aQ\n\x14\x44\x65pendencyTypesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12(\n\x05value\x18\x02 \x01(\x0e\x32\x19.seigr.TaskDependencyType:\x02\x38\x01\x1a\x31\n\x0fParametersEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x31\n\x0fResultDataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a;\n\x19ResourceRequirementsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x37\n\x15\x41\x64\x61ptiveSettingsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xfa\x04\n\x08Workflow\x12\x13\n\x0bworkflow_id\x18\x01 \x01(\t\x12\x1a\n\x05tasks\x18\x02 \x03(\x0b\x32\x0b.seigr.Task\x12)\n\x0eoverall_status\x18\x03 \x01(\x0e\x32\x11.seigr.TaskStatus\x12\x14\n\x0cinitiated_by\x18\x04 \x01(\t\x12\x12\n\nstarted_at\x18\x05 \x01(\t\x12\x10\n\x08\x65nded_at\x18\x06 \x01(\t\x12@\n\x11workflow_metadata\x18\x07 \x03(\x0b\x32%.seigr.Workflow.WorkflowMetadataEntry\x12+\n\rcurrent_stage\x18\x08 \x01(\x0e\x32\x14.seigr.WorkflowStage\x12%\n\x08priority\x18\t \x01(\x0e\x32\x13.seigr.TaskPriority\x12\x16\n\x0e\x66\x61ilure_reason\x18\n \x01(\t\x12\x1b\n\x13rollback_on_failure\x18\x0b \x01(\x08\x12(\n adaptive_reconfiguration_enabled\x18\x0c \x01(\x08\x12H\n\x15resilience_parameters\x18\r \x03(\x0b\x32).seigr.Workflow.ResilienceParametersEntry\x12!\n\x19reconfiguration_timestamp\x18\x0e \x01(\t\x1a\x37\n\x15WorkflowMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a;\n\x19ResilienceParametersEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xc2\x03\n\x0cTaskSchedule\x12\x0f\n\x07task_id\x18\x01 \x01(\t\x12\x17\n\x0f\x63ron_expression\x18\x02 \x01(\t\x12\x10\n\x08timezone\x18\x03 \x01(\t\x12\x14\n\x0cis_recurring\x18\x04 \x01(\x08\x12\x15\n\rnext_run_time\x18\x05 \x01(\t\x12\x44\n\x11schedule_metadata\x18\x06 \x03(\x0b\x32).seigr.TaskSchedule.ScheduleMetadataEntry\x12\x46\n\x12trigger_conditions\x18\x07 \x03(\x0b\x32*.seigr.TaskSchedule.TriggerConditionsEntry\x12%\n\x1d\x61\x64\x61ptive_rescheduling_enabled\x18\x08 \x01(\x08\x12!\n\x19last_scheduled_adjustment\x18\t \x01(\t\x1a\x37\n\x15ScheduleMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x38\n\x16TriggerConditionsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xc3\x04\n\x0eTaskMonitoring\x12\x0f\n\x07task_id\x18\x01 \x01(\t\x12!\n\x06status\x18\x02 \x01(\x0e\x32\x11.seigr.TaskStatus\x12\x17\n\x0f\x63urrent_attempt\x18\x03 \x01(\x05\x12\x13\n\x0blast_update\x18\x04 \x01(\t\x12\x17\n\x0f\x61ssigned_hyphen\x18\x05 \x01(\t\x12\x15\n\rerror_message\x18\x06 \x01(\t\x12\x42\n\x0fmonitoring_data\x18\x07 \x03(\x0b\x32).seigr.TaskMonitoring.MonitoringDataEntry\x12\x1d\n\x15\x65xecution_duration_ms\x18\x08 \x01(\x03\x12\x1a\n\x12memory_usage_bytes\x18\t \x01(\x03\x12\x1b\n\x13\x63pu_load_percentage\x18\n \x01(\x02\x12\x1b\n\x13progress_percentage\x18\x0b \x01(\x02\x12\x0c\n\x04logs\x18\x0c \x03(\t\x12\x1a\n\x12network_usage_kbps\x18\r \x01(\x05\x12J\n\x13resource_efficiency\x18\x0e \x03(\x0b\x32-.seigr.TaskMonitoring.ResourceEfficiencyEntry\x1a\x35\n\x13MonitoringDataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x39\n\x17ResourceEfficiencyEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x02:\x02\x38\x01\"\x86\x06\n\x13OrchestrationConfig\x12\x1a\n\x12max_parallel_tasks\x18\x01 \x01(\x05\x12\x1b\n\x13\x64\x65\x66\x61ult_retry_limit\x18\x02 \x01(\x05\x12\x16\n\x0eglobal_timeout\x18\x03 \x01(\t\x12G\n\x0f\x63onfig_metadata\x18\x04 \x03(\x0b\x32..seigr.OrchestrationConfig.ConfigMetadataEntry\x12\"\n\x1a\x65nable_advanced_scheduling\x18\x05 \x01(\x08\x12G\n\x0fpriority_limits\x18\x06 \x03(\x0b\x32..seigr.OrchestrationConfig.PriorityLimitsEntry\x12\x1b\n\x13global_retry_policy\x18\x07 \x01(\t\x12\x1d\n\x15\x65nable_adaptive_retry\x18\x08 \x01(\x08\x12T\n\x16task_fallback_policies\x18\t \x03(\x0b\x32\x34.seigr.OrchestrationConfig.TaskFallbackPoliciesEntry\x12O\n\x13\x65scalation_policies\x18\n \x03(\x0b\x32\x32.seigr.OrchestrationConfig.EscalationPoliciesEntry\x12\x1f\n\x17max_resource_allocation\x18\x0b \x01(\x05\x1a\x35\n\x13\x43onfigMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x35\n\x13PriorityLimitsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x05:\x02\x38\x01\x1a;\n\x19TaskFallbackPoliciesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x39\n\x17\x45scalationPoliciesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x80\x03\n\x10\x45scalationAction\x12\x15\n\rescalation_id\x18\x01 \x01(\t\x12\x18\n\x10\x61\x66\x66\x65\x63ted_task_id\x18\x02 \x01(\t\x12\x14\n\x0ctriggered_by\x18\x03 \x01(\t\x12\x30\n\x13priority_adjustment\x18\x04 \x01(\x0e\x32\x13.seigr.TaskPriority\x12\x1c\n\x14\x65scalation_timestamp\x18\x05 \x01(\t\x12\x1c\n\x14\x65scalation_policy_id\x18\x06 \x01(\t\x12L\n\x13\x65scalation_metadata\x18\x07 \x03(\x0b\x32/.seigr.EscalationAction.EscalationMetadataEntry\x12\x19\n\x11resolution_status\x18\x08 \x01(\t\x12\x13\n\x0bresolved_at\x18\t \x01(\t\x1a\x39\n\x17\x45scalationMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xf6\x02\n\x12ResourceAllocation\x12\x0f\n\x07task_id\x18\x01 \x01(\t\x12\x1b\n\x13\x61llocation_strategy\x18\x02 \x01(\t\x12N\n\x13\x61llocated_resources\x18\x03 \x03(\x0b\x32\x31.seigr.ResourceAllocation.AllocatedResourcesEntry\x12\x1c\n\x14\x61llocation_timestamp\x18\x04 \x01(\t\x12N\n\x13\x61llocation_metadata\x18\x05 \x03(\x0b\x32\x31.seigr.ResourceAllocation.AllocationMetadataEntry\x1a\x39\n\x17\x41llocatedResourcesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x05:\x02\x38\x01\x1a\x39\n\x17\x41llocationMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01*\xa2\x02\n\nTaskStatus\x12\x19\n\x15TASK_STATUS_UNDEFINED\x10\x00\x12\x16\n\x12TASK_STATUS_QUEUED\x10\x01\x12\x17\n\x13TASK_STATUS_RUNNING\x10\x02\x12\x19\n\x15TASK_STATUS_COMPLETED\x10\x03\x12\x16\n\x12TASK_STATUS_FAILED\x10\x04\x12\x18\n\x14TASK_STATUS_CANCELED\x10\x05\x12\x18\n\x14TASK_STATUS_RETRYING\x10\x06\x12\x16\n\x12TASK_STATUS_PAUSED\x10\x07\x12!\n\x1dTASK_STATUS_WAITING_RESOURCES\x10\x08\x12&\n\"TASK_STATUS_RESOLVING_DEPENDENCIES\x10\t*\xaa\x01\n\x0cTaskPriority\x12\x1b\n\x17TASK_PRIORITY_UNDEFINED\x10\x00\x12\x15\n\x11TASK_PRIORITY_LOW\x10\x01\x12\x18\n\x14TASK_PRIORITY_MEDIUM\x10\x02\x12\x16\n\x12TASK_PRIORITY_HIGH\x10\x03\x12\x1a\n\x16TASK_PRIORITY_CRITICAL\x10\x04\x12\x18\n\x14TASK_PRIORITY_URGENT\x10\x05*\xc9\x01\n\rWorkflowStage\x12\x13\n\x0fSTAGE_UNDEFINED\x10\x00\x12\x16\n\x12STAGE_INITIALIZING\x10\x01\x12\x13\n\x0fSTAGE_EXECUTING\x10\x02\x12\x14\n\x10STAGE_VALIDATING\x10\x03\x12\x14\n\x10STAGE_FINALIZING\x10\x04\x12\x13\n\x0fSTAGE_COMPLETED\x10\x05\x12\x11\n\rSTAGE_ABORTED\x10\x06\x12\"\n\x1eSTAGE_ADAPTIVE_RECONFIGURATION\x10\x07*Z\n\x12TaskDependencyType\x12\x13\n\x0f\x44\x45PENDENCY_HARD\x10\x00\x12\x13\n\x0f\x44\x45PENDENCY_SOFT\x10\x01\x12\x1a\n\x16\x44\x45PENDENCY_CONDITIONAL\x10\x02\x62\x06proto3')
   |
28 | 
29 | _globals = globals()
   |

src/seigr_protocol/compiled/pipeline_pb2.py:7:1: I001 [*] Import block is un-sorted or un-formatted
   |
 5 |   # Protobuf Python Version: 5.29.2
 6 |   """Generated protocol buffer code."""
 7 | / from google.protobuf import descriptor as _descriptor
 8 | | from google.protobuf import descriptor_pool as _descriptor_pool
 9 | | from google.protobuf import runtime_version as _runtime_version
10 | | from google.protobuf import symbol_database as _symbol_database
11 | | from google.protobuf.internal import builder as _builder
12 | | _runtime_version.ValidateProtobufRuntimeVersion(
   | |_^ I001
13 |       _runtime_version.Domain.PUBLIC,
14 |       5,
   |
   = help: Organize imports

src/seigr_protocol/compiled/pipeline_pb2.py:27:101: E501 Line too long (7369 > 100)
   |
27 | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0epipeline.proto\x12\x05seigr\"\x93\x07\n\rPipelineStage\x12\x12\n\nstage_name\x18\x01 \x01(\t\x12\x16\n\x0eoperation_type\x18\x02 \x01(\t\x12\x14\n\x0c\x64\x65pendencies\x18\x03 \x03(\t\x12 \n\x18\x63onditional_dependencies\x18\x04 \x03(\t\x12*\n\rtrigger_event\x18\x05 \x01(\x0e\x32\x13.seigr.TriggerEvent\x12\x38\n\nparameters\x18\x06 \x03(\x0b\x32$.seigr.PipelineStage.ParametersEntry\x12\x30\n\x0cstage_status\x18\x07 \x01(\x0e\x32\x1a.seigr.PipelineStageStatus\x12\x17\n\x0f\x61ssigned_hyphen\x18\x08 \x01(\t\x12\x12\n\nstart_time\x18\t \x01(\t\x12\x10\n\x08\x65nd_time\x18\n \x01(\t\x12\x16\n\x0e\x66\x61ilure_reason\x18\x0b \x01(\t\x12\x37\n\x11recovery_strategy\x18\x0c \x01(\x0e\x32\x1c.seigr.ErrorRecoveryStrategy\x12\x16\n\x0eretry_attempts\x18\r \x01(\x05\x12\x45\n\x11\x65xecution_context\x18\x0e \x03(\x0b\x32*.seigr.PipelineStage.ExecutionContextEntry\x12\x1c\n\x14\x63ondition_expression\x18\x0f \x01(\t\x12\x18\n\x10\x64uration_seconds\x18\x10 \x01(\x05\x12\x1a\n\x12memory_usage_bytes\x18\x11 \x01(\x03\x12\x1b\n\x13\x63pu_load_percentage\x18\x12 \x01(\x02\x12\x1d\n\x15\x61\x64\x61ptive_retry_policy\x18\x13 \x01(\t\x12\x15\n\ris_checkpoint\x18\x14 \x01(\x08\x12I\n\x13resource_allocation\x18\x15 \x03(\x0b\x32,.seigr.PipelineStage.ResourceAllocationEntry\x1a\x31\n\x0fParametersEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x37\n\x15\x45xecutionContextEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x39\n\x17ResourceAllocationEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xb7\x03\n\x08Pipeline\x12\x13\n\x0bpipeline_id\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12$\n\x06stages\x18\x03 \x03(\x0b\x32\x14.seigr.PipelineStage\x12.\n\x0eoverall_status\x18\x04 \x01(\x0e\x32\x16.seigr.OperationStatus\x12\x12\n\ncreated_by\x18\x05 \x01(\t\x12\x12\n\ncreated_at\x18\x06 \x01(\t\x12\x14\n\x0c\x63ompleted_at\x18\x07 \x01(\t\x12/\n\x08metadata\x18\x08 \x03(\x0b\x32\x1d.seigr.Pipeline.MetadataEntry\x12\x14\n\x0ctotal_stages\x18\t \x01(\x05\x12\x19\n\x11successful_stages\x18\n \x01(\x05\x12\x15\n\rfailed_stages\x18\x0b \x01(\x05\x12\'\n\x1f\x61\x64\x61ptive_error_handling_enabled\x18\x0c \x01(\x08\x12!\n\x19\x63heckpoint_based_rollback\x18\r \x01(\x08\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xa6\x03\n\x0ePipelineConfig\x12\x1d\n\x15max_concurrent_stages\x18\x01 \x01(\x05\x12\x1b\n\x13\x64\x65\x66\x61ult_retry_limit\x18\x02 \x01(\x05\x12\x17\n\x0ftimeout_seconds\x18\x03 \x01(\x05\x12\"\n\x1a\x65nable_error_notifications\x18\x04 \x01(\x08\x12\x42\n\x0f\x63onfig_metadata\x18\x05 \x03(\x0b\x32).seigr.PipelineConfig.ConfigMetadataEntry\x12\x1d\n\x15global_error_strategy\x18\x06 \x01(\t\x12\x1c\n\x14\x61uto_resume_on_error\x18\x07 \x01(\x08\x12\x1f\n\x17\x64ynamic_stage_insertion\x18\x08 \x01(\x08\x12 \n\x18max_resource_utilization\x18\t \x01(\x05\x12 \n\x18\x65nable_real_time_scaling\x18\n \x01(\x08\x1a\x35\n\x13\x43onfigMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xc5\x01\n\x18PipelineExecutionHistory\x12\x13\n\x0bpipeline_id\x18\x01 \x01(\t\x12\x32\n\nexecutions\x18\x02 \x03(\x0b\x32\x1e.seigr.PipelineExecutionRecord\x12\x12\n\ntotal_runs\x18\x03 \x01(\x05\x12\x17\n\x0fsuccessful_runs\x18\x04 \x01(\x05\x12\x13\n\x0b\x66\x61iled_runs\x18\x05 \x01(\x05\x12\x1e\n\x16\x61\x64\x61ptive_retries_count\x18\x06 \x01(\x05\"\xf2\x02\n\x17PipelineExecutionRecord\x12\x14\n\x0c\x65xecution_id\x18\x01 \x01(\t\x12\x12\n\nstarted_at\x18\x02 \x01(\t\x12\x10\n\x08\x65nded_at\x18\x03 \x01(\t\x12&\n\x06result\x18\x04 \x01(\x0e\x32\x16.seigr.OperationStatus\x12Q\n\x12\x65xecution_metadata\x18\x05 \x03(\x0b\x32\x35.seigr.PipelineExecutionRecord.ExecutionMetadataEntry\x12\x18\n\x10stages_completed\x18\x06 \x01(\x05\x12\x15\n\rstages_failed\x18\x07 \x01(\x05\x12\x17\n\x0f\x66\x61ilure_summary\x18\x08 \x01(\t\x12\x1c\n\x14\x61\x64\x61ptive_adjustments\x18\t \x01(\t\x1a\x38\n\x16\x45xecutionMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xeb\x03\n\x12PipelineMonitoring\x12\x13\n\x0bpipeline_id\x18\x01 \x01(\t\x12$\n\x06stages\x18\x02 \x03(\x0b\x32\x14.seigr.PipelineStage\x12\x15\n\rcurrent_stage\x18\x03 \x01(\t\x12.\n\x0eoverall_status\x18\x04 \x01(\x0e\x32\x16.seigr.OperationStatus\x12\x18\n\x10stages_completed\x18\x05 \x01(\x05\x12\x16\n\x0estages_pending\x18\x06 \x01(\x05\x12\x13\n\x0blast_update\x18\x07 \x01(\t\x12N\n\x13monitoring_metadata\x18\x08 \x03(\x0b\x32\x31.seigr.PipelineMonitoring.MonitoringMetadataEntry\x12 \n\x18total_memory_usage_bytes\x18\t \x01(\x03\x12#\n\x1b\x61verage_cpu_load_percentage\x18\n \x01(\x02\x12\x17\n\x0flast_checkpoint\x18\x0b \x01(\t\x12!\n\x19\x65stimated_completion_time\x18\x0c \x01(\t\x1a\x39\n\x17MonitoringMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xf4\x04\n\x11PipelineAnalytics\x12\x13\n\x0bpipeline_id\x18\x01 \x01(\t\x12 \n\x18\x61verage_duration_seconds\x18\x02 \x01(\x02\x12\x1c\n\x14\x61verage_success_rate\x18\x03 \x01(\x02\x12&\n\x1e\x66requently_failed_stages_count\x18\x04 \x01(\x05\x12N\n\x14stage_failure_counts\x18\x05 \x03(\x0b\x32\x30.seigr.PipelineAnalytics.StageFailureCountsEntry\x12\x18\n\x10last_analyzed_at\x18\x06 \x01(\t\x12(\n average_adaptive_retries_per_run\x18\x07 \x01(\x02\x12G\n\x10\x66\x61ilure_patterns\x18\x08 \x03(\x0b\x32-.seigr.PipelineAnalytics.FailurePatternsEntry\x12T\n\x17recovery_strategy_usage\x18\t \x03(\x0b\x32\x33.seigr.PipelineAnalytics.RecoveryStrategyUsageEntry\x1a\x39\n\x17StageFailureCountsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x05:\x02\x38\x01\x1a\x36\n\x14\x46\x61ilurePatternsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a<\n\x1aRecoveryStrategyUsageEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x05:\x02\x38\x01*\xa3\x01\n\x0fOperationStatus\x12\x1e\n\x1aOPERATION_STATUS_UNDEFINED\x10\x00\x12\x15\n\x11OPERATION_SUCCESS\x10\x01\x12\x15\n\x11OPERATION_FAILURE\x10\x02\x12\x15\n\x11OPERATION_PENDING\x10\x03\x12\x15\n\x11OPERATION_RUNNING\x10\x04\x12\x14\n\x10OPERATION_PAUSED\x10\x05*\x90\x01\n\x0cTriggerEvent\x12\x12\n\x0eON_DATA_CHANGE\x10\x00\x12\r\n\tON_ACCESS\x10\x01\x12\x18\n\x14ON_INTEGRITY_FAILURE\x10\x02\x12\x15\n\x11ON_CUSTOM_TRIGGER\x10\x03\x12\x15\n\x11ON_MANUAL_REQUEST\x10\x04\x12\x15\n\x11ON_EXTERNAL_EVENT\x10\x05*\xac\x02\n\x13PipelineStageStatus\x12#\n\x1fPIPELINE_STAGE_STATUS_UNDEFINED\x10\x00\x12\x1e\n\x1aPIPELINE_STAGE_INITIALIZED\x10\x01\x12\x1a\n\x16PIPELINE_STAGE_RUNNING\x10\x02\x12\x1c\n\x18PIPELINE_STAGE_COMPLETED\x10\x03\x12\x19\n\x15PIPELINE_STAGE_FAILED\x10\x04\x12\x1a\n\x16PIPELINE_STAGE_SKIPPED\x10\x05\x12\x1b\n\x17PIPELINE_STAGE_RETRYING\x10\x06\x12\x1b\n\x17PIPELINE_STAGE_CANCELED\x10\x07\x12%\n!PIPELINE_STAGE_ADAPTIVE_RESOLVING\x10\x08*\xcf\x01\n\x15\x45rrorRecoveryStrategy\x12\x16\n\x12RECOVERY_UNDEFINED\x10\x00\x12\x12\n\x0eRECOVERY_RETRY\x10\x01\x12\x11\n\rRECOVERY_SKIP\x10\x02\x12\x1f\n\x1bRECOVERY_TERMINATE_PIPELINE\x10\x03\x12\x1c\n\x18RECOVERY_ALERT_AND_PAUSE\x10\x04\x12\x1b\n\x17RECOVERY_ADAPTIVE_RETRY\x10\x05\x12\x1b\n\x17RECOVERY_REDIRECT_STAGE\x10\x06\x62\x06proto3')
   |
28 | 
29 | _globals = globals()
   |

src/seigr_protocol/compiled/policy_pb2.py:7:1: I001 [*] Import block is un-sorted or un-formatted
   |
 5 |   # Protobuf Python Version: 5.29.2
 6 |   """Generated protocol buffer code."""
 7 | / from google.protobuf import descriptor as _descriptor
 8 | | from google.protobuf import descriptor_pool as _descriptor_pool
 9 | | from google.protobuf import runtime_version as _runtime_version
10 | | from google.protobuf import symbol_database as _symbol_database
11 | | from google.protobuf.internal import builder as _builder
12 | | _runtime_version.ValidateProtobufRuntimeVersion(
   | |_^ I001
13 |       _runtime_version.Domain.PUBLIC,
14 |       5,
   |
   = help: Organize imports

src/seigr_protocol/compiled/policy_pb2.py:27:101: E501 Line too long (6207 > 100)
   |
27 | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0cpolicy.proto\x12\x05seigr\"\xac\x04\n\nPolicyRule\x12\x0f\n\x07rule_id\x18\x01 \x01(\t\x12(\n\trule_type\x18\x02 \x01(\x0e\x32\x15.seigr.PolicyRuleType\x12\x13\n\x0b\x64\x65scription\x18\x03 \x01(\t\x12(\n\x07\x61\x63tions\x18\x04 \x03(\x0e\x32\x17.seigr.GovernanceAction\x12\x12\n\ncreated_at\x18\x05 \x01(\t\x12\x15\n\rlast_modified\x18\x06 \x01(\t\x12>\n\x0frule_conditions\x18\x07 \x03(\x0b\x32%.seigr.PolicyRule.RuleConditionsEntry\x12\x44\n\x12penalty_conditions\x18\x08 \x03(\x0b\x32(.seigr.PolicyRule.PenaltyConditionsEntry\x12\x11\n\tis_active\x18\t \x01(\x08\x12:\n\rrule_metadata\x18\n \x03(\x0b\x32#.seigr.PolicyRule.RuleMetadataEntry\x1a\x35\n\x13RuleConditionsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x38\n\x16PenaltyConditionsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x33\n\x11RuleMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xc2\x02\n\x0f\x43omplianceAudit\x12\x10\n\x08\x61udit_id\x18\x01 \x01(\t\x12\x11\n\tpolicy_id\x18\x02 \x01(\t\x12\x0f\n\x07user_id\x18\x03 \x01(\t\x12\x11\n\ttimestamp\x18\x04 \x01(\t\x12\x19\n\x11\x63ompliance_status\x18\x05 \x01(\x08\x12\x1d\n\x15violation_description\x18\x06 \x01(\t\x12\x33\n\x12recommended_action\x18\x07 \x01(\x0e\x32\x17.seigr.GovernanceAction\x12\x41\n\x0e\x61udit_metadata\x18\x08 \x03(\x0b\x32).seigr.ComplianceAudit.AuditMetadataEntry\x1a\x34\n\x12\x41uditMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xd6\x02\n\x11PolicyEnforcement\x12\x11\n\tpolicy_id\x18\x01 \x01(\t\x12\x1b\n\x13target_component_id\x18\x02 \x01(\t\x12 \n\x05rules\x18\x03 \x03(\x0b\x32\x11.seigr.PolicyRule\x12\x1b\n\x13\x65nforce_immediately\x18\x04 \x01(\x08\x12\x19\n\x11\x65nforcement_level\x18\x05 \x01(\t\x12O\n\x14\x65nforcement_metadata\x18\x06 \x03(\x0b\x32\x31.seigr.PolicyEnforcement.EnforcementMetadataEntry\x12\x14\n\x0cinitiated_by\x18\x07 \x01(\t\x12\x14\n\x0cinitiated_at\x18\x08 \x01(\t\x1a:\n\x18\x45nforcementMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xd9\x02\n\x0cSystemPolicy\x12\x11\n\tpolicy_id\x18\x01 \x01(\t\x12\x13\n\x0bpolicy_name\x18\x02 \x01(\t\x12\x14\n\x0cpolicy_scope\x18\x03 \x01(\t\x12 \n\x05rules\x18\x04 \x03(\x0b\x32\x11.seigr.PolicyRule\x12\x11\n\tmandatory\x18\x05 \x01(\x08\x12@\n\x0fpolicy_metadata\x18\x06 \x03(\x0b\x32\'.seigr.SystemPolicy.PolicyMetadataEntry\x12\x12\n\ncreated_by\x18\x07 \x01(\t\x12\x12\n\ncreated_at\x18\x08 \x01(\t\x12\x13\n\x0bmodified_at\x18\t \x01(\t\x12 \n\x18\x61ssociated_compliance_id\x18\n \x01(\t\x1a\x35\n\x13PolicyMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xd7\x02\n\x0fPolicyViolation\x12\x14\n\x0cviolation_id\x18\x01 \x01(\t\x12\x11\n\tpolicy_id\x18\x02 \x01(\t\x12\x0f\n\x07rule_id\x18\x03 \x01(\t\x12\x0f\n\x07user_id\x18\x04 \x01(\t\x12\x11\n\ttimestamp\x18\x05 \x01(\t\x12\x30\n\x0fresponse_action\x18\x06 \x01(\x0e\x32\x17.seigr.GovernanceAction\x12\x19\n\x11resolution_status\x18\x07 \x01(\t\x12\x14\n\x0c\x65scalated_to\x18\x08 \x01(\t\x12I\n\x12violation_metadata\x18\t \x03(\x0b\x32-.seigr.PolicyViolation.ViolationMetadataEntry\x1a\x38\n\x16ViolationMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\">\n\x17PolicyDefinitionRequest\x12#\n\x06policy\x18\x01 \x01(\x0b\x32\x13.seigr.SystemPolicy\"O\n\x18PolicyDefinitionResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x11\n\tpolicy_id\x18\x02 \x01(\t\x12\x0f\n\x07message\x18\x03 \x01(\t\"B\n\x13PolicyUpdateRequest\x12+\n\x0eupdated_policy\x18\x01 \x01(\x0b\x32\x13.seigr.SystemPolicy\"8\n\x14PolicyUpdateResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x0f\n\x07message\x18\x02 \x01(\t\"I\n\x18PolicyEnforcementRequest\x12-\n\x0b\x65nforcement\x18\x01 \x01(\x0b\x32\x18.seigr.PolicyEnforcement\"U\n\x19PolicyEnforcementResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x16\n\x0e\x65nforcement_id\x18\x02 \x01(\t\x12\x0f\n\x07message\x18\x03 \x01(\t\"<\n\x16\x43omplianceCheckRequest\x12\x0f\n\x07user_id\x18\x01 \x01(\t\x12\x11\n\tpolicy_id\x18\x02 \x01(\t\"@\n\x17\x43omplianceCheckResponse\x12\x14\n\x0cis_compliant\x18\x01 \x01(\x08\x12\x0f\n\x07message\x18\x02 \x01(\t\"F\n\x19PolicyViolationLogRequest\x12)\n\tviolation\x18\x01 \x01(\x0b\x32\x16.seigr.PolicyViolation\">\n\x1aPolicyViolationLogResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x0f\n\x07message\x18\x02 \x01(\t\"?\n\x16\x43omplianceAuditRequest\x12%\n\x05\x61udit\x18\x01 \x01(\x0b\x32\x16.seigr.ComplianceAudit\";\n\x17\x43omplianceAuditResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x0f\n\x07message\x18\x02 \x01(\t*\xd3\x01\n\x10GovernanceAction\x12\x14\n\x10\x41\x43TION_UNDEFINED\x10\x00\x12\x11\n\rACTION_REVIEW\x10\x01\x12\x13\n\x0f\x41\x43TION_ESCALATE\x10\x02\x12\x12\n\x0e\x41\x43TION_APPROVE\x10\x03\x12\x11\n\rACTION_REJECT\x10\x04\x12\x11\n\rACTION_NOTIFY\x10\x05\x12\x0f\n\x0b\x41\x43TION_WARN\x10\x06\x12\x18\n\x14\x41\x43TION_REVOKE_ACCESS\x10\x07\x12\x1c\n\x18\x41\x43TION_TERMINATE_PROCESS\x10\x08*\xc3\x01\n\x0ePolicyRuleType\x12\x19\n\x15POLICY_RULE_UNDEFINED\x10\x00\x12\x0f\n\x0b\x41\x43\x43\x45SS_RULE\x10\x01\x12\x17\n\x13\x44\x41TA_RETENTION_RULE\x10\x02\x12\x1c\n\x18RESOURCE_ALLOCATION_RULE\x10\x03\x12\x16\n\x12USER_ACTIVITY_RULE\x10\x04\x12\x10\n\x0cPRIVACY_RULE\x10\x05\x12\x13\n\x0f\x43OMPLIANCE_RULE\x10\x06\x12\x0f\n\x0b\x43USTOM_RULE\x10\x07\x32\x86\x04\n\x17PolicyManagementService\x12O\n\x0c\x43reatePolicy\x12\x1e.seigr.PolicyDefinitionRequest\x1a\x1f.seigr.PolicyDefinitionResponse\x12G\n\x0cUpdatePolicy\x12\x1a.seigr.PolicyUpdateRequest\x1a\x1b.seigr.PolicyUpdateResponse\x12R\n\rEnforcePolicy\x12\x1f.seigr.PolicyEnforcementRequest\x1a .seigr.PolicyEnforcementResponse\x12P\n\x0f\x43heckCompliance\x12\x1d.seigr.ComplianceCheckRequest\x1a\x1e.seigr.ComplianceCheckResponse\x12S\n\x0cLogViolation\x12 .seigr.PolicyViolationLogRequest\x1a!.seigr.PolicyViolationLogResponse\x12V\n\x15\x41uditPolicyCompliance\x12\x1d.seigr.ComplianceAuditRequest\x1a\x1e.seigr.ComplianceAuditResponseb\x06proto3')
   |
28 | 
29 | _globals = globals()
   |

src/seigr_protocol/compiled/replication_pb2.py:7:1: I001 [*] Import block is un-sorted or un-formatted
   |
 5 |   # Protobuf Python Version: 5.29.2
 6 |   """Generated protocol buffer code."""
 7 | / from google.protobuf import descriptor as _descriptor
 8 | | from google.protobuf import descriptor_pool as _descriptor_pool
 9 | | from google.protobuf import runtime_version as _runtime_version
10 | | from google.protobuf import symbol_database as _symbol_database
11 | | from google.protobuf.internal import builder as _builder
12 | | _runtime_version.ValidateProtobufRuntimeVersion(
   | |_^ I001
13 |       _runtime_version.Domain.PUBLIC,
14 |       5,
   |
   = help: Organize imports

src/seigr_protocol/compiled/replication_pb2.py:25:1: E402 Module level import not at top of file
   |
25 | import common_requests_pb2 as common__requests__pb2
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E402
26 | import event_pb2 as event__pb2
   |

src/seigr_protocol/compiled/replication_pb2.py:25:1: I001 [*] Import block is un-sorted or un-formatted
   |
25 | / import common_requests_pb2 as common__requests__pb2
26 | | import event_pb2 as event__pb2
27 | | 
28 | | 
29 | | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x11replication.proto\x12\x05seigr\x1a\x15\x63ommon_requests.proto\x1a\x0b\x65vent.proto\"\x93\x04\n\x11ReplicationConfig\x12\x1a\n\x12replication_factor\x18\x01 \x01(\x05\x12\x1e\n\x16min_replication_factor\x18\x02 \x01(\x05\x12\x1e\n\x16max_replication_factor\x18\x03 \x01(\x05\x12$\n\x1c\x61\x64\x61ptive_replication_enabled\x18\x04 \x01(\x08\x12\x34\n\x10\x64\x65\x66\x61ult_strategy\x18\x05 \x01(\x0e\x32\x1a.seigr.ReplicationStrategy\x12\x16\n\x0e\x63onfig_version\x18\x06 \x01(\t\x12\x38\n\x08metadata\x18\x07 \x03(\x0b\x32&.seigr.ReplicationConfig.MetadataEntry\x12\"\n\x1a\x61\x64\x61ptive_scaling_threshold\x18\x08 \x01(\x05\x12\x18\n\x10\x66\x61ilover_enabled\x18\t \x01(\x08\x12\"\n\x1a\x64ynamic_redundancy_scaling\x18\n \x01(\x08\x12!\n\x19load_balanced_replication\x18\x0b \x01(\x08\x12 \n\x18\x61uto_priority_adjustment\x18\x0c \x01(\x08\x12\x1c\n\x14redundancy_policy_id\x18\r \x01(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xf5\x03\n\x11ReplicationStatus\x12\x12\n\nsegment_id\x18\x01 \x01(\t\x12!\n\x19\x63urrent_replication_count\x18\x02 \x01(\x05\x12 \n\x18target_replication_count\x18\x03 \x01(\x05\x12\x1a\n\x12replica_hyphen_ids\x18\x04 \x03(\t\x12\x1d\n\x15replication_completed\x18\x05 \x01(\x08\x12,\n\x08priority\x18\x06 \x01(\x0e\x32\x1a.seigr.ReplicationPriority\x12\x14\n\x0clast_checked\x18\x07 \x01(\t\x12\x38\n\x08metadata\x18\x08 \x03(\x0b\x32&.seigr.ReplicationStatus.MetadataEntry\x12\x1a\n\x12\x66\x61ilover_target_id\x18\t \x01(\t\x12!\n\x19\x65stimated_completion_time\x18\n \x01(\x05\x12\'\n\x1freplication_speed_bytes_per_sec\x18\x0b \x01(\x03\x12\x1c\n\x14replication_progress\x18\x0c \x01(\x02\x12\x17\n\x0fis_synchronized\x18\r \x01(\x08\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xee\x02\n\x13ReplicationEventLog\x12\x10\n\x08\x65vent_id\x18\x01 \x01(\t\x12\x12\n\nsegment_id\x18\x02 \x01(\t\x12\x0e\n\x06\x61\x63tion\x18\x03 \x01(\t\x12\x14\n\x0cinitiated_by\x18\x04 \x01(\t\x12\x11\n\ttimestamp\x18\x05 \x01(\t\x12\x0e\n\x06status\x18\x06 \x01(\t\x12\x38\n\x07\x64\x65tails\x18\x07 \x03(\x0b\x32\'.seigr.ReplicationEventLog.DetailsEntry\x12\x17\n\x0f\x66\x61ilover_status\x18\x08 \x01(\t\x12\x16\n\x0einitiator_type\x18\t \x01(\t\x12\x19\n\x11retries_attempted\x18\n \x01(\x05\x12\x18\n\x10\x65scalation_level\x18\x0b \x01(\t\x12\x18\n\x10resolution_notes\x18\x0c \x01(\t\x1a.\n\x0c\x44\x65tailsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xc2\x04\n\x11RedundancyManager\x12\x1c\n\x14min_redundancy_level\x18\x01 \x01(\x05\x12\x1c\n\x14max_redundancy_level\x18\x02 \x01(\x05\x12G\n\x10segment_priority\x18\x03 \x03(\x0b\x32-.seigr.RedundancyManager.SegmentPriorityEntry\x12\x1e\n\x16high_priority_segments\x18\x04 \x03(\t\x12\x19\n\x11\x63ritical_segments\x18\x05 \x03(\t\x12M\n\x13redundancy_metadata\x18\x06 \x03(\x0b\x32\x30.seigr.RedundancyManager.RedundancyMetadataEntry\x12 \n\x18\x66\x61ilover_timeout_seconds\x18\x07 \x01(\x05\x12\x1b\n\x13\x61\x64\x61ptive_redundancy\x18\x08 \x01(\x08\x12%\n\x1d\x61\x64\x61ptive_redundancy_policy_id\x18\t \x01(\t\x12)\n!cross_cluster_replication_enabled\x18\n \x01(\x08\x1aR\n\x14SegmentPriorityEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12)\n\x05value\x18\x02 \x01(\x0e\x32\x1a.seigr.ReplicationPriority:\x02\x38\x01\x1a\x39\n\x17RedundancyMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x84\x05\n\x15ReplicationEscalation\x12\x15\n\rescalation_id\x18\x01 \x01(\t\x12\x12\n\nsegment_id\x18\x02 \x01(\t\x12,\n\x08priority\x18\x03 \x01(\x0e\x32\x1a.seigr.ReplicationPriority\x12\x14\n\x0c\x65scalated_at\x18\x04 \x01(\t\x12\x0e\n\x06reason\x18\x05 \x01(\t\x12\x18\n\x10\x61lert_recipients\x18\x06 \x03(\t\x12\'\n\x1fimmediate_replication_triggered\x18\x07 \x01(\x08\x12<\n\x08metadata\x18\x08 \x03(\x0b\x32*.seigr.ReplicationEscalation.MetadataEntry\x12M\n\x11\x61lert_preferences\x18\t \x03(\x0b\x32\x32.seigr.ReplicationEscalation.AlertPreferencesEntry\x12\x30\n\x10\x65scalation_level\x18\n \x01(\x0e\x32\x16.seigr.EscalationLevel\x12\x19\n\x11\x65scalation_status\x18\x0b \x01(\t\x12\'\n\x1f\x65scalation_resolution_timestamp\x18\x0c \x01(\t\x12\x19\n\x11\x66\x61llback_strategy\x18\r \x01(\t\x12!\n\x19replication_delay_penalty\x18\x0e \x01(\x05\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x37\n\x15\x41lertPreferencesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x85\x06\n\x12ReplicationSummary\x12\x12\n\nsummary_id\x18\x01 \x01(\t\x12!\n\x19total_segments_replicated\x18\x02 \x01(\x05\x12\"\n\x1ahigh_priority_replications\x18\x03 \x01(\x05\x12\x1b\n\x13\x66\x61iled_replications\x18\x04 \x01(\x05\x12\x1c\n\x14ongoing_replications\x18\x05 \x01(\x05\x12\x14\n\x0cgenerated_at\x18\x06 \x01(\t\x12H\n\x10segment_statuses\x18\x07 \x03(\x0b\x32..seigr.ReplicationSummary.SegmentStatusesEntry\x12H\n\x10summary_metadata\x18\x08 \x03(\x0b\x32..seigr.ReplicationSummary.SummaryMetadataEntry\x12 \n\x18\x61verage_replication_time\x18\t \x01(\x02\x12#\n\x1btotal_data_replicated_bytes\x18\n \x01(\x03\x12\x1c\n\x14synchronization_rate\x18\x0b \x01(\x02\x12J\n\x11\x65scalation_counts\x18\x0c \x03(\x0b\x32/.seigr.ReplicationSummary.EscalationCountsEntry\x12\x15\n\rfailover_rate\x18\r \x01(\x02\x12$\n\x1credundancy_satisfaction_rate\x18\x0e \x01(\x02\x1aP\n\x14SegmentStatusesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\'\n\x05value\x18\x02 \x01(\x0b\x32\x18.seigr.ReplicationStatus:\x02\x38\x01\x1a\x36\n\x14SummaryMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x37\n\x15\x45scalationCountsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x05:\x02\x38\x01\x62\x06proto3')
   | |_^ I001
30 |   
31 |   _globals = globals()
   |
   = help: Organize imports

src/seigr_protocol/compiled/replication_pb2.py:25:31: F401 [*] `common_requests_pb2` imported but unused
   |
25 | import common_requests_pb2 as common__requests__pb2
   |                               ^^^^^^^^^^^^^^^^^^^^^ F401
26 | import event_pb2 as event__pb2
   |
   = help: Remove unused import: `common_requests_pb2`

src/seigr_protocol/compiled/replication_pb2.py:26:1: E402 Module level import not at top of file
   |
25 | import common_requests_pb2 as common__requests__pb2
26 | import event_pb2 as event__pb2
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E402
   |

src/seigr_protocol/compiled/replication_pb2.py:26:21: F401 [*] `event_pb2` imported but unused
   |
25 | import common_requests_pb2 as common__requests__pb2
26 | import event_pb2 as event__pb2
   |                     ^^^^^^^^^^ F401
   |
   = help: Remove unused import: `event_pb2`

src/seigr_protocol/compiled/replication_pb2.py:29:101: E501 Line too long (5907 > 100)
   |
29 | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x11replication.proto\x12\x05seigr\x1a\x15\x63ommon_requests.proto\x1a\x0b\x65vent.proto\"\x93\x04\n\x11ReplicationConfig\x12\x1a\n\x12replication_factor\x18\x01 \x01(\x05\x12\x1e\n\x16min_replication_factor\x18\x02 \x01(\x05\x12\x1e\n\x16max_replication_factor\x18\x03 \x01(\x05\x12$\n\x1c\x61\x64\x61ptive_replication_enabled\x18\x04 \x01(\x08\x12\x34\n\x10\x64\x65\x66\x61ult_strategy\x18\x05 \x01(\x0e\x32\x1a.seigr.ReplicationStrategy\x12\x16\n\x0e\x63onfig_version\x18\x06 \x01(\t\x12\x38\n\x08metadata\x18\x07 \x03(\x0b\x32&.seigr.ReplicationConfig.MetadataEntry\x12\"\n\x1a\x61\x64\x61ptive_scaling_threshold\x18\x08 \x01(\x05\x12\x18\n\x10\x66\x61ilover_enabled\x18\t \x01(\x08\x12\"\n\x1a\x64ynamic_redundancy_scaling\x18\n \x01(\x08\x12!\n\x19load_balanced_replication\x18\x0b \x01(\x08\x12 \n\x18\x61uto_priority_adjustment\x18\x0c \x01(\x08\x12\x1c\n\x14redundancy_policy_id\x18\r \x01(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xf5\x03\n\x11ReplicationStatus\x12\x12\n\nsegment_id\x18\x01 \x01(\t\x12!\n\x19\x63urrent_replication_count\x18\x02 \x01(\x05\x12 \n\x18target_replication_count\x18\x03 \x01(\x05\x12\x1a\n\x12replica_hyphen_ids\x18\x04 \x03(\t\x12\x1d\n\x15replication_completed\x18\x05 \x01(\x08\x12,\n\x08priority\x18\x06 \x01(\x0e\x32\x1a.seigr.ReplicationPriority\x12\x14\n\x0clast_checked\x18\x07 \x01(\t\x12\x38\n\x08metadata\x18\x08 \x03(\x0b\x32&.seigr.ReplicationStatus.MetadataEntry\x12\x1a\n\x12\x66\x61ilover_target_id\x18\t \x01(\t\x12!\n\x19\x65stimated_completion_time\x18\n \x01(\x05\x12\'\n\x1freplication_speed_bytes_per_sec\x18\x0b \x01(\x03\x12\x1c\n\x14replication_progress\x18\x0c \x01(\x02\x12\x17\n\x0fis_synchronized\x18\r \x01(\x08\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xee\x02\n\x13ReplicationEventLog\x12\x10\n\x08\x65vent_id\x18\x01 \x01(\t\x12\x12\n\nsegment_id\x18\x02 \x01(\t\x12\x0e\n\x06\x61\x63tion\x18\x03 \x01(\t\x12\x14\n\x0cinitiated_by\x18\x04 \x01(\t\x12\x11\n\ttimestamp\x18\x05 \x01(\t\x12\x0e\n\x06status\x18\x06 \x01(\t\x12\x38\n\x07\x64\x65tails\x18\x07 \x03(\x0b\x32\'.seigr.ReplicationEventLog.DetailsEntry\x12\x17\n\x0f\x66\x61ilover_status\x18\x08 \x01(\t\x12\x16\n\x0einitiator_type\x18\t \x01(\t\x12\x19\n\x11retries_attempted\x18\n \x01(\x05\x12\x18\n\x10\x65scalation_level\x18\x0b \x01(\t\x12\x18\n\x10resolution_notes\x18\x0c \x01(\t\x1a.\n\x0c\x44\x65tailsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xc2\x04\n\x11RedundancyManager\x12\x1c\n\x14min_redundancy_level\x18\x01 \x01(\x05\x12\x1c\n\x14max_redundancy_level\x18\x02 \x01(\x05\x12G\n\x10segment_priority\x18\x03 \x03(\x0b\x32-.seigr.RedundancyManager.SegmentPriorityEntry\x12\x1e\n\x16high_priority_segments\x18\x04 \x03(\t\x12\x19\n\x11\x63ritical_segments\x18\x05 \x03(\t\x12M\n\x13redundancy_metadata\x18\x06 \x03(\x0b\x32\x30.seigr.RedundancyManager.RedundancyMetadataEntry\x12 \n\x18\x66\x61ilover_timeout_seconds\x18\x07 \x01(\x05\x12\x1b\n\x13\x61\x64\x61ptive_redundancy\x18\x08 \x01(\x08\x12%\n\x1d\x61\x64\x61ptive_redundancy_policy_id\x18\t \x01(\t\x12)\n!cross_cluster_replication_enabled\x18\n \x01(\x08\x1aR\n\x14SegmentPriorityEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12)\n\x05value\x18\x02 \x01(\x0e\x32\x1a.seigr.ReplicationPriority:\x02\x38\x01\x1a\x39\n\x17RedundancyMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x84\x05\n\x15ReplicationEscalation\x12\x15\n\rescalation_id\x18\x01 \x01(\t\x12\x12\n\nsegment_id\x18\x02 \x01(\t\x12,\n\x08priority\x18\x03 \x01(\x0e\x32\x1a.seigr.ReplicationPriority\x12\x14\n\x0c\x65scalated_at\x18\x04 \x01(\t\x12\x0e\n\x06reason\x18\x05 \x01(\t\x12\x18\n\x10\x61lert_recipients\x18\x06 \x03(\t\x12\'\n\x1fimmediate_replication_triggered\x18\x07 \x01(\x08\x12<\n\x08metadata\x18\x08 \x03(\x0b\x32*.seigr.ReplicationEscalation.MetadataEntry\x12M\n\x11\x61lert_preferences\x18\t \x03(\x0b\x32\x32.seigr.ReplicationEscalation.AlertPreferencesEntry\x12\x30\n\x10\x65scalation_level\x18\n \x01(\x0e\x32\x16.seigr.EscalationLevel\x12\x19\n\x11\x65scalation_status\x18\x0b \x01(\t\x12\'\n\x1f\x65scalation_resolution_timestamp\x18\x0c \x01(\t\x12\x19\n\x11\x66\x61llback_strategy\x18\r \x01(\t\x12!\n\x19replication_delay_penalty\x18\x0e \x01(\x05\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x37\n\x15\x41lertPreferencesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x85\x06\n\x12ReplicationSummary\x12\x12\n\nsummary_id\x18\x01 \x01(\t\x12!\n\x19total_segments_replicated\x18\x02 \x01(\x05\x12\"\n\x1ahigh_priority_replications\x18\x03 \x01(\x05\x12\x1b\n\x13\x66\x61iled_replications\x18\x04 \x01(\x05\x12\x1c\n\x14ongoing_replications\x18\x05 \x01(\x05\x12\x14\n\x0cgenerated_at\x18\x06 \x01(\t\x12H\n\x10segment_statuses\x18\x07 \x03(\x0b\x32..seigr.ReplicationSummary.SegmentStatusesEntry\x12H\n\x10summary_metadata\x18\x08 \x03(\x0b\x32..seigr.ReplicationSummary.SummaryMetadataEntry\x12 \n\x18\x61verage_replication_time\x18\t \x01(\x02\x12#\n\x1btotal_data_replicated_bytes\x18\n \x01(\x03\x12\x1c\n\x14synchronization_rate\x18\x0b \x01(\x02\x12J\n\x11\x65scalation_counts\x18\x0c \x03(\x0b\x32/.seigr.ReplicationSummary.EscalationCountsEntry\x12\x15\n\rfailover_rate\x18\r \x01(\x02\x12$\n\x1credundancy_satisfaction_rate\x18\x0e \x01(\x02\x1aP\n\x14SegmentStatusesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\'\n\x05value\x18\x02 \x01(\x0b\x32\x18.seigr.ReplicationStatus:\x02\x38\x01\x1a\x36\n\x14SummaryMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x37\n\x15\x45scalationCountsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x05:\x02\x38\x01\x62\x06proto3')
   |
30 | 
31 | _globals = globals()
   |

src/seigr_protocol/compiled/resource_management_pb2.py:7:1: I001 [*] Import block is un-sorted or un-formatted
   |
 5 |   # Protobuf Python Version: 5.29.2
 6 |   """Generated protocol buffer code."""
 7 | / from google.protobuf import descriptor as _descriptor
 8 | | from google.protobuf import descriptor_pool as _descriptor_pool
 9 | | from google.protobuf import runtime_version as _runtime_version
10 | | from google.protobuf import symbol_database as _symbol_database
11 | | from google.protobuf.internal import builder as _builder
12 | | _runtime_version.ValidateProtobufRuntimeVersion(
   | |_^ I001
13 |       _runtime_version.Domain.PUBLIC,
14 |       5,
   |
   = help: Organize imports

src/seigr_protocol/compiled/resource_management_pb2.py:27:101: E501 Line too long (6347 > 100)
   |
27 | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x19resource_management.proto\x12\x05seigr\"\xbd\x03\n\rResourceUsage\x12!\n\x04type\x18\x01 \x01(\x0e\x32\x13.seigr.ResourceType\x12\x18\n\x10usage_percentage\x18\x02 \x01(\x01\x12\x16\n\x0e\x61\x62solute_usage\x18\x03 \x01(\x01\x12\x0c\n\x04unit\x18\x04 \x01(\t\x12\x11\n\thyphen_id\x18\x05 \x01(\t\x12\x11\n\ttimestamp\x18\x06 \x01(\t\x12#\n\x05state\x18\x07 \x01(\x0e\x32\x14.seigr.ResourceState\x12?\n\x0eusage_metadata\x18\x08 \x03(\x0b\x32\'.seigr.ResourceUsage.UsageMetadataEntry\x12\x16\n\x0e\x61pplication_id\x18\t \x01(\t\x12\x13\n\x0btemperature\x18\n \x01(\x01\x12!\n\x19resource_efficiency_score\x18\x0b \x01(\x01\x12\x19\n\x11power_consumption\x18\x0c \x01(\x01\x12\x1c\n\x14sustainable_use_flag\x18\r \x01(\x08\x1a\x34\n\x12UsageMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xbb\x02\n\x0eResourceLimits\x12!\n\x04type\x18\x01 \x01(\x0e\x32\x13.seigr.ResourceType\x12\x19\n\x11warning_threshold\x18\x02 \x01(\x01\x12\x1a\n\x12\x63ritical_threshold\x18\x03 \x01(\x01\x12\x14\n\x0c\x61\x62solute_max\x18\x04 \x01(\x01\x12\x0c\n\x04unit\x18\x05 \x01(\t\x12\x16\n\x0e\x65nforce_limits\x18\x06 \x01(\x08\x12\x1a\n\x12\x65scalation_contact\x18\x07 \x01(\t\x12\'\n\x1fmax_continuous_overload_seconds\x18\x08 \x01(\x05\x12\x19\n\x11\x61uto_scale_action\x18\t \x01(\t\x12\x18\n\x10usage_decay_rate\x18\n \x01(\x01\x12\x19\n\x11sustainable_limit\x18\x0b \x01(\x01\"\xda\x04\n\x15ResourceMonitorConfig\x12\x1e\n\x16\x63heck_interval_seconds\x18\x01 \x01(\x05\x12.\n\x0fresource_limits\x18\x02 \x03(\x0b\x32\x15.seigr.ResourceLimits\x12\x17\n\x0f\x65nable_alerting\x18\x03 \x01(\x08\x12I\n\x0f\x63onfig_metadata\x18\x04 \x03(\x0b\x32\x30.seigr.ResourceMonitorConfig.ConfigMetadataEntry\x12\x16\n\x0e\x61lert_protocol\x18\x05 \x01(\t\x12\x1c\n\x14grace_period_seconds\x18\x06 \x01(\x05\x12\x1c\n\x14\x61uto_scale_threshold\x18\x07 \x01(\x05\x12T\n\x15\x61lert_severity_levels\x18\x08 \x03(\x0b\x32\x35.seigr.ResourceMonitorConfig.AlertSeverityLevelsEntry\x12\x1d\n\x15\x61lert_frequency_limit\x18\t \x01(\x05\x12 \n\x18load_balancing_threshold\x18\n \x01(\x01\x12/\n\'resource_efficiency_adjustment_interval\x18\x0b \x01(\x05\x1a\x35\n\x13\x43onfigMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a:\n\x18\x41lertSeverityLevelsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x05:\x02\x38\x01\"\xfc\x02\n\x14ResourceUsageSummary\x12!\n\x04type\x18\x01 \x01(\x0e\x32\x13.seigr.ResourceType\x12\x11\n\thyphen_id\x18\x02 \x01(\t\x12\x15\n\raverage_usage\x18\x03 \x01(\x01\x12\x12\n\npeak_usage\x18\x04 \x01(\x01\x12\x15\n\rminimum_usage\x18\x05 \x01(\x01\x12 \n\x18usage_standard_deviation\x18\x06 \x01(\x01\x12\x16\n\x0esummary_period\x18\x07 \x01(\t\x12\x1e\n\x16threshold_exceed_count\x18\x08 \x01(\x05\x12\x15\n\rcost_estimate\x18\t \x01(\x01\x12\x1c\n\x14time_above_threshold\x18\n \x01(\x05\x12\x1c\n\x14\x65\x66\x66iciency_score_avg\x18\x0b \x01(\x01\x12\x1d\n\x15power_consumption_avg\x18\x0c \x01(\x01\x12 \n\x18sustainability_compliant\x18\r \x01(\x08\"\x85\x06\n\x15\x43lusterResourceStatus\x12\x12\n\ncluster_id\x18\x01 \x01(\t\x12\x35\n\x10hyphen_summaries\x18\x02 \x03(\x0b\x32\x1b.seigr.ResourceUsageSummary\x12T\n\x15\x63luster_average_usage\x18\x03 \x03(\x0b\x32\x35.seigr.ClusterResourceStatus.ClusterAverageUsageEntry\x12N\n\x12\x63luster_peak_usage\x18\x04 \x03(\x0b\x32\x32.seigr.ClusterResourceStatus.ClusterPeakUsageEntry\x12\x14\n\x0clast_updated\x18\x05 \x01(\t\x12\x15\n\rhealth_status\x18\x06 \x01(\t\x12 \n\x18overloaded_hyphens_count\x18\x07 \x01(\x05\x12\x1c\n\x14recovery_action_plan\x18\x08 \x01(\t\x12!\n\x19\x63luster_utilization_score\x18\t \x01(\x01\x12<\n\x08metadata\x18\n \x03(\x0b\x32*.seigr.ClusterResourceStatus.MetadataEntry\x12\x1f\n\x17load_distribution_score\x18\x0b \x01(\x01\x12\x1d\n\x15\x61lert_escalation_path\x18\x0c \x01(\t\x12&\n\x1esustainability_compliance_rate\x18\r \x01(\x01\x12\x1f\n\x17\x61\x64\x61ptive_scaling_events\x18\x0e \x01(\x05\x1a:\n\x18\x43lusterAverageUsageEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x01:\x02\x38\x01\x1a\x37\n\x15\x43lusterPeakUsageEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x01:\x02\x38\x01\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xe7\x02\n\x16ResourceDemandForecast\x12!\n\x04type\x18\x01 \x01(\x0e\x32\x13.seigr.ResourceType\x12\x12\n\ncluster_id\x18\x02 \x01(\t\x12\x17\n\x0f\x66orecast_period\x18\x03 \x01(\t\x12\x1c\n\x14projected_peak_usage\x18\x04 \x01(\x01\x12\x1f\n\x17projected_average_usage\x18\x05 \x01(\x01\x12\x18\n\x10\x63onfidence_level\x18\x06 \x01(\x01\x12\x1b\n\x13\x66orecast_created_at\x18\x07 \x01(\t\x12N\n\x11\x66orecast_metadata\x18\x08 \x03(\x0b\x32\x33.seigr.ResourceDemandForecast.ForecastMetadataEntry\x1a\x37\n\x15\x46orecastMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x95\x03\n\x14ResourceDistribution\x12\x17\n\x0f\x64istribution_id\x18\x01 \x01(\t\x12!\n\x04type\x18\x02 \x01(\x0e\x32\x13.seigr.ResourceType\x12\x19\n\x11source_cluster_id\x18\x03 \x01(\t\x12\x1a\n\x12target_cluster_ids\x18\x04 \x03(\t\x12\x1b\n\x13max_latency_allowed\x18\x05 \x01(\x01\x12 \n\x18min_efficiency_threshold\x18\x06 \x01(\x01\x12\x1d\n\x15\x64istribution_strategy\x18\x07 \x01(\t\x12T\n\x15\x64istribution_metadata\x18\x08 \x03(\x0b\x32\x35.seigr.ResourceDistribution.DistributionMetadataEntry\x12\x19\n\x11\x65nable_encryption\x18\t \x01(\x08\x1a;\n\x19\x44istributionMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01*\xb8\x01\n\x0cResourceType\x12\x16\n\x12RESOURCE_UNDEFINED\x10\x00\x12\x10\n\x0cRESOURCE_CPU\x10\x01\x12\x13\n\x0fRESOURCE_MEMORY\x10\x02\x12\x14\n\x10RESOURCE_DISK_IO\x10\x03\x12\x16\n\x12RESOURCE_BANDWIDTH\x10\x04\x12\x10\n\x0cRESOURCE_GPU\x10\x05\x12\x14\n\x10RESOURCE_STORAGE\x10\x06\x12\x13\n\x0fRESOURCE_ENERGY\x10\x07*\xbc\x01\n\rResourceState\x12\x1c\n\x18RESOURCE_STATE_UNDEFINED\x10\x00\x12\x1a\n\x16RESOURCE_STATE_OPTIMAL\x10\x01\x12\x19\n\x15RESOURCE_STATE_NORMAL\x10\x02\x12\x1a\n\x16RESOURCE_STATE_WARNING\x10\x03\x12\x1b\n\x17RESOURCE_STATE_CRITICAL\x10\x04\x12\x1d\n\x19RESOURCE_STATE_OVERLOADED\x10\x05\x62\x06proto3')
   |
28 | 
29 | _globals = globals()
   |

src/seigr_protocol/compiled/reward_distribution_pb2.py:7:1: I001 [*] Import block is un-sorted or un-formatted
   |
 5 |   # Protobuf Python Version: 5.29.2
 6 |   """Generated protocol buffer code."""
 7 | / from google.protobuf import descriptor as _descriptor
 8 | | from google.protobuf import descriptor_pool as _descriptor_pool
 9 | | from google.protobuf import runtime_version as _runtime_version
10 | | from google.protobuf import symbol_database as _symbol_database
11 | | from google.protobuf.internal import builder as _builder
12 | | _runtime_version.ValidateProtobufRuntimeVersion(
   | |_^ I001
13 |       _runtime_version.Domain.PUBLIC,
14 |       5,
   |
   = help: Organize imports

src/seigr_protocol/compiled/reward_distribution_pb2.py:27:101: E501 Line too long (5325 > 100)
   |
27 | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x19reward_distribution.proto\x12\x05seigr\"\xb2\x03\n\x06Reward\x12\x11\n\treward_id\x18\x01 \x01(\t\x12\x14\n\x0crecipient_id\x18\x02 \x01(\t\x12\x0e\n\x06\x61mount\x18\x03 \x01(\x04\x12&\n\x0breward_type\x18\x04 \x01(\x0e\x32\x11.seigr.RewardType\x12\x10\n\x08interval\x18\x05 \x01(\x04\x12\x11\n\ttimestamp\x18\x06 \x01(\t\x12\x12\n\nexpiration\x18\x07 \x01(\t\x12\x31\n\nconditions\x18\x08 \x03(\x0b\x32\x1d.seigr.Reward.ConditionsEntry\x12\x11\n\tissued_by\x18\t \x01(\t\x12\x19\n\x11\x65\x63o_friendly_flag\x18\n \x01(\x08\x12@\n\x12\x64ynamic_parameters\x18\x0b \x03(\x0b\x32$.seigr.Reward.DynamicParametersEntry\x1a\x31\n\x0f\x43onditionsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x38\n\x16\x44ynamicParametersEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x01:\x02\x38\x01\"\xbb\x02\n\x12RedistributionPool\x12\x14\n\x0cpool_balance\x18\x01 \x01(\x04\x12#\n\x0creward_queue\x18\x02 \x03(\x0b\x32\r.seigr.Reward\x12\x18\n\x10senary_threshold\x18\x03 \x01(\x04\x12\x11\n\tis_active\x18\x04 \x01(\x08\x12L\n\x12\x64ynamic_thresholds\x18\x05 \x03(\x0b\x32\x30.seigr.RedistributionPool.DynamicThresholdsEntry\x12\x18\n\x10\x65\x63o_reserve_fund\x18\x06 \x01(\x04\x12\x1b\n\x13last_distributed_at\x18\x07 \x01(\t\x1a\x38\n\x16\x44ynamicThresholdsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x01:\x02\x38\x01\"\xe1\x01\n\x13RewardScalingConfig\x12\x16\n\x0escaling_factor\x18\x01 \x01(\x01\x12\x1b\n\x13\x61\x64justment_interval\x18\x02 \x01(\x04\x12\x1a\n\x12min_scaling_factor\x18\x03 \x01(\x01\x12\x1a\n\x12max_scaling_factor\x18\x04 \x01(\x01\x12\x1b\n\x13\x65\x63o_priority_weight\x18\x05 \x01(\x01\x12\x1e\n\x16max_distribution_limit\x18\x06 \x01(\x04\x12 \n\x18\x61\x64\x61ptive_scaling_enabled\x18\x07 \x01(\x08\"\x90\x02\n\x15\x41llocateRewardRequest\x12\x14\n\x0crecipient_id\x18\x01 \x01(\t\x12&\n\x0breward_type\x18\x02 \x01(\x0e\x32\x11.seigr.RewardType\x12\x0e\n\x06\x61mount\x18\x03 \x01(\x04\x12U\n\x15\x61\x64\x64itional_conditions\x18\x04 \x03(\x0b\x32\x36.seigr.AllocateRewardRequest.AdditionalConditionsEntry\x12\x15\n\reco_incentive\x18\x05 \x01(\x08\x1a;\n\x19\x41\x64\x64itionalConditionsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"M\n\x16\x41llocateRewardResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x0f\n\x07message\x18\x02 \x01(\t\x12\x11\n\treward_id\x18\x03 \x01(\t\"t\n\x15\x44istributePoolRequest\x12\x18\n\x10senary_threshold\x18\x01 \x01(\x04\x12 \n\x18override_inactive_status\x18\x02 \x01(\x08\x12\x1f\n\x17prioritize_eco_friendly\x18\x03 \x01(\x08\"\x81\x02\n\x16\x44istributePoolResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x1a\n\x12\x64istributed_amount\x18\x02 \x01(\x04\x12\x0f\n\x07message\x18\x03 \x01(\t\x12\x65\n\x1dreward_distribution_breakdown\x18\x04 \x03(\x0b\x32>.seigr.DistributePoolResponse.RewardDistributionBreakdownEntry\x1a\x42\n RewardDistributionBreakdownEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x04:\x02\x38\x01\"q\n\x17GetRewardHistoryRequest\x12\x14\n\x0crecipient_id\x18\x01 \x01(\t\x12\r\n\x05limit\x18\x02 \x01(\r\x12\x17\n\x0finclude_expired\x18\x03 \x01(\x08\x12\x18\n\x10only_eco_rewards\x18\x04 \x01(\x08\"P\n\x18GetRewardHistoryResponse\x12\x14\n\x0crecipient_id\x18\x01 \x01(\t\x12\x1e\n\x07rewards\x18\x02 \x03(\x0b\x32\r.seigr.Reward\"\xae\x01\n\x1aUpdateScalingConfigRequest\x12\x1a\n\x12new_scaling_factor\x18\x01 \x01(\x01\x12\x1f\n\x17new_adjustment_interval\x18\x02 \x01(\x04\x12\x1a\n\x12min_scaling_factor\x18\x03 \x01(\x01\x12\x1a\n\x12max_scaling_factor\x18\x04 \x01(\x01\x12\x1b\n\x13\x65\x63o_priority_weight\x18\x05 \x01(\x01\"?\n\x1bUpdateScalingConfigResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x0f\n\x07message\x18\x02 \x01(\t\"F\n\x10\x45\x63oReportRequest\x12\x0e\n\x06period\x18\x01 \x01(\t\x12\"\n\x1ainclude_detailed_breakdown\x18\x02 \x01(\x08\"\x91\x02\n\x11\x45\x63oReportResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x0f\n\x07message\x18\x02 \x01(\t\x12R\n\x16\x65\x63o_incentives_summary\x18\x03 \x03(\x0b\x32\x32.seigr.EcoReportResponse.EcoIncentivesSummaryEntry\x12#\n\x1btotal_eco_funds_distributed\x18\x04 \x01(\x01\x12$\n\x1cnetwork_sustainability_score\x18\x05 \x01(\x01\x1a;\n\x19\x45\x63oIncentivesSummaryEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x01:\x02\x38\x01*\xda\x01\n\nRewardType\x12\x19\n\x15REWARD_TYPE_UNDEFINED\x10\x00\x12\x1c\n\x18REWARD_TYPE_CONNECTIVITY\x10\x01\x12$\n REWARD_TYPE_CONTENT_CONTRIBUTION\x10\x02\x12$\n REWARD_TYPE_VOTING_PARTICIPATION\x10\x03\x12#\n\x1fREWARD_TYPE_RESOURCE_EFFICIENCY\x10\x04\x12\"\n\x1eREWARD_TYPE_COLLABORATIVE_TASK\x10\x05\x32\xb4\x03\n\x19RewardDistributionService\x12M\n\x0e\x41llocateReward\x12\x1c.seigr.AllocateRewardRequest\x1a\x1d.seigr.AllocateRewardResponse\x12M\n\x0e\x44istributePool\x12\x1c.seigr.DistributePoolRequest\x1a\x1d.seigr.DistributePoolResponse\x12S\n\x10GetRewardHistory\x12\x1e.seigr.GetRewardHistoryRequest\x1a\x1f.seigr.GetRewardHistoryResponse\x12\\\n\x13UpdateScalingConfig\x12!.seigr.UpdateScalingConfigRequest\x1a\".seigr.UpdateScalingConfigResponse\x12\x46\n\x11GenerateEcoReport\x12\x17.seigr.EcoReportRequest\x1a\x18.seigr.EcoReportResponseb\x06proto3')
   |
28 | 
29 | _globals = globals()
   |

src/seigr_protocol/compiled/reward_distribution_pb2.py:43:101: E501 Line too long (101 > 100)
   |
41 |   _globals['_ALLOCATEREWARDREQUEST_ADDITIONALCONDITIONSENTRY']._serialized_options = b'8\001'
42 |   _globals['_DISTRIBUTEPOOLRESPONSE_REWARDDISTRIBUTIONBREAKDOWNENTRY']._loaded_options = None
43 |   _globals['_DISTRIBUTEPOOLRESPONSE_REWARDDISTRIBUTIONBREAKDOWNENTRY']._serialized_options = b'8\001'
   |                                                                                                     ^ E501
44 |   _globals['_ECOREPORTRESPONSE_ECOINCENTIVESSUMMARYENTRY']._loaded_options = None
45 |   _globals['_ECOREPORTRESPONSE_ECOINCENTIVESSUMMARYENTRY']._serialized_options = b'8\001'
   |

src/seigr_protocol/compiled/rollback_pb2.py:7:1: I001 [*] Import block is un-sorted or un-formatted
   |
 5 |   # Protobuf Python Version: 5.29.2
 6 |   """Generated protocol buffer code."""
 7 | / from google.protobuf import descriptor as _descriptor
 8 | | from google.protobuf import descriptor_pool as _descriptor_pool
 9 | | from google.protobuf import runtime_version as _runtime_version
10 | | from google.protobuf import symbol_database as _symbol_database
11 | | from google.protobuf.internal import builder as _builder
12 | | _runtime_version.ValidateProtobufRuntimeVersion(
   | |_^ I001
13 |       _runtime_version.Domain.PUBLIC,
14 |       5,
   |
   = help: Organize imports

src/seigr_protocol/compiled/rollback_pb2.py:27:101: E501 Line too long (4931 > 100)
   |
27 | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0erollback.proto\x12\x05seigr\"\xb2\x03\n\x0bRollbackLog\x12\x0e\n\x06log_id\x18\x01 \x01(\t\x12\x14\n\x0csegment_hash\x18\x02 \x01(\t\x12\x1a\n\x12rollback_timestamp\x18\x03 \x01(\t\x12\x14\n\x0c\x61ttempted_at\x18\x04 \x01(\t\x12\x13\n\x0b\x65xecuted_at\x18\x05 \x01(\t\x12\x0f\n\x07user_id\x18\x06 \x01(\t\x12-\n\revent_trigger\x18\x07 \x01(\x0e\x32\x16.seigr.RollbackTrigger\x12%\n\x06status\x18\x08 \x01(\x0e\x32\x15.seigr.RollbackStatus\x12\x0f\n\x07\x64\x65tails\x18\t \x01(\t\x12\x15\n\rretry_attempt\x18\n \x01(\x05\x12\x32\n\x08metadata\x18\x0b \x03(\x0b\x32 .seigr.RollbackLog.MetadataEntry\x12\"\n\x1a\x63onflict_resolution_status\x18\x0c \x01(\t\x12\x1e\n\x16\x65\x63o_friendly_execution\x18\r \x01(\x08\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xac\x03\n\x0fRollbackRequest\x12\x12\n\nrequest_id\x18\x01 \x01(\t\x12\x14\n\x0csegment_hash\x18\x02 \x01(\t\x12\x18\n\x10target_timestamp\x18\x03 \x01(\t\x12\'\n\x07trigger\x18\x04 \x01(\x0e\x32\x16.seigr.RollbackTrigger\x12\x14\n\x0crequested_by\x18\x05 \x01(\t\x12\x14\n\x0crequested_at\x18\x06 \x01(\t\x12:\n\nparameters\x18\x07 \x03(\x0b\x32&.seigr.RollbackRequest.ParametersEntry\x12!\n\x19validate_before_execution\x18\x08 \x01(\x08\x12\x1a\n\x12max_retry_attempts\x18\t \x01(\x05\x12\x19\n\x11requires_approval\x18\n \x01(\x08\x12\x1c\n\x14\x64\x65pendent_segment_id\x18\x0b \x01(\t\x12\x19\n\x11\x65\x63o_friendly_mode\x18\x0c \x01(\x08\x1a\x31\n\x0fParametersEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xef\x02\n\x18RollbackValidationResult\x12\x15\n\rvalidation_id\x18\x01 \x01(\t\x12\x14\n\x0csegment_hash\x18\x02 \x01(\t\x12\x10\n\x08is_valid\x18\x03 \x01(\x08\x12\x1a\n\x12validation_message\x18\x04 \x01(\t\x12\x14\n\x0cvalidated_at\x18\x05 \x01(\t\x12T\n\x13validation_metadata\x18\x06 \x03(\x0b\x32\x37.seigr.RollbackValidationResult.ValidationMetadataEntry\x12\x17\n\x0finvalid_reasons\x18\x07 \x03(\t\x12\x1a\n\x12recommended_action\x18\x08 \x01(\t\x12\x1c\n\x14\x64\x65pendencies_checked\x18\t \x03(\t\x1a\x39\n\x17ValidationMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x87\x03\n\x0fRollbackHistory\x12\x12\n\nsegment_id\x18\x01 \x01(\t\x12)\n\rrollback_logs\x18\x02 \x03(\x0b\x32\x12.seigr.RollbackLog\x12\x18\n\x10last_rollback_at\x18\x03 \x01(\t\x12\x17\n\x0ftotal_rollbacks\x18\x04 \x01(\x05\x12\x1c\n\x14successful_rollbacks\x18\x05 \x01(\x05\x12\x18\n\x10\x66\x61iled_rollbacks\x18\x06 \x01(\x05\x12\x36\n\x08metadata\x18\x07 \x03(\x0b\x32$.seigr.RollbackHistory.MetadataEntry\x12\x1f\n\x17recovery_plan_reference\x18\x08 \x01(\t\x12 \n\x18has_unresolved_conflicts\x18\t \x01(\x08\x12\x1e\n\x16\x65\x63o_friendly_rollbacks\x18\n \x01(\x05\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xe7\x02\n\x10RollbackProgress\x12\x13\n\x0brollback_id\x18\x01 \x01(\t\x12-\n\x0e\x63urrent_status\x18\x02 \x01(\x0e\x32\x15.seigr.RollbackStatus\x12\x1b\n\x13progress_percentage\x18\x03 \x01(\x02\x12\x12\n\nsegment_id\x18\x04 \x01(\t\x12\x1d\n\x15last_update_timestamp\x18\x05 \x01(\t\x12\x1a\n\x12responsible_hyphen\x18\x06 \x01(\t\x12 \n\x18remaining_estimated_time\x18\x07 \x01(\x05\x12H\n\x11progress_metadata\x18\x08 \x03(\x0b\x32-.seigr.RollbackProgress.ProgressMetadataEntry\x1a\x37\n\x15ProgressMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xc3\x02\n\x1aRollbackConflictResolution\x12\x13\n\x0b\x63onflict_id\x18\x01 \x01(\t\x12\x12\n\nsegment_id\x18\x02 \x01(\t\x12\x1b\n\x13\x63onflicting_changes\x18\x03 \x03(\t\x12\x19\n\x11resolution_status\x18\x04 \x01(\t\x12\x13\n\x0bresolved_by\x18\x05 \x01(\t\x12\x1c\n\x14resolution_timestamp\x18\x06 \x01(\t\x12V\n\x13resolution_metadata\x18\x07 \x03(\x0b\x32\x39.seigr.RollbackConflictResolution.ResolutionMetadataEntry\x1a\x39\n\x17ResolutionMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01*\x90\x02\n\x0eRollbackStatus\x12\x1d\n\x19ROLLBACK_STATUS_UNDEFINED\x10\x00\x12\x1b\n\x17ROLLBACK_STATUS_SUCCESS\x10\x01\x12\x1b\n\x17ROLLBACK_STATUS_FAILURE\x10\x02\x12\x1b\n\x17ROLLBACK_STATUS_PENDING\x10\x03\x12\x1f\n\x1bROLLBACK_STATUS_IN_PROGRESS\x10\x04\x12#\n\x1fROLLBACK_STATUS_PARTIAL_SUCCESS\x10\x05\x12\x1b\n\x17ROLLBACK_STATUS_ABORTED\x10\x06\x12%\n!ROLLBACK_STATUS_CONFLICT_DETECTED\x10\x07*\xb9\x02\n\x0fRollbackTrigger\x12\x1e\n\x1aROLLBACK_TRIGGER_UNDEFINED\x10\x00\x12\x1b\n\x17ROLLBACK_TRIGGER_MANUAL\x10\x01\x12&\n\"ROLLBACK_TRIGGER_INTEGRITY_FAILURE\x10\x02\x12#\n\x1fROLLBACK_TRIGGER_SYSTEM_RESTORE\x10\x03\x12\"\n\x1eROLLBACK_TRIGGER_DATA_CONFLICT\x10\x04\x12\'\n#ROLLBACK_TRIGGER_SCHEDULED_ROLLBACK\x10\x05\x12%\n!ROLLBACK_TRIGGER_POLICY_VIOLATION\x10\x06\x12(\n$ROLLBACK_TRIGGER_RESOURCE_EFFICIENCY\x10\x07\x62\x06proto3')
   |
28 | 
29 | _globals = globals()
   |

src/seigr_protocol/compiled/script_pb2.py:7:1: I001 [*] Import block is un-sorted or un-formatted
   |
 5 |   # Protobuf Python Version: 5.29.2
 6 |   """Generated protocol buffer code."""
 7 | / from google.protobuf import descriptor as _descriptor
 8 | | from google.protobuf import descriptor_pool as _descriptor_pool
 9 | | from google.protobuf import runtime_version as _runtime_version
10 | | from google.protobuf import symbol_database as _symbol_database
11 | | from google.protobuf.internal import builder as _builder
12 | | _runtime_version.ValidateProtobufRuntimeVersion(
   | |_^ I001
13 |       _runtime_version.Domain.PUBLIC,
14 |       5,
   |
   = help: Organize imports

src/seigr_protocol/compiled/script_pb2.py:25:1: E402 Module level import not at top of file
   |
25 | import error_handling_pb2 as error__handling__pb2
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E402
26 | import pipeline_pb2 as pipeline__pb2
   |

src/seigr_protocol/compiled/script_pb2.py:25:1: I001 [*] Import block is un-sorted or un-formatted
   |
25 | / import error_handling_pb2 as error__handling__pb2
26 | | import pipeline_pb2 as pipeline__pb2
27 | | 
28 | | 
29 | | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0cscript.proto\x12\x05seigr\x1a\x14\x65rror_handling.proto\x1a\x0epipeline.proto\"\xa7\x05\n\x06Script\x12\x11\n\tscript_id\x18\x01 \x01(\t\x12\x10\n\x08language\x18\x02 \x01(\t\x12\x0c\n\x04\x63ode\x18\x03 \x01(\x0c\x12\x33\n\x0b\x65nvironment\x18\x04 \x03(\x0b\x32\x1e.seigr.Script.EnvironmentEntry\x12\x14\n\x0cis_sandboxed\x18\x05 \x01(\x08\x12\x0f\n\x07version\x18\x06 \x01(\t\x12\x11\n\tcode_hash\x18\x07 \x01(\x0c\x12\x13\n\x0bmax_runtime\x18\x08 \x01(\x05\x12\x12\n\nmax_memory\x18\t \x01(\x05\x12\x15\n\rmax_cpu_usage\x18\n \x01(\x05\x12\x16\n\x0emax_disk_usage\x18\x0b \x01(\x05\x12\x1e\n\x16\x61llow_external_network\x18\x0c \x01(\x08\x12-\n\x0f\x61llowed_actions\x18\r \x03(\x0e\x32\x14.seigr.AllowedAction\x12\x14\n\x0c\x64\x65pendencies\x18\x0e \x03(\t\x12\x36\n\x0e\x65rror_handling\x18\x0f \x01(\x0e\x32\x1e.seigr.ErrorResolutionStrategy\x12\x11\n\tlog_level\x18\x10 \x01(\t\x12-\n\x08metadata\x18\x11 \x03(\x0b\x32\x1b.seigr.Script.MetadataEntry\x12\x16\n\x0e\x65nable_tracing\x18\x12 \x01(\x08\x12\x18\n\x10\x65nable_profiling\x18\x13 \x01(\x08\x12\x1b\n\x13requires_user_input\x18\x14 \x01(\x08\x12\x10\n\x08\x65\x63o_mode\x18\x15 \x01(\x08\x1a\x32\n\x10\x45nvironmentEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xd3\x02\n\x16ScriptExecutionRequest\x12\x12\n\nrequest_id\x18\x01 \x01(\t\x12\x11\n\tscript_id\x18\x02 \x01(\t\x12L\n\x10input_parameters\x18\x03 \x03(\x0b\x32\x32.seigr.ScriptExecutionRequest.InputParametersEntry\x12\x14\n\x0cinitiated_by\x18\x04 \x01(\t\x12\x14\n\x0crequested_at\x18\x05 \x01(\t\x12\x17\n\x0f\x61sync_execution\x18\x06 \x01(\x08\x12\x15\n\rtimeout_limit\x18\x07 \x01(\x05\x12\x16\n\x0epriority_level\x18\x08 \x01(\t\x12\x18\n\x10\x65\x63o_mode_enabled\x18\t \x01(\x08\x1a\x36\n\x14InputParametersEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xff\x02\n\x15ScriptExecutionResult\x12\x12\n\nrequest_id\x18\x01 \x01(\t\x12\x11\n\tscript_id\x18\x02 \x01(\t\x12\x0f\n\x07success\x18\x03 \x01(\x08\x12\x13\n\x0bresult_data\x18\x04 \x01(\t\x12\x15\n\rerror_message\x18\x05 \x01(\t\x12\x14\n\x0c\x63ompleted_at\x18\x06 \x01(\t\x12O\n\x12\x65xecution_metadata\x18\x07 \x03(\x0b\x32\x33.seigr.ScriptExecutionResult.ExecutionMetadataEntry\x12\x10\n\x08warnings\x18\x08 \x03(\t\x12\x1a\n\x12\x65xecution_duration\x18\t \x01(\x02\x12\x19\n\x11memory_used_bytes\x18\n \x01(\x03\x12\x18\n\x10\x64isk_usage_bytes\x18\x0b \x01(\x03\x1a\x38\n\x16\x45xecutionMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xef\x02\n\x11\x44\x65pendencyManager\x12\x1a\n\x12local_dependencies\x18\x01 \x03(\t\x12\x1b\n\x13remote_dependencies\x18\x02 \x03(\t\x12M\n\x13\x64\x65pendency_metadata\x18\x03 \x03(\x0b\x32\x30.seigr.DependencyManager.DependencyMetadataEntry\x12\x1b\n\x13\x64\x65pendency_checksum\x18\x04 \x01(\t\x12\x1e\n\x16\x61uto_resolve_conflicts\x18\x05 \x01(\x08\x12\x1a\n\x12\x63\x61\x63he_dependencies\x18\x06 \x01(\x08\x12\x1e\n\x16\x64\x65pendency_source_type\x18\x07 \x01(\t\x12\x1e\n\x16max_dependency_size_mb\x18\x08 \x01(\x05\x1a\x39\n\x17\x44\x65pendencyMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xa8\x03\n\x10ScriptMonitoring\x12\x11\n\tscript_id\x18\x01 \x01(\t\x12\x14\n\x0c\x65xecution_id\x18\x02 \x01(\t\x12\x11\n\tcpu_usage\x18\x03 \x01(\x02\x12\x14\n\x0cmemory_usage\x18\x04 \x01(\x02\x12\x12\n\ndisk_usage\x18\x05 \x01(\x02\x12\x17\n\x0flast_checked_at\x18\x06 \x01(\t\x12\x16\n\x0estatus_message\x18\x07 \x01(\t\x12L\n\x13monitoring_metadata\x18\x08 \x03(\x0b\x32/.seigr.ScriptMonitoring.MonitoringMetadataEntry\x12\x14\n\x0c\x63urrent_step\x18\t \x01(\x05\x12\x1b\n\x13progress_percentage\x18\n \x01(\t\x12!\n\x19\x66lagged_for_manual_review\x18\x0b \x01(\x08\x12\x1e\n\x16\x65stimated_energy_usage\x18\x0c \x01(\x02\x1a\x39\n\x17MonitoringMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x9c\x04\n\x0cScriptConfig\x12\x1a\n\x12global_max_runtime\x18\x01 \x01(\x05\x12\x1b\n\x13global_memory_limit\x18\x02 \x01(\x05\x12\x1a\n\x12\x65nforce_sandboxing\x18\x03 \x01(\x08\x12\x42\n\x10\x65nvironment_vars\x18\x04 \x03(\x0b\x32(.seigr.ScriptConfig.EnvironmentVarsEntry\x12\x34\n\x16global_allowed_actions\x18\x05 \x03(\x0e\x32\x14.seigr.AllowedAction\x12\x1a\n\x12\x66\x61llback_script_id\x18\x06 \x01(\t\x12\x1d\n\x15\x65nable_execution_logs\x18\x07 \x01(\x08\x12Q\n\x18\x65rror_handling_overrides\x18\x08 \x03(\x0b\x32/.seigr.ScriptConfig.ErrorHandlingOverridesEntry\x12\x1e\n\x16max_retries_on_failure\x18\t \x01(\x05\x12\x18\n\x10\x65\x63o_mode_default\x18\n \x01(\x08\x1a\x36\n\x14\x45nvironmentVarsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a=\n\x1b\x45rrorHandlingOverridesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xb7\x02\n\x16ScriptExecutionHistory\x12\x11\n\tscript_id\x18\x01 \x01(\t\x12\x30\n\nexecutions\x18\x02 \x03(\x0b\x32\x1c.seigr.ScriptExecutionRecord\x12\x18\n\x10total_executions\x18\x03 \x01(\x05\x12\x1d\n\x15successful_executions\x18\x04 \x01(\x05\x12\x19\n\x11\x66\x61iled_executions\x18\x05 \x01(\x05\x12L\n\x10history_metadata\x18\x06 \x03(\x0b\x32\x32.seigr.ScriptExecutionHistory.HistoryMetadataEntry\x1a\x36\n\x14HistoryMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xd5\x02\n\x15ScriptExecutionRecord\x12\x14\n\x0c\x65xecution_id\x18\x01 \x01(\t\x12\x13\n\x0b\x65xecuted_at\x18\x02 \x01(\t\x12\x13\n\x0b\x66inished_at\x18\x03 \x01(\t\x12-\n\rresult_status\x18\x04 \x01(\x0e\x32\x16.seigr.OperationStatus\x12M\n\x11\x65xecution_details\x18\x05 \x03(\x0b\x32\x32.seigr.ScriptExecutionRecord.ExecutionDetailsEntry\x12\x19\n\x11\x65xecution_summary\x18\x06 \x01(\t\x12\x0e\n\x06\x61lerts\x18\x07 \x03(\t\x12\x1a\n\x12\x65\x63o_execution_flag\x18\x08 \x01(\x08\x1a\x37\n\x15\x45xecutionDetailsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01*\xae\x01\n\rAllowedAction\x12\x1b\n\x17SCRIPT_ACTION_UNDEFINED\x10\x00\x12\x08\n\x04READ\x10\x01\x12\t\n\x05WRITE\x10\x02\x12\x0b\n\x07\x45XECUTE\x10\x03\x12\n\n\x06\x44\x45LETE\x10\x04\x12\x12\n\x0eNETWORK_ACCESS\x10\x05\x12\x0f\n\x0bSYSTEM_CALL\x10\x06\x12\x0b\n\x07LOGGING\x10\x07\x12 \n\x1c\x41\x44\x41PTIVE_RESOURCE_MANAGEMENT\x10\x08\x62\x06proto3')
   | |_^ I001
30 |   
31 |   _globals = globals()
   |
   = help: Organize imports

src/seigr_protocol/compiled/script_pb2.py:25:30: F401 [*] `error_handling_pb2` imported but unused
   |
25 | import error_handling_pb2 as error__handling__pb2
   |                              ^^^^^^^^^^^^^^^^^^^^ F401
26 | import pipeline_pb2 as pipeline__pb2
   |
   = help: Remove unused import: `error_handling_pb2`

src/seigr_protocol/compiled/script_pb2.py:26:1: E402 Module level import not at top of file
   |
25 | import error_handling_pb2 as error__handling__pb2
26 | import pipeline_pb2 as pipeline__pb2
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E402
   |

src/seigr_protocol/compiled/script_pb2.py:26:24: F401 [*] `pipeline_pb2` imported but unused
   |
25 | import error_handling_pb2 as error__handling__pb2
26 | import pipeline_pb2 as pipeline__pb2
   |                        ^^^^^^^^^^^^^ F401
   |
   = help: Remove unused import: `pipeline_pb2`

src/seigr_protocol/compiled/script_pb2.py:29:101: E501 Line too long (6535 > 100)
   |
29 | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0cscript.proto\x12\x05seigr\x1a\x14\x65rror_handling.proto\x1a\x0epipeline.proto\"\xa7\x05\n\x06Script\x12\x11\n\tscript_id\x18\x01 \x01(\t\x12\x10\n\x08language\x18\x02 \x01(\t\x12\x0c\n\x04\x63ode\x18\x03 \x01(\x0c\x12\x33\n\x0b\x65nvironment\x18\x04 \x03(\x0b\x32\x1e.seigr.Script.EnvironmentEntry\x12\x14\n\x0cis_sandboxed\x18\x05 \x01(\x08\x12\x0f\n\x07version\x18\x06 \x01(\t\x12\x11\n\tcode_hash\x18\x07 \x01(\x0c\x12\x13\n\x0bmax_runtime\x18\x08 \x01(\x05\x12\x12\n\nmax_memory\x18\t \x01(\x05\x12\x15\n\rmax_cpu_usage\x18\n \x01(\x05\x12\x16\n\x0emax_disk_usage\x18\x0b \x01(\x05\x12\x1e\n\x16\x61llow_external_network\x18\x0c \x01(\x08\x12-\n\x0f\x61llowed_actions\x18\r \x03(\x0e\x32\x14.seigr.AllowedAction\x12\x14\n\x0c\x64\x65pendencies\x18\x0e \x03(\t\x12\x36\n\x0e\x65rror_handling\x18\x0f \x01(\x0e\x32\x1e.seigr.ErrorResolutionStrategy\x12\x11\n\tlog_level\x18\x10 \x01(\t\x12-\n\x08metadata\x18\x11 \x03(\x0b\x32\x1b.seigr.Script.MetadataEntry\x12\x16\n\x0e\x65nable_tracing\x18\x12 \x01(\x08\x12\x18\n\x10\x65nable_profiling\x18\x13 \x01(\x08\x12\x1b\n\x13requires_user_input\x18\x14 \x01(\x08\x12\x10\n\x08\x65\x63o_mode\x18\x15 \x01(\x08\x1a\x32\n\x10\x45nvironmentEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xd3\x02\n\x16ScriptExecutionRequest\x12\x12\n\nrequest_id\x18\x01 \x01(\t\x12\x11\n\tscript_id\x18\x02 \x01(\t\x12L\n\x10input_parameters\x18\x03 \x03(\x0b\x32\x32.seigr.ScriptExecutionRequest.InputParametersEntry\x12\x14\n\x0cinitiated_by\x18\x04 \x01(\t\x12\x14\n\x0crequested_at\x18\x05 \x01(\t\x12\x17\n\x0f\x61sync_execution\x18\x06 \x01(\x08\x12\x15\n\rtimeout_limit\x18\x07 \x01(\x05\x12\x16\n\x0epriority_level\x18\x08 \x01(\t\x12\x18\n\x10\x65\x63o_mode_enabled\x18\t \x01(\x08\x1a\x36\n\x14InputParametersEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xff\x02\n\x15ScriptExecutionResult\x12\x12\n\nrequest_id\x18\x01 \x01(\t\x12\x11\n\tscript_id\x18\x02 \x01(\t\x12\x0f\n\x07success\x18\x03 \x01(\x08\x12\x13\n\x0bresult_data\x18\x04 \x01(\t\x12\x15\n\rerror_message\x18\x05 \x01(\t\x12\x14\n\x0c\x63ompleted_at\x18\x06 \x01(\t\x12O\n\x12\x65xecution_metadata\x18\x07 \x03(\x0b\x32\x33.seigr.ScriptExecutionResult.ExecutionMetadataEntry\x12\x10\n\x08warnings\x18\x08 \x03(\t\x12\x1a\n\x12\x65xecution_duration\x18\t \x01(\x02\x12\x19\n\x11memory_used_bytes\x18\n \x01(\x03\x12\x18\n\x10\x64isk_usage_bytes\x18\x0b \x01(\x03\x1a\x38\n\x16\x45xecutionMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xef\x02\n\x11\x44\x65pendencyManager\x12\x1a\n\x12local_dependencies\x18\x01 \x03(\t\x12\x1b\n\x13remote_dependencies\x18\x02 \x03(\t\x12M\n\x13\x64\x65pendency_metadata\x18\x03 \x03(\x0b\x32\x30.seigr.DependencyManager.DependencyMetadataEntry\x12\x1b\n\x13\x64\x65pendency_checksum\x18\x04 \x01(\t\x12\x1e\n\x16\x61uto_resolve_conflicts\x18\x05 \x01(\x08\x12\x1a\n\x12\x63\x61\x63he_dependencies\x18\x06 \x01(\x08\x12\x1e\n\x16\x64\x65pendency_source_type\x18\x07 \x01(\t\x12\x1e\n\x16max_dependency_size_mb\x18\x08 \x01(\x05\x1a\x39\n\x17\x44\x65pendencyMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xa8\x03\n\x10ScriptMonitoring\x12\x11\n\tscript_id\x18\x01 \x01(\t\x12\x14\n\x0c\x65xecution_id\x18\x02 \x01(\t\x12\x11\n\tcpu_usage\x18\x03 \x01(\x02\x12\x14\n\x0cmemory_usage\x18\x04 \x01(\x02\x12\x12\n\ndisk_usage\x18\x05 \x01(\x02\x12\x17\n\x0flast_checked_at\x18\x06 \x01(\t\x12\x16\n\x0estatus_message\x18\x07 \x01(\t\x12L\n\x13monitoring_metadata\x18\x08 \x03(\x0b\x32/.seigr.ScriptMonitoring.MonitoringMetadataEntry\x12\x14\n\x0c\x63urrent_step\x18\t \x01(\x05\x12\x1b\n\x13progress_percentage\x18\n \x01(\t\x12!\n\x19\x66lagged_for_manual_review\x18\x0b \x01(\x08\x12\x1e\n\x16\x65stimated_energy_usage\x18\x0c \x01(\x02\x1a\x39\n\x17MonitoringMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x9c\x04\n\x0cScriptConfig\x12\x1a\n\x12global_max_runtime\x18\x01 \x01(\x05\x12\x1b\n\x13global_memory_limit\x18\x02 \x01(\x05\x12\x1a\n\x12\x65nforce_sandboxing\x18\x03 \x01(\x08\x12\x42\n\x10\x65nvironment_vars\x18\x04 \x03(\x0b\x32(.seigr.ScriptConfig.EnvironmentVarsEntry\x12\x34\n\x16global_allowed_actions\x18\x05 \x03(\x0e\x32\x14.seigr.AllowedAction\x12\x1a\n\x12\x66\x61llback_script_id\x18\x06 \x01(\t\x12\x1d\n\x15\x65nable_execution_logs\x18\x07 \x01(\x08\x12Q\n\x18\x65rror_handling_overrides\x18\x08 \x03(\x0b\x32/.seigr.ScriptConfig.ErrorHandlingOverridesEntry\x12\x1e\n\x16max_retries_on_failure\x18\t \x01(\x05\x12\x18\n\x10\x65\x63o_mode_default\x18\n \x01(\x08\x1a\x36\n\x14\x45nvironmentVarsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a=\n\x1b\x45rrorHandlingOverridesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xb7\x02\n\x16ScriptExecutionHistory\x12\x11\n\tscript_id\x18\x01 \x01(\t\x12\x30\n\nexecutions\x18\x02 \x03(\x0b\x32\x1c.seigr.ScriptExecutionRecord\x12\x18\n\x10total_executions\x18\x03 \x01(\x05\x12\x1d\n\x15successful_executions\x18\x04 \x01(\x05\x12\x19\n\x11\x66\x61iled_executions\x18\x05 \x01(\x05\x12L\n\x10history_metadata\x18\x06 \x03(\x0b\x32\x32.seigr.ScriptExecutionHistory.HistoryMetadataEntry\x1a\x36\n\x14HistoryMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xd5\x02\n\x15ScriptExecutionRecord\x12\x14\n\x0c\x65xecution_id\x18\x01 \x01(\t\x12\x13\n\x0b\x65xecuted_at\x18\x02 \x01(\t\x12\x13\n\x0b\x66inished_at\x18\x03 \x01(\t\x12-\n\rresult_status\x18\x04 \x01(\x0e\x32\x16.seigr.OperationStatus\x12M\n\x11\x65xecution_details\x18\x05 \x03(\x0b\x32\x32.seigr.ScriptExecutionRecord.ExecutionDetailsEntry\x12\x19\n\x11\x65xecution_summary\x18\x06 \x01(\t\x12\x0e\n\x06\x61lerts\x18\x07 \x03(\t\x12\x1a\n\x12\x65\x63o_execution_flag\x18\x08 \x01(\x08\x1a\x37\n\x15\x45xecutionDetailsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01*\xae\x01\n\rAllowedAction\x12\x1b\n\x17SCRIPT_ACTION_UNDEFINED\x10\x00\x12\x08\n\x04READ\x10\x01\x12\t\n\x05WRITE\x10\x02\x12\x0b\n\x07\x45XECUTE\x10\x03\x12\n\n\x06\x44\x45LETE\x10\x04\x12\x12\n\x0eNETWORK_ACCESS\x10\x05\x12\x0f\n\x0bSYSTEM_CALL\x10\x06\x12\x0b\n\x07LOGGING\x10\x07\x12 \n\x1c\x41\x44\x41PTIVE_RESOURCE_MANAGEMENT\x10\x08\x62\x06proto3')
   |
30 | 
31 | _globals = globals()
   |

src/seigr_protocol/compiled/seed_dot_seigr_pb2.py:7:1: I001 [*] Import block is un-sorted or un-formatted
   |
 5 |   # Protobuf Python Version: 5.29.2
 6 |   """Generated protocol buffer code."""
 7 | / from google.protobuf import descriptor as _descriptor
 8 | | from google.protobuf import descriptor_pool as _descriptor_pool
 9 | | from google.protobuf import runtime_version as _runtime_version
10 | | from google.protobuf import symbol_database as _symbol_database
11 | | from google.protobuf.internal import builder as _builder
12 | | _runtime_version.ValidateProtobufRuntimeVersion(
   | |_^ I001
13 |       _runtime_version.Domain.PUBLIC,
14 |       5,
   |
   = help: Organize imports

src/seigr_protocol/compiled/seed_dot_seigr_pb2.py:25:1: E402 Module level import not at top of file
   |
25 | import file_metadata_pb2 as file__metadata__pb2
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E402
26 | import segment_metadata_pb2 as segment__metadata__pb2
27 | import lineage_pb2 as lineage__pb2
   |

src/seigr_protocol/compiled/seed_dot_seigr_pb2.py:25:1: I001 [*] Import block is un-sorted or un-formatted
   |
25 | / import file_metadata_pb2 as file__metadata__pb2
26 | | import segment_metadata_pb2 as segment__metadata__pb2
27 | | import lineage_pb2 as lineage__pb2
28 | | import pipeline_pb2 as pipeline__pb2
29 | | import access_control_pb2 as access__control__pb2
30 | | import replication_pb2 as replication__pb2
31 | | import hashing_pb2 as hashing__pb2
32 | | 
33 | | 
34 | | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x14seed_dot_seigr.proto\x12\x05seigr\x1a\x13\x66ile_metadata.proto\x1a\x16segment_metadata.proto\x1a\rlineage.proto\x1a\x0epipeline.proto\x1a\x14\x61\x63\x63\x65ss_control.proto\x1a\x11replication.proto\x1a\rhashing.proto\"\xd8\x07\n\x0cSeedDotSeigr\x12\x11\n\troot_hash\x18\x01 \x01(\t\x12\x11\n\tseed_hash\x18\x02 \x01(\t\x12\x1a\n\x12\x63reation_timestamp\x18\x03 \x01(\t\x12(\n\x08segments\x18\x04 \x03(\x0b\x32\x16.seigr.SegmentMetadata\x12\x1a\n\x12\x63onnected_clusters\x18\x05 \x03(\t\x12,\n\x0flineage_entries\x18\x06 \x03(\x0b\x32\x13.seigr.LineageEntry\x12\x1b\n\x13is_secondary_active\x18\x07 \x01(\x08\x12\x0f\n\x07version\x18\x08 \x01(\t\x12*\n\rfile_metadata\x18\t \x01(\x0b\x32\x13.seigr.FileMetadata\x12-\n\x0ftemporal_layers\x18\n \x03(\x0b\x32\x14.seigr.TemporalLayer\x12\x11\n\tlast_ping\x18\x0b \x01(\x03\x12%\n\x03\x61\x63l\x18\x0c \x01(\x0b\x32\x18.seigr.AccessControlList\x12\x30\n\x17integrity_checksum_data\x18\r \x01(\x0b\x32\x0f.seigr.HashData\x12-\n\x0fpipeline_stages\x18\x0e \x03(\x0b\x32\x14.seigr.PipelineStage\x12+\n\x0eoperation_logs\x18\x0f \x03(\x0b\x32\x13.seigr.OperationLog\x12\x33\n\x10integrity_status\x18\x10 \x01(\x0e\x32\x19.seigr.VerificationStatus\x12\x15\n\rlast_verified\x18\x11 \x01(\t\x12\x37\n\x11integrity_history\x18\x12 \x03(\x0b\x32\x1c.seigr.IntegrityVerification\x12\x38\n\x0b\x63ustom_data\x18\x13 \x03(\x0b\x32#.seigr.SeedDotSeigr.CustomDataEntry\x12\x34\n\x12replication_status\x18\x14 \x01(\x0b\x32\x18.seigr.ReplicationStatus\x12\x33\n\x15\x63ompatibility_history\x18\x15 \x03(\x0b\x32\x14.seigr.Compatibility\x12\x33\n\x08metadata\x18\x16 \x03(\x0b\x32!.seigr.SeedDotSeigr.MetadataEntry\x1a\x31\n\x0f\x43ustomDataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x0c:\x02\x38\x01\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xa1\x02\n\x15IntegrityVerification\x12)\n\x06status\x18\x01 \x01(\x0e\x32\x19.seigr.VerificationStatus\x12\x11\n\ttimestamp\x18\x02 \x01(\t\x12\x13\n\x0bverifier_id\x18\x03 \x01(\t\x12:\n\x07\x64\x65tails\x18\x04 \x03(\x0b\x32).seigr.IntegrityVerification.DetailsEntry\x12\x17\n\x0fintegrity_level\x18\x05 \x01(\t\x12\x15\n\rerror_message\x18\x06 \x01(\t\x12\x19\n\x11integrity_context\x18\x07 \x01(\t\x1a.\n\x0c\x44\x65tailsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xbc\x03\n\rCompatibility\x12\x16\n\x0etarget_version\x18\x01 \x01(\t\x12\x18\n\x10migration_status\x18\x02 \x01(\t\x12I\n\x13\x63ompatibility_notes\x18\x03 \x03(\x0b\x32,.seigr.Compatibility.CompatibilityNotesEntry\x12\x13\n\x0blast_tested\x18\x04 \x01(\t\x12\x1b\n\x13\x61\x66\x66\x65\x63ted_components\x18\x05 \x03(\t\x12G\n\x12migration_metadata\x18\x06 \x03(\x0b\x32+.seigr.Compatibility.MigrationMetadataEntry\x12\x1a\n\x12migration_strategy\x18\x07 \x01(\t\x12\"\n\x1a\x61\x64\x61ptive_migration_enabled\x18\x08 \x01(\x08\x1a\x39\n\x17\x43ompatibilityNotesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x38\n\x16MigrationMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x62\x06proto3')
   | |_^ I001
35 |   
36 |   _globals = globals()
   |
   = help: Organize imports

src/seigr_protocol/compiled/seed_dot_seigr_pb2.py:25:29: F401 [*] `file_metadata_pb2` imported but unused
   |
25 | import file_metadata_pb2 as file__metadata__pb2
   |                             ^^^^^^^^^^^^^^^^^^^ F401
26 | import segment_metadata_pb2 as segment__metadata__pb2
27 | import lineage_pb2 as lineage__pb2
   |
   = help: Remove unused import: `file_metadata_pb2`

src/seigr_protocol/compiled/seed_dot_seigr_pb2.py:26:1: E402 Module level import not at top of file
   |
25 | import file_metadata_pb2 as file__metadata__pb2
26 | import segment_metadata_pb2 as segment__metadata__pb2
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E402
27 | import lineage_pb2 as lineage__pb2
28 | import pipeline_pb2 as pipeline__pb2
   |

src/seigr_protocol/compiled/seed_dot_seigr_pb2.py:26:32: F401 [*] `segment_metadata_pb2` imported but unused
   |
25 | import file_metadata_pb2 as file__metadata__pb2
26 | import segment_metadata_pb2 as segment__metadata__pb2
   |                                ^^^^^^^^^^^^^^^^^^^^^^ F401
27 | import lineage_pb2 as lineage__pb2
28 | import pipeline_pb2 as pipeline__pb2
   |
   = help: Remove unused import: `segment_metadata_pb2`

src/seigr_protocol/compiled/seed_dot_seigr_pb2.py:27:1: E402 Module level import not at top of file
   |
25 | import file_metadata_pb2 as file__metadata__pb2
26 | import segment_metadata_pb2 as segment__metadata__pb2
27 | import lineage_pb2 as lineage__pb2
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E402
28 | import pipeline_pb2 as pipeline__pb2
29 | import access_control_pb2 as access__control__pb2
   |

src/seigr_protocol/compiled/seed_dot_seigr_pb2.py:27:23: F401 [*] `lineage_pb2` imported but unused
   |
25 | import file_metadata_pb2 as file__metadata__pb2
26 | import segment_metadata_pb2 as segment__metadata__pb2
27 | import lineage_pb2 as lineage__pb2
   |                       ^^^^^^^^^^^^ F401
28 | import pipeline_pb2 as pipeline__pb2
29 | import access_control_pb2 as access__control__pb2
   |
   = help: Remove unused import: `lineage_pb2`

src/seigr_protocol/compiled/seed_dot_seigr_pb2.py:28:1: E402 Module level import not at top of file
   |
26 | import segment_metadata_pb2 as segment__metadata__pb2
27 | import lineage_pb2 as lineage__pb2
28 | import pipeline_pb2 as pipeline__pb2
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E402
29 | import access_control_pb2 as access__control__pb2
30 | import replication_pb2 as replication__pb2
   |

src/seigr_protocol/compiled/seed_dot_seigr_pb2.py:28:24: F401 [*] `pipeline_pb2` imported but unused
   |
26 | import segment_metadata_pb2 as segment__metadata__pb2
27 | import lineage_pb2 as lineage__pb2
28 | import pipeline_pb2 as pipeline__pb2
   |                        ^^^^^^^^^^^^^ F401
29 | import access_control_pb2 as access__control__pb2
30 | import replication_pb2 as replication__pb2
   |
   = help: Remove unused import: `pipeline_pb2`

src/seigr_protocol/compiled/seed_dot_seigr_pb2.py:29:1: E402 Module level import not at top of file
   |
27 | import lineage_pb2 as lineage__pb2
28 | import pipeline_pb2 as pipeline__pb2
29 | import access_control_pb2 as access__control__pb2
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E402
30 | import replication_pb2 as replication__pb2
31 | import hashing_pb2 as hashing__pb2
   |

src/seigr_protocol/compiled/seed_dot_seigr_pb2.py:29:30: F401 [*] `access_control_pb2` imported but unused
   |
27 | import lineage_pb2 as lineage__pb2
28 | import pipeline_pb2 as pipeline__pb2
29 | import access_control_pb2 as access__control__pb2
   |                              ^^^^^^^^^^^^^^^^^^^^ F401
30 | import replication_pb2 as replication__pb2
31 | import hashing_pb2 as hashing__pb2
   |
   = help: Remove unused import: `access_control_pb2`

src/seigr_protocol/compiled/seed_dot_seigr_pb2.py:30:1: E402 Module level import not at top of file
   |
28 | import pipeline_pb2 as pipeline__pb2
29 | import access_control_pb2 as access__control__pb2
30 | import replication_pb2 as replication__pb2
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E402
31 | import hashing_pb2 as hashing__pb2
   |

src/seigr_protocol/compiled/seed_dot_seigr_pb2.py:30:27: F401 [*] `replication_pb2` imported but unused
   |
28 | import pipeline_pb2 as pipeline__pb2
29 | import access_control_pb2 as access__control__pb2
30 | import replication_pb2 as replication__pb2
   |                           ^^^^^^^^^^^^^^^^ F401
31 | import hashing_pb2 as hashing__pb2
   |
   = help: Remove unused import: `replication_pb2`

src/seigr_protocol/compiled/seed_dot_seigr_pb2.py:31:1: E402 Module level import not at top of file
   |
29 | import access_control_pb2 as access__control__pb2
30 | import replication_pb2 as replication__pb2
31 | import hashing_pb2 as hashing__pb2
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E402
   |

src/seigr_protocol/compiled/seed_dot_seigr_pb2.py:31:23: F401 [*] `hashing_pb2` imported but unused
   |
29 | import access_control_pb2 as access__control__pb2
30 | import replication_pb2 as replication__pb2
31 | import hashing_pb2 as hashing__pb2
   |                       ^^^^^^^^^^^^ F401
   |
   = help: Remove unused import: `hashing_pb2`

src/seigr_protocol/compiled/seed_dot_seigr_pb2.py:34:101: E501 Line too long (3219 > 100)
   |
34 | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x14seed_dot_seigr.proto\x12\x05seigr\x1a\x13\x66ile_metadata.proto\x1a\x16segment_metadata.proto\x1a\rlineage.proto\x1a\x0epipeline.proto\x1a\x14\x61\x63\x63\x65ss_control.proto\x1a\x11replication.proto\x1a\rhashing.proto\"\xd8\x07\n\x0cSeedDotSeigr\x12\x11\n\troot_hash\x18\x01 \x01(\t\x12\x11\n\tseed_hash\x18\x02 \x01(\t\x12\x1a\n\x12\x63reation_timestamp\x18\x03 \x01(\t\x12(\n\x08segments\x18\x04 \x03(\x0b\x32\x16.seigr.SegmentMetadata\x12\x1a\n\x12\x63onnected_clusters\x18\x05 \x03(\t\x12,\n\x0flineage_entries\x18\x06 \x03(\x0b\x32\x13.seigr.LineageEntry\x12\x1b\n\x13is_secondary_active\x18\x07 \x01(\x08\x12\x0f\n\x07version\x18\x08 \x01(\t\x12*\n\rfile_metadata\x18\t \x01(\x0b\x32\x13.seigr.FileMetadata\x12-\n\x0ftemporal_layers\x18\n \x03(\x0b\x32\x14.seigr.TemporalLayer\x12\x11\n\tlast_ping\x18\x0b \x01(\x03\x12%\n\x03\x61\x63l\x18\x0c \x01(\x0b\x32\x18.seigr.AccessControlList\x12\x30\n\x17integrity_checksum_data\x18\r \x01(\x0b\x32\x0f.seigr.HashData\x12-\n\x0fpipeline_stages\x18\x0e \x03(\x0b\x32\x14.seigr.PipelineStage\x12+\n\x0eoperation_logs\x18\x0f \x03(\x0b\x32\x13.seigr.OperationLog\x12\x33\n\x10integrity_status\x18\x10 \x01(\x0e\x32\x19.seigr.VerificationStatus\x12\x15\n\rlast_verified\x18\x11 \x01(\t\x12\x37\n\x11integrity_history\x18\x12 \x03(\x0b\x32\x1c.seigr.IntegrityVerification\x12\x38\n\x0b\x63ustom_data\x18\x13 \x03(\x0b\x32#.seigr.SeedDotSeigr.CustomDataEntry\x12\x34\n\x12replication_status\x18\x14 \x01(\x0b\x32\x18.seigr.ReplicationStatus\x12\x33\n\x15\x63ompatibility_history\x18\x15 \x03(\x0b\x32\x14.seigr.Compatibility\x12\x33\n\x08metadata\x18\x16 \x03(\x0b\x32!.seigr.SeedDotSeigr.MetadataEntry\x1a\x31\n\x0f\x43ustomDataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x0c:\x02\x38\x01\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xa1\x02\n\x15IntegrityVerification\x12)\n\x06status\x18\x01 \x01(\x0e\x32\x19.seigr.VerificationStatus\x12\x11\n\ttimestamp\x18\x02 \x01(\t\x12\x13\n\x0bverifier_id\x18\x03 \x01(\t\x12:\n\x07\x64\x65tails\x18\x04 \x03(\x0b\x32).seigr.IntegrityVerification.DetailsEntry\x12\x17\n\x0fintegrity_level\x18\x05 \x01(\t\x12\x15\n\rerror_message\x18\x06 \x01(\t\x12\x19\n\x11integrity_context\x18\x07 \x01(\t\x1a.\n\x0c\x44\x65tailsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xbc\x03\n\rCompatibility\x12\x16\n\x0etarget_version\x18\x01 \x01(\t\x12\x18\n\x10migration_status\x18\x02 \x01(\t\x12I\n\x13\x63ompatibility_notes\x18\x03 \x03(\x0b\x32,.seigr.Compatibility.CompatibilityNotesEntry\x12\x13\n\x0blast_tested\x18\x04 \x01(\t\x12\x1b\n\x13\x61\x66\x66\x65\x63ted_components\x18\x05 \x03(\t\x12G\n\x12migration_metadata\x18\x06 \x03(\x0b\x32+.seigr.Compatibility.MigrationMetadataEntry\x12\x1a\n\x12migration_strategy\x18\x07 \x01(\t\x12\"\n\x1a\x61\x64\x61ptive_migration_enabled\x18\x08 \x01(\x08\x1a\x39\n\x17\x43ompatibilityNotesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x38\n\x16MigrationMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x62\x06proto3')
   |
35 | 
36 | _globals = globals()
   |

src/seigr_protocol/compiled/segment_metadata_pb2.py:7:1: I001 [*] Import block is un-sorted or un-formatted
   |
 5 |   # Protobuf Python Version: 5.29.2
 6 |   """Generated protocol buffer code."""
 7 | / from google.protobuf import descriptor as _descriptor
 8 | | from google.protobuf import descriptor_pool as _descriptor_pool
 9 | | from google.protobuf import runtime_version as _runtime_version
10 | | from google.protobuf import symbol_database as _symbol_database
11 | | from google.protobuf.internal import builder as _builder
12 | | _runtime_version.ValidateProtobufRuntimeVersion(
   | |_^ I001
13 |       _runtime_version.Domain.PUBLIC,
14 |       5,
   |
   = help: Organize imports

src/seigr_protocol/compiled/segment_metadata_pb2.py:25:1: E402 Module level import not at top of file
   |
25 | import common_pb2 as common__pb2
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E402
   |

src/seigr_protocol/compiled/segment_metadata_pb2.py:25:1: I001 [*] Import block is un-sorted or un-formatted
   |
25 | / import common_pb2 as common__pb2
26 | | 
27 | | 
28 | | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x16segment_metadata.proto\x12\x05seigr\x1a\x0c\x63ommon.proto\"\xf5\x02\n\rSegmentStatus\x12\x14\n\x0csegment_hash\x18\x01 \x01(\t\x12(\n\x0cthreat_level\x18\x02 \x01(\x0e\x32\x12.seigr.ThreatLevel\x12\x1e\n\x16integrity_check_passed\x18\x03 \x01(\x08\x12\x14\n\x0cthreat_count\x18\x04 \x01(\x05\x12\x19\n\x11replication_count\x18\x05 \x01(\x05\x12\x14\n\x0clast_checked\x18\x06 \x01(\t\x12\x34\n\x08metadata\x18\x07 \x03(\x0b\x32\".seigr.SegmentStatus.MetadataEntry\x12\x17\n\x0flast_updated_by\x18\x08 \x01(\t\x12!\n\x19resource_efficiency_score\x18\t \x01(\x02\x12\x1a\n\x12performance_status\x18\n \x01(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x91\x04\n\x0fSegmentMetadata\x12\x15\n\rsegment_index\x18\x01 \x01(\x05\x12\x14\n\x0csegment_size\x18\x02 \x01(\x05\x12\x14\n\x0csegment_hash\x18\x03 \x01(\t\x12-\n\x06status\x18\x04 \x01(\x0e\x32\x1d.seigr.SegmentOperationStatus\x12\x32\n\x11replication_level\x18\x05 \x01(\x0e\x32\x17.seigr.ReplicationLevel\x12\x1a\n\x12\x63reation_timestamp\x18\x06 \x01(\t\x12\x14\n\x0cprimary_link\x18\x07 \x01(\t\x12\x17\n\x0fsecondary_links\x18\x08 \x03(\t\x12\x36\n\x08metadata\x18\t \x03(\x0b\x32$.seigr.SegmentMetadata.MetadataEntry\x12\x18\n\x10\x61\x63\x63\x65ss_frequency\x18\n \x01(\x05\x12\x15\n\rlast_accessed\x18\x0b \x01(\t\x12\x17\n\x0fintegrity_level\x18\x0c \x01(\t\x12\x19\n\x11\x65ncryption_status\x18\r \x01(\t\x12$\n\x1c\x61\x64\x61ptive_replication_enabled\x18\x0e \x01(\x08\x12\x19\n\x11recovery_strategy\x18\x0f \x01(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01*\x92\x01\n\x16SegmentOperationStatus\x12\x1c\n\x18SEGMENT_STATUS_UNDEFINED\x10\x00\x12\x12\n\x0eSEGMENT_ACTIVE\x10\x01\x12\x14\n\x10SEGMENT_INACTIVE\x10\x02\x12\x14\n\x10SEGMENT_ARCHIVED\x10\x03\x12\x1a\n\x16SEGMENT_DECOMMISSIONED\x10\x04*\xa7\x01\n\x10ReplicationLevel\x12\x1f\n\x1bREPLICATION_LEVEL_UNDEFINED\x10\x00\x12\x19\n\x15REPLICATION_LEVEL_LOW\x10\x01\x12\x1c\n\x18REPLICATION_LEVEL_MEDIUM\x10\x02\x12\x1a\n\x16REPLICATION_LEVEL_HIGH\x10\x03\x12\x1d\n\x19REPLICATION_LEVEL_MAXIMUM\x10\x04\x62\x06proto3')
   | |_^ I001
29 |   
30 |   _globals = globals()
   |
   = help: Organize imports

src/seigr_protocol/compiled/segment_metadata_pb2.py:25:22: F401 [*] `common_pb2` imported but unused
   |
25 | import common_pb2 as common__pb2
   |                      ^^^^^^^^^^^ F401
   |
   = help: Remove unused import: `common_pb2`

src/seigr_protocol/compiled/segment_metadata_pb2.py:28:101: E501 Line too long (2223 > 100)
   |
28 | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x16segment_metadata.proto\x12\x05seigr\x1a\x0c\x63ommon.proto\"\xf5\x02\n\rSegmentStatus\x12\x14\n\x0csegment_hash\x18\x01 \x01(\t\x12(\n\x0cthreat_level\x18\x02 \x01(\x0e\x32\x12.seigr.ThreatLevel\x12\x1e\n\x16integrity_check_passed\x18\x03 \x01(\x08\x12\x14\n\x0cthreat_count\x18\x04 \x01(\x05\x12\x19\n\x11replication_count\x18\x05 \x01(\x05\x12\x14\n\x0clast_checked\x18\x06 \x01(\t\x12\x34\n\x08metadata\x18\x07 \x03(\x0b\x32\".seigr.SegmentStatus.MetadataEntry\x12\x17\n\x0flast_updated_by\x18\x08 \x01(\t\x12!\n\x19resource_efficiency_score\x18\t \x01(\x02\x12\x1a\n\x12performance_status\x18\n \x01(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x91\x04\n\x0fSegmentMetadata\x12\x15\n\rsegment_index\x18\x01 \x01(\x05\x12\x14\n\x0csegment_size\x18\x02 \x01(\x05\x12\x14\n\x0csegment_hash\x18\x03 \x01(\t\x12-\n\x06status\x18\x04 \x01(\x0e\x32\x1d.seigr.SegmentOperationStatus\x12\x32\n\x11replication_level\x18\x05 \x01(\x0e\x32\x17.seigr.ReplicationLevel\x12\x1a\n\x12\x63reation_timestamp\x18\x06 \x01(\t\x12\x14\n\x0cprimary_link\x18\x07 \x01(\t\x12\x17\n\x0fsecondary_links\x18\x08 \x03(\t\x12\x36\n\x08metadata\x18\t \x03(\x0b\x32$.seigr.SegmentMetadata.MetadataEntry\x12\x18\n\x10\x61\x63\x63\x65ss_frequency\x18\n \x01(\x05\x12\x15\n\rlast_accessed\x18\x0b \x01(\t\x12\x17\n\x0fintegrity_level\x18\x0c \x01(\t\x12\x19\n\x11\x65ncryption_status\x18\r \x01(\t\x12$\n\x1c\x61\x64\x61ptive_replication_enabled\x18\x0e \x01(\x08\x12\x19\n\x11recovery_strategy\x18\x0f \x01(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01*\x92\x01\n\x16SegmentOperationStatus\x12\x1c\n\x18SEGMENT_STATUS_UNDEFINED\x10\x00\x12\x12\n\x0eSEGMENT_ACTIVE\x10\x01\x12\x14\n\x10SEGMENT_INACTIVE\x10\x02\x12\x14\n\x10SEGMENT_ARCHIVED\x10\x03\x12\x1a\n\x16SEGMENT_DECOMMISSIONED\x10\x04*\xa7\x01\n\x10ReplicationLevel\x12\x1f\n\x1bREPLICATION_LEVEL_UNDEFINED\x10\x00\x12\x19\n\x15REPLICATION_LEVEL_LOW\x10\x01\x12\x1c\n\x18REPLICATION_LEVEL_MEDIUM\x10\x02\x12\x1a\n\x16REPLICATION_LEVEL_HIGH\x10\x03\x12\x1d\n\x19REPLICATION_LEVEL_MAXIMUM\x10\x04\x62\x06proto3')
   |
29 | 
30 | _globals = globals()
   |

src/seigr_protocol/compiled/seigr_cell_pb2.py:7:1: I001 [*] Import block is un-sorted or un-formatted
   |
 5 |   # Protobuf Python Version: 5.29.2
 6 |   """Generated protocol buffer code."""
 7 | / from google.protobuf import descriptor as _descriptor
 8 | | from google.protobuf import descriptor_pool as _descriptor_pool
 9 | | from google.protobuf import runtime_version as _runtime_version
10 | | from google.protobuf import symbol_database as _symbol_database
11 | | from google.protobuf.internal import builder as _builder
12 | | _runtime_version.ValidateProtobufRuntimeVersion(
   | |_^ I001
13 |       _runtime_version.Domain.PUBLIC,
14 |       5,
   |
   = help: Organize imports

src/seigr_protocol/compiled/seigr_cell_pb2.py:27:101: E501 Line too long (1921 > 100)
   |
27 | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x10seigr_cell.proto\x12\nseigr_cell\"\xab\x02\n\tSeigrCell\x12\x14\n\x0c\x64\x61ta_content\x18\x01 \x01(\x0c\x12!\n\x19primary_redundancy_marker\x18\x02 \x01(\x0c\x12#\n\x1bsecondary_redundancy_marker\x18\x03 \x01(\x0c\x12&\n\x08metadata\x18\x04 \x01(\x0b\x32\x14.seigr_cell.Metadata\x12\x35\n\x10\x63oordinate_index\x18\x05 \x01(\x0b\x32\x1b.seigr_cell.CoordinateIndex\x12*\n\nre_license\x18\x06 \x01(\x0b\x32\x16.seigr_cell.RE_License\x12\x35\n\x11\x63ustom_properties\x18\x07 \x03(\x0b\x32\x1a.seigr_cell.CustomProperty\"\xec\x01\n\x08Metadata\x12\x0f\n\x07\x63\x65ll_id\x18\x01 \x01(\t\x12\x16\n\x0e\x63ontributor_id\x18\x02 \x01(\t\x12\x11\n\ttimestamp\x18\x03 \x01(\t\x12\x0f\n\x07version\x18\x04 \x01(\t\x12\x11\n\thash_link\x18\x05 \x01(\t\x12\x11\n\tdata_hash\x18\x06 \x01(\t\x12\x14\n\x0clineage_hash\x18\x07 \x01(\t\x12\x14\n\x0c\x61\x63\x63\x65ss_level\x18\x08 \x01(\t\x12\x0c\n\x04tags\x18\t \x03(\t\x12\x1d\n\x15\x63ompression_algorithm\x18\n \x01(\t\x12\x14\n\x0cis_encrypted\x18\x0b \x01(\x08\"=\n\x0f\x43oordinateIndex\x12\t\n\x01x\x18\x01 \x01(\x05\x12\t\n\x01y\x18\x02 \x01(\x05\x12\t\n\x01z\x18\x03 \x01(\x05\x12\t\n\x01t\x18\x04 \x01(\t\"\xa8\x01\n\nRE_License\x12\x14\n\x0clicense_type\x18\x01 \x01(\t\x12\r\n\x05terms\x18\x02 \x01(\t\x12\x12\n\nlicense_id\x18\x03 \x01(\t\x12\x14\n\x0c\x63ontributors\x18\x04 \x03(\t\x12\x1d\n\x15\x65thical_use_guideline\x18\x05 \x01(\t\x12,\n\x0bpermissions\x18\x06 \x01(\x0b\x32\x17.seigr_cell.Permissions\"\xa0\x01\n\x0bPermissions\x12\x1a\n\x12\x61llow_modification\x18\x01 \x01(\x08\x12\x19\n\x11\x61llow_derivatives\x18\x02 \x01(\x08\x12\x1c\n\x14\x61llow_commercial_use\x18\x03 \x01(\x08\x12\x1e\n\x16geographic_restriction\x18\x04 \x01(\t\x12\x1c\n\x14temporal_restriction\x18\x05 \x01(\t\",\n\x0e\x43ustomProperty\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\tb\x06proto3')
   |                                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E501
28 | 
29 | _globals = globals()
   |

src/seigr_protocol/compiled/seigr_token_pb2.py:7:1: I001 [*] Import block is un-sorted or un-formatted
   |
 5 |   # Protobuf Python Version: 5.29.2
 6 |   """Generated protocol buffer code."""
 7 | / from google.protobuf import descriptor as _descriptor
 8 | | from google.protobuf import descriptor_pool as _descriptor_pool
 9 | | from google.protobuf import runtime_version as _runtime_version
10 | | from google.protobuf import symbol_database as _symbol_database
11 | | from google.protobuf.internal import builder as _builder
12 | | _runtime_version.ValidateProtobufRuntimeVersion(
   | |_^ I001
13 |       _runtime_version.Domain.PUBLIC,
14 |       5,
   |
   = help: Organize imports

src/seigr_protocol/compiled/seigr_token_pb2.py:25:1: E402 Module level import not at top of file
   |
25 | import cross_chain_operations_pb2 as cross__chain__operations__pb2
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E402
   |

src/seigr_protocol/compiled/seigr_token_pb2.py:25:1: I001 [*] Import block is un-sorted or un-formatted
   |
25 | / import cross_chain_operations_pb2 as cross__chain__operations__pb2
26 | | 
27 | | 
28 | | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x11seigr_token.proto\x12\x05seigr\x1a\x1c\x63ross_chain_operations.proto\"\x88\x02\n\nSeigrToken\x12\x10\n\x08token_id\x18\x01 \x01(\t\x12\x10\n\x08owner_id\x18\x02 \x01(\t\x12\x0f\n\x07\x62\x61lance\x18\x03 \x01(\x04\x12\"\n\x06status\x18\x04 \x01(\x0e\x32\x12.seigr.TokenStatus\x12\x0f\n\x07max_cap\x18\x05 \x01(\x04\x12\x15\n\rcap_threshold\x18\x06 \x01(\x04\x12\x15\n\rcreation_date\x18\x07 \x01(\t\x12\x31\n\x08metadata\x18\x08 \x03(\x0b\x32\x1f.seigr.SeigrToken.MetadataEntry\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"4\n\x10MintTokenRequest\x12\x10\n\x08owner_id\x18\x01 \x01(\t\x12\x0e\n\x06\x61mount\x18\x02 \x01(\x04\"5\n\x11MintTokenResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x0f\n\x07message\x18\x02 \x01(\t\"F\n\x14TransferTokenRequest\x12\x0f\n\x07\x66rom_id\x18\x01 \x01(\t\x12\r\n\x05to_id\x18\x02 \x01(\t\x12\x0e\n\x06\x61mount\x18\x03 \x01(\x04\"9\n\x15TransferTokenResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x0f\n\x07message\x18\x02 \x01(\t\"+\n\x17\x43heckTokenStatusRequest\x12\x10\n\x08token_id\x18\x01 \x01(\t\"\x8b\x01\n\x18\x43heckTokenStatusResponse\x12\"\n\x06status\x18\x01 \x01(\x0e\x32\x12.seigr.TokenStatus\x12\x0f\n\x07\x62\x61lance\x18\x02 \x01(\x04\x12\x0f\n\x07max_cap\x18\x03 \x01(\x04\x12\x11\n\tis_capped\x18\x04 \x01(\x08\x12\x16\n\x0esurplus_amount\x18\x05 \x01(\x04\":\n\x15\x41\x64justTokenCapRequest\x12\x10\n\x08token_id\x18\x01 \x01(\t\x12\x0f\n\x07new_cap\x18\x02 \x01(\x04\"P\n\x16\x41\x64justTokenCapResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x0f\n\x07message\x18\x02 \x01(\t\x12\x14\n\x0c\x61\x64justed_cap\x18\x03 \x01(\x04\"G\n\x18\x44istributeSurplusRequest\x12\x10\n\x08token_id\x18\x01 \x01(\t\x12\x19\n\x11\x64istribute_amount\x18\x02 \x01(\x04\"Y\n\x19\x44istributeSurplusResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x1a\n\x12\x64istributed_amount\x18\x02 \x01(\x04\x12\x0f\n\x07message\x18\x03 \x01(\t\"d\n\x1cGetTransactionHistoryRequest\x12\x10\n\x08token_id\x18\x01 \x01(\t\x12\r\n\x05limit\x18\x02 \x01(\r\x12#\n\x1binclude_locked_transactions\x18\x03 \x01(\x08\"[\n\x1dGetTransactionHistoryResponse\x12\x10\n\x08token_id\x18\x01 \x01(\t\x12(\n\x0ctransactions\x18\x02 \x03(\x0b\x32\x12.seigr.Transaction\"\x8e\x01\n\x0bTransaction\x12\x16\n\x0etransaction_id\x18\x01 \x01(\x04\x12\x0f\n\x07\x66rom_id\x18\x02 \x01(\t\x12\r\n\x05to_id\x18\x03 \x01(\t\x12\x0e\n\x06\x61mount\x18\x04 \x01(\x04\x12\x11\n\ttimestamp\x18\x05 \x01(\t\x12$\n\x04type\x18\x06 \x01(\x0e\x32\x16.seigr.TransactionType*X\n\x0bTokenStatus\x12\x17\n\x13TOKEN_STATUS_ACTIVE\x10\x00\x12\x17\n\x13TOKEN_STATUS_CAPPED\x10\x01\x12\x17\n\x13TOKEN_STATUS_LOCKED\x10\x02\x32\xff\x03\n\x11SeigrTokenService\x12>\n\tMintToken\x12\x17.seigr.MintTokenRequest\x1a\x18.seigr.MintTokenResponse\x12J\n\rTransferToken\x12\x1b.seigr.TransferTokenRequest\x1a\x1c.seigr.TransferTokenResponse\x12S\n\x10\x43heckTokenStatus\x12\x1e.seigr.CheckTokenStatusRequest\x1a\x1f.seigr.CheckTokenStatusResponse\x12M\n\x0e\x41\x64justTokenCap\x12\x1c.seigr.AdjustTokenCapRequest\x1a\x1d.seigr.AdjustTokenCapResponse\x12V\n\x11\x44istributeSurplus\x12\x1f.seigr.DistributeSurplusRequest\x1a .seigr.DistributeSurplusResponse\x12\x62\n\x15GetTransactionHistory\x12#.seigr.GetTransactionHistoryRequest\x1a$.seigr.GetTransactionHistoryResponseb\x06proto3')
   | |_^ I001
29 |   
30 |   _globals = globals()
   |
   = help: Organize imports

src/seigr_protocol/compiled/seigr_token_pb2.py:25:38: F401 [*] `cross_chain_operations_pb2` imported but unused
   |
25 | import cross_chain_operations_pb2 as cross__chain__operations__pb2
   |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ F401
   |
   = help: Remove unused import: `cross_chain_operations_pb2`

src/seigr_protocol/compiled/seigr_token_pb2.py:28:101: E501 Line too long (3407 > 100)
   |
28 | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x11seigr_token.proto\x12\x05seigr\x1a\x1c\x63ross_chain_operations.proto\"\x88\x02\n\nSeigrToken\x12\x10\n\x08token_id\x18\x01 \x01(\t\x12\x10\n\x08owner_id\x18\x02 \x01(\t\x12\x0f\n\x07\x62\x61lance\x18\x03 \x01(\x04\x12\"\n\x06status\x18\x04 \x01(\x0e\x32\x12.seigr.TokenStatus\x12\x0f\n\x07max_cap\x18\x05 \x01(\x04\x12\x15\n\rcap_threshold\x18\x06 \x01(\x04\x12\x15\n\rcreation_date\x18\x07 \x01(\t\x12\x31\n\x08metadata\x18\x08 \x03(\x0b\x32\x1f.seigr.SeigrToken.MetadataEntry\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"4\n\x10MintTokenRequest\x12\x10\n\x08owner_id\x18\x01 \x01(\t\x12\x0e\n\x06\x61mount\x18\x02 \x01(\x04\"5\n\x11MintTokenResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x0f\n\x07message\x18\x02 \x01(\t\"F\n\x14TransferTokenRequest\x12\x0f\n\x07\x66rom_id\x18\x01 \x01(\t\x12\r\n\x05to_id\x18\x02 \x01(\t\x12\x0e\n\x06\x61mount\x18\x03 \x01(\x04\"9\n\x15TransferTokenResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x0f\n\x07message\x18\x02 \x01(\t\"+\n\x17\x43heckTokenStatusRequest\x12\x10\n\x08token_id\x18\x01 \x01(\t\"\x8b\x01\n\x18\x43heckTokenStatusResponse\x12\"\n\x06status\x18\x01 \x01(\x0e\x32\x12.seigr.TokenStatus\x12\x0f\n\x07\x62\x61lance\x18\x02 \x01(\x04\x12\x0f\n\x07max_cap\x18\x03 \x01(\x04\x12\x11\n\tis_capped\x18\x04 \x01(\x08\x12\x16\n\x0esurplus_amount\x18\x05 \x01(\x04\":\n\x15\x41\x64justTokenCapRequest\x12\x10\n\x08token_id\x18\x01 \x01(\t\x12\x0f\n\x07new_cap\x18\x02 \x01(\x04\"P\n\x16\x41\x64justTokenCapResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x0f\n\x07message\x18\x02 \x01(\t\x12\x14\n\x0c\x61\x64justed_cap\x18\x03 \x01(\x04\"G\n\x18\x44istributeSurplusRequest\x12\x10\n\x08token_id\x18\x01 \x01(\t\x12\x19\n\x11\x64istribute_amount\x18\x02 \x01(\x04\"Y\n\x19\x44istributeSurplusResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x1a\n\x12\x64istributed_amount\x18\x02 \x01(\x04\x12\x0f\n\x07message\x18\x03 \x01(\t\"d\n\x1cGetTransactionHistoryRequest\x12\x10\n\x08token_id\x18\x01 \x01(\t\x12\r\n\x05limit\x18\x02 \x01(\r\x12#\n\x1binclude_locked_transactions\x18\x03 \x01(\x08\"[\n\x1dGetTransactionHistoryResponse\x12\x10\n\x08token_id\x18\x01 \x01(\t\x12(\n\x0ctransactions\x18\x02 \x03(\x0b\x32\x12.seigr.Transaction\"\x8e\x01\n\x0bTransaction\x12\x16\n\x0etransaction_id\x18\x01 \x01(\x04\x12\x0f\n\x07\x66rom_id\x18\x02 \x01(\t\x12\r\n\x05to_id\x18\x03 \x01(\t\x12\x0e\n\x06\x61mount\x18\x04 \x01(\x04\x12\x11\n\ttimestamp\x18\x05 \x01(\t\x12$\n\x04type\x18\x06 \x01(\x0e\x32\x16.seigr.TransactionType*X\n\x0bTokenStatus\x12\x17\n\x13TOKEN_STATUS_ACTIVE\x10\x00\x12\x17\n\x13TOKEN_STATUS_CAPPED\x10\x01\x12\x17\n\x13TOKEN_STATUS_LOCKED\x10\x02\x32\xff\x03\n\x11SeigrTokenService\x12>\n\tMintToken\x12\x17.seigr.MintTokenRequest\x1a\x18.seigr.MintTokenResponse\x12J\n\rTransferToken\x12\x1b.seigr.TransferTokenRequest\x1a\x1c.seigr.TransferTokenResponse\x12S\n\x10\x43heckTokenStatus\x12\x1e.seigr.CheckTokenStatusRequest\x1a\x1f.seigr.CheckTokenStatusResponse\x12M\n\x0e\x41\x64justTokenCap\x12\x1c.seigr.AdjustTokenCapRequest\x1a\x1d.seigr.AdjustTokenCapResponse\x12V\n\x11\x44istributeSurplus\x12\x1f.seigr.DistributeSurplusRequest\x1a .seigr.DistributeSurplusResponse\x12\x62\n\x15GetTransactionHistory\x12#.seigr.GetTransactionHistoryRequest\x1a$.seigr.GetTransactionHistoryResponseb\x06proto3')
   |                                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E501
29 | 
30 | _globals = globals()
   |

src/seigr_protocol/compiled/sensor_management_pb2.py:7:1: I001 [*] Import block is un-sorted or un-formatted
   |
 5 |   # Protobuf Python Version: 5.29.2
 6 |   """Generated protocol buffer code."""
 7 | / from google.protobuf import descriptor as _descriptor
 8 | | from google.protobuf import descriptor_pool as _descriptor_pool
 9 | | from google.protobuf import runtime_version as _runtime_version
10 | | from google.protobuf import symbol_database as _symbol_database
11 | | from google.protobuf.internal import builder as _builder
12 | | _runtime_version.ValidateProtobufRuntimeVersion(
   | |_^ I001
13 |       _runtime_version.Domain.PUBLIC,
14 |       5,
   |
   = help: Organize imports

src/seigr_protocol/compiled/sensor_management_pb2.py:27:101: E501 Line too long (6539 > 100)
   |
27 | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x17sensor_management.proto\x12\x05seigr\"\xc3\x02\n\x12SensorRegistration\x12\x11\n\tsensor_id\x18\x01 \x01(\t\x12&\n\x0bsensor_type\x18\x02 \x01(\x0e\x32\x11.seigr.SensorType\x12\x10\n\x08location\x18\x03 \x01(\t\x12#\n\x06status\x18\x04 \x01(\x0e\x32\x13.seigr.SensorStatus\x12&\n\x0b\x64\x61ta_format\x18\x05 \x01(\x0e\x32\x11.seigr.DataFormat\x12\x12\n\ncreated_at\x18\x06 \x01(\t\x12\x13\n\x0blast_active\x18\x07 \x01(\t\x12\x39\n\x08metadata\x18\x08 \x03(\x0b\x32\'.seigr.SensorRegistration.MetadataEntry\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x9e\x02\n\x0cSensorConfig\x12\x11\n\tsensor_id\x18\x01 \x01(\t\x12\x1d\n\x15\x64\x61ta_interval_seconds\x18\x02 \x01(\x05\x12\x15\n\rthreshold_min\x18\x03 \x01(\x01\x12\x15\n\rthreshold_max\x18\x04 \x01(\x01\x12\x15\n\renable_alerts\x18\x05 \x01(\x08\x12\x1e\n\x16\x65nable_data_encryption\x18\x06 \x01(\x08\x12@\n\x0f\x63onfig_metadata\x18\x07 \x03(\x0b\x32\'.seigr.SensorConfig.ConfigMetadataEntry\x1a\x35\n\x13\x43onfigMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xda\x01\n\nSensorData\x12\x11\n\tsensor_id\x18\x01 \x01(\t\x12\x11\n\ttimestamp\x18\x02 \x01(\t\x12\r\n\x05value\x18\x03 \x01(\x01\x12&\n\x0b\x64\x61ta_format\x18\x04 \x01(\x0e\x32\x11.seigr.DataFormat\x12:\n\rdata_metadata\x18\x05 \x03(\x0b\x32#.seigr.SensorData.DataMetadataEntry\x1a\x33\n\x11\x44\x61taMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xf0\x01\n\x0fSensorStatusLog\x12\x0e\n\x06log_id\x18\x01 \x01(\t\x12\x11\n\tsensor_id\x18\x02 \x01(\t\x12#\n\x06status\x18\x03 \x01(\x0e\x32\x13.seigr.SensorStatus\x12\x11\n\ttimestamp\x18\x04 \x01(\t\x12\x0f\n\x07message\x18\x05 \x01(\t\x12=\n\x0clog_metadata\x18\x06 \x03(\x0b\x32\'.seigr.SensorStatusLog.LogMetadataEntry\x1a\x32\n\x10LogMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x99\x02\n\x0fSensorAlertRule\x12\x0f\n\x07rule_id\x18\x01 \x01(\t\x12\x11\n\tsensor_id\x18\x02 \x01(\t\x12\x17\n\x0f\x61lert_threshold\x18\x03 \x01(\x01\x12,\n\x0f\x61lert_on_status\x18\x04 \x01(\x0e\x32\x13.seigr.SensorStatus\x12\x15\n\ralert_message\x18\x05 \x01(\t\x12\x0e\n\x06\x61\x63tive\x18\x06 \x01(\x08\x12?\n\rrule_metadata\x18\x07 \x03(\x0b\x32(.seigr.SensorAlertRule.RuleMetadataEntry\x1a\x33\n\x11RuleMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xf5\x01\n\x0bSensorAlert\x12\x10\n\x08\x61lert_id\x18\x01 \x01(\t\x12\x11\n\tsensor_id\x18\x02 \x01(\t\x12\r\n\x05value\x18\x03 \x01(\x01\x12#\n\x06status\x18\x04 \x01(\x0e\x32\x13.seigr.SensorStatus\x12\x15\n\ralert_message\x18\x05 \x01(\t\x12\x11\n\ttimestamp\x18\x06 \x01(\t\x12\x32\n\x08metadata\x18\x07 \x03(\x0b\x32 .seigr.SensorAlert.MetadataEntry\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xf4\x02\n\x13SensorNetworkConfig\x12\x12\n\nnetwork_id\x18\x01 \x01(\t\x12*\n\x07sensors\x18\x02 \x03(\x0b\x32\x19.seigr.SensorRegistration\x12$\n\x1c\x61ggregation_interval_seconds\x18\x03 \x01(\x05\x12\x17\n\x0f\x65nable_failover\x18\x04 \x01(\x08\x12\x1c\n\x14network_level_alerts\x18\x05 \x01(\x08\x12\x14\n\x0cprimary_node\x18\x06 \x01(\t\x12\x13\n\x0b\x62\x61\x63kup_node\x18\x07 \x01(\t\x12I\n\x10network_metadata\x18\x08 \x03(\x0b\x32/.seigr.SensorNetworkConfig.NetworkMetadataEntry\x12\x12\n\ncreated_at\x18\t \x01(\t\x1a\x36\n\x14NetworkMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xfb\x02\n\x1bSensorPredictiveMaintenance\x12\x16\n\x0emaintenance_id\x18\x01 \x01(\t\x12\x11\n\tsensor_id\x18\x02 \x01(\t\x12\x10\n\x08model_id\x18\x03 \x01(\t\x12\x1c\n\x14prediction_timestamp\x18\x04 \x01(\t\x12\x19\n\x11predicted_failure\x18\x05 \x01(\x08\x12\x18\n\x10\x63onfidence_score\x18\x06 \x01(\x01\x12\x1a\n\x12recommended_action\x18\x07 \x01(\t\x12Y\n\x14maintenance_metadata\x18\x08 \x03(\x0b\x32;.seigr.SensorPredictiveMaintenance.MaintenanceMetadataEntry\x12\x19\n\x11next_analysis_due\x18\t \x01(\t\x1a:\n\x18MaintenanceMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xa7\x01\n\x11SensorDataRequest\x12\x12\n\nrequest_id\x18\x01 \x01(\t\x12\x11\n\tsensor_id\x18\x02 \x01(\t\x12\x12\n\nstart_time\x18\x03 \x01(\t\x12\x10\n\x08\x65nd_time\x18\x04 \x01(\t\x12\x18\n\x10include_metadata\x18\x05 \x01(\x08\x12+\n\x10requested_format\x18\x06 \x01(\x0e\x32\x11.seigr.DataFormat\"\xf6\x01\n\x12SensorDataResponse\x12\x12\n\nrequest_id\x18\x01 \x01(\t\x12&\n\x0b\x64\x61ta_points\x18\x02 \x03(\x0b\x32\x11.seigr.SensorData\x12\x0e\n\x06status\x18\x03 \x01(\t\x12\x0f\n\x07message\x18\x04 \x01(\t\x12J\n\x11response_metadata\x18\x05 \x03(\x0b\x32/.seigr.SensorDataResponse.ResponseMetadataEntry\x1a\x37\n\x15ResponseMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xb9\x03\n\x14SensorNetworkSummary\x12\x12\n\nnetwork_id\x18\x01 \x01(\t\x12\x15\n\rtotal_sensors\x18\x02 \x01(\x05\x12\x16\n\x0e\x61\x63tive_sensors\x18\x03 \x01(\x05\x12\x18\n\x10inactive_sensors\x18\x04 \x01(\x05\x12\x1b\n\x13sensors_with_alerts\x18\x05 \x01(\x05\x12\x14\n\x0clast_updated\x18\x06 \x01(\t\x12R\n\x15sensor_counts_by_type\x18\x07 \x03(\x0b\x32\x33.seigr.SensorNetworkSummary.SensorCountsByTypeEntry\x12J\n\x10summary_metadata\x18\x08 \x03(\x0b\x32\x30.seigr.SensorNetworkSummary.SummaryMetadataEntry\x1a\x39\n\x17SensorCountsByTypeEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x05:\x02\x38\x01\x1a\x36\n\x14SummaryMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01*\xc5\x01\n\nSensorType\x12\x19\n\x15SENSOR_TYPE_UNDEFINED\x10\x00\x12\x1b\n\x17SENSOR_TYPE_TEMPERATURE\x10\x01\x12\x18\n\x14SENSOR_TYPE_HUMIDITY\x10\x02\x12\x18\n\x14SENSOR_TYPE_PRESSURE\x10\x03\x12\x1b\n\x17SENSOR_TYPE_AIR_QUALITY\x10\x04\x12\x16\n\x12SENSOR_TYPE_MOTION\x10\x05\x12\x16\n\x12SENSOR_TYPE_CUSTOM\x10\x06*r\n\nDataFormat\x12\x19\n\x15\x44\x41TA_FORMAT_UNDEFINED\x10\x00\x12\x13\n\x0f\x44\x41TA_FORMAT_RAW\x10\x01\x12\x19\n\x15\x44\x41TA_FORMAT_PROCESSED\x10\x02\x12\x19\n\x15\x44\x41TA_FORMAT_ENCRYPTED\x10\x03*\x99\x01\n\x0cSensorStatus\x12\x1b\n\x17SENSOR_STATUS_UNDEFINED\x10\x00\x12\x18\n\x14SENSOR_STATUS_ACTIVE\x10\x01\x12\x1a\n\x16SENSOR_STATUS_INACTIVE\x10\x02\x12\x1d\n\x19SENSOR_STATUS_MAINTENANCE\x10\x03\x12\x17\n\x13SENSOR_STATUS_ERROR\x10\x04\x62\x06proto3')
   |
28 | 
29 | _globals = globals()
   |

src/seigr_protocol/compiled/smart_contract_pb2.py:7:1: I001 [*] Import block is un-sorted or un-formatted
   |
 5 |   # Protobuf Python Version: 5.29.2
 6 |   """Generated protocol buffer code."""
 7 | / from google.protobuf import descriptor as _descriptor
 8 | | from google.protobuf import descriptor_pool as _descriptor_pool
 9 | | from google.protobuf import runtime_version as _runtime_version
10 | | from google.protobuf import symbol_database as _symbol_database
11 | | from google.protobuf.internal import builder as _builder
12 | | _runtime_version.ValidateProtobufRuntimeVersion(
   | |_^ I001
13 |       _runtime_version.Domain.PUBLIC,
14 |       5,
   |
   = help: Organize imports

src/seigr_protocol/compiled/smart_contract_pb2.py:27:101: E501 Line too long (5691 > 100)
   |
27 | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x14smart_contract.proto\x12\x05seigr\"\xb3\x03\n\x0e\x43ontractConfig\x12\x13\n\x0b\x63ontract_id\x18\x01 \x01(\t\x12*\n\rcontract_type\x18\x02 \x01(\x0e\x32\x13.seigr.ContractType\x12\x12\n\ncreated_by\x18\x03 \x01(\t\x12\x12\n\ncreated_at\x18\x04 \x01(\t\x12/\n\x05terms\x18\x05 \x03(\x0b\x32 .seigr.ContractConfig.TermsEntry\x12 \n\x18requires_voting_approval\x18\x06 \x01(\x08\x12#\n\x1b\x65nforce_adaptive_conditions\x18\x07 \x01(\x08\x12\x42\n\x0f\x63onfig_metadata\x18\x08 \x03(\x0b\x32).seigr.ContractConfig.ConfigMetadataEntry\x12\x17\n\x0f\x65xpiration_date\x18\t \x01(\t\x1a,\n\nTermsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x35\n\x13\x43onfigMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x9d\x02\n\x19\x43ontractExecutionCriteria\x12\x13\n\x0b\x63ontract_id\x18\x01 \x01(\t\x12\x16\n\x0erequired_roles\x18\x02 \x03(\t\x12\x44\n\nconditions\x18\x03 \x03(\x0b\x32\x30.seigr.ContractExecutionCriteria.ConditionsEntry\x12\x16\n\x0emin_vote_count\x18\x04 \x01(\x05\x12\"\n\x1a\x61\x64\x61ptive_threshold_enabled\x18\x05 \x01(\x08\x12\x1e\n\x16\x64\x65pendent_contract_ids\x18\x06 \x03(\t\x1a\x31\n\x0f\x43onditionsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xe8\x02\n\x11\x43ontractExecution\x12\x14\n\x0c\x65xecution_id\x18\x01 \x01(\t\x12\x13\n\x0b\x63ontract_id\x18\x02 \x01(\t\x12.\n\x06status\x18\x03 \x01(\x0e\x32\x1e.seigr.ContractExecutionStatus\x12\x14\n\x0cinitiated_by\x18\x04 \x01(\t\x12\x12\n\nstarted_at\x18\x05 \x01(\t\x12\x14\n\x0c\x63ompleted_at\x18\x06 \x01(\t\x12K\n\x12\x65xecution_metadata\x18\x07 \x03(\x0b\x32/.seigr.ContractExecution.ExecutionMetadataEntry\x12\x1e\n\x16requires_manual_review\x18\x08 \x01(\x08\x12\x11\n\tgas_limit\x18\t \x01(\x03\x1a\x38\n\x16\x45xecutionMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xa4\x02\n\x10\x43ontractAuditLog\x12\x0e\n\x06log_id\x18\x01 \x01(\t\x12\x13\n\x0b\x63ontract_id\x18\x02 \x01(\t\x12*\n\x06\x61\x63tion\x18\x03 \x01(\x0e\x32\x1a.seigr.ContractAuditAction\x12\x11\n\taction_by\x18\x04 \x01(\t\x12\x11\n\ttimestamp\x18\x05 \x01(\t\x12\x35\n\x07\x64\x65tails\x18\x06 \x03(\x0b\x32$.seigr.ContractAuditLog.DetailsEntry\x12\x17\n\x0f\x63ompliance_flag\x18\x07 \x01(\x08\x12\x19\n\x11\x63orrective_action\x18\x08 \x01(\t\x1a.\n\x0c\x44\x65tailsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xaa\x02\n\x16\x43ontractActionResponse\x12\x13\n\x0b\x63ontract_id\x18\x01 \x01(\t\x12\x13\n\x0bresponse_id\x18\x02 \x01(\t\x12\x0f\n\x07success\x18\x03 \x01(\x08\x12\x16\n\x0eresult_message\x18\x04 \x01(\t\x12\x34\n\x0c\x66inal_status\x18\x05 \x01(\x0e\x32\x1e.seigr.ContractExecutionStatus\x12N\n\x11response_metadata\x18\x06 \x03(\x0b\x32\x33.seigr.ContractActionResponse.ResponseMetadataEntry\x1a\x37\n\x15ResponseMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xd1\x01\n\x15ModifyContractRequest\x12\x13\n\x0b\x63ontract_id\x18\x01 \x01(\t\x12=\n\tnew_terms\x18\x02 \x03(\x0b\x32*.seigr.ModifyContractRequest.NewTermsEntry\x12\x13\n\x0bmodified_by\x18\x03 \x01(\t\x12\x1e\n\x16modification_timestamp\x18\x04 \x01(\t\x1a/\n\rNewTermsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x7f\n\x15\x43\x61ncelContractRequest\x12\x13\n\x0b\x63ontract_id\x18\x01 \x01(\t\x12\x14\n\x0c\x63\x61ncelled_by\x18\x02 \x01(\t\x12\x1b\n\x13\x63\x61ncellation_reason\x18\x03 \x01(\t\x12\x1e\n\x16\x63\x61ncellation_timestamp\x18\x04 \x01(\t\"\xc8\x01\n\x14\x43ontractAuditRequest\x12\x13\n\x0b\x63ontract_id\x18\x01 \x01(\t\x12\x18\n\x10time_range_start\x18\x02 \x01(\t\x12\x16\n\x0etime_range_end\x18\x03 \x01(\t\x12\x39\n\x07\x66ilters\x18\x04 \x03(\x0b\x32(.seigr.ContractAuditRequest.FiltersEntry\x1a.\n\x0c\x46iltersEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"_\n\x15\x43ontractAuditResponse\x12%\n\x04logs\x18\x01 \x03(\x0b\x32\x17.seigr.ContractAuditLog\x12\x0e\n\x06status\x18\x02 \x01(\t\x12\x0f\n\x07message\x18\x03 \x01(\t*\x99\x01\n\x0c\x43ontractType\x12\x1b\n\x17\x43ONTRACT_TYPE_UNDEFINED\x10\x00\x12 \n\x1c\x43ONTRACT_REWARD_DISTRIBUTION\x10\x01\x12 \n\x1c\x43ONTRACT_RESOURCE_ALLOCATION\x10\x02\x12\x13\n\x0f\x43ONTRACT_VOTING\x10\x03\x12\x13\n\x0f\x43ONTRACT_CUSTOM\x10\x04*\xae\x01\n\x17\x43ontractExecutionStatus\x12\x1e\n\x1a\x45XECUTION_STATUS_UNDEFINED\x10\x00\x12\x15\n\x11\x45XECUTION_PENDING\x10\x01\x12\x14\n\x10\x45XECUTION_ACTIVE\x10\x02\x12\x17\n\x13\x45XECUTION_COMPLETED\x10\x03\x12\x14\n\x10\x45XECUTION_FAILED\x10\x04\x12\x17\n\x13\x45XECUTION_CANCELLED\x10\x05*\xdb\x01\n\x13\x43ontractAuditAction\x12\x1a\n\x16\x41UDIT_ACTION_UNDEFINED\x10\x00\x12\x18\n\x14\x43ONTRACT_INITIALIZED\x10\x01\x12\x1e\n\x1a\x43ONTRACT_EXECUTION_STARTED\x10\x02\x12 \n\x1c\x43ONTRACT_EXECUTION_COMPLETED\x10\x03\x12\x1d\n\x19\x43ONTRACT_EXECUTION_FAILED\x10\x04\x12\x16\n\x12\x43ONTRACT_CANCELLED\x10\x05\x12\x15\n\x11\x43ONTRACT_MODIFIED\x10\x06\x32\xa8\x03\n\x14SmartContractService\x12J\n\x12InitializeContract\x12\x15.seigr.ContractConfig\x1a\x1d.seigr.ContractActionResponse\x12J\n\x0f\x45xecuteContract\x12\x18.seigr.ContractExecution\x1a\x1d.seigr.ContractActionResponse\x12R\n\x13ModifyContractTerms\x12\x1c.seigr.ModifyContractRequest\x1a\x1d.seigr.ContractActionResponse\x12M\n\x0e\x43\x61ncelContract\x12\x1c.seigr.CancelContractRequest\x1a\x1d.seigr.ContractActionResponse\x12U\n\x18RetrieveContractAuditLog\x12\x1b.seigr.ContractAuditRequest\x1a\x1c.seigr.ContractAuditResponseb\x06proto3')
   |
28 | 
29 | _globals = globals()
   |

src/seigr_protocol/compiled/streaming_pb2.py:7:1: I001 [*] Import block is un-sorted or un-formatted
   |
 5 |   # Protobuf Python Version: 5.29.2
 6 |   """Generated protocol buffer code."""
 7 | / from google.protobuf import descriptor as _descriptor
 8 | | from google.protobuf import descriptor_pool as _descriptor_pool
 9 | | from google.protobuf import runtime_version as _runtime_version
10 | | from google.protobuf import symbol_database as _symbol_database
11 | | from google.protobuf.internal import builder as _builder
12 | | _runtime_version.ValidateProtobufRuntimeVersion(
   | |_^ I001
13 |       _runtime_version.Domain.PUBLIC,
14 |       5,
   |
   = help: Organize imports

src/seigr_protocol/compiled/streaming_pb2.py:25:1: E402 Module level import not at top of file
   |
25 | import common_pb2 as common__pb2
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E402
   |

src/seigr_protocol/compiled/streaming_pb2.py:25:1: I001 [*] Import block is un-sorted or un-formatted
   |
25 | / import common_pb2 as common__pb2
26 | | 
27 | | 
28 | | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0fstreaming.proto\x12\x05seigr\x1a\x0c\x63ommon.proto\"\x9f\x03\n\x0cStreamConfig\x12\x11\n\tstream_id\x18\x01 \x01(\t\x12&\n\x0bstream_type\x18\x02 \x01(\x0e\x32\x11.seigr.StreamType\x12*\n\x08protocol\x18\x03 \x01(\x0e\x32\x18.seigr.StreamingProtocol\x12+\n\tqos_level\x18\x04 \x01(\x0e\x32\x18.seigr.StreamingQoSLevel\x12&\n\x08priority\x18\x05 \x01(\x0e\x32\x14.seigr.PriorityLevel\x12\x13\n\x0b\x62uffer_size\x18\x06 \x01(\x05\x12\x16\n\x0e\x64\x61ta_source_id\x18\x07 \x01(\t\x12\x19\n\x11\x65nable_encryption\x18\x08 \x01(\x08\x12@\n\x0fstream_metadata\x18\t \x03(\x0b\x32\'.seigr.StreamConfig.StreamMetadataEntry\x12\x12\n\ncreated_at\x18\n \x01(\t\x1a\x35\n\x13StreamMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xa0\x03\n\x11MultiStreamConfig\x12\x11\n\tbundle_id\x18\x01 \x01(\t\x12$\n\x07streams\x18\x02 \x03(\x0b\x32\x13.seigr.StreamConfig\x12\x32\n\x10shared_qos_level\x18\x03 \x01(\x0e\x32\x18.seigr.StreamingQoSLevel\x12\x31\n\x0fshared_protocol\x18\x04 \x01(\x0e\x32\x18.seigr.StreamingProtocol\x12\x1d\n\x15shared_data_source_id\x18\x05 \x01(\t\x12-\n\x0fshared_priority\x18\x06 \x01(\x0e\x32\x14.seigr.PriorityLevel\x12\x45\n\x0f\x62undle_metadata\x18\x07 \x03(\x0b\x32,.seigr.MultiStreamConfig.BundleMetadataEntry\x12\x1f\n\x17\x65nable_batch_encryption\x18\x08 \x01(\x08\x1a\x35\n\x13\x42undleMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xba\x01\n\nDataPacket\x12\x11\n\tpacket_id\x18\x01 \x01(\t\x12\x11\n\tstream_id\x18\x02 \x01(\t\x12\x0f\n\x07payload\x18\x03 \x01(\x0c\x12\x11\n\ttimestamp\x18\x04 \x01(\t\x12\x31\n\x08metadata\x18\x05 \x03(\x0b\x32\x1f.seigr.DataPacket.MetadataEntry\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xa4\x02\n\x0cStreamStatus\x12\x11\n\tstream_id\x18\x01 \x01(\t\x12(\n\x06status\x18\x02 \x01(\x0e\x32\x18.seigr.OperationalStatus\x12\x14\n\x0cpackets_sent\x18\x03 \x01(\x03\x12\x18\n\x10packets_received\x18\x04 \x01(\x03\x12\x17\n\x0fpackets_dropped\x18\x05 \x01(\x03\x12\x15\n\rlast_activity\x18\x06 \x01(\t\x12@\n\x0fstatus_metadata\x18\x07 \x03(\x0b\x32\'.seigr.StreamStatus.StatusMetadataEntry\x1a\x35\n\x13StatusMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xa4\x02\n\x0fStreamRecording\x12\x14\n\x0crecording_id\x18\x01 \x01(\t\x12\x11\n\tstream_id\x18\x02 \x01(\t\x12\x17\n\x0fstart_timestamp\x18\x03 \x01(\t\x12\x15\n\rend_timestamp\x18\x04 \x01(\t\x12\x1b\n\x13is_playback_enabled\x18\x05 \x01(\x08\x12\x16\n\x0eplayback_speed\x18\x06 \x01(\x05\x12I\n\x12recording_metadata\x18\x07 \x03(\x0b\x32-.seigr.StreamRecording.RecordingMetadataEntry\x1a\x38\n\x16RecordingMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xa1\x02\n\rStreamControl\x12\x11\n\tstream_id\x18\x01 \x01(\t\x12\r\n\x05pause\x18\x02 \x01(\x08\x12\x0e\n\x06resume\x18\x03 \x01(\x08\x12\x11\n\tterminate\x18\x04 \x01(\x08\x12\x1a\n\x12update_buffer_size\x18\x05 \x01(\x05\x12\x32\n\x10update_qos_level\x18\x06 \x01(\x0e\x32\x18.seigr.StreamingQoSLevel\x12\x43\n\x10\x63ontrol_metadata\x18\x07 \x03(\x0b\x32).seigr.StreamControl.ControlMetadataEntry\x1a\x36\n\x14\x43ontrolMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xd0\x01\n\x0eStreamEventLog\x12\x10\n\x08\x65vent_id\x18\x01 \x01(\t\x12\x11\n\tstream_id\x18\x02 \x01(\t\x12\x0e\n\x06\x61\x63tion\x18\x03 \x01(\t\x12\x11\n\ttimestamp\x18\x04 \x01(\t\x12@\n\x0e\x65vent_metadata\x18\x05 \x03(\x0b\x32(.seigr.StreamEventLog.EventMetadataEntry\x1a\x34\n\x12\x45ventMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xd8\x02\n\x14StreamMetricsSummary\x12\x11\n\tstream_id\x18\x01 \x01(\t\x12\x1a\n\x12total_packets_sent\x18\x02 \x01(\x03\x12\x1e\n\x16total_packets_received\x18\x03 \x01(\x03\x12\x1d\n\x15total_packets_dropped\x18\x04 \x01(\x03\x12\x1a\n\x12\x61verage_latency_ms\x18\x05 \x01(\x01\x12\x18\n\x10packet_loss_rate\x18\x06 \x01(\x01\x12\x18\n\x10reporting_period\x18\x07 \x01(\t\x12J\n\x10metrics_metadata\x18\x08 \x03(\x0b\x32\x30.seigr.StreamMetricsSummary.MetricsMetadataEntry\x1a\x36\n\x14MetricsMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01*\xc6\x01\n\nStreamType\x12\x19\n\x15STREAM_TYPE_UNDEFINED\x10\x00\x12\x1b\n\x17STREAM_TYPE_SENSOR_DATA\x10\x01\x12\"\n\x1eSTREAM_TYPE_REALTIME_ANALYTICS\x10\x02\x12\x1a\n\x16STREAM_TYPE_EVENT_FEED\x10\x03\x12\x1d\n\x19STREAM_TYPE_USER_ACTIVITY\x10\x04\x12!\n\x1dSTREAM_TYPE_SYSTEM_MONITORING\x10\x05*\xa0\x01\n\x11StreamingProtocol\x12\x1d\n\x19STREAM_PROTOCOL_UNDEFINED\x10\x00\x12\x1d\n\x19STREAM_PROTOCOL_WEBSOCKET\x10\x01\x12\x18\n\x14STREAM_PROTOCOL_GRPC\x10\x02\x12\x18\n\x14STREAM_PROTOCOL_MQTT\x10\x03\x12\x19\n\x15STREAM_PROTOCOL_HTTP2\x10\x04*\xa4\x01\n\x11StreamingQoSLevel\x12\x1e\n\x1aSTREAM_QOS_LEVEL_UNDEFINED\x10\x00\x12\x18\n\x14STREAM_QOS_LEVEL_LOW\x10\x01\x12\x1b\n\x17STREAM_QOS_LEVEL_MEDIUM\x10\x02\x12\x19\n\x15STREAM_QOS_LEVEL_HIGH\x10\x03\x12\x1d\n\x19STREAM_QOS_LEVEL_CRITICAL\x10\x04\x62\x06proto3')
   | |_^ I001
29 |   
30 |   _globals = globals()
   |
   = help: Organize imports

src/seigr_protocol/compiled/streaming_pb2.py:25:22: F401 [*] `common_pb2` imported but unused
   |
25 | import common_pb2 as common__pb2
   |                      ^^^^^^^^^^^ F401
   |
   = help: Remove unused import: `common_pb2`

src/seigr_protocol/compiled/streaming_pb2.py:28:101: E501 Line too long (5219 > 100)
   |
28 | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0fstreaming.proto\x12\x05seigr\x1a\x0c\x63ommon.proto\"\x9f\x03\n\x0cStreamConfig\x12\x11\n\tstream_id\x18\x01 \x01(\t\x12&\n\x0bstream_type\x18\x02 \x01(\x0e\x32\x11.seigr.StreamType\x12*\n\x08protocol\x18\x03 \x01(\x0e\x32\x18.seigr.StreamingProtocol\x12+\n\tqos_level\x18\x04 \x01(\x0e\x32\x18.seigr.StreamingQoSLevel\x12&\n\x08priority\x18\x05 \x01(\x0e\x32\x14.seigr.PriorityLevel\x12\x13\n\x0b\x62uffer_size\x18\x06 \x01(\x05\x12\x16\n\x0e\x64\x61ta_source_id\x18\x07 \x01(\t\x12\x19\n\x11\x65nable_encryption\x18\x08 \x01(\x08\x12@\n\x0fstream_metadata\x18\t \x03(\x0b\x32\'.seigr.StreamConfig.StreamMetadataEntry\x12\x12\n\ncreated_at\x18\n \x01(\t\x1a\x35\n\x13StreamMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xa0\x03\n\x11MultiStreamConfig\x12\x11\n\tbundle_id\x18\x01 \x01(\t\x12$\n\x07streams\x18\x02 \x03(\x0b\x32\x13.seigr.StreamConfig\x12\x32\n\x10shared_qos_level\x18\x03 \x01(\x0e\x32\x18.seigr.StreamingQoSLevel\x12\x31\n\x0fshared_protocol\x18\x04 \x01(\x0e\x32\x18.seigr.StreamingProtocol\x12\x1d\n\x15shared_data_source_id\x18\x05 \x01(\t\x12-\n\x0fshared_priority\x18\x06 \x01(\x0e\x32\x14.seigr.PriorityLevel\x12\x45\n\x0f\x62undle_metadata\x18\x07 \x03(\x0b\x32,.seigr.MultiStreamConfig.BundleMetadataEntry\x12\x1f\n\x17\x65nable_batch_encryption\x18\x08 \x01(\x08\x1a\x35\n\x13\x42undleMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xba\x01\n\nDataPacket\x12\x11\n\tpacket_id\x18\x01 \x01(\t\x12\x11\n\tstream_id\x18\x02 \x01(\t\x12\x0f\n\x07payload\x18\x03 \x01(\x0c\x12\x11\n\ttimestamp\x18\x04 \x01(\t\x12\x31\n\x08metadata\x18\x05 \x03(\x0b\x32\x1f.seigr.DataPacket.MetadataEntry\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xa4\x02\n\x0cStreamStatus\x12\x11\n\tstream_id\x18\x01 \x01(\t\x12(\n\x06status\x18\x02 \x01(\x0e\x32\x18.seigr.OperationalStatus\x12\x14\n\x0cpackets_sent\x18\x03 \x01(\x03\x12\x18\n\x10packets_received\x18\x04 \x01(\x03\x12\x17\n\x0fpackets_dropped\x18\x05 \x01(\x03\x12\x15\n\rlast_activity\x18\x06 \x01(\t\x12@\n\x0fstatus_metadata\x18\x07 \x03(\x0b\x32\'.seigr.StreamStatus.StatusMetadataEntry\x1a\x35\n\x13StatusMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xa4\x02\n\x0fStreamRecording\x12\x14\n\x0crecording_id\x18\x01 \x01(\t\x12\x11\n\tstream_id\x18\x02 \x01(\t\x12\x17\n\x0fstart_timestamp\x18\x03 \x01(\t\x12\x15\n\rend_timestamp\x18\x04 \x01(\t\x12\x1b\n\x13is_playback_enabled\x18\x05 \x01(\x08\x12\x16\n\x0eplayback_speed\x18\x06 \x01(\x05\x12I\n\x12recording_metadata\x18\x07 \x03(\x0b\x32-.seigr.StreamRecording.RecordingMetadataEntry\x1a\x38\n\x16RecordingMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xa1\x02\n\rStreamControl\x12\x11\n\tstream_id\x18\x01 \x01(\t\x12\r\n\x05pause\x18\x02 \x01(\x08\x12\x0e\n\x06resume\x18\x03 \x01(\x08\x12\x11\n\tterminate\x18\x04 \x01(\x08\x12\x1a\n\x12update_buffer_size\x18\x05 \x01(\x05\x12\x32\n\x10update_qos_level\x18\x06 \x01(\x0e\x32\x18.seigr.StreamingQoSLevel\x12\x43\n\x10\x63ontrol_metadata\x18\x07 \x03(\x0b\x32).seigr.StreamControl.ControlMetadataEntry\x1a\x36\n\x14\x43ontrolMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xd0\x01\n\x0eStreamEventLog\x12\x10\n\x08\x65vent_id\x18\x01 \x01(\t\x12\x11\n\tstream_id\x18\x02 \x01(\t\x12\x0e\n\x06\x61\x63tion\x18\x03 \x01(\t\x12\x11\n\ttimestamp\x18\x04 \x01(\t\x12@\n\x0e\x65vent_metadata\x18\x05 \x03(\x0b\x32(.seigr.StreamEventLog.EventMetadataEntry\x1a\x34\n\x12\x45ventMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xd8\x02\n\x14StreamMetricsSummary\x12\x11\n\tstream_id\x18\x01 \x01(\t\x12\x1a\n\x12total_packets_sent\x18\x02 \x01(\x03\x12\x1e\n\x16total_packets_received\x18\x03 \x01(\x03\x12\x1d\n\x15total_packets_dropped\x18\x04 \x01(\x03\x12\x1a\n\x12\x61verage_latency_ms\x18\x05 \x01(\x01\x12\x18\n\x10packet_loss_rate\x18\x06 \x01(\x01\x12\x18\n\x10reporting_period\x18\x07 \x01(\t\x12J\n\x10metrics_metadata\x18\x08 \x03(\x0b\x32\x30.seigr.StreamMetricsSummary.MetricsMetadataEntry\x1a\x36\n\x14MetricsMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01*\xc6\x01\n\nStreamType\x12\x19\n\x15STREAM_TYPE_UNDEFINED\x10\x00\x12\x1b\n\x17STREAM_TYPE_SENSOR_DATA\x10\x01\x12\"\n\x1eSTREAM_TYPE_REALTIME_ANALYTICS\x10\x02\x12\x1a\n\x16STREAM_TYPE_EVENT_FEED\x10\x03\x12\x1d\n\x19STREAM_TYPE_USER_ACTIVITY\x10\x04\x12!\n\x1dSTREAM_TYPE_SYSTEM_MONITORING\x10\x05*\xa0\x01\n\x11StreamingProtocol\x12\x1d\n\x19STREAM_PROTOCOL_UNDEFINED\x10\x00\x12\x1d\n\x19STREAM_PROTOCOL_WEBSOCKET\x10\x01\x12\x18\n\x14STREAM_PROTOCOL_GRPC\x10\x02\x12\x18\n\x14STREAM_PROTOCOL_MQTT\x10\x03\x12\x19\n\x15STREAM_PROTOCOL_HTTP2\x10\x04*\xa4\x01\n\x11StreamingQoSLevel\x12\x1e\n\x1aSTREAM_QOS_LEVEL_UNDEFINED\x10\x00\x12\x18\n\x14STREAM_QOS_LEVEL_LOW\x10\x01\x12\x1b\n\x17STREAM_QOS_LEVEL_MEDIUM\x10\x02\x12\x19\n\x15STREAM_QOS_LEVEL_HIGH\x10\x03\x12\x1d\n\x19STREAM_QOS_LEVEL_CRITICAL\x10\x04\x62\x06proto3')
   |
29 | 
30 | _globals = globals()
   |

src/seigr_protocol/compiled/temporal_pb2.py:7:1: I001 [*] Import block is un-sorted or un-formatted
   |
 5 |   # Protobuf Python Version: 5.29.2
 6 |   """Generated protocol buffer code."""
 7 | / from google.protobuf import descriptor as _descriptor
 8 | | from google.protobuf import descriptor_pool as _descriptor_pool
 9 | | from google.protobuf import runtime_version as _runtime_version
10 | | from google.protobuf import symbol_database as _symbol_database
11 | | from google.protobuf.internal import builder as _builder
12 | | _runtime_version.ValidateProtobufRuntimeVersion(
   | |_^ I001
13 |       _runtime_version.Domain.PUBLIC,
14 |       5,
   |
   = help: Organize imports

src/seigr_protocol/compiled/temporal_pb2.py:25:1: E402 Module level import not at top of file
   |
25 | import file_metadata_pb2 as file__metadata__pb2
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E402
   |

src/seigr_protocol/compiled/temporal_pb2.py:25:1: I001 [*] Import block is un-sorted or un-formatted
   |
25 | / import file_metadata_pb2 as file__metadata__pb2
26 | | 
27 | | 
28 | | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0etemporal.proto\x12\x05seigr\x1a\x13\x66ile_metadata.proto\"\xa9\x02\n\x0fTemporalHistory\x12\x12\n\nhistory_id\x18\x01 \x01(\t\x12-\n\x0ftemporal_layers\x18\x02 \x03(\x0b\x32\x14.seigr.TemporalLayer\x12\x12\n\ncreated_by\x18\x03 \x01(\t\x12\x12\n\ncreated_at\x18\x04 \x01(\t\x12\x18\n\x10last_modified_at\x18\x05 \x01(\t\x12\x36\n\x08metadata\x18\x06 \x03(\x0b\x32$.seigr.TemporalHistory.MetadataEntry\x12\x15\n\rversion_count\x18\x07 \x01(\x05\x12\x11\n\tis_active\x18\x08 \x01(\x08\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xcd\x02\n\x0fLineageTracking\x12\x12\n\nlineage_id\x18\x01 \x01(\t\x12\x17\n\x0f\x61ncestor_hashes\x18\x02 \x03(\t\x12\x19\n\x11\x64\x65scendant_hashes\x18\x03 \x03(\t\x12\x19\n\x11original_creation\x18\x04 \x01(\t\x12\x45\n\x10lineage_metadata\x18\x05 \x03(\x0b\x32+.seigr.LineageTracking.LineageMetadataEntry\x12\x17\n\x0fintegrity_check\x18\x06 \x01(\t\x12\x10\n\x08\x61rchived\x18\x07 \x01(\x08\x12\x17\n\x0f\x65volution_depth\x18\x08 \x01(\x05\x12\x14\n\x0clineage_type\x18\t \x01(\t\x1a\x36\n\x14LineageMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xa6\x02\n\x17TemporalSnapshotRequest\x12\x12\n\nrequest_id\x18\x01 \x01(\t\x12\x12\n\nsegment_id\x18\x02 \x01(\t\x12\x18\n\x10target_timestamp\x18\x03 \x01(\t\x12\x13\n\x0b\x65xact_match\x18\x04 \x01(\x08\x12\x14\n\x0crequested_by\x18\x05 \x01(\t\x12M\n\x10request_metadata\x18\x06 \x03(\x0b\x32\x33.seigr.TemporalSnapshotRequest.RequestMetadataEntry\x12\x17\n\x0frequest_purpose\x18\x07 \x01(\t\x1a\x36\n\x14RequestMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xe4\x02\n\x18TemporalSnapshotResponse\x12\x12\n\nrequest_id\x18\x01 \x01(\t\x12,\n\x0esnapshot_layer\x18\x02 \x01(\x0b\x32\x14.seigr.TemporalLayer\x12\x0f\n\x07success\x18\x03 \x01(\x08\x12\x15\n\rerror_message\x18\x04 \x01(\t\x12P\n\x11response_metadata\x18\x05 \x03(\x0b\x32\x35.seigr.TemporalSnapshotResponse.ResponseMetadataEntry\x12\x1b\n\x13retrieved_timestamp\x18\x06 \x01(\t\x12\x1d\n\x15retrieval_duration_ms\x18\x07 \x01(\x03\x12\x17\n\x0fsnapshot_source\x18\x08 \x01(\t\x1a\x37\n\x15ResponseMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x90\x02\n\x14TemporalMergeRequest\x12\x10\n\x08merge_id\x18\x01 \x01(\t\x12\x11\n\tlayer_ids\x18\x02 \x03(\t\x12\x11\n\ttarget_id\x18\x03 \x01(\t\x12\x14\n\x0cinitiated_by\x18\x04 \x01(\t\x12\x12\n\nmerge_type\x18\x05 \x01(\t\x12\x46\n\x0emerge_metadata\x18\x06 \x03(\x0b\x32..seigr.TemporalMergeRequest.MergeMetadataEntry\x12\x18\n\x10retain_originals\x18\x07 \x01(\x08\x1a\x34\n\x12MergeMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x8d\x02\n\x15TemporalMergeResponse\x12\x10\n\x08merge_id\x18\x01 \x01(\t\x12\x0f\n\x07success\x18\x02 \x01(\x08\x12\x17\n\x0fmerged_layer_id\x18\x03 \x01(\t\x12\x15\n\rerror_message\x18\x04 \x01(\t\x12M\n\x11response_metadata\x18\x05 \x03(\x0b\x32\x32.seigr.TemporalMergeResponse.ResponseMetadataEntry\x12\x19\n\x11merge_duration_ms\x18\x06 \x01(\x03\x1a\x37\n\x15ResponseMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xf9\x02\n\x0eTemporalPolicy\x12\x11\n\tpolicy_id\x18\x01 \x01(\t\x12\x13\n\x0bpolicy_name\x18\x02 \x01(\t\x12\x1f\n\x17retention_duration_days\x18\x03 \x01(\x05\x12 \n\x18\x65nable_automatic_merging\x18\x04 \x01(\x08\x12\x1c\n\x14merge_frequency_days\x18\x05 \x01(\x05\x12 \n\x18\x65nable_snapshot_deletion\x18\x06 \x01(\x08\x12\x19\n\x11\x64\x65letion_criteria\x18\x07 \x01(\t\x12\x42\n\x0fpolicy_metadata\x18\x08 \x03(\x0b\x32).seigr.TemporalPolicy.PolicyMetadataEntry\x12\x12\n\ncreated_by\x18\t \x01(\t\x12\x12\n\ncreated_at\x18\n \x01(\t\x1a\x35\n\x13PolicyMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x62\x06proto3')
   | |_^ I001
29 |   
30 |   _globals = globals()
   |
   = help: Organize imports

src/seigr_protocol/compiled/temporal_pb2.py:25:29: F401 [*] `file_metadata_pb2` imported but unused
   |
25 | import file_metadata_pb2 as file__metadata__pb2
   |                             ^^^^^^^^^^^^^^^^^^^ F401
   |
   = help: Remove unused import: `file_metadata_pb2`

src/seigr_protocol/compiled/temporal_pb2.py:28:101: E501 Line too long (3986 > 100)
   |
28 | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0etemporal.proto\x12\x05seigr\x1a\x13\x66ile_metadata.proto\"\xa9\x02\n\x0fTemporalHistory\x12\x12\n\nhistory_id\x18\x01 \x01(\t\x12-\n\x0ftemporal_layers\x18\x02 \x03(\x0b\x32\x14.seigr.TemporalLayer\x12\x12\n\ncreated_by\x18\x03 \x01(\t\x12\x12\n\ncreated_at\x18\x04 \x01(\t\x12\x18\n\x10last_modified_at\x18\x05 \x01(\t\x12\x36\n\x08metadata\x18\x06 \x03(\x0b\x32$.seigr.TemporalHistory.MetadataEntry\x12\x15\n\rversion_count\x18\x07 \x01(\x05\x12\x11\n\tis_active\x18\x08 \x01(\x08\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xcd\x02\n\x0fLineageTracking\x12\x12\n\nlineage_id\x18\x01 \x01(\t\x12\x17\n\x0f\x61ncestor_hashes\x18\x02 \x03(\t\x12\x19\n\x11\x64\x65scendant_hashes\x18\x03 \x03(\t\x12\x19\n\x11original_creation\x18\x04 \x01(\t\x12\x45\n\x10lineage_metadata\x18\x05 \x03(\x0b\x32+.seigr.LineageTracking.LineageMetadataEntry\x12\x17\n\x0fintegrity_check\x18\x06 \x01(\t\x12\x10\n\x08\x61rchived\x18\x07 \x01(\x08\x12\x17\n\x0f\x65volution_depth\x18\x08 \x01(\x05\x12\x14\n\x0clineage_type\x18\t \x01(\t\x1a\x36\n\x14LineageMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xa6\x02\n\x17TemporalSnapshotRequest\x12\x12\n\nrequest_id\x18\x01 \x01(\t\x12\x12\n\nsegment_id\x18\x02 \x01(\t\x12\x18\n\x10target_timestamp\x18\x03 \x01(\t\x12\x13\n\x0b\x65xact_match\x18\x04 \x01(\x08\x12\x14\n\x0crequested_by\x18\x05 \x01(\t\x12M\n\x10request_metadata\x18\x06 \x03(\x0b\x32\x33.seigr.TemporalSnapshotRequest.RequestMetadataEntry\x12\x17\n\x0frequest_purpose\x18\x07 \x01(\t\x1a\x36\n\x14RequestMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xe4\x02\n\x18TemporalSnapshotResponse\x12\x12\n\nrequest_id\x18\x01 \x01(\t\x12,\n\x0esnapshot_layer\x18\x02 \x01(\x0b\x32\x14.seigr.TemporalLayer\x12\x0f\n\x07success\x18\x03 \x01(\x08\x12\x15\n\rerror_message\x18\x04 \x01(\t\x12P\n\x11response_metadata\x18\x05 \x03(\x0b\x32\x35.seigr.TemporalSnapshotResponse.ResponseMetadataEntry\x12\x1b\n\x13retrieved_timestamp\x18\x06 \x01(\t\x12\x1d\n\x15retrieval_duration_ms\x18\x07 \x01(\x03\x12\x17\n\x0fsnapshot_source\x18\x08 \x01(\t\x1a\x37\n\x15ResponseMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x90\x02\n\x14TemporalMergeRequest\x12\x10\n\x08merge_id\x18\x01 \x01(\t\x12\x11\n\tlayer_ids\x18\x02 \x03(\t\x12\x11\n\ttarget_id\x18\x03 \x01(\t\x12\x14\n\x0cinitiated_by\x18\x04 \x01(\t\x12\x12\n\nmerge_type\x18\x05 \x01(\t\x12\x46\n\x0emerge_metadata\x18\x06 \x03(\x0b\x32..seigr.TemporalMergeRequest.MergeMetadataEntry\x12\x18\n\x10retain_originals\x18\x07 \x01(\x08\x1a\x34\n\x12MergeMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x8d\x02\n\x15TemporalMergeResponse\x12\x10\n\x08merge_id\x18\x01 \x01(\t\x12\x0f\n\x07success\x18\x02 \x01(\x08\x12\x17\n\x0fmerged_layer_id\x18\x03 \x01(\t\x12\x15\n\rerror_message\x18\x04 \x01(\t\x12M\n\x11response_metadata\x18\x05 \x03(\x0b\x32\x32.seigr.TemporalMergeResponse.ResponseMetadataEntry\x12\x19\n\x11merge_duration_ms\x18\x06 \x01(\x03\x1a\x37\n\x15ResponseMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xf9\x02\n\x0eTemporalPolicy\x12\x11\n\tpolicy_id\x18\x01 \x01(\t\x12\x13\n\x0bpolicy_name\x18\x02 \x01(\t\x12\x1f\n\x17retention_duration_days\x18\x03 \x01(\x05\x12 \n\x18\x65nable_automatic_merging\x18\x04 \x01(\x08\x12\x1c\n\x14merge_frequency_days\x18\x05 \x01(\x05\x12 \n\x18\x65nable_snapshot_deletion\x18\x06 \x01(\x08\x12\x19\n\x11\x64\x65letion_criteria\x18\x07 \x01(\t\x12\x42\n\x0fpolicy_metadata\x18\x08 \x03(\x0b\x32).seigr.TemporalPolicy.PolicyMetadataEntry\x12\x12\n\ncreated_by\x18\t \x01(\t\x12\x12\n\ncreated_at\x18\n \x01(\t\x1a\x35\n\x13PolicyMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x62\x06proto3')
   |
29 | 
30 | _globals = globals()
   |

src/seigr_protocol/compiled/treasury_management_pb2.py:7:1: I001 [*] Import block is un-sorted or un-formatted
   |
 5 |   # Protobuf Python Version: 5.29.2
 6 |   """Generated protocol buffer code."""
 7 | / from google.protobuf import descriptor as _descriptor
 8 | | from google.protobuf import descriptor_pool as _descriptor_pool
 9 | | from google.protobuf import runtime_version as _runtime_version
10 | | from google.protobuf import symbol_database as _symbol_database
11 | | from google.protobuf.internal import builder as _builder
12 | | _runtime_version.ValidateProtobufRuntimeVersion(
   | |_^ I001
13 |       _runtime_version.Domain.PUBLIC,
14 |       5,
   |
   = help: Organize imports

src/seigr_protocol/compiled/treasury_management_pb2.py:25:1: E402 Module level import not at top of file
   |
25 | import mycelith_voting_pb2 as mycelith__voting__pb2
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E402
   |

src/seigr_protocol/compiled/treasury_management_pb2.py:25:1: I001 [*] Import block is un-sorted or un-formatted
   |
25 | / import mycelith_voting_pb2 as mycelith__voting__pb2
26 | | 
27 | | 
28 | | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x19treasury_management.proto\x12\x05seigr\x1a\x15mycelith_voting.proto\"\xa4\x02\n\x0cTreasuryPool\x12\x0f\n\x07pool_id\x18\x01 \x01(\t\x12\x0f\n\x07purpose\x18\x02 \x01(\t\x12\x0f\n\x07\x62\x61lance\x18\x03 \x01(\x04\x12\x36\n\x13\x64istribution_policy\x18\x04 \x01(\x0e\x32\x19.seigr.DistributionPolicy\x12\x12\n\ncreated_at\x18\x05 \x01(\t\x12\x33\n\x08metadata\x18\x06 \x03(\x0b\x32!.seigr.TreasuryPool.MetadataEntry\x12\x17\n\x0f\x61llocated_funds\x18\x07 \x01(\x04\x12\x16\n\x0ereserved_funds\x18\x08 \x01(\x04\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x84\x03\n\x0e\x46undingRequest\x12\x12\n\nrequest_id\x18\x01 \x01(\t\x12\x0f\n\x07purpose\x18\x02 \x01(\t\x12\x18\n\x10requested_amount\x18\x03 \x01(\x04\x12,\n\x0e\x66unding_status\x18\x04 \x01(\x0e\x32\x14.seigr.FundingStatus\x12)\n\rvoting_layers\x18\x05 \x03(\x0b\x32\x12.seigr.VotingLayer\x12\x14\n\x0crequester_id\x18\x06 \x01(\t\x12\x11\n\ttimestamp\x18\x07 \x01(\t\x12\x14\n\x0clast_updated\x18\x08 \x01(\t\x12\x35\n\x08metadata\x18\t \x03(\x0b\x32#.seigr.FundingRequest.MetadataEntry\x12\x17\n\x0f\x61pproved_amount\x18\n \x01(\x04\x12\x1a\n\x12\x61pproval_timestamp\x18\x0b \x01(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"[\n\x18\x46undingSubmissionRequest\x12\x0f\n\x07purpose\x18\x01 \x01(\t\x12\x18\n\x10requested_amount\x18\x02 \x01(\x04\x12\x14\n\x0crequester_id\x18\x03 \x01(\t\"Q\n\x19\x46undingSubmissionResponse\x12\x12\n\nrequest_id\x18\x01 \x01(\t\x12\x0f\n\x07success\x18\x02 \x01(\x08\x12\x0f\n\x07message\x18\x03 \x01(\t\"a\n\x16\x46undingApprovalRequest\x12\x12\n\nrequest_id\x18\x01 \x01(\t\x12\x10\n\x08voter_id\x18\x02 \x01(\t\x12!\n\x06\x63hoice\x18\x03 \x01(\x0e\x32\x11.seigr.VoteChoice\";\n\x17\x46undingApprovalResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x0f\n\x07message\x18\x02 \x01(\t\"k\n\x14TransferFundsRequest\x12\x0f\n\x07pool_id\x18\x01 \x01(\t\x12\x0e\n\x06\x61mount\x18\x02 \x01(\x04\x12\x19\n\x11recipient_address\x18\x03 \x01(\t\x12\x17\n\x0ftransfer_reason\x18\x04 \x01(\t\"9\n\x15TransferFundsResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x0f\n\x07message\x18\x02 \x01(\t\"R\n\x18GetFundingHistoryRequest\x12\x0f\n\x07pool_id\x18\x01 \x01(\t\x12\r\n\x05limit\x18\x02 \x01(\r\x12\x16\n\x0einclude_denied\x18\x03 \x01(\x08\"u\n\x19GetFundingHistoryResponse\x12\x0f\n\x07pool_id\x18\x01 \x01(\t\x12/\n\x10\x66unding_requests\x18\x02 \x03(\x0b\x32\x15.seigr.FundingRequest\x12\x16\n\x0etotal_requests\x18\x03 \x01(\r\"u\n\x1fUpdateDistributionPolicyRequest\x12\x0f\n\x07pool_id\x18\x01 \x01(\t\x12-\n\nnew_policy\x18\x02 \x01(\x0e\x32\x19.seigr.DistributionPolicy\x12\x12\n\nupdated_by\x18\x03 \x01(\t\"w\n UpdateDistributionPolicyResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x0f\n\x07message\x18\x02 \x01(\t\x12\x31\n\x0e\x61pplied_policy\x18\x03 \x01(\x0e\x32\x19.seigr.DistributionPolicy*\x93\x01\n\x12\x44istributionPolicy\x12(\n$DISTRIBUTION_POLICY_FIXED_ALLOCATION\x10\x00\x12(\n$DISTRIBUTION_POLICY_PERCENTAGE_BASED\x10\x01\x12)\n%DISTRIBUTION_POLICY_VOTING_DETERMINED\x10\x02*\xab\x01\n\rFundingStatus\x12\x1a\n\x16\x46UNDING_STATUS_PENDING\x10\x00\x12\x1b\n\x17\x46UNDING_STATUS_APPROVED\x10\x01\x12\x19\n\x15\x46UNDING_STATUS_DENIED\x10\x02\x12%\n!FUNDING_STATUS_PARTIALLY_APPROVED\x10\x03\x12\x1f\n\x1b\x46UNDING_STATUS_UNDER_REVIEW\x10\x04\x32\xe0\x03\n\x19TreasuryManagementService\x12Y\n\x14SubmitFundingRequest\x12\x1f.seigr.FundingSubmissionRequest\x1a .seigr.FundingSubmissionResponse\x12W\n\x16ProcessFundingApproval\x12\x1d.seigr.FundingApprovalRequest\x1a\x1e.seigr.FundingApprovalResponse\x12J\n\rTransferFunds\x12\x1b.seigr.TransferFundsRequest\x1a\x1c.seigr.TransferFundsResponse\x12V\n\x11GetFundingHistory\x12\x1f.seigr.GetFundingHistoryRequest\x1a .seigr.GetFundingHistoryResponse\x12k\n\x18UpdateDistributionPolicy\x12&.seigr.UpdateDistributionPolicyRequest\x1a\'.seigr.UpdateDistributionPolicyResponseb\x06proto3')
   | |_^ I001
29 |   
30 |   _globals = globals()
   |
   = help: Organize imports

src/seigr_protocol/compiled/treasury_management_pb2.py:25:31: F401 [*] `mycelith_voting_pb2` imported but unused
   |
25 | import mycelith_voting_pb2 as mycelith__voting__pb2
   |                               ^^^^^^^^^^^^^^^^^^^^^ F401
   |
   = help: Remove unused import: `mycelith_voting_pb2`

src/seigr_protocol/compiled/treasury_management_pb2.py:28:101: E501 Line too long (4052 > 100)
   |
28 | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x19treasury_management.proto\x12\x05seigr\x1a\x15mycelith_voting.proto\"\xa4\x02\n\x0cTreasuryPool\x12\x0f\n\x07pool_id\x18\x01 \x01(\t\x12\x0f\n\x07purpose\x18\x02 \x01(\t\x12\x0f\n\x07\x62\x61lance\x18\x03 \x01(\x04\x12\x36\n\x13\x64istribution_policy\x18\x04 \x01(\x0e\x32\x19.seigr.DistributionPolicy\x12\x12\n\ncreated_at\x18\x05 \x01(\t\x12\x33\n\x08metadata\x18\x06 \x03(\x0b\x32!.seigr.TreasuryPool.MetadataEntry\x12\x17\n\x0f\x61llocated_funds\x18\x07 \x01(\x04\x12\x16\n\x0ereserved_funds\x18\x08 \x01(\x04\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x84\x03\n\x0e\x46undingRequest\x12\x12\n\nrequest_id\x18\x01 \x01(\t\x12\x0f\n\x07purpose\x18\x02 \x01(\t\x12\x18\n\x10requested_amount\x18\x03 \x01(\x04\x12,\n\x0e\x66unding_status\x18\x04 \x01(\x0e\x32\x14.seigr.FundingStatus\x12)\n\rvoting_layers\x18\x05 \x03(\x0b\x32\x12.seigr.VotingLayer\x12\x14\n\x0crequester_id\x18\x06 \x01(\t\x12\x11\n\ttimestamp\x18\x07 \x01(\t\x12\x14\n\x0clast_updated\x18\x08 \x01(\t\x12\x35\n\x08metadata\x18\t \x03(\x0b\x32#.seigr.FundingRequest.MetadataEntry\x12\x17\n\x0f\x61pproved_amount\x18\n \x01(\x04\x12\x1a\n\x12\x61pproval_timestamp\x18\x0b \x01(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"[\n\x18\x46undingSubmissionRequest\x12\x0f\n\x07purpose\x18\x01 \x01(\t\x12\x18\n\x10requested_amount\x18\x02 \x01(\x04\x12\x14\n\x0crequester_id\x18\x03 \x01(\t\"Q\n\x19\x46undingSubmissionResponse\x12\x12\n\nrequest_id\x18\x01 \x01(\t\x12\x0f\n\x07success\x18\x02 \x01(\x08\x12\x0f\n\x07message\x18\x03 \x01(\t\"a\n\x16\x46undingApprovalRequest\x12\x12\n\nrequest_id\x18\x01 \x01(\t\x12\x10\n\x08voter_id\x18\x02 \x01(\t\x12!\n\x06\x63hoice\x18\x03 \x01(\x0e\x32\x11.seigr.VoteChoice\";\n\x17\x46undingApprovalResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x0f\n\x07message\x18\x02 \x01(\t\"k\n\x14TransferFundsRequest\x12\x0f\n\x07pool_id\x18\x01 \x01(\t\x12\x0e\n\x06\x61mount\x18\x02 \x01(\x04\x12\x19\n\x11recipient_address\x18\x03 \x01(\t\x12\x17\n\x0ftransfer_reason\x18\x04 \x01(\t\"9\n\x15TransferFundsResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x0f\n\x07message\x18\x02 \x01(\t\"R\n\x18GetFundingHistoryRequest\x12\x0f\n\x07pool_id\x18\x01 \x01(\t\x12\r\n\x05limit\x18\x02 \x01(\r\x12\x16\n\x0einclude_denied\x18\x03 \x01(\x08\"u\n\x19GetFundingHistoryResponse\x12\x0f\n\x07pool_id\x18\x01 \x01(\t\x12/\n\x10\x66unding_requests\x18\x02 \x03(\x0b\x32\x15.seigr.FundingRequest\x12\x16\n\x0etotal_requests\x18\x03 \x01(\r\"u\n\x1fUpdateDistributionPolicyRequest\x12\x0f\n\x07pool_id\x18\x01 \x01(\t\x12-\n\nnew_policy\x18\x02 \x01(\x0e\x32\x19.seigr.DistributionPolicy\x12\x12\n\nupdated_by\x18\x03 \x01(\t\"w\n UpdateDistributionPolicyResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x0f\n\x07message\x18\x02 \x01(\t\x12\x31\n\x0e\x61pplied_policy\x18\x03 \x01(\x0e\x32\x19.seigr.DistributionPolicy*\x93\x01\n\x12\x44istributionPolicy\x12(\n$DISTRIBUTION_POLICY_FIXED_ALLOCATION\x10\x00\x12(\n$DISTRIBUTION_POLICY_PERCENTAGE_BASED\x10\x01\x12)\n%DISTRIBUTION_POLICY_VOTING_DETERMINED\x10\x02*\xab\x01\n\rFundingStatus\x12\x1a\n\x16\x46UNDING_STATUS_PENDING\x10\x00\x12\x1b\n\x17\x46UNDING_STATUS_APPROVED\x10\x01\x12\x19\n\x15\x46UNDING_STATUS_DENIED\x10\x02\x12%\n!FUNDING_STATUS_PARTIALLY_APPROVED\x10\x03\x12\x1f\n\x1b\x46UNDING_STATUS_UNDER_REVIEW\x10\x04\x32\xe0\x03\n\x19TreasuryManagementService\x12Y\n\x14SubmitFundingRequest\x12\x1f.seigr.FundingSubmissionRequest\x1a .seigr.FundingSubmissionResponse\x12W\n\x16ProcessFundingApproval\x12\x1d.seigr.FundingApprovalRequest\x1a\x1e.seigr.FundingApprovalResponse\x12J\n\rTransferFunds\x12\x1b.seigr.TransferFundsRequest\x1a\x1c.seigr.TransferFundsResponse\x12V\n\x11GetFundingHistory\x12\x1f.seigr.GetFundingHistoryRequest\x1a .seigr.GetFundingHistoryResponse\x12k\n\x18UpdateDistributionPolicy\x12&.seigr.UpdateDistributionPolicyRequest\x1a\'.seigr.UpdateDistributionPolicyResponseb\x06proto3')
   |
29 | 
30 | _globals = globals()
   |

src/seigr_protocol/compiled/user_management_pb2.py:7:1: I001 [*] Import block is un-sorted or un-formatted
   |
 5 |   # Protobuf Python Version: 5.29.2
 6 |   """Generated protocol buffer code."""
 7 | / from google.protobuf import descriptor as _descriptor
 8 | | from google.protobuf import descriptor_pool as _descriptor_pool
 9 | | from google.protobuf import runtime_version as _runtime_version
10 | | from google.protobuf import symbol_database as _symbol_database
11 | | from google.protobuf.internal import builder as _builder
12 | | _runtime_version.ValidateProtobufRuntimeVersion(
   | |_^ I001
13 |       _runtime_version.Domain.PUBLIC,
14 |       5,
   |
   = help: Organize imports

src/seigr_protocol/compiled/user_management_pb2.py:25:1: E402 Module level import not at top of file
   |
25 | import access_control_pb2 as access__control__pb2
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E402
   |

src/seigr_protocol/compiled/user_management_pb2.py:25:1: I001 [*] Import block is un-sorted or un-formatted
   |
25 | / import access_control_pb2 as access__control__pb2
26 | | 
27 | | 
28 | | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x15user_management.proto\x12\x05seigr\x1a\x14\x61\x63\x63\x65ss_control.proto\"\xbb\x04\n\x0bUserProfile\x12\x0f\n\x07user_id\x18\x01 \x01(\t\x12\x10\n\x08username\x18\x02 \x01(\t\x12\r\n\x05\x65mail\x18\x03 \x01(\t\x12\x1e\n\x05roles\x18\x04 \x03(\x0e\x32\x0f.seigr.RoleType\x12,\n\x0e\x61\x63\x63ount_status\x18\x05 \x01(\x0e\x32\x14.seigr.AccountStatus\x12\x30\n\x0b\x61uth_method\x18\x06 \x01(\x0e\x32\x1b.seigr.AuthenticationMethod\x12\x12\n\ncreated_at\x18\x07 \x01(\t\x12\x12\n\nlast_login\x18\x08 \x01(\t\x12\x41\n\x10profile_metadata\x18\t \x03(\x0b\x32\'.seigr.UserProfile.ProfileMetadataEntry\x12;\n\rsecurity_keys\x18\n \x03(\x0b\x32$.seigr.UserProfile.SecurityKeysEntry\x12\x1e\n\x16\x61\x63\x63ount_recovery_email\x18\x0b \x01(\t\x12\x14\n\x0cphone_number\x18\x0c \x01(\t\x12\x19\n\x11profile_image_url\x18\r \x01(\t\x12\x14\n\x0c\x64isplay_name\x18\x0e \x01(\t\x1a\x36\n\x14ProfileMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x33\n\x11SecurityKeysEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x0c:\x02\x38\x01\"\x9f\x03\n\x0fUserPermissions\x12\x0f\n\x07user_id\x18\x01 \x01(\t\x12*\n\x0bpermissions\x18\x02 \x03(\x0e\x32\x15.seigr.PermissionType\x12\x34\n\x07\x63ontext\x18\x03 \x03(\x0b\x32#.seigr.UserPermissions.ContextEntry\x12\x0e\n\x06\x65xpiry\x18\x04 \x01(\t\x12\x19\n\x11is_admin_override\x18\x05 \x01(\x08\x12O\n\x15resource_restrictions\x18\x06 \x03(\x0b\x32\x30.seigr.UserPermissions.ResourceRestrictionsEntry\x12\x1a\n\x12\x61uthorized_devices\x18\x07 \x03(\t\x12\x14\n\x0c\x61\x63\x63\x65ss_zones\x18\x08 \x03(\t\x1a.\n\x0c\x43ontextEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a;\n\x19ResourceRestrictionsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x08:\x02\x38\x01\"\x9f\x02\n\rUserAccessLog\x12\x0e\n\x06log_id\x18\x01 \x01(\t\x12\x0f\n\x07user_id\x18\x02 \x01(\t\x12\x0e\n\x06\x61\x63tion\x18\x03 \x01(\t\x12\x11\n\ttimestamp\x18\x04 \x01(\t\x12\x13\n\x0bresource_id\x18\x05 \x01(\t\x12\x0f\n\x07success\x18\x06 \x01(\x08\x12\x34\n\x08metadata\x18\x07 \x03(\x0b\x32\".seigr.UserAccessLog.MetadataEntry\x12\x11\n\tdevice_id\x18\x08 \x01(\t\x12\x12\n\nsession_id\x18\t \x01(\t\x12\x16\n\x0e\x66\x61ilure_reason\x18\n \x01(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x8d\x04\n\x0fUserPreferences\x12\x0f\n\x07user_id\x18\x01 \x01(\t\x12\x31\n\x0c\x61uth_methods\x18\x02 \x03(\x0e\x32\x1b.seigr.AuthenticationMethod\x12\x1a\n\x12two_factor_enabled\x18\x03 \x01(\x08\x12\x1a\n\x12preferred_language\x18\x04 \x01(\t\x12\x1d\n\x15receive_notifications\x18\x05 \x01(\x08\x12U\n\x18permission_notifications\x18\x06 \x03(\x0b\x32\x33.seigr.UserPreferences.PermissionNotificationsEntry\x12G\n\x11ui_customizations\x18\x07 \x03(\x0b\x32,.seigr.UserPreferences.UiCustomizationsEntry\x12\x10\n\x08timezone\x18\x08 \x01(\t\x12\x19\n\x11\x64\x61rk_mode_enabled\x18\t \x01(\x08\x12\x19\n\x11\x66\x61vorite_features\x18\n \x03(\t\x1a>\n\x1cPermissionNotificationsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x08:\x02\x38\x01\x1a\x37\n\x15UiCustomizationsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xd8\x02\n\x0eUserManagement\x12$\n\x08profiles\x18\x01 \x03(\x0b\x32\x12.seigr.UserProfile\x12+\n\x0bpermissions\x18\x02 \x03(\x0b\x32\x16.seigr.UserPermissions\x12+\n\x0bpreferences\x18\x03 \x03(\x0b\x32\x16.seigr.UserPreferences\x12)\n\x0b\x61\x63\x63\x65ss_logs\x18\x04 \x03(\x0b\x32\x14.seigr.UserAccessLog\x12\x14\n\x0clast_updated\x18\x05 \x01(\t\x12J\n\x13management_metadata\x18\x06 \x03(\x0b\x32-.seigr.UserManagement.ManagementMetadataEntry\x1a\x39\n\x17ManagementMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01*\xa7\x01\n\rAccountStatus\x12\x1c\n\x18\x41\x43\x43OUNT_STATUS_UNDEFINED\x10\x00\x12\x12\n\x0e\x41\x43\x43OUNT_ACTIVE\x10\x01\x12\x15\n\x11\x41\x43\x43OUNT_SUSPENDED\x10\x02\x12\x17\n\x13\x41\x43\x43OUNT_DEACTIVATED\x10\x03\x12 \n\x1c\x41\x43\x43OUNT_PENDING_VERIFICATION\x10\x04\x12\x12\n\x0e\x41\x43\x43OUNT_LOCKED\x10\x05*\x93\x01\n\x14\x41uthenticationMethod\x12\x12\n\x0e\x41UTH_UNDEFINED\x10\x00\x12\x11\n\rAUTH_PASSWORD\x10\x01\x12\x12\n\x0e\x41UTH_BIOMETRIC\x10\x02\x12\x0c\n\x08\x41UTH_OTP\x10\x03\x12\x0e\n\nAUTH_TOKEN\x10\x04\x12\x14\n\x10\x41UTH_CERTIFICATE\x10\x05\x12\x0c\n\x08\x41UTH_SSO\x10\x06\x62\x06proto3')
   | |_^ I001
29 |   
30 |   _globals = globals()
   |
   = help: Organize imports

src/seigr_protocol/compiled/user_management_pb2.py:25:30: F401 [*] `access_control_pb2` imported but unused
   |
25 | import access_control_pb2 as access__control__pb2
   |                              ^^^^^^^^^^^^^^^^^^^^ F401
   |
   = help: Remove unused import: `access_control_pb2`

src/seigr_protocol/compiled/user_management_pb2.py:28:101: E501 Line too long (4544 > 100)
   |
28 | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x15user_management.proto\x12\x05seigr\x1a\x14\x61\x63\x63\x65ss_control.proto\"\xbb\x04\n\x0bUserProfile\x12\x0f\n\x07user_id\x18\x01 \x01(\t\x12\x10\n\x08username\x18\x02 \x01(\t\x12\r\n\x05\x65mail\x18\x03 \x01(\t\x12\x1e\n\x05roles\x18\x04 \x03(\x0e\x32\x0f.seigr.RoleType\x12,\n\x0e\x61\x63\x63ount_status\x18\x05 \x01(\x0e\x32\x14.seigr.AccountStatus\x12\x30\n\x0b\x61uth_method\x18\x06 \x01(\x0e\x32\x1b.seigr.AuthenticationMethod\x12\x12\n\ncreated_at\x18\x07 \x01(\t\x12\x12\n\nlast_login\x18\x08 \x01(\t\x12\x41\n\x10profile_metadata\x18\t \x03(\x0b\x32\'.seigr.UserProfile.ProfileMetadataEntry\x12;\n\rsecurity_keys\x18\n \x03(\x0b\x32$.seigr.UserProfile.SecurityKeysEntry\x12\x1e\n\x16\x61\x63\x63ount_recovery_email\x18\x0b \x01(\t\x12\x14\n\x0cphone_number\x18\x0c \x01(\t\x12\x19\n\x11profile_image_url\x18\r \x01(\t\x12\x14\n\x0c\x64isplay_name\x18\x0e \x01(\t\x1a\x36\n\x14ProfileMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x33\n\x11SecurityKeysEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x0c:\x02\x38\x01\"\x9f\x03\n\x0fUserPermissions\x12\x0f\n\x07user_id\x18\x01 \x01(\t\x12*\n\x0bpermissions\x18\x02 \x03(\x0e\x32\x15.seigr.PermissionType\x12\x34\n\x07\x63ontext\x18\x03 \x03(\x0b\x32#.seigr.UserPermissions.ContextEntry\x12\x0e\n\x06\x65xpiry\x18\x04 \x01(\t\x12\x19\n\x11is_admin_override\x18\x05 \x01(\x08\x12O\n\x15resource_restrictions\x18\x06 \x03(\x0b\x32\x30.seigr.UserPermissions.ResourceRestrictionsEntry\x12\x1a\n\x12\x61uthorized_devices\x18\x07 \x03(\t\x12\x14\n\x0c\x61\x63\x63\x65ss_zones\x18\x08 \x03(\t\x1a.\n\x0c\x43ontextEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a;\n\x19ResourceRestrictionsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x08:\x02\x38\x01\"\x9f\x02\n\rUserAccessLog\x12\x0e\n\x06log_id\x18\x01 \x01(\t\x12\x0f\n\x07user_id\x18\x02 \x01(\t\x12\x0e\n\x06\x61\x63tion\x18\x03 \x01(\t\x12\x11\n\ttimestamp\x18\x04 \x01(\t\x12\x13\n\x0bresource_id\x18\x05 \x01(\t\x12\x0f\n\x07success\x18\x06 \x01(\x08\x12\x34\n\x08metadata\x18\x07 \x03(\x0b\x32\".seigr.UserAccessLog.MetadataEntry\x12\x11\n\tdevice_id\x18\x08 \x01(\t\x12\x12\n\nsession_id\x18\t \x01(\t\x12\x16\n\x0e\x66\x61ilure_reason\x18\n \x01(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x8d\x04\n\x0fUserPreferences\x12\x0f\n\x07user_id\x18\x01 \x01(\t\x12\x31\n\x0c\x61uth_methods\x18\x02 \x03(\x0e\x32\x1b.seigr.AuthenticationMethod\x12\x1a\n\x12two_factor_enabled\x18\x03 \x01(\x08\x12\x1a\n\x12preferred_language\x18\x04 \x01(\t\x12\x1d\n\x15receive_notifications\x18\x05 \x01(\x08\x12U\n\x18permission_notifications\x18\x06 \x03(\x0b\x32\x33.seigr.UserPreferences.PermissionNotificationsEntry\x12G\n\x11ui_customizations\x18\x07 \x03(\x0b\x32,.seigr.UserPreferences.UiCustomizationsEntry\x12\x10\n\x08timezone\x18\x08 \x01(\t\x12\x19\n\x11\x64\x61rk_mode_enabled\x18\t \x01(\x08\x12\x19\n\x11\x66\x61vorite_features\x18\n \x03(\t\x1a>\n\x1cPermissionNotificationsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x08:\x02\x38\x01\x1a\x37\n\x15UiCustomizationsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xd8\x02\n\x0eUserManagement\x12$\n\x08profiles\x18\x01 \x03(\x0b\x32\x12.seigr.UserProfile\x12+\n\x0bpermissions\x18\x02 \x03(\x0b\x32\x16.seigr.UserPermissions\x12+\n\x0bpreferences\x18\x03 \x03(\x0b\x32\x16.seigr.UserPreferences\x12)\n\x0b\x61\x63\x63\x65ss_logs\x18\x04 \x03(\x0b\x32\x14.seigr.UserAccessLog\x12\x14\n\x0clast_updated\x18\x05 \x01(\t\x12J\n\x13management_metadata\x18\x06 \x03(\x0b\x32-.seigr.UserManagement.ManagementMetadataEntry\x1a\x39\n\x17ManagementMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01*\xa7\x01\n\rAccountStatus\x12\x1c\n\x18\x41\x43\x43OUNT_STATUS_UNDEFINED\x10\x00\x12\x12\n\x0e\x41\x43\x43OUNT_ACTIVE\x10\x01\x12\x15\n\x11\x41\x43\x43OUNT_SUSPENDED\x10\x02\x12\x17\n\x13\x41\x43\x43OUNT_DEACTIVATED\x10\x03\x12 \n\x1c\x41\x43\x43OUNT_PENDING_VERIFICATION\x10\x04\x12\x12\n\x0e\x41\x43\x43OUNT_LOCKED\x10\x05*\x93\x01\n\x14\x41uthenticationMethod\x12\x12\n\x0e\x41UTH_UNDEFINED\x10\x00\x12\x11\n\rAUTH_PASSWORD\x10\x01\x12\x12\n\x0e\x41UTH_BIOMETRIC\x10\x02\x12\x0c\n\x08\x41UTH_OTP\x10\x03\x12\x0e\n\nAUTH_TOKEN\x10\x04\x12\x14\n\x10\x41UTH_CERTIFICATE\x10\x05\x12\x0c\n\x08\x41UTH_SSO\x10\x06\x62\x06proto3')
   |
29 | 
30 | _globals = globals()
   |

src/seigr_protocol/compiled/visualization_pb2.py:7:1: I001 [*] Import block is un-sorted or un-formatted
   |
 5 |   # Protobuf Python Version: 5.29.2
 6 |   """Generated protocol buffer code."""
 7 | / from google.protobuf import descriptor as _descriptor
 8 | | from google.protobuf import descriptor_pool as _descriptor_pool
 9 | | from google.protobuf import runtime_version as _runtime_version
10 | | from google.protobuf import symbol_database as _symbol_database
11 | | from google.protobuf.internal import builder as _builder
12 | | _runtime_version.ValidateProtobufRuntimeVersion(
   | |_^ I001
13 |       _runtime_version.Domain.PUBLIC,
14 |       5,
   |
   = help: Organize imports

src/seigr_protocol/compiled/visualization_pb2.py:27:101: E501 Line too long (6659 > 100)
   |
27 | DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x13visualization.proto\x12\x05seigr\"\xc3\x02\n\x12InteractiveElement\x12\x12\n\nelement_id\x18\x01 \x01(\t\x12\x11\n\twidget_id\x18\x02 \x01(\t\x12\x0c\n\x04type\x18\x03 \x01(\t\x12\x37\n\x07options\x18\x04 \x03(\x0b\x32&.seigr.InteractiveElement.OptionsEntry\x12\x13\n\x0bis_required\x18\x05 \x01(\x08\x12\x44\n\x0e\x62\x65havior_rules\x18\x06 \x03(\x0b\x32,.seigr.InteractiveElement.BehaviorRulesEntry\x1a.\n\x0cOptionsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x34\n\x12\x42\x65haviorRulesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xa3\x04\n\x0cWidgetConfig\x12\x11\n\twidget_id\x18\x01 \x01(\t\x12&\n\x0bwidget_type\x18\x02 \x01(\x0e\x32\x11.seigr.WidgetType\x12\r\n\x05title\x18\x03 \x01(\t\x12$\n\nchart_type\x18\x04 \x01(\x0e\x32\x10.seigr.ChartType\x12\x13\n\x0b\x64\x61ta_source\x18\x05 \x01(\t\x12 \n\x18refresh_interval_seconds\x18\x06 \x01(\x05\x12@\n\x0f\x64isplay_options\x18\x07 \x03(\x0b\x32\'.seigr.WidgetConfig.DisplayOptionsEntry\x12@\n\x0fwidget_metadata\x18\x08 \x03(\x0b\x32\'.seigr.WidgetConfig.WidgetMetadataEntry\x12\x0f\n\x07tooltip\x18\t \x01(\t\x12\x12\n\nfont_style\x18\n \x01(\t\x12\x1c\n\x14\x65nable_interactivity\x18\x0b \x01(\x08\x12\x37\n\x14interactive_elements\x18\x0c \x03(\x0b\x32\x19.seigr.InteractiveElement\x1a\x35\n\x13\x44isplayOptionsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x35\n\x13WidgetMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xc1\x03\n\x0f\x44\x61shboardLayout\x12\x14\n\x0c\x64\x61shboard_id\x18\x01 \x01(\t\x12\x16\n\x0e\x64\x61shboard_name\x18\x02 \x01(\t\x12$\n\x07widgets\x18\x03 \x03(\x0b\x32\x13.seigr.WidgetConfig\x12\x45\n\x10layout_positions\x18\x04 \x03(\x0b\x32+.seigr.DashboardLayout.LayoutPositionsEntry\x12\x12\n\ncreated_by\x18\x05 \x01(\t\x12\x12\n\ncreated_at\x18\x06 \x01(\t\x12I\n\x12\x64\x61shboard_metadata\x18\x07 \x03(\x0b\x32-.seigr.DashboardLayout.DashboardMetadataEntry\x12\x1c\n\x14\x62\x61\x63kground_image_url\x18\x08 \x01(\t\x12\x10\n\x08theme_id\x18\t \x01(\t\x1a\x36\n\x14LayoutPositionsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x05:\x02\x38\x01\x1a\x38\n\x16\x44\x61shboardMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x82\x02\n\x19VisualizationExportConfig\x12\x14\n\x0c\x64\x61shboard_id\x18\x01 \x01(\t\x12#\n\x06\x66ormat\x18\x02 \x01(\x0e\x32\x13.seigr.ExportFormat\x12$\n\x1cinclude_interactive_elements\x18\x03 \x01(\x08\x12M\n\x0f\x65xport_metadata\x18\x04 \x03(\x0b\x32\x34.seigr.VisualizationExportConfig.ExportMetadataEntry\x1a\x35\n\x13\x45xportMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xbd\x02\n\rThemeSettings\x12\x10\n\x08theme_id\x18\x01 \x01(\t\x12\x12\n\ntheme_name\x18\x02 \x01(\t\x12\x15\n\rprimary_color\x18\x03 \x01(\t\x12\x17\n\x0fsecondary_color\x18\x04 \x01(\t\x12\x18\n\x10\x62\x61\x63kground_color\x18\x05 \x01(\t\x12\x13\n\x0b\x66ont_family\x18\x06 \x01(\t\x12\x11\n\tfont_size\x18\x07 \x01(\t\x12\x45\n\x11\x61\x64\x64itional_styles\x18\x08 \x03(\x0b\x32*.seigr.ThemeSettings.AdditionalStylesEntry\x12\x14\n\x0cis_dark_mode\x18\t \x01(\x08\x1a\x37\n\x15\x41\x64\x64itionalStylesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xc6\x02\n\x13VisualizationConfig\x12\x0f\n\x07user_id\x18\x01 \x01(\t\x12\x31\n\x11\x64\x65\x66\x61ult_dashboard\x18\x02 \x01(\x0b\x32\x16.seigr.DashboardLayout\x12,\n\x0etheme_settings\x18\x03 \x01(\x0b\x32\x14.seigr.ThemeSettings\x12 \n\x18\x65nable_real_time_updates\x18\x04 \x01(\x08\x12G\n\x0f\x63onfig_metadata\x18\x05 \x03(\x0b\x32..seigr.VisualizationConfig.ConfigMetadataEntry\x12\x1b\n\x13\x66\x61vorite_dashboards\x18\x06 \x03(\t\x1a\x35\n\x13\x43onfigMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x8c\x02\n\x11VisualizationData\x12\x16\n\x0e\x64\x61ta_source_id\x18\x01 \x01(\t\x12\x11\n\twidget_id\x18\x02 \x01(\t\x12%\n\x0b\x64\x61ta_points\x18\x03 \x03(\x0b\x32\x10.seigr.DataPoint\x12\x11\n\ttimestamp\x18\x04 \x01(\t\x12\x41\n\rdata_metadata\x18\x05 \x03(\x0b\x32*.seigr.VisualizationData.DataMetadataEntry\x12\x1a\n\x12is_historical_data\x18\x06 \x01(\x08\x1a\x33\n\x11\x44\x61taMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xaf\x01\n\tDataPoint\x12\r\n\x05label\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x01\x12\x34\n\nattributes\x18\x03 \x03(\x0b\x32 .seigr.DataPoint.AttributesEntry\x12\r\n\x05\x63olor\x18\x04 \x01(\t\x12\x0c\n\x04icon\x18\x05 \x01(\t\x1a\x31\n\x0f\x41ttributesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x93\x02\n\x17VisualizationUsageStats\x12\x0f\n\x07user_id\x18\x01 \x01(\t\x12\x14\n\x0c\x64\x61shboard_id\x18\x02 \x01(\t\x12\x11\n\twidget_id\x18\x03 \x01(\t\x12\x12\n\nview_count\x18\x04 \x01(\x05\x12\x15\n\rlast_accessed\x18\x05 \x01(\t\x12\x12\n\nsession_id\x18\x06 \x01(\t\x12I\n\x0eusage_metadata\x18\x07 \x03(\x0b\x32\x31.seigr.VisualizationUsageStats.UsageMetadataEntry\x1a\x34\n\x12UsageMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xfd\x01\n\x15VisualizationErrorLog\x12\x10\n\x08\x65rror_id\x18\x01 \x01(\t\x12\x11\n\twidget_id\x18\x02 \x01(\t\x12\x16\n\x0e\x64\x61ta_source_id\x18\x03 \x01(\t\x12\x15\n\rerror_message\x18\x04 \x01(\t\x12\x11\n\ttimestamp\x18\x05 \x01(\t\x12G\n\x0e\x65rror_metadata\x18\x06 \x03(\x0b\x32/.seigr.VisualizationErrorLog.ErrorMetadataEntry\x1a\x34\n\x12\x45rrorMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01*\xc7\x01\n\nWidgetType\x12\x19\n\x15WIDGET_TYPE_UNDEFINED\x10\x00\x12\x15\n\x11WIDGET_TYPE_CHART\x10\x01\x12\x15\n\x11WIDGET_TYPE_TABLE\x10\x02\x12\x13\n\x0fWIDGET_TYPE_MAP\x10\x03\x12\x15\n\x11WIDGET_TYPE_GRAPH\x10\x04\x12\x15\n\x11WIDGET_TYPE_GAUGE\x10\x05\x12\x16\n\x12WIDGET_TYPE_METRIC\x10\x06\x12\x15\n\x11WIDGET_TYPE_TREND\x10\x07*\xa7\x01\n\tChartType\x12\x18\n\x14\x43HART_TYPE_UNDEFINED\x10\x00\x12\x13\n\x0f\x43HART_TYPE_LINE\x10\x01\x12\x12\n\x0e\x43HART_TYPE_BAR\x10\x02\x12\x12\n\x0e\x43HART_TYPE_PIE\x10\x03\x12\x16\n\x12\x43HART_TYPE_SCATTER\x10\x04\x12\x16\n\x12\x43HART_TYPE_HEATMAP\x10\x05\x12\x13\n\x0f\x43HART_TYPE_AREA\x10\x06*p\n\x0c\x45xportFormat\x12\x1b\n\x17\x45XPORT_FORMAT_UNDEFINED\x10\x00\x12\x15\n\x11\x45XPORT_FORMAT_PDF\x10\x01\x12\x15\n\x11\x45XPORT_FORMAT_PNG\x10\x02\x12\x15\n\x11\x45XPORT_FORMAT_CSV\x10\x03\x62\x06proto3')
   |
28 | 
29 | _globals = globals()
   |

Found 543 errors.
[*] 274 fixable with the `--fix` option (21 hidden fixes can be enabled with the `--unsafe-fixes` option).
