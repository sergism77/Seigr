syntax = "proto3";

package seigr.machine_learning;

import "google/protobuf/timestamp.proto"; // For timestamp fields
import "common.proto"; // For seigr.common.Feedback
import "sensor_management.proto";

// ===========================
// GENESIS STATE
// ===========================

/**
 * GenesisState
 * Captures the adaptive and learning state of a .seigr file.
 * Tracks the embedded ML module, routing updates, external events, and feedback mechanisms.
 */
message GenesisState {
    string id = 1;                              // Unique identifier for the .seigr file state.
    repeated seigr.common.RouteUpdate routing_table = 2; // Dynamic routing information.
    MLModule ml_module = 3;                     // Embedded ML module for learning.
    seigr.common.Feedback feedback = 4;         // Feedback integration details.
    repeated HistoryEntry history = 5;          // Traceable lineage entries.
    google.protobuf.Timestamp last_updated = 6; // Timestamp of the last state update.
    repeated ExternalEvent external_events = 7; // External stimuli impacting state.
}

// ===========================
// MACHINE LEARNING MODULE
// ===========================

/**
 * MLModule
 * Defines the embedded machine learning module within a .seigr file.
 * Handles training, inference, and evaluation of the ML model.
 */
message MLModule {
    string model_id = 1;                        // Unique identifier of the ML model.
    string model_type = 2;                      // Type of ML model (e.g., neural network, decision tree, transformer).
    map<string, string> hyperparameters = 3;    // Key-value pairs for hyperparameter tuning.
    repeated string training_data_sources = 4;  // URIs or identifiers for training data.
    google.protobuf.Timestamp last_trained = 5; // Timestamp of the last training session.
    repeated string generated_rules = 6;        // Rules or insights generated by the model.
    EvaluationMetrics evaluation_metrics = 7;   // Metrics to evaluate model performance.
    ModelState model_state = 8;                 // Current state of the model.

    // New Fields
    repeated seigr.sensor_management.SensorData live_inputs = 9; // Real-time sensor data for inference.
    repeated string inference_results = 10;                      // Results of live inferences.
}

// ===========================
// HISTORY ENTRY
// ===========================

/**
 * HistoryEntry
 * Tracks the lineage and evolution of a .seigr file.
 * Captures changes, updates, and their associated metadata.
 */
message HistoryEntry {
    string entry_id = 1;                        // Unique identifier for the history entry.
    string description = 2;                     // Description of the change or update.
    google.protobuf.Timestamp timestamp = 3;    // Timestamp of the change.
    string changed_by = 4;                      // Identifier of the entity that made the change.
    map<string, string> metadata = 5;           // Additional metadata about the change.
}

// ===========================
// SYSTEM SNAPSHOT
// ===========================

/**
 * SystemSnapshot
 * Captures the global state of the Seigr ecosystem.
 * Provides a snapshot of all .seigr files and their current states.
 */
message SystemSnapshot {
    string snapshot_id = 1;                     // Unique identifier for the snapshot.
    repeated GenesisState states = 2;           // Current states of all .seigr files.
    google.protobuf.Timestamp created_at = 3;   // Timestamp of snapshot creation.
    string creator = 4;                         // Identifier of the entity creating the snapshot.
}

// ===========================
// EVALUATION METRICS
// ===========================

/**
 * EvaluationMetrics
 * Captures the performance metrics of the ML model.
 * Includes common metrics like accuracy, precision, recall, and F1 score.
 */
message EvaluationMetrics {
    float accuracy = 1;                         // Accuracy of the model.
    float precision = 2;                        // Precision metric.
    float recall = 3;                           // Recall metric.
    float f1_score = 4;                         // F1 score.
    map<string, float> additional_metrics = 5;  // Additional custom metrics for evaluation.
}

// ===========================
// MODEL STATE ENUMERATION
// ===========================

/**
 * ModelState
 * Defines the current state of the ML model.
 */
enum ModelState {
    ACTIVE = 0;                                 // Model is active and in use.
    DEPRECATED = 1;                             // Model is deprecated and not used.
    TRAINING = 2;                               // Model is currently being trained.
    TESTING = 3;                                // Model is under testing.
    ARCHIVED = 4;                               // Model is archived and stored for reference.
}

// ===========================
// EXTERNAL EVENTS
// ===========================

/**
 * ExternalEvent
 * Captures external stimuli impacting the .seigr file state.
 * Includes sensor data, system alerts, and other environmental factors.
 */
message ExternalEvent {
    string event_id = 1;                        // Unique identifier for the event.
    string type = 2;                            // Type of the event (e.g., "sensor_input").
    string description = 3;                     // Description of the event.
    google.protobuf.Timestamp timestamp = 4;    // Event timestamp.
    repeated seigr.sensor_management.SensorData sensor_data = 5; // Sensor input details associated with the event.
    map<string, string> metadata = 6;           // Additional metadata about the event.
}

