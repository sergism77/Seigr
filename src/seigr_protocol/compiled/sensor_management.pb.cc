// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: sensor_management.proto
// Protobuf C++ Version: 5.29.2

#include "sensor_management.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace seigr {
namespace sensor_management {
              template <typename>
PROTOBUF_CONSTEXPR SensorStatusLog_LogMetadataEntry_DoNotUse::SensorStatusLog_LogMetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : SensorStatusLog_LogMetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : SensorStatusLog_LogMetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SensorStatusLog_LogMetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorStatusLog_LogMetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorStatusLog_LogMetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    SensorStatusLog_LogMetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorStatusLog_LogMetadataEntry_DoNotUseDefaultTypeInternal _SensorStatusLog_LogMetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SensorRegistration_MetadataEntry_DoNotUse::SensorRegistration_MetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : SensorRegistration_MetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : SensorRegistration_MetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SensorRegistration_MetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorRegistration_MetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorRegistration_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    SensorRegistration_MetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorRegistration_MetadataEntry_DoNotUseDefaultTypeInternal _SensorRegistration_MetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SensorPredictiveMaintenance_MaintenanceMetadataEntry_DoNotUse::SensorPredictiveMaintenance_MaintenanceMetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : SensorPredictiveMaintenance_MaintenanceMetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : SensorPredictiveMaintenance_MaintenanceMetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SensorPredictiveMaintenance_MaintenanceMetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorPredictiveMaintenance_MaintenanceMetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorPredictiveMaintenance_MaintenanceMetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    SensorPredictiveMaintenance_MaintenanceMetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorPredictiveMaintenance_MaintenanceMetadataEntry_DoNotUseDefaultTypeInternal _SensorPredictiveMaintenance_MaintenanceMetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SensorNetworkSummary_SummaryMetadataEntry_DoNotUse::SensorNetworkSummary_SummaryMetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : SensorNetworkSummary_SummaryMetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : SensorNetworkSummary_SummaryMetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SensorNetworkSummary_SummaryMetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorNetworkSummary_SummaryMetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorNetworkSummary_SummaryMetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    SensorNetworkSummary_SummaryMetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorNetworkSummary_SummaryMetadataEntry_DoNotUseDefaultTypeInternal _SensorNetworkSummary_SummaryMetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SensorNetworkSummary_SensorCountsByTypeEntry_DoNotUse::SensorNetworkSummary_SensorCountsByTypeEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : SensorNetworkSummary_SensorCountsByTypeEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : SensorNetworkSummary_SensorCountsByTypeEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SensorNetworkSummary_SensorCountsByTypeEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorNetworkSummary_SensorCountsByTypeEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorNetworkSummary_SensorCountsByTypeEntry_DoNotUseDefaultTypeInternal() {}
  union {
    SensorNetworkSummary_SensorCountsByTypeEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorNetworkSummary_SensorCountsByTypeEntry_DoNotUseDefaultTypeInternal _SensorNetworkSummary_SensorCountsByTypeEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SensorNetworkConfig_NetworkMetadataEntry_DoNotUse::SensorNetworkConfig_NetworkMetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : SensorNetworkConfig_NetworkMetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : SensorNetworkConfig_NetworkMetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SensorNetworkConfig_NetworkMetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorNetworkConfig_NetworkMetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorNetworkConfig_NetworkMetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    SensorNetworkConfig_NetworkMetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorNetworkConfig_NetworkMetadataEntry_DoNotUseDefaultTypeInternal _SensorNetworkConfig_NetworkMetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SensorData_DataMetadataEntry_DoNotUse::SensorData_DataMetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : SensorData_DataMetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : SensorData_DataMetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SensorData_DataMetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorData_DataMetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorData_DataMetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    SensorData_DataMetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorData_DataMetadataEntry_DoNotUseDefaultTypeInternal _SensorData_DataMetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SensorConfig_ConfigMetadataEntry_DoNotUse::SensorConfig_ConfigMetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : SensorConfig_ConfigMetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : SensorConfig_ConfigMetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SensorConfig_ConfigMetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorConfig_ConfigMetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorConfig_ConfigMetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    SensorConfig_ConfigMetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorConfig_ConfigMetadataEntry_DoNotUseDefaultTypeInternal _SensorConfig_ConfigMetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SensorAlertRule_RuleMetadataEntry_DoNotUse::SensorAlertRule_RuleMetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : SensorAlertRule_RuleMetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : SensorAlertRule_RuleMetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SensorAlertRule_RuleMetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorAlertRule_RuleMetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorAlertRule_RuleMetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    SensorAlertRule_RuleMetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorAlertRule_RuleMetadataEntry_DoNotUseDefaultTypeInternal _SensorAlertRule_RuleMetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SensorAlert_MetadataEntry_DoNotUse::SensorAlert_MetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : SensorAlert_MetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : SensorAlert_MetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SensorAlert_MetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorAlert_MetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorAlert_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    SensorAlert_MetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorAlert_MetadataEntry_DoNotUseDefaultTypeInternal _SensorAlert_MetadataEntry_DoNotUse_default_instance_;

inline constexpr SensorStatusLog::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : log_metadata_{},
        log_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sensor_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_{static_cast< ::seigr::sensor_management::SensorStatus >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SensorStatusLog::SensorStatusLog(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SensorStatusLogDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorStatusLogDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorStatusLogDefaultTypeInternal() {}
  union {
    SensorStatusLog _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorStatusLogDefaultTypeInternal _SensorStatusLog_default_instance_;

inline constexpr SensorRegistration::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : metadata_{},
        sensor_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        location_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        created_at_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        last_active_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sensor_type_{static_cast< ::seigr::sensor_management::SensorType >(0)},
        status_{static_cast< ::seigr::sensor_management::SensorStatus >(0)},
        data_format_{static_cast< ::seigr::sensor_management::DataFormat >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SensorRegistration::SensorRegistration(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SensorRegistrationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorRegistrationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorRegistrationDefaultTypeInternal() {}
  union {
    SensorRegistration _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorRegistrationDefaultTypeInternal _SensorRegistration_default_instance_;

inline constexpr SensorPredictiveMaintenance::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : maintenance_metadata_{},
        maintenance_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sensor_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        model_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        prediction_timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        recommended_action_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        next_analysis_due_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        confidence_score_{0},
        predicted_failure_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SensorPredictiveMaintenance::SensorPredictiveMaintenance(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SensorPredictiveMaintenanceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorPredictiveMaintenanceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorPredictiveMaintenanceDefaultTypeInternal() {}
  union {
    SensorPredictiveMaintenance _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorPredictiveMaintenanceDefaultTypeInternal _SensorPredictiveMaintenance_default_instance_;

inline constexpr SensorNetworkSummary::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : sensor_counts_by_type_{},
        summary_metadata_{},
        network_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        last_updated_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        total_sensors_{0},
        active_sensors_{0},
        inactive_sensors_{0},
        sensors_with_alerts_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SensorNetworkSummary::SensorNetworkSummary(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SensorNetworkSummaryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorNetworkSummaryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorNetworkSummaryDefaultTypeInternal() {}
  union {
    SensorNetworkSummary _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorNetworkSummaryDefaultTypeInternal _SensorNetworkSummary_default_instance_;

inline constexpr SensorData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_metadata_{},
        sensor_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        value_{0},
        data_format_{static_cast< ::seigr::sensor_management::DataFormat >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SensorData::SensorData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SensorDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorDataDefaultTypeInternal() {}
  union {
    SensorData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorDataDefaultTypeInternal _SensorData_default_instance_;

inline constexpr SensorConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : config_metadata_{},
        sensor_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        threshold_min_{0},
        threshold_max_{0},
        data_interval_seconds_{0},
        enable_alerts_{false},
        enable_data_encryption_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SensorConfig::SensorConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SensorConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorConfigDefaultTypeInternal() {}
  union {
    SensorConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorConfigDefaultTypeInternal _SensorConfig_default_instance_;

inline constexpr SensorAlertRule::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : rule_metadata_{},
        rule_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sensor_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        alert_message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        alert_threshold_{0},
        alert_on_status_{static_cast< ::seigr::sensor_management::SensorStatus >(0)},
        active_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SensorAlertRule::SensorAlertRule(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SensorAlertRuleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorAlertRuleDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorAlertRuleDefaultTypeInternal() {}
  union {
    SensorAlertRule _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorAlertRuleDefaultTypeInternal _SensorAlertRule_default_instance_;

inline constexpr SensorAlert::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : metadata_{},
        alert_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sensor_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        alert_message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        value_{0},
        status_{static_cast< ::seigr::sensor_management::SensorStatus >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SensorAlert::SensorAlert(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SensorAlertDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorAlertDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorAlertDefaultTypeInternal() {}
  union {
    SensorAlert _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorAlertDefaultTypeInternal _SensorAlert_default_instance_;

inline constexpr SensorNetworkConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : sensors_{},
        network_metadata_{},
        network_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        primary_node_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        backup_node_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        created_at_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        aggregation_interval_seconds_{0},
        enable_failover_{false},
        network_level_alerts_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SensorNetworkConfig::SensorNetworkConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SensorNetworkConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorNetworkConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorNetworkConfigDefaultTypeInternal() {}
  union {
    SensorNetworkConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorNetworkConfigDefaultTypeInternal _SensorNetworkConfig_default_instance_;
}  // namespace sensor_management
}  // namespace seigr
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_sensor_5fmanagement_2eproto[3];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_sensor_5fmanagement_2eproto = nullptr;
const ::uint32_t
    TableStruct_sensor_5fmanagement_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorRegistration_MetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorRegistration_MetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorRegistration_MetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorRegistration_MetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorRegistration, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorRegistration, _impl_.sensor_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorRegistration, _impl_.sensor_type_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorRegistration, _impl_.location_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorRegistration, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorRegistration, _impl_.data_format_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorRegistration, _impl_.created_at_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorRegistration, _impl_.last_active_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorRegistration, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorConfig_ConfigMetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorConfig_ConfigMetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorConfig_ConfigMetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorConfig_ConfigMetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorConfig, _impl_.sensor_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorConfig, _impl_.data_interval_seconds_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorConfig, _impl_.threshold_min_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorConfig, _impl_.threshold_max_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorConfig, _impl_.enable_alerts_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorConfig, _impl_.enable_data_encryption_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorConfig, _impl_.config_metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorData_DataMetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorData_DataMetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorData_DataMetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorData_DataMetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorData, _impl_.sensor_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorData, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorData, _impl_.value_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorData, _impl_.data_format_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorData, _impl_.data_metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorStatusLog_LogMetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorStatusLog_LogMetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorStatusLog_LogMetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorStatusLog_LogMetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorStatusLog, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorStatusLog, _impl_.log_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorStatusLog, _impl_.sensor_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorStatusLog, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorStatusLog, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorStatusLog, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorStatusLog, _impl_.log_metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorAlertRule_RuleMetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorAlertRule_RuleMetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorAlertRule_RuleMetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorAlertRule_RuleMetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorAlertRule, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorAlertRule, _impl_.rule_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorAlertRule, _impl_.sensor_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorAlertRule, _impl_.alert_threshold_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorAlertRule, _impl_.alert_on_status_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorAlertRule, _impl_.alert_message_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorAlertRule, _impl_.active_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorAlertRule, _impl_.rule_metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorAlert_MetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorAlert_MetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorAlert_MetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorAlert_MetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorAlert, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorAlert, _impl_.alert_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorAlert, _impl_.sensor_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorAlert, _impl_.value_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorAlert, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorAlert, _impl_.alert_message_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorAlert, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorAlert, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorNetworkConfig_NetworkMetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorNetworkConfig_NetworkMetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorNetworkConfig_NetworkMetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorNetworkConfig_NetworkMetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorNetworkConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorNetworkConfig, _impl_.network_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorNetworkConfig, _impl_.sensors_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorNetworkConfig, _impl_.aggregation_interval_seconds_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorNetworkConfig, _impl_.enable_failover_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorNetworkConfig, _impl_.network_level_alerts_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorNetworkConfig, _impl_.primary_node_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorNetworkConfig, _impl_.backup_node_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorNetworkConfig, _impl_.network_metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorNetworkConfig, _impl_.created_at_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorPredictiveMaintenance_MaintenanceMetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorPredictiveMaintenance_MaintenanceMetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorPredictiveMaintenance_MaintenanceMetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorPredictiveMaintenance_MaintenanceMetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorPredictiveMaintenance, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorPredictiveMaintenance, _impl_.maintenance_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorPredictiveMaintenance, _impl_.sensor_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorPredictiveMaintenance, _impl_.model_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorPredictiveMaintenance, _impl_.prediction_timestamp_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorPredictiveMaintenance, _impl_.predicted_failure_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorPredictiveMaintenance, _impl_.confidence_score_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorPredictiveMaintenance, _impl_.recommended_action_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorPredictiveMaintenance, _impl_.maintenance_metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorPredictiveMaintenance, _impl_.next_analysis_due_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorNetworkSummary_SensorCountsByTypeEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorNetworkSummary_SensorCountsByTypeEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorNetworkSummary_SensorCountsByTypeEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorNetworkSummary_SensorCountsByTypeEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorNetworkSummary_SummaryMetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorNetworkSummary_SummaryMetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorNetworkSummary_SummaryMetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorNetworkSummary_SummaryMetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorNetworkSummary, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorNetworkSummary, _impl_.network_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorNetworkSummary, _impl_.total_sensors_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorNetworkSummary, _impl_.active_sensors_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorNetworkSummary, _impl_.inactive_sensors_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorNetworkSummary, _impl_.sensors_with_alerts_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorNetworkSummary, _impl_.last_updated_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorNetworkSummary, _impl_.sensor_counts_by_type_),
        PROTOBUF_FIELD_OFFSET(::seigr::sensor_management::SensorNetworkSummary, _impl_.summary_metadata_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::seigr::sensor_management::SensorRegistration_MetadataEntry_DoNotUse)},
        {12, -1, -1, sizeof(::seigr::sensor_management::SensorRegistration)},
        {28, 38, -1, sizeof(::seigr::sensor_management::SensorConfig_ConfigMetadataEntry_DoNotUse)},
        {40, -1, -1, sizeof(::seigr::sensor_management::SensorConfig)},
        {55, 65, -1, sizeof(::seigr::sensor_management::SensorData_DataMetadataEntry_DoNotUse)},
        {67, -1, -1, sizeof(::seigr::sensor_management::SensorData)},
        {80, 90, -1, sizeof(::seigr::sensor_management::SensorStatusLog_LogMetadataEntry_DoNotUse)},
        {92, -1, -1, sizeof(::seigr::sensor_management::SensorStatusLog)},
        {106, 116, -1, sizeof(::seigr::sensor_management::SensorAlertRule_RuleMetadataEntry_DoNotUse)},
        {118, -1, -1, sizeof(::seigr::sensor_management::SensorAlertRule)},
        {133, 143, -1, sizeof(::seigr::sensor_management::SensorAlert_MetadataEntry_DoNotUse)},
        {145, -1, -1, sizeof(::seigr::sensor_management::SensorAlert)},
        {160, 170, -1, sizeof(::seigr::sensor_management::SensorNetworkConfig_NetworkMetadataEntry_DoNotUse)},
        {172, -1, -1, sizeof(::seigr::sensor_management::SensorNetworkConfig)},
        {189, 199, -1, sizeof(::seigr::sensor_management::SensorPredictiveMaintenance_MaintenanceMetadataEntry_DoNotUse)},
        {201, -1, -1, sizeof(::seigr::sensor_management::SensorPredictiveMaintenance)},
        {218, 228, -1, sizeof(::seigr::sensor_management::SensorNetworkSummary_SensorCountsByTypeEntry_DoNotUse)},
        {230, 240, -1, sizeof(::seigr::sensor_management::SensorNetworkSummary_SummaryMetadataEntry_DoNotUse)},
        {242, -1, -1, sizeof(::seigr::sensor_management::SensorNetworkSummary)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::seigr::sensor_management::_SensorRegistration_MetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::sensor_management::_SensorRegistration_default_instance_._instance,
    &::seigr::sensor_management::_SensorConfig_ConfigMetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::sensor_management::_SensorConfig_default_instance_._instance,
    &::seigr::sensor_management::_SensorData_DataMetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::sensor_management::_SensorData_default_instance_._instance,
    &::seigr::sensor_management::_SensorStatusLog_LogMetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::sensor_management::_SensorStatusLog_default_instance_._instance,
    &::seigr::sensor_management::_SensorAlertRule_RuleMetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::sensor_management::_SensorAlertRule_default_instance_._instance,
    &::seigr::sensor_management::_SensorAlert_MetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::sensor_management::_SensorAlert_default_instance_._instance,
    &::seigr::sensor_management::_SensorNetworkConfig_NetworkMetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::sensor_management::_SensorNetworkConfig_default_instance_._instance,
    &::seigr::sensor_management::_SensorPredictiveMaintenance_MaintenanceMetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::sensor_management::_SensorPredictiveMaintenance_default_instance_._instance,
    &::seigr::sensor_management::_SensorNetworkSummary_SensorCountsByTypeEntry_DoNotUse_default_instance_._instance,
    &::seigr::sensor_management::_SensorNetworkSummary_SummaryMetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::sensor_management::_SensorNetworkSummary_default_instance_._instance,
};
const char descriptor_table_protodef_sensor_5fmanagement_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\027sensor_management.proto\022\027seigr.sensor_"
    "management\"\213\003\n\022SensorRegistration\022\021\n\tsen"
    "sor_id\030\001 \001(\t\0228\n\013sensor_type\030\002 \001(\0162#.seig"
    "r.sensor_management.SensorType\022\020\n\010locati"
    "on\030\003 \001(\t\0225\n\006status\030\004 \001(\0162%.seigr.sensor_"
    "management.SensorStatus\0228\n\013data_format\030\005"
    " \001(\0162#.seigr.sensor_management.DataForma"
    "t\022\022\n\ncreated_at\030\006 \001(\t\022\023\n\013last_active\030\007 \001"
    "(\t\022K\n\010metadata\030\010 \003(\01329.seigr.sensor_mana"
    "gement.SensorRegistration.MetadataEntry\032"
    "/\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002"
    " \001(\t:\0028\001\"\260\002\n\014SensorConfig\022\021\n\tsensor_id\030\001"
    " \001(\t\022\035\n\025data_interval_seconds\030\002 \001(\005\022\025\n\rt"
    "hreshold_min\030\003 \001(\001\022\025\n\rthreshold_max\030\004 \001("
    "\001\022\025\n\renable_alerts\030\005 \001(\010\022\036\n\026enable_data_"
    "encryption\030\006 \001(\010\022R\n\017config_metadata\030\007 \003("
    "\01329.seigr.sensor_management.SensorConfig"
    ".ConfigMetadataEntry\0325\n\023ConfigMetadataEn"
    "try\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\376\001\n\n"
    "SensorData\022\021\n\tsensor_id\030\001 \001(\t\022\021\n\ttimesta"
    "mp\030\002 \001(\t\022\r\n\005value\030\003 \001(\001\0228\n\013data_format\030\004"
    " \001(\0162#.seigr.sensor_management.DataForma"
    "t\022L\n\rdata_metadata\030\005 \003(\01325.seigr.sensor_"
    "management.SensorData.DataMetadataEntry\032"
    "3\n\021DataMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005val"
    "ue\030\002 \001(\t:\0028\001\"\224\002\n\017SensorStatusLog\022\016\n\006log_"
    "id\030\001 \001(\t\022\021\n\tsensor_id\030\002 \001(\t\0225\n\006status\030\003 "
    "\001(\0162%.seigr.sensor_management.SensorStat"
    "us\022\021\n\ttimestamp\030\004 \001(\t\022\017\n\007message\030\005 \001(\t\022O"
    "\n\014log_metadata\030\006 \003(\01329.seigr.sensor_mana"
    "gement.SensorStatusLog.LogMetadataEntry\032"
    "2\n\020LogMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005valu"
    "e\030\002 \001(\t:\0028\001\"\275\002\n\017SensorAlertRule\022\017\n\007rule_"
    "id\030\001 \001(\t\022\021\n\tsensor_id\030\002 \001(\t\022\027\n\017alert_thr"
    "eshold\030\003 \001(\001\022>\n\017alert_on_status\030\004 \001(\0162%."
    "seigr.sensor_management.SensorStatus\022\025\n\r"
    "alert_message\030\005 \001(\t\022\016\n\006active\030\006 \001(\010\022Q\n\rr"
    "ule_metadata\030\007 \003(\0132:.seigr.sensor_manage"
    "ment.SensorAlertRule.RuleMetadataEntry\0323"
    "\n\021RuleMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005valu"
    "e\030\002 \001(\t:\0028\001\"\231\002\n\013SensorAlert\022\020\n\010alert_id\030"
    "\001 \001(\t\022\021\n\tsensor_id\030\002 \001(\t\022\r\n\005value\030\003 \001(\001\022"
    "5\n\006status\030\004 \001(\0162%.seigr.sensor_managemen"
    "t.SensorStatus\022\025\n\ralert_message\030\005 \001(\t\022\021\n"
    "\ttimestamp\030\006 \001(\t\022D\n\010metadata\030\007 \003(\01322.sei"
    "gr.sensor_management.SensorAlert.Metadat"
    "aEntry\032/\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005"
    "value\030\002 \001(\t:\0028\001\"\230\003\n\023SensorNetworkConfig\022"
    "\022\n\nnetwork_id\030\001 \001(\t\022<\n\007sensors\030\002 \003(\0132+.s"
    "eigr.sensor_management.SensorRegistratio"
    "n\022$\n\034aggregation_interval_seconds\030\003 \001(\005\022"
    "\027\n\017enable_failover\030\004 \001(\010\022\034\n\024network_leve"
    "l_alerts\030\005 \001(\010\022\024\n\014primary_node\030\006 \001(\t\022\023\n\013"
    "backup_node\030\007 \001(\t\022[\n\020network_metadata\030\010 "
    "\003(\0132A.seigr.sensor_management.SensorNetw"
    "orkConfig.NetworkMetadataEntry\022\022\n\ncreate"
    "d_at\030\t \001(\t\0326\n\024NetworkMetadataEntry\022\013\n\003ke"
    "y\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\215\003\n\033SensorPre"
    "dictiveMaintenance\022\026\n\016maintenance_id\030\001 \001"
    "(\t\022\021\n\tsensor_id\030\002 \001(\t\022\020\n\010model_id\030\003 \001(\t\022"
    "\034\n\024prediction_timestamp\030\004 \001(\t\022\031\n\021predict"
    "ed_failure\030\005 \001(\010\022\030\n\020confidence_score\030\006 \001"
    "(\001\022\032\n\022recommended_action\030\007 \001(\t\022k\n\024mainte"
    "nance_metadata\030\010 \003(\0132M.seigr.sensor_mana"
    "gement.SensorPredictiveMaintenance.Maint"
    "enanceMetadataEntry\022\031\n\021next_analysis_due"
    "\030\t \001(\t\032:\n\030MaintenanceMetadataEntry\022\013\n\003ke"
    "y\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\335\003\n\024SensorNet"
    "workSummary\022\022\n\nnetwork_id\030\001 \001(\t\022\025\n\rtotal"
    "_sensors\030\002 \001(\005\022\026\n\016active_sensors\030\003 \001(\005\022\030"
    "\n\020inactive_sensors\030\004 \001(\005\022\033\n\023sensors_with"
    "_alerts\030\005 \001(\005\022\024\n\014last_updated\030\006 \001(\t\022d\n\025s"
    "ensor_counts_by_type\030\007 \003(\0132E.seigr.senso"
    "r_management.SensorNetworkSummary.Sensor"
    "CountsByTypeEntry\022\\\n\020summary_metadata\030\010 "
    "\003(\0132B.seigr.sensor_management.SensorNetw"
    "orkSummary.SummaryMetadataEntry\0329\n\027Senso"
    "rCountsByTypeEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value"
    "\030\002 \001(\005:\0028\001\0326\n\024SummaryMetadataEntry\022\013\n\003ke"
    "y\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001*\305\001\n\nSensorTyp"
    "e\022\031\n\025SENSOR_TYPE_UNDEFINED\020\000\022\033\n\027SENSOR_T"
    "YPE_TEMPERATURE\020\001\022\030\n\024SENSOR_TYPE_HUMIDIT"
    "Y\020\002\022\030\n\024SENSOR_TYPE_PRESSURE\020\003\022\033\n\027SENSOR_"
    "TYPE_AIR_QUALITY\020\004\022\026\n\022SENSOR_TYPE_MOTION"
    "\020\005\022\026\n\022SENSOR_TYPE_CUSTOM\020\006*r\n\nDataFormat"
    "\022\031\n\025DATA_FORMAT_UNDEFINED\020\000\022\023\n\017DATA_FORM"
    "AT_RAW\020\001\022\031\n\025DATA_FORMAT_PROCESSED\020\002\022\031\n\025D"
    "ATA_FORMAT_ENCRYPTED\020\003*\231\001\n\014SensorStatus\022"
    "\033\n\027SENSOR_STATUS_UNDEFINED\020\000\022\030\n\024SENSOR_S"
    "TATUS_ACTIVE\020\001\022\032\n\026SENSOR_STATUS_INACTIVE"
    "\020\002\022\035\n\031SENSOR_STATUS_MAINTENANCE\020\003\022\027\n\023SEN"
    "SOR_STATUS_ERROR\020\004b\006proto3"
};
static ::absl::once_flag descriptor_table_sensor_5fmanagement_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_sensor_5fmanagement_2eproto = {
    false,
    false,
    3666,
    descriptor_table_protodef_sensor_5fmanagement_2eproto,
    "sensor_management.proto",
    &descriptor_table_sensor_5fmanagement_2eproto_once,
    nullptr,
    0,
    19,
    schemas,
    file_default_instances,
    TableStruct_sensor_5fmanagement_2eproto::offsets,
    file_level_enum_descriptors_sensor_5fmanagement_2eproto,
    file_level_service_descriptors_sensor_5fmanagement_2eproto,
};
namespace seigr {
namespace sensor_management {
const ::google::protobuf::EnumDescriptor* SensorType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_sensor_5fmanagement_2eproto);
  return file_level_enum_descriptors_sensor_5fmanagement_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t SensorType_internal_data_[] = {
    458752u, 0u, };
bool SensorType_IsValid(int value) {
  return 0 <= value && value <= 6;
}
const ::google::protobuf::EnumDescriptor* DataFormat_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_sensor_5fmanagement_2eproto);
  return file_level_enum_descriptors_sensor_5fmanagement_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t DataFormat_internal_data_[] = {
    262144u, 0u, };
bool DataFormat_IsValid(int value) {
  return 0 <= value && value <= 3;
}
const ::google::protobuf::EnumDescriptor* SensorStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_sensor_5fmanagement_2eproto);
  return file_level_enum_descriptors_sensor_5fmanagement_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t SensorStatus_internal_data_[] = {
    327680u, 0u, };
bool SensorStatus_IsValid(int value) {
  return 0 <= value && value <= 4;
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              SensorRegistration_MetadataEntry_DoNotUse::SensorRegistration_MetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              SensorRegistration_MetadataEntry_DoNotUse::SensorRegistration_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              SensorRegistration_MetadataEntry_DoNotUse::SensorRegistration_MetadataEntry_DoNotUse() : SuperType() {}
              SensorRegistration_MetadataEntry_DoNotUse::SensorRegistration_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* SensorRegistration_MetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) SensorRegistration_MetadataEntry_DoNotUse(arena);
              }
              constexpr auto SensorRegistration_MetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SensorRegistration_MetadataEntry_DoNotUse),
                                                          alignof(SensorRegistration_MetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull SensorRegistration_MetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_SensorRegistration_MetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &SensorRegistration_MetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<SensorRegistration_MetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &SensorRegistration_MetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &SensorRegistration_MetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(SensorRegistration_MetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &SensorRegistration_MetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_sensor_5fmanagement_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* SensorRegistration_MetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 73, 2> SensorRegistration_MetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SensorRegistration_MetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::sensor_management::SensorRegistration_MetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SensorRegistration_MetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SensorRegistration_MetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(SensorRegistration_MetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(SensorRegistration_MetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\70\3\5\0\0\0\0\0"
    "seigr.sensor_management.SensorRegistration.MetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class SensorRegistration::_Internal {
 public:
};

SensorRegistration::SensorRegistration(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.sensor_management.SensorRegistration)
}
inline PROTOBUF_NDEBUG_INLINE SensorRegistration::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::sensor_management::SensorRegistration& from_msg)
      : metadata_{visibility, arena, from.metadata_},
        sensor_id_(arena, from.sensor_id_),
        location_(arena, from.location_),
        created_at_(arena, from.created_at_),
        last_active_(arena, from.last_active_),
        _cached_size_{0} {}

SensorRegistration::SensorRegistration(
    ::google::protobuf::Arena* arena,
    const SensorRegistration& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SensorRegistration* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, sensor_type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, sensor_type_),
           offsetof(Impl_, data_format_) -
               offsetof(Impl_, sensor_type_) +
               sizeof(Impl_::data_format_));

  // @@protoc_insertion_point(copy_constructor:seigr.sensor_management.SensorRegistration)
}
inline PROTOBUF_NDEBUG_INLINE SensorRegistration::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : metadata_{visibility, arena},
        sensor_id_(arena),
        location_(arena),
        created_at_(arena),
        last_active_(arena),
        _cached_size_{0} {}

inline void SensorRegistration::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, sensor_type_),
           0,
           offsetof(Impl_, data_format_) -
               offsetof(Impl_, sensor_type_) +
               sizeof(Impl_::data_format_));
}
SensorRegistration::~SensorRegistration() {
  // @@protoc_insertion_point(destructor:seigr.sensor_management.SensorRegistration)
  SharedDtor(*this);
}
inline void SensorRegistration::SharedDtor(MessageLite& self) {
  SensorRegistration& this_ = static_cast<SensorRegistration&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.sensor_id_.Destroy();
  this_._impl_.location_.Destroy();
  this_._impl_.created_at_.Destroy();
  this_._impl_.last_active_.Destroy();
  this_._impl_.~Impl_();
}

inline void* SensorRegistration::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SensorRegistration(arena);
}
constexpr auto SensorRegistration::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SensorRegistration, _impl_.metadata_) +
          decltype(SensorRegistration::_impl_.metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SensorRegistration, _impl_.metadata_) +
          decltype(SensorRegistration::_impl_.metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(SensorRegistration), alignof(SensorRegistration), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SensorRegistration::PlacementNew_,
                                 sizeof(SensorRegistration),
                                 alignof(SensorRegistration));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SensorRegistration::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SensorRegistration_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SensorRegistration::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SensorRegistration>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SensorRegistration::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SensorRegistration>(), &SensorRegistration::ByteSizeLong,
            &SensorRegistration::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SensorRegistration, _impl_._cached_size_),
        false,
    },
    &SensorRegistration::kDescriptorMethods,
    &descriptor_table_sensor_5fmanagement_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SensorRegistration::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 1, 105, 2> SensorRegistration::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::sensor_management::SensorRegistration>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string sensor_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SensorRegistration, _impl_.sensor_id_)}},
    // .seigr.sensor_management.SensorType sensor_type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SensorRegistration, _impl_.sensor_type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SensorRegistration, _impl_.sensor_type_)}},
    // string location = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(SensorRegistration, _impl_.location_)}},
    // .seigr.sensor_management.SensorStatus status = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SensorRegistration, _impl_.status_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(SensorRegistration, _impl_.status_)}},
    // .seigr.sensor_management.DataFormat data_format = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SensorRegistration, _impl_.data_format_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(SensorRegistration, _impl_.data_format_)}},
    // string created_at = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(SensorRegistration, _impl_.created_at_)}},
    // string last_active = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(SensorRegistration, _impl_.last_active_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string sensor_id = 1;
    {PROTOBUF_FIELD_OFFSET(SensorRegistration, _impl_.sensor_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.sensor_management.SensorType sensor_type = 2;
    {PROTOBUF_FIELD_OFFSET(SensorRegistration, _impl_.sensor_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string location = 3;
    {PROTOBUF_FIELD_OFFSET(SensorRegistration, _impl_.location_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.sensor_management.SensorStatus status = 4;
    {PROTOBUF_FIELD_OFFSET(SensorRegistration, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .seigr.sensor_management.DataFormat data_format = 5;
    {PROTOBUF_FIELD_OFFSET(SensorRegistration, _impl_.data_format_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string created_at = 6;
    {PROTOBUF_FIELD_OFFSET(SensorRegistration, _impl_.created_at_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string last_active = 7;
    {PROTOBUF_FIELD_OFFSET(SensorRegistration, _impl_.last_active_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> metadata = 8;
    {PROTOBUF_FIELD_OFFSET(SensorRegistration, _impl_.metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(SensorRegistration()._impl_.metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\52\11\0\10\0\0\12\13\10\0\0\0\0\0\0\0"
    "seigr.sensor_management.SensorRegistration"
    "sensor_id"
    "location"
    "created_at"
    "last_active"
    "metadata"
  }},
};

PROTOBUF_NOINLINE void SensorRegistration::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.sensor_management.SensorRegistration)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.metadata_.Clear();
  _impl_.sensor_id_.ClearToEmpty();
  _impl_.location_.ClearToEmpty();
  _impl_.created_at_.ClearToEmpty();
  _impl_.last_active_.ClearToEmpty();
  ::memset(&_impl_.sensor_type_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.data_format_) -
      reinterpret_cast<char*>(&_impl_.sensor_type_)) + sizeof(_impl_.data_format_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SensorRegistration::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SensorRegistration& this_ = static_cast<const SensorRegistration&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SensorRegistration::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SensorRegistration& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.sensor_management.SensorRegistration)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string sensor_id = 1;
          if (!this_._internal_sensor_id().empty()) {
            const std::string& _s = this_._internal_sensor_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorRegistration.sensor_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // .seigr.sensor_management.SensorType sensor_type = 2;
          if (this_._internal_sensor_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_sensor_type(), target);
          }

          // string location = 3;
          if (!this_._internal_location().empty()) {
            const std::string& _s = this_._internal_location();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorRegistration.location");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // .seigr.sensor_management.SensorStatus status = 4;
          if (this_._internal_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                4, this_._internal_status(), target);
          }

          // .seigr.sensor_management.DataFormat data_format = 5;
          if (this_._internal_data_format() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                5, this_._internal_data_format(), target);
          }

          // string created_at = 6;
          if (!this_._internal_created_at().empty()) {
            const std::string& _s = this_._internal_created_at();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorRegistration.created_at");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // string last_active = 7;
          if (!this_._internal_last_active().empty()) {
            const std::string& _s = this_._internal_last_active();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorRegistration.last_active");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // map<string, string> metadata = 8;
          if (!this_._internal_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    8, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorRegistration.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorRegistration.metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    8, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorRegistration.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorRegistration.metadata");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.sensor_management.SensorRegistration)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SensorRegistration::ByteSizeLong(const MessageLite& base) {
          const SensorRegistration& this_ = static_cast<const SensorRegistration&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SensorRegistration::ByteSizeLong() const {
          const SensorRegistration& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.sensor_management.SensorRegistration)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> metadata = 8;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_metadata_size());
              for (const auto& entry : this_._internal_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string sensor_id = 1;
            if (!this_._internal_sensor_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_sensor_id());
            }
            // string location = 3;
            if (!this_._internal_location().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_location());
            }
            // string created_at = 6;
            if (!this_._internal_created_at().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_created_at());
            }
            // string last_active = 7;
            if (!this_._internal_last_active().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_last_active());
            }
            // .seigr.sensor_management.SensorType sensor_type = 2;
            if (this_._internal_sensor_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_sensor_type());
            }
            // .seigr.sensor_management.SensorStatus status = 4;
            if (this_._internal_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
            }
            // .seigr.sensor_management.DataFormat data_format = 5;
            if (this_._internal_data_format() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_data_format());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SensorRegistration::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SensorRegistration*>(&to_msg);
  auto& from = static_cast<const SensorRegistration&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.sensor_management.SensorRegistration)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.metadata_.MergeFrom(from._impl_.metadata_);
  if (!from._internal_sensor_id().empty()) {
    _this->_internal_set_sensor_id(from._internal_sensor_id());
  }
  if (!from._internal_location().empty()) {
    _this->_internal_set_location(from._internal_location());
  }
  if (!from._internal_created_at().empty()) {
    _this->_internal_set_created_at(from._internal_created_at());
  }
  if (!from._internal_last_active().empty()) {
    _this->_internal_set_last_active(from._internal_last_active());
  }
  if (from._internal_sensor_type() != 0) {
    _this->_impl_.sensor_type_ = from._impl_.sensor_type_;
  }
  if (from._internal_status() != 0) {
    _this->_impl_.status_ = from._impl_.status_;
  }
  if (from._internal_data_format() != 0) {
    _this->_impl_.data_format_ = from._impl_.data_format_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SensorRegistration::CopyFrom(const SensorRegistration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.sensor_management.SensorRegistration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SensorRegistration::InternalSwap(SensorRegistration* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.metadata_.InternalSwap(&other->_impl_.metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sensor_id_, &other->_impl_.sensor_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.location_, &other->_impl_.location_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.created_at_, &other->_impl_.created_at_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.last_active_, &other->_impl_.last_active_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SensorRegistration, _impl_.data_format_)
      + sizeof(SensorRegistration::_impl_.data_format_)
      - PROTOBUF_FIELD_OFFSET(SensorRegistration, _impl_.sensor_type_)>(
          reinterpret_cast<char*>(&_impl_.sensor_type_),
          reinterpret_cast<char*>(&other->_impl_.sensor_type_));
}

::google::protobuf::Metadata SensorRegistration::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              SensorConfig_ConfigMetadataEntry_DoNotUse::SensorConfig_ConfigMetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              SensorConfig_ConfigMetadataEntry_DoNotUse::SensorConfig_ConfigMetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              SensorConfig_ConfigMetadataEntry_DoNotUse::SensorConfig_ConfigMetadataEntry_DoNotUse() : SuperType() {}
              SensorConfig_ConfigMetadataEntry_DoNotUse::SensorConfig_ConfigMetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* SensorConfig_ConfigMetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) SensorConfig_ConfigMetadataEntry_DoNotUse(arena);
              }
              constexpr auto SensorConfig_ConfigMetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SensorConfig_ConfigMetadataEntry_DoNotUse),
                                                          alignof(SensorConfig_ConfigMetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull SensorConfig_ConfigMetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_SensorConfig_ConfigMetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &SensorConfig_ConfigMetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<SensorConfig_ConfigMetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &SensorConfig_ConfigMetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &SensorConfig_ConfigMetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(SensorConfig_ConfigMetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &SensorConfig_ConfigMetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_sensor_5fmanagement_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* SensorConfig_ConfigMetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 73, 2> SensorConfig_ConfigMetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SensorConfig_ConfigMetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::sensor_management::SensorConfig_ConfigMetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SensorConfig_ConfigMetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SensorConfig_ConfigMetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(SensorConfig_ConfigMetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(SensorConfig_ConfigMetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\70\3\5\0\0\0\0\0"
    "seigr.sensor_management.SensorConfig.ConfigMetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class SensorConfig::_Internal {
 public:
};

SensorConfig::SensorConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.sensor_management.SensorConfig)
}
inline PROTOBUF_NDEBUG_INLINE SensorConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::sensor_management::SensorConfig& from_msg)
      : config_metadata_{visibility, arena, from.config_metadata_},
        sensor_id_(arena, from.sensor_id_),
        _cached_size_{0} {}

SensorConfig::SensorConfig(
    ::google::protobuf::Arena* arena,
    const SensorConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SensorConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, threshold_min_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, threshold_min_),
           offsetof(Impl_, enable_data_encryption_) -
               offsetof(Impl_, threshold_min_) +
               sizeof(Impl_::enable_data_encryption_));

  // @@protoc_insertion_point(copy_constructor:seigr.sensor_management.SensorConfig)
}
inline PROTOBUF_NDEBUG_INLINE SensorConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : config_metadata_{visibility, arena},
        sensor_id_(arena),
        _cached_size_{0} {}

inline void SensorConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, threshold_min_),
           0,
           offsetof(Impl_, enable_data_encryption_) -
               offsetof(Impl_, threshold_min_) +
               sizeof(Impl_::enable_data_encryption_));
}
SensorConfig::~SensorConfig() {
  // @@protoc_insertion_point(destructor:seigr.sensor_management.SensorConfig)
  SharedDtor(*this);
}
inline void SensorConfig::SharedDtor(MessageLite& self) {
  SensorConfig& this_ = static_cast<SensorConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.sensor_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* SensorConfig::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SensorConfig(arena);
}
constexpr auto SensorConfig::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SensorConfig, _impl_.config_metadata_) +
          decltype(SensorConfig::_impl_.config_metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SensorConfig, _impl_.config_metadata_) +
          decltype(SensorConfig::_impl_.config_metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(SensorConfig), alignof(SensorConfig), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SensorConfig::PlacementNew_,
                                 sizeof(SensorConfig),
                                 alignof(SensorConfig));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SensorConfig::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SensorConfig_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SensorConfig::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SensorConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SensorConfig::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SensorConfig>(), &SensorConfig::ByteSizeLong,
            &SensorConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SensorConfig, _impl_._cached_size_),
        false,
    },
    &SensorConfig::kDescriptorMethods,
    &descriptor_table_sensor_5fmanagement_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SensorConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 1, 69, 2> SensorConfig::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::sensor_management::SensorConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string sensor_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SensorConfig, _impl_.sensor_id_)}},
    // int32 data_interval_seconds = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SensorConfig, _impl_.data_interval_seconds_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SensorConfig, _impl_.data_interval_seconds_)}},
    // double threshold_min = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(SensorConfig, _impl_.threshold_min_)}},
    // double threshold_max = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(SensorConfig, _impl_.threshold_max_)}},
    // bool enable_alerts = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SensorConfig, _impl_.enable_alerts_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(SensorConfig, _impl_.enable_alerts_)}},
    // bool enable_data_encryption = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SensorConfig, _impl_.enable_data_encryption_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(SensorConfig, _impl_.enable_data_encryption_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string sensor_id = 1;
    {PROTOBUF_FIELD_OFFSET(SensorConfig, _impl_.sensor_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 data_interval_seconds = 2;
    {PROTOBUF_FIELD_OFFSET(SensorConfig, _impl_.data_interval_seconds_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // double threshold_min = 3;
    {PROTOBUF_FIELD_OFFSET(SensorConfig, _impl_.threshold_min_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double threshold_max = 4;
    {PROTOBUF_FIELD_OFFSET(SensorConfig, _impl_.threshold_max_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // bool enable_alerts = 5;
    {PROTOBUF_FIELD_OFFSET(SensorConfig, _impl_.enable_alerts_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool enable_data_encryption = 6;
    {PROTOBUF_FIELD_OFFSET(SensorConfig, _impl_.enable_data_encryption_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // map<string, string> config_metadata = 7;
    {PROTOBUF_FIELD_OFFSET(SensorConfig, _impl_.config_metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(SensorConfig()._impl_.config_metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\44\11\0\0\0\0\0\17"
    "seigr.sensor_management.SensorConfig"
    "sensor_id"
    "config_metadata"
  }},
};

PROTOBUF_NOINLINE void SensorConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.sensor_management.SensorConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.config_metadata_.Clear();
  _impl_.sensor_id_.ClearToEmpty();
  ::memset(&_impl_.threshold_min_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.enable_data_encryption_) -
      reinterpret_cast<char*>(&_impl_.threshold_min_)) + sizeof(_impl_.enable_data_encryption_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SensorConfig::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SensorConfig& this_ = static_cast<const SensorConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SensorConfig::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SensorConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.sensor_management.SensorConfig)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string sensor_id = 1;
          if (!this_._internal_sensor_id().empty()) {
            const std::string& _s = this_._internal_sensor_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorConfig.sensor_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // int32 data_interval_seconds = 2;
          if (this_._internal_data_interval_seconds() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_data_interval_seconds(), target);
          }

          // double threshold_min = 3;
          if (::absl::bit_cast<::uint64_t>(this_._internal_threshold_min()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                3, this_._internal_threshold_min(), target);
          }

          // double threshold_max = 4;
          if (::absl::bit_cast<::uint64_t>(this_._internal_threshold_max()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                4, this_._internal_threshold_max(), target);
          }

          // bool enable_alerts = 5;
          if (this_._internal_enable_alerts() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                5, this_._internal_enable_alerts(), target);
          }

          // bool enable_data_encryption = 6;
          if (this_._internal_enable_data_encryption() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                6, this_._internal_enable_data_encryption(), target);
          }

          // map<string, string> config_metadata = 7;
          if (!this_._internal_config_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_config_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorConfig.config_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorConfig.config_metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorConfig.config_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorConfig.config_metadata");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.sensor_management.SensorConfig)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SensorConfig::ByteSizeLong(const MessageLite& base) {
          const SensorConfig& this_ = static_cast<const SensorConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SensorConfig::ByteSizeLong() const {
          const SensorConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.sensor_management.SensorConfig)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> config_metadata = 7;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_config_metadata_size());
              for (const auto& entry : this_._internal_config_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string sensor_id = 1;
            if (!this_._internal_sensor_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_sensor_id());
            }
            // double threshold_min = 3;
            if (::absl::bit_cast<::uint64_t>(this_._internal_threshold_min()) != 0) {
              total_size += 9;
            }
            // double threshold_max = 4;
            if (::absl::bit_cast<::uint64_t>(this_._internal_threshold_max()) != 0) {
              total_size += 9;
            }
            // int32 data_interval_seconds = 2;
            if (this_._internal_data_interval_seconds() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_data_interval_seconds());
            }
            // bool enable_alerts = 5;
            if (this_._internal_enable_alerts() != 0) {
              total_size += 2;
            }
            // bool enable_data_encryption = 6;
            if (this_._internal_enable_data_encryption() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SensorConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SensorConfig*>(&to_msg);
  auto& from = static_cast<const SensorConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.sensor_management.SensorConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.config_metadata_.MergeFrom(from._impl_.config_metadata_);
  if (!from._internal_sensor_id().empty()) {
    _this->_internal_set_sensor_id(from._internal_sensor_id());
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_threshold_min()) != 0) {
    _this->_impl_.threshold_min_ = from._impl_.threshold_min_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_threshold_max()) != 0) {
    _this->_impl_.threshold_max_ = from._impl_.threshold_max_;
  }
  if (from._internal_data_interval_seconds() != 0) {
    _this->_impl_.data_interval_seconds_ = from._impl_.data_interval_seconds_;
  }
  if (from._internal_enable_alerts() != 0) {
    _this->_impl_.enable_alerts_ = from._impl_.enable_alerts_;
  }
  if (from._internal_enable_data_encryption() != 0) {
    _this->_impl_.enable_data_encryption_ = from._impl_.enable_data_encryption_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SensorConfig::CopyFrom(const SensorConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.sensor_management.SensorConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SensorConfig::InternalSwap(SensorConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.config_metadata_.InternalSwap(&other->_impl_.config_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sensor_id_, &other->_impl_.sensor_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SensorConfig, _impl_.enable_data_encryption_)
      + sizeof(SensorConfig::_impl_.enable_data_encryption_)
      - PROTOBUF_FIELD_OFFSET(SensorConfig, _impl_.threshold_min_)>(
          reinterpret_cast<char*>(&_impl_.threshold_min_),
          reinterpret_cast<char*>(&other->_impl_.threshold_min_));
}

::google::protobuf::Metadata SensorConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              SensorData_DataMetadataEntry_DoNotUse::SensorData_DataMetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              SensorData_DataMetadataEntry_DoNotUse::SensorData_DataMetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              SensorData_DataMetadataEntry_DoNotUse::SensorData_DataMetadataEntry_DoNotUse() : SuperType() {}
              SensorData_DataMetadataEntry_DoNotUse::SensorData_DataMetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* SensorData_DataMetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) SensorData_DataMetadataEntry_DoNotUse(arena);
              }
              constexpr auto SensorData_DataMetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SensorData_DataMetadataEntry_DoNotUse),
                                                          alignof(SensorData_DataMetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull SensorData_DataMetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_SensorData_DataMetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &SensorData_DataMetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<SensorData_DataMetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &SensorData_DataMetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &SensorData_DataMetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(SensorData_DataMetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &SensorData_DataMetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_sensor_5fmanagement_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* SensorData_DataMetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 69, 2> SensorData_DataMetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SensorData_DataMetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::sensor_management::SensorData_DataMetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SensorData_DataMetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SensorData_DataMetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(SensorData_DataMetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(SensorData_DataMetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\64\3\5\0\0\0\0\0"
    "seigr.sensor_management.SensorData.DataMetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class SensorData::_Internal {
 public:
};

SensorData::SensorData(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.sensor_management.SensorData)
}
inline PROTOBUF_NDEBUG_INLINE SensorData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::sensor_management::SensorData& from_msg)
      : data_metadata_{visibility, arena, from.data_metadata_},
        sensor_id_(arena, from.sensor_id_),
        timestamp_(arena, from.timestamp_),
        _cached_size_{0} {}

SensorData::SensorData(
    ::google::protobuf::Arena* arena,
    const SensorData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SensorData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, value_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, value_),
           offsetof(Impl_, data_format_) -
               offsetof(Impl_, value_) +
               sizeof(Impl_::data_format_));

  // @@protoc_insertion_point(copy_constructor:seigr.sensor_management.SensorData)
}
inline PROTOBUF_NDEBUG_INLINE SensorData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_metadata_{visibility, arena},
        sensor_id_(arena),
        timestamp_(arena),
        _cached_size_{0} {}

inline void SensorData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, value_),
           0,
           offsetof(Impl_, data_format_) -
               offsetof(Impl_, value_) +
               sizeof(Impl_::data_format_));
}
SensorData::~SensorData() {
  // @@protoc_insertion_point(destructor:seigr.sensor_management.SensorData)
  SharedDtor(*this);
}
inline void SensorData::SharedDtor(MessageLite& self) {
  SensorData& this_ = static_cast<SensorData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.sensor_id_.Destroy();
  this_._impl_.timestamp_.Destroy();
  this_._impl_.~Impl_();
}

inline void* SensorData::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SensorData(arena);
}
constexpr auto SensorData::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SensorData, _impl_.data_metadata_) +
          decltype(SensorData::_impl_.data_metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SensorData, _impl_.data_metadata_) +
          decltype(SensorData::_impl_.data_metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(SensorData), alignof(SensorData), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SensorData::PlacementNew_,
                                 sizeof(SensorData),
                                 alignof(SensorData));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SensorData::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SensorData_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SensorData::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SensorData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SensorData::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SensorData>(), &SensorData::ByteSizeLong,
            &SensorData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SensorData, _impl_._cached_size_),
        false,
    },
    &SensorData::kDescriptorMethods,
    &descriptor_table_sensor_5fmanagement_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SensorData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 5, 1, 74, 2> SensorData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::sensor_management::SensorData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .seigr.sensor_management.DataFormat data_format = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SensorData, _impl_.data_format_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(SensorData, _impl_.data_format_)}},
    // string sensor_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SensorData, _impl_.sensor_id_)}},
    // string timestamp = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SensorData, _impl_.timestamp_)}},
    // double value = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(SensorData, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string sensor_id = 1;
    {PROTOBUF_FIELD_OFFSET(SensorData, _impl_.sensor_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string timestamp = 2;
    {PROTOBUF_FIELD_OFFSET(SensorData, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double value = 3;
    {PROTOBUF_FIELD_OFFSET(SensorData, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // .seigr.sensor_management.DataFormat data_format = 4;
    {PROTOBUF_FIELD_OFFSET(SensorData, _impl_.data_format_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // map<string, string> data_metadata = 5;
    {PROTOBUF_FIELD_OFFSET(SensorData, _impl_.data_metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(SensorData()._impl_.data_metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\42\11\11\0\0\15\0\0"
    "seigr.sensor_management.SensorData"
    "sensor_id"
    "timestamp"
    "data_metadata"
  }},
};

PROTOBUF_NOINLINE void SensorData::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.sensor_management.SensorData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_metadata_.Clear();
  _impl_.sensor_id_.ClearToEmpty();
  _impl_.timestamp_.ClearToEmpty();
  ::memset(&_impl_.value_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.data_format_) -
      reinterpret_cast<char*>(&_impl_.value_)) + sizeof(_impl_.data_format_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SensorData::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SensorData& this_ = static_cast<const SensorData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SensorData::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SensorData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.sensor_management.SensorData)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string sensor_id = 1;
          if (!this_._internal_sensor_id().empty()) {
            const std::string& _s = this_._internal_sensor_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorData.sensor_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string timestamp = 2;
          if (!this_._internal_timestamp().empty()) {
            const std::string& _s = this_._internal_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorData.timestamp");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // double value = 3;
          if (::absl::bit_cast<::uint64_t>(this_._internal_value()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                3, this_._internal_value(), target);
          }

          // .seigr.sensor_management.DataFormat data_format = 4;
          if (this_._internal_data_format() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                4, this_._internal_data_format(), target);
          }

          // map<string, string> data_metadata = 5;
          if (!this_._internal_data_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_data_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    5, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorData.data_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorData.data_metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    5, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorData.data_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorData.data_metadata");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.sensor_management.SensorData)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SensorData::ByteSizeLong(const MessageLite& base) {
          const SensorData& this_ = static_cast<const SensorData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SensorData::ByteSizeLong() const {
          const SensorData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.sensor_management.SensorData)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> data_metadata = 5;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_data_metadata_size());
              for (const auto& entry : this_._internal_data_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string sensor_id = 1;
            if (!this_._internal_sensor_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_sensor_id());
            }
            // string timestamp = 2;
            if (!this_._internal_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_timestamp());
            }
            // double value = 3;
            if (::absl::bit_cast<::uint64_t>(this_._internal_value()) != 0) {
              total_size += 9;
            }
            // .seigr.sensor_management.DataFormat data_format = 4;
            if (this_._internal_data_format() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_data_format());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SensorData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SensorData*>(&to_msg);
  auto& from = static_cast<const SensorData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.sensor_management.SensorData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.data_metadata_.MergeFrom(from._impl_.data_metadata_);
  if (!from._internal_sensor_id().empty()) {
    _this->_internal_set_sensor_id(from._internal_sensor_id());
  }
  if (!from._internal_timestamp().empty()) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_value()) != 0) {
    _this->_impl_.value_ = from._impl_.value_;
  }
  if (from._internal_data_format() != 0) {
    _this->_impl_.data_format_ = from._impl_.data_format_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SensorData::CopyFrom(const SensorData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.sensor_management.SensorData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SensorData::InternalSwap(SensorData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.data_metadata_.InternalSwap(&other->_impl_.data_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sensor_id_, &other->_impl_.sensor_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.timestamp_, &other->_impl_.timestamp_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SensorData, _impl_.data_format_)
      + sizeof(SensorData::_impl_.data_format_)
      - PROTOBUF_FIELD_OFFSET(SensorData, _impl_.value_)>(
          reinterpret_cast<char*>(&_impl_.value_),
          reinterpret_cast<char*>(&other->_impl_.value_));
}

::google::protobuf::Metadata SensorData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              SensorStatusLog_LogMetadataEntry_DoNotUse::SensorStatusLog_LogMetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              SensorStatusLog_LogMetadataEntry_DoNotUse::SensorStatusLog_LogMetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              SensorStatusLog_LogMetadataEntry_DoNotUse::SensorStatusLog_LogMetadataEntry_DoNotUse() : SuperType() {}
              SensorStatusLog_LogMetadataEntry_DoNotUse::SensorStatusLog_LogMetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* SensorStatusLog_LogMetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) SensorStatusLog_LogMetadataEntry_DoNotUse(arena);
              }
              constexpr auto SensorStatusLog_LogMetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SensorStatusLog_LogMetadataEntry_DoNotUse),
                                                          alignof(SensorStatusLog_LogMetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull SensorStatusLog_LogMetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_SensorStatusLog_LogMetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &SensorStatusLog_LogMetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<SensorStatusLog_LogMetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &SensorStatusLog_LogMetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &SensorStatusLog_LogMetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(SensorStatusLog_LogMetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &SensorStatusLog_LogMetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_sensor_5fmanagement_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* SensorStatusLog_LogMetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 73, 2> SensorStatusLog_LogMetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SensorStatusLog_LogMetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::sensor_management::SensorStatusLog_LogMetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SensorStatusLog_LogMetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SensorStatusLog_LogMetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(SensorStatusLog_LogMetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(SensorStatusLog_LogMetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\70\3\5\0\0\0\0\0"
    "seigr.sensor_management.SensorStatusLog.LogMetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class SensorStatusLog::_Internal {
 public:
};

SensorStatusLog::SensorStatusLog(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.sensor_management.SensorStatusLog)
}
inline PROTOBUF_NDEBUG_INLINE SensorStatusLog::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::sensor_management::SensorStatusLog& from_msg)
      : log_metadata_{visibility, arena, from.log_metadata_},
        log_id_(arena, from.log_id_),
        sensor_id_(arena, from.sensor_id_),
        timestamp_(arena, from.timestamp_),
        message_(arena, from.message_),
        _cached_size_{0} {}

SensorStatusLog::SensorStatusLog(
    ::google::protobuf::Arena* arena,
    const SensorStatusLog& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SensorStatusLog* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.status_ = from._impl_.status_;

  // @@protoc_insertion_point(copy_constructor:seigr.sensor_management.SensorStatusLog)
}
inline PROTOBUF_NDEBUG_INLINE SensorStatusLog::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : log_metadata_{visibility, arena},
        log_id_(arena),
        sensor_id_(arena),
        timestamp_(arena),
        message_(arena),
        _cached_size_{0} {}

inline void SensorStatusLog::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
SensorStatusLog::~SensorStatusLog() {
  // @@protoc_insertion_point(destructor:seigr.sensor_management.SensorStatusLog)
  SharedDtor(*this);
}
inline void SensorStatusLog::SharedDtor(MessageLite& self) {
  SensorStatusLog& this_ = static_cast<SensorStatusLog&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.log_id_.Destroy();
  this_._impl_.sensor_id_.Destroy();
  this_._impl_.timestamp_.Destroy();
  this_._impl_.message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* SensorStatusLog::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SensorStatusLog(arena);
}
constexpr auto SensorStatusLog::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SensorStatusLog, _impl_.log_metadata_) +
          decltype(SensorStatusLog::_impl_.log_metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SensorStatusLog, _impl_.log_metadata_) +
          decltype(SensorStatusLog::_impl_.log_metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(SensorStatusLog), alignof(SensorStatusLog), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SensorStatusLog::PlacementNew_,
                                 sizeof(SensorStatusLog),
                                 alignof(SensorStatusLog));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SensorStatusLog::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SensorStatusLog_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SensorStatusLog::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SensorStatusLog>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SensorStatusLog::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SensorStatusLog>(), &SensorStatusLog::ByteSizeLong,
            &SensorStatusLog::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SensorStatusLog, _impl_._cached_size_),
        false,
    },
    &SensorStatusLog::kDescriptorMethods,
    &descriptor_table_sensor_5fmanagement_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SensorStatusLog::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 91, 2> SensorStatusLog::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::sensor_management::SensorStatusLog>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string log_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SensorStatusLog, _impl_.log_id_)}},
    // string sensor_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SensorStatusLog, _impl_.sensor_id_)}},
    // .seigr.sensor_management.SensorStatus status = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SensorStatusLog, _impl_.status_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(SensorStatusLog, _impl_.status_)}},
    // string timestamp = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(SensorStatusLog, _impl_.timestamp_)}},
    // string message = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(SensorStatusLog, _impl_.message_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string log_id = 1;
    {PROTOBUF_FIELD_OFFSET(SensorStatusLog, _impl_.log_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string sensor_id = 2;
    {PROTOBUF_FIELD_OFFSET(SensorStatusLog, _impl_.sensor_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.sensor_management.SensorStatus status = 3;
    {PROTOBUF_FIELD_OFFSET(SensorStatusLog, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string timestamp = 4;
    {PROTOBUF_FIELD_OFFSET(SensorStatusLog, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string message = 5;
    {PROTOBUF_FIELD_OFFSET(SensorStatusLog, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> log_metadata = 6;
    {PROTOBUF_FIELD_OFFSET(SensorStatusLog, _impl_.log_metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(SensorStatusLog()._impl_.log_metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\47\6\11\0\11\7\14\0"
    "seigr.sensor_management.SensorStatusLog"
    "log_id"
    "sensor_id"
    "timestamp"
    "message"
    "log_metadata"
  }},
};

PROTOBUF_NOINLINE void SensorStatusLog::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.sensor_management.SensorStatusLog)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.log_metadata_.Clear();
  _impl_.log_id_.ClearToEmpty();
  _impl_.sensor_id_.ClearToEmpty();
  _impl_.timestamp_.ClearToEmpty();
  _impl_.message_.ClearToEmpty();
  _impl_.status_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SensorStatusLog::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SensorStatusLog& this_ = static_cast<const SensorStatusLog&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SensorStatusLog::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SensorStatusLog& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.sensor_management.SensorStatusLog)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string log_id = 1;
          if (!this_._internal_log_id().empty()) {
            const std::string& _s = this_._internal_log_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorStatusLog.log_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string sensor_id = 2;
          if (!this_._internal_sensor_id().empty()) {
            const std::string& _s = this_._internal_sensor_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorStatusLog.sensor_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // .seigr.sensor_management.SensorStatus status = 3;
          if (this_._internal_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_status(), target);
          }

          // string timestamp = 4;
          if (!this_._internal_timestamp().empty()) {
            const std::string& _s = this_._internal_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorStatusLog.timestamp");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string message = 5;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorStatusLog.message");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // map<string, string> log_metadata = 6;
          if (!this_._internal_log_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_log_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorStatusLog.log_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorStatusLog.log_metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorStatusLog.log_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorStatusLog.log_metadata");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.sensor_management.SensorStatusLog)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SensorStatusLog::ByteSizeLong(const MessageLite& base) {
          const SensorStatusLog& this_ = static_cast<const SensorStatusLog&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SensorStatusLog::ByteSizeLong() const {
          const SensorStatusLog& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.sensor_management.SensorStatusLog)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> log_metadata = 6;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_log_metadata_size());
              for (const auto& entry : this_._internal_log_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string log_id = 1;
            if (!this_._internal_log_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_log_id());
            }
            // string sensor_id = 2;
            if (!this_._internal_sensor_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_sensor_id());
            }
            // string timestamp = 4;
            if (!this_._internal_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_timestamp());
            }
            // string message = 5;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
            // .seigr.sensor_management.SensorStatus status = 3;
            if (this_._internal_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SensorStatusLog::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SensorStatusLog*>(&to_msg);
  auto& from = static_cast<const SensorStatusLog&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.sensor_management.SensorStatusLog)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.log_metadata_.MergeFrom(from._impl_.log_metadata_);
  if (!from._internal_log_id().empty()) {
    _this->_internal_set_log_id(from._internal_log_id());
  }
  if (!from._internal_sensor_id().empty()) {
    _this->_internal_set_sensor_id(from._internal_sensor_id());
  }
  if (!from._internal_timestamp().empty()) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_status() != 0) {
    _this->_impl_.status_ = from._impl_.status_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SensorStatusLog::CopyFrom(const SensorStatusLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.sensor_management.SensorStatusLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SensorStatusLog::InternalSwap(SensorStatusLog* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.log_metadata_.InternalSwap(&other->_impl_.log_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.log_id_, &other->_impl_.log_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sensor_id_, &other->_impl_.sensor_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.timestamp_, &other->_impl_.timestamp_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata SensorStatusLog::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              SensorAlertRule_RuleMetadataEntry_DoNotUse::SensorAlertRule_RuleMetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              SensorAlertRule_RuleMetadataEntry_DoNotUse::SensorAlertRule_RuleMetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              SensorAlertRule_RuleMetadataEntry_DoNotUse::SensorAlertRule_RuleMetadataEntry_DoNotUse() : SuperType() {}
              SensorAlertRule_RuleMetadataEntry_DoNotUse::SensorAlertRule_RuleMetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* SensorAlertRule_RuleMetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) SensorAlertRule_RuleMetadataEntry_DoNotUse(arena);
              }
              constexpr auto SensorAlertRule_RuleMetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SensorAlertRule_RuleMetadataEntry_DoNotUse),
                                                          alignof(SensorAlertRule_RuleMetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull SensorAlertRule_RuleMetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_SensorAlertRule_RuleMetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &SensorAlertRule_RuleMetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<SensorAlertRule_RuleMetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &SensorAlertRule_RuleMetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &SensorAlertRule_RuleMetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(SensorAlertRule_RuleMetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &SensorAlertRule_RuleMetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_sensor_5fmanagement_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* SensorAlertRule_RuleMetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 74, 2> SensorAlertRule_RuleMetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SensorAlertRule_RuleMetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::sensor_management::SensorAlertRule_RuleMetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SensorAlertRule_RuleMetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SensorAlertRule_RuleMetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(SensorAlertRule_RuleMetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(SensorAlertRule_RuleMetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\71\3\5\0\0\0\0\0"
    "seigr.sensor_management.SensorAlertRule.RuleMetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class SensorAlertRule::_Internal {
 public:
};

SensorAlertRule::SensorAlertRule(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.sensor_management.SensorAlertRule)
}
inline PROTOBUF_NDEBUG_INLINE SensorAlertRule::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::sensor_management::SensorAlertRule& from_msg)
      : rule_metadata_{visibility, arena, from.rule_metadata_},
        rule_id_(arena, from.rule_id_),
        sensor_id_(arena, from.sensor_id_),
        alert_message_(arena, from.alert_message_),
        _cached_size_{0} {}

SensorAlertRule::SensorAlertRule(
    ::google::protobuf::Arena* arena,
    const SensorAlertRule& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SensorAlertRule* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, alert_threshold_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, alert_threshold_),
           offsetof(Impl_, active_) -
               offsetof(Impl_, alert_threshold_) +
               sizeof(Impl_::active_));

  // @@protoc_insertion_point(copy_constructor:seigr.sensor_management.SensorAlertRule)
}
inline PROTOBUF_NDEBUG_INLINE SensorAlertRule::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : rule_metadata_{visibility, arena},
        rule_id_(arena),
        sensor_id_(arena),
        alert_message_(arena),
        _cached_size_{0} {}

inline void SensorAlertRule::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, alert_threshold_),
           0,
           offsetof(Impl_, active_) -
               offsetof(Impl_, alert_threshold_) +
               sizeof(Impl_::active_));
}
SensorAlertRule::~SensorAlertRule() {
  // @@protoc_insertion_point(destructor:seigr.sensor_management.SensorAlertRule)
  SharedDtor(*this);
}
inline void SensorAlertRule::SharedDtor(MessageLite& self) {
  SensorAlertRule& this_ = static_cast<SensorAlertRule&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.rule_id_.Destroy();
  this_._impl_.sensor_id_.Destroy();
  this_._impl_.alert_message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* SensorAlertRule::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SensorAlertRule(arena);
}
constexpr auto SensorAlertRule::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SensorAlertRule, _impl_.rule_metadata_) +
          decltype(SensorAlertRule::_impl_.rule_metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SensorAlertRule, _impl_.rule_metadata_) +
          decltype(SensorAlertRule::_impl_.rule_metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(SensorAlertRule), alignof(SensorAlertRule), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SensorAlertRule::PlacementNew_,
                                 sizeof(SensorAlertRule),
                                 alignof(SensorAlertRule));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SensorAlertRule::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SensorAlertRule_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SensorAlertRule::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SensorAlertRule>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SensorAlertRule::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SensorAlertRule>(), &SensorAlertRule::ByteSizeLong,
            &SensorAlertRule::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SensorAlertRule, _impl_._cached_size_),
        false,
    },
    &SensorAlertRule::kDescriptorMethods,
    &descriptor_table_sensor_5fmanagement_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SensorAlertRule::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 1, 90, 2> SensorAlertRule::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::sensor_management::SensorAlertRule>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string rule_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SensorAlertRule, _impl_.rule_id_)}},
    // string sensor_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SensorAlertRule, _impl_.sensor_id_)}},
    // double alert_threshold = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(SensorAlertRule, _impl_.alert_threshold_)}},
    // .seigr.sensor_management.SensorStatus alert_on_status = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SensorAlertRule, _impl_.alert_on_status_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(SensorAlertRule, _impl_.alert_on_status_)}},
    // string alert_message = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(SensorAlertRule, _impl_.alert_message_)}},
    // bool active = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SensorAlertRule, _impl_.active_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(SensorAlertRule, _impl_.active_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string rule_id = 1;
    {PROTOBUF_FIELD_OFFSET(SensorAlertRule, _impl_.rule_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string sensor_id = 2;
    {PROTOBUF_FIELD_OFFSET(SensorAlertRule, _impl_.sensor_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double alert_threshold = 3;
    {PROTOBUF_FIELD_OFFSET(SensorAlertRule, _impl_.alert_threshold_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // .seigr.sensor_management.SensorStatus alert_on_status = 4;
    {PROTOBUF_FIELD_OFFSET(SensorAlertRule, _impl_.alert_on_status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string alert_message = 5;
    {PROTOBUF_FIELD_OFFSET(SensorAlertRule, _impl_.alert_message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool active = 6;
    {PROTOBUF_FIELD_OFFSET(SensorAlertRule, _impl_.active_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // map<string, string> rule_metadata = 7;
    {PROTOBUF_FIELD_OFFSET(SensorAlertRule, _impl_.rule_metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(SensorAlertRule()._impl_.rule_metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\47\7\11\0\0\15\0\15"
    "seigr.sensor_management.SensorAlertRule"
    "rule_id"
    "sensor_id"
    "alert_message"
    "rule_metadata"
  }},
};

PROTOBUF_NOINLINE void SensorAlertRule::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.sensor_management.SensorAlertRule)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rule_metadata_.Clear();
  _impl_.rule_id_.ClearToEmpty();
  _impl_.sensor_id_.ClearToEmpty();
  _impl_.alert_message_.ClearToEmpty();
  ::memset(&_impl_.alert_threshold_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.active_) -
      reinterpret_cast<char*>(&_impl_.alert_threshold_)) + sizeof(_impl_.active_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SensorAlertRule::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SensorAlertRule& this_ = static_cast<const SensorAlertRule&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SensorAlertRule::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SensorAlertRule& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.sensor_management.SensorAlertRule)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string rule_id = 1;
          if (!this_._internal_rule_id().empty()) {
            const std::string& _s = this_._internal_rule_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorAlertRule.rule_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string sensor_id = 2;
          if (!this_._internal_sensor_id().empty()) {
            const std::string& _s = this_._internal_sensor_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorAlertRule.sensor_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // double alert_threshold = 3;
          if (::absl::bit_cast<::uint64_t>(this_._internal_alert_threshold()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                3, this_._internal_alert_threshold(), target);
          }

          // .seigr.sensor_management.SensorStatus alert_on_status = 4;
          if (this_._internal_alert_on_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                4, this_._internal_alert_on_status(), target);
          }

          // string alert_message = 5;
          if (!this_._internal_alert_message().empty()) {
            const std::string& _s = this_._internal_alert_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorAlertRule.alert_message");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // bool active = 6;
          if (this_._internal_active() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                6, this_._internal_active(), target);
          }

          // map<string, string> rule_metadata = 7;
          if (!this_._internal_rule_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_rule_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorAlertRule.rule_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorAlertRule.rule_metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorAlertRule.rule_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorAlertRule.rule_metadata");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.sensor_management.SensorAlertRule)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SensorAlertRule::ByteSizeLong(const MessageLite& base) {
          const SensorAlertRule& this_ = static_cast<const SensorAlertRule&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SensorAlertRule::ByteSizeLong() const {
          const SensorAlertRule& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.sensor_management.SensorAlertRule)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> rule_metadata = 7;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_rule_metadata_size());
              for (const auto& entry : this_._internal_rule_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string rule_id = 1;
            if (!this_._internal_rule_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_rule_id());
            }
            // string sensor_id = 2;
            if (!this_._internal_sensor_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_sensor_id());
            }
            // string alert_message = 5;
            if (!this_._internal_alert_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_alert_message());
            }
            // double alert_threshold = 3;
            if (::absl::bit_cast<::uint64_t>(this_._internal_alert_threshold()) != 0) {
              total_size += 9;
            }
            // .seigr.sensor_management.SensorStatus alert_on_status = 4;
            if (this_._internal_alert_on_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_alert_on_status());
            }
            // bool active = 6;
            if (this_._internal_active() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SensorAlertRule::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SensorAlertRule*>(&to_msg);
  auto& from = static_cast<const SensorAlertRule&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.sensor_management.SensorAlertRule)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.rule_metadata_.MergeFrom(from._impl_.rule_metadata_);
  if (!from._internal_rule_id().empty()) {
    _this->_internal_set_rule_id(from._internal_rule_id());
  }
  if (!from._internal_sensor_id().empty()) {
    _this->_internal_set_sensor_id(from._internal_sensor_id());
  }
  if (!from._internal_alert_message().empty()) {
    _this->_internal_set_alert_message(from._internal_alert_message());
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_alert_threshold()) != 0) {
    _this->_impl_.alert_threshold_ = from._impl_.alert_threshold_;
  }
  if (from._internal_alert_on_status() != 0) {
    _this->_impl_.alert_on_status_ = from._impl_.alert_on_status_;
  }
  if (from._internal_active() != 0) {
    _this->_impl_.active_ = from._impl_.active_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SensorAlertRule::CopyFrom(const SensorAlertRule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.sensor_management.SensorAlertRule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SensorAlertRule::InternalSwap(SensorAlertRule* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.rule_metadata_.InternalSwap(&other->_impl_.rule_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.rule_id_, &other->_impl_.rule_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sensor_id_, &other->_impl_.sensor_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.alert_message_, &other->_impl_.alert_message_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SensorAlertRule, _impl_.active_)
      + sizeof(SensorAlertRule::_impl_.active_)
      - PROTOBUF_FIELD_OFFSET(SensorAlertRule, _impl_.alert_threshold_)>(
          reinterpret_cast<char*>(&_impl_.alert_threshold_),
          reinterpret_cast<char*>(&other->_impl_.alert_threshold_));
}

::google::protobuf::Metadata SensorAlertRule::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              SensorAlert_MetadataEntry_DoNotUse::SensorAlert_MetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              SensorAlert_MetadataEntry_DoNotUse::SensorAlert_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              SensorAlert_MetadataEntry_DoNotUse::SensorAlert_MetadataEntry_DoNotUse() : SuperType() {}
              SensorAlert_MetadataEntry_DoNotUse::SensorAlert_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* SensorAlert_MetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) SensorAlert_MetadataEntry_DoNotUse(arena);
              }
              constexpr auto SensorAlert_MetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SensorAlert_MetadataEntry_DoNotUse),
                                                          alignof(SensorAlert_MetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull SensorAlert_MetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_SensorAlert_MetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &SensorAlert_MetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<SensorAlert_MetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &SensorAlert_MetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &SensorAlert_MetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(SensorAlert_MetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &SensorAlert_MetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_sensor_5fmanagement_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* SensorAlert_MetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 66, 2> SensorAlert_MetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SensorAlert_MetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::sensor_management::SensorAlert_MetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SensorAlert_MetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SensorAlert_MetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(SensorAlert_MetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(SensorAlert_MetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\61\3\5\0\0\0\0\0"
    "seigr.sensor_management.SensorAlert.MetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class SensorAlert::_Internal {
 public:
};

SensorAlert::SensorAlert(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.sensor_management.SensorAlert)
}
inline PROTOBUF_NDEBUG_INLINE SensorAlert::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::sensor_management::SensorAlert& from_msg)
      : metadata_{visibility, arena, from.metadata_},
        alert_id_(arena, from.alert_id_),
        sensor_id_(arena, from.sensor_id_),
        alert_message_(arena, from.alert_message_),
        timestamp_(arena, from.timestamp_),
        _cached_size_{0} {}

SensorAlert::SensorAlert(
    ::google::protobuf::Arena* arena,
    const SensorAlert& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SensorAlert* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, value_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, value_),
           offsetof(Impl_, status_) -
               offsetof(Impl_, value_) +
               sizeof(Impl_::status_));

  // @@protoc_insertion_point(copy_constructor:seigr.sensor_management.SensorAlert)
}
inline PROTOBUF_NDEBUG_INLINE SensorAlert::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : metadata_{visibility, arena},
        alert_id_(arena),
        sensor_id_(arena),
        alert_message_(arena),
        timestamp_(arena),
        _cached_size_{0} {}

inline void SensorAlert::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, value_),
           0,
           offsetof(Impl_, status_) -
               offsetof(Impl_, value_) +
               sizeof(Impl_::status_));
}
SensorAlert::~SensorAlert() {
  // @@protoc_insertion_point(destructor:seigr.sensor_management.SensorAlert)
  SharedDtor(*this);
}
inline void SensorAlert::SharedDtor(MessageLite& self) {
  SensorAlert& this_ = static_cast<SensorAlert&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.alert_id_.Destroy();
  this_._impl_.sensor_id_.Destroy();
  this_._impl_.alert_message_.Destroy();
  this_._impl_.timestamp_.Destroy();
  this_._impl_.~Impl_();
}

inline void* SensorAlert::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SensorAlert(arena);
}
constexpr auto SensorAlert::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SensorAlert, _impl_.metadata_) +
          decltype(SensorAlert::_impl_.metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SensorAlert, _impl_.metadata_) +
          decltype(SensorAlert::_impl_.metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(SensorAlert), alignof(SensorAlert), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SensorAlert::PlacementNew_,
                                 sizeof(SensorAlert),
                                 alignof(SensorAlert));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SensorAlert::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SensorAlert_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SensorAlert::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SensorAlert>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SensorAlert::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SensorAlert>(), &SensorAlert::ByteSizeLong,
            &SensorAlert::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SensorAlert, _impl_._cached_size_),
        false,
    },
    &SensorAlert::kDescriptorMethods,
    &descriptor_table_sensor_5fmanagement_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SensorAlert::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 1, 91, 2> SensorAlert::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::sensor_management::SensorAlert>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string alert_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SensorAlert, _impl_.alert_id_)}},
    // string sensor_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SensorAlert, _impl_.sensor_id_)}},
    // double value = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(SensorAlert, _impl_.value_)}},
    // .seigr.sensor_management.SensorStatus status = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SensorAlert, _impl_.status_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(SensorAlert, _impl_.status_)}},
    // string alert_message = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(SensorAlert, _impl_.alert_message_)}},
    // string timestamp = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(SensorAlert, _impl_.timestamp_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string alert_id = 1;
    {PROTOBUF_FIELD_OFFSET(SensorAlert, _impl_.alert_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string sensor_id = 2;
    {PROTOBUF_FIELD_OFFSET(SensorAlert, _impl_.sensor_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double value = 3;
    {PROTOBUF_FIELD_OFFSET(SensorAlert, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // .seigr.sensor_management.SensorStatus status = 4;
    {PROTOBUF_FIELD_OFFSET(SensorAlert, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string alert_message = 5;
    {PROTOBUF_FIELD_OFFSET(SensorAlert, _impl_.alert_message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string timestamp = 6;
    {PROTOBUF_FIELD_OFFSET(SensorAlert, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> metadata = 7;
    {PROTOBUF_FIELD_OFFSET(SensorAlert, _impl_.metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(SensorAlert()._impl_.metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\43\10\11\0\0\15\11\10"
    "seigr.sensor_management.SensorAlert"
    "alert_id"
    "sensor_id"
    "alert_message"
    "timestamp"
    "metadata"
  }},
};

PROTOBUF_NOINLINE void SensorAlert::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.sensor_management.SensorAlert)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.metadata_.Clear();
  _impl_.alert_id_.ClearToEmpty();
  _impl_.sensor_id_.ClearToEmpty();
  _impl_.alert_message_.ClearToEmpty();
  _impl_.timestamp_.ClearToEmpty();
  ::memset(&_impl_.value_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.status_) -
      reinterpret_cast<char*>(&_impl_.value_)) + sizeof(_impl_.status_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SensorAlert::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SensorAlert& this_ = static_cast<const SensorAlert&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SensorAlert::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SensorAlert& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.sensor_management.SensorAlert)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string alert_id = 1;
          if (!this_._internal_alert_id().empty()) {
            const std::string& _s = this_._internal_alert_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorAlert.alert_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string sensor_id = 2;
          if (!this_._internal_sensor_id().empty()) {
            const std::string& _s = this_._internal_sensor_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorAlert.sensor_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // double value = 3;
          if (::absl::bit_cast<::uint64_t>(this_._internal_value()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                3, this_._internal_value(), target);
          }

          // .seigr.sensor_management.SensorStatus status = 4;
          if (this_._internal_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                4, this_._internal_status(), target);
          }

          // string alert_message = 5;
          if (!this_._internal_alert_message().empty()) {
            const std::string& _s = this_._internal_alert_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorAlert.alert_message");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string timestamp = 6;
          if (!this_._internal_timestamp().empty()) {
            const std::string& _s = this_._internal_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorAlert.timestamp");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // map<string, string> metadata = 7;
          if (!this_._internal_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorAlert.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorAlert.metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorAlert.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorAlert.metadata");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.sensor_management.SensorAlert)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SensorAlert::ByteSizeLong(const MessageLite& base) {
          const SensorAlert& this_ = static_cast<const SensorAlert&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SensorAlert::ByteSizeLong() const {
          const SensorAlert& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.sensor_management.SensorAlert)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> metadata = 7;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_metadata_size());
              for (const auto& entry : this_._internal_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string alert_id = 1;
            if (!this_._internal_alert_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_alert_id());
            }
            // string sensor_id = 2;
            if (!this_._internal_sensor_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_sensor_id());
            }
            // string alert_message = 5;
            if (!this_._internal_alert_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_alert_message());
            }
            // string timestamp = 6;
            if (!this_._internal_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_timestamp());
            }
            // double value = 3;
            if (::absl::bit_cast<::uint64_t>(this_._internal_value()) != 0) {
              total_size += 9;
            }
            // .seigr.sensor_management.SensorStatus status = 4;
            if (this_._internal_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SensorAlert::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SensorAlert*>(&to_msg);
  auto& from = static_cast<const SensorAlert&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.sensor_management.SensorAlert)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.metadata_.MergeFrom(from._impl_.metadata_);
  if (!from._internal_alert_id().empty()) {
    _this->_internal_set_alert_id(from._internal_alert_id());
  }
  if (!from._internal_sensor_id().empty()) {
    _this->_internal_set_sensor_id(from._internal_sensor_id());
  }
  if (!from._internal_alert_message().empty()) {
    _this->_internal_set_alert_message(from._internal_alert_message());
  }
  if (!from._internal_timestamp().empty()) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_value()) != 0) {
    _this->_impl_.value_ = from._impl_.value_;
  }
  if (from._internal_status() != 0) {
    _this->_impl_.status_ = from._impl_.status_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SensorAlert::CopyFrom(const SensorAlert& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.sensor_management.SensorAlert)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SensorAlert::InternalSwap(SensorAlert* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.metadata_.InternalSwap(&other->_impl_.metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.alert_id_, &other->_impl_.alert_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sensor_id_, &other->_impl_.sensor_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.alert_message_, &other->_impl_.alert_message_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.timestamp_, &other->_impl_.timestamp_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SensorAlert, _impl_.status_)
      + sizeof(SensorAlert::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(SensorAlert, _impl_.value_)>(
          reinterpret_cast<char*>(&_impl_.value_),
          reinterpret_cast<char*>(&other->_impl_.value_));
}

::google::protobuf::Metadata SensorAlert::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              SensorNetworkConfig_NetworkMetadataEntry_DoNotUse::SensorNetworkConfig_NetworkMetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              SensorNetworkConfig_NetworkMetadataEntry_DoNotUse::SensorNetworkConfig_NetworkMetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              SensorNetworkConfig_NetworkMetadataEntry_DoNotUse::SensorNetworkConfig_NetworkMetadataEntry_DoNotUse() : SuperType() {}
              SensorNetworkConfig_NetworkMetadataEntry_DoNotUse::SensorNetworkConfig_NetworkMetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* SensorNetworkConfig_NetworkMetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) SensorNetworkConfig_NetworkMetadataEntry_DoNotUse(arena);
              }
              constexpr auto SensorNetworkConfig_NetworkMetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SensorNetworkConfig_NetworkMetadataEntry_DoNotUse),
                                                          alignof(SensorNetworkConfig_NetworkMetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull SensorNetworkConfig_NetworkMetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_SensorNetworkConfig_NetworkMetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &SensorNetworkConfig_NetworkMetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<SensorNetworkConfig_NetworkMetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &SensorNetworkConfig_NetworkMetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &SensorNetworkConfig_NetworkMetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(SensorNetworkConfig_NetworkMetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &SensorNetworkConfig_NetworkMetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_sensor_5fmanagement_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* SensorNetworkConfig_NetworkMetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 81, 2> SensorNetworkConfig_NetworkMetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SensorNetworkConfig_NetworkMetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::sensor_management::SensorNetworkConfig_NetworkMetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SensorNetworkConfig_NetworkMetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SensorNetworkConfig_NetworkMetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(SensorNetworkConfig_NetworkMetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(SensorNetworkConfig_NetworkMetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\100\3\5\0\0\0\0\0"
    "seigr.sensor_management.SensorNetworkConfig.NetworkMetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class SensorNetworkConfig::_Internal {
 public:
};

SensorNetworkConfig::SensorNetworkConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.sensor_management.SensorNetworkConfig)
}
inline PROTOBUF_NDEBUG_INLINE SensorNetworkConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::sensor_management::SensorNetworkConfig& from_msg)
      : sensors_{visibility, arena, from.sensors_},
        network_metadata_{visibility, arena, from.network_metadata_},
        network_id_(arena, from.network_id_),
        primary_node_(arena, from.primary_node_),
        backup_node_(arena, from.backup_node_),
        created_at_(arena, from.created_at_),
        _cached_size_{0} {}

SensorNetworkConfig::SensorNetworkConfig(
    ::google::protobuf::Arena* arena,
    const SensorNetworkConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SensorNetworkConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, aggregation_interval_seconds_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, aggregation_interval_seconds_),
           offsetof(Impl_, network_level_alerts_) -
               offsetof(Impl_, aggregation_interval_seconds_) +
               sizeof(Impl_::network_level_alerts_));

  // @@protoc_insertion_point(copy_constructor:seigr.sensor_management.SensorNetworkConfig)
}
inline PROTOBUF_NDEBUG_INLINE SensorNetworkConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : sensors_{visibility, arena},
        network_metadata_{visibility, arena},
        network_id_(arena),
        primary_node_(arena),
        backup_node_(arena),
        created_at_(arena),
        _cached_size_{0} {}

inline void SensorNetworkConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, aggregation_interval_seconds_),
           0,
           offsetof(Impl_, network_level_alerts_) -
               offsetof(Impl_, aggregation_interval_seconds_) +
               sizeof(Impl_::network_level_alerts_));
}
SensorNetworkConfig::~SensorNetworkConfig() {
  // @@protoc_insertion_point(destructor:seigr.sensor_management.SensorNetworkConfig)
  SharedDtor(*this);
}
inline void SensorNetworkConfig::SharedDtor(MessageLite& self) {
  SensorNetworkConfig& this_ = static_cast<SensorNetworkConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.network_id_.Destroy();
  this_._impl_.primary_node_.Destroy();
  this_._impl_.backup_node_.Destroy();
  this_._impl_.created_at_.Destroy();
  this_._impl_.~Impl_();
}

inline void* SensorNetworkConfig::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SensorNetworkConfig(arena);
}
constexpr auto SensorNetworkConfig::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SensorNetworkConfig, _impl_.sensors_) +
          decltype(SensorNetworkConfig::_impl_.sensors_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SensorNetworkConfig, _impl_.network_metadata_) +
          decltype(SensorNetworkConfig::_impl_.network_metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SensorNetworkConfig, _impl_.network_metadata_) +
          decltype(SensorNetworkConfig::_impl_.network_metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(SensorNetworkConfig), alignof(SensorNetworkConfig), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SensorNetworkConfig::PlacementNew_,
                                 sizeof(SensorNetworkConfig),
                                 alignof(SensorNetworkConfig));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SensorNetworkConfig::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SensorNetworkConfig_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SensorNetworkConfig::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SensorNetworkConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SensorNetworkConfig::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SensorNetworkConfig>(), &SensorNetworkConfig::ByteSizeLong,
            &SensorNetworkConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SensorNetworkConfig, _impl_._cached_size_),
        false,
    },
    &SensorNetworkConfig::kDescriptorMethods,
    &descriptor_table_sensor_5fmanagement_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SensorNetworkConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 2, 119, 2> SensorNetworkConfig::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::sensor_management::SensorNetworkConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string network_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SensorNetworkConfig, _impl_.network_id_)}},
    // repeated .seigr.sensor_management.SensorRegistration sensors = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SensorNetworkConfig, _impl_.sensors_)}},
    // int32 aggregation_interval_seconds = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SensorNetworkConfig, _impl_.aggregation_interval_seconds_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(SensorNetworkConfig, _impl_.aggregation_interval_seconds_)}},
    // bool enable_failover = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SensorNetworkConfig, _impl_.enable_failover_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(SensorNetworkConfig, _impl_.enable_failover_)}},
    // bool network_level_alerts = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SensorNetworkConfig, _impl_.network_level_alerts_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(SensorNetworkConfig, _impl_.network_level_alerts_)}},
    // string primary_node = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(SensorNetworkConfig, _impl_.primary_node_)}},
    // string backup_node = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(SensorNetworkConfig, _impl_.backup_node_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string created_at = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(SensorNetworkConfig, _impl_.created_at_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string network_id = 1;
    {PROTOBUF_FIELD_OFFSET(SensorNetworkConfig, _impl_.network_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .seigr.sensor_management.SensorRegistration sensors = 2;
    {PROTOBUF_FIELD_OFFSET(SensorNetworkConfig, _impl_.sensors_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 aggregation_interval_seconds = 3;
    {PROTOBUF_FIELD_OFFSET(SensorNetworkConfig, _impl_.aggregation_interval_seconds_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool enable_failover = 4;
    {PROTOBUF_FIELD_OFFSET(SensorNetworkConfig, _impl_.enable_failover_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool network_level_alerts = 5;
    {PROTOBUF_FIELD_OFFSET(SensorNetworkConfig, _impl_.network_level_alerts_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string primary_node = 6;
    {PROTOBUF_FIELD_OFFSET(SensorNetworkConfig, _impl_.primary_node_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string backup_node = 7;
    {PROTOBUF_FIELD_OFFSET(SensorNetworkConfig, _impl_.backup_node_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> network_metadata = 8;
    {PROTOBUF_FIELD_OFFSET(SensorNetworkConfig, _impl_.network_metadata_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string created_at = 9;
    {PROTOBUF_FIELD_OFFSET(SensorNetworkConfig, _impl_.created_at_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::seigr::sensor_management::SensorRegistration>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(SensorNetworkConfig()._impl_.network_metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\53\12\0\0\0\0\14\13\20\12\0\0\0\0\0\0"
    "seigr.sensor_management.SensorNetworkConfig"
    "network_id"
    "primary_node"
    "backup_node"
    "network_metadata"
    "created_at"
  }},
};

PROTOBUF_NOINLINE void SensorNetworkConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.sensor_management.SensorNetworkConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sensors_.Clear();
  _impl_.network_metadata_.Clear();
  _impl_.network_id_.ClearToEmpty();
  _impl_.primary_node_.ClearToEmpty();
  _impl_.backup_node_.ClearToEmpty();
  _impl_.created_at_.ClearToEmpty();
  ::memset(&_impl_.aggregation_interval_seconds_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.network_level_alerts_) -
      reinterpret_cast<char*>(&_impl_.aggregation_interval_seconds_)) + sizeof(_impl_.network_level_alerts_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SensorNetworkConfig::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SensorNetworkConfig& this_ = static_cast<const SensorNetworkConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SensorNetworkConfig::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SensorNetworkConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.sensor_management.SensorNetworkConfig)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string network_id = 1;
          if (!this_._internal_network_id().empty()) {
            const std::string& _s = this_._internal_network_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorNetworkConfig.network_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated .seigr.sensor_management.SensorRegistration sensors = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_sensors_size());
               i < n; i++) {
            const auto& repfield = this_._internal_sensors().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // int32 aggregation_interval_seconds = 3;
          if (this_._internal_aggregation_interval_seconds() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_aggregation_interval_seconds(), target);
          }

          // bool enable_failover = 4;
          if (this_._internal_enable_failover() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_enable_failover(), target);
          }

          // bool network_level_alerts = 5;
          if (this_._internal_network_level_alerts() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                5, this_._internal_network_level_alerts(), target);
          }

          // string primary_node = 6;
          if (!this_._internal_primary_node().empty()) {
            const std::string& _s = this_._internal_primary_node();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorNetworkConfig.primary_node");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // string backup_node = 7;
          if (!this_._internal_backup_node().empty()) {
            const std::string& _s = this_._internal_backup_node();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorNetworkConfig.backup_node");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // map<string, string> network_metadata = 8;
          if (!this_._internal_network_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_network_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    8, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorNetworkConfig.network_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorNetworkConfig.network_metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    8, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorNetworkConfig.network_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorNetworkConfig.network_metadata");
              }
            }
          }

          // string created_at = 9;
          if (!this_._internal_created_at().empty()) {
            const std::string& _s = this_._internal_created_at();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorNetworkConfig.created_at");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.sensor_management.SensorNetworkConfig)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SensorNetworkConfig::ByteSizeLong(const MessageLite& base) {
          const SensorNetworkConfig& this_ = static_cast<const SensorNetworkConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SensorNetworkConfig::ByteSizeLong() const {
          const SensorNetworkConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.sensor_management.SensorNetworkConfig)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .seigr.sensor_management.SensorRegistration sensors = 2;
            {
              total_size += 1UL * this_._internal_sensors_size();
              for (const auto& msg : this_._internal_sensors()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // map<string, string> network_metadata = 8;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_network_metadata_size());
              for (const auto& entry : this_._internal_network_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string network_id = 1;
            if (!this_._internal_network_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_network_id());
            }
            // string primary_node = 6;
            if (!this_._internal_primary_node().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_primary_node());
            }
            // string backup_node = 7;
            if (!this_._internal_backup_node().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_backup_node());
            }
            // string created_at = 9;
            if (!this_._internal_created_at().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_created_at());
            }
            // int32 aggregation_interval_seconds = 3;
            if (this_._internal_aggregation_interval_seconds() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_aggregation_interval_seconds());
            }
            // bool enable_failover = 4;
            if (this_._internal_enable_failover() != 0) {
              total_size += 2;
            }
            // bool network_level_alerts = 5;
            if (this_._internal_network_level_alerts() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SensorNetworkConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SensorNetworkConfig*>(&to_msg);
  auto& from = static_cast<const SensorNetworkConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.sensor_management.SensorNetworkConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_sensors()->MergeFrom(
      from._internal_sensors());
  _this->_impl_.network_metadata_.MergeFrom(from._impl_.network_metadata_);
  if (!from._internal_network_id().empty()) {
    _this->_internal_set_network_id(from._internal_network_id());
  }
  if (!from._internal_primary_node().empty()) {
    _this->_internal_set_primary_node(from._internal_primary_node());
  }
  if (!from._internal_backup_node().empty()) {
    _this->_internal_set_backup_node(from._internal_backup_node());
  }
  if (!from._internal_created_at().empty()) {
    _this->_internal_set_created_at(from._internal_created_at());
  }
  if (from._internal_aggregation_interval_seconds() != 0) {
    _this->_impl_.aggregation_interval_seconds_ = from._impl_.aggregation_interval_seconds_;
  }
  if (from._internal_enable_failover() != 0) {
    _this->_impl_.enable_failover_ = from._impl_.enable_failover_;
  }
  if (from._internal_network_level_alerts() != 0) {
    _this->_impl_.network_level_alerts_ = from._impl_.network_level_alerts_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SensorNetworkConfig::CopyFrom(const SensorNetworkConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.sensor_management.SensorNetworkConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SensorNetworkConfig::InternalSwap(SensorNetworkConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.sensors_.InternalSwap(&other->_impl_.sensors_);
  _impl_.network_metadata_.InternalSwap(&other->_impl_.network_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.network_id_, &other->_impl_.network_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.primary_node_, &other->_impl_.primary_node_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.backup_node_, &other->_impl_.backup_node_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.created_at_, &other->_impl_.created_at_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SensorNetworkConfig, _impl_.network_level_alerts_)
      + sizeof(SensorNetworkConfig::_impl_.network_level_alerts_)
      - PROTOBUF_FIELD_OFFSET(SensorNetworkConfig, _impl_.aggregation_interval_seconds_)>(
          reinterpret_cast<char*>(&_impl_.aggregation_interval_seconds_),
          reinterpret_cast<char*>(&other->_impl_.aggregation_interval_seconds_));
}

::google::protobuf::Metadata SensorNetworkConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              SensorPredictiveMaintenance_MaintenanceMetadataEntry_DoNotUse::SensorPredictiveMaintenance_MaintenanceMetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              SensorPredictiveMaintenance_MaintenanceMetadataEntry_DoNotUse::SensorPredictiveMaintenance_MaintenanceMetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              SensorPredictiveMaintenance_MaintenanceMetadataEntry_DoNotUse::SensorPredictiveMaintenance_MaintenanceMetadataEntry_DoNotUse() : SuperType() {}
              SensorPredictiveMaintenance_MaintenanceMetadataEntry_DoNotUse::SensorPredictiveMaintenance_MaintenanceMetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* SensorPredictiveMaintenance_MaintenanceMetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) SensorPredictiveMaintenance_MaintenanceMetadataEntry_DoNotUse(arena);
              }
              constexpr auto SensorPredictiveMaintenance_MaintenanceMetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SensorPredictiveMaintenance_MaintenanceMetadataEntry_DoNotUse),
                                                          alignof(SensorPredictiveMaintenance_MaintenanceMetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull SensorPredictiveMaintenance_MaintenanceMetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_SensorPredictiveMaintenance_MaintenanceMetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &SensorPredictiveMaintenance_MaintenanceMetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<SensorPredictiveMaintenance_MaintenanceMetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &SensorPredictiveMaintenance_MaintenanceMetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &SensorPredictiveMaintenance_MaintenanceMetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(SensorPredictiveMaintenance_MaintenanceMetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &SensorPredictiveMaintenance_MaintenanceMetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_sensor_5fmanagement_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* SensorPredictiveMaintenance_MaintenanceMetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 93, 2> SensorPredictiveMaintenance_MaintenanceMetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SensorPredictiveMaintenance_MaintenanceMetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::sensor_management::SensorPredictiveMaintenance_MaintenanceMetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SensorPredictiveMaintenance_MaintenanceMetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SensorPredictiveMaintenance_MaintenanceMetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(SensorPredictiveMaintenance_MaintenanceMetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(SensorPredictiveMaintenance_MaintenanceMetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\114\3\5\0\0\0\0\0"
    "seigr.sensor_management.SensorPredictiveMaintenance.MaintenanceMetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class SensorPredictiveMaintenance::_Internal {
 public:
};

SensorPredictiveMaintenance::SensorPredictiveMaintenance(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.sensor_management.SensorPredictiveMaintenance)
}
inline PROTOBUF_NDEBUG_INLINE SensorPredictiveMaintenance::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::sensor_management::SensorPredictiveMaintenance& from_msg)
      : maintenance_metadata_{visibility, arena, from.maintenance_metadata_},
        maintenance_id_(arena, from.maintenance_id_),
        sensor_id_(arena, from.sensor_id_),
        model_id_(arena, from.model_id_),
        prediction_timestamp_(arena, from.prediction_timestamp_),
        recommended_action_(arena, from.recommended_action_),
        next_analysis_due_(arena, from.next_analysis_due_),
        _cached_size_{0} {}

SensorPredictiveMaintenance::SensorPredictiveMaintenance(
    ::google::protobuf::Arena* arena,
    const SensorPredictiveMaintenance& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SensorPredictiveMaintenance* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, confidence_score_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, confidence_score_),
           offsetof(Impl_, predicted_failure_) -
               offsetof(Impl_, confidence_score_) +
               sizeof(Impl_::predicted_failure_));

  // @@protoc_insertion_point(copy_constructor:seigr.sensor_management.SensorPredictiveMaintenance)
}
inline PROTOBUF_NDEBUG_INLINE SensorPredictiveMaintenance::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : maintenance_metadata_{visibility, arena},
        maintenance_id_(arena),
        sensor_id_(arena),
        model_id_(arena),
        prediction_timestamp_(arena),
        recommended_action_(arena),
        next_analysis_due_(arena),
        _cached_size_{0} {}

inline void SensorPredictiveMaintenance::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, confidence_score_),
           0,
           offsetof(Impl_, predicted_failure_) -
               offsetof(Impl_, confidence_score_) +
               sizeof(Impl_::predicted_failure_));
}
SensorPredictiveMaintenance::~SensorPredictiveMaintenance() {
  // @@protoc_insertion_point(destructor:seigr.sensor_management.SensorPredictiveMaintenance)
  SharedDtor(*this);
}
inline void SensorPredictiveMaintenance::SharedDtor(MessageLite& self) {
  SensorPredictiveMaintenance& this_ = static_cast<SensorPredictiveMaintenance&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.maintenance_id_.Destroy();
  this_._impl_.sensor_id_.Destroy();
  this_._impl_.model_id_.Destroy();
  this_._impl_.prediction_timestamp_.Destroy();
  this_._impl_.recommended_action_.Destroy();
  this_._impl_.next_analysis_due_.Destroy();
  this_._impl_.~Impl_();
}

inline void* SensorPredictiveMaintenance::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SensorPredictiveMaintenance(arena);
}
constexpr auto SensorPredictiveMaintenance::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SensorPredictiveMaintenance, _impl_.maintenance_metadata_) +
          decltype(SensorPredictiveMaintenance::_impl_.maintenance_metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SensorPredictiveMaintenance, _impl_.maintenance_metadata_) +
          decltype(SensorPredictiveMaintenance::_impl_.maintenance_metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(SensorPredictiveMaintenance), alignof(SensorPredictiveMaintenance), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SensorPredictiveMaintenance::PlacementNew_,
                                 sizeof(SensorPredictiveMaintenance),
                                 alignof(SensorPredictiveMaintenance));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SensorPredictiveMaintenance::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SensorPredictiveMaintenance_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SensorPredictiveMaintenance::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SensorPredictiveMaintenance>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SensorPredictiveMaintenance::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SensorPredictiveMaintenance>(), &SensorPredictiveMaintenance::ByteSizeLong,
            &SensorPredictiveMaintenance::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SensorPredictiveMaintenance, _impl_._cached_size_),
        false,
    },
    &SensorPredictiveMaintenance::kDescriptorMethods,
    &descriptor_table_sensor_5fmanagement_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SensorPredictiveMaintenance::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 1, 174, 2> SensorPredictiveMaintenance::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::sensor_management::SensorPredictiveMaintenance>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string maintenance_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SensorPredictiveMaintenance, _impl_.maintenance_id_)}},
    // string sensor_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SensorPredictiveMaintenance, _impl_.sensor_id_)}},
    // string model_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(SensorPredictiveMaintenance, _impl_.model_id_)}},
    // string prediction_timestamp = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(SensorPredictiveMaintenance, _impl_.prediction_timestamp_)}},
    // bool predicted_failure = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SensorPredictiveMaintenance, _impl_.predicted_failure_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(SensorPredictiveMaintenance, _impl_.predicted_failure_)}},
    // double confidence_score = 6;
    {::_pbi::TcParser::FastF64S1,
     {49, 63, 0, PROTOBUF_FIELD_OFFSET(SensorPredictiveMaintenance, _impl_.confidence_score_)}},
    // string recommended_action = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(SensorPredictiveMaintenance, _impl_.recommended_action_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string next_analysis_due = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(SensorPredictiveMaintenance, _impl_.next_analysis_due_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string maintenance_id = 1;
    {PROTOBUF_FIELD_OFFSET(SensorPredictiveMaintenance, _impl_.maintenance_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string sensor_id = 2;
    {PROTOBUF_FIELD_OFFSET(SensorPredictiveMaintenance, _impl_.sensor_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string model_id = 3;
    {PROTOBUF_FIELD_OFFSET(SensorPredictiveMaintenance, _impl_.model_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string prediction_timestamp = 4;
    {PROTOBUF_FIELD_OFFSET(SensorPredictiveMaintenance, _impl_.prediction_timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool predicted_failure = 5;
    {PROTOBUF_FIELD_OFFSET(SensorPredictiveMaintenance, _impl_.predicted_failure_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // double confidence_score = 6;
    {PROTOBUF_FIELD_OFFSET(SensorPredictiveMaintenance, _impl_.confidence_score_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // string recommended_action = 7;
    {PROTOBUF_FIELD_OFFSET(SensorPredictiveMaintenance, _impl_.recommended_action_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> maintenance_metadata = 8;
    {PROTOBUF_FIELD_OFFSET(SensorPredictiveMaintenance, _impl_.maintenance_metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string next_analysis_due = 9;
    {PROTOBUF_FIELD_OFFSET(SensorPredictiveMaintenance, _impl_.next_analysis_due_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(SensorPredictiveMaintenance()._impl_.maintenance_metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\63\16\11\10\24\0\0\22\24\21\0\0\0\0\0\0"
    "seigr.sensor_management.SensorPredictiveMaintenance"
    "maintenance_id"
    "sensor_id"
    "model_id"
    "prediction_timestamp"
    "recommended_action"
    "maintenance_metadata"
    "next_analysis_due"
  }},
};

PROTOBUF_NOINLINE void SensorPredictiveMaintenance::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.sensor_management.SensorPredictiveMaintenance)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.maintenance_metadata_.Clear();
  _impl_.maintenance_id_.ClearToEmpty();
  _impl_.sensor_id_.ClearToEmpty();
  _impl_.model_id_.ClearToEmpty();
  _impl_.prediction_timestamp_.ClearToEmpty();
  _impl_.recommended_action_.ClearToEmpty();
  _impl_.next_analysis_due_.ClearToEmpty();
  ::memset(&_impl_.confidence_score_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.predicted_failure_) -
      reinterpret_cast<char*>(&_impl_.confidence_score_)) + sizeof(_impl_.predicted_failure_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SensorPredictiveMaintenance::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SensorPredictiveMaintenance& this_ = static_cast<const SensorPredictiveMaintenance&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SensorPredictiveMaintenance::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SensorPredictiveMaintenance& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.sensor_management.SensorPredictiveMaintenance)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string maintenance_id = 1;
          if (!this_._internal_maintenance_id().empty()) {
            const std::string& _s = this_._internal_maintenance_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorPredictiveMaintenance.maintenance_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string sensor_id = 2;
          if (!this_._internal_sensor_id().empty()) {
            const std::string& _s = this_._internal_sensor_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorPredictiveMaintenance.sensor_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string model_id = 3;
          if (!this_._internal_model_id().empty()) {
            const std::string& _s = this_._internal_model_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorPredictiveMaintenance.model_id");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string prediction_timestamp = 4;
          if (!this_._internal_prediction_timestamp().empty()) {
            const std::string& _s = this_._internal_prediction_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorPredictiveMaintenance.prediction_timestamp");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // bool predicted_failure = 5;
          if (this_._internal_predicted_failure() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                5, this_._internal_predicted_failure(), target);
          }

          // double confidence_score = 6;
          if (::absl::bit_cast<::uint64_t>(this_._internal_confidence_score()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                6, this_._internal_confidence_score(), target);
          }

          // string recommended_action = 7;
          if (!this_._internal_recommended_action().empty()) {
            const std::string& _s = this_._internal_recommended_action();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorPredictiveMaintenance.recommended_action");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // map<string, string> maintenance_metadata = 8;
          if (!this_._internal_maintenance_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_maintenance_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    8, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorPredictiveMaintenance.maintenance_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorPredictiveMaintenance.maintenance_metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    8, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorPredictiveMaintenance.maintenance_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorPredictiveMaintenance.maintenance_metadata");
              }
            }
          }

          // string next_analysis_due = 9;
          if (!this_._internal_next_analysis_due().empty()) {
            const std::string& _s = this_._internal_next_analysis_due();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorPredictiveMaintenance.next_analysis_due");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.sensor_management.SensorPredictiveMaintenance)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SensorPredictiveMaintenance::ByteSizeLong(const MessageLite& base) {
          const SensorPredictiveMaintenance& this_ = static_cast<const SensorPredictiveMaintenance&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SensorPredictiveMaintenance::ByteSizeLong() const {
          const SensorPredictiveMaintenance& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.sensor_management.SensorPredictiveMaintenance)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> maintenance_metadata = 8;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_maintenance_metadata_size());
              for (const auto& entry : this_._internal_maintenance_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string maintenance_id = 1;
            if (!this_._internal_maintenance_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_maintenance_id());
            }
            // string sensor_id = 2;
            if (!this_._internal_sensor_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_sensor_id());
            }
            // string model_id = 3;
            if (!this_._internal_model_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_model_id());
            }
            // string prediction_timestamp = 4;
            if (!this_._internal_prediction_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_prediction_timestamp());
            }
            // string recommended_action = 7;
            if (!this_._internal_recommended_action().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_recommended_action());
            }
            // string next_analysis_due = 9;
            if (!this_._internal_next_analysis_due().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_next_analysis_due());
            }
            // double confidence_score = 6;
            if (::absl::bit_cast<::uint64_t>(this_._internal_confidence_score()) != 0) {
              total_size += 9;
            }
            // bool predicted_failure = 5;
            if (this_._internal_predicted_failure() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SensorPredictiveMaintenance::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SensorPredictiveMaintenance*>(&to_msg);
  auto& from = static_cast<const SensorPredictiveMaintenance&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.sensor_management.SensorPredictiveMaintenance)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.maintenance_metadata_.MergeFrom(from._impl_.maintenance_metadata_);
  if (!from._internal_maintenance_id().empty()) {
    _this->_internal_set_maintenance_id(from._internal_maintenance_id());
  }
  if (!from._internal_sensor_id().empty()) {
    _this->_internal_set_sensor_id(from._internal_sensor_id());
  }
  if (!from._internal_model_id().empty()) {
    _this->_internal_set_model_id(from._internal_model_id());
  }
  if (!from._internal_prediction_timestamp().empty()) {
    _this->_internal_set_prediction_timestamp(from._internal_prediction_timestamp());
  }
  if (!from._internal_recommended_action().empty()) {
    _this->_internal_set_recommended_action(from._internal_recommended_action());
  }
  if (!from._internal_next_analysis_due().empty()) {
    _this->_internal_set_next_analysis_due(from._internal_next_analysis_due());
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_confidence_score()) != 0) {
    _this->_impl_.confidence_score_ = from._impl_.confidence_score_;
  }
  if (from._internal_predicted_failure() != 0) {
    _this->_impl_.predicted_failure_ = from._impl_.predicted_failure_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SensorPredictiveMaintenance::CopyFrom(const SensorPredictiveMaintenance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.sensor_management.SensorPredictiveMaintenance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SensorPredictiveMaintenance::InternalSwap(SensorPredictiveMaintenance* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.maintenance_metadata_.InternalSwap(&other->_impl_.maintenance_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.maintenance_id_, &other->_impl_.maintenance_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sensor_id_, &other->_impl_.sensor_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.model_id_, &other->_impl_.model_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.prediction_timestamp_, &other->_impl_.prediction_timestamp_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.recommended_action_, &other->_impl_.recommended_action_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.next_analysis_due_, &other->_impl_.next_analysis_due_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SensorPredictiveMaintenance, _impl_.predicted_failure_)
      + sizeof(SensorPredictiveMaintenance::_impl_.predicted_failure_)
      - PROTOBUF_FIELD_OFFSET(SensorPredictiveMaintenance, _impl_.confidence_score_)>(
          reinterpret_cast<char*>(&_impl_.confidence_score_),
          reinterpret_cast<char*>(&other->_impl_.confidence_score_));
}

::google::protobuf::Metadata SensorPredictiveMaintenance::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              SensorNetworkSummary_SensorCountsByTypeEntry_DoNotUse::SensorNetworkSummary_SensorCountsByTypeEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              SensorNetworkSummary_SensorCountsByTypeEntry_DoNotUse::SensorNetworkSummary_SensorCountsByTypeEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              SensorNetworkSummary_SensorCountsByTypeEntry_DoNotUse::SensorNetworkSummary_SensorCountsByTypeEntry_DoNotUse() : SuperType() {}
              SensorNetworkSummary_SensorCountsByTypeEntry_DoNotUse::SensorNetworkSummary_SensorCountsByTypeEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* SensorNetworkSummary_SensorCountsByTypeEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) SensorNetworkSummary_SensorCountsByTypeEntry_DoNotUse(arena);
              }
              constexpr auto SensorNetworkSummary_SensorCountsByTypeEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SensorNetworkSummary_SensorCountsByTypeEntry_DoNotUse),
                                                          alignof(SensorNetworkSummary_SensorCountsByTypeEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull SensorNetworkSummary_SensorCountsByTypeEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_SensorNetworkSummary_SensorCountsByTypeEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &SensorNetworkSummary_SensorCountsByTypeEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<SensorNetworkSummary_SensorCountsByTypeEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &SensorNetworkSummary_SensorCountsByTypeEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &SensorNetworkSummary_SensorCountsByTypeEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(SensorNetworkSummary_SensorCountsByTypeEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &SensorNetworkSummary_SensorCountsByTypeEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_sensor_5fmanagement_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* SensorNetworkSummary_SensorCountsByTypeEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 80, 2> SensorNetworkSummary_SensorCountsByTypeEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SensorNetworkSummary_SensorCountsByTypeEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::sensor_management::SensorNetworkSummary_SensorCountsByTypeEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 value = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SensorNetworkSummary_SensorCountsByTypeEntry_DoNotUse, _impl_.value_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SensorNetworkSummary_SensorCountsByTypeEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SensorNetworkSummary_SensorCountsByTypeEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(SensorNetworkSummary_SensorCountsByTypeEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 value = 2;
    {PROTOBUF_FIELD_OFFSET(SensorNetworkSummary_SensorCountsByTypeEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\104\3\0\0\0\0\0\0"
    "seigr.sensor_management.SensorNetworkSummary.SensorCountsByTypeEntry"
    "key"
  }},
};

// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              SensorNetworkSummary_SummaryMetadataEntry_DoNotUse::SensorNetworkSummary_SummaryMetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              SensorNetworkSummary_SummaryMetadataEntry_DoNotUse::SensorNetworkSummary_SummaryMetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              SensorNetworkSummary_SummaryMetadataEntry_DoNotUse::SensorNetworkSummary_SummaryMetadataEntry_DoNotUse() : SuperType() {}
              SensorNetworkSummary_SummaryMetadataEntry_DoNotUse::SensorNetworkSummary_SummaryMetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* SensorNetworkSummary_SummaryMetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) SensorNetworkSummary_SummaryMetadataEntry_DoNotUse(arena);
              }
              constexpr auto SensorNetworkSummary_SummaryMetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SensorNetworkSummary_SummaryMetadataEntry_DoNotUse),
                                                          alignof(SensorNetworkSummary_SummaryMetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull SensorNetworkSummary_SummaryMetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_SensorNetworkSummary_SummaryMetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &SensorNetworkSummary_SummaryMetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<SensorNetworkSummary_SummaryMetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &SensorNetworkSummary_SummaryMetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &SensorNetworkSummary_SummaryMetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(SensorNetworkSummary_SummaryMetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &SensorNetworkSummary_SummaryMetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_sensor_5fmanagement_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* SensorNetworkSummary_SummaryMetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 82, 2> SensorNetworkSummary_SummaryMetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SensorNetworkSummary_SummaryMetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::sensor_management::SensorNetworkSummary_SummaryMetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SensorNetworkSummary_SummaryMetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SensorNetworkSummary_SummaryMetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(SensorNetworkSummary_SummaryMetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(SensorNetworkSummary_SummaryMetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\101\3\5\0\0\0\0\0"
    "seigr.sensor_management.SensorNetworkSummary.SummaryMetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class SensorNetworkSummary::_Internal {
 public:
};

SensorNetworkSummary::SensorNetworkSummary(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.sensor_management.SensorNetworkSummary)
}
inline PROTOBUF_NDEBUG_INLINE SensorNetworkSummary::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::sensor_management::SensorNetworkSummary& from_msg)
      : sensor_counts_by_type_{visibility, arena, from.sensor_counts_by_type_},
        summary_metadata_{visibility, arena, from.summary_metadata_},
        network_id_(arena, from.network_id_),
        last_updated_(arena, from.last_updated_),
        _cached_size_{0} {}

SensorNetworkSummary::SensorNetworkSummary(
    ::google::protobuf::Arena* arena,
    const SensorNetworkSummary& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SensorNetworkSummary* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_sensors_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, total_sensors_),
           offsetof(Impl_, sensors_with_alerts_) -
               offsetof(Impl_, total_sensors_) +
               sizeof(Impl_::sensors_with_alerts_));

  // @@protoc_insertion_point(copy_constructor:seigr.sensor_management.SensorNetworkSummary)
}
inline PROTOBUF_NDEBUG_INLINE SensorNetworkSummary::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : sensor_counts_by_type_{visibility, arena},
        summary_metadata_{visibility, arena},
        network_id_(arena),
        last_updated_(arena),
        _cached_size_{0} {}

inline void SensorNetworkSummary::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_sensors_),
           0,
           offsetof(Impl_, sensors_with_alerts_) -
               offsetof(Impl_, total_sensors_) +
               sizeof(Impl_::sensors_with_alerts_));
}
SensorNetworkSummary::~SensorNetworkSummary() {
  // @@protoc_insertion_point(destructor:seigr.sensor_management.SensorNetworkSummary)
  SharedDtor(*this);
}
inline void SensorNetworkSummary::SharedDtor(MessageLite& self) {
  SensorNetworkSummary& this_ = static_cast<SensorNetworkSummary&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.network_id_.Destroy();
  this_._impl_.last_updated_.Destroy();
  this_._impl_.~Impl_();
}

inline void* SensorNetworkSummary::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SensorNetworkSummary(arena);
}
constexpr auto SensorNetworkSummary::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SensorNetworkSummary, _impl_.sensor_counts_by_type_) +
          decltype(SensorNetworkSummary::_impl_.sensor_counts_by_type_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SensorNetworkSummary, _impl_.sensor_counts_by_type_) +
          decltype(SensorNetworkSummary::_impl_.sensor_counts_by_type_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SensorNetworkSummary, _impl_.summary_metadata_) +
          decltype(SensorNetworkSummary::_impl_.summary_metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SensorNetworkSummary, _impl_.summary_metadata_) +
          decltype(SensorNetworkSummary::_impl_.summary_metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(SensorNetworkSummary), alignof(SensorNetworkSummary), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SensorNetworkSummary::PlacementNew_,
                                 sizeof(SensorNetworkSummary),
                                 alignof(SensorNetworkSummary));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SensorNetworkSummary::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SensorNetworkSummary_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SensorNetworkSummary::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SensorNetworkSummary>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SensorNetworkSummary::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SensorNetworkSummary>(), &SensorNetworkSummary::ByteSizeLong,
            &SensorNetworkSummary::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SensorNetworkSummary, _impl_._cached_size_),
        false,
    },
    &SensorNetworkSummary::kDescriptorMethods,
    &descriptor_table_sensor_5fmanagement_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SensorNetworkSummary::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 2, 120, 2> SensorNetworkSummary::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::sensor_management::SensorNetworkSummary>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string network_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SensorNetworkSummary, _impl_.network_id_)}},
    // int32 total_sensors = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SensorNetworkSummary, _impl_.total_sensors_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SensorNetworkSummary, _impl_.total_sensors_)}},
    // int32 active_sensors = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SensorNetworkSummary, _impl_.active_sensors_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(SensorNetworkSummary, _impl_.active_sensors_)}},
    // int32 inactive_sensors = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SensorNetworkSummary, _impl_.inactive_sensors_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(SensorNetworkSummary, _impl_.inactive_sensors_)}},
    // int32 sensors_with_alerts = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SensorNetworkSummary, _impl_.sensors_with_alerts_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(SensorNetworkSummary, _impl_.sensors_with_alerts_)}},
    // string last_updated = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(SensorNetworkSummary, _impl_.last_updated_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string network_id = 1;
    {PROTOBUF_FIELD_OFFSET(SensorNetworkSummary, _impl_.network_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 total_sensors = 2;
    {PROTOBUF_FIELD_OFFSET(SensorNetworkSummary, _impl_.total_sensors_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 active_sensors = 3;
    {PROTOBUF_FIELD_OFFSET(SensorNetworkSummary, _impl_.active_sensors_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 inactive_sensors = 4;
    {PROTOBUF_FIELD_OFFSET(SensorNetworkSummary, _impl_.inactive_sensors_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 sensors_with_alerts = 5;
    {PROTOBUF_FIELD_OFFSET(SensorNetworkSummary, _impl_.sensors_with_alerts_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string last_updated = 6;
    {PROTOBUF_FIELD_OFFSET(SensorNetworkSummary, _impl_.last_updated_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, int32> sensor_counts_by_type = 7;
    {PROTOBUF_FIELD_OFFSET(SensorNetworkSummary, _impl_.sensor_counts_by_type_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<string, string> summary_metadata = 8;
    {PROTOBUF_FIELD_OFFSET(SensorNetworkSummary, _impl_.summary_metadata_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(SensorNetworkSummary()._impl_.sensor_counts_by_type_)>(
        1, 0, 0, 9,
        5)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(SensorNetworkSummary()._impl_.summary_metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\54\12\0\0\0\0\14\25\20\0\0\0\0\0\0\0"
    "seigr.sensor_management.SensorNetworkSummary"
    "network_id"
    "last_updated"
    "sensor_counts_by_type"
    "summary_metadata"
  }},
};

PROTOBUF_NOINLINE void SensorNetworkSummary::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.sensor_management.SensorNetworkSummary)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sensor_counts_by_type_.Clear();
  _impl_.summary_metadata_.Clear();
  _impl_.network_id_.ClearToEmpty();
  _impl_.last_updated_.ClearToEmpty();
  ::memset(&_impl_.total_sensors_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.sensors_with_alerts_) -
      reinterpret_cast<char*>(&_impl_.total_sensors_)) + sizeof(_impl_.sensors_with_alerts_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SensorNetworkSummary::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SensorNetworkSummary& this_ = static_cast<const SensorNetworkSummary&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SensorNetworkSummary::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SensorNetworkSummary& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.sensor_management.SensorNetworkSummary)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string network_id = 1;
          if (!this_._internal_network_id().empty()) {
            const std::string& _s = this_._internal_network_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorNetworkSummary.network_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // int32 total_sensors = 2;
          if (this_._internal_total_sensors() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_total_sensors(), target);
          }

          // int32 active_sensors = 3;
          if (this_._internal_active_sensors() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_active_sensors(), target);
          }

          // int32 inactive_sensors = 4;
          if (this_._internal_inactive_sensors() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<4>(
                    stream, this_._internal_inactive_sensors(), target);
          }

          // int32 sensors_with_alerts = 5;
          if (this_._internal_sensors_with_alerts() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<5>(
                    stream, this_._internal_sensors_with_alerts(), target);
          }

          // string last_updated = 6;
          if (!this_._internal_last_updated().empty()) {
            const std::string& _s = this_._internal_last_updated();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorNetworkSummary.last_updated");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // map<string, int32> sensor_counts_by_type = 7;
          if (!this_._internal_sensor_counts_by_type().empty()) {
            using MapType = ::google::protobuf::Map<std::string, ::int32_t>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, ::int32_t,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_INT32>;
            const auto& field = this_._internal_sensor_counts_by_type();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorNetworkSummary.sensor_counts_by_type");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorNetworkSummary.sensor_counts_by_type");
              }
            }
          }

          // map<string, string> summary_metadata = 8;
          if (!this_._internal_summary_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_summary_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    8, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorNetworkSummary.summary_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorNetworkSummary.summary_metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    8, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorNetworkSummary.summary_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.sensor_management.SensorNetworkSummary.summary_metadata");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.sensor_management.SensorNetworkSummary)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SensorNetworkSummary::ByteSizeLong(const MessageLite& base) {
          const SensorNetworkSummary& this_ = static_cast<const SensorNetworkSummary&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SensorNetworkSummary::ByteSizeLong() const {
          const SensorNetworkSummary& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.sensor_management.SensorNetworkSummary)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, int32> sensor_counts_by_type = 7;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_sensor_counts_by_type_size());
              for (const auto& entry : this_._internal_sensor_counts_by_type()) {
                total_size += _pbi::MapEntryFuncs<std::string, ::int32_t,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_INT32>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // map<string, string> summary_metadata = 8;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_summary_metadata_size());
              for (const auto& entry : this_._internal_summary_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string network_id = 1;
            if (!this_._internal_network_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_network_id());
            }
            // string last_updated = 6;
            if (!this_._internal_last_updated().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_last_updated());
            }
            // int32 total_sensors = 2;
            if (this_._internal_total_sensors() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_total_sensors());
            }
            // int32 active_sensors = 3;
            if (this_._internal_active_sensors() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_active_sensors());
            }
            // int32 inactive_sensors = 4;
            if (this_._internal_inactive_sensors() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_inactive_sensors());
            }
            // int32 sensors_with_alerts = 5;
            if (this_._internal_sensors_with_alerts() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_sensors_with_alerts());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SensorNetworkSummary::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SensorNetworkSummary*>(&to_msg);
  auto& from = static_cast<const SensorNetworkSummary&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.sensor_management.SensorNetworkSummary)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.sensor_counts_by_type_.MergeFrom(from._impl_.sensor_counts_by_type_);
  _this->_impl_.summary_metadata_.MergeFrom(from._impl_.summary_metadata_);
  if (!from._internal_network_id().empty()) {
    _this->_internal_set_network_id(from._internal_network_id());
  }
  if (!from._internal_last_updated().empty()) {
    _this->_internal_set_last_updated(from._internal_last_updated());
  }
  if (from._internal_total_sensors() != 0) {
    _this->_impl_.total_sensors_ = from._impl_.total_sensors_;
  }
  if (from._internal_active_sensors() != 0) {
    _this->_impl_.active_sensors_ = from._impl_.active_sensors_;
  }
  if (from._internal_inactive_sensors() != 0) {
    _this->_impl_.inactive_sensors_ = from._impl_.inactive_sensors_;
  }
  if (from._internal_sensors_with_alerts() != 0) {
    _this->_impl_.sensors_with_alerts_ = from._impl_.sensors_with_alerts_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SensorNetworkSummary::CopyFrom(const SensorNetworkSummary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.sensor_management.SensorNetworkSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SensorNetworkSummary::InternalSwap(SensorNetworkSummary* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.sensor_counts_by_type_.InternalSwap(&other->_impl_.sensor_counts_by_type_);
  _impl_.summary_metadata_.InternalSwap(&other->_impl_.summary_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.network_id_, &other->_impl_.network_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.last_updated_, &other->_impl_.last_updated_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SensorNetworkSummary, _impl_.sensors_with_alerts_)
      + sizeof(SensorNetworkSummary::_impl_.sensors_with_alerts_)
      - PROTOBUF_FIELD_OFFSET(SensorNetworkSummary, _impl_.total_sensors_)>(
          reinterpret_cast<char*>(&_impl_.total_sensors_),
          reinterpret_cast<char*>(&other->_impl_.total_sensors_));
}

::google::protobuf::Metadata SensorNetworkSummary::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace sensor_management
}  // namespace seigr
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_sensor_5fmanagement_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
