// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: audit.proto
// Protobuf C++ Version: 5.29.2

#include "audit.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace seigr {
namespace audit {
              template <typename>
PROTOBUF_CONSTEXPR AuditTrail_QueryMetadataEntry_DoNotUse::AuditTrail_QueryMetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : AuditTrail_QueryMetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : AuditTrail_QueryMetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct AuditTrail_QueryMetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AuditTrail_QueryMetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AuditTrail_QueryMetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    AuditTrail_QueryMetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AuditTrail_QueryMetadataEntry_DoNotUseDefaultTypeInternal _AuditTrail_QueryMetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR AuditEntry_MetadataEntry_DoNotUse::AuditEntry_MetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : AuditEntry_MetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : AuditEntry_MetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct AuditEntry_MetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AuditEntry_MetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AuditEntry_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    AuditEntry_MetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AuditEntry_MetadataEntry_DoNotUseDefaultTypeInternal _AuditEntry_MetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR AuditConfig_MetadataEntry_DoNotUse::AuditConfig_MetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : AuditConfig_MetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : AuditConfig_MetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct AuditConfig_MetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AuditConfig_MetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AuditConfig_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    AuditConfig_MetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AuditConfig_MetadataEntry_DoNotUseDefaultTypeInternal _AuditConfig_MetadataEntry_DoNotUse_default_instance_;

inline constexpr AuditEntry::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : metadata_{},
        audit_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        user_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        resource_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        outcome_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        action_{static_cast< ::seigr::audit::AuditActionType >(0)},
        severity_{static_cast< ::seigr::audit::AuditSeverity >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AuditEntry::AuditEntry(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AuditEntryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AuditEntryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AuditEntryDefaultTypeInternal() {}
  union {
    AuditEntry _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AuditEntryDefaultTypeInternal _AuditEntry_default_instance_;

inline constexpr AuditConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : metadata_{},
        logging_level_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        retention_days_{0},
        enable_hash_verification_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AuditConfig::AuditConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AuditConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AuditConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AuditConfigDefaultTypeInternal() {}
  union {
    AuditConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AuditConfigDefaultTypeInternal _AuditConfig_default_instance_;

inline constexpr AuditTrail::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : entries_{},
        query_metadata_{},
        trail_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        generated_at_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AuditTrail::AuditTrail(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AuditTrailDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AuditTrailDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AuditTrailDefaultTypeInternal() {}
  union {
    AuditTrail _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AuditTrailDefaultTypeInternal _AuditTrail_default_instance_;
}  // namespace audit
}  // namespace seigr
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_audit_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_audit_2eproto = nullptr;
const ::uint32_t
    TableStruct_audit_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::seigr::audit::AuditEntry_MetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::audit::AuditEntry_MetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::audit::AuditEntry_MetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::audit::AuditEntry_MetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::audit::AuditEntry, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::audit::AuditEntry, _impl_.audit_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::audit::AuditEntry, _impl_.user_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::audit::AuditEntry, _impl_.resource_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::audit::AuditEntry, _impl_.action_),
        PROTOBUF_FIELD_OFFSET(::seigr::audit::AuditEntry, _impl_.severity_),
        PROTOBUF_FIELD_OFFSET(::seigr::audit::AuditEntry, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::seigr::audit::AuditEntry, _impl_.outcome_),
        PROTOBUF_FIELD_OFFSET(::seigr::audit::AuditEntry, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::audit::AuditEntry, _impl_.hash_),
        PROTOBUF_FIELD_OFFSET(::seigr::audit::AuditTrail_QueryMetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::audit::AuditTrail_QueryMetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::audit::AuditTrail_QueryMetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::audit::AuditTrail_QueryMetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::audit::AuditTrail, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::audit::AuditTrail, _impl_.trail_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::audit::AuditTrail, _impl_.entries_),
        PROTOBUF_FIELD_OFFSET(::seigr::audit::AuditTrail, _impl_.query_metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::audit::AuditTrail, _impl_.generated_at_),
        PROTOBUF_FIELD_OFFSET(::seigr::audit::AuditConfig_MetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::audit::AuditConfig_MetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::audit::AuditConfig_MetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::audit::AuditConfig_MetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::audit::AuditConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::audit::AuditConfig, _impl_.retention_days_),
        PROTOBUF_FIELD_OFFSET(::seigr::audit::AuditConfig, _impl_.logging_level_),
        PROTOBUF_FIELD_OFFSET(::seigr::audit::AuditConfig, _impl_.enable_hash_verification_),
        PROTOBUF_FIELD_OFFSET(::seigr::audit::AuditConfig, _impl_.metadata_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::seigr::audit::AuditEntry_MetadataEntry_DoNotUse)},
        {12, -1, -1, sizeof(::seigr::audit::AuditEntry)},
        {29, 39, -1, sizeof(::seigr::audit::AuditTrail_QueryMetadataEntry_DoNotUse)},
        {41, -1, -1, sizeof(::seigr::audit::AuditTrail)},
        {53, 63, -1, sizeof(::seigr::audit::AuditConfig_MetadataEntry_DoNotUse)},
        {65, -1, -1, sizeof(::seigr::audit::AuditConfig)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::seigr::audit::_AuditEntry_MetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::audit::_AuditEntry_default_instance_._instance,
    &::seigr::audit::_AuditTrail_QueryMetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::audit::_AuditTrail_default_instance_._instance,
    &::seigr::audit::_AuditConfig_MetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::audit::_AuditConfig_default_instance_._instance,
};
const char descriptor_table_protodef_audit_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\013audit.proto\022\013seigr.audit\"\274\002\n\nAuditEntr"
    "y\022\020\n\010audit_id\030\001 \001(\t\022\017\n\007user_id\030\002 \001(\t\022\023\n\013"
    "resource_id\030\003 \001(\t\022,\n\006action\030\004 \001(\0162\034.seig"
    "r.audit.AuditActionType\022,\n\010severity\030\005 \001("
    "\0162\032.seigr.audit.AuditSeverity\022\021\n\ttimesta"
    "mp\030\006 \001(\t\022\017\n\007outcome\030\007 \001(\t\0227\n\010metadata\030\010 "
    "\003(\0132%.seigr.audit.AuditEntry.MetadataEnt"
    "ry\022\014\n\004hash\030\t \001(\t\032/\n\rMetadataEntry\022\013\n\003key"
    "\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\330\001\n\nAuditTrail"
    "\022\020\n\010trail_id\030\001 \001(\t\022(\n\007entries\030\002 \003(\0132\027.se"
    "igr.audit.AuditEntry\022B\n\016query_metadata\030\003"
    " \003(\0132*.seigr.audit.AuditTrail.QueryMetad"
    "ataEntry\022\024\n\014generated_at\030\004 \001(\t\0324\n\022QueryM"
    "etadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t"
    ":\0028\001\"\311\001\n\013AuditConfig\022\026\n\016retention_days\030\001"
    " \001(\005\022\025\n\rlogging_level\030\002 \001(\t\022 \n\030enable_ha"
    "sh_verification\030\003 \001(\010\0228\n\010metadata\030\004 \003(\0132"
    "&.seigr.audit.AuditConfig.MetadataEntry\032"
    "/\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002"
    " \001(\t:\0028\001*d\n\rAuditSeverity\022\034\n\030AUDIT_SEVER"
    "ITY_UNDEFINED\020\000\022\016\n\nAUDIT_INFO\020\001\022\021\n\rAUDIT"
    "_WARNING\020\002\022\022\n\016AUDIT_CRITICAL\020\003*\303\001\n\017Audit"
    "ActionType\022\032\n\026AUDIT_ACTION_UNDEFINED\020\000\022\027"
    "\n\023AUDIT_ACTION_CREATE\020\001\022\027\n\023AUDIT_ACTION_"
    "UPDATE\020\002\022\027\n\023AUDIT_ACTION_DELETE\020\003\022\027\n\023AUD"
    "IT_ACTION_ACCESS\020\004\022\027\n\023AUDIT_ACTION_EXPOR"
    "T\020\005\022\027\n\023AUDIT_ACTION_IMPORT\020\006b\006proto3"
};
static ::absl::once_flag descriptor_table_audit_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_audit_2eproto = {
    false,
    false,
    1076,
    descriptor_table_protodef_audit_2eproto,
    "audit.proto",
    &descriptor_table_audit_2eproto_once,
    nullptr,
    0,
    6,
    schemas,
    file_default_instances,
    TableStruct_audit_2eproto::offsets,
    file_level_enum_descriptors_audit_2eproto,
    file_level_service_descriptors_audit_2eproto,
};
namespace seigr {
namespace audit {
const ::google::protobuf::EnumDescriptor* AuditSeverity_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_audit_2eproto);
  return file_level_enum_descriptors_audit_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t AuditSeverity_internal_data_[] = {
    262144u, 0u, };
bool AuditSeverity_IsValid(int value) {
  return 0 <= value && value <= 3;
}
const ::google::protobuf::EnumDescriptor* AuditActionType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_audit_2eproto);
  return file_level_enum_descriptors_audit_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t AuditActionType_internal_data_[] = {
    458752u, 0u, };
bool AuditActionType_IsValid(int value) {
  return 0 <= value && value <= 6;
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              AuditEntry_MetadataEntry_DoNotUse::AuditEntry_MetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              AuditEntry_MetadataEntry_DoNotUse::AuditEntry_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              AuditEntry_MetadataEntry_DoNotUse::AuditEntry_MetadataEntry_DoNotUse() : SuperType() {}
              AuditEntry_MetadataEntry_DoNotUse::AuditEntry_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* AuditEntry_MetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) AuditEntry_MetadataEntry_DoNotUse(arena);
              }
              constexpr auto AuditEntry_MetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AuditEntry_MetadataEntry_DoNotUse),
                                                          alignof(AuditEntry_MetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull AuditEntry_MetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_AuditEntry_MetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &AuditEntry_MetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<AuditEntry_MetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &AuditEntry_MetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &AuditEntry_MetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(AuditEntry_MetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &AuditEntry_MetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_audit_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* AuditEntry_MetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 53, 2> AuditEntry_MetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AuditEntry_MetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::audit::AuditEntry_MetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AuditEntry_MetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AuditEntry_MetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(AuditEntry_MetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(AuditEntry_MetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\44\3\5\0\0\0\0\0"
    "seigr.audit.AuditEntry.MetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class AuditEntry::_Internal {
 public:
};

AuditEntry::AuditEntry(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.audit.AuditEntry)
}
inline PROTOBUF_NDEBUG_INLINE AuditEntry::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::audit::AuditEntry& from_msg)
      : metadata_{visibility, arena, from.metadata_},
        audit_id_(arena, from.audit_id_),
        user_id_(arena, from.user_id_),
        resource_id_(arena, from.resource_id_),
        timestamp_(arena, from.timestamp_),
        outcome_(arena, from.outcome_),
        hash_(arena, from.hash_),
        _cached_size_{0} {}

AuditEntry::AuditEntry(
    ::google::protobuf::Arena* arena,
    const AuditEntry& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AuditEntry* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, action_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, action_),
           offsetof(Impl_, severity_) -
               offsetof(Impl_, action_) +
               sizeof(Impl_::severity_));

  // @@protoc_insertion_point(copy_constructor:seigr.audit.AuditEntry)
}
inline PROTOBUF_NDEBUG_INLINE AuditEntry::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : metadata_{visibility, arena},
        audit_id_(arena),
        user_id_(arena),
        resource_id_(arena),
        timestamp_(arena),
        outcome_(arena),
        hash_(arena),
        _cached_size_{0} {}

inline void AuditEntry::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, action_),
           0,
           offsetof(Impl_, severity_) -
               offsetof(Impl_, action_) +
               sizeof(Impl_::severity_));
}
AuditEntry::~AuditEntry() {
  // @@protoc_insertion_point(destructor:seigr.audit.AuditEntry)
  SharedDtor(*this);
}
inline void AuditEntry::SharedDtor(MessageLite& self) {
  AuditEntry& this_ = static_cast<AuditEntry&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.audit_id_.Destroy();
  this_._impl_.user_id_.Destroy();
  this_._impl_.resource_id_.Destroy();
  this_._impl_.timestamp_.Destroy();
  this_._impl_.outcome_.Destroy();
  this_._impl_.hash_.Destroy();
  this_._impl_.~Impl_();
}

inline void* AuditEntry::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AuditEntry(arena);
}
constexpr auto AuditEntry::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(AuditEntry, _impl_.metadata_) +
          decltype(AuditEntry::_impl_.metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(AuditEntry, _impl_.metadata_) +
          decltype(AuditEntry::_impl_.metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(AuditEntry), alignof(AuditEntry), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&AuditEntry::PlacementNew_,
                                 sizeof(AuditEntry),
                                 alignof(AuditEntry));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AuditEntry::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AuditEntry_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AuditEntry::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AuditEntry>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AuditEntry::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AuditEntry>(), &AuditEntry::ByteSizeLong,
            &AuditEntry::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AuditEntry, _impl_._cached_size_),
        false,
    },
    &AuditEntry::kDescriptorMethods,
    &descriptor_table_audit_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AuditEntry::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 1, 93, 2> AuditEntry::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::audit::AuditEntry>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string audit_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AuditEntry, _impl_.audit_id_)}},
    // string user_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AuditEntry, _impl_.user_id_)}},
    // string resource_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(AuditEntry, _impl_.resource_id_)}},
    // .seigr.audit.AuditActionType action = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AuditEntry, _impl_.action_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(AuditEntry, _impl_.action_)}},
    // .seigr.audit.AuditSeverity severity = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AuditEntry, _impl_.severity_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(AuditEntry, _impl_.severity_)}},
    // string timestamp = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(AuditEntry, _impl_.timestamp_)}},
    // string outcome = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(AuditEntry, _impl_.outcome_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string hash = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(AuditEntry, _impl_.hash_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string audit_id = 1;
    {PROTOBUF_FIELD_OFFSET(AuditEntry, _impl_.audit_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string user_id = 2;
    {PROTOBUF_FIELD_OFFSET(AuditEntry, _impl_.user_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string resource_id = 3;
    {PROTOBUF_FIELD_OFFSET(AuditEntry, _impl_.resource_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.audit.AuditActionType action = 4;
    {PROTOBUF_FIELD_OFFSET(AuditEntry, _impl_.action_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .seigr.audit.AuditSeverity severity = 5;
    {PROTOBUF_FIELD_OFFSET(AuditEntry, _impl_.severity_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string timestamp = 6;
    {PROTOBUF_FIELD_OFFSET(AuditEntry, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string outcome = 7;
    {PROTOBUF_FIELD_OFFSET(AuditEntry, _impl_.outcome_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> metadata = 8;
    {PROTOBUF_FIELD_OFFSET(AuditEntry, _impl_.metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string hash = 9;
    {PROTOBUF_FIELD_OFFSET(AuditEntry, _impl_.hash_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(AuditEntry()._impl_.metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\26\10\7\13\0\0\11\7\10\4\0\0\0\0\0\0"
    "seigr.audit.AuditEntry"
    "audit_id"
    "user_id"
    "resource_id"
    "timestamp"
    "outcome"
    "metadata"
    "hash"
  }},
};

PROTOBUF_NOINLINE void AuditEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.audit.AuditEntry)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.metadata_.Clear();
  _impl_.audit_id_.ClearToEmpty();
  _impl_.user_id_.ClearToEmpty();
  _impl_.resource_id_.ClearToEmpty();
  _impl_.timestamp_.ClearToEmpty();
  _impl_.outcome_.ClearToEmpty();
  _impl_.hash_.ClearToEmpty();
  ::memset(&_impl_.action_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.severity_) -
      reinterpret_cast<char*>(&_impl_.action_)) + sizeof(_impl_.severity_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AuditEntry::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AuditEntry& this_ = static_cast<const AuditEntry&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AuditEntry::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AuditEntry& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.audit.AuditEntry)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string audit_id = 1;
          if (!this_._internal_audit_id().empty()) {
            const std::string& _s = this_._internal_audit_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.audit.AuditEntry.audit_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string user_id = 2;
          if (!this_._internal_user_id().empty()) {
            const std::string& _s = this_._internal_user_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.audit.AuditEntry.user_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string resource_id = 3;
          if (!this_._internal_resource_id().empty()) {
            const std::string& _s = this_._internal_resource_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.audit.AuditEntry.resource_id");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // .seigr.audit.AuditActionType action = 4;
          if (this_._internal_action() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                4, this_._internal_action(), target);
          }

          // .seigr.audit.AuditSeverity severity = 5;
          if (this_._internal_severity() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                5, this_._internal_severity(), target);
          }

          // string timestamp = 6;
          if (!this_._internal_timestamp().empty()) {
            const std::string& _s = this_._internal_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.audit.AuditEntry.timestamp");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // string outcome = 7;
          if (!this_._internal_outcome().empty()) {
            const std::string& _s = this_._internal_outcome();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.audit.AuditEntry.outcome");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // map<string, string> metadata = 8;
          if (!this_._internal_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    8, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.audit.AuditEntry.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.audit.AuditEntry.metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    8, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.audit.AuditEntry.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.audit.AuditEntry.metadata");
              }
            }
          }

          // string hash = 9;
          if (!this_._internal_hash().empty()) {
            const std::string& _s = this_._internal_hash();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.audit.AuditEntry.hash");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.audit.AuditEntry)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AuditEntry::ByteSizeLong(const MessageLite& base) {
          const AuditEntry& this_ = static_cast<const AuditEntry&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AuditEntry::ByteSizeLong() const {
          const AuditEntry& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.audit.AuditEntry)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> metadata = 8;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_metadata_size());
              for (const auto& entry : this_._internal_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string audit_id = 1;
            if (!this_._internal_audit_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_audit_id());
            }
            // string user_id = 2;
            if (!this_._internal_user_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_user_id());
            }
            // string resource_id = 3;
            if (!this_._internal_resource_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_resource_id());
            }
            // string timestamp = 6;
            if (!this_._internal_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_timestamp());
            }
            // string outcome = 7;
            if (!this_._internal_outcome().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_outcome());
            }
            // string hash = 9;
            if (!this_._internal_hash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_hash());
            }
            // .seigr.audit.AuditActionType action = 4;
            if (this_._internal_action() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_action());
            }
            // .seigr.audit.AuditSeverity severity = 5;
            if (this_._internal_severity() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_severity());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AuditEntry::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AuditEntry*>(&to_msg);
  auto& from = static_cast<const AuditEntry&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.audit.AuditEntry)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.metadata_.MergeFrom(from._impl_.metadata_);
  if (!from._internal_audit_id().empty()) {
    _this->_internal_set_audit_id(from._internal_audit_id());
  }
  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (!from._internal_resource_id().empty()) {
    _this->_internal_set_resource_id(from._internal_resource_id());
  }
  if (!from._internal_timestamp().empty()) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (!from._internal_outcome().empty()) {
    _this->_internal_set_outcome(from._internal_outcome());
  }
  if (!from._internal_hash().empty()) {
    _this->_internal_set_hash(from._internal_hash());
  }
  if (from._internal_action() != 0) {
    _this->_impl_.action_ = from._impl_.action_;
  }
  if (from._internal_severity() != 0) {
    _this->_impl_.severity_ = from._impl_.severity_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AuditEntry::CopyFrom(const AuditEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.audit.AuditEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AuditEntry::InternalSwap(AuditEntry* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.metadata_.InternalSwap(&other->_impl_.metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.audit_id_, &other->_impl_.audit_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_id_, &other->_impl_.user_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.resource_id_, &other->_impl_.resource_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.timestamp_, &other->_impl_.timestamp_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.outcome_, &other->_impl_.outcome_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hash_, &other->_impl_.hash_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AuditEntry, _impl_.severity_)
      + sizeof(AuditEntry::_impl_.severity_)
      - PROTOBUF_FIELD_OFFSET(AuditEntry, _impl_.action_)>(
          reinterpret_cast<char*>(&_impl_.action_),
          reinterpret_cast<char*>(&other->_impl_.action_));
}

::google::protobuf::Metadata AuditEntry::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              AuditTrail_QueryMetadataEntry_DoNotUse::AuditTrail_QueryMetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              AuditTrail_QueryMetadataEntry_DoNotUse::AuditTrail_QueryMetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              AuditTrail_QueryMetadataEntry_DoNotUse::AuditTrail_QueryMetadataEntry_DoNotUse() : SuperType() {}
              AuditTrail_QueryMetadataEntry_DoNotUse::AuditTrail_QueryMetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* AuditTrail_QueryMetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) AuditTrail_QueryMetadataEntry_DoNotUse(arena);
              }
              constexpr auto AuditTrail_QueryMetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AuditTrail_QueryMetadataEntry_DoNotUse),
                                                          alignof(AuditTrail_QueryMetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull AuditTrail_QueryMetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_AuditTrail_QueryMetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &AuditTrail_QueryMetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<AuditTrail_QueryMetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &AuditTrail_QueryMetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &AuditTrail_QueryMetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(AuditTrail_QueryMetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &AuditTrail_QueryMetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_audit_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* AuditTrail_QueryMetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 58, 2> AuditTrail_QueryMetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AuditTrail_QueryMetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::audit::AuditTrail_QueryMetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AuditTrail_QueryMetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AuditTrail_QueryMetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(AuditTrail_QueryMetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(AuditTrail_QueryMetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\51\3\5\0\0\0\0\0"
    "seigr.audit.AuditTrail.QueryMetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class AuditTrail::_Internal {
 public:
};

AuditTrail::AuditTrail(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.audit.AuditTrail)
}
inline PROTOBUF_NDEBUG_INLINE AuditTrail::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::audit::AuditTrail& from_msg)
      : entries_{visibility, arena, from.entries_},
        query_metadata_{visibility, arena, from.query_metadata_},
        trail_id_(arena, from.trail_id_),
        generated_at_(arena, from.generated_at_),
        _cached_size_{0} {}

AuditTrail::AuditTrail(
    ::google::protobuf::Arena* arena,
    const AuditTrail& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AuditTrail* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:seigr.audit.AuditTrail)
}
inline PROTOBUF_NDEBUG_INLINE AuditTrail::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : entries_{visibility, arena},
        query_metadata_{visibility, arena},
        trail_id_(arena),
        generated_at_(arena),
        _cached_size_{0} {}

inline void AuditTrail::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AuditTrail::~AuditTrail() {
  // @@protoc_insertion_point(destructor:seigr.audit.AuditTrail)
  SharedDtor(*this);
}
inline void AuditTrail::SharedDtor(MessageLite& self) {
  AuditTrail& this_ = static_cast<AuditTrail&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.trail_id_.Destroy();
  this_._impl_.generated_at_.Destroy();
  this_._impl_.~Impl_();
}

inline void* AuditTrail::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AuditTrail(arena);
}
constexpr auto AuditTrail::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(AuditTrail, _impl_.entries_) +
          decltype(AuditTrail::_impl_.entries_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(AuditTrail, _impl_.query_metadata_) +
          decltype(AuditTrail::_impl_.query_metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(AuditTrail, _impl_.query_metadata_) +
          decltype(AuditTrail::_impl_.query_metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(AuditTrail), alignof(AuditTrail), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&AuditTrail::PlacementNew_,
                                 sizeof(AuditTrail),
                                 alignof(AuditTrail));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AuditTrail::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AuditTrail_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AuditTrail::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AuditTrail>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AuditTrail::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AuditTrail>(), &AuditTrail::ByteSizeLong,
            &AuditTrail::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AuditTrail, _impl_._cached_size_),
        false,
    },
    &AuditTrail::kDescriptorMethods,
    &descriptor_table_audit_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AuditTrail::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 65, 2> AuditTrail::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::audit::AuditTrail>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string generated_at = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(AuditTrail, _impl_.generated_at_)}},
    // string trail_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AuditTrail, _impl_.trail_id_)}},
    // repeated .seigr.audit.AuditEntry entries = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AuditTrail, _impl_.entries_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string trail_id = 1;
    {PROTOBUF_FIELD_OFFSET(AuditTrail, _impl_.trail_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .seigr.audit.AuditEntry entries = 2;
    {PROTOBUF_FIELD_OFFSET(AuditTrail, _impl_.entries_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<string, string> query_metadata = 3;
    {PROTOBUF_FIELD_OFFSET(AuditTrail, _impl_.query_metadata_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string generated_at = 4;
    {PROTOBUF_FIELD_OFFSET(AuditTrail, _impl_.generated_at_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::seigr::audit::AuditEntry>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(AuditTrail()._impl_.query_metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\26\10\0\16\14\0\0\0"
    "seigr.audit.AuditTrail"
    "trail_id"
    "query_metadata"
    "generated_at"
  }},
};

PROTOBUF_NOINLINE void AuditTrail::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.audit.AuditTrail)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.entries_.Clear();
  _impl_.query_metadata_.Clear();
  _impl_.trail_id_.ClearToEmpty();
  _impl_.generated_at_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AuditTrail::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AuditTrail& this_ = static_cast<const AuditTrail&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AuditTrail::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AuditTrail& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.audit.AuditTrail)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string trail_id = 1;
          if (!this_._internal_trail_id().empty()) {
            const std::string& _s = this_._internal_trail_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.audit.AuditTrail.trail_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated .seigr.audit.AuditEntry entries = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_entries_size());
               i < n; i++) {
            const auto& repfield = this_._internal_entries().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // map<string, string> query_metadata = 3;
          if (!this_._internal_query_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_query_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    3, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.audit.AuditTrail.query_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.audit.AuditTrail.query_metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    3, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.audit.AuditTrail.query_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.audit.AuditTrail.query_metadata");
              }
            }
          }

          // string generated_at = 4;
          if (!this_._internal_generated_at().empty()) {
            const std::string& _s = this_._internal_generated_at();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.audit.AuditTrail.generated_at");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.audit.AuditTrail)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AuditTrail::ByteSizeLong(const MessageLite& base) {
          const AuditTrail& this_ = static_cast<const AuditTrail&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AuditTrail::ByteSizeLong() const {
          const AuditTrail& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.audit.AuditTrail)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .seigr.audit.AuditEntry entries = 2;
            {
              total_size += 1UL * this_._internal_entries_size();
              for (const auto& msg : this_._internal_entries()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // map<string, string> query_metadata = 3;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_query_metadata_size());
              for (const auto& entry : this_._internal_query_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string trail_id = 1;
            if (!this_._internal_trail_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_trail_id());
            }
            // string generated_at = 4;
            if (!this_._internal_generated_at().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_generated_at());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AuditTrail::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AuditTrail*>(&to_msg);
  auto& from = static_cast<const AuditTrail&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.audit.AuditTrail)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_entries()->MergeFrom(
      from._internal_entries());
  _this->_impl_.query_metadata_.MergeFrom(from._impl_.query_metadata_);
  if (!from._internal_trail_id().empty()) {
    _this->_internal_set_trail_id(from._internal_trail_id());
  }
  if (!from._internal_generated_at().empty()) {
    _this->_internal_set_generated_at(from._internal_generated_at());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AuditTrail::CopyFrom(const AuditTrail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.audit.AuditTrail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AuditTrail::InternalSwap(AuditTrail* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.entries_.InternalSwap(&other->_impl_.entries_);
  _impl_.query_metadata_.InternalSwap(&other->_impl_.query_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.trail_id_, &other->_impl_.trail_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.generated_at_, &other->_impl_.generated_at_, arena);
}

::google::protobuf::Metadata AuditTrail::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              AuditConfig_MetadataEntry_DoNotUse::AuditConfig_MetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              AuditConfig_MetadataEntry_DoNotUse::AuditConfig_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              AuditConfig_MetadataEntry_DoNotUse::AuditConfig_MetadataEntry_DoNotUse() : SuperType() {}
              AuditConfig_MetadataEntry_DoNotUse::AuditConfig_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* AuditConfig_MetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) AuditConfig_MetadataEntry_DoNotUse(arena);
              }
              constexpr auto AuditConfig_MetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AuditConfig_MetadataEntry_DoNotUse),
                                                          alignof(AuditConfig_MetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull AuditConfig_MetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_AuditConfig_MetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &AuditConfig_MetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<AuditConfig_MetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &AuditConfig_MetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &AuditConfig_MetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(AuditConfig_MetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &AuditConfig_MetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_audit_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* AuditConfig_MetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 54, 2> AuditConfig_MetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AuditConfig_MetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::audit::AuditConfig_MetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AuditConfig_MetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AuditConfig_MetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(AuditConfig_MetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(AuditConfig_MetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\45\3\5\0\0\0\0\0"
    "seigr.audit.AuditConfig.MetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class AuditConfig::_Internal {
 public:
};

AuditConfig::AuditConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.audit.AuditConfig)
}
inline PROTOBUF_NDEBUG_INLINE AuditConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::audit::AuditConfig& from_msg)
      : metadata_{visibility, arena, from.metadata_},
        logging_level_(arena, from.logging_level_),
        _cached_size_{0} {}

AuditConfig::AuditConfig(
    ::google::protobuf::Arena* arena,
    const AuditConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AuditConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, retention_days_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, retention_days_),
           offsetof(Impl_, enable_hash_verification_) -
               offsetof(Impl_, retention_days_) +
               sizeof(Impl_::enable_hash_verification_));

  // @@protoc_insertion_point(copy_constructor:seigr.audit.AuditConfig)
}
inline PROTOBUF_NDEBUG_INLINE AuditConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : metadata_{visibility, arena},
        logging_level_(arena),
        _cached_size_{0} {}

inline void AuditConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, retention_days_),
           0,
           offsetof(Impl_, enable_hash_verification_) -
               offsetof(Impl_, retention_days_) +
               sizeof(Impl_::enable_hash_verification_));
}
AuditConfig::~AuditConfig() {
  // @@protoc_insertion_point(destructor:seigr.audit.AuditConfig)
  SharedDtor(*this);
}
inline void AuditConfig::SharedDtor(MessageLite& self) {
  AuditConfig& this_ = static_cast<AuditConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.logging_level_.Destroy();
  this_._impl_.~Impl_();
}

inline void* AuditConfig::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AuditConfig(arena);
}
constexpr auto AuditConfig::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(AuditConfig, _impl_.metadata_) +
          decltype(AuditConfig::_impl_.metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(AuditConfig, _impl_.metadata_) +
          decltype(AuditConfig::_impl_.metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(AuditConfig), alignof(AuditConfig), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&AuditConfig::PlacementNew_,
                                 sizeof(AuditConfig),
                                 alignof(AuditConfig));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AuditConfig::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AuditConfig_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AuditConfig::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AuditConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AuditConfig::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AuditConfig>(), &AuditConfig::ByteSizeLong,
            &AuditConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AuditConfig, _impl_._cached_size_),
        false,
    },
    &AuditConfig::kDescriptorMethods,
    &descriptor_table_audit_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AuditConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 53, 2> AuditConfig::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::audit::AuditConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 retention_days = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AuditConfig, _impl_.retention_days_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AuditConfig, _impl_.retention_days_)}},
    // string logging_level = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AuditConfig, _impl_.logging_level_)}},
    // bool enable_hash_verification = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AuditConfig, _impl_.enable_hash_verification_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(AuditConfig, _impl_.enable_hash_verification_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 retention_days = 1;
    {PROTOBUF_FIELD_OFFSET(AuditConfig, _impl_.retention_days_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string logging_level = 2;
    {PROTOBUF_FIELD_OFFSET(AuditConfig, _impl_.logging_level_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool enable_hash_verification = 3;
    {PROTOBUF_FIELD_OFFSET(AuditConfig, _impl_.enable_hash_verification_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // map<string, string> metadata = 4;
    {PROTOBUF_FIELD_OFFSET(AuditConfig, _impl_.metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(AuditConfig()._impl_.metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\27\0\15\0\10\0\0\0"
    "seigr.audit.AuditConfig"
    "logging_level"
    "metadata"
  }},
};

PROTOBUF_NOINLINE void AuditConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.audit.AuditConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.metadata_.Clear();
  _impl_.logging_level_.ClearToEmpty();
  ::memset(&_impl_.retention_days_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.enable_hash_verification_) -
      reinterpret_cast<char*>(&_impl_.retention_days_)) + sizeof(_impl_.enable_hash_verification_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AuditConfig::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AuditConfig& this_ = static_cast<const AuditConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AuditConfig::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AuditConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.audit.AuditConfig)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 retention_days = 1;
          if (this_._internal_retention_days() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_retention_days(), target);
          }

          // string logging_level = 2;
          if (!this_._internal_logging_level().empty()) {
            const std::string& _s = this_._internal_logging_level();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.audit.AuditConfig.logging_level");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // bool enable_hash_verification = 3;
          if (this_._internal_enable_hash_verification() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_enable_hash_verification(), target);
          }

          // map<string, string> metadata = 4;
          if (!this_._internal_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    4, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.audit.AuditConfig.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.audit.AuditConfig.metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    4, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.audit.AuditConfig.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.audit.AuditConfig.metadata");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.audit.AuditConfig)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AuditConfig::ByteSizeLong(const MessageLite& base) {
          const AuditConfig& this_ = static_cast<const AuditConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AuditConfig::ByteSizeLong() const {
          const AuditConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.audit.AuditConfig)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> metadata = 4;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_metadata_size());
              for (const auto& entry : this_._internal_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string logging_level = 2;
            if (!this_._internal_logging_level().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_logging_level());
            }
            // int32 retention_days = 1;
            if (this_._internal_retention_days() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_retention_days());
            }
            // bool enable_hash_verification = 3;
            if (this_._internal_enable_hash_verification() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AuditConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AuditConfig*>(&to_msg);
  auto& from = static_cast<const AuditConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.audit.AuditConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.metadata_.MergeFrom(from._impl_.metadata_);
  if (!from._internal_logging_level().empty()) {
    _this->_internal_set_logging_level(from._internal_logging_level());
  }
  if (from._internal_retention_days() != 0) {
    _this->_impl_.retention_days_ = from._impl_.retention_days_;
  }
  if (from._internal_enable_hash_verification() != 0) {
    _this->_impl_.enable_hash_verification_ = from._impl_.enable_hash_verification_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AuditConfig::CopyFrom(const AuditConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.audit.AuditConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AuditConfig::InternalSwap(AuditConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.metadata_.InternalSwap(&other->_impl_.metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.logging_level_, &other->_impl_.logging_level_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AuditConfig, _impl_.enable_hash_verification_)
      + sizeof(AuditConfig::_impl_.enable_hash_verification_)
      - PROTOBUF_FIELD_OFFSET(AuditConfig, _impl_.retention_days_)>(
          reinterpret_cast<char*>(&_impl_.retention_days_),
          reinterpret_cast<char*>(&other->_impl_.retention_days_));
}

::google::protobuf::Metadata AuditConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace audit
}  // namespace seigr
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_audit_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
