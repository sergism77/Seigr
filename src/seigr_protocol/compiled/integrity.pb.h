// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: integrity.proto
// Protobuf C++ Version: 5.29.2

#ifndef integrity_2eproto_2epb_2eh
#define integrity_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "segment_metadata.pb.h"
#include "encryption.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_integrity_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_integrity_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_integrity_2eproto;
namespace seigr {
namespace integrity {
class GetMonitoringCycleRequest;
struct GetMonitoringCycleRequestDefaultTypeInternal;
extern GetMonitoringCycleRequestDefaultTypeInternal _GetMonitoringCycleRequest_default_instance_;
class GetThreatAnalysisRequest;
struct GetThreatAnalysisRequestDefaultTypeInternal;
extern GetThreatAnalysisRequestDefaultTypeInternal _GetThreatAnalysisRequest_default_instance_;
class GetThreatAnalysisRequest_AdditionalFiltersEntry_DoNotUse;
struct GetThreatAnalysisRequest_AdditionalFiltersEntry_DoNotUseDefaultTypeInternal;
extern GetThreatAnalysisRequest_AdditionalFiltersEntry_DoNotUseDefaultTypeInternal _GetThreatAnalysisRequest_AdditionalFiltersEntry_DoNotUse_default_instance_;
class IntegrityVerificationOutcome;
struct IntegrityVerificationOutcomeDefaultTypeInternal;
extern IntegrityVerificationOutcomeDefaultTypeInternal _IntegrityVerificationOutcome_default_instance_;
class IntegrityVerificationOutcome_MetadataEntry_DoNotUse;
struct IntegrityVerificationOutcome_MetadataEntry_DoNotUseDefaultTypeInternal;
extern IntegrityVerificationOutcome_MetadataEntry_DoNotUseDefaultTypeInternal _IntegrityVerificationOutcome_MetadataEntry_DoNotUse_default_instance_;
class IntegrityWorkflowTrigger;
struct IntegrityWorkflowTriggerDefaultTypeInternal;
extern IntegrityWorkflowTriggerDefaultTypeInternal _IntegrityWorkflowTrigger_default_instance_;
class IntegrityWorkflowTrigger_AdaptiveParametersEntry_DoNotUse;
struct IntegrityWorkflowTrigger_AdaptiveParametersEntry_DoNotUseDefaultTypeInternal;
extern IntegrityWorkflowTrigger_AdaptiveParametersEntry_DoNotUseDefaultTypeInternal _IntegrityWorkflowTrigger_AdaptiveParametersEntry_DoNotUse_default_instance_;
class IntegrityWorkflowTrigger_ParametersEntry_DoNotUse;
struct IntegrityWorkflowTrigger_ParametersEntry_DoNotUseDefaultTypeInternal;
extern IntegrityWorkflowTrigger_ParametersEntry_DoNotUseDefaultTypeInternal _IntegrityWorkflowTrigger_ParametersEntry_DoNotUse_default_instance_;
class MonitoringCycleResult;
struct MonitoringCycleResultDefaultTypeInternal;
extern MonitoringCycleResultDefaultTypeInternal _MonitoringCycleResult_default_instance_;
class MonitoringCycleResult_AdditionalInfoEntry_DoNotUse;
struct MonitoringCycleResult_AdditionalInfoEntry_DoNotUseDefaultTypeInternal;
extern MonitoringCycleResult_AdditionalInfoEntry_DoNotUseDefaultTypeInternal _MonitoringCycleResult_AdditionalInfoEntry_DoNotUse_default_instance_;
class MonitoringCycleResult_ThreatSummaryEntry_DoNotUse;
struct MonitoringCycleResult_ThreatSummaryEntry_DoNotUseDefaultTypeInternal;
extern MonitoringCycleResult_ThreatSummaryEntry_DoNotUseDefaultTypeInternal _MonitoringCycleResult_ThreatSummaryEntry_DoNotUse_default_instance_;
class PerformVerificationRequest;
struct PerformVerificationRequestDefaultTypeInternal;
extern PerformVerificationRequestDefaultTypeInternal _PerformVerificationRequest_default_instance_;
class PerformVerificationRequest_MetadataEntry_DoNotUse;
struct PerformVerificationRequest_MetadataEntry_DoNotUseDefaultTypeInternal;
extern PerformVerificationRequest_MetadataEntry_DoNotUseDefaultTypeInternal _PerformVerificationRequest_MetadataEntry_DoNotUse_default_instance_;
class ThreatAnalysisReport;
struct ThreatAnalysisReportDefaultTypeInternal;
extern ThreatAnalysisReportDefaultTypeInternal _ThreatAnalysisReport_default_instance_;
class ThreatAnalysisReport_ActionPriorityEntry_DoNotUse;
struct ThreatAnalysisReport_ActionPriorityEntry_DoNotUseDefaultTypeInternal;
extern ThreatAnalysisReport_ActionPriorityEntry_DoNotUseDefaultTypeInternal _ThreatAnalysisReport_ActionPriorityEntry_DoNotUse_default_instance_;
class ThreatAnalysisReport_AdaptiveResponseEntry_DoNotUse;
struct ThreatAnalysisReport_AdaptiveResponseEntry_DoNotUseDefaultTypeInternal;
extern ThreatAnalysisReport_AdaptiveResponseEntry_DoNotUseDefaultTypeInternal _ThreatAnalysisReport_AdaptiveResponseEntry_DoNotUse_default_instance_;
class ThreatAnalysisReport_ComponentThreatCountsEntry_DoNotUse;
struct ThreatAnalysisReport_ComponentThreatCountsEntry_DoNotUseDefaultTypeInternal;
extern ThreatAnalysisReport_ComponentThreatCountsEntry_DoNotUseDefaultTypeInternal _ThreatAnalysisReport_ComponentThreatCountsEntry_DoNotUse_default_instance_;
class ThreatAnalysisReport_MetadataEntry_DoNotUse;
struct ThreatAnalysisReport_MetadataEntry_DoNotUseDefaultTypeInternal;
extern ThreatAnalysisReport_MetadataEntry_DoNotUseDefaultTypeInternal _ThreatAnalysisReport_MetadataEntry_DoNotUse_default_instance_;
class ThreatAnalysisReport_RecommendedActionsEntry_DoNotUse;
struct ThreatAnalysisReport_RecommendedActionsEntry_DoNotUseDefaultTypeInternal;
extern ThreatAnalysisReport_RecommendedActionsEntry_DoNotUseDefaultTypeInternal _ThreatAnalysisReport_RecommendedActionsEntry_DoNotUse_default_instance_;
class ThreatAnalysisReport_ThreatRecurrenceEntry_DoNotUse;
struct ThreatAnalysisReport_ThreatRecurrenceEntry_DoNotUseDefaultTypeInternal;
extern ThreatAnalysisReport_ThreatRecurrenceEntry_DoNotUseDefaultTypeInternal _ThreatAnalysisReport_ThreatRecurrenceEntry_DoNotUse_default_instance_;
}  // namespace integrity
}  // namespace seigr
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace seigr {
namespace integrity {
enum ThreatSeverity : int {
  THREAT_SEVERITY_UNDEFINED = 0,
  THREAT_SEVERITY_LOW = 1,
  THREAT_SEVERITY_MODERATE = 2,
  THREAT_SEVERITY_HIGH = 3,
  THREAT_SEVERITY_CRITICAL = 4,
  ThreatSeverity_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ThreatSeverity_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool ThreatSeverity_IsValid(int value);
extern const uint32_t ThreatSeverity_internal_data_[];
constexpr ThreatSeverity ThreatSeverity_MIN = static_cast<ThreatSeverity>(0);
constexpr ThreatSeverity ThreatSeverity_MAX = static_cast<ThreatSeverity>(4);
constexpr int ThreatSeverity_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor*
ThreatSeverity_descriptor();
template <typename T>
const std::string& ThreatSeverity_Name(T value) {
  static_assert(std::is_same<T, ThreatSeverity>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ThreatSeverity_Name().");
  return ThreatSeverity_Name(static_cast<ThreatSeverity>(value));
}
template <>
inline const std::string& ThreatSeverity_Name(ThreatSeverity value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ThreatSeverity_descriptor,
                                                 0, 4>(
      static_cast<int>(value));
}
inline bool ThreatSeverity_Parse(absl::string_view name, ThreatSeverity* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ThreatSeverity>(
      ThreatSeverity_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class ThreatAnalysisReport_ThreatRecurrenceEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, ::int32_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT32> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, ::int32_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32>;
  ThreatAnalysisReport_ThreatRecurrenceEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ThreatAnalysisReport_ThreatRecurrenceEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit ThreatAnalysisReport_ThreatRecurrenceEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const ThreatAnalysisReport_ThreatRecurrenceEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const ThreatAnalysisReport_ThreatRecurrenceEntry_DoNotUse*>(
        &_ThreatAnalysisReport_ThreatRecurrenceEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_integrity_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      70, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class ThreatAnalysisReport_RecommendedActionsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  ThreatAnalysisReport_RecommendedActionsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ThreatAnalysisReport_RecommendedActionsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit ThreatAnalysisReport_RecommendedActionsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const ThreatAnalysisReport_RecommendedActionsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const ThreatAnalysisReport_RecommendedActionsEntry_DoNotUse*>(
        &_ThreatAnalysisReport_RecommendedActionsEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_integrity_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      77, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class ThreatAnalysisReport_MetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  ThreatAnalysisReport_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ThreatAnalysisReport_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit ThreatAnalysisReport_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const ThreatAnalysisReport_MetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const ThreatAnalysisReport_MetadataEntry_DoNotUse*>(
        &_ThreatAnalysisReport_MetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_integrity_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      67, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class ThreatAnalysisReport_ComponentThreatCountsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, ::int32_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT32> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, ::int32_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32>;
  ThreatAnalysisReport_ComponentThreatCountsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ThreatAnalysisReport_ComponentThreatCountsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit ThreatAnalysisReport_ComponentThreatCountsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const ThreatAnalysisReport_ComponentThreatCountsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const ThreatAnalysisReport_ComponentThreatCountsEntry_DoNotUse*>(
        &_ThreatAnalysisReport_ComponentThreatCountsEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_integrity_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      75, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class ThreatAnalysisReport_AdaptiveResponseEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  ThreatAnalysisReport_AdaptiveResponseEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ThreatAnalysisReport_AdaptiveResponseEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit ThreatAnalysisReport_AdaptiveResponseEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const ThreatAnalysisReport_AdaptiveResponseEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const ThreatAnalysisReport_AdaptiveResponseEntry_DoNotUse*>(
        &_ThreatAnalysisReport_AdaptiveResponseEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_integrity_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      75, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class ThreatAnalysisReport_ActionPriorityEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, ::int32_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT32> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, ::int32_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32>;
  ThreatAnalysisReport_ActionPriorityEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ThreatAnalysisReport_ActionPriorityEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit ThreatAnalysisReport_ActionPriorityEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const ThreatAnalysisReport_ActionPriorityEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const ThreatAnalysisReport_ActionPriorityEntry_DoNotUse*>(
        &_ThreatAnalysisReport_ActionPriorityEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_integrity_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      68, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class PerformVerificationRequest_MetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  PerformVerificationRequest_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PerformVerificationRequest_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit PerformVerificationRequest_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const PerformVerificationRequest_MetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const PerformVerificationRequest_MetadataEntry_DoNotUse*>(
        &_PerformVerificationRequest_MetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_integrity_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      73, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class MonitoringCycleResult_ThreatSummaryEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, ::int32_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT32> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, ::int32_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32>;
  MonitoringCycleResult_ThreatSummaryEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MonitoringCycleResult_ThreatSummaryEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit MonitoringCycleResult_ThreatSummaryEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const MonitoringCycleResult_ThreatSummaryEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const MonitoringCycleResult_ThreatSummaryEntry_DoNotUse*>(
        &_MonitoringCycleResult_ThreatSummaryEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_integrity_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      68, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class MonitoringCycleResult_AdditionalInfoEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  MonitoringCycleResult_AdditionalInfoEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MonitoringCycleResult_AdditionalInfoEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit MonitoringCycleResult_AdditionalInfoEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const MonitoringCycleResult_AdditionalInfoEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const MonitoringCycleResult_AdditionalInfoEntry_DoNotUse*>(
        &_MonitoringCycleResult_AdditionalInfoEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_integrity_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      74, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class IntegrityWorkflowTrigger_ParametersEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  IntegrityWorkflowTrigger_ParametersEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR IntegrityWorkflowTrigger_ParametersEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit IntegrityWorkflowTrigger_ParametersEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const IntegrityWorkflowTrigger_ParametersEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const IntegrityWorkflowTrigger_ParametersEntry_DoNotUse*>(
        &_IntegrityWorkflowTrigger_ParametersEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_integrity_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      73, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class IntegrityWorkflowTrigger_AdaptiveParametersEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  IntegrityWorkflowTrigger_AdaptiveParametersEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR IntegrityWorkflowTrigger_AdaptiveParametersEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit IntegrityWorkflowTrigger_AdaptiveParametersEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const IntegrityWorkflowTrigger_AdaptiveParametersEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const IntegrityWorkflowTrigger_AdaptiveParametersEntry_DoNotUse*>(
        &_IntegrityWorkflowTrigger_AdaptiveParametersEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_integrity_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      81, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class IntegrityVerificationOutcome_MetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  IntegrityVerificationOutcome_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR IntegrityVerificationOutcome_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit IntegrityVerificationOutcome_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const IntegrityVerificationOutcome_MetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const IntegrityVerificationOutcome_MetadataEntry_DoNotUse*>(
        &_IntegrityVerificationOutcome_MetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_integrity_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      75, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class GetThreatAnalysisRequest_AdditionalFiltersEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  GetThreatAnalysisRequest_AdditionalFiltersEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetThreatAnalysisRequest_AdditionalFiltersEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit GetThreatAnalysisRequest_AdditionalFiltersEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const GetThreatAnalysisRequest_AdditionalFiltersEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const GetThreatAnalysisRequest_AdditionalFiltersEntry_DoNotUse*>(
        &_GetThreatAnalysisRequest_AdditionalFiltersEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_integrity_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      80, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class GetMonitoringCycleRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.integrity.GetMonitoringCycleRequest) */ {
 public:
  inline GetMonitoringCycleRequest() : GetMonitoringCycleRequest(nullptr) {}
  ~GetMonitoringCycleRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetMonitoringCycleRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetMonitoringCycleRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetMonitoringCycleRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetMonitoringCycleRequest(const GetMonitoringCycleRequest& from) : GetMonitoringCycleRequest(nullptr, from) {}
  inline GetMonitoringCycleRequest(GetMonitoringCycleRequest&& from) noexcept
      : GetMonitoringCycleRequest(nullptr, std::move(from)) {}
  inline GetMonitoringCycleRequest& operator=(const GetMonitoringCycleRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetMonitoringCycleRequest& operator=(GetMonitoringCycleRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetMonitoringCycleRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetMonitoringCycleRequest* internal_default_instance() {
    return reinterpret_cast<const GetMonitoringCycleRequest*>(
        &_GetMonitoringCycleRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(GetMonitoringCycleRequest& a, GetMonitoringCycleRequest& b) { a.Swap(&b); }
  inline void Swap(GetMonitoringCycleRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetMonitoringCycleRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetMonitoringCycleRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetMonitoringCycleRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetMonitoringCycleRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetMonitoringCycleRequest& from) { GetMonitoringCycleRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetMonitoringCycleRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.integrity.GetMonitoringCycleRequest"; }

 protected:
  explicit GetMonitoringCycleRequest(::google::protobuf::Arena* arena);
  GetMonitoringCycleRequest(::google::protobuf::Arena* arena, const GetMonitoringCycleRequest& from);
  GetMonitoringCycleRequest(::google::protobuf::Arena* arena, GetMonitoringCycleRequest&& from) noexcept
      : GetMonitoringCycleRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFilterSegmentsFieldNumber = 4,
    kCycleIdFieldNumber = 1,
    kRequesterIdFieldNumber = 2,
    kIncludeMetadataFieldNumber = 3,
  };
  // repeated string filter_segments = 4;
  int filter_segments_size() const;
  private:
  int _internal_filter_segments_size() const;

  public:
  void clear_filter_segments() ;
  const std::string& filter_segments(int index) const;
  std::string* mutable_filter_segments(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_filter_segments(int index, Arg_&& value, Args_... args);
  std::string* add_filter_segments();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_filter_segments(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& filter_segments() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_filter_segments();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_filter_segments() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_filter_segments();

  public:
  // string cycle_id = 1;
  void clear_cycle_id() ;
  const std::string& cycle_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_cycle_id(Arg_&& arg, Args_... args);
  std::string* mutable_cycle_id();
  PROTOBUF_NODISCARD std::string* release_cycle_id();
  void set_allocated_cycle_id(std::string* value);

  private:
  const std::string& _internal_cycle_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_cycle_id(
      const std::string& value);
  std::string* _internal_mutable_cycle_id();

  public:
  // string requester_id = 2;
  void clear_requester_id() ;
  const std::string& requester_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_requester_id(Arg_&& arg, Args_... args);
  std::string* mutable_requester_id();
  PROTOBUF_NODISCARD std::string* release_requester_id();
  void set_allocated_requester_id(std::string* value);

  private:
  const std::string& _internal_requester_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_requester_id(
      const std::string& value);
  std::string* _internal_mutable_requester_id();

  public:
  // bool include_metadata = 3;
  void clear_include_metadata() ;
  bool include_metadata() const;
  void set_include_metadata(bool value);

  private:
  bool _internal_include_metadata() const;
  void _internal_set_include_metadata(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.integrity.GetMonitoringCycleRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      85, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetMonitoringCycleRequest& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> filter_segments_;
    ::google::protobuf::internal::ArenaStringPtr cycle_id_;
    ::google::protobuf::internal::ArenaStringPtr requester_id_;
    bool include_metadata_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_integrity_2eproto;
};
// -------------------------------------------------------------------

class PerformVerificationRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.integrity.PerformVerificationRequest) */ {
 public:
  inline PerformVerificationRequest() : PerformVerificationRequest(nullptr) {}
  ~PerformVerificationRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PerformVerificationRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PerformVerificationRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PerformVerificationRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline PerformVerificationRequest(const PerformVerificationRequest& from) : PerformVerificationRequest(nullptr, from) {}
  inline PerformVerificationRequest(PerformVerificationRequest&& from) noexcept
      : PerformVerificationRequest(nullptr, std::move(from)) {}
  inline PerformVerificationRequest& operator=(const PerformVerificationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PerformVerificationRequest& operator=(PerformVerificationRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PerformVerificationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PerformVerificationRequest* internal_default_instance() {
    return reinterpret_cast<const PerformVerificationRequest*>(
        &_PerformVerificationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(PerformVerificationRequest& a, PerformVerificationRequest& b) { a.Swap(&b); }
  inline void Swap(PerformVerificationRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PerformVerificationRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PerformVerificationRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PerformVerificationRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PerformVerificationRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PerformVerificationRequest& from) { PerformVerificationRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PerformVerificationRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.integrity.PerformVerificationRequest"; }

 protected:
  explicit PerformVerificationRequest(::google::protobuf::Arena* arena);
  PerformVerificationRequest(::google::protobuf::Arena* arena, const PerformVerificationRequest& from);
  PerformVerificationRequest(::google::protobuf::Arena* arena, PerformVerificationRequest&& from) noexcept
      : PerformVerificationRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMetadataFieldNumber = 5,
    kSegmentIdFieldNumber = 1,
    kInitiatedByFieldNumber = 2,
    kEscalationThresholdFieldNumber = 3,
    kForceFullScanFieldNumber = 4,
  };
  // map<string, string> metadata = 5;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // string segment_id = 1;
  void clear_segment_id() ;
  const std::string& segment_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_segment_id(Arg_&& arg, Args_... args);
  std::string* mutable_segment_id();
  PROTOBUF_NODISCARD std::string* release_segment_id();
  void set_allocated_segment_id(std::string* value);

  private:
  const std::string& _internal_segment_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_segment_id(
      const std::string& value);
  std::string* _internal_mutable_segment_id();

  public:
  // string initiated_by = 2;
  void clear_initiated_by() ;
  const std::string& initiated_by() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_initiated_by(Arg_&& arg, Args_... args);
  std::string* mutable_initiated_by();
  PROTOBUF_NODISCARD std::string* release_initiated_by();
  void set_allocated_initiated_by(std::string* value);

  private:
  const std::string& _internal_initiated_by() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_initiated_by(
      const std::string& value);
  std::string* _internal_mutable_initiated_by();

  public:
  // .seigr.integrity.ThreatSeverity escalation_threshold = 3;
  void clear_escalation_threshold() ;
  ::seigr::integrity::ThreatSeverity escalation_threshold() const;
  void set_escalation_threshold(::seigr::integrity::ThreatSeverity value);

  private:
  ::seigr::integrity::ThreatSeverity _internal_escalation_threshold() const;
  void _internal_set_escalation_threshold(::seigr::integrity::ThreatSeverity value);

  public:
  // bool force_full_scan = 4;
  void clear_force_full_scan() ;
  bool force_full_scan() const;
  void set_force_full_scan(bool value);

  private:
  bool _internal_force_full_scan() const;
  void _internal_set_force_full_scan(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.integrity.PerformVerificationRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 5, 1,
      81, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PerformVerificationRequest& from_msg);
    ::google::protobuf::internal::MapField<PerformVerificationRequest_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::internal::ArenaStringPtr segment_id_;
    ::google::protobuf::internal::ArenaStringPtr initiated_by_;
    int escalation_threshold_;
    bool force_full_scan_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_integrity_2eproto;
};
// -------------------------------------------------------------------

class IntegrityWorkflowTrigger final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.integrity.IntegrityWorkflowTrigger) */ {
 public:
  inline IntegrityWorkflowTrigger() : IntegrityWorkflowTrigger(nullptr) {}
  ~IntegrityWorkflowTrigger() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(IntegrityWorkflowTrigger* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(IntegrityWorkflowTrigger));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR IntegrityWorkflowTrigger(
      ::google::protobuf::internal::ConstantInitialized);

  inline IntegrityWorkflowTrigger(const IntegrityWorkflowTrigger& from) : IntegrityWorkflowTrigger(nullptr, from) {}
  inline IntegrityWorkflowTrigger(IntegrityWorkflowTrigger&& from) noexcept
      : IntegrityWorkflowTrigger(nullptr, std::move(from)) {}
  inline IntegrityWorkflowTrigger& operator=(const IntegrityWorkflowTrigger& from) {
    CopyFrom(from);
    return *this;
  }
  inline IntegrityWorkflowTrigger& operator=(IntegrityWorkflowTrigger&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IntegrityWorkflowTrigger& default_instance() {
    return *internal_default_instance();
  }
  static inline const IntegrityWorkflowTrigger* internal_default_instance() {
    return reinterpret_cast<const IntegrityWorkflowTrigger*>(
        &_IntegrityWorkflowTrigger_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(IntegrityWorkflowTrigger& a, IntegrityWorkflowTrigger& b) { a.Swap(&b); }
  inline void Swap(IntegrityWorkflowTrigger* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IntegrityWorkflowTrigger* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IntegrityWorkflowTrigger* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<IntegrityWorkflowTrigger>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const IntegrityWorkflowTrigger& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const IntegrityWorkflowTrigger& from) { IntegrityWorkflowTrigger::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(IntegrityWorkflowTrigger* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.integrity.IntegrityWorkflowTrigger"; }

 protected:
  explicit IntegrityWorkflowTrigger(::google::protobuf::Arena* arena);
  IntegrityWorkflowTrigger(::google::protobuf::Arena* arena, const IntegrityWorkflowTrigger& from);
  IntegrityWorkflowTrigger(::google::protobuf::Arena* arena, IntegrityWorkflowTrigger&& from) noexcept
      : IntegrityWorkflowTrigger(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kParametersFieldNumber = 4,
    kAffectedSegmentsFieldNumber = 6,
    kAdaptiveParametersFieldNumber = 8,
    kTriggerIdFieldNumber = 1,
    kInitiatedByFieldNumber = 2,
    kWorkflowTypeFieldNumber = 5,
    kTimestampFieldNumber = 7,
    kEscalationThresholdFieldNumber = 3,
  };
  // map<string, string> parameters = 4;
  int parameters_size() const;
  private:
  int _internal_parameters_size() const;

  public:
  void clear_parameters() ;
  const ::google::protobuf::Map<std::string, std::string>& parameters() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_parameters();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_parameters() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_parameters();

  public:
  // repeated string affected_segments = 6;
  int affected_segments_size() const;
  private:
  int _internal_affected_segments_size() const;

  public:
  void clear_affected_segments() ;
  const std::string& affected_segments(int index) const;
  std::string* mutable_affected_segments(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_affected_segments(int index, Arg_&& value, Args_... args);
  std::string* add_affected_segments();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_affected_segments(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& affected_segments() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_affected_segments();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_affected_segments() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_affected_segments();

  public:
  // map<string, string> adaptive_parameters = 8;
  int adaptive_parameters_size() const;
  private:
  int _internal_adaptive_parameters_size() const;

  public:
  void clear_adaptive_parameters() ;
  const ::google::protobuf::Map<std::string, std::string>& adaptive_parameters() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_adaptive_parameters();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_adaptive_parameters() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_adaptive_parameters();

  public:
  // string trigger_id = 1;
  void clear_trigger_id() ;
  const std::string& trigger_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_trigger_id(Arg_&& arg, Args_... args);
  std::string* mutable_trigger_id();
  PROTOBUF_NODISCARD std::string* release_trigger_id();
  void set_allocated_trigger_id(std::string* value);

  private:
  const std::string& _internal_trigger_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_trigger_id(
      const std::string& value);
  std::string* _internal_mutable_trigger_id();

  public:
  // string initiated_by = 2;
  void clear_initiated_by() ;
  const std::string& initiated_by() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_initiated_by(Arg_&& arg, Args_... args);
  std::string* mutable_initiated_by();
  PROTOBUF_NODISCARD std::string* release_initiated_by();
  void set_allocated_initiated_by(std::string* value);

  private:
  const std::string& _internal_initiated_by() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_initiated_by(
      const std::string& value);
  std::string* _internal_mutable_initiated_by();

  public:
  // string workflow_type = 5;
  void clear_workflow_type() ;
  const std::string& workflow_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_workflow_type(Arg_&& arg, Args_... args);
  std::string* mutable_workflow_type();
  PROTOBUF_NODISCARD std::string* release_workflow_type();
  void set_allocated_workflow_type(std::string* value);

  private:
  const std::string& _internal_workflow_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_workflow_type(
      const std::string& value);
  std::string* _internal_mutable_workflow_type();

  public:
  // string timestamp = 7;
  void clear_timestamp() ;
  const std::string& timestamp() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_timestamp(Arg_&& arg, Args_... args);
  std::string* mutable_timestamp();
  PROTOBUF_NODISCARD std::string* release_timestamp();
  void set_allocated_timestamp(std::string* value);

  private:
  const std::string& _internal_timestamp() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_timestamp(
      const std::string& value);
  std::string* _internal_mutable_timestamp();

  public:
  // .seigr.integrity.ThreatSeverity escalation_threshold = 3;
  void clear_escalation_threshold() ;
  ::seigr::integrity::ThreatSeverity escalation_threshold() const;
  void set_escalation_threshold(::seigr::integrity::ThreatSeverity value);

  private:
  ::seigr::integrity::ThreatSeverity _internal_escalation_threshold() const;
  void _internal_set_escalation_threshold(::seigr::integrity::ThreatSeverity value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.integrity.IntegrityWorkflowTrigger)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 2,
      147, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const IntegrityWorkflowTrigger& from_msg);
    ::google::protobuf::internal::MapField<IntegrityWorkflowTrigger_ParametersEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        parameters_;
    ::google::protobuf::RepeatedPtrField<std::string> affected_segments_;
    ::google::protobuf::internal::MapField<IntegrityWorkflowTrigger_AdaptiveParametersEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        adaptive_parameters_;
    ::google::protobuf::internal::ArenaStringPtr trigger_id_;
    ::google::protobuf::internal::ArenaStringPtr initiated_by_;
    ::google::protobuf::internal::ArenaStringPtr workflow_type_;
    ::google::protobuf::internal::ArenaStringPtr timestamp_;
    int escalation_threshold_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_integrity_2eproto;
};
// -------------------------------------------------------------------

class IntegrityVerificationOutcome final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.integrity.IntegrityVerificationOutcome) */ {
 public:
  inline IntegrityVerificationOutcome() : IntegrityVerificationOutcome(nullptr) {}
  ~IntegrityVerificationOutcome() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(IntegrityVerificationOutcome* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(IntegrityVerificationOutcome));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR IntegrityVerificationOutcome(
      ::google::protobuf::internal::ConstantInitialized);

  inline IntegrityVerificationOutcome(const IntegrityVerificationOutcome& from) : IntegrityVerificationOutcome(nullptr, from) {}
  inline IntegrityVerificationOutcome(IntegrityVerificationOutcome&& from) noexcept
      : IntegrityVerificationOutcome(nullptr, std::move(from)) {}
  inline IntegrityVerificationOutcome& operator=(const IntegrityVerificationOutcome& from) {
    CopyFrom(from);
    return *this;
  }
  inline IntegrityVerificationOutcome& operator=(IntegrityVerificationOutcome&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IntegrityVerificationOutcome& default_instance() {
    return *internal_default_instance();
  }
  static inline const IntegrityVerificationOutcome* internal_default_instance() {
    return reinterpret_cast<const IntegrityVerificationOutcome*>(
        &_IntegrityVerificationOutcome_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(IntegrityVerificationOutcome& a, IntegrityVerificationOutcome& b) { a.Swap(&b); }
  inline void Swap(IntegrityVerificationOutcome* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IntegrityVerificationOutcome* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IntegrityVerificationOutcome* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<IntegrityVerificationOutcome>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const IntegrityVerificationOutcome& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const IntegrityVerificationOutcome& from) { IntegrityVerificationOutcome::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(IntegrityVerificationOutcome* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.integrity.IntegrityVerificationOutcome"; }

 protected:
  explicit IntegrityVerificationOutcome(::google::protobuf::Arena* arena);
  IntegrityVerificationOutcome(::google::protobuf::Arena* arena, const IntegrityVerificationOutcome& from);
  IntegrityVerificationOutcome(::google::protobuf::Arena* arena, IntegrityVerificationOutcome&& from) noexcept
      : IntegrityVerificationOutcome(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMetadataFieldNumber = 7,
    kVerificationIdFieldNumber = 1,
    kTargetSegmentIdFieldNumber = 2,
    kVerificationTimestampFieldNumber = 4,
    kFailureReasonFieldNumber = 6,
    kRecommendedActionFieldNumber = 8,
    kDetectedThreatSeverityFieldNumber = 3,
    kIsVerifiedFieldNumber = 5,
  };
  // map<string, string> metadata = 7;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // string verification_id = 1;
  void clear_verification_id() ;
  const std::string& verification_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_verification_id(Arg_&& arg, Args_... args);
  std::string* mutable_verification_id();
  PROTOBUF_NODISCARD std::string* release_verification_id();
  void set_allocated_verification_id(std::string* value);

  private:
  const std::string& _internal_verification_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_verification_id(
      const std::string& value);
  std::string* _internal_mutable_verification_id();

  public:
  // string target_segment_id = 2;
  void clear_target_segment_id() ;
  const std::string& target_segment_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_target_segment_id(Arg_&& arg, Args_... args);
  std::string* mutable_target_segment_id();
  PROTOBUF_NODISCARD std::string* release_target_segment_id();
  void set_allocated_target_segment_id(std::string* value);

  private:
  const std::string& _internal_target_segment_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_target_segment_id(
      const std::string& value);
  std::string* _internal_mutable_target_segment_id();

  public:
  // string verification_timestamp = 4;
  void clear_verification_timestamp() ;
  const std::string& verification_timestamp() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_verification_timestamp(Arg_&& arg, Args_... args);
  std::string* mutable_verification_timestamp();
  PROTOBUF_NODISCARD std::string* release_verification_timestamp();
  void set_allocated_verification_timestamp(std::string* value);

  private:
  const std::string& _internal_verification_timestamp() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_verification_timestamp(
      const std::string& value);
  std::string* _internal_mutable_verification_timestamp();

  public:
  // string failure_reason = 6;
  void clear_failure_reason() ;
  const std::string& failure_reason() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_failure_reason(Arg_&& arg, Args_... args);
  std::string* mutable_failure_reason();
  PROTOBUF_NODISCARD std::string* release_failure_reason();
  void set_allocated_failure_reason(std::string* value);

  private:
  const std::string& _internal_failure_reason() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_failure_reason(
      const std::string& value);
  std::string* _internal_mutable_failure_reason();

  public:
  // string recommended_action = 8;
  void clear_recommended_action() ;
  const std::string& recommended_action() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_recommended_action(Arg_&& arg, Args_... args);
  std::string* mutable_recommended_action();
  PROTOBUF_NODISCARD std::string* release_recommended_action();
  void set_allocated_recommended_action(std::string* value);

  private:
  const std::string& _internal_recommended_action() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_recommended_action(
      const std::string& value);
  std::string* _internal_mutable_recommended_action();

  public:
  // .seigr.integrity.ThreatSeverity detected_threat_severity = 3;
  void clear_detected_threat_severity() ;
  ::seigr::integrity::ThreatSeverity detected_threat_severity() const;
  void set_detected_threat_severity(::seigr::integrity::ThreatSeverity value);

  private:
  ::seigr::integrity::ThreatSeverity _internal_detected_threat_severity() const;
  void _internal_set_detected_threat_severity(::seigr::integrity::ThreatSeverity value);

  public:
  // bool is_verified = 5;
  void clear_is_verified() ;
  bool is_verified() const;
  void set_is_verified(bool value);

  private:
  bool _internal_is_verified() const;
  void _internal_set_is_verified(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.integrity.IntegrityVerificationOutcome)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 1,
      155, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const IntegrityVerificationOutcome& from_msg);
    ::google::protobuf::internal::MapField<IntegrityVerificationOutcome_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::internal::ArenaStringPtr verification_id_;
    ::google::protobuf::internal::ArenaStringPtr target_segment_id_;
    ::google::protobuf::internal::ArenaStringPtr verification_timestamp_;
    ::google::protobuf::internal::ArenaStringPtr failure_reason_;
    ::google::protobuf::internal::ArenaStringPtr recommended_action_;
    int detected_threat_severity_;
    bool is_verified_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_integrity_2eproto;
};
// -------------------------------------------------------------------

class GetThreatAnalysisRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.integrity.GetThreatAnalysisRequest) */ {
 public:
  inline GetThreatAnalysisRequest() : GetThreatAnalysisRequest(nullptr) {}
  ~GetThreatAnalysisRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetThreatAnalysisRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetThreatAnalysisRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetThreatAnalysisRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetThreatAnalysisRequest(const GetThreatAnalysisRequest& from) : GetThreatAnalysisRequest(nullptr, from) {}
  inline GetThreatAnalysisRequest(GetThreatAnalysisRequest&& from) noexcept
      : GetThreatAnalysisRequest(nullptr, std::move(from)) {}
  inline GetThreatAnalysisRequest& operator=(const GetThreatAnalysisRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetThreatAnalysisRequest& operator=(GetThreatAnalysisRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetThreatAnalysisRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetThreatAnalysisRequest* internal_default_instance() {
    return reinterpret_cast<const GetThreatAnalysisRequest*>(
        &_GetThreatAnalysisRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(GetThreatAnalysisRequest& a, GetThreatAnalysisRequest& b) { a.Swap(&b); }
  inline void Swap(GetThreatAnalysisRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetThreatAnalysisRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetThreatAnalysisRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetThreatAnalysisRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetThreatAnalysisRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetThreatAnalysisRequest& from) { GetThreatAnalysisRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetThreatAnalysisRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.integrity.GetThreatAnalysisRequest"; }

 protected:
  explicit GetThreatAnalysisRequest(::google::protobuf::Arena* arena);
  GetThreatAnalysisRequest(::google::protobuf::Arena* arena, const GetThreatAnalysisRequest& from);
  GetThreatAnalysisRequest(::google::protobuf::Arena* arena, GetThreatAnalysisRequest&& from) noexcept
      : GetThreatAnalysisRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFilterComponentsFieldNumber = 3,
    kAdditionalFiltersFieldNumber = 5,
    kReportIdFieldNumber = 1,
    kRequesterIdFieldNumber = 2,
    kIncludeRecommendationsFieldNumber = 4,
  };
  // repeated string filter_components = 3;
  int filter_components_size() const;
  private:
  int _internal_filter_components_size() const;

  public:
  void clear_filter_components() ;
  const std::string& filter_components(int index) const;
  std::string* mutable_filter_components(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_filter_components(int index, Arg_&& value, Args_... args);
  std::string* add_filter_components();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_filter_components(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& filter_components() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_filter_components();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_filter_components() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_filter_components();

  public:
  // map<string, string> additional_filters = 5;
  int additional_filters_size() const;
  private:
  int _internal_additional_filters_size() const;

  public:
  void clear_additional_filters() ;
  const ::google::protobuf::Map<std::string, std::string>& additional_filters() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_additional_filters();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_additional_filters() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_additional_filters();

  public:
  // string report_id = 1;
  void clear_report_id() ;
  const std::string& report_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_report_id(Arg_&& arg, Args_... args);
  std::string* mutable_report_id();
  PROTOBUF_NODISCARD std::string* release_report_id();
  void set_allocated_report_id(std::string* value);

  private:
  const std::string& _internal_report_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_report_id(
      const std::string& value);
  std::string* _internal_mutable_report_id();

  public:
  // string requester_id = 2;
  void clear_requester_id() ;
  const std::string& requester_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_requester_id(Arg_&& arg, Args_... args);
  std::string* mutable_requester_id();
  PROTOBUF_NODISCARD std::string* release_requester_id();
  void set_allocated_requester_id(std::string* value);

  private:
  const std::string& _internal_requester_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_requester_id(
      const std::string& value);
  std::string* _internal_mutable_requester_id();

  public:
  // bool include_recommendations = 4;
  void clear_include_recommendations() ;
  bool include_recommendations() const;
  void set_include_recommendations(bool value);

  private:
  bool _internal_include_recommendations() const;
  void _internal_set_include_recommendations(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.integrity.GetThreatAnalysisRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 5, 1,
      105, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetThreatAnalysisRequest& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> filter_components_;
    ::google::protobuf::internal::MapField<GetThreatAnalysisRequest_AdditionalFiltersEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        additional_filters_;
    ::google::protobuf::internal::ArenaStringPtr report_id_;
    ::google::protobuf::internal::ArenaStringPtr requester_id_;
    bool include_recommendations_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_integrity_2eproto;
};
// -------------------------------------------------------------------

class ThreatAnalysisReport final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.integrity.ThreatAnalysisReport) */ {
 public:
  inline ThreatAnalysisReport() : ThreatAnalysisReport(nullptr) {}
  ~ThreatAnalysisReport() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ThreatAnalysisReport* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ThreatAnalysisReport));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ThreatAnalysisReport(
      ::google::protobuf::internal::ConstantInitialized);

  inline ThreatAnalysisReport(const ThreatAnalysisReport& from) : ThreatAnalysisReport(nullptr, from) {}
  inline ThreatAnalysisReport(ThreatAnalysisReport&& from) noexcept
      : ThreatAnalysisReport(nullptr, std::move(from)) {}
  inline ThreatAnalysisReport& operator=(const ThreatAnalysisReport& from) {
    CopyFrom(from);
    return *this;
  }
  inline ThreatAnalysisReport& operator=(ThreatAnalysisReport&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ThreatAnalysisReport& default_instance() {
    return *internal_default_instance();
  }
  static inline const ThreatAnalysisReport* internal_default_instance() {
    return reinterpret_cast<const ThreatAnalysisReport*>(
        &_ThreatAnalysisReport_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(ThreatAnalysisReport& a, ThreatAnalysisReport& b) { a.Swap(&b); }
  inline void Swap(ThreatAnalysisReport* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ThreatAnalysisReport* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ThreatAnalysisReport* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ThreatAnalysisReport>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ThreatAnalysisReport& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ThreatAnalysisReport& from) { ThreatAnalysisReport::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ThreatAnalysisReport* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.integrity.ThreatAnalysisReport"; }

 protected:
  explicit ThreatAnalysisReport(::google::protobuf::Arena* arena);
  ThreatAnalysisReport(::google::protobuf::Arena* arena, const ThreatAnalysisReport& from);
  ThreatAnalysisReport(::google::protobuf::Arena* arena, ThreatAnalysisReport&& from) noexcept
      : ThreatAnalysisReport(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kThreatLogsFieldNumber = 2,
    kRecommendedActionsFieldNumber = 8,
    kMetadataFieldNumber = 9,
    kActionPriorityFieldNumber = 10,
    kThreatRecurrenceFieldNumber = 13,
    kEscalationPathFieldNumber = 14,
    kUnresolvedThreatsFieldNumber = 15,
    kAdaptiveResponseFieldNumber = 16,
    kComponentThreatCountsFieldNumber = 18,
    kReportIdFieldNumber = 1,
    kAnalysisTimestampFieldNumber = 7,
    kReportAuthorFieldNumber = 11,
    kReportDurationFieldNumber = 12,
    kNextAnalysisScheduledFieldNumber = 17,
    kTotalCriticalThreatsFieldNumber = 3,
    kTotalHighThreatsFieldNumber = 4,
    kTotalModerateThreatsFieldNumber = 5,
    kTotalLowThreatsFieldNumber = 6,
  };
  // repeated .seigr.encryption.IntegrityVerificationLog threat_logs = 2;
  int threat_logs_size() const;
  private:
  int _internal_threat_logs_size() const;

  public:
  void clear_threat_logs() ;
  ::seigr::encryption::IntegrityVerificationLog* mutable_threat_logs(int index);
  ::google::protobuf::RepeatedPtrField<::seigr::encryption::IntegrityVerificationLog>* mutable_threat_logs();

  private:
  const ::google::protobuf::RepeatedPtrField<::seigr::encryption::IntegrityVerificationLog>& _internal_threat_logs() const;
  ::google::protobuf::RepeatedPtrField<::seigr::encryption::IntegrityVerificationLog>* _internal_mutable_threat_logs();
  public:
  const ::seigr::encryption::IntegrityVerificationLog& threat_logs(int index) const;
  ::seigr::encryption::IntegrityVerificationLog* add_threat_logs();
  const ::google::protobuf::RepeatedPtrField<::seigr::encryption::IntegrityVerificationLog>& threat_logs() const;
  // map<string, string> recommended_actions = 8;
  int recommended_actions_size() const;
  private:
  int _internal_recommended_actions_size() const;

  public:
  void clear_recommended_actions() ;
  const ::google::protobuf::Map<std::string, std::string>& recommended_actions() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_recommended_actions();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_recommended_actions() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_recommended_actions();

  public:
  // map<string, string> metadata = 9;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // map<string, int32> action_priority = 10;
  int action_priority_size() const;
  private:
  int _internal_action_priority_size() const;

  public:
  void clear_action_priority() ;
  const ::google::protobuf::Map<std::string, ::int32_t>& action_priority() const;
  ::google::protobuf::Map<std::string, ::int32_t>* mutable_action_priority();

  private:
  const ::google::protobuf::Map<std::string, ::int32_t>& _internal_action_priority() const;
  ::google::protobuf::Map<std::string, ::int32_t>* _internal_mutable_action_priority();

  public:
  // map<string, int32> threat_recurrence = 13;
  int threat_recurrence_size() const;
  private:
  int _internal_threat_recurrence_size() const;

  public:
  void clear_threat_recurrence() ;
  const ::google::protobuf::Map<std::string, ::int32_t>& threat_recurrence() const;
  ::google::protobuf::Map<std::string, ::int32_t>* mutable_threat_recurrence();

  private:
  const ::google::protobuf::Map<std::string, ::int32_t>& _internal_threat_recurrence() const;
  ::google::protobuf::Map<std::string, ::int32_t>* _internal_mutable_threat_recurrence();

  public:
  // repeated string escalation_path = 14;
  int escalation_path_size() const;
  private:
  int _internal_escalation_path_size() const;

  public:
  void clear_escalation_path() ;
  const std::string& escalation_path(int index) const;
  std::string* mutable_escalation_path(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_escalation_path(int index, Arg_&& value, Args_... args);
  std::string* add_escalation_path();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_escalation_path(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& escalation_path() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_escalation_path();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_escalation_path() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_escalation_path();

  public:
  // repeated string unresolved_threats = 15;
  int unresolved_threats_size() const;
  private:
  int _internal_unresolved_threats_size() const;

  public:
  void clear_unresolved_threats() ;
  const std::string& unresolved_threats(int index) const;
  std::string* mutable_unresolved_threats(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_unresolved_threats(int index, Arg_&& value, Args_... args);
  std::string* add_unresolved_threats();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_unresolved_threats(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& unresolved_threats() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_unresolved_threats();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_unresolved_threats() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_unresolved_threats();

  public:
  // map<string, string> adaptive_response = 16;
  int adaptive_response_size() const;
  private:
  int _internal_adaptive_response_size() const;

  public:
  void clear_adaptive_response() ;
  const ::google::protobuf::Map<std::string, std::string>& adaptive_response() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_adaptive_response();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_adaptive_response() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_adaptive_response();

  public:
  // map<string, int32> component_threat_counts = 18;
  int component_threat_counts_size() const;
  private:
  int _internal_component_threat_counts_size() const;

  public:
  void clear_component_threat_counts() ;
  const ::google::protobuf::Map<std::string, ::int32_t>& component_threat_counts() const;
  ::google::protobuf::Map<std::string, ::int32_t>* mutable_component_threat_counts();

  private:
  const ::google::protobuf::Map<std::string, ::int32_t>& _internal_component_threat_counts() const;
  ::google::protobuf::Map<std::string, ::int32_t>* _internal_mutable_component_threat_counts();

  public:
  // string report_id = 1;
  void clear_report_id() ;
  const std::string& report_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_report_id(Arg_&& arg, Args_... args);
  std::string* mutable_report_id();
  PROTOBUF_NODISCARD std::string* release_report_id();
  void set_allocated_report_id(std::string* value);

  private:
  const std::string& _internal_report_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_report_id(
      const std::string& value);
  std::string* _internal_mutable_report_id();

  public:
  // string analysis_timestamp = 7;
  void clear_analysis_timestamp() ;
  const std::string& analysis_timestamp() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_analysis_timestamp(Arg_&& arg, Args_... args);
  std::string* mutable_analysis_timestamp();
  PROTOBUF_NODISCARD std::string* release_analysis_timestamp();
  void set_allocated_analysis_timestamp(std::string* value);

  private:
  const std::string& _internal_analysis_timestamp() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_analysis_timestamp(
      const std::string& value);
  std::string* _internal_mutable_analysis_timestamp();

  public:
  // string report_author = 11;
  void clear_report_author() ;
  const std::string& report_author() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_report_author(Arg_&& arg, Args_... args);
  std::string* mutable_report_author();
  PROTOBUF_NODISCARD std::string* release_report_author();
  void set_allocated_report_author(std::string* value);

  private:
  const std::string& _internal_report_author() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_report_author(
      const std::string& value);
  std::string* _internal_mutable_report_author();

  public:
  // string report_duration = 12;
  void clear_report_duration() ;
  const std::string& report_duration() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_report_duration(Arg_&& arg, Args_... args);
  std::string* mutable_report_duration();
  PROTOBUF_NODISCARD std::string* release_report_duration();
  void set_allocated_report_duration(std::string* value);

  private:
  const std::string& _internal_report_duration() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_report_duration(
      const std::string& value);
  std::string* _internal_mutable_report_duration();

  public:
  // string next_analysis_scheduled = 17;
  void clear_next_analysis_scheduled() ;
  const std::string& next_analysis_scheduled() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_next_analysis_scheduled(Arg_&& arg, Args_... args);
  std::string* mutable_next_analysis_scheduled();
  PROTOBUF_NODISCARD std::string* release_next_analysis_scheduled();
  void set_allocated_next_analysis_scheduled(std::string* value);

  private:
  const std::string& _internal_next_analysis_scheduled() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_next_analysis_scheduled(
      const std::string& value);
  std::string* _internal_mutable_next_analysis_scheduled();

  public:
  // int32 total_critical_threats = 3;
  void clear_total_critical_threats() ;
  ::int32_t total_critical_threats() const;
  void set_total_critical_threats(::int32_t value);

  private:
  ::int32_t _internal_total_critical_threats() const;
  void _internal_set_total_critical_threats(::int32_t value);

  public:
  // int32 total_high_threats = 4;
  void clear_total_high_threats() ;
  ::int32_t total_high_threats() const;
  void set_total_high_threats(::int32_t value);

  private:
  ::int32_t _internal_total_high_threats() const;
  void _internal_set_total_high_threats(::int32_t value);

  public:
  // int32 total_moderate_threats = 5;
  void clear_total_moderate_threats() ;
  ::int32_t total_moderate_threats() const;
  void set_total_moderate_threats(::int32_t value);

  private:
  ::int32_t _internal_total_moderate_threats() const;
  void _internal_set_total_moderate_threats(::int32_t value);

  public:
  // int32 total_low_threats = 6;
  void clear_total_low_threats() ;
  ::int32_t total_low_threats() const;
  void set_total_low_threats(::int32_t value);

  private:
  ::int32_t _internal_total_low_threats() const;
  void _internal_set_total_low_threats(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.integrity.ThreatAnalysisReport)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 18, 7,
      271, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ThreatAnalysisReport& from_msg);
    ::google::protobuf::RepeatedPtrField< ::seigr::encryption::IntegrityVerificationLog > threat_logs_;
    ::google::protobuf::internal::MapField<ThreatAnalysisReport_RecommendedActionsEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        recommended_actions_;
    ::google::protobuf::internal::MapField<ThreatAnalysisReport_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::internal::MapField<ThreatAnalysisReport_ActionPriorityEntry_DoNotUse, std::string, ::int32_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT32>
        action_priority_;
    ::google::protobuf::internal::MapField<ThreatAnalysisReport_ThreatRecurrenceEntry_DoNotUse, std::string, ::int32_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT32>
        threat_recurrence_;
    ::google::protobuf::RepeatedPtrField<std::string> escalation_path_;
    ::google::protobuf::RepeatedPtrField<std::string> unresolved_threats_;
    ::google::protobuf::internal::MapField<ThreatAnalysisReport_AdaptiveResponseEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        adaptive_response_;
    ::google::protobuf::internal::MapField<ThreatAnalysisReport_ComponentThreatCountsEntry_DoNotUse, std::string, ::int32_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT32>
        component_threat_counts_;
    ::google::protobuf::internal::ArenaStringPtr report_id_;
    ::google::protobuf::internal::ArenaStringPtr analysis_timestamp_;
    ::google::protobuf::internal::ArenaStringPtr report_author_;
    ::google::protobuf::internal::ArenaStringPtr report_duration_;
    ::google::protobuf::internal::ArenaStringPtr next_analysis_scheduled_;
    ::int32_t total_critical_threats_;
    ::int32_t total_high_threats_;
    ::int32_t total_moderate_threats_;
    ::int32_t total_low_threats_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_integrity_2eproto;
};
// -------------------------------------------------------------------

class MonitoringCycleResult final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.integrity.MonitoringCycleResult) */ {
 public:
  inline MonitoringCycleResult() : MonitoringCycleResult(nullptr) {}
  ~MonitoringCycleResult() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MonitoringCycleResult* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MonitoringCycleResult));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MonitoringCycleResult(
      ::google::protobuf::internal::ConstantInitialized);

  inline MonitoringCycleResult(const MonitoringCycleResult& from) : MonitoringCycleResult(nullptr, from) {}
  inline MonitoringCycleResult(MonitoringCycleResult&& from) noexcept
      : MonitoringCycleResult(nullptr, std::move(from)) {}
  inline MonitoringCycleResult& operator=(const MonitoringCycleResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline MonitoringCycleResult& operator=(MonitoringCycleResult&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MonitoringCycleResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const MonitoringCycleResult* internal_default_instance() {
    return reinterpret_cast<const MonitoringCycleResult*>(
        &_MonitoringCycleResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(MonitoringCycleResult& a, MonitoringCycleResult& b) { a.Swap(&b); }
  inline void Swap(MonitoringCycleResult* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MonitoringCycleResult* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MonitoringCycleResult* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MonitoringCycleResult>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MonitoringCycleResult& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MonitoringCycleResult& from) { MonitoringCycleResult::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MonitoringCycleResult* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.integrity.MonitoringCycleResult"; }

 protected:
  explicit MonitoringCycleResult(::google::protobuf::Arena* arena);
  MonitoringCycleResult(::google::protobuf::Arena* arena, const MonitoringCycleResult& from);
  MonitoringCycleResult(::google::protobuf::Arena* arena, MonitoringCycleResult&& from) noexcept
      : MonitoringCycleResult(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSegmentsStatusFieldNumber = 2,
    kAdditionalInfoFieldNumber = 6,
    kThreatSeveritiesFieldNumber = 9,
    kThreatSummaryFieldNumber = 11,
    kImpactedComponentsFieldNumber = 13,
    kCycleIdFieldNumber = 1,
    kCompletedAtFieldNumber = 3,
    kCycleDurationFieldNumber = 7,
    kInitiatedByFieldNumber = 8,
    kResolutionStatusFieldNumber = 10,
    kNextCycleScheduledFieldNumber = 12,
    kTotalThreatsDetectedFieldNumber = 4,
    kNewThreatsDetectedFieldNumber = 5,
  };
  // repeated .seigr.segment_metadata.SegmentStatus segments_status = 2;
  int segments_status_size() const;
  private:
  int _internal_segments_status_size() const;

  public:
  void clear_segments_status() ;
  ::seigr::segment_metadata::SegmentStatus* mutable_segments_status(int index);
  ::google::protobuf::RepeatedPtrField<::seigr::segment_metadata::SegmentStatus>* mutable_segments_status();

  private:
  const ::google::protobuf::RepeatedPtrField<::seigr::segment_metadata::SegmentStatus>& _internal_segments_status() const;
  ::google::protobuf::RepeatedPtrField<::seigr::segment_metadata::SegmentStatus>* _internal_mutable_segments_status();
  public:
  const ::seigr::segment_metadata::SegmentStatus& segments_status(int index) const;
  ::seigr::segment_metadata::SegmentStatus* add_segments_status();
  const ::google::protobuf::RepeatedPtrField<::seigr::segment_metadata::SegmentStatus>& segments_status() const;
  // map<string, string> additional_info = 6;
  int additional_info_size() const;
  private:
  int _internal_additional_info_size() const;

  public:
  void clear_additional_info() ;
  const ::google::protobuf::Map<std::string, std::string>& additional_info() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_additional_info();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_additional_info() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_additional_info();

  public:
  // repeated .seigr.integrity.ThreatSeverity threat_severities = 9;
  int threat_severities_size() const;
  private:
  int _internal_threat_severities_size() const;

  public:
  void clear_threat_severities() ;
  public:
  ::seigr::integrity::ThreatSeverity threat_severities(int index) const;
  void set_threat_severities(int index, ::seigr::integrity::ThreatSeverity value);
  void add_threat_severities(::seigr::integrity::ThreatSeverity value);
  const ::google::protobuf::RepeatedField<int>& threat_severities() const;
  ::google::protobuf::RepeatedField<int>* mutable_threat_severities();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_threat_severities() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_threat_severities();

  public:
  // map<string, int32> threat_summary = 11;
  int threat_summary_size() const;
  private:
  int _internal_threat_summary_size() const;

  public:
  void clear_threat_summary() ;
  const ::google::protobuf::Map<std::string, ::int32_t>& threat_summary() const;
  ::google::protobuf::Map<std::string, ::int32_t>* mutable_threat_summary();

  private:
  const ::google::protobuf::Map<std::string, ::int32_t>& _internal_threat_summary() const;
  ::google::protobuf::Map<std::string, ::int32_t>* _internal_mutable_threat_summary();

  public:
  // repeated string impacted_components = 13;
  int impacted_components_size() const;
  private:
  int _internal_impacted_components_size() const;

  public:
  void clear_impacted_components() ;
  const std::string& impacted_components(int index) const;
  std::string* mutable_impacted_components(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_impacted_components(int index, Arg_&& value, Args_... args);
  std::string* add_impacted_components();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_impacted_components(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& impacted_components() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_impacted_components();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_impacted_components() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_impacted_components();

  public:
  // string cycle_id = 1;
  void clear_cycle_id() ;
  const std::string& cycle_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_cycle_id(Arg_&& arg, Args_... args);
  std::string* mutable_cycle_id();
  PROTOBUF_NODISCARD std::string* release_cycle_id();
  void set_allocated_cycle_id(std::string* value);

  private:
  const std::string& _internal_cycle_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_cycle_id(
      const std::string& value);
  std::string* _internal_mutable_cycle_id();

  public:
  // string completed_at = 3;
  void clear_completed_at() ;
  const std::string& completed_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_completed_at(Arg_&& arg, Args_... args);
  std::string* mutable_completed_at();
  PROTOBUF_NODISCARD std::string* release_completed_at();
  void set_allocated_completed_at(std::string* value);

  private:
  const std::string& _internal_completed_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_completed_at(
      const std::string& value);
  std::string* _internal_mutable_completed_at();

  public:
  // string cycle_duration = 7;
  void clear_cycle_duration() ;
  const std::string& cycle_duration() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_cycle_duration(Arg_&& arg, Args_... args);
  std::string* mutable_cycle_duration();
  PROTOBUF_NODISCARD std::string* release_cycle_duration();
  void set_allocated_cycle_duration(std::string* value);

  private:
  const std::string& _internal_cycle_duration() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_cycle_duration(
      const std::string& value);
  std::string* _internal_mutable_cycle_duration();

  public:
  // string initiated_by = 8;
  void clear_initiated_by() ;
  const std::string& initiated_by() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_initiated_by(Arg_&& arg, Args_... args);
  std::string* mutable_initiated_by();
  PROTOBUF_NODISCARD std::string* release_initiated_by();
  void set_allocated_initiated_by(std::string* value);

  private:
  const std::string& _internal_initiated_by() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_initiated_by(
      const std::string& value);
  std::string* _internal_mutable_initiated_by();

  public:
  // string resolution_status = 10;
  void clear_resolution_status() ;
  const std::string& resolution_status() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_resolution_status(Arg_&& arg, Args_... args);
  std::string* mutable_resolution_status();
  PROTOBUF_NODISCARD std::string* release_resolution_status();
  void set_allocated_resolution_status(std::string* value);

  private:
  const std::string& _internal_resolution_status() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_resolution_status(
      const std::string& value);
  std::string* _internal_mutable_resolution_status();

  public:
  // string next_cycle_scheduled = 12;
  void clear_next_cycle_scheduled() ;
  const std::string& next_cycle_scheduled() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_next_cycle_scheduled(Arg_&& arg, Args_... args);
  std::string* mutable_next_cycle_scheduled();
  PROTOBUF_NODISCARD std::string* release_next_cycle_scheduled();
  void set_allocated_next_cycle_scheduled(std::string* value);

  private:
  const std::string& _internal_next_cycle_scheduled() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_next_cycle_scheduled(
      const std::string& value);
  std::string* _internal_mutable_next_cycle_scheduled();

  public:
  // int32 total_threats_detected = 4;
  void clear_total_threats_detected() ;
  ::int32_t total_threats_detected() const;
  void set_total_threats_detected(::int32_t value);

  private:
  ::int32_t _internal_total_threats_detected() const;
  void _internal_set_total_threats_detected(::int32_t value);

  public:
  // int32 new_threats_detected = 5;
  void clear_new_threats_detected() ;
  ::int32_t new_threats_detected() const;
  void set_new_threats_detected(::int32_t value);

  private:
  ::int32_t _internal_new_threats_detected() const;
  void _internal_set_new_threats_detected(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.integrity.MonitoringCycleResult)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 13, 3,
      185, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MonitoringCycleResult& from_msg);
    ::google::protobuf::RepeatedPtrField< ::seigr::segment_metadata::SegmentStatus > segments_status_;
    ::google::protobuf::internal::MapField<MonitoringCycleResult_AdditionalInfoEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        additional_info_;
    ::google::protobuf::RepeatedField<int> threat_severities_;
    ::google::protobuf::internal::CachedSize _threat_severities_cached_byte_size_;
    ::google::protobuf::internal::MapField<MonitoringCycleResult_ThreatSummaryEntry_DoNotUse, std::string, ::int32_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT32>
        threat_summary_;
    ::google::protobuf::RepeatedPtrField<std::string> impacted_components_;
    ::google::protobuf::internal::ArenaStringPtr cycle_id_;
    ::google::protobuf::internal::ArenaStringPtr completed_at_;
    ::google::protobuf::internal::ArenaStringPtr cycle_duration_;
    ::google::protobuf::internal::ArenaStringPtr initiated_by_;
    ::google::protobuf::internal::ArenaStringPtr resolution_status_;
    ::google::protobuf::internal::ArenaStringPtr next_cycle_scheduled_;
    ::int32_t total_threats_detected_;
    ::int32_t new_threats_detected_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_integrity_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// MonitoringCycleResult

// string cycle_id = 1;
inline void MonitoringCycleResult::clear_cycle_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cycle_id_.ClearToEmpty();
}
inline const std::string& MonitoringCycleResult::cycle_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.integrity.MonitoringCycleResult.cycle_id)
  return _internal_cycle_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MonitoringCycleResult::set_cycle_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cycle_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.integrity.MonitoringCycleResult.cycle_id)
}
inline std::string* MonitoringCycleResult::mutable_cycle_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_cycle_id();
  // @@protoc_insertion_point(field_mutable:seigr.integrity.MonitoringCycleResult.cycle_id)
  return _s;
}
inline const std::string& MonitoringCycleResult::_internal_cycle_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cycle_id_.Get();
}
inline void MonitoringCycleResult::_internal_set_cycle_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cycle_id_.Set(value, GetArena());
}
inline std::string* MonitoringCycleResult::_internal_mutable_cycle_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.cycle_id_.Mutable( GetArena());
}
inline std::string* MonitoringCycleResult::release_cycle_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.integrity.MonitoringCycleResult.cycle_id)
  return _impl_.cycle_id_.Release();
}
inline void MonitoringCycleResult::set_allocated_cycle_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cycle_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.cycle_id_.IsDefault()) {
    _impl_.cycle_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.integrity.MonitoringCycleResult.cycle_id)
}

// repeated .seigr.segment_metadata.SegmentStatus segments_status = 2;
inline int MonitoringCycleResult::_internal_segments_status_size() const {
  return _internal_segments_status().size();
}
inline int MonitoringCycleResult::segments_status_size() const {
  return _internal_segments_status_size();
}
inline ::seigr::segment_metadata::SegmentStatus* MonitoringCycleResult::mutable_segments_status(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.integrity.MonitoringCycleResult.segments_status)
  return _internal_mutable_segments_status()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seigr::segment_metadata::SegmentStatus>* MonitoringCycleResult::mutable_segments_status()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.integrity.MonitoringCycleResult.segments_status)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_segments_status();
}
inline const ::seigr::segment_metadata::SegmentStatus& MonitoringCycleResult::segments_status(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.integrity.MonitoringCycleResult.segments_status)
  return _internal_segments_status().Get(index);
}
inline ::seigr::segment_metadata::SegmentStatus* MonitoringCycleResult::add_segments_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seigr::segment_metadata::SegmentStatus* _add = _internal_mutable_segments_status()->Add();
  // @@protoc_insertion_point(field_add:seigr.integrity.MonitoringCycleResult.segments_status)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seigr::segment_metadata::SegmentStatus>& MonitoringCycleResult::segments_status() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.integrity.MonitoringCycleResult.segments_status)
  return _internal_segments_status();
}
inline const ::google::protobuf::RepeatedPtrField<::seigr::segment_metadata::SegmentStatus>&
MonitoringCycleResult::_internal_segments_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.segments_status_;
}
inline ::google::protobuf::RepeatedPtrField<::seigr::segment_metadata::SegmentStatus>*
MonitoringCycleResult::_internal_mutable_segments_status() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.segments_status_;
}

// string completed_at = 3;
inline void MonitoringCycleResult::clear_completed_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.completed_at_.ClearToEmpty();
}
inline const std::string& MonitoringCycleResult::completed_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.integrity.MonitoringCycleResult.completed_at)
  return _internal_completed_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MonitoringCycleResult::set_completed_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.completed_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.integrity.MonitoringCycleResult.completed_at)
}
inline std::string* MonitoringCycleResult::mutable_completed_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_completed_at();
  // @@protoc_insertion_point(field_mutable:seigr.integrity.MonitoringCycleResult.completed_at)
  return _s;
}
inline const std::string& MonitoringCycleResult::_internal_completed_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.completed_at_.Get();
}
inline void MonitoringCycleResult::_internal_set_completed_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.completed_at_.Set(value, GetArena());
}
inline std::string* MonitoringCycleResult::_internal_mutable_completed_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.completed_at_.Mutable( GetArena());
}
inline std::string* MonitoringCycleResult::release_completed_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.integrity.MonitoringCycleResult.completed_at)
  return _impl_.completed_at_.Release();
}
inline void MonitoringCycleResult::set_allocated_completed_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.completed_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.completed_at_.IsDefault()) {
    _impl_.completed_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.integrity.MonitoringCycleResult.completed_at)
}

// int32 total_threats_detected = 4;
inline void MonitoringCycleResult::clear_total_threats_detected() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_threats_detected_ = 0;
}
inline ::int32_t MonitoringCycleResult::total_threats_detected() const {
  // @@protoc_insertion_point(field_get:seigr.integrity.MonitoringCycleResult.total_threats_detected)
  return _internal_total_threats_detected();
}
inline void MonitoringCycleResult::set_total_threats_detected(::int32_t value) {
  _internal_set_total_threats_detected(value);
  // @@protoc_insertion_point(field_set:seigr.integrity.MonitoringCycleResult.total_threats_detected)
}
inline ::int32_t MonitoringCycleResult::_internal_total_threats_detected() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_threats_detected_;
}
inline void MonitoringCycleResult::_internal_set_total_threats_detected(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_threats_detected_ = value;
}

// int32 new_threats_detected = 5;
inline void MonitoringCycleResult::clear_new_threats_detected() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.new_threats_detected_ = 0;
}
inline ::int32_t MonitoringCycleResult::new_threats_detected() const {
  // @@protoc_insertion_point(field_get:seigr.integrity.MonitoringCycleResult.new_threats_detected)
  return _internal_new_threats_detected();
}
inline void MonitoringCycleResult::set_new_threats_detected(::int32_t value) {
  _internal_set_new_threats_detected(value);
  // @@protoc_insertion_point(field_set:seigr.integrity.MonitoringCycleResult.new_threats_detected)
}
inline ::int32_t MonitoringCycleResult::_internal_new_threats_detected() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.new_threats_detected_;
}
inline void MonitoringCycleResult::_internal_set_new_threats_detected(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.new_threats_detected_ = value;
}

// map<string, string> additional_info = 6;
inline int MonitoringCycleResult::_internal_additional_info_size() const {
  return _internal_additional_info().size();
}
inline int MonitoringCycleResult::additional_info_size() const {
  return _internal_additional_info_size();
}
inline void MonitoringCycleResult::clear_additional_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.additional_info_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& MonitoringCycleResult::_internal_additional_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.additional_info_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& MonitoringCycleResult::additional_info() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.integrity.MonitoringCycleResult.additional_info)
  return _internal_additional_info();
}
inline ::google::protobuf::Map<std::string, std::string>* MonitoringCycleResult::_internal_mutable_additional_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.additional_info_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* MonitoringCycleResult::mutable_additional_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.integrity.MonitoringCycleResult.additional_info)
  return _internal_mutable_additional_info();
}

// string cycle_duration = 7;
inline void MonitoringCycleResult::clear_cycle_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cycle_duration_.ClearToEmpty();
}
inline const std::string& MonitoringCycleResult::cycle_duration() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.integrity.MonitoringCycleResult.cycle_duration)
  return _internal_cycle_duration();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MonitoringCycleResult::set_cycle_duration(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cycle_duration_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.integrity.MonitoringCycleResult.cycle_duration)
}
inline std::string* MonitoringCycleResult::mutable_cycle_duration() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_cycle_duration();
  // @@protoc_insertion_point(field_mutable:seigr.integrity.MonitoringCycleResult.cycle_duration)
  return _s;
}
inline const std::string& MonitoringCycleResult::_internal_cycle_duration() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cycle_duration_.Get();
}
inline void MonitoringCycleResult::_internal_set_cycle_duration(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cycle_duration_.Set(value, GetArena());
}
inline std::string* MonitoringCycleResult::_internal_mutable_cycle_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.cycle_duration_.Mutable( GetArena());
}
inline std::string* MonitoringCycleResult::release_cycle_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.integrity.MonitoringCycleResult.cycle_duration)
  return _impl_.cycle_duration_.Release();
}
inline void MonitoringCycleResult::set_allocated_cycle_duration(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cycle_duration_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.cycle_duration_.IsDefault()) {
    _impl_.cycle_duration_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.integrity.MonitoringCycleResult.cycle_duration)
}

// string initiated_by = 8;
inline void MonitoringCycleResult::clear_initiated_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initiated_by_.ClearToEmpty();
}
inline const std::string& MonitoringCycleResult::initiated_by() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.integrity.MonitoringCycleResult.initiated_by)
  return _internal_initiated_by();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MonitoringCycleResult::set_initiated_by(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initiated_by_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.integrity.MonitoringCycleResult.initiated_by)
}
inline std::string* MonitoringCycleResult::mutable_initiated_by() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_initiated_by();
  // @@protoc_insertion_point(field_mutable:seigr.integrity.MonitoringCycleResult.initiated_by)
  return _s;
}
inline const std::string& MonitoringCycleResult::_internal_initiated_by() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.initiated_by_.Get();
}
inline void MonitoringCycleResult::_internal_set_initiated_by(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initiated_by_.Set(value, GetArena());
}
inline std::string* MonitoringCycleResult::_internal_mutable_initiated_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.initiated_by_.Mutable( GetArena());
}
inline std::string* MonitoringCycleResult::release_initiated_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.integrity.MonitoringCycleResult.initiated_by)
  return _impl_.initiated_by_.Release();
}
inline void MonitoringCycleResult::set_allocated_initiated_by(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initiated_by_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.initiated_by_.IsDefault()) {
    _impl_.initiated_by_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.integrity.MonitoringCycleResult.initiated_by)
}

// repeated .seigr.integrity.ThreatSeverity threat_severities = 9;
inline int MonitoringCycleResult::_internal_threat_severities_size() const {
  return _internal_threat_severities().size();
}
inline int MonitoringCycleResult::threat_severities_size() const {
  return _internal_threat_severities_size();
}
inline void MonitoringCycleResult::clear_threat_severities() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.threat_severities_.Clear();
}
inline ::seigr::integrity::ThreatSeverity MonitoringCycleResult::threat_severities(int index) const {
  // @@protoc_insertion_point(field_get:seigr.integrity.MonitoringCycleResult.threat_severities)
  return static_cast<::seigr::integrity::ThreatSeverity>(_internal_threat_severities().Get(index));
}
inline void MonitoringCycleResult::set_threat_severities(int index, ::seigr::integrity::ThreatSeverity value) {
  _internal_mutable_threat_severities()->Set(index, value);
  // @@protoc_insertion_point(field_set:seigr.integrity.MonitoringCycleResult.threat_severities)
}
inline void MonitoringCycleResult::add_threat_severities(::seigr::integrity::ThreatSeverity value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_threat_severities()->Add(value);
  // @@protoc_insertion_point(field_add:seigr.integrity.MonitoringCycleResult.threat_severities)
}
inline const ::google::protobuf::RepeatedField<int>& MonitoringCycleResult::threat_severities() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.integrity.MonitoringCycleResult.threat_severities)
  return _internal_threat_severities();
}
inline ::google::protobuf::RepeatedField<int>* MonitoringCycleResult::mutable_threat_severities()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.integrity.MonitoringCycleResult.threat_severities)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_threat_severities();
}
inline const ::google::protobuf::RepeatedField<int>& MonitoringCycleResult::_internal_threat_severities()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.threat_severities_;
}
inline ::google::protobuf::RepeatedField<int>* MonitoringCycleResult::_internal_mutable_threat_severities() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.threat_severities_;
}

// string resolution_status = 10;
inline void MonitoringCycleResult::clear_resolution_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resolution_status_.ClearToEmpty();
}
inline const std::string& MonitoringCycleResult::resolution_status() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.integrity.MonitoringCycleResult.resolution_status)
  return _internal_resolution_status();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MonitoringCycleResult::set_resolution_status(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resolution_status_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.integrity.MonitoringCycleResult.resolution_status)
}
inline std::string* MonitoringCycleResult::mutable_resolution_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_resolution_status();
  // @@protoc_insertion_point(field_mutable:seigr.integrity.MonitoringCycleResult.resolution_status)
  return _s;
}
inline const std::string& MonitoringCycleResult::_internal_resolution_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.resolution_status_.Get();
}
inline void MonitoringCycleResult::_internal_set_resolution_status(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resolution_status_.Set(value, GetArena());
}
inline std::string* MonitoringCycleResult::_internal_mutable_resolution_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.resolution_status_.Mutable( GetArena());
}
inline std::string* MonitoringCycleResult::release_resolution_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.integrity.MonitoringCycleResult.resolution_status)
  return _impl_.resolution_status_.Release();
}
inline void MonitoringCycleResult::set_allocated_resolution_status(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resolution_status_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.resolution_status_.IsDefault()) {
    _impl_.resolution_status_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.integrity.MonitoringCycleResult.resolution_status)
}

// map<string, int32> threat_summary = 11;
inline int MonitoringCycleResult::_internal_threat_summary_size() const {
  return _internal_threat_summary().size();
}
inline int MonitoringCycleResult::threat_summary_size() const {
  return _internal_threat_summary_size();
}
inline void MonitoringCycleResult::clear_threat_summary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.threat_summary_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::int32_t>& MonitoringCycleResult::_internal_threat_summary() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.threat_summary_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::int32_t>& MonitoringCycleResult::threat_summary() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.integrity.MonitoringCycleResult.threat_summary)
  return _internal_threat_summary();
}
inline ::google::protobuf::Map<std::string, ::int32_t>* MonitoringCycleResult::_internal_mutable_threat_summary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.threat_summary_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::int32_t>* MonitoringCycleResult::mutable_threat_summary() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.integrity.MonitoringCycleResult.threat_summary)
  return _internal_mutable_threat_summary();
}

// string next_cycle_scheduled = 12;
inline void MonitoringCycleResult::clear_next_cycle_scheduled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.next_cycle_scheduled_.ClearToEmpty();
}
inline const std::string& MonitoringCycleResult::next_cycle_scheduled() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.integrity.MonitoringCycleResult.next_cycle_scheduled)
  return _internal_next_cycle_scheduled();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MonitoringCycleResult::set_next_cycle_scheduled(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.next_cycle_scheduled_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.integrity.MonitoringCycleResult.next_cycle_scheduled)
}
inline std::string* MonitoringCycleResult::mutable_next_cycle_scheduled() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_next_cycle_scheduled();
  // @@protoc_insertion_point(field_mutable:seigr.integrity.MonitoringCycleResult.next_cycle_scheduled)
  return _s;
}
inline const std::string& MonitoringCycleResult::_internal_next_cycle_scheduled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.next_cycle_scheduled_.Get();
}
inline void MonitoringCycleResult::_internal_set_next_cycle_scheduled(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.next_cycle_scheduled_.Set(value, GetArena());
}
inline std::string* MonitoringCycleResult::_internal_mutable_next_cycle_scheduled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.next_cycle_scheduled_.Mutable( GetArena());
}
inline std::string* MonitoringCycleResult::release_next_cycle_scheduled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.integrity.MonitoringCycleResult.next_cycle_scheduled)
  return _impl_.next_cycle_scheduled_.Release();
}
inline void MonitoringCycleResult::set_allocated_next_cycle_scheduled(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.next_cycle_scheduled_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.next_cycle_scheduled_.IsDefault()) {
    _impl_.next_cycle_scheduled_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.integrity.MonitoringCycleResult.next_cycle_scheduled)
}

// repeated string impacted_components = 13;
inline int MonitoringCycleResult::_internal_impacted_components_size() const {
  return _internal_impacted_components().size();
}
inline int MonitoringCycleResult::impacted_components_size() const {
  return _internal_impacted_components_size();
}
inline void MonitoringCycleResult::clear_impacted_components() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.impacted_components_.Clear();
}
inline std::string* MonitoringCycleResult::add_impacted_components() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_impacted_components()->Add();
  // @@protoc_insertion_point(field_add_mutable:seigr.integrity.MonitoringCycleResult.impacted_components)
  return _s;
}
inline const std::string& MonitoringCycleResult::impacted_components(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.integrity.MonitoringCycleResult.impacted_components)
  return _internal_impacted_components().Get(index);
}
inline std::string* MonitoringCycleResult::mutable_impacted_components(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.integrity.MonitoringCycleResult.impacted_components)
  return _internal_mutable_impacted_components()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void MonitoringCycleResult::set_impacted_components(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_impacted_components()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:seigr.integrity.MonitoringCycleResult.impacted_components)
}
template <typename Arg_, typename... Args_>
inline void MonitoringCycleResult::add_impacted_components(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_impacted_components(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seigr.integrity.MonitoringCycleResult.impacted_components)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
MonitoringCycleResult::impacted_components() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.integrity.MonitoringCycleResult.impacted_components)
  return _internal_impacted_components();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
MonitoringCycleResult::mutable_impacted_components() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.integrity.MonitoringCycleResult.impacted_components)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_impacted_components();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
MonitoringCycleResult::_internal_impacted_components() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.impacted_components_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
MonitoringCycleResult::_internal_mutable_impacted_components() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.impacted_components_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ThreatAnalysisReport

// string report_id = 1;
inline void ThreatAnalysisReport::clear_report_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.report_id_.ClearToEmpty();
}
inline const std::string& ThreatAnalysisReport::report_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.integrity.ThreatAnalysisReport.report_id)
  return _internal_report_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ThreatAnalysisReport::set_report_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.report_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.integrity.ThreatAnalysisReport.report_id)
}
inline std::string* ThreatAnalysisReport::mutable_report_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_report_id();
  // @@protoc_insertion_point(field_mutable:seigr.integrity.ThreatAnalysisReport.report_id)
  return _s;
}
inline const std::string& ThreatAnalysisReport::_internal_report_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.report_id_.Get();
}
inline void ThreatAnalysisReport::_internal_set_report_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.report_id_.Set(value, GetArena());
}
inline std::string* ThreatAnalysisReport::_internal_mutable_report_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.report_id_.Mutable( GetArena());
}
inline std::string* ThreatAnalysisReport::release_report_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.integrity.ThreatAnalysisReport.report_id)
  return _impl_.report_id_.Release();
}
inline void ThreatAnalysisReport::set_allocated_report_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.report_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.report_id_.IsDefault()) {
    _impl_.report_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.integrity.ThreatAnalysisReport.report_id)
}

// repeated .seigr.encryption.IntegrityVerificationLog threat_logs = 2;
inline int ThreatAnalysisReport::_internal_threat_logs_size() const {
  return _internal_threat_logs().size();
}
inline int ThreatAnalysisReport::threat_logs_size() const {
  return _internal_threat_logs_size();
}
inline ::seigr::encryption::IntegrityVerificationLog* ThreatAnalysisReport::mutable_threat_logs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.integrity.ThreatAnalysisReport.threat_logs)
  return _internal_mutable_threat_logs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seigr::encryption::IntegrityVerificationLog>* ThreatAnalysisReport::mutable_threat_logs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.integrity.ThreatAnalysisReport.threat_logs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_threat_logs();
}
inline const ::seigr::encryption::IntegrityVerificationLog& ThreatAnalysisReport::threat_logs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.integrity.ThreatAnalysisReport.threat_logs)
  return _internal_threat_logs().Get(index);
}
inline ::seigr::encryption::IntegrityVerificationLog* ThreatAnalysisReport::add_threat_logs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seigr::encryption::IntegrityVerificationLog* _add = _internal_mutable_threat_logs()->Add();
  // @@protoc_insertion_point(field_add:seigr.integrity.ThreatAnalysisReport.threat_logs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seigr::encryption::IntegrityVerificationLog>& ThreatAnalysisReport::threat_logs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.integrity.ThreatAnalysisReport.threat_logs)
  return _internal_threat_logs();
}
inline const ::google::protobuf::RepeatedPtrField<::seigr::encryption::IntegrityVerificationLog>&
ThreatAnalysisReport::_internal_threat_logs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.threat_logs_;
}
inline ::google::protobuf::RepeatedPtrField<::seigr::encryption::IntegrityVerificationLog>*
ThreatAnalysisReport::_internal_mutable_threat_logs() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.threat_logs_;
}

// int32 total_critical_threats = 3;
inline void ThreatAnalysisReport::clear_total_critical_threats() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_critical_threats_ = 0;
}
inline ::int32_t ThreatAnalysisReport::total_critical_threats() const {
  // @@protoc_insertion_point(field_get:seigr.integrity.ThreatAnalysisReport.total_critical_threats)
  return _internal_total_critical_threats();
}
inline void ThreatAnalysisReport::set_total_critical_threats(::int32_t value) {
  _internal_set_total_critical_threats(value);
  // @@protoc_insertion_point(field_set:seigr.integrity.ThreatAnalysisReport.total_critical_threats)
}
inline ::int32_t ThreatAnalysisReport::_internal_total_critical_threats() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_critical_threats_;
}
inline void ThreatAnalysisReport::_internal_set_total_critical_threats(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_critical_threats_ = value;
}

// int32 total_high_threats = 4;
inline void ThreatAnalysisReport::clear_total_high_threats() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_high_threats_ = 0;
}
inline ::int32_t ThreatAnalysisReport::total_high_threats() const {
  // @@protoc_insertion_point(field_get:seigr.integrity.ThreatAnalysisReport.total_high_threats)
  return _internal_total_high_threats();
}
inline void ThreatAnalysisReport::set_total_high_threats(::int32_t value) {
  _internal_set_total_high_threats(value);
  // @@protoc_insertion_point(field_set:seigr.integrity.ThreatAnalysisReport.total_high_threats)
}
inline ::int32_t ThreatAnalysisReport::_internal_total_high_threats() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_high_threats_;
}
inline void ThreatAnalysisReport::_internal_set_total_high_threats(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_high_threats_ = value;
}

// int32 total_moderate_threats = 5;
inline void ThreatAnalysisReport::clear_total_moderate_threats() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_moderate_threats_ = 0;
}
inline ::int32_t ThreatAnalysisReport::total_moderate_threats() const {
  // @@protoc_insertion_point(field_get:seigr.integrity.ThreatAnalysisReport.total_moderate_threats)
  return _internal_total_moderate_threats();
}
inline void ThreatAnalysisReport::set_total_moderate_threats(::int32_t value) {
  _internal_set_total_moderate_threats(value);
  // @@protoc_insertion_point(field_set:seigr.integrity.ThreatAnalysisReport.total_moderate_threats)
}
inline ::int32_t ThreatAnalysisReport::_internal_total_moderate_threats() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_moderate_threats_;
}
inline void ThreatAnalysisReport::_internal_set_total_moderate_threats(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_moderate_threats_ = value;
}

// int32 total_low_threats = 6;
inline void ThreatAnalysisReport::clear_total_low_threats() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_low_threats_ = 0;
}
inline ::int32_t ThreatAnalysisReport::total_low_threats() const {
  // @@protoc_insertion_point(field_get:seigr.integrity.ThreatAnalysisReport.total_low_threats)
  return _internal_total_low_threats();
}
inline void ThreatAnalysisReport::set_total_low_threats(::int32_t value) {
  _internal_set_total_low_threats(value);
  // @@protoc_insertion_point(field_set:seigr.integrity.ThreatAnalysisReport.total_low_threats)
}
inline ::int32_t ThreatAnalysisReport::_internal_total_low_threats() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_low_threats_;
}
inline void ThreatAnalysisReport::_internal_set_total_low_threats(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_low_threats_ = value;
}

// string analysis_timestamp = 7;
inline void ThreatAnalysisReport::clear_analysis_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.analysis_timestamp_.ClearToEmpty();
}
inline const std::string& ThreatAnalysisReport::analysis_timestamp() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.integrity.ThreatAnalysisReport.analysis_timestamp)
  return _internal_analysis_timestamp();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ThreatAnalysisReport::set_analysis_timestamp(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.analysis_timestamp_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.integrity.ThreatAnalysisReport.analysis_timestamp)
}
inline std::string* ThreatAnalysisReport::mutable_analysis_timestamp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_analysis_timestamp();
  // @@protoc_insertion_point(field_mutable:seigr.integrity.ThreatAnalysisReport.analysis_timestamp)
  return _s;
}
inline const std::string& ThreatAnalysisReport::_internal_analysis_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.analysis_timestamp_.Get();
}
inline void ThreatAnalysisReport::_internal_set_analysis_timestamp(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.analysis_timestamp_.Set(value, GetArena());
}
inline std::string* ThreatAnalysisReport::_internal_mutable_analysis_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.analysis_timestamp_.Mutable( GetArena());
}
inline std::string* ThreatAnalysisReport::release_analysis_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.integrity.ThreatAnalysisReport.analysis_timestamp)
  return _impl_.analysis_timestamp_.Release();
}
inline void ThreatAnalysisReport::set_allocated_analysis_timestamp(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.analysis_timestamp_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.analysis_timestamp_.IsDefault()) {
    _impl_.analysis_timestamp_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.integrity.ThreatAnalysisReport.analysis_timestamp)
}

// map<string, string> recommended_actions = 8;
inline int ThreatAnalysisReport::_internal_recommended_actions_size() const {
  return _internal_recommended_actions().size();
}
inline int ThreatAnalysisReport::recommended_actions_size() const {
  return _internal_recommended_actions_size();
}
inline void ThreatAnalysisReport::clear_recommended_actions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recommended_actions_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& ThreatAnalysisReport::_internal_recommended_actions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.recommended_actions_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& ThreatAnalysisReport::recommended_actions() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.integrity.ThreatAnalysisReport.recommended_actions)
  return _internal_recommended_actions();
}
inline ::google::protobuf::Map<std::string, std::string>* ThreatAnalysisReport::_internal_mutable_recommended_actions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.recommended_actions_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* ThreatAnalysisReport::mutable_recommended_actions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.integrity.ThreatAnalysisReport.recommended_actions)
  return _internal_mutable_recommended_actions();
}

// map<string, string> metadata = 9;
inline int ThreatAnalysisReport::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int ThreatAnalysisReport::metadata_size() const {
  return _internal_metadata_size();
}
inline void ThreatAnalysisReport::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& ThreatAnalysisReport::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& ThreatAnalysisReport::metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.integrity.ThreatAnalysisReport.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* ThreatAnalysisReport::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* ThreatAnalysisReport::mutable_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.integrity.ThreatAnalysisReport.metadata)
  return _internal_mutable_metadata();
}

// map<string, int32> action_priority = 10;
inline int ThreatAnalysisReport::_internal_action_priority_size() const {
  return _internal_action_priority().size();
}
inline int ThreatAnalysisReport::action_priority_size() const {
  return _internal_action_priority_size();
}
inline void ThreatAnalysisReport::clear_action_priority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.action_priority_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::int32_t>& ThreatAnalysisReport::_internal_action_priority() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.action_priority_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::int32_t>& ThreatAnalysisReport::action_priority() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.integrity.ThreatAnalysisReport.action_priority)
  return _internal_action_priority();
}
inline ::google::protobuf::Map<std::string, ::int32_t>* ThreatAnalysisReport::_internal_mutable_action_priority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.action_priority_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::int32_t>* ThreatAnalysisReport::mutable_action_priority() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.integrity.ThreatAnalysisReport.action_priority)
  return _internal_mutable_action_priority();
}

// string report_author = 11;
inline void ThreatAnalysisReport::clear_report_author() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.report_author_.ClearToEmpty();
}
inline const std::string& ThreatAnalysisReport::report_author() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.integrity.ThreatAnalysisReport.report_author)
  return _internal_report_author();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ThreatAnalysisReport::set_report_author(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.report_author_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.integrity.ThreatAnalysisReport.report_author)
}
inline std::string* ThreatAnalysisReport::mutable_report_author() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_report_author();
  // @@protoc_insertion_point(field_mutable:seigr.integrity.ThreatAnalysisReport.report_author)
  return _s;
}
inline const std::string& ThreatAnalysisReport::_internal_report_author() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.report_author_.Get();
}
inline void ThreatAnalysisReport::_internal_set_report_author(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.report_author_.Set(value, GetArena());
}
inline std::string* ThreatAnalysisReport::_internal_mutable_report_author() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.report_author_.Mutable( GetArena());
}
inline std::string* ThreatAnalysisReport::release_report_author() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.integrity.ThreatAnalysisReport.report_author)
  return _impl_.report_author_.Release();
}
inline void ThreatAnalysisReport::set_allocated_report_author(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.report_author_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.report_author_.IsDefault()) {
    _impl_.report_author_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.integrity.ThreatAnalysisReport.report_author)
}

// string report_duration = 12;
inline void ThreatAnalysisReport::clear_report_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.report_duration_.ClearToEmpty();
}
inline const std::string& ThreatAnalysisReport::report_duration() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.integrity.ThreatAnalysisReport.report_duration)
  return _internal_report_duration();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ThreatAnalysisReport::set_report_duration(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.report_duration_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.integrity.ThreatAnalysisReport.report_duration)
}
inline std::string* ThreatAnalysisReport::mutable_report_duration() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_report_duration();
  // @@protoc_insertion_point(field_mutable:seigr.integrity.ThreatAnalysisReport.report_duration)
  return _s;
}
inline const std::string& ThreatAnalysisReport::_internal_report_duration() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.report_duration_.Get();
}
inline void ThreatAnalysisReport::_internal_set_report_duration(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.report_duration_.Set(value, GetArena());
}
inline std::string* ThreatAnalysisReport::_internal_mutable_report_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.report_duration_.Mutable( GetArena());
}
inline std::string* ThreatAnalysisReport::release_report_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.integrity.ThreatAnalysisReport.report_duration)
  return _impl_.report_duration_.Release();
}
inline void ThreatAnalysisReport::set_allocated_report_duration(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.report_duration_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.report_duration_.IsDefault()) {
    _impl_.report_duration_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.integrity.ThreatAnalysisReport.report_duration)
}

// map<string, int32> threat_recurrence = 13;
inline int ThreatAnalysisReport::_internal_threat_recurrence_size() const {
  return _internal_threat_recurrence().size();
}
inline int ThreatAnalysisReport::threat_recurrence_size() const {
  return _internal_threat_recurrence_size();
}
inline void ThreatAnalysisReport::clear_threat_recurrence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.threat_recurrence_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::int32_t>& ThreatAnalysisReport::_internal_threat_recurrence() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.threat_recurrence_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::int32_t>& ThreatAnalysisReport::threat_recurrence() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.integrity.ThreatAnalysisReport.threat_recurrence)
  return _internal_threat_recurrence();
}
inline ::google::protobuf::Map<std::string, ::int32_t>* ThreatAnalysisReport::_internal_mutable_threat_recurrence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.threat_recurrence_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::int32_t>* ThreatAnalysisReport::mutable_threat_recurrence() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.integrity.ThreatAnalysisReport.threat_recurrence)
  return _internal_mutable_threat_recurrence();
}

// repeated string escalation_path = 14;
inline int ThreatAnalysisReport::_internal_escalation_path_size() const {
  return _internal_escalation_path().size();
}
inline int ThreatAnalysisReport::escalation_path_size() const {
  return _internal_escalation_path_size();
}
inline void ThreatAnalysisReport::clear_escalation_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.escalation_path_.Clear();
}
inline std::string* ThreatAnalysisReport::add_escalation_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_escalation_path()->Add();
  // @@protoc_insertion_point(field_add_mutable:seigr.integrity.ThreatAnalysisReport.escalation_path)
  return _s;
}
inline const std::string& ThreatAnalysisReport::escalation_path(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.integrity.ThreatAnalysisReport.escalation_path)
  return _internal_escalation_path().Get(index);
}
inline std::string* ThreatAnalysisReport::mutable_escalation_path(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.integrity.ThreatAnalysisReport.escalation_path)
  return _internal_mutable_escalation_path()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void ThreatAnalysisReport::set_escalation_path(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_escalation_path()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:seigr.integrity.ThreatAnalysisReport.escalation_path)
}
template <typename Arg_, typename... Args_>
inline void ThreatAnalysisReport::add_escalation_path(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_escalation_path(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seigr.integrity.ThreatAnalysisReport.escalation_path)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ThreatAnalysisReport::escalation_path() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.integrity.ThreatAnalysisReport.escalation_path)
  return _internal_escalation_path();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ThreatAnalysisReport::mutable_escalation_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.integrity.ThreatAnalysisReport.escalation_path)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_escalation_path();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ThreatAnalysisReport::_internal_escalation_path() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.escalation_path_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ThreatAnalysisReport::_internal_mutable_escalation_path() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.escalation_path_;
}

// repeated string unresolved_threats = 15;
inline int ThreatAnalysisReport::_internal_unresolved_threats_size() const {
  return _internal_unresolved_threats().size();
}
inline int ThreatAnalysisReport::unresolved_threats_size() const {
  return _internal_unresolved_threats_size();
}
inline void ThreatAnalysisReport::clear_unresolved_threats() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unresolved_threats_.Clear();
}
inline std::string* ThreatAnalysisReport::add_unresolved_threats() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_unresolved_threats()->Add();
  // @@protoc_insertion_point(field_add_mutable:seigr.integrity.ThreatAnalysisReport.unresolved_threats)
  return _s;
}
inline const std::string& ThreatAnalysisReport::unresolved_threats(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.integrity.ThreatAnalysisReport.unresolved_threats)
  return _internal_unresolved_threats().Get(index);
}
inline std::string* ThreatAnalysisReport::mutable_unresolved_threats(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.integrity.ThreatAnalysisReport.unresolved_threats)
  return _internal_mutable_unresolved_threats()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void ThreatAnalysisReport::set_unresolved_threats(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_unresolved_threats()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:seigr.integrity.ThreatAnalysisReport.unresolved_threats)
}
template <typename Arg_, typename... Args_>
inline void ThreatAnalysisReport::add_unresolved_threats(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_unresolved_threats(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seigr.integrity.ThreatAnalysisReport.unresolved_threats)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ThreatAnalysisReport::unresolved_threats() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.integrity.ThreatAnalysisReport.unresolved_threats)
  return _internal_unresolved_threats();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ThreatAnalysisReport::mutable_unresolved_threats() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.integrity.ThreatAnalysisReport.unresolved_threats)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_unresolved_threats();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ThreatAnalysisReport::_internal_unresolved_threats() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.unresolved_threats_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ThreatAnalysisReport::_internal_mutable_unresolved_threats() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.unresolved_threats_;
}

// map<string, string> adaptive_response = 16;
inline int ThreatAnalysisReport::_internal_adaptive_response_size() const {
  return _internal_adaptive_response().size();
}
inline int ThreatAnalysisReport::adaptive_response_size() const {
  return _internal_adaptive_response_size();
}
inline void ThreatAnalysisReport::clear_adaptive_response() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.adaptive_response_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& ThreatAnalysisReport::_internal_adaptive_response() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.adaptive_response_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& ThreatAnalysisReport::adaptive_response() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.integrity.ThreatAnalysisReport.adaptive_response)
  return _internal_adaptive_response();
}
inline ::google::protobuf::Map<std::string, std::string>* ThreatAnalysisReport::_internal_mutable_adaptive_response() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.adaptive_response_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* ThreatAnalysisReport::mutable_adaptive_response() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.integrity.ThreatAnalysisReport.adaptive_response)
  return _internal_mutable_adaptive_response();
}

// string next_analysis_scheduled = 17;
inline void ThreatAnalysisReport::clear_next_analysis_scheduled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.next_analysis_scheduled_.ClearToEmpty();
}
inline const std::string& ThreatAnalysisReport::next_analysis_scheduled() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.integrity.ThreatAnalysisReport.next_analysis_scheduled)
  return _internal_next_analysis_scheduled();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ThreatAnalysisReport::set_next_analysis_scheduled(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.next_analysis_scheduled_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.integrity.ThreatAnalysisReport.next_analysis_scheduled)
}
inline std::string* ThreatAnalysisReport::mutable_next_analysis_scheduled() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_next_analysis_scheduled();
  // @@protoc_insertion_point(field_mutable:seigr.integrity.ThreatAnalysisReport.next_analysis_scheduled)
  return _s;
}
inline const std::string& ThreatAnalysisReport::_internal_next_analysis_scheduled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.next_analysis_scheduled_.Get();
}
inline void ThreatAnalysisReport::_internal_set_next_analysis_scheduled(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.next_analysis_scheduled_.Set(value, GetArena());
}
inline std::string* ThreatAnalysisReport::_internal_mutable_next_analysis_scheduled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.next_analysis_scheduled_.Mutable( GetArena());
}
inline std::string* ThreatAnalysisReport::release_next_analysis_scheduled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.integrity.ThreatAnalysisReport.next_analysis_scheduled)
  return _impl_.next_analysis_scheduled_.Release();
}
inline void ThreatAnalysisReport::set_allocated_next_analysis_scheduled(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.next_analysis_scheduled_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.next_analysis_scheduled_.IsDefault()) {
    _impl_.next_analysis_scheduled_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.integrity.ThreatAnalysisReport.next_analysis_scheduled)
}

// map<string, int32> component_threat_counts = 18;
inline int ThreatAnalysisReport::_internal_component_threat_counts_size() const {
  return _internal_component_threat_counts().size();
}
inline int ThreatAnalysisReport::component_threat_counts_size() const {
  return _internal_component_threat_counts_size();
}
inline void ThreatAnalysisReport::clear_component_threat_counts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.component_threat_counts_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::int32_t>& ThreatAnalysisReport::_internal_component_threat_counts() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.component_threat_counts_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::int32_t>& ThreatAnalysisReport::component_threat_counts() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.integrity.ThreatAnalysisReport.component_threat_counts)
  return _internal_component_threat_counts();
}
inline ::google::protobuf::Map<std::string, ::int32_t>* ThreatAnalysisReport::_internal_mutable_component_threat_counts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.component_threat_counts_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::int32_t>* ThreatAnalysisReport::mutable_component_threat_counts() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.integrity.ThreatAnalysisReport.component_threat_counts)
  return _internal_mutable_component_threat_counts();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// IntegrityVerificationOutcome

// string verification_id = 1;
inline void IntegrityVerificationOutcome::clear_verification_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.verification_id_.ClearToEmpty();
}
inline const std::string& IntegrityVerificationOutcome::verification_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.integrity.IntegrityVerificationOutcome.verification_id)
  return _internal_verification_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void IntegrityVerificationOutcome::set_verification_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.verification_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.integrity.IntegrityVerificationOutcome.verification_id)
}
inline std::string* IntegrityVerificationOutcome::mutable_verification_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_verification_id();
  // @@protoc_insertion_point(field_mutable:seigr.integrity.IntegrityVerificationOutcome.verification_id)
  return _s;
}
inline const std::string& IntegrityVerificationOutcome::_internal_verification_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.verification_id_.Get();
}
inline void IntegrityVerificationOutcome::_internal_set_verification_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.verification_id_.Set(value, GetArena());
}
inline std::string* IntegrityVerificationOutcome::_internal_mutable_verification_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.verification_id_.Mutable( GetArena());
}
inline std::string* IntegrityVerificationOutcome::release_verification_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.integrity.IntegrityVerificationOutcome.verification_id)
  return _impl_.verification_id_.Release();
}
inline void IntegrityVerificationOutcome::set_allocated_verification_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.verification_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.verification_id_.IsDefault()) {
    _impl_.verification_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.integrity.IntegrityVerificationOutcome.verification_id)
}

// string target_segment_id = 2;
inline void IntegrityVerificationOutcome::clear_target_segment_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_segment_id_.ClearToEmpty();
}
inline const std::string& IntegrityVerificationOutcome::target_segment_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.integrity.IntegrityVerificationOutcome.target_segment_id)
  return _internal_target_segment_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void IntegrityVerificationOutcome::set_target_segment_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_segment_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.integrity.IntegrityVerificationOutcome.target_segment_id)
}
inline std::string* IntegrityVerificationOutcome::mutable_target_segment_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_target_segment_id();
  // @@protoc_insertion_point(field_mutable:seigr.integrity.IntegrityVerificationOutcome.target_segment_id)
  return _s;
}
inline const std::string& IntegrityVerificationOutcome::_internal_target_segment_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_segment_id_.Get();
}
inline void IntegrityVerificationOutcome::_internal_set_target_segment_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_segment_id_.Set(value, GetArena());
}
inline std::string* IntegrityVerificationOutcome::_internal_mutable_target_segment_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.target_segment_id_.Mutable( GetArena());
}
inline std::string* IntegrityVerificationOutcome::release_target_segment_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.integrity.IntegrityVerificationOutcome.target_segment_id)
  return _impl_.target_segment_id_.Release();
}
inline void IntegrityVerificationOutcome::set_allocated_target_segment_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_segment_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.target_segment_id_.IsDefault()) {
    _impl_.target_segment_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.integrity.IntegrityVerificationOutcome.target_segment_id)
}

// .seigr.integrity.ThreatSeverity detected_threat_severity = 3;
inline void IntegrityVerificationOutcome::clear_detected_threat_severity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.detected_threat_severity_ = 0;
}
inline ::seigr::integrity::ThreatSeverity IntegrityVerificationOutcome::detected_threat_severity() const {
  // @@protoc_insertion_point(field_get:seigr.integrity.IntegrityVerificationOutcome.detected_threat_severity)
  return _internal_detected_threat_severity();
}
inline void IntegrityVerificationOutcome::set_detected_threat_severity(::seigr::integrity::ThreatSeverity value) {
  _internal_set_detected_threat_severity(value);
  // @@protoc_insertion_point(field_set:seigr.integrity.IntegrityVerificationOutcome.detected_threat_severity)
}
inline ::seigr::integrity::ThreatSeverity IntegrityVerificationOutcome::_internal_detected_threat_severity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::integrity::ThreatSeverity>(_impl_.detected_threat_severity_);
}
inline void IntegrityVerificationOutcome::_internal_set_detected_threat_severity(::seigr::integrity::ThreatSeverity value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.detected_threat_severity_ = value;
}

// string verification_timestamp = 4;
inline void IntegrityVerificationOutcome::clear_verification_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.verification_timestamp_.ClearToEmpty();
}
inline const std::string& IntegrityVerificationOutcome::verification_timestamp() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.integrity.IntegrityVerificationOutcome.verification_timestamp)
  return _internal_verification_timestamp();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void IntegrityVerificationOutcome::set_verification_timestamp(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.verification_timestamp_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.integrity.IntegrityVerificationOutcome.verification_timestamp)
}
inline std::string* IntegrityVerificationOutcome::mutable_verification_timestamp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_verification_timestamp();
  // @@protoc_insertion_point(field_mutable:seigr.integrity.IntegrityVerificationOutcome.verification_timestamp)
  return _s;
}
inline const std::string& IntegrityVerificationOutcome::_internal_verification_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.verification_timestamp_.Get();
}
inline void IntegrityVerificationOutcome::_internal_set_verification_timestamp(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.verification_timestamp_.Set(value, GetArena());
}
inline std::string* IntegrityVerificationOutcome::_internal_mutable_verification_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.verification_timestamp_.Mutable( GetArena());
}
inline std::string* IntegrityVerificationOutcome::release_verification_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.integrity.IntegrityVerificationOutcome.verification_timestamp)
  return _impl_.verification_timestamp_.Release();
}
inline void IntegrityVerificationOutcome::set_allocated_verification_timestamp(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.verification_timestamp_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.verification_timestamp_.IsDefault()) {
    _impl_.verification_timestamp_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.integrity.IntegrityVerificationOutcome.verification_timestamp)
}

// bool is_verified = 5;
inline void IntegrityVerificationOutcome::clear_is_verified() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_verified_ = false;
}
inline bool IntegrityVerificationOutcome::is_verified() const {
  // @@protoc_insertion_point(field_get:seigr.integrity.IntegrityVerificationOutcome.is_verified)
  return _internal_is_verified();
}
inline void IntegrityVerificationOutcome::set_is_verified(bool value) {
  _internal_set_is_verified(value);
  // @@protoc_insertion_point(field_set:seigr.integrity.IntegrityVerificationOutcome.is_verified)
}
inline bool IntegrityVerificationOutcome::_internal_is_verified() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_verified_;
}
inline void IntegrityVerificationOutcome::_internal_set_is_verified(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_verified_ = value;
}

// string failure_reason = 6;
inline void IntegrityVerificationOutcome::clear_failure_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.failure_reason_.ClearToEmpty();
}
inline const std::string& IntegrityVerificationOutcome::failure_reason() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.integrity.IntegrityVerificationOutcome.failure_reason)
  return _internal_failure_reason();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void IntegrityVerificationOutcome::set_failure_reason(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.failure_reason_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.integrity.IntegrityVerificationOutcome.failure_reason)
}
inline std::string* IntegrityVerificationOutcome::mutable_failure_reason() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_failure_reason();
  // @@protoc_insertion_point(field_mutable:seigr.integrity.IntegrityVerificationOutcome.failure_reason)
  return _s;
}
inline const std::string& IntegrityVerificationOutcome::_internal_failure_reason() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.failure_reason_.Get();
}
inline void IntegrityVerificationOutcome::_internal_set_failure_reason(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.failure_reason_.Set(value, GetArena());
}
inline std::string* IntegrityVerificationOutcome::_internal_mutable_failure_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.failure_reason_.Mutable( GetArena());
}
inline std::string* IntegrityVerificationOutcome::release_failure_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.integrity.IntegrityVerificationOutcome.failure_reason)
  return _impl_.failure_reason_.Release();
}
inline void IntegrityVerificationOutcome::set_allocated_failure_reason(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.failure_reason_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.failure_reason_.IsDefault()) {
    _impl_.failure_reason_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.integrity.IntegrityVerificationOutcome.failure_reason)
}

// map<string, string> metadata = 7;
inline int IntegrityVerificationOutcome::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int IntegrityVerificationOutcome::metadata_size() const {
  return _internal_metadata_size();
}
inline void IntegrityVerificationOutcome::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& IntegrityVerificationOutcome::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& IntegrityVerificationOutcome::metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.integrity.IntegrityVerificationOutcome.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* IntegrityVerificationOutcome::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* IntegrityVerificationOutcome::mutable_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.integrity.IntegrityVerificationOutcome.metadata)
  return _internal_mutable_metadata();
}

// string recommended_action = 8;
inline void IntegrityVerificationOutcome::clear_recommended_action() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recommended_action_.ClearToEmpty();
}
inline const std::string& IntegrityVerificationOutcome::recommended_action() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.integrity.IntegrityVerificationOutcome.recommended_action)
  return _internal_recommended_action();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void IntegrityVerificationOutcome::set_recommended_action(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recommended_action_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.integrity.IntegrityVerificationOutcome.recommended_action)
}
inline std::string* IntegrityVerificationOutcome::mutable_recommended_action() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_recommended_action();
  // @@protoc_insertion_point(field_mutable:seigr.integrity.IntegrityVerificationOutcome.recommended_action)
  return _s;
}
inline const std::string& IntegrityVerificationOutcome::_internal_recommended_action() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.recommended_action_.Get();
}
inline void IntegrityVerificationOutcome::_internal_set_recommended_action(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recommended_action_.Set(value, GetArena());
}
inline std::string* IntegrityVerificationOutcome::_internal_mutable_recommended_action() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.recommended_action_.Mutable( GetArena());
}
inline std::string* IntegrityVerificationOutcome::release_recommended_action() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.integrity.IntegrityVerificationOutcome.recommended_action)
  return _impl_.recommended_action_.Release();
}
inline void IntegrityVerificationOutcome::set_allocated_recommended_action(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recommended_action_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.recommended_action_.IsDefault()) {
    _impl_.recommended_action_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.integrity.IntegrityVerificationOutcome.recommended_action)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// IntegrityWorkflowTrigger

// string trigger_id = 1;
inline void IntegrityWorkflowTrigger::clear_trigger_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trigger_id_.ClearToEmpty();
}
inline const std::string& IntegrityWorkflowTrigger::trigger_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.integrity.IntegrityWorkflowTrigger.trigger_id)
  return _internal_trigger_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void IntegrityWorkflowTrigger::set_trigger_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trigger_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.integrity.IntegrityWorkflowTrigger.trigger_id)
}
inline std::string* IntegrityWorkflowTrigger::mutable_trigger_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_trigger_id();
  // @@protoc_insertion_point(field_mutable:seigr.integrity.IntegrityWorkflowTrigger.trigger_id)
  return _s;
}
inline const std::string& IntegrityWorkflowTrigger::_internal_trigger_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.trigger_id_.Get();
}
inline void IntegrityWorkflowTrigger::_internal_set_trigger_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trigger_id_.Set(value, GetArena());
}
inline std::string* IntegrityWorkflowTrigger::_internal_mutable_trigger_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.trigger_id_.Mutable( GetArena());
}
inline std::string* IntegrityWorkflowTrigger::release_trigger_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.integrity.IntegrityWorkflowTrigger.trigger_id)
  return _impl_.trigger_id_.Release();
}
inline void IntegrityWorkflowTrigger::set_allocated_trigger_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trigger_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.trigger_id_.IsDefault()) {
    _impl_.trigger_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.integrity.IntegrityWorkflowTrigger.trigger_id)
}

// string initiated_by = 2;
inline void IntegrityWorkflowTrigger::clear_initiated_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initiated_by_.ClearToEmpty();
}
inline const std::string& IntegrityWorkflowTrigger::initiated_by() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.integrity.IntegrityWorkflowTrigger.initiated_by)
  return _internal_initiated_by();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void IntegrityWorkflowTrigger::set_initiated_by(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initiated_by_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.integrity.IntegrityWorkflowTrigger.initiated_by)
}
inline std::string* IntegrityWorkflowTrigger::mutable_initiated_by() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_initiated_by();
  // @@protoc_insertion_point(field_mutable:seigr.integrity.IntegrityWorkflowTrigger.initiated_by)
  return _s;
}
inline const std::string& IntegrityWorkflowTrigger::_internal_initiated_by() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.initiated_by_.Get();
}
inline void IntegrityWorkflowTrigger::_internal_set_initiated_by(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initiated_by_.Set(value, GetArena());
}
inline std::string* IntegrityWorkflowTrigger::_internal_mutable_initiated_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.initiated_by_.Mutable( GetArena());
}
inline std::string* IntegrityWorkflowTrigger::release_initiated_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.integrity.IntegrityWorkflowTrigger.initiated_by)
  return _impl_.initiated_by_.Release();
}
inline void IntegrityWorkflowTrigger::set_allocated_initiated_by(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initiated_by_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.initiated_by_.IsDefault()) {
    _impl_.initiated_by_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.integrity.IntegrityWorkflowTrigger.initiated_by)
}

// .seigr.integrity.ThreatSeverity escalation_threshold = 3;
inline void IntegrityWorkflowTrigger::clear_escalation_threshold() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.escalation_threshold_ = 0;
}
inline ::seigr::integrity::ThreatSeverity IntegrityWorkflowTrigger::escalation_threshold() const {
  // @@protoc_insertion_point(field_get:seigr.integrity.IntegrityWorkflowTrigger.escalation_threshold)
  return _internal_escalation_threshold();
}
inline void IntegrityWorkflowTrigger::set_escalation_threshold(::seigr::integrity::ThreatSeverity value) {
  _internal_set_escalation_threshold(value);
  // @@protoc_insertion_point(field_set:seigr.integrity.IntegrityWorkflowTrigger.escalation_threshold)
}
inline ::seigr::integrity::ThreatSeverity IntegrityWorkflowTrigger::_internal_escalation_threshold() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::integrity::ThreatSeverity>(_impl_.escalation_threshold_);
}
inline void IntegrityWorkflowTrigger::_internal_set_escalation_threshold(::seigr::integrity::ThreatSeverity value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.escalation_threshold_ = value;
}

// map<string, string> parameters = 4;
inline int IntegrityWorkflowTrigger::_internal_parameters_size() const {
  return _internal_parameters().size();
}
inline int IntegrityWorkflowTrigger::parameters_size() const {
  return _internal_parameters_size();
}
inline void IntegrityWorkflowTrigger::clear_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parameters_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& IntegrityWorkflowTrigger::_internal_parameters() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.parameters_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& IntegrityWorkflowTrigger::parameters() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.integrity.IntegrityWorkflowTrigger.parameters)
  return _internal_parameters();
}
inline ::google::protobuf::Map<std::string, std::string>* IntegrityWorkflowTrigger::_internal_mutable_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.parameters_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* IntegrityWorkflowTrigger::mutable_parameters() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.integrity.IntegrityWorkflowTrigger.parameters)
  return _internal_mutable_parameters();
}

// string workflow_type = 5;
inline void IntegrityWorkflowTrigger::clear_workflow_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.workflow_type_.ClearToEmpty();
}
inline const std::string& IntegrityWorkflowTrigger::workflow_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.integrity.IntegrityWorkflowTrigger.workflow_type)
  return _internal_workflow_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void IntegrityWorkflowTrigger::set_workflow_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.workflow_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.integrity.IntegrityWorkflowTrigger.workflow_type)
}
inline std::string* IntegrityWorkflowTrigger::mutable_workflow_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_workflow_type();
  // @@protoc_insertion_point(field_mutable:seigr.integrity.IntegrityWorkflowTrigger.workflow_type)
  return _s;
}
inline const std::string& IntegrityWorkflowTrigger::_internal_workflow_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.workflow_type_.Get();
}
inline void IntegrityWorkflowTrigger::_internal_set_workflow_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.workflow_type_.Set(value, GetArena());
}
inline std::string* IntegrityWorkflowTrigger::_internal_mutable_workflow_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.workflow_type_.Mutable( GetArena());
}
inline std::string* IntegrityWorkflowTrigger::release_workflow_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.integrity.IntegrityWorkflowTrigger.workflow_type)
  return _impl_.workflow_type_.Release();
}
inline void IntegrityWorkflowTrigger::set_allocated_workflow_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.workflow_type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.workflow_type_.IsDefault()) {
    _impl_.workflow_type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.integrity.IntegrityWorkflowTrigger.workflow_type)
}

// repeated string affected_segments = 6;
inline int IntegrityWorkflowTrigger::_internal_affected_segments_size() const {
  return _internal_affected_segments().size();
}
inline int IntegrityWorkflowTrigger::affected_segments_size() const {
  return _internal_affected_segments_size();
}
inline void IntegrityWorkflowTrigger::clear_affected_segments() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.affected_segments_.Clear();
}
inline std::string* IntegrityWorkflowTrigger::add_affected_segments() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_affected_segments()->Add();
  // @@protoc_insertion_point(field_add_mutable:seigr.integrity.IntegrityWorkflowTrigger.affected_segments)
  return _s;
}
inline const std::string& IntegrityWorkflowTrigger::affected_segments(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.integrity.IntegrityWorkflowTrigger.affected_segments)
  return _internal_affected_segments().Get(index);
}
inline std::string* IntegrityWorkflowTrigger::mutable_affected_segments(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.integrity.IntegrityWorkflowTrigger.affected_segments)
  return _internal_mutable_affected_segments()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void IntegrityWorkflowTrigger::set_affected_segments(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_affected_segments()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:seigr.integrity.IntegrityWorkflowTrigger.affected_segments)
}
template <typename Arg_, typename... Args_>
inline void IntegrityWorkflowTrigger::add_affected_segments(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_affected_segments(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seigr.integrity.IntegrityWorkflowTrigger.affected_segments)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
IntegrityWorkflowTrigger::affected_segments() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.integrity.IntegrityWorkflowTrigger.affected_segments)
  return _internal_affected_segments();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
IntegrityWorkflowTrigger::mutable_affected_segments() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.integrity.IntegrityWorkflowTrigger.affected_segments)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_affected_segments();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
IntegrityWorkflowTrigger::_internal_affected_segments() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.affected_segments_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
IntegrityWorkflowTrigger::_internal_mutable_affected_segments() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.affected_segments_;
}

// string timestamp = 7;
inline void IntegrityWorkflowTrigger::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.ClearToEmpty();
}
inline const std::string& IntegrityWorkflowTrigger::timestamp() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.integrity.IntegrityWorkflowTrigger.timestamp)
  return _internal_timestamp();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void IntegrityWorkflowTrigger::set_timestamp(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.integrity.IntegrityWorkflowTrigger.timestamp)
}
inline std::string* IntegrityWorkflowTrigger::mutable_timestamp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_timestamp();
  // @@protoc_insertion_point(field_mutable:seigr.integrity.IntegrityWorkflowTrigger.timestamp)
  return _s;
}
inline const std::string& IntegrityWorkflowTrigger::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_.Get();
}
inline void IntegrityWorkflowTrigger::_internal_set_timestamp(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.Set(value, GetArena());
}
inline std::string* IntegrityWorkflowTrigger::_internal_mutable_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.timestamp_.Mutable( GetArena());
}
inline std::string* IntegrityWorkflowTrigger::release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.integrity.IntegrityWorkflowTrigger.timestamp)
  return _impl_.timestamp_.Release();
}
inline void IntegrityWorkflowTrigger::set_allocated_timestamp(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.timestamp_.IsDefault()) {
    _impl_.timestamp_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.integrity.IntegrityWorkflowTrigger.timestamp)
}

// map<string, string> adaptive_parameters = 8;
inline int IntegrityWorkflowTrigger::_internal_adaptive_parameters_size() const {
  return _internal_adaptive_parameters().size();
}
inline int IntegrityWorkflowTrigger::adaptive_parameters_size() const {
  return _internal_adaptive_parameters_size();
}
inline void IntegrityWorkflowTrigger::clear_adaptive_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.adaptive_parameters_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& IntegrityWorkflowTrigger::_internal_adaptive_parameters() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.adaptive_parameters_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& IntegrityWorkflowTrigger::adaptive_parameters() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.integrity.IntegrityWorkflowTrigger.adaptive_parameters)
  return _internal_adaptive_parameters();
}
inline ::google::protobuf::Map<std::string, std::string>* IntegrityWorkflowTrigger::_internal_mutable_adaptive_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.adaptive_parameters_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* IntegrityWorkflowTrigger::mutable_adaptive_parameters() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.integrity.IntegrityWorkflowTrigger.adaptive_parameters)
  return _internal_mutable_adaptive_parameters();
}

// -------------------------------------------------------------------

// GetMonitoringCycleRequest

// string cycle_id = 1;
inline void GetMonitoringCycleRequest::clear_cycle_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cycle_id_.ClearToEmpty();
}
inline const std::string& GetMonitoringCycleRequest::cycle_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.integrity.GetMonitoringCycleRequest.cycle_id)
  return _internal_cycle_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetMonitoringCycleRequest::set_cycle_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cycle_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.integrity.GetMonitoringCycleRequest.cycle_id)
}
inline std::string* GetMonitoringCycleRequest::mutable_cycle_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_cycle_id();
  // @@protoc_insertion_point(field_mutable:seigr.integrity.GetMonitoringCycleRequest.cycle_id)
  return _s;
}
inline const std::string& GetMonitoringCycleRequest::_internal_cycle_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cycle_id_.Get();
}
inline void GetMonitoringCycleRequest::_internal_set_cycle_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cycle_id_.Set(value, GetArena());
}
inline std::string* GetMonitoringCycleRequest::_internal_mutable_cycle_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.cycle_id_.Mutable( GetArena());
}
inline std::string* GetMonitoringCycleRequest::release_cycle_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.integrity.GetMonitoringCycleRequest.cycle_id)
  return _impl_.cycle_id_.Release();
}
inline void GetMonitoringCycleRequest::set_allocated_cycle_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cycle_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.cycle_id_.IsDefault()) {
    _impl_.cycle_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.integrity.GetMonitoringCycleRequest.cycle_id)
}

// string requester_id = 2;
inline void GetMonitoringCycleRequest::clear_requester_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requester_id_.ClearToEmpty();
}
inline const std::string& GetMonitoringCycleRequest::requester_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.integrity.GetMonitoringCycleRequest.requester_id)
  return _internal_requester_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetMonitoringCycleRequest::set_requester_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requester_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.integrity.GetMonitoringCycleRequest.requester_id)
}
inline std::string* GetMonitoringCycleRequest::mutable_requester_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_requester_id();
  // @@protoc_insertion_point(field_mutable:seigr.integrity.GetMonitoringCycleRequest.requester_id)
  return _s;
}
inline const std::string& GetMonitoringCycleRequest::_internal_requester_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.requester_id_.Get();
}
inline void GetMonitoringCycleRequest::_internal_set_requester_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requester_id_.Set(value, GetArena());
}
inline std::string* GetMonitoringCycleRequest::_internal_mutable_requester_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.requester_id_.Mutable( GetArena());
}
inline std::string* GetMonitoringCycleRequest::release_requester_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.integrity.GetMonitoringCycleRequest.requester_id)
  return _impl_.requester_id_.Release();
}
inline void GetMonitoringCycleRequest::set_allocated_requester_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requester_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.requester_id_.IsDefault()) {
    _impl_.requester_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.integrity.GetMonitoringCycleRequest.requester_id)
}

// bool include_metadata = 3;
inline void GetMonitoringCycleRequest::clear_include_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_metadata_ = false;
}
inline bool GetMonitoringCycleRequest::include_metadata() const {
  // @@protoc_insertion_point(field_get:seigr.integrity.GetMonitoringCycleRequest.include_metadata)
  return _internal_include_metadata();
}
inline void GetMonitoringCycleRequest::set_include_metadata(bool value) {
  _internal_set_include_metadata(value);
  // @@protoc_insertion_point(field_set:seigr.integrity.GetMonitoringCycleRequest.include_metadata)
}
inline bool GetMonitoringCycleRequest::_internal_include_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.include_metadata_;
}
inline void GetMonitoringCycleRequest::_internal_set_include_metadata(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_metadata_ = value;
}

// repeated string filter_segments = 4;
inline int GetMonitoringCycleRequest::_internal_filter_segments_size() const {
  return _internal_filter_segments().size();
}
inline int GetMonitoringCycleRequest::filter_segments_size() const {
  return _internal_filter_segments_size();
}
inline void GetMonitoringCycleRequest::clear_filter_segments() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.filter_segments_.Clear();
}
inline std::string* GetMonitoringCycleRequest::add_filter_segments() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_filter_segments()->Add();
  // @@protoc_insertion_point(field_add_mutable:seigr.integrity.GetMonitoringCycleRequest.filter_segments)
  return _s;
}
inline const std::string& GetMonitoringCycleRequest::filter_segments(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.integrity.GetMonitoringCycleRequest.filter_segments)
  return _internal_filter_segments().Get(index);
}
inline std::string* GetMonitoringCycleRequest::mutable_filter_segments(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.integrity.GetMonitoringCycleRequest.filter_segments)
  return _internal_mutable_filter_segments()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void GetMonitoringCycleRequest::set_filter_segments(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_filter_segments()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:seigr.integrity.GetMonitoringCycleRequest.filter_segments)
}
template <typename Arg_, typename... Args_>
inline void GetMonitoringCycleRequest::add_filter_segments(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_filter_segments(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seigr.integrity.GetMonitoringCycleRequest.filter_segments)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetMonitoringCycleRequest::filter_segments() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.integrity.GetMonitoringCycleRequest.filter_segments)
  return _internal_filter_segments();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetMonitoringCycleRequest::mutable_filter_segments() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.integrity.GetMonitoringCycleRequest.filter_segments)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_filter_segments();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetMonitoringCycleRequest::_internal_filter_segments() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.filter_segments_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetMonitoringCycleRequest::_internal_mutable_filter_segments() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.filter_segments_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetThreatAnalysisRequest

// string report_id = 1;
inline void GetThreatAnalysisRequest::clear_report_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.report_id_.ClearToEmpty();
}
inline const std::string& GetThreatAnalysisRequest::report_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.integrity.GetThreatAnalysisRequest.report_id)
  return _internal_report_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetThreatAnalysisRequest::set_report_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.report_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.integrity.GetThreatAnalysisRequest.report_id)
}
inline std::string* GetThreatAnalysisRequest::mutable_report_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_report_id();
  // @@protoc_insertion_point(field_mutable:seigr.integrity.GetThreatAnalysisRequest.report_id)
  return _s;
}
inline const std::string& GetThreatAnalysisRequest::_internal_report_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.report_id_.Get();
}
inline void GetThreatAnalysisRequest::_internal_set_report_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.report_id_.Set(value, GetArena());
}
inline std::string* GetThreatAnalysisRequest::_internal_mutable_report_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.report_id_.Mutable( GetArena());
}
inline std::string* GetThreatAnalysisRequest::release_report_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.integrity.GetThreatAnalysisRequest.report_id)
  return _impl_.report_id_.Release();
}
inline void GetThreatAnalysisRequest::set_allocated_report_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.report_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.report_id_.IsDefault()) {
    _impl_.report_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.integrity.GetThreatAnalysisRequest.report_id)
}

// string requester_id = 2;
inline void GetThreatAnalysisRequest::clear_requester_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requester_id_.ClearToEmpty();
}
inline const std::string& GetThreatAnalysisRequest::requester_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.integrity.GetThreatAnalysisRequest.requester_id)
  return _internal_requester_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetThreatAnalysisRequest::set_requester_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requester_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.integrity.GetThreatAnalysisRequest.requester_id)
}
inline std::string* GetThreatAnalysisRequest::mutable_requester_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_requester_id();
  // @@protoc_insertion_point(field_mutable:seigr.integrity.GetThreatAnalysisRequest.requester_id)
  return _s;
}
inline const std::string& GetThreatAnalysisRequest::_internal_requester_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.requester_id_.Get();
}
inline void GetThreatAnalysisRequest::_internal_set_requester_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requester_id_.Set(value, GetArena());
}
inline std::string* GetThreatAnalysisRequest::_internal_mutable_requester_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.requester_id_.Mutable( GetArena());
}
inline std::string* GetThreatAnalysisRequest::release_requester_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.integrity.GetThreatAnalysisRequest.requester_id)
  return _impl_.requester_id_.Release();
}
inline void GetThreatAnalysisRequest::set_allocated_requester_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requester_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.requester_id_.IsDefault()) {
    _impl_.requester_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.integrity.GetThreatAnalysisRequest.requester_id)
}

// repeated string filter_components = 3;
inline int GetThreatAnalysisRequest::_internal_filter_components_size() const {
  return _internal_filter_components().size();
}
inline int GetThreatAnalysisRequest::filter_components_size() const {
  return _internal_filter_components_size();
}
inline void GetThreatAnalysisRequest::clear_filter_components() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.filter_components_.Clear();
}
inline std::string* GetThreatAnalysisRequest::add_filter_components() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_filter_components()->Add();
  // @@protoc_insertion_point(field_add_mutable:seigr.integrity.GetThreatAnalysisRequest.filter_components)
  return _s;
}
inline const std::string& GetThreatAnalysisRequest::filter_components(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.integrity.GetThreatAnalysisRequest.filter_components)
  return _internal_filter_components().Get(index);
}
inline std::string* GetThreatAnalysisRequest::mutable_filter_components(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.integrity.GetThreatAnalysisRequest.filter_components)
  return _internal_mutable_filter_components()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void GetThreatAnalysisRequest::set_filter_components(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_filter_components()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:seigr.integrity.GetThreatAnalysisRequest.filter_components)
}
template <typename Arg_, typename... Args_>
inline void GetThreatAnalysisRequest::add_filter_components(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_filter_components(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seigr.integrity.GetThreatAnalysisRequest.filter_components)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetThreatAnalysisRequest::filter_components() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.integrity.GetThreatAnalysisRequest.filter_components)
  return _internal_filter_components();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetThreatAnalysisRequest::mutable_filter_components() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.integrity.GetThreatAnalysisRequest.filter_components)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_filter_components();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetThreatAnalysisRequest::_internal_filter_components() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.filter_components_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetThreatAnalysisRequest::_internal_mutable_filter_components() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.filter_components_;
}

// bool include_recommendations = 4;
inline void GetThreatAnalysisRequest::clear_include_recommendations() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_recommendations_ = false;
}
inline bool GetThreatAnalysisRequest::include_recommendations() const {
  // @@protoc_insertion_point(field_get:seigr.integrity.GetThreatAnalysisRequest.include_recommendations)
  return _internal_include_recommendations();
}
inline void GetThreatAnalysisRequest::set_include_recommendations(bool value) {
  _internal_set_include_recommendations(value);
  // @@protoc_insertion_point(field_set:seigr.integrity.GetThreatAnalysisRequest.include_recommendations)
}
inline bool GetThreatAnalysisRequest::_internal_include_recommendations() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.include_recommendations_;
}
inline void GetThreatAnalysisRequest::_internal_set_include_recommendations(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_recommendations_ = value;
}

// map<string, string> additional_filters = 5;
inline int GetThreatAnalysisRequest::_internal_additional_filters_size() const {
  return _internal_additional_filters().size();
}
inline int GetThreatAnalysisRequest::additional_filters_size() const {
  return _internal_additional_filters_size();
}
inline void GetThreatAnalysisRequest::clear_additional_filters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.additional_filters_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& GetThreatAnalysisRequest::_internal_additional_filters() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.additional_filters_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& GetThreatAnalysisRequest::additional_filters() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.integrity.GetThreatAnalysisRequest.additional_filters)
  return _internal_additional_filters();
}
inline ::google::protobuf::Map<std::string, std::string>* GetThreatAnalysisRequest::_internal_mutable_additional_filters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.additional_filters_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* GetThreatAnalysisRequest::mutable_additional_filters() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.integrity.GetThreatAnalysisRequest.additional_filters)
  return _internal_mutable_additional_filters();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// PerformVerificationRequest

// string segment_id = 1;
inline void PerformVerificationRequest::clear_segment_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.segment_id_.ClearToEmpty();
}
inline const std::string& PerformVerificationRequest::segment_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.integrity.PerformVerificationRequest.segment_id)
  return _internal_segment_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PerformVerificationRequest::set_segment_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.segment_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.integrity.PerformVerificationRequest.segment_id)
}
inline std::string* PerformVerificationRequest::mutable_segment_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_segment_id();
  // @@protoc_insertion_point(field_mutable:seigr.integrity.PerformVerificationRequest.segment_id)
  return _s;
}
inline const std::string& PerformVerificationRequest::_internal_segment_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.segment_id_.Get();
}
inline void PerformVerificationRequest::_internal_set_segment_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.segment_id_.Set(value, GetArena());
}
inline std::string* PerformVerificationRequest::_internal_mutable_segment_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.segment_id_.Mutable( GetArena());
}
inline std::string* PerformVerificationRequest::release_segment_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.integrity.PerformVerificationRequest.segment_id)
  return _impl_.segment_id_.Release();
}
inline void PerformVerificationRequest::set_allocated_segment_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.segment_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.segment_id_.IsDefault()) {
    _impl_.segment_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.integrity.PerformVerificationRequest.segment_id)
}

// string initiated_by = 2;
inline void PerformVerificationRequest::clear_initiated_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initiated_by_.ClearToEmpty();
}
inline const std::string& PerformVerificationRequest::initiated_by() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.integrity.PerformVerificationRequest.initiated_by)
  return _internal_initiated_by();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PerformVerificationRequest::set_initiated_by(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initiated_by_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.integrity.PerformVerificationRequest.initiated_by)
}
inline std::string* PerformVerificationRequest::mutable_initiated_by() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_initiated_by();
  // @@protoc_insertion_point(field_mutable:seigr.integrity.PerformVerificationRequest.initiated_by)
  return _s;
}
inline const std::string& PerformVerificationRequest::_internal_initiated_by() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.initiated_by_.Get();
}
inline void PerformVerificationRequest::_internal_set_initiated_by(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initiated_by_.Set(value, GetArena());
}
inline std::string* PerformVerificationRequest::_internal_mutable_initiated_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.initiated_by_.Mutable( GetArena());
}
inline std::string* PerformVerificationRequest::release_initiated_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.integrity.PerformVerificationRequest.initiated_by)
  return _impl_.initiated_by_.Release();
}
inline void PerformVerificationRequest::set_allocated_initiated_by(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initiated_by_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.initiated_by_.IsDefault()) {
    _impl_.initiated_by_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.integrity.PerformVerificationRequest.initiated_by)
}

// .seigr.integrity.ThreatSeverity escalation_threshold = 3;
inline void PerformVerificationRequest::clear_escalation_threshold() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.escalation_threshold_ = 0;
}
inline ::seigr::integrity::ThreatSeverity PerformVerificationRequest::escalation_threshold() const {
  // @@protoc_insertion_point(field_get:seigr.integrity.PerformVerificationRequest.escalation_threshold)
  return _internal_escalation_threshold();
}
inline void PerformVerificationRequest::set_escalation_threshold(::seigr::integrity::ThreatSeverity value) {
  _internal_set_escalation_threshold(value);
  // @@protoc_insertion_point(field_set:seigr.integrity.PerformVerificationRequest.escalation_threshold)
}
inline ::seigr::integrity::ThreatSeverity PerformVerificationRequest::_internal_escalation_threshold() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::integrity::ThreatSeverity>(_impl_.escalation_threshold_);
}
inline void PerformVerificationRequest::_internal_set_escalation_threshold(::seigr::integrity::ThreatSeverity value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.escalation_threshold_ = value;
}

// bool force_full_scan = 4;
inline void PerformVerificationRequest::clear_force_full_scan() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.force_full_scan_ = false;
}
inline bool PerformVerificationRequest::force_full_scan() const {
  // @@protoc_insertion_point(field_get:seigr.integrity.PerformVerificationRequest.force_full_scan)
  return _internal_force_full_scan();
}
inline void PerformVerificationRequest::set_force_full_scan(bool value) {
  _internal_set_force_full_scan(value);
  // @@protoc_insertion_point(field_set:seigr.integrity.PerformVerificationRequest.force_full_scan)
}
inline bool PerformVerificationRequest::_internal_force_full_scan() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.force_full_scan_;
}
inline void PerformVerificationRequest::_internal_set_force_full_scan(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.force_full_scan_ = value;
}

// map<string, string> metadata = 5;
inline int PerformVerificationRequest::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int PerformVerificationRequest::metadata_size() const {
  return _internal_metadata_size();
}
inline void PerformVerificationRequest::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& PerformVerificationRequest::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& PerformVerificationRequest::metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.integrity.PerformVerificationRequest.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* PerformVerificationRequest::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* PerformVerificationRequest::mutable_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.integrity.PerformVerificationRequest.metadata)
  return _internal_mutable_metadata();
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace integrity
}  // namespace seigr


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::seigr::integrity::ThreatSeverity> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::seigr::integrity::ThreatSeverity>() {
  return ::seigr::integrity::ThreatSeverity_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // integrity_2eproto_2epb_2eh
