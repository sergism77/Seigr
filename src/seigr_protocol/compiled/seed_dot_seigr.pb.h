// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: seed_dot_seigr.proto
// Protobuf C++ Version: 5.29.2

#ifndef seed_5fdot_5fseigr_2eproto_2epb_2eh
#define seed_5fdot_5fseigr_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "segment_metadata.pb.h"
#include "lineage.pb.h"
#include "pipeline.pb.h"
#include "access_control.pb.h"
#include "replication.pb.h"
#include "hashing.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_seed_5fdot_5fseigr_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_seed_5fdot_5fseigr_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_seed_5fdot_5fseigr_2eproto;
namespace seigr {
namespace seed_dot_seigr {
class Compatibility;
struct CompatibilityDefaultTypeInternal;
extern CompatibilityDefaultTypeInternal _Compatibility_default_instance_;
class Compatibility_CompatibilityNotesEntry_DoNotUse;
struct Compatibility_CompatibilityNotesEntry_DoNotUseDefaultTypeInternal;
extern Compatibility_CompatibilityNotesEntry_DoNotUseDefaultTypeInternal _Compatibility_CompatibilityNotesEntry_DoNotUse_default_instance_;
class Compatibility_MigrationMetadataEntry_DoNotUse;
struct Compatibility_MigrationMetadataEntry_DoNotUseDefaultTypeInternal;
extern Compatibility_MigrationMetadataEntry_DoNotUseDefaultTypeInternal _Compatibility_MigrationMetadataEntry_DoNotUse_default_instance_;
class IntegrityVerification;
struct IntegrityVerificationDefaultTypeInternal;
extern IntegrityVerificationDefaultTypeInternal _IntegrityVerification_default_instance_;
class IntegrityVerification_DetailsEntry_DoNotUse;
struct IntegrityVerification_DetailsEntry_DoNotUseDefaultTypeInternal;
extern IntegrityVerification_DetailsEntry_DoNotUseDefaultTypeInternal _IntegrityVerification_DetailsEntry_DoNotUse_default_instance_;
class MonitorSeedRequest;
struct MonitorSeedRequestDefaultTypeInternal;
extern MonitorSeedRequestDefaultTypeInternal _MonitorSeedRequest_default_instance_;
class MonitorSeedResponse;
struct MonitorSeedResponseDefaultTypeInternal;
extern MonitorSeedResponseDefaultTypeInternal _MonitorSeedResponse_default_instance_;
class MonitorSeedResponse_MetricsEntry_DoNotUse;
struct MonitorSeedResponse_MetricsEntry_DoNotUseDefaultTypeInternal;
extern MonitorSeedResponse_MetricsEntry_DoNotUseDefaultTypeInternal _MonitorSeedResponse_MetricsEntry_DoNotUse_default_instance_;
class SeedDotSeigr;
struct SeedDotSeigrDefaultTypeInternal;
extern SeedDotSeigrDefaultTypeInternal _SeedDotSeigr_default_instance_;
class SeedDotSeigr_CustomDataEntry_DoNotUse;
struct SeedDotSeigr_CustomDataEntry_DoNotUseDefaultTypeInternal;
extern SeedDotSeigr_CustomDataEntry_DoNotUseDefaultTypeInternal _SeedDotSeigr_CustomDataEntry_DoNotUse_default_instance_;
class SeedDotSeigr_MetadataEntry_DoNotUse;
struct SeedDotSeigr_MetadataEntry_DoNotUseDefaultTypeInternal;
extern SeedDotSeigr_MetadataEntry_DoNotUseDefaultTypeInternal _SeedDotSeigr_MetadataEntry_DoNotUse_default_instance_;
class SeedDotSeigr_MonitoringMetricsEntry_DoNotUse;
struct SeedDotSeigr_MonitoringMetricsEntry_DoNotUseDefaultTypeInternal;
extern SeedDotSeigr_MonitoringMetricsEntry_DoNotUseDefaultTypeInternal _SeedDotSeigr_MonitoringMetricsEntry_DoNotUse_default_instance_;
class SeedInitializationRequest;
struct SeedInitializationRequestDefaultTypeInternal;
extern SeedInitializationRequestDefaultTypeInternal _SeedInitializationRequest_default_instance_;
class SeedInitializationRequest_InitialMetadataEntry_DoNotUse;
struct SeedInitializationRequest_InitialMetadataEntry_DoNotUseDefaultTypeInternal;
extern SeedInitializationRequest_InitialMetadataEntry_DoNotUseDefaultTypeInternal _SeedInitializationRequest_InitialMetadataEntry_DoNotUse_default_instance_;
class SeedInitializationResponse;
struct SeedInitializationResponseDefaultTypeInternal;
extern SeedInitializationResponseDefaultTypeInternal _SeedInitializationResponse_default_instance_;
class TriggerRollbackRequest;
struct TriggerRollbackRequestDefaultTypeInternal;
extern TriggerRollbackRequestDefaultTypeInternal _TriggerRollbackRequest_default_instance_;
class TriggerRollbackResponse;
struct TriggerRollbackResponseDefaultTypeInternal;
extern TriggerRollbackResponseDefaultTypeInternal _TriggerRollbackResponse_default_instance_;
class UpdateSeedMetadataRequest;
struct UpdateSeedMetadataRequestDefaultTypeInternal;
extern UpdateSeedMetadataRequestDefaultTypeInternal _UpdateSeedMetadataRequest_default_instance_;
class UpdateSeedMetadataRequest_UpdatedMetadataEntry_DoNotUse;
struct UpdateSeedMetadataRequest_UpdatedMetadataEntry_DoNotUseDefaultTypeInternal;
extern UpdateSeedMetadataRequest_UpdatedMetadataEntry_DoNotUseDefaultTypeInternal _UpdateSeedMetadataRequest_UpdatedMetadataEntry_DoNotUse_default_instance_;
class UpdateSeedMetadataResponse;
struct UpdateSeedMetadataResponseDefaultTypeInternal;
extern UpdateSeedMetadataResponseDefaultTypeInternal _UpdateSeedMetadataResponse_default_instance_;
class VerifySeedRequest;
struct VerifySeedRequestDefaultTypeInternal;
extern VerifySeedRequestDefaultTypeInternal _VerifySeedRequest_default_instance_;
class VerifySeedResponse;
struct VerifySeedResponseDefaultTypeInternal;
extern VerifySeedResponseDefaultTypeInternal _VerifySeedResponse_default_instance_;
}  // namespace seed_dot_seigr
}  // namespace seigr
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace seigr {
namespace seed_dot_seigr {
enum SeedClusterState : int {
  SEED_STATE_UNDEFINED = 0,
  SEED_ACTIVE = 1,
  SEED_INACTIVE = 2,
  SEED_ROLLBACK = 3,
  SEED_DEPRECATED = 4,
  SeedClusterState_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  SeedClusterState_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool SeedClusterState_IsValid(int value);
extern const uint32_t SeedClusterState_internal_data_[];
constexpr SeedClusterState SeedClusterState_MIN = static_cast<SeedClusterState>(0);
constexpr SeedClusterState SeedClusterState_MAX = static_cast<SeedClusterState>(4);
constexpr int SeedClusterState_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor*
SeedClusterState_descriptor();
template <typename T>
const std::string& SeedClusterState_Name(T value) {
  static_assert(std::is_same<T, SeedClusterState>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to SeedClusterState_Name().");
  return SeedClusterState_Name(static_cast<SeedClusterState>(value));
}
template <>
inline const std::string& SeedClusterState_Name(SeedClusterState value) {
  return ::google::protobuf::internal::NameOfDenseEnum<SeedClusterState_descriptor,
                                                 0, 4>(
      static_cast<int>(value));
}
inline bool SeedClusterState_Parse(absl::string_view name, SeedClusterState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SeedClusterState>(
      SeedClusterState_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class VerifySeedResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.seed_dot_seigr.VerifySeedResponse) */ {
 public:
  inline VerifySeedResponse() : VerifySeedResponse(nullptr) {}
  ~VerifySeedResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(VerifySeedResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(VerifySeedResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR VerifySeedResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline VerifySeedResponse(const VerifySeedResponse& from) : VerifySeedResponse(nullptr, from) {}
  inline VerifySeedResponse(VerifySeedResponse&& from) noexcept
      : VerifySeedResponse(nullptr, std::move(from)) {}
  inline VerifySeedResponse& operator=(const VerifySeedResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline VerifySeedResponse& operator=(VerifySeedResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VerifySeedResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const VerifySeedResponse* internal_default_instance() {
    return reinterpret_cast<const VerifySeedResponse*>(
        &_VerifySeedResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(VerifySeedResponse& a, VerifySeedResponse& b) { a.Swap(&b); }
  inline void Swap(VerifySeedResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VerifySeedResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VerifySeedResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<VerifySeedResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const VerifySeedResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const VerifySeedResponse& from) { VerifySeedResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(VerifySeedResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.seed_dot_seigr.VerifySeedResponse"; }

 protected:
  explicit VerifySeedResponse(::google::protobuf::Arena* arena);
  VerifySeedResponse(::google::protobuf::Arena* arena, const VerifySeedResponse& from);
  VerifySeedResponse(::google::protobuf::Arena* arena, VerifySeedResponse&& from) noexcept
      : VerifySeedResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageFieldNumber = 3,
    kSuccessFieldNumber = 1,
    kStatusFieldNumber = 2,
  };
  // string message = 3;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // .seigr.hashing.VerificationStatus status = 2;
  void clear_status() ;
  ::seigr::hashing::VerificationStatus status() const;
  void set_status(::seigr::hashing::VerificationStatus value);

  private:
  ::seigr::hashing::VerificationStatus _internal_status() const;
  void _internal_set_status(::seigr::hashing::VerificationStatus value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.seed_dot_seigr.VerifySeedResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      55, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const VerifySeedResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr message_;
    bool success_;
    int status_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seed_5fdot_5fseigr_2eproto;
};
// -------------------------------------------------------------------

class VerifySeedRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.seed_dot_seigr.VerifySeedRequest) */ {
 public:
  inline VerifySeedRequest() : VerifySeedRequest(nullptr) {}
  ~VerifySeedRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(VerifySeedRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(VerifySeedRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR VerifySeedRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline VerifySeedRequest(const VerifySeedRequest& from) : VerifySeedRequest(nullptr, from) {}
  inline VerifySeedRequest(VerifySeedRequest&& from) noexcept
      : VerifySeedRequest(nullptr, std::move(from)) {}
  inline VerifySeedRequest& operator=(const VerifySeedRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline VerifySeedRequest& operator=(VerifySeedRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VerifySeedRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const VerifySeedRequest* internal_default_instance() {
    return reinterpret_cast<const VerifySeedRequest*>(
        &_VerifySeedRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(VerifySeedRequest& a, VerifySeedRequest& b) { a.Swap(&b); }
  inline void Swap(VerifySeedRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VerifySeedRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VerifySeedRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<VerifySeedRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const VerifySeedRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const VerifySeedRequest& from) { VerifySeedRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(VerifySeedRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.seed_dot_seigr.VerifySeedRequest"; }

 protected:
  explicit VerifySeedRequest(::google::protobuf::Arena* arena);
  VerifySeedRequest(::google::protobuf::Arena* arena, const VerifySeedRequest& from);
  VerifySeedRequest(::google::protobuf::Arena* arena, VerifySeedRequest&& from) noexcept
      : VerifySeedRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSeedHashFieldNumber = 1,
    kPerformFullVerificationFieldNumber = 2,
  };
  // string seed_hash = 1;
  void clear_seed_hash() ;
  const std::string& seed_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_seed_hash(Arg_&& arg, Args_... args);
  std::string* mutable_seed_hash();
  PROTOBUF_NODISCARD std::string* release_seed_hash();
  void set_allocated_seed_hash(std::string* value);

  private:
  const std::string& _internal_seed_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_seed_hash(
      const std::string& value);
  std::string* _internal_mutable_seed_hash();

  public:
  // bool perform_full_verification = 2;
  void clear_perform_full_verification() ;
  bool perform_full_verification() const;
  void set_perform_full_verification(bool value);

  private:
  bool _internal_perform_full_verification() const;
  void _internal_set_perform_full_verification(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.seed_dot_seigr.VerifySeedRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      56, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const VerifySeedRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr seed_hash_;
    bool perform_full_verification_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seed_5fdot_5fseigr_2eproto;
};
// -------------------------------------------------------------------

class UpdateSeedMetadataResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.seed_dot_seigr.UpdateSeedMetadataResponse) */ {
 public:
  inline UpdateSeedMetadataResponse() : UpdateSeedMetadataResponse(nullptr) {}
  ~UpdateSeedMetadataResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateSeedMetadataResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateSeedMetadataResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateSeedMetadataResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateSeedMetadataResponse(const UpdateSeedMetadataResponse& from) : UpdateSeedMetadataResponse(nullptr, from) {}
  inline UpdateSeedMetadataResponse(UpdateSeedMetadataResponse&& from) noexcept
      : UpdateSeedMetadataResponse(nullptr, std::move(from)) {}
  inline UpdateSeedMetadataResponse& operator=(const UpdateSeedMetadataResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateSeedMetadataResponse& operator=(UpdateSeedMetadataResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateSeedMetadataResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateSeedMetadataResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateSeedMetadataResponse*>(
        &_UpdateSeedMetadataResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(UpdateSeedMetadataResponse& a, UpdateSeedMetadataResponse& b) { a.Swap(&b); }
  inline void Swap(UpdateSeedMetadataResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateSeedMetadataResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateSeedMetadataResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateSeedMetadataResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateSeedMetadataResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateSeedMetadataResponse& from) { UpdateSeedMetadataResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateSeedMetadataResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.seed_dot_seigr.UpdateSeedMetadataResponse"; }

 protected:
  explicit UpdateSeedMetadataResponse(::google::protobuf::Arena* arena);
  UpdateSeedMetadataResponse(::google::protobuf::Arena* arena, const UpdateSeedMetadataResponse& from);
  UpdateSeedMetadataResponse(::google::protobuf::Arena* arena, UpdateSeedMetadataResponse&& from) noexcept
      : UpdateSeedMetadataResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageFieldNumber = 2,
    kSuccessFieldNumber = 1,
  };
  // string message = 2;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.seed_dot_seigr.UpdateSeedMetadataResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      63, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateSeedMetadataResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr message_;
    bool success_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seed_5fdot_5fseigr_2eproto;
};
// -------------------------------------------------------------------

class UpdateSeedMetadataRequest_UpdatedMetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  UpdateSeedMetadataRequest_UpdatedMetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateSeedMetadataRequest_UpdatedMetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit UpdateSeedMetadataRequest_UpdatedMetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const UpdateSeedMetadataRequest_UpdatedMetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const UpdateSeedMetadataRequest_UpdatedMetadataEntry_DoNotUse*>(
        &_UpdateSeedMetadataRequest_UpdatedMetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_seed_5fdot_5fseigr_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      84, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class TriggerRollbackResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.seed_dot_seigr.TriggerRollbackResponse) */ {
 public:
  inline TriggerRollbackResponse() : TriggerRollbackResponse(nullptr) {}
  ~TriggerRollbackResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TriggerRollbackResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TriggerRollbackResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TriggerRollbackResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline TriggerRollbackResponse(const TriggerRollbackResponse& from) : TriggerRollbackResponse(nullptr, from) {}
  inline TriggerRollbackResponse(TriggerRollbackResponse&& from) noexcept
      : TriggerRollbackResponse(nullptr, std::move(from)) {}
  inline TriggerRollbackResponse& operator=(const TriggerRollbackResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline TriggerRollbackResponse& operator=(TriggerRollbackResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TriggerRollbackResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const TriggerRollbackResponse* internal_default_instance() {
    return reinterpret_cast<const TriggerRollbackResponse*>(
        &_TriggerRollbackResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(TriggerRollbackResponse& a, TriggerRollbackResponse& b) { a.Swap(&b); }
  inline void Swap(TriggerRollbackResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TriggerRollbackResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TriggerRollbackResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TriggerRollbackResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TriggerRollbackResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TriggerRollbackResponse& from) { TriggerRollbackResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TriggerRollbackResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.seed_dot_seigr.TriggerRollbackResponse"; }

 protected:
  explicit TriggerRollbackResponse(::google::protobuf::Arena* arena);
  TriggerRollbackResponse(::google::protobuf::Arena* arena, const TriggerRollbackResponse& from);
  TriggerRollbackResponse(::google::protobuf::Arena* arena, TriggerRollbackResponse&& from) noexcept
      : TriggerRollbackResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageFieldNumber = 2,
    kSuccessFieldNumber = 1,
  };
  // string message = 2;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.seed_dot_seigr.TriggerRollbackResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      60, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TriggerRollbackResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr message_;
    bool success_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seed_5fdot_5fseigr_2eproto;
};
// -------------------------------------------------------------------

class TriggerRollbackRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.seed_dot_seigr.TriggerRollbackRequest) */ {
 public:
  inline TriggerRollbackRequest() : TriggerRollbackRequest(nullptr) {}
  ~TriggerRollbackRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TriggerRollbackRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TriggerRollbackRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TriggerRollbackRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline TriggerRollbackRequest(const TriggerRollbackRequest& from) : TriggerRollbackRequest(nullptr, from) {}
  inline TriggerRollbackRequest(TriggerRollbackRequest&& from) noexcept
      : TriggerRollbackRequest(nullptr, std::move(from)) {}
  inline TriggerRollbackRequest& operator=(const TriggerRollbackRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline TriggerRollbackRequest& operator=(TriggerRollbackRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TriggerRollbackRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const TriggerRollbackRequest* internal_default_instance() {
    return reinterpret_cast<const TriggerRollbackRequest*>(
        &_TriggerRollbackRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(TriggerRollbackRequest& a, TriggerRollbackRequest& b) { a.Swap(&b); }
  inline void Swap(TriggerRollbackRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TriggerRollbackRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TriggerRollbackRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TriggerRollbackRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TriggerRollbackRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TriggerRollbackRequest& from) { TriggerRollbackRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TriggerRollbackRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.seed_dot_seigr.TriggerRollbackRequest"; }

 protected:
  explicit TriggerRollbackRequest(::google::protobuf::Arena* arena);
  TriggerRollbackRequest(::google::protobuf::Arena* arena, const TriggerRollbackRequest& from);
  TriggerRollbackRequest(::google::protobuf::Arena* arena, TriggerRollbackRequest&& from) noexcept
      : TriggerRollbackRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSeedHashFieldNumber = 1,
    kTargetTimestampFieldNumber = 2,
  };
  // string seed_hash = 1;
  void clear_seed_hash() ;
  const std::string& seed_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_seed_hash(Arg_&& arg, Args_... args);
  std::string* mutable_seed_hash();
  PROTOBUF_NODISCARD std::string* release_seed_hash();
  void set_allocated_seed_hash(std::string* value);

  private:
  const std::string& _internal_seed_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_seed_hash(
      const std::string& value);
  std::string* _internal_mutable_seed_hash();

  public:
  // string target_timestamp = 2;
  void clear_target_timestamp() ;
  const std::string& target_timestamp() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_target_timestamp(Arg_&& arg, Args_... args);
  std::string* mutable_target_timestamp();
  PROTOBUF_NODISCARD std::string* release_target_timestamp();
  void set_allocated_target_timestamp(std::string* value);

  private:
  const std::string& _internal_target_timestamp() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_target_timestamp(
      const std::string& value);
  std::string* _internal_mutable_target_timestamp();

  public:
  // @@protoc_insertion_point(class_scope:seigr.seed_dot_seigr.TriggerRollbackRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      77, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TriggerRollbackRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr seed_hash_;
    ::google::protobuf::internal::ArenaStringPtr target_timestamp_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seed_5fdot_5fseigr_2eproto;
};
// -------------------------------------------------------------------

class SeedInitializationResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.seed_dot_seigr.SeedInitializationResponse) */ {
 public:
  inline SeedInitializationResponse() : SeedInitializationResponse(nullptr) {}
  ~SeedInitializationResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SeedInitializationResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SeedInitializationResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SeedInitializationResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SeedInitializationResponse(const SeedInitializationResponse& from) : SeedInitializationResponse(nullptr, from) {}
  inline SeedInitializationResponse(SeedInitializationResponse&& from) noexcept
      : SeedInitializationResponse(nullptr, std::move(from)) {}
  inline SeedInitializationResponse& operator=(const SeedInitializationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SeedInitializationResponse& operator=(SeedInitializationResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SeedInitializationResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SeedInitializationResponse* internal_default_instance() {
    return reinterpret_cast<const SeedInitializationResponse*>(
        &_SeedInitializationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(SeedInitializationResponse& a, SeedInitializationResponse& b) { a.Swap(&b); }
  inline void Swap(SeedInitializationResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SeedInitializationResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SeedInitializationResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SeedInitializationResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SeedInitializationResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SeedInitializationResponse& from) { SeedInitializationResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SeedInitializationResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.seed_dot_seigr.SeedInitializationResponse"; }

 protected:
  explicit SeedInitializationResponse(::google::protobuf::Arena* arena);
  SeedInitializationResponse(::google::protobuf::Arena* arena, const SeedInitializationResponse& from);
  SeedInitializationResponse(::google::protobuf::Arena* arena, SeedInitializationResponse&& from) noexcept
      : SeedInitializationResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSeedHashFieldNumber = 2,
    kMessageFieldNumber = 3,
    kSuccessFieldNumber = 1,
  };
  // string seed_hash = 2;
  void clear_seed_hash() ;
  const std::string& seed_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_seed_hash(Arg_&& arg, Args_... args);
  std::string* mutable_seed_hash();
  PROTOBUF_NODISCARD std::string* release_seed_hash();
  void set_allocated_seed_hash(std::string* value);

  private:
  const std::string& _internal_seed_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_seed_hash(
      const std::string& value);
  std::string* _internal_mutable_seed_hash();

  public:
  // string message = 3;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.seed_dot_seigr.SeedInitializationResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      72, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SeedInitializationResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr seed_hash_;
    ::google::protobuf::internal::ArenaStringPtr message_;
    bool success_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seed_5fdot_5fseigr_2eproto;
};
// -------------------------------------------------------------------

class SeedInitializationRequest_InitialMetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  SeedInitializationRequest_InitialMetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SeedInitializationRequest_InitialMetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit SeedInitializationRequest_InitialMetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const SeedInitializationRequest_InitialMetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const SeedInitializationRequest_InitialMetadataEntry_DoNotUse*>(
        &_SeedInitializationRequest_InitialMetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_seed_5fdot_5fseigr_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      84, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class SeedDotSeigr_MonitoringMetricsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  SeedDotSeigr_MonitoringMetricsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SeedDotSeigr_MonitoringMetricsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit SeedDotSeigr_MonitoringMetricsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const SeedDotSeigr_MonitoringMetricsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const SeedDotSeigr_MonitoringMetricsEntry_DoNotUse*>(
        &_SeedDotSeigr_MonitoringMetricsEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_seed_5fdot_5fseigr_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      73, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class SeedDotSeigr_MetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  SeedDotSeigr_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SeedDotSeigr_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit SeedDotSeigr_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const SeedDotSeigr_MetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const SeedDotSeigr_MetadataEntry_DoNotUse*>(
        &_SeedDotSeigr_MetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_seed_5fdot_5fseigr_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      64, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class SeedDotSeigr_CustomDataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_BYTES> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES>;
  SeedDotSeigr_CustomDataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SeedDotSeigr_CustomDataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit SeedDotSeigr_CustomDataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const SeedDotSeigr_CustomDataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const SeedDotSeigr_CustomDataEntry_DoNotUse*>(
        &_SeedDotSeigr_CustomDataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_seed_5fdot_5fseigr_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      61, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class MonitorSeedResponse_MetricsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  MonitorSeedResponse_MetricsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MonitorSeedResponse_MetricsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit MonitorSeedResponse_MetricsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const MonitorSeedResponse_MetricsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const MonitorSeedResponse_MetricsEntry_DoNotUse*>(
        &_MonitorSeedResponse_MetricsEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_seed_5fdot_5fseigr_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      70, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class MonitorSeedRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.seed_dot_seigr.MonitorSeedRequest) */ {
 public:
  inline MonitorSeedRequest() : MonitorSeedRequest(nullptr) {}
  ~MonitorSeedRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MonitorSeedRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MonitorSeedRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MonitorSeedRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline MonitorSeedRequest(const MonitorSeedRequest& from) : MonitorSeedRequest(nullptr, from) {}
  inline MonitorSeedRequest(MonitorSeedRequest&& from) noexcept
      : MonitorSeedRequest(nullptr, std::move(from)) {}
  inline MonitorSeedRequest& operator=(const MonitorSeedRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline MonitorSeedRequest& operator=(MonitorSeedRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MonitorSeedRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const MonitorSeedRequest* internal_default_instance() {
    return reinterpret_cast<const MonitorSeedRequest*>(
        &_MonitorSeedRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(MonitorSeedRequest& a, MonitorSeedRequest& b) { a.Swap(&b); }
  inline void Swap(MonitorSeedRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MonitorSeedRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MonitorSeedRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MonitorSeedRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MonitorSeedRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MonitorSeedRequest& from) { MonitorSeedRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MonitorSeedRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.seed_dot_seigr.MonitorSeedRequest"; }

 protected:
  explicit MonitorSeedRequest(::google::protobuf::Arena* arena);
  MonitorSeedRequest(::google::protobuf::Arena* arena, const MonitorSeedRequest& from);
  MonitorSeedRequest(::google::protobuf::Arena* arena, MonitorSeedRequest&& from) noexcept
      : MonitorSeedRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSeedHashFieldNumber = 1,
  };
  // string seed_hash = 1;
  void clear_seed_hash() ;
  const std::string& seed_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_seed_hash(Arg_&& arg, Args_... args);
  std::string* mutable_seed_hash();
  PROTOBUF_NODISCARD std::string* release_seed_hash();
  void set_allocated_seed_hash(std::string* value);

  private:
  const std::string& _internal_seed_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_seed_hash(
      const std::string& value);
  std::string* _internal_mutable_seed_hash();

  public:
  // @@protoc_insertion_point(class_scope:seigr.seed_dot_seigr.MonitorSeedRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      57, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MonitorSeedRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr seed_hash_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seed_5fdot_5fseigr_2eproto;
};
// -------------------------------------------------------------------

class IntegrityVerification_DetailsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  IntegrityVerification_DetailsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR IntegrityVerification_DetailsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit IntegrityVerification_DetailsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const IntegrityVerification_DetailsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const IntegrityVerification_DetailsEntry_DoNotUse*>(
        &_IntegrityVerification_DetailsEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_seed_5fdot_5fseigr_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      72, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class Compatibility_MigrationMetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  Compatibility_MigrationMetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Compatibility_MigrationMetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit Compatibility_MigrationMetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const Compatibility_MigrationMetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const Compatibility_MigrationMetadataEntry_DoNotUse*>(
        &_Compatibility_MigrationMetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_seed_5fdot_5fseigr_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      74, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class Compatibility_CompatibilityNotesEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  Compatibility_CompatibilityNotesEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Compatibility_CompatibilityNotesEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit Compatibility_CompatibilityNotesEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const Compatibility_CompatibilityNotesEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const Compatibility_CompatibilityNotesEntry_DoNotUse*>(
        &_Compatibility_CompatibilityNotesEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_seed_5fdot_5fseigr_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      75, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class UpdateSeedMetadataRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.seed_dot_seigr.UpdateSeedMetadataRequest) */ {
 public:
  inline UpdateSeedMetadataRequest() : UpdateSeedMetadataRequest(nullptr) {}
  ~UpdateSeedMetadataRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateSeedMetadataRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateSeedMetadataRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateSeedMetadataRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateSeedMetadataRequest(const UpdateSeedMetadataRequest& from) : UpdateSeedMetadataRequest(nullptr, from) {}
  inline UpdateSeedMetadataRequest(UpdateSeedMetadataRequest&& from) noexcept
      : UpdateSeedMetadataRequest(nullptr, std::move(from)) {}
  inline UpdateSeedMetadataRequest& operator=(const UpdateSeedMetadataRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateSeedMetadataRequest& operator=(UpdateSeedMetadataRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateSeedMetadataRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateSeedMetadataRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateSeedMetadataRequest*>(
        &_UpdateSeedMetadataRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(UpdateSeedMetadataRequest& a, UpdateSeedMetadataRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateSeedMetadataRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateSeedMetadataRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateSeedMetadataRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateSeedMetadataRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateSeedMetadataRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateSeedMetadataRequest& from) { UpdateSeedMetadataRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateSeedMetadataRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.seed_dot_seigr.UpdateSeedMetadataRequest"; }

 protected:
  explicit UpdateSeedMetadataRequest(::google::protobuf::Arena* arena);
  UpdateSeedMetadataRequest(::google::protobuf::Arena* arena, const UpdateSeedMetadataRequest& from);
  UpdateSeedMetadataRequest(::google::protobuf::Arena* arena, UpdateSeedMetadataRequest&& from) noexcept
      : UpdateSeedMetadataRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUpdatedMetadataFieldNumber = 2,
    kSeedHashFieldNumber = 1,
  };
  // map<string, string> updated_metadata = 2;
  int updated_metadata_size() const;
  private:
  int _internal_updated_metadata_size() const;

  public:
  void clear_updated_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& updated_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_updated_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_updated_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_updated_metadata();

  public:
  // string seed_hash = 1;
  void clear_seed_hash() ;
  const std::string& seed_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_seed_hash(Arg_&& arg, Args_... args);
  std::string* mutable_seed_hash();
  PROTOBUF_NODISCARD std::string* release_seed_hash();
  void set_allocated_seed_hash(std::string* value);

  private:
  const std::string& _internal_seed_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_seed_hash(
      const std::string& value);
  std::string* _internal_mutable_seed_hash();

  public:
  // @@protoc_insertion_point(class_scope:seigr.seed_dot_seigr.UpdateSeedMetadataRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 1,
      80, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateSeedMetadataRequest& from_msg);
    ::google::protobuf::internal::MapField<UpdateSeedMetadataRequest_UpdatedMetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        updated_metadata_;
    ::google::protobuf::internal::ArenaStringPtr seed_hash_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seed_5fdot_5fseigr_2eproto;
};
// -------------------------------------------------------------------

class SeedInitializationRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.seed_dot_seigr.SeedInitializationRequest) */ {
 public:
  inline SeedInitializationRequest() : SeedInitializationRequest(nullptr) {}
  ~SeedInitializationRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SeedInitializationRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SeedInitializationRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SeedInitializationRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SeedInitializationRequest(const SeedInitializationRequest& from) : SeedInitializationRequest(nullptr, from) {}
  inline SeedInitializationRequest(SeedInitializationRequest&& from) noexcept
      : SeedInitializationRequest(nullptr, std::move(from)) {}
  inline SeedInitializationRequest& operator=(const SeedInitializationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SeedInitializationRequest& operator=(SeedInitializationRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SeedInitializationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SeedInitializationRequest* internal_default_instance() {
    return reinterpret_cast<const SeedInitializationRequest*>(
        &_SeedInitializationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(SeedInitializationRequest& a, SeedInitializationRequest& b) { a.Swap(&b); }
  inline void Swap(SeedInitializationRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SeedInitializationRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SeedInitializationRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SeedInitializationRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SeedInitializationRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SeedInitializationRequest& from) { SeedInitializationRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SeedInitializationRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.seed_dot_seigr.SeedInitializationRequest"; }

 protected:
  explicit SeedInitializationRequest(::google::protobuf::Arena* arena);
  SeedInitializationRequest(::google::protobuf::Arena* arena, const SeedInitializationRequest& from);
  SeedInitializationRequest(::google::protobuf::Arena* arena, SeedInitializationRequest&& from) noexcept
      : SeedInitializationRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInitialMetadataFieldNumber = 3,
    kRootHashFieldNumber = 1,
    kCreatorIdFieldNumber = 2,
  };
  // map<string, string> initial_metadata = 3;
  int initial_metadata_size() const;
  private:
  int _internal_initial_metadata_size() const;

  public:
  void clear_initial_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& initial_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_initial_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_initial_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_initial_metadata();

  public:
  // string root_hash = 1;
  void clear_root_hash() ;
  const std::string& root_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_root_hash(Arg_&& arg, Args_... args);
  std::string* mutable_root_hash();
  PROTOBUF_NODISCARD std::string* release_root_hash();
  void set_allocated_root_hash(std::string* value);

  private:
  const std::string& _internal_root_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_root_hash(
      const std::string& value);
  std::string* _internal_mutable_root_hash();

  public:
  // string creator_id = 2;
  void clear_creator_id() ;
  const std::string& creator_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_creator_id(Arg_&& arg, Args_... args);
  std::string* mutable_creator_id();
  PROTOBUF_NODISCARD std::string* release_creator_id();
  void set_allocated_creator_id(std::string* value);

  private:
  const std::string& _internal_creator_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_creator_id(
      const std::string& value);
  std::string* _internal_mutable_creator_id();

  public:
  // @@protoc_insertion_point(class_scope:seigr.seed_dot_seigr.SeedInitializationRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 3, 1,
      90, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SeedInitializationRequest& from_msg);
    ::google::protobuf::internal::MapField<SeedInitializationRequest_InitialMetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        initial_metadata_;
    ::google::protobuf::internal::ArenaStringPtr root_hash_;
    ::google::protobuf::internal::ArenaStringPtr creator_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seed_5fdot_5fseigr_2eproto;
};
// -------------------------------------------------------------------

class MonitorSeedResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.seed_dot_seigr.MonitorSeedResponse) */ {
 public:
  inline MonitorSeedResponse() : MonitorSeedResponse(nullptr) {}
  ~MonitorSeedResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MonitorSeedResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MonitorSeedResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MonitorSeedResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MonitorSeedResponse(const MonitorSeedResponse& from) : MonitorSeedResponse(nullptr, from) {}
  inline MonitorSeedResponse(MonitorSeedResponse&& from) noexcept
      : MonitorSeedResponse(nullptr, std::move(from)) {}
  inline MonitorSeedResponse& operator=(const MonitorSeedResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MonitorSeedResponse& operator=(MonitorSeedResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MonitorSeedResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MonitorSeedResponse* internal_default_instance() {
    return reinterpret_cast<const MonitorSeedResponse*>(
        &_MonitorSeedResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(MonitorSeedResponse& a, MonitorSeedResponse& b) { a.Swap(&b); }
  inline void Swap(MonitorSeedResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MonitorSeedResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MonitorSeedResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MonitorSeedResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MonitorSeedResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MonitorSeedResponse& from) { MonitorSeedResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MonitorSeedResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.seed_dot_seigr.MonitorSeedResponse"; }

 protected:
  explicit MonitorSeedResponse(::google::protobuf::Arena* arena);
  MonitorSeedResponse(::google::protobuf::Arena* arena, const MonitorSeedResponse& from);
  MonitorSeedResponse(::google::protobuf::Arena* arena, MonitorSeedResponse&& from) noexcept
      : MonitorSeedResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMetricsFieldNumber = 2,
    kStatusFieldNumber = 1,
    kLastPingFieldNumber = 3,
  };
  // map<string, string> metrics = 2;
  int metrics_size() const;
  private:
  int _internal_metrics_size() const;

  public:
  void clear_metrics() ;
  const ::google::protobuf::Map<std::string, std::string>& metrics() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metrics();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metrics() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metrics();

  public:
  // string status = 1;
  void clear_status() ;
  const std::string& status() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_status(Arg_&& arg, Args_... args);
  std::string* mutable_status();
  PROTOBUF_NODISCARD std::string* release_status();
  void set_allocated_status(std::string* value);

  private:
  const std::string& _internal_status() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_status(
      const std::string& value);
  std::string* _internal_mutable_status();

  public:
  // string last_ping = 3;
  void clear_last_ping() ;
  const std::string& last_ping() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_last_ping(Arg_&& arg, Args_... args);
  std::string* mutable_last_ping();
  PROTOBUF_NODISCARD std::string* release_last_ping();
  void set_allocated_last_ping(std::string* value);

  private:
  const std::string& _internal_last_ping() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_last_ping(
      const std::string& value);
  std::string* _internal_mutable_last_ping();

  public:
  // @@protoc_insertion_point(class_scope:seigr.seed_dot_seigr.MonitorSeedResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      71, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MonitorSeedResponse& from_msg);
    ::google::protobuf::internal::MapField<MonitorSeedResponse_MetricsEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metrics_;
    ::google::protobuf::internal::ArenaStringPtr status_;
    ::google::protobuf::internal::ArenaStringPtr last_ping_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seed_5fdot_5fseigr_2eproto;
};
// -------------------------------------------------------------------

class IntegrityVerification final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.seed_dot_seigr.IntegrityVerification) */ {
 public:
  inline IntegrityVerification() : IntegrityVerification(nullptr) {}
  ~IntegrityVerification() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(IntegrityVerification* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(IntegrityVerification));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR IntegrityVerification(
      ::google::protobuf::internal::ConstantInitialized);

  inline IntegrityVerification(const IntegrityVerification& from) : IntegrityVerification(nullptr, from) {}
  inline IntegrityVerification(IntegrityVerification&& from) noexcept
      : IntegrityVerification(nullptr, std::move(from)) {}
  inline IntegrityVerification& operator=(const IntegrityVerification& from) {
    CopyFrom(from);
    return *this;
  }
  inline IntegrityVerification& operator=(IntegrityVerification&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IntegrityVerification& default_instance() {
    return *internal_default_instance();
  }
  static inline const IntegrityVerification* internal_default_instance() {
    return reinterpret_cast<const IntegrityVerification*>(
        &_IntegrityVerification_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(IntegrityVerification& a, IntegrityVerification& b) { a.Swap(&b); }
  inline void Swap(IntegrityVerification* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IntegrityVerification* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IntegrityVerification* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<IntegrityVerification>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const IntegrityVerification& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const IntegrityVerification& from) { IntegrityVerification::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(IntegrityVerification* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.seed_dot_seigr.IntegrityVerification"; }

 protected:
  explicit IntegrityVerification(::google::protobuf::Arena* arena);
  IntegrityVerification(::google::protobuf::Arena* arena, const IntegrityVerification& from);
  IntegrityVerification(::google::protobuf::Arena* arena, IntegrityVerification&& from) noexcept
      : IntegrityVerification(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDetailsFieldNumber = 4,
    kTimestampFieldNumber = 2,
    kVerifierIdFieldNumber = 3,
    kIntegrityLevelFieldNumber = 5,
    kErrorMessageFieldNumber = 6,
    kIntegrityContextFieldNumber = 7,
    kStatusFieldNumber = 1,
  };
  // map<string, string> details = 4;
  int details_size() const;
  private:
  int _internal_details_size() const;

  public:
  void clear_details() ;
  const ::google::protobuf::Map<std::string, std::string>& details() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_details();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_details() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_details();

  public:
  // string timestamp = 2;
  void clear_timestamp() ;
  const std::string& timestamp() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_timestamp(Arg_&& arg, Args_... args);
  std::string* mutable_timestamp();
  PROTOBUF_NODISCARD std::string* release_timestamp();
  void set_allocated_timestamp(std::string* value);

  private:
  const std::string& _internal_timestamp() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_timestamp(
      const std::string& value);
  std::string* _internal_mutable_timestamp();

  public:
  // string verifier_id = 3;
  void clear_verifier_id() ;
  const std::string& verifier_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_verifier_id(Arg_&& arg, Args_... args);
  std::string* mutable_verifier_id();
  PROTOBUF_NODISCARD std::string* release_verifier_id();
  void set_allocated_verifier_id(std::string* value);

  private:
  const std::string& _internal_verifier_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_verifier_id(
      const std::string& value);
  std::string* _internal_mutable_verifier_id();

  public:
  // string integrity_level = 5;
  void clear_integrity_level() ;
  const std::string& integrity_level() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_integrity_level(Arg_&& arg, Args_... args);
  std::string* mutable_integrity_level();
  PROTOBUF_NODISCARD std::string* release_integrity_level();
  void set_allocated_integrity_level(std::string* value);

  private:
  const std::string& _internal_integrity_level() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_integrity_level(
      const std::string& value);
  std::string* _internal_mutable_integrity_level();

  public:
  // string error_message = 6;
  void clear_error_message() ;
  const std::string& error_message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_error_message(Arg_&& arg, Args_... args);
  std::string* mutable_error_message();
  PROTOBUF_NODISCARD std::string* release_error_message();
  void set_allocated_error_message(std::string* value);

  private:
  const std::string& _internal_error_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_error_message(
      const std::string& value);
  std::string* _internal_mutable_error_message();

  public:
  // string integrity_context = 7;
  void clear_integrity_context() ;
  const std::string& integrity_context() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_integrity_context(Arg_&& arg, Args_... args);
  std::string* mutable_integrity_context();
  PROTOBUF_NODISCARD std::string* release_integrity_context();
  void set_allocated_integrity_context(std::string* value);

  private:
  const std::string& _internal_integrity_context() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_integrity_context(
      const std::string& value);
  std::string* _internal_mutable_integrity_context();

  public:
  // .seigr.hashing.VerificationStatus status = 1;
  void clear_status() ;
  ::seigr::hashing::VerificationStatus status() const;
  void set_status(::seigr::hashing::VerificationStatus value);

  private:
  ::seigr::hashing::VerificationStatus _internal_status() const;
  void _internal_set_status(::seigr::hashing::VerificationStatus value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.seed_dot_seigr.IntegrityVerification)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 1,
      123, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const IntegrityVerification& from_msg);
    ::google::protobuf::internal::MapField<IntegrityVerification_DetailsEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        details_;
    ::google::protobuf::internal::ArenaStringPtr timestamp_;
    ::google::protobuf::internal::ArenaStringPtr verifier_id_;
    ::google::protobuf::internal::ArenaStringPtr integrity_level_;
    ::google::protobuf::internal::ArenaStringPtr error_message_;
    ::google::protobuf::internal::ArenaStringPtr integrity_context_;
    int status_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seed_5fdot_5fseigr_2eproto;
};
// -------------------------------------------------------------------

class Compatibility final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.seed_dot_seigr.Compatibility) */ {
 public:
  inline Compatibility() : Compatibility(nullptr) {}
  ~Compatibility() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Compatibility* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Compatibility));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Compatibility(
      ::google::protobuf::internal::ConstantInitialized);

  inline Compatibility(const Compatibility& from) : Compatibility(nullptr, from) {}
  inline Compatibility(Compatibility&& from) noexcept
      : Compatibility(nullptr, std::move(from)) {}
  inline Compatibility& operator=(const Compatibility& from) {
    CopyFrom(from);
    return *this;
  }
  inline Compatibility& operator=(Compatibility&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Compatibility& default_instance() {
    return *internal_default_instance();
  }
  static inline const Compatibility* internal_default_instance() {
    return reinterpret_cast<const Compatibility*>(
        &_Compatibility_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(Compatibility& a, Compatibility& b) { a.Swap(&b); }
  inline void Swap(Compatibility* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Compatibility* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Compatibility* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Compatibility>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Compatibility& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Compatibility& from) { Compatibility::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Compatibility* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.seed_dot_seigr.Compatibility"; }

 protected:
  explicit Compatibility(::google::protobuf::Arena* arena);
  Compatibility(::google::protobuf::Arena* arena, const Compatibility& from);
  Compatibility(::google::protobuf::Arena* arena, Compatibility&& from) noexcept
      : Compatibility(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCompatibilityNotesFieldNumber = 3,
    kAffectedComponentsFieldNumber = 5,
    kMigrationMetadataFieldNumber = 6,
    kTargetVersionFieldNumber = 1,
    kMigrationStatusFieldNumber = 2,
    kLastTestedFieldNumber = 4,
    kMigrationStrategyFieldNumber = 7,
    kAdaptiveMigrationEnabledFieldNumber = 8,
  };
  // map<string, string> compatibility_notes = 3;
  int compatibility_notes_size() const;
  private:
  int _internal_compatibility_notes_size() const;

  public:
  void clear_compatibility_notes() ;
  const ::google::protobuf::Map<std::string, std::string>& compatibility_notes() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_compatibility_notes();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_compatibility_notes() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_compatibility_notes();

  public:
  // repeated string affected_components = 5;
  int affected_components_size() const;
  private:
  int _internal_affected_components_size() const;

  public:
  void clear_affected_components() ;
  const std::string& affected_components(int index) const;
  std::string* mutable_affected_components(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_affected_components(int index, Arg_&& value, Args_... args);
  std::string* add_affected_components();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_affected_components(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& affected_components() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_affected_components();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_affected_components() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_affected_components();

  public:
  // map<string, string> migration_metadata = 6;
  int migration_metadata_size() const;
  private:
  int _internal_migration_metadata_size() const;

  public:
  void clear_migration_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& migration_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_migration_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_migration_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_migration_metadata();

  public:
  // string target_version = 1;
  void clear_target_version() ;
  const std::string& target_version() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_target_version(Arg_&& arg, Args_... args);
  std::string* mutable_target_version();
  PROTOBUF_NODISCARD std::string* release_target_version();
  void set_allocated_target_version(std::string* value);

  private:
  const std::string& _internal_target_version() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_target_version(
      const std::string& value);
  std::string* _internal_mutable_target_version();

  public:
  // string migration_status = 2;
  void clear_migration_status() ;
  const std::string& migration_status() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_migration_status(Arg_&& arg, Args_... args);
  std::string* mutable_migration_status();
  PROTOBUF_NODISCARD std::string* release_migration_status();
  void set_allocated_migration_status(std::string* value);

  private:
  const std::string& _internal_migration_status() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_migration_status(
      const std::string& value);
  std::string* _internal_mutable_migration_status();

  public:
  // string last_tested = 4;
  void clear_last_tested() ;
  const std::string& last_tested() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_last_tested(Arg_&& arg, Args_... args);
  std::string* mutable_last_tested();
  PROTOBUF_NODISCARD std::string* release_last_tested();
  void set_allocated_last_tested(std::string* value);

  private:
  const std::string& _internal_last_tested() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_last_tested(
      const std::string& value);
  std::string* _internal_mutable_last_tested();

  public:
  // string migration_strategy = 7;
  void clear_migration_strategy() ;
  const std::string& migration_strategy() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_migration_strategy(Arg_&& arg, Args_... args);
  std::string* mutable_migration_strategy();
  PROTOBUF_NODISCARD std::string* release_migration_strategy();
  void set_allocated_migration_strategy(std::string* value);

  private:
  const std::string& _internal_migration_strategy() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_migration_strategy(
      const std::string& value);
  std::string* _internal_mutable_migration_strategy();

  public:
  // bool adaptive_migration_enabled = 8;
  void clear_adaptive_migration_enabled() ;
  bool adaptive_migration_enabled() const;
  void set_adaptive_migration_enabled(bool value);

  private:
  bool _internal_adaptive_migration_enabled() const;
  void _internal_set_adaptive_migration_enabled(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.seed_dot_seigr.Compatibility)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 2,
      166, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Compatibility& from_msg);
    ::google::protobuf::internal::MapField<Compatibility_CompatibilityNotesEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        compatibility_notes_;
    ::google::protobuf::RepeatedPtrField<std::string> affected_components_;
    ::google::protobuf::internal::MapField<Compatibility_MigrationMetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        migration_metadata_;
    ::google::protobuf::internal::ArenaStringPtr target_version_;
    ::google::protobuf::internal::ArenaStringPtr migration_status_;
    ::google::protobuf::internal::ArenaStringPtr last_tested_;
    ::google::protobuf::internal::ArenaStringPtr migration_strategy_;
    bool adaptive_migration_enabled_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seed_5fdot_5fseigr_2eproto;
};
// -------------------------------------------------------------------

class SeedDotSeigr final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.seed_dot_seigr.SeedDotSeigr) */ {
 public:
  inline SeedDotSeigr() : SeedDotSeigr(nullptr) {}
  ~SeedDotSeigr() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SeedDotSeigr* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SeedDotSeigr));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SeedDotSeigr(
      ::google::protobuf::internal::ConstantInitialized);

  inline SeedDotSeigr(const SeedDotSeigr& from) : SeedDotSeigr(nullptr, from) {}
  inline SeedDotSeigr(SeedDotSeigr&& from) noexcept
      : SeedDotSeigr(nullptr, std::move(from)) {}
  inline SeedDotSeigr& operator=(const SeedDotSeigr& from) {
    CopyFrom(from);
    return *this;
  }
  inline SeedDotSeigr& operator=(SeedDotSeigr&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SeedDotSeigr& default_instance() {
    return *internal_default_instance();
  }
  static inline const SeedDotSeigr* internal_default_instance() {
    return reinterpret_cast<const SeedDotSeigr*>(
        &_SeedDotSeigr_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(SeedDotSeigr& a, SeedDotSeigr& b) { a.Swap(&b); }
  inline void Swap(SeedDotSeigr* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SeedDotSeigr* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SeedDotSeigr* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SeedDotSeigr>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SeedDotSeigr& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SeedDotSeigr& from) { SeedDotSeigr::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SeedDotSeigr* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.seed_dot_seigr.SeedDotSeigr"; }

 protected:
  explicit SeedDotSeigr(::google::protobuf::Arena* arena);
  SeedDotSeigr(::google::protobuf::Arena* arena, const SeedDotSeigr& from);
  SeedDotSeigr(::google::protobuf::Arena* arena, SeedDotSeigr&& from) noexcept
      : SeedDotSeigr(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSegmentsFieldNumber = 6,
    kConnectedClustersFieldNumber = 7,
    kLineageEntriesFieldNumber = 8,
    kTemporalLayersFieldNumber = 9,
    kAccessPermissionsFieldNumber = 11,
    kIntegrityHistoryFieldNumber = 15,
    kPipelineStagesFieldNumber = 18,
    kOperationLogsFieldNumber = 19,
    kCompatibilityHistoryFieldNumber = 21,
    kCustomDataFieldNumber = 22,
    kMetadataFieldNumber = 23,
    kMonitoringMetricsFieldNumber = 25,
    kRootHashFieldNumber = 1,
    kSeedHashFieldNumber = 2,
    kCreationTimestampFieldNumber = 3,
    kVersionFieldNumber = 4,
    kDescriptionFieldNumber = 5,
    kLastVerifiedFieldNumber = 14,
    kStateUpdatedAtFieldNumber = 17,
    kAclFieldNumber = 10,
    kIntegrityChecksumDataFieldNumber = 12,
    kReplicationStatusFieldNumber = 20,
    kIntegrityStatusFieldNumber = 13,
    kStateFieldNumber = 16,
    kLastPingFieldNumber = 24,
  };
  // repeated .seigr.segment_metadata.SegmentMetadata segments = 6;
  int segments_size() const;
  private:
  int _internal_segments_size() const;

  public:
  void clear_segments() ;
  ::seigr::segment_metadata::SegmentMetadata* mutable_segments(int index);
  ::google::protobuf::RepeatedPtrField<::seigr::segment_metadata::SegmentMetadata>* mutable_segments();

  private:
  const ::google::protobuf::RepeatedPtrField<::seigr::segment_metadata::SegmentMetadata>& _internal_segments() const;
  ::google::protobuf::RepeatedPtrField<::seigr::segment_metadata::SegmentMetadata>* _internal_mutable_segments();
  public:
  const ::seigr::segment_metadata::SegmentMetadata& segments(int index) const;
  ::seigr::segment_metadata::SegmentMetadata* add_segments();
  const ::google::protobuf::RepeatedPtrField<::seigr::segment_metadata::SegmentMetadata>& segments() const;
  // repeated string connected_clusters = 7;
  int connected_clusters_size() const;
  private:
  int _internal_connected_clusters_size() const;

  public:
  void clear_connected_clusters() ;
  const std::string& connected_clusters(int index) const;
  std::string* mutable_connected_clusters(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_connected_clusters(int index, Arg_&& value, Args_... args);
  std::string* add_connected_clusters();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_connected_clusters(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& connected_clusters() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_connected_clusters();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_connected_clusters() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_connected_clusters();

  public:
  // repeated .seigr.lineage.LineageEntry lineage_entries = 8;
  int lineage_entries_size() const;
  private:
  int _internal_lineage_entries_size() const;

  public:
  void clear_lineage_entries() ;
  ::seigr::lineage::LineageEntry* mutable_lineage_entries(int index);
  ::google::protobuf::RepeatedPtrField<::seigr::lineage::LineageEntry>* mutable_lineage_entries();

  private:
  const ::google::protobuf::RepeatedPtrField<::seigr::lineage::LineageEntry>& _internal_lineage_entries() const;
  ::google::protobuf::RepeatedPtrField<::seigr::lineage::LineageEntry>* _internal_mutable_lineage_entries();
  public:
  const ::seigr::lineage::LineageEntry& lineage_entries(int index) const;
  ::seigr::lineage::LineageEntry* add_lineage_entries();
  const ::google::protobuf::RepeatedPtrField<::seigr::lineage::LineageEntry>& lineage_entries() const;
  // repeated .seigr.lineage.TemporalLayer temporal_layers = 9;
  int temporal_layers_size() const;
  private:
  int _internal_temporal_layers_size() const;

  public:
  void clear_temporal_layers() ;
  ::seigr::lineage::TemporalLayer* mutable_temporal_layers(int index);
  ::google::protobuf::RepeatedPtrField<::seigr::lineage::TemporalLayer>* mutable_temporal_layers();

  private:
  const ::google::protobuf::RepeatedPtrField<::seigr::lineage::TemporalLayer>& _internal_temporal_layers() const;
  ::google::protobuf::RepeatedPtrField<::seigr::lineage::TemporalLayer>* _internal_mutable_temporal_layers();
  public:
  const ::seigr::lineage::TemporalLayer& temporal_layers(int index) const;
  ::seigr::lineage::TemporalLayer* add_temporal_layers();
  const ::google::protobuf::RepeatedPtrField<::seigr::lineage::TemporalLayer>& temporal_layers() const;
  // repeated string access_permissions = 11;
  int access_permissions_size() const;
  private:
  int _internal_access_permissions_size() const;

  public:
  void clear_access_permissions() ;
  const std::string& access_permissions(int index) const;
  std::string* mutable_access_permissions(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_access_permissions(int index, Arg_&& value, Args_... args);
  std::string* add_access_permissions();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_access_permissions(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& access_permissions() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_access_permissions();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_access_permissions() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_access_permissions();

  public:
  // repeated .seigr.seed_dot_seigr.IntegrityVerification integrity_history = 15;
  int integrity_history_size() const;
  private:
  int _internal_integrity_history_size() const;

  public:
  void clear_integrity_history() ;
  ::seigr::seed_dot_seigr::IntegrityVerification* mutable_integrity_history(int index);
  ::google::protobuf::RepeatedPtrField<::seigr::seed_dot_seigr::IntegrityVerification>* mutable_integrity_history();

  private:
  const ::google::protobuf::RepeatedPtrField<::seigr::seed_dot_seigr::IntegrityVerification>& _internal_integrity_history() const;
  ::google::protobuf::RepeatedPtrField<::seigr::seed_dot_seigr::IntegrityVerification>* _internal_mutable_integrity_history();
  public:
  const ::seigr::seed_dot_seigr::IntegrityVerification& integrity_history(int index) const;
  ::seigr::seed_dot_seigr::IntegrityVerification* add_integrity_history();
  const ::google::protobuf::RepeatedPtrField<::seigr::seed_dot_seigr::IntegrityVerification>& integrity_history() const;
  // repeated .seigr.pipeline.PipelineStage pipeline_stages = 18;
  int pipeline_stages_size() const;
  private:
  int _internal_pipeline_stages_size() const;

  public:
  void clear_pipeline_stages() ;
  ::seigr::pipeline::PipelineStage* mutable_pipeline_stages(int index);
  ::google::protobuf::RepeatedPtrField<::seigr::pipeline::PipelineStage>* mutable_pipeline_stages();

  private:
  const ::google::protobuf::RepeatedPtrField<::seigr::pipeline::PipelineStage>& _internal_pipeline_stages() const;
  ::google::protobuf::RepeatedPtrField<::seigr::pipeline::PipelineStage>* _internal_mutable_pipeline_stages();
  public:
  const ::seigr::pipeline::PipelineStage& pipeline_stages(int index) const;
  ::seigr::pipeline::PipelineStage* add_pipeline_stages();
  const ::google::protobuf::RepeatedPtrField<::seigr::pipeline::PipelineStage>& pipeline_stages() const;
  // repeated .seigr.pipeline.OperationLog operation_logs = 19;
  int operation_logs_size() const;
  private:
  int _internal_operation_logs_size() const;

  public:
  void clear_operation_logs() ;
  ::seigr::pipeline::OperationLog* mutable_operation_logs(int index);
  ::google::protobuf::RepeatedPtrField<::seigr::pipeline::OperationLog>* mutable_operation_logs();

  private:
  const ::google::protobuf::RepeatedPtrField<::seigr::pipeline::OperationLog>& _internal_operation_logs() const;
  ::google::protobuf::RepeatedPtrField<::seigr::pipeline::OperationLog>* _internal_mutable_operation_logs();
  public:
  const ::seigr::pipeline::OperationLog& operation_logs(int index) const;
  ::seigr::pipeline::OperationLog* add_operation_logs();
  const ::google::protobuf::RepeatedPtrField<::seigr::pipeline::OperationLog>& operation_logs() const;
  // repeated .seigr.seed_dot_seigr.Compatibility compatibility_history = 21;
  int compatibility_history_size() const;
  private:
  int _internal_compatibility_history_size() const;

  public:
  void clear_compatibility_history() ;
  ::seigr::seed_dot_seigr::Compatibility* mutable_compatibility_history(int index);
  ::google::protobuf::RepeatedPtrField<::seigr::seed_dot_seigr::Compatibility>* mutable_compatibility_history();

  private:
  const ::google::protobuf::RepeatedPtrField<::seigr::seed_dot_seigr::Compatibility>& _internal_compatibility_history() const;
  ::google::protobuf::RepeatedPtrField<::seigr::seed_dot_seigr::Compatibility>* _internal_mutable_compatibility_history();
  public:
  const ::seigr::seed_dot_seigr::Compatibility& compatibility_history(int index) const;
  ::seigr::seed_dot_seigr::Compatibility* add_compatibility_history();
  const ::google::protobuf::RepeatedPtrField<::seigr::seed_dot_seigr::Compatibility>& compatibility_history() const;
  // map<string, bytes> custom_data = 22;
  int custom_data_size() const;
  private:
  int _internal_custom_data_size() const;

  public:
  void clear_custom_data() ;
  const ::google::protobuf::Map<std::string, std::string>& custom_data() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_custom_data();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_custom_data() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_custom_data();

  public:
  // map<string, string> metadata = 23;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // map<string, string> monitoring_metrics = 25;
  int monitoring_metrics_size() const;
  private:
  int _internal_monitoring_metrics_size() const;

  public:
  void clear_monitoring_metrics() ;
  const ::google::protobuf::Map<std::string, std::string>& monitoring_metrics() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_monitoring_metrics();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_monitoring_metrics() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_monitoring_metrics();

  public:
  // string root_hash = 1;
  void clear_root_hash() ;
  const std::string& root_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_root_hash(Arg_&& arg, Args_... args);
  std::string* mutable_root_hash();
  PROTOBUF_NODISCARD std::string* release_root_hash();
  void set_allocated_root_hash(std::string* value);

  private:
  const std::string& _internal_root_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_root_hash(
      const std::string& value);
  std::string* _internal_mutable_root_hash();

  public:
  // string seed_hash = 2;
  void clear_seed_hash() ;
  const std::string& seed_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_seed_hash(Arg_&& arg, Args_... args);
  std::string* mutable_seed_hash();
  PROTOBUF_NODISCARD std::string* release_seed_hash();
  void set_allocated_seed_hash(std::string* value);

  private:
  const std::string& _internal_seed_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_seed_hash(
      const std::string& value);
  std::string* _internal_mutable_seed_hash();

  public:
  // string creation_timestamp = 3;
  void clear_creation_timestamp() ;
  const std::string& creation_timestamp() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_creation_timestamp(Arg_&& arg, Args_... args);
  std::string* mutable_creation_timestamp();
  PROTOBUF_NODISCARD std::string* release_creation_timestamp();
  void set_allocated_creation_timestamp(std::string* value);

  private:
  const std::string& _internal_creation_timestamp() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_creation_timestamp(
      const std::string& value);
  std::string* _internal_mutable_creation_timestamp();

  public:
  // string version = 4;
  void clear_version() ;
  const std::string& version() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_version(Arg_&& arg, Args_... args);
  std::string* mutable_version();
  PROTOBUF_NODISCARD std::string* release_version();
  void set_allocated_version(std::string* value);

  private:
  const std::string& _internal_version() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_version(
      const std::string& value);
  std::string* _internal_mutable_version();

  public:
  // string description = 5;
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // string last_verified = 14;
  void clear_last_verified() ;
  const std::string& last_verified() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_last_verified(Arg_&& arg, Args_... args);
  std::string* mutable_last_verified();
  PROTOBUF_NODISCARD std::string* release_last_verified();
  void set_allocated_last_verified(std::string* value);

  private:
  const std::string& _internal_last_verified() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_last_verified(
      const std::string& value);
  std::string* _internal_mutable_last_verified();

  public:
  // string state_updated_at = 17;
  void clear_state_updated_at() ;
  const std::string& state_updated_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_state_updated_at(Arg_&& arg, Args_... args);
  std::string* mutable_state_updated_at();
  PROTOBUF_NODISCARD std::string* release_state_updated_at();
  void set_allocated_state_updated_at(std::string* value);

  private:
  const std::string& _internal_state_updated_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_state_updated_at(
      const std::string& value);
  std::string* _internal_mutable_state_updated_at();

  public:
  // .seigr.access_control.AccessControlList acl = 10;
  bool has_acl() const;
  void clear_acl() ;
  const ::seigr::access_control::AccessControlList& acl() const;
  PROTOBUF_NODISCARD ::seigr::access_control::AccessControlList* release_acl();
  ::seigr::access_control::AccessControlList* mutable_acl();
  void set_allocated_acl(::seigr::access_control::AccessControlList* value);
  void unsafe_arena_set_allocated_acl(::seigr::access_control::AccessControlList* value);
  ::seigr::access_control::AccessControlList* unsafe_arena_release_acl();

  private:
  const ::seigr::access_control::AccessControlList& _internal_acl() const;
  ::seigr::access_control::AccessControlList* _internal_mutable_acl();

  public:
  // .seigr.hashing.HashData integrity_checksum_data = 12;
  bool has_integrity_checksum_data() const;
  void clear_integrity_checksum_data() ;
  const ::seigr::hashing::HashData& integrity_checksum_data() const;
  PROTOBUF_NODISCARD ::seigr::hashing::HashData* release_integrity_checksum_data();
  ::seigr::hashing::HashData* mutable_integrity_checksum_data();
  void set_allocated_integrity_checksum_data(::seigr::hashing::HashData* value);
  void unsafe_arena_set_allocated_integrity_checksum_data(::seigr::hashing::HashData* value);
  ::seigr::hashing::HashData* unsafe_arena_release_integrity_checksum_data();

  private:
  const ::seigr::hashing::HashData& _internal_integrity_checksum_data() const;
  ::seigr::hashing::HashData* _internal_mutable_integrity_checksum_data();

  public:
  // .seigr.replication.ReplicationStatus replication_status = 20;
  bool has_replication_status() const;
  void clear_replication_status() ;
  const ::seigr::replication::ReplicationStatus& replication_status() const;
  PROTOBUF_NODISCARD ::seigr::replication::ReplicationStatus* release_replication_status();
  ::seigr::replication::ReplicationStatus* mutable_replication_status();
  void set_allocated_replication_status(::seigr::replication::ReplicationStatus* value);
  void unsafe_arena_set_allocated_replication_status(::seigr::replication::ReplicationStatus* value);
  ::seigr::replication::ReplicationStatus* unsafe_arena_release_replication_status();

  private:
  const ::seigr::replication::ReplicationStatus& _internal_replication_status() const;
  ::seigr::replication::ReplicationStatus* _internal_mutable_replication_status();

  public:
  // .seigr.hashing.VerificationStatus integrity_status = 13;
  void clear_integrity_status() ;
  ::seigr::hashing::VerificationStatus integrity_status() const;
  void set_integrity_status(::seigr::hashing::VerificationStatus value);

  private:
  ::seigr::hashing::VerificationStatus _internal_integrity_status() const;
  void _internal_set_integrity_status(::seigr::hashing::VerificationStatus value);

  public:
  // .seigr.seed_dot_seigr.SeedClusterState state = 16;
  void clear_state() ;
  ::seigr::seed_dot_seigr::SeedClusterState state() const;
  void set_state(::seigr::seed_dot_seigr::SeedClusterState value);

  private:
  ::seigr::seed_dot_seigr::SeedClusterState _internal_state() const;
  void _internal_set_state(::seigr::seed_dot_seigr::SeedClusterState value);

  public:
  // int64 last_ping = 24;
  void clear_last_ping() ;
  ::int64_t last_ping() const;
  void set_last_ping(::int64_t value);

  private:
  ::int64_t _internal_last_ping() const;
  void _internal_set_last_ping(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.seed_dot_seigr.SeedDotSeigr)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 25, 13,
      222, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SeedDotSeigr& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::seigr::segment_metadata::SegmentMetadata > segments_;
    ::google::protobuf::RepeatedPtrField<std::string> connected_clusters_;
    ::google::protobuf::RepeatedPtrField< ::seigr::lineage::LineageEntry > lineage_entries_;
    ::google::protobuf::RepeatedPtrField< ::seigr::lineage::TemporalLayer > temporal_layers_;
    ::google::protobuf::RepeatedPtrField<std::string> access_permissions_;
    ::google::protobuf::RepeatedPtrField< ::seigr::seed_dot_seigr::IntegrityVerification > integrity_history_;
    ::google::protobuf::RepeatedPtrField< ::seigr::pipeline::PipelineStage > pipeline_stages_;
    ::google::protobuf::RepeatedPtrField< ::seigr::pipeline::OperationLog > operation_logs_;
    ::google::protobuf::RepeatedPtrField< ::seigr::seed_dot_seigr::Compatibility > compatibility_history_;
    ::google::protobuf::internal::MapField<SeedDotSeigr_CustomDataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES>
        custom_data_;
    ::google::protobuf::internal::MapField<SeedDotSeigr_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::internal::MapField<SeedDotSeigr_MonitoringMetricsEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        monitoring_metrics_;
    ::google::protobuf::internal::ArenaStringPtr root_hash_;
    ::google::protobuf::internal::ArenaStringPtr seed_hash_;
    ::google::protobuf::internal::ArenaStringPtr creation_timestamp_;
    ::google::protobuf::internal::ArenaStringPtr version_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::internal::ArenaStringPtr last_verified_;
    ::google::protobuf::internal::ArenaStringPtr state_updated_at_;
    ::seigr::access_control::AccessControlList* acl_;
    ::seigr::hashing::HashData* integrity_checksum_data_;
    ::seigr::replication::ReplicationStatus* replication_status_;
    int integrity_status_;
    int state_;
    ::int64_t last_ping_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seed_5fdot_5fseigr_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SeedDotSeigr

// string root_hash = 1;
inline void SeedDotSeigr::clear_root_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.root_hash_.ClearToEmpty();
}
inline const std::string& SeedDotSeigr::root_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.SeedDotSeigr.root_hash)
  return _internal_root_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SeedDotSeigr::set_root_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.root_hash_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.seed_dot_seigr.SeedDotSeigr.root_hash)
}
inline std::string* SeedDotSeigr::mutable_root_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_root_hash();
  // @@protoc_insertion_point(field_mutable:seigr.seed_dot_seigr.SeedDotSeigr.root_hash)
  return _s;
}
inline const std::string& SeedDotSeigr::_internal_root_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.root_hash_.Get();
}
inline void SeedDotSeigr::_internal_set_root_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.root_hash_.Set(value, GetArena());
}
inline std::string* SeedDotSeigr::_internal_mutable_root_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.root_hash_.Mutable( GetArena());
}
inline std::string* SeedDotSeigr::release_root_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.seed_dot_seigr.SeedDotSeigr.root_hash)
  return _impl_.root_hash_.Release();
}
inline void SeedDotSeigr::set_allocated_root_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.root_hash_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.root_hash_.IsDefault()) {
    _impl_.root_hash_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.seed_dot_seigr.SeedDotSeigr.root_hash)
}

// string seed_hash = 2;
inline void SeedDotSeigr::clear_seed_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seed_hash_.ClearToEmpty();
}
inline const std::string& SeedDotSeigr::seed_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.SeedDotSeigr.seed_hash)
  return _internal_seed_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SeedDotSeigr::set_seed_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seed_hash_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.seed_dot_seigr.SeedDotSeigr.seed_hash)
}
inline std::string* SeedDotSeigr::mutable_seed_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_seed_hash();
  // @@protoc_insertion_point(field_mutable:seigr.seed_dot_seigr.SeedDotSeigr.seed_hash)
  return _s;
}
inline const std::string& SeedDotSeigr::_internal_seed_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.seed_hash_.Get();
}
inline void SeedDotSeigr::_internal_set_seed_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seed_hash_.Set(value, GetArena());
}
inline std::string* SeedDotSeigr::_internal_mutable_seed_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.seed_hash_.Mutable( GetArena());
}
inline std::string* SeedDotSeigr::release_seed_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.seed_dot_seigr.SeedDotSeigr.seed_hash)
  return _impl_.seed_hash_.Release();
}
inline void SeedDotSeigr::set_allocated_seed_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seed_hash_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.seed_hash_.IsDefault()) {
    _impl_.seed_hash_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.seed_dot_seigr.SeedDotSeigr.seed_hash)
}

// string creation_timestamp = 3;
inline void SeedDotSeigr::clear_creation_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creation_timestamp_.ClearToEmpty();
}
inline const std::string& SeedDotSeigr::creation_timestamp() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.SeedDotSeigr.creation_timestamp)
  return _internal_creation_timestamp();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SeedDotSeigr::set_creation_timestamp(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creation_timestamp_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.seed_dot_seigr.SeedDotSeigr.creation_timestamp)
}
inline std::string* SeedDotSeigr::mutable_creation_timestamp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_creation_timestamp();
  // @@protoc_insertion_point(field_mutable:seigr.seed_dot_seigr.SeedDotSeigr.creation_timestamp)
  return _s;
}
inline const std::string& SeedDotSeigr::_internal_creation_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.creation_timestamp_.Get();
}
inline void SeedDotSeigr::_internal_set_creation_timestamp(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creation_timestamp_.Set(value, GetArena());
}
inline std::string* SeedDotSeigr::_internal_mutable_creation_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.creation_timestamp_.Mutable( GetArena());
}
inline std::string* SeedDotSeigr::release_creation_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.seed_dot_seigr.SeedDotSeigr.creation_timestamp)
  return _impl_.creation_timestamp_.Release();
}
inline void SeedDotSeigr::set_allocated_creation_timestamp(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creation_timestamp_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.creation_timestamp_.IsDefault()) {
    _impl_.creation_timestamp_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.seed_dot_seigr.SeedDotSeigr.creation_timestamp)
}

// string version = 4;
inline void SeedDotSeigr::clear_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.ClearToEmpty();
}
inline const std::string& SeedDotSeigr::version() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.SeedDotSeigr.version)
  return _internal_version();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SeedDotSeigr::set_version(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.seed_dot_seigr.SeedDotSeigr.version)
}
inline std::string* SeedDotSeigr::mutable_version() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_version();
  // @@protoc_insertion_point(field_mutable:seigr.seed_dot_seigr.SeedDotSeigr.version)
  return _s;
}
inline const std::string& SeedDotSeigr::_internal_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.version_.Get();
}
inline void SeedDotSeigr::_internal_set_version(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.Set(value, GetArena());
}
inline std::string* SeedDotSeigr::_internal_mutable_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.version_.Mutable( GetArena());
}
inline std::string* SeedDotSeigr::release_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.seed_dot_seigr.SeedDotSeigr.version)
  return _impl_.version_.Release();
}
inline void SeedDotSeigr::set_allocated_version(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.version_.IsDefault()) {
    _impl_.version_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.seed_dot_seigr.SeedDotSeigr.version)
}

// string description = 5;
inline void SeedDotSeigr::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
}
inline const std::string& SeedDotSeigr::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.SeedDotSeigr.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SeedDotSeigr::set_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.seed_dot_seigr.SeedDotSeigr.description)
}
inline std::string* SeedDotSeigr::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:seigr.seed_dot_seigr.SeedDotSeigr.description)
  return _s;
}
inline const std::string& SeedDotSeigr::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void SeedDotSeigr::_internal_set_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(value, GetArena());
}
inline std::string* SeedDotSeigr::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* SeedDotSeigr::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.seed_dot_seigr.SeedDotSeigr.description)
  return _impl_.description_.Release();
}
inline void SeedDotSeigr::set_allocated_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.seed_dot_seigr.SeedDotSeigr.description)
}

// repeated .seigr.segment_metadata.SegmentMetadata segments = 6;
inline int SeedDotSeigr::_internal_segments_size() const {
  return _internal_segments().size();
}
inline int SeedDotSeigr::segments_size() const {
  return _internal_segments_size();
}
inline ::seigr::segment_metadata::SegmentMetadata* SeedDotSeigr::mutable_segments(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.seed_dot_seigr.SeedDotSeigr.segments)
  return _internal_mutable_segments()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seigr::segment_metadata::SegmentMetadata>* SeedDotSeigr::mutable_segments()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.seed_dot_seigr.SeedDotSeigr.segments)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_segments();
}
inline const ::seigr::segment_metadata::SegmentMetadata& SeedDotSeigr::segments(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.SeedDotSeigr.segments)
  return _internal_segments().Get(index);
}
inline ::seigr::segment_metadata::SegmentMetadata* SeedDotSeigr::add_segments() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seigr::segment_metadata::SegmentMetadata* _add = _internal_mutable_segments()->Add();
  // @@protoc_insertion_point(field_add:seigr.seed_dot_seigr.SeedDotSeigr.segments)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seigr::segment_metadata::SegmentMetadata>& SeedDotSeigr::segments() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.seed_dot_seigr.SeedDotSeigr.segments)
  return _internal_segments();
}
inline const ::google::protobuf::RepeatedPtrField<::seigr::segment_metadata::SegmentMetadata>&
SeedDotSeigr::_internal_segments() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.segments_;
}
inline ::google::protobuf::RepeatedPtrField<::seigr::segment_metadata::SegmentMetadata>*
SeedDotSeigr::_internal_mutable_segments() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.segments_;
}

// repeated string connected_clusters = 7;
inline int SeedDotSeigr::_internal_connected_clusters_size() const {
  return _internal_connected_clusters().size();
}
inline int SeedDotSeigr::connected_clusters_size() const {
  return _internal_connected_clusters_size();
}
inline void SeedDotSeigr::clear_connected_clusters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connected_clusters_.Clear();
}
inline std::string* SeedDotSeigr::add_connected_clusters() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_connected_clusters()->Add();
  // @@protoc_insertion_point(field_add_mutable:seigr.seed_dot_seigr.SeedDotSeigr.connected_clusters)
  return _s;
}
inline const std::string& SeedDotSeigr::connected_clusters(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.SeedDotSeigr.connected_clusters)
  return _internal_connected_clusters().Get(index);
}
inline std::string* SeedDotSeigr::mutable_connected_clusters(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.seed_dot_seigr.SeedDotSeigr.connected_clusters)
  return _internal_mutable_connected_clusters()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void SeedDotSeigr::set_connected_clusters(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_connected_clusters()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:seigr.seed_dot_seigr.SeedDotSeigr.connected_clusters)
}
template <typename Arg_, typename... Args_>
inline void SeedDotSeigr::add_connected_clusters(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_connected_clusters(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seigr.seed_dot_seigr.SeedDotSeigr.connected_clusters)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SeedDotSeigr::connected_clusters() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.seed_dot_seigr.SeedDotSeigr.connected_clusters)
  return _internal_connected_clusters();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SeedDotSeigr::mutable_connected_clusters() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.seed_dot_seigr.SeedDotSeigr.connected_clusters)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_connected_clusters();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SeedDotSeigr::_internal_connected_clusters() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.connected_clusters_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SeedDotSeigr::_internal_mutable_connected_clusters() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.connected_clusters_;
}

// repeated .seigr.lineage.LineageEntry lineage_entries = 8;
inline int SeedDotSeigr::_internal_lineage_entries_size() const {
  return _internal_lineage_entries().size();
}
inline int SeedDotSeigr::lineage_entries_size() const {
  return _internal_lineage_entries_size();
}
inline ::seigr::lineage::LineageEntry* SeedDotSeigr::mutable_lineage_entries(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.seed_dot_seigr.SeedDotSeigr.lineage_entries)
  return _internal_mutable_lineage_entries()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seigr::lineage::LineageEntry>* SeedDotSeigr::mutable_lineage_entries()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.seed_dot_seigr.SeedDotSeigr.lineage_entries)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_lineage_entries();
}
inline const ::seigr::lineage::LineageEntry& SeedDotSeigr::lineage_entries(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.SeedDotSeigr.lineage_entries)
  return _internal_lineage_entries().Get(index);
}
inline ::seigr::lineage::LineageEntry* SeedDotSeigr::add_lineage_entries() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seigr::lineage::LineageEntry* _add = _internal_mutable_lineage_entries()->Add();
  // @@protoc_insertion_point(field_add:seigr.seed_dot_seigr.SeedDotSeigr.lineage_entries)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seigr::lineage::LineageEntry>& SeedDotSeigr::lineage_entries() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.seed_dot_seigr.SeedDotSeigr.lineage_entries)
  return _internal_lineage_entries();
}
inline const ::google::protobuf::RepeatedPtrField<::seigr::lineage::LineageEntry>&
SeedDotSeigr::_internal_lineage_entries() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lineage_entries_;
}
inline ::google::protobuf::RepeatedPtrField<::seigr::lineage::LineageEntry>*
SeedDotSeigr::_internal_mutable_lineage_entries() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.lineage_entries_;
}

// repeated .seigr.lineage.TemporalLayer temporal_layers = 9;
inline int SeedDotSeigr::_internal_temporal_layers_size() const {
  return _internal_temporal_layers().size();
}
inline int SeedDotSeigr::temporal_layers_size() const {
  return _internal_temporal_layers_size();
}
inline ::seigr::lineage::TemporalLayer* SeedDotSeigr::mutable_temporal_layers(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.seed_dot_seigr.SeedDotSeigr.temporal_layers)
  return _internal_mutable_temporal_layers()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seigr::lineage::TemporalLayer>* SeedDotSeigr::mutable_temporal_layers()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.seed_dot_seigr.SeedDotSeigr.temporal_layers)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_temporal_layers();
}
inline const ::seigr::lineage::TemporalLayer& SeedDotSeigr::temporal_layers(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.SeedDotSeigr.temporal_layers)
  return _internal_temporal_layers().Get(index);
}
inline ::seigr::lineage::TemporalLayer* SeedDotSeigr::add_temporal_layers() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seigr::lineage::TemporalLayer* _add = _internal_mutable_temporal_layers()->Add();
  // @@protoc_insertion_point(field_add:seigr.seed_dot_seigr.SeedDotSeigr.temporal_layers)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seigr::lineage::TemporalLayer>& SeedDotSeigr::temporal_layers() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.seed_dot_seigr.SeedDotSeigr.temporal_layers)
  return _internal_temporal_layers();
}
inline const ::google::protobuf::RepeatedPtrField<::seigr::lineage::TemporalLayer>&
SeedDotSeigr::_internal_temporal_layers() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.temporal_layers_;
}
inline ::google::protobuf::RepeatedPtrField<::seigr::lineage::TemporalLayer>*
SeedDotSeigr::_internal_mutable_temporal_layers() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.temporal_layers_;
}

// .seigr.access_control.AccessControlList acl = 10;
inline bool SeedDotSeigr::has_acl() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.acl_ != nullptr);
  return value;
}
inline const ::seigr::access_control::AccessControlList& SeedDotSeigr::_internal_acl() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seigr::access_control::AccessControlList* p = _impl_.acl_;
  return p != nullptr ? *p : reinterpret_cast<const ::seigr::access_control::AccessControlList&>(::seigr::access_control::_AccessControlList_default_instance_);
}
inline const ::seigr::access_control::AccessControlList& SeedDotSeigr::acl() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.SeedDotSeigr.acl)
  return _internal_acl();
}
inline void SeedDotSeigr::unsafe_arena_set_allocated_acl(::seigr::access_control::AccessControlList* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.acl_);
  }
  _impl_.acl_ = reinterpret_cast<::seigr::access_control::AccessControlList*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seigr.seed_dot_seigr.SeedDotSeigr.acl)
}
inline ::seigr::access_control::AccessControlList* SeedDotSeigr::release_acl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seigr::access_control::AccessControlList* released = _impl_.acl_;
  _impl_.acl_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seigr::access_control::AccessControlList* SeedDotSeigr::unsafe_arena_release_acl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.seed_dot_seigr.SeedDotSeigr.acl)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seigr::access_control::AccessControlList* temp = _impl_.acl_;
  _impl_.acl_ = nullptr;
  return temp;
}
inline ::seigr::access_control::AccessControlList* SeedDotSeigr::_internal_mutable_acl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.acl_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seigr::access_control::AccessControlList>(GetArena());
    _impl_.acl_ = reinterpret_cast<::seigr::access_control::AccessControlList*>(p);
  }
  return _impl_.acl_;
}
inline ::seigr::access_control::AccessControlList* SeedDotSeigr::mutable_acl() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::seigr::access_control::AccessControlList* _msg = _internal_mutable_acl();
  // @@protoc_insertion_point(field_mutable:seigr.seed_dot_seigr.SeedDotSeigr.acl)
  return _msg;
}
inline void SeedDotSeigr::set_allocated_acl(::seigr::access_control::AccessControlList* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.acl_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.acl_ = reinterpret_cast<::seigr::access_control::AccessControlList*>(value);
  // @@protoc_insertion_point(field_set_allocated:seigr.seed_dot_seigr.SeedDotSeigr.acl)
}

// repeated string access_permissions = 11;
inline int SeedDotSeigr::_internal_access_permissions_size() const {
  return _internal_access_permissions().size();
}
inline int SeedDotSeigr::access_permissions_size() const {
  return _internal_access_permissions_size();
}
inline void SeedDotSeigr::clear_access_permissions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.access_permissions_.Clear();
}
inline std::string* SeedDotSeigr::add_access_permissions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_access_permissions()->Add();
  // @@protoc_insertion_point(field_add_mutable:seigr.seed_dot_seigr.SeedDotSeigr.access_permissions)
  return _s;
}
inline const std::string& SeedDotSeigr::access_permissions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.SeedDotSeigr.access_permissions)
  return _internal_access_permissions().Get(index);
}
inline std::string* SeedDotSeigr::mutable_access_permissions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.seed_dot_seigr.SeedDotSeigr.access_permissions)
  return _internal_mutable_access_permissions()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void SeedDotSeigr::set_access_permissions(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_access_permissions()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:seigr.seed_dot_seigr.SeedDotSeigr.access_permissions)
}
template <typename Arg_, typename... Args_>
inline void SeedDotSeigr::add_access_permissions(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_access_permissions(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seigr.seed_dot_seigr.SeedDotSeigr.access_permissions)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SeedDotSeigr::access_permissions() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.seed_dot_seigr.SeedDotSeigr.access_permissions)
  return _internal_access_permissions();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SeedDotSeigr::mutable_access_permissions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.seed_dot_seigr.SeedDotSeigr.access_permissions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_access_permissions();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SeedDotSeigr::_internal_access_permissions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.access_permissions_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SeedDotSeigr::_internal_mutable_access_permissions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.access_permissions_;
}

// .seigr.hashing.HashData integrity_checksum_data = 12;
inline bool SeedDotSeigr::has_integrity_checksum_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.integrity_checksum_data_ != nullptr);
  return value;
}
inline const ::seigr::hashing::HashData& SeedDotSeigr::_internal_integrity_checksum_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seigr::hashing::HashData* p = _impl_.integrity_checksum_data_;
  return p != nullptr ? *p : reinterpret_cast<const ::seigr::hashing::HashData&>(::seigr::hashing::_HashData_default_instance_);
}
inline const ::seigr::hashing::HashData& SeedDotSeigr::integrity_checksum_data() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.SeedDotSeigr.integrity_checksum_data)
  return _internal_integrity_checksum_data();
}
inline void SeedDotSeigr::unsafe_arena_set_allocated_integrity_checksum_data(::seigr::hashing::HashData* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.integrity_checksum_data_);
  }
  _impl_.integrity_checksum_data_ = reinterpret_cast<::seigr::hashing::HashData*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seigr.seed_dot_seigr.SeedDotSeigr.integrity_checksum_data)
}
inline ::seigr::hashing::HashData* SeedDotSeigr::release_integrity_checksum_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::seigr::hashing::HashData* released = _impl_.integrity_checksum_data_;
  _impl_.integrity_checksum_data_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seigr::hashing::HashData* SeedDotSeigr::unsafe_arena_release_integrity_checksum_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.seed_dot_seigr.SeedDotSeigr.integrity_checksum_data)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::seigr::hashing::HashData* temp = _impl_.integrity_checksum_data_;
  _impl_.integrity_checksum_data_ = nullptr;
  return temp;
}
inline ::seigr::hashing::HashData* SeedDotSeigr::_internal_mutable_integrity_checksum_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.integrity_checksum_data_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seigr::hashing::HashData>(GetArena());
    _impl_.integrity_checksum_data_ = reinterpret_cast<::seigr::hashing::HashData*>(p);
  }
  return _impl_.integrity_checksum_data_;
}
inline ::seigr::hashing::HashData* SeedDotSeigr::mutable_integrity_checksum_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::seigr::hashing::HashData* _msg = _internal_mutable_integrity_checksum_data();
  // @@protoc_insertion_point(field_mutable:seigr.seed_dot_seigr.SeedDotSeigr.integrity_checksum_data)
  return _msg;
}
inline void SeedDotSeigr::set_allocated_integrity_checksum_data(::seigr::hashing::HashData* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.integrity_checksum_data_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.integrity_checksum_data_ = reinterpret_cast<::seigr::hashing::HashData*>(value);
  // @@protoc_insertion_point(field_set_allocated:seigr.seed_dot_seigr.SeedDotSeigr.integrity_checksum_data)
}

// .seigr.hashing.VerificationStatus integrity_status = 13;
inline void SeedDotSeigr::clear_integrity_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.integrity_status_ = 0;
}
inline ::seigr::hashing::VerificationStatus SeedDotSeigr::integrity_status() const {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.SeedDotSeigr.integrity_status)
  return _internal_integrity_status();
}
inline void SeedDotSeigr::set_integrity_status(::seigr::hashing::VerificationStatus value) {
  _internal_set_integrity_status(value);
  // @@protoc_insertion_point(field_set:seigr.seed_dot_seigr.SeedDotSeigr.integrity_status)
}
inline ::seigr::hashing::VerificationStatus SeedDotSeigr::_internal_integrity_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::hashing::VerificationStatus>(_impl_.integrity_status_);
}
inline void SeedDotSeigr::_internal_set_integrity_status(::seigr::hashing::VerificationStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.integrity_status_ = value;
}

// string last_verified = 14;
inline void SeedDotSeigr::clear_last_verified() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_verified_.ClearToEmpty();
}
inline const std::string& SeedDotSeigr::last_verified() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.SeedDotSeigr.last_verified)
  return _internal_last_verified();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SeedDotSeigr::set_last_verified(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_verified_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.seed_dot_seigr.SeedDotSeigr.last_verified)
}
inline std::string* SeedDotSeigr::mutable_last_verified() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_last_verified();
  // @@protoc_insertion_point(field_mutable:seigr.seed_dot_seigr.SeedDotSeigr.last_verified)
  return _s;
}
inline const std::string& SeedDotSeigr::_internal_last_verified() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_verified_.Get();
}
inline void SeedDotSeigr::_internal_set_last_verified(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_verified_.Set(value, GetArena());
}
inline std::string* SeedDotSeigr::_internal_mutable_last_verified() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.last_verified_.Mutable( GetArena());
}
inline std::string* SeedDotSeigr::release_last_verified() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.seed_dot_seigr.SeedDotSeigr.last_verified)
  return _impl_.last_verified_.Release();
}
inline void SeedDotSeigr::set_allocated_last_verified(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_verified_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.last_verified_.IsDefault()) {
    _impl_.last_verified_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.seed_dot_seigr.SeedDotSeigr.last_verified)
}

// repeated .seigr.seed_dot_seigr.IntegrityVerification integrity_history = 15;
inline int SeedDotSeigr::_internal_integrity_history_size() const {
  return _internal_integrity_history().size();
}
inline int SeedDotSeigr::integrity_history_size() const {
  return _internal_integrity_history_size();
}
inline void SeedDotSeigr::clear_integrity_history() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.integrity_history_.Clear();
}
inline ::seigr::seed_dot_seigr::IntegrityVerification* SeedDotSeigr::mutable_integrity_history(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.seed_dot_seigr.SeedDotSeigr.integrity_history)
  return _internal_mutable_integrity_history()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seigr::seed_dot_seigr::IntegrityVerification>* SeedDotSeigr::mutable_integrity_history()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.seed_dot_seigr.SeedDotSeigr.integrity_history)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_integrity_history();
}
inline const ::seigr::seed_dot_seigr::IntegrityVerification& SeedDotSeigr::integrity_history(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.SeedDotSeigr.integrity_history)
  return _internal_integrity_history().Get(index);
}
inline ::seigr::seed_dot_seigr::IntegrityVerification* SeedDotSeigr::add_integrity_history() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seigr::seed_dot_seigr::IntegrityVerification* _add = _internal_mutable_integrity_history()->Add();
  // @@protoc_insertion_point(field_add:seigr.seed_dot_seigr.SeedDotSeigr.integrity_history)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seigr::seed_dot_seigr::IntegrityVerification>& SeedDotSeigr::integrity_history() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.seed_dot_seigr.SeedDotSeigr.integrity_history)
  return _internal_integrity_history();
}
inline const ::google::protobuf::RepeatedPtrField<::seigr::seed_dot_seigr::IntegrityVerification>&
SeedDotSeigr::_internal_integrity_history() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.integrity_history_;
}
inline ::google::protobuf::RepeatedPtrField<::seigr::seed_dot_seigr::IntegrityVerification>*
SeedDotSeigr::_internal_mutable_integrity_history() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.integrity_history_;
}

// .seigr.seed_dot_seigr.SeedClusterState state = 16;
inline void SeedDotSeigr::clear_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_ = 0;
}
inline ::seigr::seed_dot_seigr::SeedClusterState SeedDotSeigr::state() const {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.SeedDotSeigr.state)
  return _internal_state();
}
inline void SeedDotSeigr::set_state(::seigr::seed_dot_seigr::SeedClusterState value) {
  _internal_set_state(value);
  // @@protoc_insertion_point(field_set:seigr.seed_dot_seigr.SeedDotSeigr.state)
}
inline ::seigr::seed_dot_seigr::SeedClusterState SeedDotSeigr::_internal_state() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::seed_dot_seigr::SeedClusterState>(_impl_.state_);
}
inline void SeedDotSeigr::_internal_set_state(::seigr::seed_dot_seigr::SeedClusterState value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_ = value;
}

// string state_updated_at = 17;
inline void SeedDotSeigr::clear_state_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_updated_at_.ClearToEmpty();
}
inline const std::string& SeedDotSeigr::state_updated_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.SeedDotSeigr.state_updated_at)
  return _internal_state_updated_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SeedDotSeigr::set_state_updated_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_updated_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.seed_dot_seigr.SeedDotSeigr.state_updated_at)
}
inline std::string* SeedDotSeigr::mutable_state_updated_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_state_updated_at();
  // @@protoc_insertion_point(field_mutable:seigr.seed_dot_seigr.SeedDotSeigr.state_updated_at)
  return _s;
}
inline const std::string& SeedDotSeigr::_internal_state_updated_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.state_updated_at_.Get();
}
inline void SeedDotSeigr::_internal_set_state_updated_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_updated_at_.Set(value, GetArena());
}
inline std::string* SeedDotSeigr::_internal_mutable_state_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.state_updated_at_.Mutable( GetArena());
}
inline std::string* SeedDotSeigr::release_state_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.seed_dot_seigr.SeedDotSeigr.state_updated_at)
  return _impl_.state_updated_at_.Release();
}
inline void SeedDotSeigr::set_allocated_state_updated_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_updated_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.state_updated_at_.IsDefault()) {
    _impl_.state_updated_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.seed_dot_seigr.SeedDotSeigr.state_updated_at)
}

// repeated .seigr.pipeline.PipelineStage pipeline_stages = 18;
inline int SeedDotSeigr::_internal_pipeline_stages_size() const {
  return _internal_pipeline_stages().size();
}
inline int SeedDotSeigr::pipeline_stages_size() const {
  return _internal_pipeline_stages_size();
}
inline ::seigr::pipeline::PipelineStage* SeedDotSeigr::mutable_pipeline_stages(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.seed_dot_seigr.SeedDotSeigr.pipeline_stages)
  return _internal_mutable_pipeline_stages()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seigr::pipeline::PipelineStage>* SeedDotSeigr::mutable_pipeline_stages()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.seed_dot_seigr.SeedDotSeigr.pipeline_stages)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_pipeline_stages();
}
inline const ::seigr::pipeline::PipelineStage& SeedDotSeigr::pipeline_stages(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.SeedDotSeigr.pipeline_stages)
  return _internal_pipeline_stages().Get(index);
}
inline ::seigr::pipeline::PipelineStage* SeedDotSeigr::add_pipeline_stages() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seigr::pipeline::PipelineStage* _add = _internal_mutable_pipeline_stages()->Add();
  // @@protoc_insertion_point(field_add:seigr.seed_dot_seigr.SeedDotSeigr.pipeline_stages)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seigr::pipeline::PipelineStage>& SeedDotSeigr::pipeline_stages() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.seed_dot_seigr.SeedDotSeigr.pipeline_stages)
  return _internal_pipeline_stages();
}
inline const ::google::protobuf::RepeatedPtrField<::seigr::pipeline::PipelineStage>&
SeedDotSeigr::_internal_pipeline_stages() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pipeline_stages_;
}
inline ::google::protobuf::RepeatedPtrField<::seigr::pipeline::PipelineStage>*
SeedDotSeigr::_internal_mutable_pipeline_stages() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.pipeline_stages_;
}

// repeated .seigr.pipeline.OperationLog operation_logs = 19;
inline int SeedDotSeigr::_internal_operation_logs_size() const {
  return _internal_operation_logs().size();
}
inline int SeedDotSeigr::operation_logs_size() const {
  return _internal_operation_logs_size();
}
inline ::seigr::pipeline::OperationLog* SeedDotSeigr::mutable_operation_logs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.seed_dot_seigr.SeedDotSeigr.operation_logs)
  return _internal_mutable_operation_logs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seigr::pipeline::OperationLog>* SeedDotSeigr::mutable_operation_logs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.seed_dot_seigr.SeedDotSeigr.operation_logs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_operation_logs();
}
inline const ::seigr::pipeline::OperationLog& SeedDotSeigr::operation_logs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.SeedDotSeigr.operation_logs)
  return _internal_operation_logs().Get(index);
}
inline ::seigr::pipeline::OperationLog* SeedDotSeigr::add_operation_logs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seigr::pipeline::OperationLog* _add = _internal_mutable_operation_logs()->Add();
  // @@protoc_insertion_point(field_add:seigr.seed_dot_seigr.SeedDotSeigr.operation_logs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seigr::pipeline::OperationLog>& SeedDotSeigr::operation_logs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.seed_dot_seigr.SeedDotSeigr.operation_logs)
  return _internal_operation_logs();
}
inline const ::google::protobuf::RepeatedPtrField<::seigr::pipeline::OperationLog>&
SeedDotSeigr::_internal_operation_logs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.operation_logs_;
}
inline ::google::protobuf::RepeatedPtrField<::seigr::pipeline::OperationLog>*
SeedDotSeigr::_internal_mutable_operation_logs() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.operation_logs_;
}

// .seigr.replication.ReplicationStatus replication_status = 20;
inline bool SeedDotSeigr::has_replication_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.replication_status_ != nullptr);
  return value;
}
inline const ::seigr::replication::ReplicationStatus& SeedDotSeigr::_internal_replication_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seigr::replication::ReplicationStatus* p = _impl_.replication_status_;
  return p != nullptr ? *p : reinterpret_cast<const ::seigr::replication::ReplicationStatus&>(::seigr::replication::_ReplicationStatus_default_instance_);
}
inline const ::seigr::replication::ReplicationStatus& SeedDotSeigr::replication_status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.SeedDotSeigr.replication_status)
  return _internal_replication_status();
}
inline void SeedDotSeigr::unsafe_arena_set_allocated_replication_status(::seigr::replication::ReplicationStatus* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.replication_status_);
  }
  _impl_.replication_status_ = reinterpret_cast<::seigr::replication::ReplicationStatus*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seigr.seed_dot_seigr.SeedDotSeigr.replication_status)
}
inline ::seigr::replication::ReplicationStatus* SeedDotSeigr::release_replication_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::seigr::replication::ReplicationStatus* released = _impl_.replication_status_;
  _impl_.replication_status_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seigr::replication::ReplicationStatus* SeedDotSeigr::unsafe_arena_release_replication_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.seed_dot_seigr.SeedDotSeigr.replication_status)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::seigr::replication::ReplicationStatus* temp = _impl_.replication_status_;
  _impl_.replication_status_ = nullptr;
  return temp;
}
inline ::seigr::replication::ReplicationStatus* SeedDotSeigr::_internal_mutable_replication_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.replication_status_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seigr::replication::ReplicationStatus>(GetArena());
    _impl_.replication_status_ = reinterpret_cast<::seigr::replication::ReplicationStatus*>(p);
  }
  return _impl_.replication_status_;
}
inline ::seigr::replication::ReplicationStatus* SeedDotSeigr::mutable_replication_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::seigr::replication::ReplicationStatus* _msg = _internal_mutable_replication_status();
  // @@protoc_insertion_point(field_mutable:seigr.seed_dot_seigr.SeedDotSeigr.replication_status)
  return _msg;
}
inline void SeedDotSeigr::set_allocated_replication_status(::seigr::replication::ReplicationStatus* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.replication_status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.replication_status_ = reinterpret_cast<::seigr::replication::ReplicationStatus*>(value);
  // @@protoc_insertion_point(field_set_allocated:seigr.seed_dot_seigr.SeedDotSeigr.replication_status)
}

// repeated .seigr.seed_dot_seigr.Compatibility compatibility_history = 21;
inline int SeedDotSeigr::_internal_compatibility_history_size() const {
  return _internal_compatibility_history().size();
}
inline int SeedDotSeigr::compatibility_history_size() const {
  return _internal_compatibility_history_size();
}
inline void SeedDotSeigr::clear_compatibility_history() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.compatibility_history_.Clear();
}
inline ::seigr::seed_dot_seigr::Compatibility* SeedDotSeigr::mutable_compatibility_history(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.seed_dot_seigr.SeedDotSeigr.compatibility_history)
  return _internal_mutable_compatibility_history()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seigr::seed_dot_seigr::Compatibility>* SeedDotSeigr::mutable_compatibility_history()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.seed_dot_seigr.SeedDotSeigr.compatibility_history)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_compatibility_history();
}
inline const ::seigr::seed_dot_seigr::Compatibility& SeedDotSeigr::compatibility_history(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.SeedDotSeigr.compatibility_history)
  return _internal_compatibility_history().Get(index);
}
inline ::seigr::seed_dot_seigr::Compatibility* SeedDotSeigr::add_compatibility_history() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seigr::seed_dot_seigr::Compatibility* _add = _internal_mutable_compatibility_history()->Add();
  // @@protoc_insertion_point(field_add:seigr.seed_dot_seigr.SeedDotSeigr.compatibility_history)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seigr::seed_dot_seigr::Compatibility>& SeedDotSeigr::compatibility_history() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.seed_dot_seigr.SeedDotSeigr.compatibility_history)
  return _internal_compatibility_history();
}
inline const ::google::protobuf::RepeatedPtrField<::seigr::seed_dot_seigr::Compatibility>&
SeedDotSeigr::_internal_compatibility_history() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.compatibility_history_;
}
inline ::google::protobuf::RepeatedPtrField<::seigr::seed_dot_seigr::Compatibility>*
SeedDotSeigr::_internal_mutable_compatibility_history() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.compatibility_history_;
}

// map<string, bytes> custom_data = 22;
inline int SeedDotSeigr::_internal_custom_data_size() const {
  return _internal_custom_data().size();
}
inline int SeedDotSeigr::custom_data_size() const {
  return _internal_custom_data_size();
}
inline void SeedDotSeigr::clear_custom_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_data_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& SeedDotSeigr::_internal_custom_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.custom_data_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& SeedDotSeigr::custom_data() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.seed_dot_seigr.SeedDotSeigr.custom_data)
  return _internal_custom_data();
}
inline ::google::protobuf::Map<std::string, std::string>* SeedDotSeigr::_internal_mutable_custom_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.custom_data_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* SeedDotSeigr::mutable_custom_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.seed_dot_seigr.SeedDotSeigr.custom_data)
  return _internal_mutable_custom_data();
}

// map<string, string> metadata = 23;
inline int SeedDotSeigr::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int SeedDotSeigr::metadata_size() const {
  return _internal_metadata_size();
}
inline void SeedDotSeigr::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& SeedDotSeigr::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& SeedDotSeigr::metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.seed_dot_seigr.SeedDotSeigr.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* SeedDotSeigr::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* SeedDotSeigr::mutable_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.seed_dot_seigr.SeedDotSeigr.metadata)
  return _internal_mutable_metadata();
}

// int64 last_ping = 24;
inline void SeedDotSeigr::clear_last_ping() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_ping_ = ::int64_t{0};
}
inline ::int64_t SeedDotSeigr::last_ping() const {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.SeedDotSeigr.last_ping)
  return _internal_last_ping();
}
inline void SeedDotSeigr::set_last_ping(::int64_t value) {
  _internal_set_last_ping(value);
  // @@protoc_insertion_point(field_set:seigr.seed_dot_seigr.SeedDotSeigr.last_ping)
}
inline ::int64_t SeedDotSeigr::_internal_last_ping() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_ping_;
}
inline void SeedDotSeigr::_internal_set_last_ping(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_ping_ = value;
}

// map<string, string> monitoring_metrics = 25;
inline int SeedDotSeigr::_internal_monitoring_metrics_size() const {
  return _internal_monitoring_metrics().size();
}
inline int SeedDotSeigr::monitoring_metrics_size() const {
  return _internal_monitoring_metrics_size();
}
inline void SeedDotSeigr::clear_monitoring_metrics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.monitoring_metrics_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& SeedDotSeigr::_internal_monitoring_metrics() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.monitoring_metrics_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& SeedDotSeigr::monitoring_metrics() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.seed_dot_seigr.SeedDotSeigr.monitoring_metrics)
  return _internal_monitoring_metrics();
}
inline ::google::protobuf::Map<std::string, std::string>* SeedDotSeigr::_internal_mutable_monitoring_metrics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.monitoring_metrics_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* SeedDotSeigr::mutable_monitoring_metrics() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.seed_dot_seigr.SeedDotSeigr.monitoring_metrics)
  return _internal_mutable_monitoring_metrics();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// IntegrityVerification

// .seigr.hashing.VerificationStatus status = 1;
inline void IntegrityVerification::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0;
}
inline ::seigr::hashing::VerificationStatus IntegrityVerification::status() const {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.IntegrityVerification.status)
  return _internal_status();
}
inline void IntegrityVerification::set_status(::seigr::hashing::VerificationStatus value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:seigr.seed_dot_seigr.IntegrityVerification.status)
}
inline ::seigr::hashing::VerificationStatus IntegrityVerification::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::hashing::VerificationStatus>(_impl_.status_);
}
inline void IntegrityVerification::_internal_set_status(::seigr::hashing::VerificationStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// string timestamp = 2;
inline void IntegrityVerification::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.ClearToEmpty();
}
inline const std::string& IntegrityVerification::timestamp() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.IntegrityVerification.timestamp)
  return _internal_timestamp();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void IntegrityVerification::set_timestamp(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.seed_dot_seigr.IntegrityVerification.timestamp)
}
inline std::string* IntegrityVerification::mutable_timestamp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_timestamp();
  // @@protoc_insertion_point(field_mutable:seigr.seed_dot_seigr.IntegrityVerification.timestamp)
  return _s;
}
inline const std::string& IntegrityVerification::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_.Get();
}
inline void IntegrityVerification::_internal_set_timestamp(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.Set(value, GetArena());
}
inline std::string* IntegrityVerification::_internal_mutable_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.timestamp_.Mutable( GetArena());
}
inline std::string* IntegrityVerification::release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.seed_dot_seigr.IntegrityVerification.timestamp)
  return _impl_.timestamp_.Release();
}
inline void IntegrityVerification::set_allocated_timestamp(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.timestamp_.IsDefault()) {
    _impl_.timestamp_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.seed_dot_seigr.IntegrityVerification.timestamp)
}

// string verifier_id = 3;
inline void IntegrityVerification::clear_verifier_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.verifier_id_.ClearToEmpty();
}
inline const std::string& IntegrityVerification::verifier_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.IntegrityVerification.verifier_id)
  return _internal_verifier_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void IntegrityVerification::set_verifier_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.verifier_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.seed_dot_seigr.IntegrityVerification.verifier_id)
}
inline std::string* IntegrityVerification::mutable_verifier_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_verifier_id();
  // @@protoc_insertion_point(field_mutable:seigr.seed_dot_seigr.IntegrityVerification.verifier_id)
  return _s;
}
inline const std::string& IntegrityVerification::_internal_verifier_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.verifier_id_.Get();
}
inline void IntegrityVerification::_internal_set_verifier_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.verifier_id_.Set(value, GetArena());
}
inline std::string* IntegrityVerification::_internal_mutable_verifier_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.verifier_id_.Mutable( GetArena());
}
inline std::string* IntegrityVerification::release_verifier_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.seed_dot_seigr.IntegrityVerification.verifier_id)
  return _impl_.verifier_id_.Release();
}
inline void IntegrityVerification::set_allocated_verifier_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.verifier_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.verifier_id_.IsDefault()) {
    _impl_.verifier_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.seed_dot_seigr.IntegrityVerification.verifier_id)
}

// map<string, string> details = 4;
inline int IntegrityVerification::_internal_details_size() const {
  return _internal_details().size();
}
inline int IntegrityVerification::details_size() const {
  return _internal_details_size();
}
inline void IntegrityVerification::clear_details() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.details_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& IntegrityVerification::_internal_details() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.details_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& IntegrityVerification::details() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.seed_dot_seigr.IntegrityVerification.details)
  return _internal_details();
}
inline ::google::protobuf::Map<std::string, std::string>* IntegrityVerification::_internal_mutable_details() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.details_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* IntegrityVerification::mutable_details() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.seed_dot_seigr.IntegrityVerification.details)
  return _internal_mutable_details();
}

// string integrity_level = 5;
inline void IntegrityVerification::clear_integrity_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.integrity_level_.ClearToEmpty();
}
inline const std::string& IntegrityVerification::integrity_level() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.IntegrityVerification.integrity_level)
  return _internal_integrity_level();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void IntegrityVerification::set_integrity_level(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.integrity_level_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.seed_dot_seigr.IntegrityVerification.integrity_level)
}
inline std::string* IntegrityVerification::mutable_integrity_level() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_integrity_level();
  // @@protoc_insertion_point(field_mutable:seigr.seed_dot_seigr.IntegrityVerification.integrity_level)
  return _s;
}
inline const std::string& IntegrityVerification::_internal_integrity_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.integrity_level_.Get();
}
inline void IntegrityVerification::_internal_set_integrity_level(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.integrity_level_.Set(value, GetArena());
}
inline std::string* IntegrityVerification::_internal_mutable_integrity_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.integrity_level_.Mutable( GetArena());
}
inline std::string* IntegrityVerification::release_integrity_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.seed_dot_seigr.IntegrityVerification.integrity_level)
  return _impl_.integrity_level_.Release();
}
inline void IntegrityVerification::set_allocated_integrity_level(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.integrity_level_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.integrity_level_.IsDefault()) {
    _impl_.integrity_level_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.seed_dot_seigr.IntegrityVerification.integrity_level)
}

// string error_message = 6;
inline void IntegrityVerification::clear_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.ClearToEmpty();
}
inline const std::string& IntegrityVerification::error_message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.IntegrityVerification.error_message)
  return _internal_error_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void IntegrityVerification::set_error_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.seed_dot_seigr.IntegrityVerification.error_message)
}
inline std::string* IntegrityVerification::mutable_error_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_error_message();
  // @@protoc_insertion_point(field_mutable:seigr.seed_dot_seigr.IntegrityVerification.error_message)
  return _s;
}
inline const std::string& IntegrityVerification::_internal_error_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.error_message_.Get();
}
inline void IntegrityVerification::_internal_set_error_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.Set(value, GetArena());
}
inline std::string* IntegrityVerification::_internal_mutable_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.error_message_.Mutable( GetArena());
}
inline std::string* IntegrityVerification::release_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.seed_dot_seigr.IntegrityVerification.error_message)
  return _impl_.error_message_.Release();
}
inline void IntegrityVerification::set_allocated_error_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.error_message_.IsDefault()) {
    _impl_.error_message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.seed_dot_seigr.IntegrityVerification.error_message)
}

// string integrity_context = 7;
inline void IntegrityVerification::clear_integrity_context() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.integrity_context_.ClearToEmpty();
}
inline const std::string& IntegrityVerification::integrity_context() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.IntegrityVerification.integrity_context)
  return _internal_integrity_context();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void IntegrityVerification::set_integrity_context(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.integrity_context_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.seed_dot_seigr.IntegrityVerification.integrity_context)
}
inline std::string* IntegrityVerification::mutable_integrity_context() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_integrity_context();
  // @@protoc_insertion_point(field_mutable:seigr.seed_dot_seigr.IntegrityVerification.integrity_context)
  return _s;
}
inline const std::string& IntegrityVerification::_internal_integrity_context() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.integrity_context_.Get();
}
inline void IntegrityVerification::_internal_set_integrity_context(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.integrity_context_.Set(value, GetArena());
}
inline std::string* IntegrityVerification::_internal_mutable_integrity_context() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.integrity_context_.Mutable( GetArena());
}
inline std::string* IntegrityVerification::release_integrity_context() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.seed_dot_seigr.IntegrityVerification.integrity_context)
  return _impl_.integrity_context_.Release();
}
inline void IntegrityVerification::set_allocated_integrity_context(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.integrity_context_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.integrity_context_.IsDefault()) {
    _impl_.integrity_context_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.seed_dot_seigr.IntegrityVerification.integrity_context)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Compatibility

// string target_version = 1;
inline void Compatibility::clear_target_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_version_.ClearToEmpty();
}
inline const std::string& Compatibility::target_version() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.Compatibility.target_version)
  return _internal_target_version();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Compatibility::set_target_version(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_version_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.seed_dot_seigr.Compatibility.target_version)
}
inline std::string* Compatibility::mutable_target_version() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_target_version();
  // @@protoc_insertion_point(field_mutable:seigr.seed_dot_seigr.Compatibility.target_version)
  return _s;
}
inline const std::string& Compatibility::_internal_target_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_version_.Get();
}
inline void Compatibility::_internal_set_target_version(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_version_.Set(value, GetArena());
}
inline std::string* Compatibility::_internal_mutable_target_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.target_version_.Mutable( GetArena());
}
inline std::string* Compatibility::release_target_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.seed_dot_seigr.Compatibility.target_version)
  return _impl_.target_version_.Release();
}
inline void Compatibility::set_allocated_target_version(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_version_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.target_version_.IsDefault()) {
    _impl_.target_version_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.seed_dot_seigr.Compatibility.target_version)
}

// string migration_status = 2;
inline void Compatibility::clear_migration_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.migration_status_.ClearToEmpty();
}
inline const std::string& Compatibility::migration_status() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.Compatibility.migration_status)
  return _internal_migration_status();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Compatibility::set_migration_status(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.migration_status_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.seed_dot_seigr.Compatibility.migration_status)
}
inline std::string* Compatibility::mutable_migration_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_migration_status();
  // @@protoc_insertion_point(field_mutable:seigr.seed_dot_seigr.Compatibility.migration_status)
  return _s;
}
inline const std::string& Compatibility::_internal_migration_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.migration_status_.Get();
}
inline void Compatibility::_internal_set_migration_status(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.migration_status_.Set(value, GetArena());
}
inline std::string* Compatibility::_internal_mutable_migration_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.migration_status_.Mutable( GetArena());
}
inline std::string* Compatibility::release_migration_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.seed_dot_seigr.Compatibility.migration_status)
  return _impl_.migration_status_.Release();
}
inline void Compatibility::set_allocated_migration_status(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.migration_status_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.migration_status_.IsDefault()) {
    _impl_.migration_status_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.seed_dot_seigr.Compatibility.migration_status)
}

// map<string, string> compatibility_notes = 3;
inline int Compatibility::_internal_compatibility_notes_size() const {
  return _internal_compatibility_notes().size();
}
inline int Compatibility::compatibility_notes_size() const {
  return _internal_compatibility_notes_size();
}
inline void Compatibility::clear_compatibility_notes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.compatibility_notes_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& Compatibility::_internal_compatibility_notes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.compatibility_notes_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& Compatibility::compatibility_notes() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.seed_dot_seigr.Compatibility.compatibility_notes)
  return _internal_compatibility_notes();
}
inline ::google::protobuf::Map<std::string, std::string>* Compatibility::_internal_mutable_compatibility_notes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.compatibility_notes_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* Compatibility::mutable_compatibility_notes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.seed_dot_seigr.Compatibility.compatibility_notes)
  return _internal_mutable_compatibility_notes();
}

// string last_tested = 4;
inline void Compatibility::clear_last_tested() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_tested_.ClearToEmpty();
}
inline const std::string& Compatibility::last_tested() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.Compatibility.last_tested)
  return _internal_last_tested();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Compatibility::set_last_tested(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_tested_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.seed_dot_seigr.Compatibility.last_tested)
}
inline std::string* Compatibility::mutable_last_tested() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_last_tested();
  // @@protoc_insertion_point(field_mutable:seigr.seed_dot_seigr.Compatibility.last_tested)
  return _s;
}
inline const std::string& Compatibility::_internal_last_tested() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_tested_.Get();
}
inline void Compatibility::_internal_set_last_tested(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_tested_.Set(value, GetArena());
}
inline std::string* Compatibility::_internal_mutable_last_tested() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.last_tested_.Mutable( GetArena());
}
inline std::string* Compatibility::release_last_tested() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.seed_dot_seigr.Compatibility.last_tested)
  return _impl_.last_tested_.Release();
}
inline void Compatibility::set_allocated_last_tested(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_tested_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.last_tested_.IsDefault()) {
    _impl_.last_tested_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.seed_dot_seigr.Compatibility.last_tested)
}

// repeated string affected_components = 5;
inline int Compatibility::_internal_affected_components_size() const {
  return _internal_affected_components().size();
}
inline int Compatibility::affected_components_size() const {
  return _internal_affected_components_size();
}
inline void Compatibility::clear_affected_components() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.affected_components_.Clear();
}
inline std::string* Compatibility::add_affected_components() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_affected_components()->Add();
  // @@protoc_insertion_point(field_add_mutable:seigr.seed_dot_seigr.Compatibility.affected_components)
  return _s;
}
inline const std::string& Compatibility::affected_components(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.Compatibility.affected_components)
  return _internal_affected_components().Get(index);
}
inline std::string* Compatibility::mutable_affected_components(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.seed_dot_seigr.Compatibility.affected_components)
  return _internal_mutable_affected_components()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void Compatibility::set_affected_components(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_affected_components()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:seigr.seed_dot_seigr.Compatibility.affected_components)
}
template <typename Arg_, typename... Args_>
inline void Compatibility::add_affected_components(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_affected_components(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seigr.seed_dot_seigr.Compatibility.affected_components)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Compatibility::affected_components() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.seed_dot_seigr.Compatibility.affected_components)
  return _internal_affected_components();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Compatibility::mutable_affected_components() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.seed_dot_seigr.Compatibility.affected_components)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_affected_components();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Compatibility::_internal_affected_components() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.affected_components_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Compatibility::_internal_mutable_affected_components() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.affected_components_;
}

// map<string, string> migration_metadata = 6;
inline int Compatibility::_internal_migration_metadata_size() const {
  return _internal_migration_metadata().size();
}
inline int Compatibility::migration_metadata_size() const {
  return _internal_migration_metadata_size();
}
inline void Compatibility::clear_migration_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.migration_metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& Compatibility::_internal_migration_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.migration_metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& Compatibility::migration_metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.seed_dot_seigr.Compatibility.migration_metadata)
  return _internal_migration_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* Compatibility::_internal_mutable_migration_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.migration_metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* Compatibility::mutable_migration_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.seed_dot_seigr.Compatibility.migration_metadata)
  return _internal_mutable_migration_metadata();
}

// string migration_strategy = 7;
inline void Compatibility::clear_migration_strategy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.migration_strategy_.ClearToEmpty();
}
inline const std::string& Compatibility::migration_strategy() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.Compatibility.migration_strategy)
  return _internal_migration_strategy();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Compatibility::set_migration_strategy(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.migration_strategy_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.seed_dot_seigr.Compatibility.migration_strategy)
}
inline std::string* Compatibility::mutable_migration_strategy() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_migration_strategy();
  // @@protoc_insertion_point(field_mutable:seigr.seed_dot_seigr.Compatibility.migration_strategy)
  return _s;
}
inline const std::string& Compatibility::_internal_migration_strategy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.migration_strategy_.Get();
}
inline void Compatibility::_internal_set_migration_strategy(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.migration_strategy_.Set(value, GetArena());
}
inline std::string* Compatibility::_internal_mutable_migration_strategy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.migration_strategy_.Mutable( GetArena());
}
inline std::string* Compatibility::release_migration_strategy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.seed_dot_seigr.Compatibility.migration_strategy)
  return _impl_.migration_strategy_.Release();
}
inline void Compatibility::set_allocated_migration_strategy(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.migration_strategy_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.migration_strategy_.IsDefault()) {
    _impl_.migration_strategy_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.seed_dot_seigr.Compatibility.migration_strategy)
}

// bool adaptive_migration_enabled = 8;
inline void Compatibility::clear_adaptive_migration_enabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.adaptive_migration_enabled_ = false;
}
inline bool Compatibility::adaptive_migration_enabled() const {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.Compatibility.adaptive_migration_enabled)
  return _internal_adaptive_migration_enabled();
}
inline void Compatibility::set_adaptive_migration_enabled(bool value) {
  _internal_set_adaptive_migration_enabled(value);
  // @@protoc_insertion_point(field_set:seigr.seed_dot_seigr.Compatibility.adaptive_migration_enabled)
}
inline bool Compatibility::_internal_adaptive_migration_enabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.adaptive_migration_enabled_;
}
inline void Compatibility::_internal_set_adaptive_migration_enabled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.adaptive_migration_enabled_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SeedInitializationRequest

// string root_hash = 1;
inline void SeedInitializationRequest::clear_root_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.root_hash_.ClearToEmpty();
}
inline const std::string& SeedInitializationRequest::root_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.SeedInitializationRequest.root_hash)
  return _internal_root_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SeedInitializationRequest::set_root_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.root_hash_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.seed_dot_seigr.SeedInitializationRequest.root_hash)
}
inline std::string* SeedInitializationRequest::mutable_root_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_root_hash();
  // @@protoc_insertion_point(field_mutable:seigr.seed_dot_seigr.SeedInitializationRequest.root_hash)
  return _s;
}
inline const std::string& SeedInitializationRequest::_internal_root_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.root_hash_.Get();
}
inline void SeedInitializationRequest::_internal_set_root_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.root_hash_.Set(value, GetArena());
}
inline std::string* SeedInitializationRequest::_internal_mutable_root_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.root_hash_.Mutable( GetArena());
}
inline std::string* SeedInitializationRequest::release_root_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.seed_dot_seigr.SeedInitializationRequest.root_hash)
  return _impl_.root_hash_.Release();
}
inline void SeedInitializationRequest::set_allocated_root_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.root_hash_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.root_hash_.IsDefault()) {
    _impl_.root_hash_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.seed_dot_seigr.SeedInitializationRequest.root_hash)
}

// string creator_id = 2;
inline void SeedInitializationRequest::clear_creator_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creator_id_.ClearToEmpty();
}
inline const std::string& SeedInitializationRequest::creator_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.SeedInitializationRequest.creator_id)
  return _internal_creator_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SeedInitializationRequest::set_creator_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creator_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.seed_dot_seigr.SeedInitializationRequest.creator_id)
}
inline std::string* SeedInitializationRequest::mutable_creator_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_creator_id();
  // @@protoc_insertion_point(field_mutable:seigr.seed_dot_seigr.SeedInitializationRequest.creator_id)
  return _s;
}
inline const std::string& SeedInitializationRequest::_internal_creator_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.creator_id_.Get();
}
inline void SeedInitializationRequest::_internal_set_creator_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creator_id_.Set(value, GetArena());
}
inline std::string* SeedInitializationRequest::_internal_mutable_creator_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.creator_id_.Mutable( GetArena());
}
inline std::string* SeedInitializationRequest::release_creator_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.seed_dot_seigr.SeedInitializationRequest.creator_id)
  return _impl_.creator_id_.Release();
}
inline void SeedInitializationRequest::set_allocated_creator_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creator_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.creator_id_.IsDefault()) {
    _impl_.creator_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.seed_dot_seigr.SeedInitializationRequest.creator_id)
}

// map<string, string> initial_metadata = 3;
inline int SeedInitializationRequest::_internal_initial_metadata_size() const {
  return _internal_initial_metadata().size();
}
inline int SeedInitializationRequest::initial_metadata_size() const {
  return _internal_initial_metadata_size();
}
inline void SeedInitializationRequest::clear_initial_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initial_metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& SeedInitializationRequest::_internal_initial_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.initial_metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& SeedInitializationRequest::initial_metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.seed_dot_seigr.SeedInitializationRequest.initial_metadata)
  return _internal_initial_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* SeedInitializationRequest::_internal_mutable_initial_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.initial_metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* SeedInitializationRequest::mutable_initial_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.seed_dot_seigr.SeedInitializationRequest.initial_metadata)
  return _internal_mutable_initial_metadata();
}

// -------------------------------------------------------------------

// SeedInitializationResponse

// bool success = 1;
inline void SeedInitializationResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool SeedInitializationResponse::success() const {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.SeedInitializationResponse.success)
  return _internal_success();
}
inline void SeedInitializationResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:seigr.seed_dot_seigr.SeedInitializationResponse.success)
}
inline bool SeedInitializationResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void SeedInitializationResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// string seed_hash = 2;
inline void SeedInitializationResponse::clear_seed_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seed_hash_.ClearToEmpty();
}
inline const std::string& SeedInitializationResponse::seed_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.SeedInitializationResponse.seed_hash)
  return _internal_seed_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SeedInitializationResponse::set_seed_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seed_hash_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.seed_dot_seigr.SeedInitializationResponse.seed_hash)
}
inline std::string* SeedInitializationResponse::mutable_seed_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_seed_hash();
  // @@protoc_insertion_point(field_mutable:seigr.seed_dot_seigr.SeedInitializationResponse.seed_hash)
  return _s;
}
inline const std::string& SeedInitializationResponse::_internal_seed_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.seed_hash_.Get();
}
inline void SeedInitializationResponse::_internal_set_seed_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seed_hash_.Set(value, GetArena());
}
inline std::string* SeedInitializationResponse::_internal_mutable_seed_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.seed_hash_.Mutable( GetArena());
}
inline std::string* SeedInitializationResponse::release_seed_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.seed_dot_seigr.SeedInitializationResponse.seed_hash)
  return _impl_.seed_hash_.Release();
}
inline void SeedInitializationResponse::set_allocated_seed_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seed_hash_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.seed_hash_.IsDefault()) {
    _impl_.seed_hash_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.seed_dot_seigr.SeedInitializationResponse.seed_hash)
}

// string message = 3;
inline void SeedInitializationResponse::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& SeedInitializationResponse::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.SeedInitializationResponse.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SeedInitializationResponse::set_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.seed_dot_seigr.SeedInitializationResponse.message)
}
inline std::string* SeedInitializationResponse::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:seigr.seed_dot_seigr.SeedInitializationResponse.message)
  return _s;
}
inline const std::string& SeedInitializationResponse::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void SeedInitializationResponse::_internal_set_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(value, GetArena());
}
inline std::string* SeedInitializationResponse::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* SeedInitializationResponse::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.seed_dot_seigr.SeedInitializationResponse.message)
  return _impl_.message_.Release();
}
inline void SeedInitializationResponse::set_allocated_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.seed_dot_seigr.SeedInitializationResponse.message)
}

// -------------------------------------------------------------------

// VerifySeedRequest

// string seed_hash = 1;
inline void VerifySeedRequest::clear_seed_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seed_hash_.ClearToEmpty();
}
inline const std::string& VerifySeedRequest::seed_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.VerifySeedRequest.seed_hash)
  return _internal_seed_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void VerifySeedRequest::set_seed_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seed_hash_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.seed_dot_seigr.VerifySeedRequest.seed_hash)
}
inline std::string* VerifySeedRequest::mutable_seed_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_seed_hash();
  // @@protoc_insertion_point(field_mutable:seigr.seed_dot_seigr.VerifySeedRequest.seed_hash)
  return _s;
}
inline const std::string& VerifySeedRequest::_internal_seed_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.seed_hash_.Get();
}
inline void VerifySeedRequest::_internal_set_seed_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seed_hash_.Set(value, GetArena());
}
inline std::string* VerifySeedRequest::_internal_mutable_seed_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.seed_hash_.Mutable( GetArena());
}
inline std::string* VerifySeedRequest::release_seed_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.seed_dot_seigr.VerifySeedRequest.seed_hash)
  return _impl_.seed_hash_.Release();
}
inline void VerifySeedRequest::set_allocated_seed_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seed_hash_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.seed_hash_.IsDefault()) {
    _impl_.seed_hash_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.seed_dot_seigr.VerifySeedRequest.seed_hash)
}

// bool perform_full_verification = 2;
inline void VerifySeedRequest::clear_perform_full_verification() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.perform_full_verification_ = false;
}
inline bool VerifySeedRequest::perform_full_verification() const {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.VerifySeedRequest.perform_full_verification)
  return _internal_perform_full_verification();
}
inline void VerifySeedRequest::set_perform_full_verification(bool value) {
  _internal_set_perform_full_verification(value);
  // @@protoc_insertion_point(field_set:seigr.seed_dot_seigr.VerifySeedRequest.perform_full_verification)
}
inline bool VerifySeedRequest::_internal_perform_full_verification() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.perform_full_verification_;
}
inline void VerifySeedRequest::_internal_set_perform_full_verification(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.perform_full_verification_ = value;
}

// -------------------------------------------------------------------

// VerifySeedResponse

// bool success = 1;
inline void VerifySeedResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool VerifySeedResponse::success() const {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.VerifySeedResponse.success)
  return _internal_success();
}
inline void VerifySeedResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:seigr.seed_dot_seigr.VerifySeedResponse.success)
}
inline bool VerifySeedResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void VerifySeedResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// .seigr.hashing.VerificationStatus status = 2;
inline void VerifySeedResponse::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0;
}
inline ::seigr::hashing::VerificationStatus VerifySeedResponse::status() const {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.VerifySeedResponse.status)
  return _internal_status();
}
inline void VerifySeedResponse::set_status(::seigr::hashing::VerificationStatus value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:seigr.seed_dot_seigr.VerifySeedResponse.status)
}
inline ::seigr::hashing::VerificationStatus VerifySeedResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::hashing::VerificationStatus>(_impl_.status_);
}
inline void VerifySeedResponse::_internal_set_status(::seigr::hashing::VerificationStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// string message = 3;
inline void VerifySeedResponse::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& VerifySeedResponse::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.VerifySeedResponse.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void VerifySeedResponse::set_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.seed_dot_seigr.VerifySeedResponse.message)
}
inline std::string* VerifySeedResponse::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:seigr.seed_dot_seigr.VerifySeedResponse.message)
  return _s;
}
inline const std::string& VerifySeedResponse::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void VerifySeedResponse::_internal_set_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(value, GetArena());
}
inline std::string* VerifySeedResponse::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* VerifySeedResponse::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.seed_dot_seigr.VerifySeedResponse.message)
  return _impl_.message_.Release();
}
inline void VerifySeedResponse::set_allocated_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.seed_dot_seigr.VerifySeedResponse.message)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// UpdateSeedMetadataRequest

// string seed_hash = 1;
inline void UpdateSeedMetadataRequest::clear_seed_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seed_hash_.ClearToEmpty();
}
inline const std::string& UpdateSeedMetadataRequest::seed_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.UpdateSeedMetadataRequest.seed_hash)
  return _internal_seed_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpdateSeedMetadataRequest::set_seed_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seed_hash_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.seed_dot_seigr.UpdateSeedMetadataRequest.seed_hash)
}
inline std::string* UpdateSeedMetadataRequest::mutable_seed_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_seed_hash();
  // @@protoc_insertion_point(field_mutable:seigr.seed_dot_seigr.UpdateSeedMetadataRequest.seed_hash)
  return _s;
}
inline const std::string& UpdateSeedMetadataRequest::_internal_seed_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.seed_hash_.Get();
}
inline void UpdateSeedMetadataRequest::_internal_set_seed_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seed_hash_.Set(value, GetArena());
}
inline std::string* UpdateSeedMetadataRequest::_internal_mutable_seed_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.seed_hash_.Mutable( GetArena());
}
inline std::string* UpdateSeedMetadataRequest::release_seed_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.seed_dot_seigr.UpdateSeedMetadataRequest.seed_hash)
  return _impl_.seed_hash_.Release();
}
inline void UpdateSeedMetadataRequest::set_allocated_seed_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seed_hash_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.seed_hash_.IsDefault()) {
    _impl_.seed_hash_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.seed_dot_seigr.UpdateSeedMetadataRequest.seed_hash)
}

// map<string, string> updated_metadata = 2;
inline int UpdateSeedMetadataRequest::_internal_updated_metadata_size() const {
  return _internal_updated_metadata().size();
}
inline int UpdateSeedMetadataRequest::updated_metadata_size() const {
  return _internal_updated_metadata_size();
}
inline void UpdateSeedMetadataRequest::clear_updated_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& UpdateSeedMetadataRequest::_internal_updated_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updated_metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& UpdateSeedMetadataRequest::updated_metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.seed_dot_seigr.UpdateSeedMetadataRequest.updated_metadata)
  return _internal_updated_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* UpdateSeedMetadataRequest::_internal_mutable_updated_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.updated_metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* UpdateSeedMetadataRequest::mutable_updated_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.seed_dot_seigr.UpdateSeedMetadataRequest.updated_metadata)
  return _internal_mutable_updated_metadata();
}

// -------------------------------------------------------------------

// UpdateSeedMetadataResponse

// bool success = 1;
inline void UpdateSeedMetadataResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool UpdateSeedMetadataResponse::success() const {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.UpdateSeedMetadataResponse.success)
  return _internal_success();
}
inline void UpdateSeedMetadataResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:seigr.seed_dot_seigr.UpdateSeedMetadataResponse.success)
}
inline bool UpdateSeedMetadataResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void UpdateSeedMetadataResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// string message = 2;
inline void UpdateSeedMetadataResponse::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& UpdateSeedMetadataResponse::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.UpdateSeedMetadataResponse.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpdateSeedMetadataResponse::set_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.seed_dot_seigr.UpdateSeedMetadataResponse.message)
}
inline std::string* UpdateSeedMetadataResponse::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:seigr.seed_dot_seigr.UpdateSeedMetadataResponse.message)
  return _s;
}
inline const std::string& UpdateSeedMetadataResponse::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void UpdateSeedMetadataResponse::_internal_set_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(value, GetArena());
}
inline std::string* UpdateSeedMetadataResponse::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* UpdateSeedMetadataResponse::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.seed_dot_seigr.UpdateSeedMetadataResponse.message)
  return _impl_.message_.Release();
}
inline void UpdateSeedMetadataResponse::set_allocated_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.seed_dot_seigr.UpdateSeedMetadataResponse.message)
}

// -------------------------------------------------------------------

// TriggerRollbackRequest

// string seed_hash = 1;
inline void TriggerRollbackRequest::clear_seed_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seed_hash_.ClearToEmpty();
}
inline const std::string& TriggerRollbackRequest::seed_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.TriggerRollbackRequest.seed_hash)
  return _internal_seed_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TriggerRollbackRequest::set_seed_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seed_hash_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.seed_dot_seigr.TriggerRollbackRequest.seed_hash)
}
inline std::string* TriggerRollbackRequest::mutable_seed_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_seed_hash();
  // @@protoc_insertion_point(field_mutable:seigr.seed_dot_seigr.TriggerRollbackRequest.seed_hash)
  return _s;
}
inline const std::string& TriggerRollbackRequest::_internal_seed_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.seed_hash_.Get();
}
inline void TriggerRollbackRequest::_internal_set_seed_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seed_hash_.Set(value, GetArena());
}
inline std::string* TriggerRollbackRequest::_internal_mutable_seed_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.seed_hash_.Mutable( GetArena());
}
inline std::string* TriggerRollbackRequest::release_seed_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.seed_dot_seigr.TriggerRollbackRequest.seed_hash)
  return _impl_.seed_hash_.Release();
}
inline void TriggerRollbackRequest::set_allocated_seed_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seed_hash_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.seed_hash_.IsDefault()) {
    _impl_.seed_hash_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.seed_dot_seigr.TriggerRollbackRequest.seed_hash)
}

// string target_timestamp = 2;
inline void TriggerRollbackRequest::clear_target_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_timestamp_.ClearToEmpty();
}
inline const std::string& TriggerRollbackRequest::target_timestamp() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.TriggerRollbackRequest.target_timestamp)
  return _internal_target_timestamp();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TriggerRollbackRequest::set_target_timestamp(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_timestamp_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.seed_dot_seigr.TriggerRollbackRequest.target_timestamp)
}
inline std::string* TriggerRollbackRequest::mutable_target_timestamp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_target_timestamp();
  // @@protoc_insertion_point(field_mutable:seigr.seed_dot_seigr.TriggerRollbackRequest.target_timestamp)
  return _s;
}
inline const std::string& TriggerRollbackRequest::_internal_target_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_timestamp_.Get();
}
inline void TriggerRollbackRequest::_internal_set_target_timestamp(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_timestamp_.Set(value, GetArena());
}
inline std::string* TriggerRollbackRequest::_internal_mutable_target_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.target_timestamp_.Mutable( GetArena());
}
inline std::string* TriggerRollbackRequest::release_target_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.seed_dot_seigr.TriggerRollbackRequest.target_timestamp)
  return _impl_.target_timestamp_.Release();
}
inline void TriggerRollbackRequest::set_allocated_target_timestamp(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_timestamp_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.target_timestamp_.IsDefault()) {
    _impl_.target_timestamp_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.seed_dot_seigr.TriggerRollbackRequest.target_timestamp)
}

// -------------------------------------------------------------------

// TriggerRollbackResponse

// bool success = 1;
inline void TriggerRollbackResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool TriggerRollbackResponse::success() const {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.TriggerRollbackResponse.success)
  return _internal_success();
}
inline void TriggerRollbackResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:seigr.seed_dot_seigr.TriggerRollbackResponse.success)
}
inline bool TriggerRollbackResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void TriggerRollbackResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// string message = 2;
inline void TriggerRollbackResponse::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& TriggerRollbackResponse::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.TriggerRollbackResponse.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TriggerRollbackResponse::set_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.seed_dot_seigr.TriggerRollbackResponse.message)
}
inline std::string* TriggerRollbackResponse::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:seigr.seed_dot_seigr.TriggerRollbackResponse.message)
  return _s;
}
inline const std::string& TriggerRollbackResponse::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void TriggerRollbackResponse::_internal_set_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(value, GetArena());
}
inline std::string* TriggerRollbackResponse::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* TriggerRollbackResponse::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.seed_dot_seigr.TriggerRollbackResponse.message)
  return _impl_.message_.Release();
}
inline void TriggerRollbackResponse::set_allocated_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.seed_dot_seigr.TriggerRollbackResponse.message)
}

// -------------------------------------------------------------------

// MonitorSeedRequest

// string seed_hash = 1;
inline void MonitorSeedRequest::clear_seed_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seed_hash_.ClearToEmpty();
}
inline const std::string& MonitorSeedRequest::seed_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.MonitorSeedRequest.seed_hash)
  return _internal_seed_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MonitorSeedRequest::set_seed_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seed_hash_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.seed_dot_seigr.MonitorSeedRequest.seed_hash)
}
inline std::string* MonitorSeedRequest::mutable_seed_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_seed_hash();
  // @@protoc_insertion_point(field_mutable:seigr.seed_dot_seigr.MonitorSeedRequest.seed_hash)
  return _s;
}
inline const std::string& MonitorSeedRequest::_internal_seed_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.seed_hash_.Get();
}
inline void MonitorSeedRequest::_internal_set_seed_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seed_hash_.Set(value, GetArena());
}
inline std::string* MonitorSeedRequest::_internal_mutable_seed_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.seed_hash_.Mutable( GetArena());
}
inline std::string* MonitorSeedRequest::release_seed_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.seed_dot_seigr.MonitorSeedRequest.seed_hash)
  return _impl_.seed_hash_.Release();
}
inline void MonitorSeedRequest::set_allocated_seed_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seed_hash_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.seed_hash_.IsDefault()) {
    _impl_.seed_hash_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.seed_dot_seigr.MonitorSeedRequest.seed_hash)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// MonitorSeedResponse

// string status = 1;
inline void MonitorSeedResponse::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.ClearToEmpty();
}
inline const std::string& MonitorSeedResponse::status() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.MonitorSeedResponse.status)
  return _internal_status();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MonitorSeedResponse::set_status(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.seed_dot_seigr.MonitorSeedResponse.status)
}
inline std::string* MonitorSeedResponse::mutable_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:seigr.seed_dot_seigr.MonitorSeedResponse.status)
  return _s;
}
inline const std::string& MonitorSeedResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_.Get();
}
inline void MonitorSeedResponse::_internal_set_status(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.Set(value, GetArena());
}
inline std::string* MonitorSeedResponse::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.status_.Mutable( GetArena());
}
inline std::string* MonitorSeedResponse::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.seed_dot_seigr.MonitorSeedResponse.status)
  return _impl_.status_.Release();
}
inline void MonitorSeedResponse::set_allocated_status(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.status_.IsDefault()) {
    _impl_.status_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.seed_dot_seigr.MonitorSeedResponse.status)
}

// map<string, string> metrics = 2;
inline int MonitorSeedResponse::_internal_metrics_size() const {
  return _internal_metrics().size();
}
inline int MonitorSeedResponse::metrics_size() const {
  return _internal_metrics_size();
}
inline void MonitorSeedResponse::clear_metrics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metrics_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& MonitorSeedResponse::_internal_metrics() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metrics_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& MonitorSeedResponse::metrics() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.seed_dot_seigr.MonitorSeedResponse.metrics)
  return _internal_metrics();
}
inline ::google::protobuf::Map<std::string, std::string>* MonitorSeedResponse::_internal_mutable_metrics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.metrics_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* MonitorSeedResponse::mutable_metrics() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.seed_dot_seigr.MonitorSeedResponse.metrics)
  return _internal_mutable_metrics();
}

// string last_ping = 3;
inline void MonitorSeedResponse::clear_last_ping() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_ping_.ClearToEmpty();
}
inline const std::string& MonitorSeedResponse::last_ping() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.seed_dot_seigr.MonitorSeedResponse.last_ping)
  return _internal_last_ping();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MonitorSeedResponse::set_last_ping(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_ping_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.seed_dot_seigr.MonitorSeedResponse.last_ping)
}
inline std::string* MonitorSeedResponse::mutable_last_ping() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_last_ping();
  // @@protoc_insertion_point(field_mutable:seigr.seed_dot_seigr.MonitorSeedResponse.last_ping)
  return _s;
}
inline const std::string& MonitorSeedResponse::_internal_last_ping() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_ping_.Get();
}
inline void MonitorSeedResponse::_internal_set_last_ping(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_ping_.Set(value, GetArena());
}
inline std::string* MonitorSeedResponse::_internal_mutable_last_ping() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.last_ping_.Mutable( GetArena());
}
inline std::string* MonitorSeedResponse::release_last_ping() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.seed_dot_seigr.MonitorSeedResponse.last_ping)
  return _impl_.last_ping_.Release();
}
inline void MonitorSeedResponse::set_allocated_last_ping(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_ping_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.last_ping_.IsDefault()) {
    _impl_.last_ping_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.seed_dot_seigr.MonitorSeedResponse.last_ping)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace seed_dot_seigr
}  // namespace seigr


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::seigr::seed_dot_seigr::SeedClusterState> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::seigr::seed_dot_seigr::SeedClusterState>() {
  return ::seigr::seed_dot_seigr::SeedClusterState_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // seed_5fdot_5fseigr_2eproto_2epb_2eh
