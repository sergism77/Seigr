// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: seigr_cell.proto
// Protobuf C++ Version: 5.29.2

#include "seigr_cell.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace seigr {
namespace seigr_cell {
              template <typename>
PROTOBUF_CONSTEXPR ValidateSeigrCellResponse_ValidationMetadataEntry_DoNotUse::ValidateSeigrCellResponse_ValidationMetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ValidateSeigrCellResponse_ValidationMetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ValidateSeigrCellResponse_ValidationMetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ValidateSeigrCellResponse_ValidationMetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ValidateSeigrCellResponse_ValidationMetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ValidateSeigrCellResponse_ValidationMetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ValidateSeigrCellResponse_ValidationMetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ValidateSeigrCellResponse_ValidationMetadataEntry_DoNotUseDefaultTypeInternal _ValidateSeigrCellResponse_ValidationMetadataEntry_DoNotUse_default_instance_;

inline constexpr ValidateSeigrCellRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : cell_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ValidateSeigrCellRequest::ValidateSeigrCellRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ValidateSeigrCellRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ValidateSeigrCellRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ValidateSeigrCellRequestDefaultTypeInternal() {}
  union {
    ValidateSeigrCellRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ValidateSeigrCellRequestDefaultTypeInternal _ValidateSeigrCellRequest_default_instance_;

inline constexpr UpdateSeigrCellResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateSeigrCellResponse::UpdateSeigrCellResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateSeigrCellResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateSeigrCellResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateSeigrCellResponseDefaultTypeInternal() {}
  union {
    UpdateSeigrCellResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateSeigrCellResponseDefaultTypeInternal _UpdateSeigrCellResponse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR UpdateSeigrCellRequest_UpdatesEntry_DoNotUse::UpdateSeigrCellRequest_UpdatesEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : UpdateSeigrCellRequest_UpdatesEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : UpdateSeigrCellRequest_UpdatesEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct UpdateSeigrCellRequest_UpdatesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateSeigrCellRequest_UpdatesEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateSeigrCellRequest_UpdatesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    UpdateSeigrCellRequest_UpdatesEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateSeigrCellRequest_UpdatesEntry_DoNotUseDefaultTypeInternal _UpdateSeigrCellRequest_UpdatesEntry_DoNotUse_default_instance_;

inline constexpr RetrieveSeigrCellRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : cell_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RetrieveSeigrCellRequest::RetrieveSeigrCellRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RetrieveSeigrCellRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RetrieveSeigrCellRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RetrieveSeigrCellRequestDefaultTypeInternal() {}
  union {
    RetrieveSeigrCellRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RetrieveSeigrCellRequestDefaultTypeInternal _RetrieveSeigrCellRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR RE_License_LicenseMetadataEntry_DoNotUse::RE_License_LicenseMetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : RE_License_LicenseMetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : RE_License_LicenseMetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct RE_License_LicenseMetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RE_License_LicenseMetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RE_License_LicenseMetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    RE_License_LicenseMetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RE_License_LicenseMetadataEntry_DoNotUseDefaultTypeInternal _RE_License_LicenseMetadataEntry_DoNotUse_default_instance_;

inline constexpr Permissions::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : geographic_restriction_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        temporal_restriction_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        compliance_tag_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        allow_modification_{false},
        allow_derivatives_{false},
        allow_commercial_use_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Permissions::Permissions(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PermissionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PermissionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PermissionsDefaultTypeInternal() {}
  union {
    Permissions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PermissionsDefaultTypeInternal _Permissions_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR Metadata_MetadataExtrasEntry_DoNotUse::Metadata_MetadataExtrasEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : Metadata_MetadataExtrasEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : Metadata_MetadataExtrasEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct Metadata_MetadataExtrasEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Metadata_MetadataExtrasEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Metadata_MetadataExtrasEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Metadata_MetadataExtrasEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Metadata_MetadataExtrasEntry_DoNotUseDefaultTypeInternal _Metadata_MetadataExtrasEntry_DoNotUse_default_instance_;

inline constexpr ListSeigrCellsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : tags_{},
        access_level_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        show_only_active_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ListSeigrCellsRequest::ListSeigrCellsRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ListSeigrCellsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListSeigrCellsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListSeigrCellsRequestDefaultTypeInternal() {}
  union {
    ListSeigrCellsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListSeigrCellsRequestDefaultTypeInternal _ListSeigrCellsRequest_default_instance_;

inline constexpr CustomProperty::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        property_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        is_sensitive_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CustomProperty::CustomProperty(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CustomPropertyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CustomPropertyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CustomPropertyDefaultTypeInternal() {}
  union {
    CustomProperty _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CustomPropertyDefaultTypeInternal _CustomProperty_default_instance_;

inline constexpr CoordinateIndex::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : t_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        reference_frame_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        x_{0},
        y_{0},
        z_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CoordinateIndex::CoordinateIndex(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CoordinateIndexDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CoordinateIndexDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CoordinateIndexDefaultTypeInternal() {}
  union {
    CoordinateIndex _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CoordinateIndexDefaultTypeInternal _CoordinateIndex_default_instance_;

inline constexpr ValidateSeigrCellResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : validation_metadata_{},
        validation_message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        is_valid_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ValidateSeigrCellResponse::ValidateSeigrCellResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ValidateSeigrCellResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ValidateSeigrCellResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ValidateSeigrCellResponseDefaultTypeInternal() {}
  union {
    ValidateSeigrCellResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ValidateSeigrCellResponseDefaultTypeInternal _ValidateSeigrCellResponse_default_instance_;

inline constexpr UpdateSeigrCellRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : updates_{},
        cell_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateSeigrCellRequest::UpdateSeigrCellRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateSeigrCellRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateSeigrCellRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateSeigrCellRequestDefaultTypeInternal() {}
  union {
    UpdateSeigrCellRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateSeigrCellRequestDefaultTypeInternal _UpdateSeigrCellRequest_default_instance_;

inline constexpr RE_License::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        contributors_{},
        license_metadata_{},
        license_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        terms_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        license_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ethical_use_guideline_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        permissions_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RE_License::RE_License(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RE_LicenseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RE_LicenseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RE_LicenseDefaultTypeInternal() {}
  union {
    RE_License _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RE_LicenseDefaultTypeInternal _RE_License_default_instance_;

inline constexpr Metadata::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : tags_{},
        metadata_extras_{},
        cell_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        contributor_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        hash_link_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        data_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        lineage_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        access_level_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        compression_algorithm_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        security_classification_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        is_encrypted_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Metadata::Metadata(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MetadataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MetadataDefaultTypeInternal() {}
  union {
    Metadata _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MetadataDefaultTypeInternal _Metadata_default_instance_;

inline constexpr SeigrCell::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        custom_properties_{},
        data_content_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        primary_redundancy_marker_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        secondary_redundancy_marker_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        metadata_{nullptr},
        coordinate_index_{nullptr},
        re_license_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SeigrCell::SeigrCell(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SeigrCellDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SeigrCellDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SeigrCellDefaultTypeInternal() {}
  union {
    SeigrCell _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SeigrCellDefaultTypeInternal _SeigrCell_default_instance_;

inline constexpr RetrieveSeigrCellResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        retrieval_timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        cell_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RetrieveSeigrCellResponse::RetrieveSeigrCellResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RetrieveSeigrCellResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RetrieveSeigrCellResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RetrieveSeigrCellResponseDefaultTypeInternal() {}
  union {
    RetrieveSeigrCellResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RetrieveSeigrCellResponseDefaultTypeInternal _RetrieveSeigrCellResponse_default_instance_;

inline constexpr ListSeigrCellsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : cells_{},
        retrieval_timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ListSeigrCellsResponse::ListSeigrCellsResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ListSeigrCellsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListSeigrCellsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListSeigrCellsResponseDefaultTypeInternal() {}
  union {
    ListSeigrCellsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListSeigrCellsResponseDefaultTypeInternal _ListSeigrCellsResponse_default_instance_;
}  // namespace seigr_cell
}  // namespace seigr
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_seigr_5fcell_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_seigr_5fcell_2eproto = nullptr;
const ::uint32_t
    TableStruct_seigr_5fcell_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::SeigrCell, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::SeigrCell, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::SeigrCell, _impl_.data_content_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::SeigrCell, _impl_.primary_redundancy_marker_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::SeigrCell, _impl_.secondary_redundancy_marker_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::SeigrCell, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::SeigrCell, _impl_.coordinate_index_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::SeigrCell, _impl_.re_license_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::SeigrCell, _impl_.custom_properties_),
        ~0u,
        ~0u,
        ~0u,
        0,
        1,
        2,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::Metadata_MetadataExtrasEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::Metadata_MetadataExtrasEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::Metadata_MetadataExtrasEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::Metadata_MetadataExtrasEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::Metadata, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::Metadata, _impl_.cell_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::Metadata, _impl_.contributor_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::Metadata, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::Metadata, _impl_.version_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::Metadata, _impl_.hash_link_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::Metadata, _impl_.data_hash_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::Metadata, _impl_.lineage_hash_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::Metadata, _impl_.access_level_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::Metadata, _impl_.tags_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::Metadata, _impl_.compression_algorithm_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::Metadata, _impl_.is_encrypted_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::Metadata, _impl_.security_classification_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::Metadata, _impl_.metadata_extras_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::CoordinateIndex, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::CoordinateIndex, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::CoordinateIndex, _impl_.y_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::CoordinateIndex, _impl_.z_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::CoordinateIndex, _impl_.t_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::CoordinateIndex, _impl_.reference_frame_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::RE_License_LicenseMetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::RE_License_LicenseMetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::RE_License_LicenseMetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::RE_License_LicenseMetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::RE_License, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::RE_License, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::RE_License, _impl_.license_type_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::RE_License, _impl_.terms_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::RE_License, _impl_.license_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::RE_License, _impl_.contributors_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::RE_License, _impl_.ethical_use_guideline_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::RE_License, _impl_.permissions_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::RE_License, _impl_.license_metadata_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::Permissions, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::Permissions, _impl_.allow_modification_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::Permissions, _impl_.allow_derivatives_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::Permissions, _impl_.allow_commercial_use_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::Permissions, _impl_.geographic_restriction_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::Permissions, _impl_.temporal_restriction_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::Permissions, _impl_.compliance_tag_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::CustomProperty, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::CustomProperty, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::CustomProperty, _impl_.value_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::CustomProperty, _impl_.property_type_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::CustomProperty, _impl_.is_sensitive_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::ValidateSeigrCellRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::ValidateSeigrCellRequest, _impl_.cell_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::ValidateSeigrCellResponse_ValidationMetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::ValidateSeigrCellResponse_ValidationMetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::ValidateSeigrCellResponse_ValidationMetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::ValidateSeigrCellResponse_ValidationMetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::ValidateSeigrCellResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::ValidateSeigrCellResponse, _impl_.is_valid_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::ValidateSeigrCellResponse, _impl_.validation_message_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::ValidateSeigrCellResponse, _impl_.validation_metadata_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::RetrieveSeigrCellRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::RetrieveSeigrCellRequest, _impl_.cell_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::RetrieveSeigrCellResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::RetrieveSeigrCellResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::RetrieveSeigrCellResponse, _impl_.cell_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::RetrieveSeigrCellResponse, _impl_.retrieval_timestamp_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::UpdateSeigrCellRequest_UpdatesEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::UpdateSeigrCellRequest_UpdatesEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::UpdateSeigrCellRequest_UpdatesEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::UpdateSeigrCellRequest_UpdatesEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::UpdateSeigrCellRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::UpdateSeigrCellRequest, _impl_.cell_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::UpdateSeigrCellRequest, _impl_.updates_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::UpdateSeigrCellResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::UpdateSeigrCellResponse, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::UpdateSeigrCellResponse, _impl_.message_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::ListSeigrCellsRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::ListSeigrCellsRequest, _impl_.tags_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::ListSeigrCellsRequest, _impl_.access_level_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::ListSeigrCellsRequest, _impl_.show_only_active_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::ListSeigrCellsResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::ListSeigrCellsResponse, _impl_.cells_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_cell::ListSeigrCellsResponse, _impl_.retrieval_timestamp_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 15, -1, sizeof(::seigr::seigr_cell::SeigrCell)},
        {22, 32, -1, sizeof(::seigr::seigr_cell::Metadata_MetadataExtrasEntry_DoNotUse)},
        {34, -1, -1, sizeof(::seigr::seigr_cell::Metadata)},
        {55, -1, -1, sizeof(::seigr::seigr_cell::CoordinateIndex)},
        {68, 78, -1, sizeof(::seigr::seigr_cell::RE_License_LicenseMetadataEntry_DoNotUse)},
        {80, 95, -1, sizeof(::seigr::seigr_cell::RE_License)},
        {102, -1, -1, sizeof(::seigr::seigr_cell::Permissions)},
        {116, -1, -1, sizeof(::seigr::seigr_cell::CustomProperty)},
        {128, -1, -1, sizeof(::seigr::seigr_cell::ValidateSeigrCellRequest)},
        {137, 147, -1, sizeof(::seigr::seigr_cell::ValidateSeigrCellResponse_ValidationMetadataEntry_DoNotUse)},
        {149, -1, -1, sizeof(::seigr::seigr_cell::ValidateSeigrCellResponse)},
        {160, -1, -1, sizeof(::seigr::seigr_cell::RetrieveSeigrCellRequest)},
        {169, 179, -1, sizeof(::seigr::seigr_cell::RetrieveSeigrCellResponse)},
        {181, 191, -1, sizeof(::seigr::seigr_cell::UpdateSeigrCellRequest_UpdatesEntry_DoNotUse)},
        {193, -1, -1, sizeof(::seigr::seigr_cell::UpdateSeigrCellRequest)},
        {203, -1, -1, sizeof(::seigr::seigr_cell::UpdateSeigrCellResponse)},
        {213, -1, -1, sizeof(::seigr::seigr_cell::ListSeigrCellsRequest)},
        {224, -1, -1, sizeof(::seigr::seigr_cell::ListSeigrCellsResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::seigr::seigr_cell::_SeigrCell_default_instance_._instance,
    &::seigr::seigr_cell::_Metadata_MetadataExtrasEntry_DoNotUse_default_instance_._instance,
    &::seigr::seigr_cell::_Metadata_default_instance_._instance,
    &::seigr::seigr_cell::_CoordinateIndex_default_instance_._instance,
    &::seigr::seigr_cell::_RE_License_LicenseMetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::seigr_cell::_RE_License_default_instance_._instance,
    &::seigr::seigr_cell::_Permissions_default_instance_._instance,
    &::seigr::seigr_cell::_CustomProperty_default_instance_._instance,
    &::seigr::seigr_cell::_ValidateSeigrCellRequest_default_instance_._instance,
    &::seigr::seigr_cell::_ValidateSeigrCellResponse_ValidationMetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::seigr_cell::_ValidateSeigrCellResponse_default_instance_._instance,
    &::seigr::seigr_cell::_RetrieveSeigrCellRequest_default_instance_._instance,
    &::seigr::seigr_cell::_RetrieveSeigrCellResponse_default_instance_._instance,
    &::seigr::seigr_cell::_UpdateSeigrCellRequest_UpdatesEntry_DoNotUse_default_instance_._instance,
    &::seigr::seigr_cell::_UpdateSeigrCellRequest_default_instance_._instance,
    &::seigr::seigr_cell::_UpdateSeigrCellResponse_default_instance_._instance,
    &::seigr::seigr_cell::_ListSeigrCellsRequest_default_instance_._instance,
    &::seigr::seigr_cell::_ListSeigrCellsResponse_default_instance_._instance,
};
const char descriptor_table_protodef_seigr_5fcell_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\020seigr_cell.proto\022\020seigr.seigr_cell\"\303\002\n"
    "\tSeigrCell\022\024\n\014data_content\030\001 \001(\014\022!\n\031prim"
    "ary_redundancy_marker\030\002 \001(\014\022#\n\033secondary"
    "_redundancy_marker\030\003 \001(\014\022,\n\010metadata\030\004 \001"
    "(\0132\032.seigr.seigr_cell.Metadata\022;\n\020coordi"
    "nate_index\030\005 \001(\0132!.seigr.seigr_cell.Coor"
    "dinateIndex\0220\n\nre_license\030\006 \001(\0132\034.seigr."
    "seigr_cell.RE_License\022;\n\021custom_properti"
    "es\030\007 \003(\0132 .seigr.seigr_cell.CustomProper"
    "ty\"\215\003\n\010Metadata\022\017\n\007cell_id\030\001 \001(\t\022\026\n\016cont"
    "ributor_id\030\002 \001(\t\022\021\n\ttimestamp\030\003 \001(\t\022\017\n\007v"
    "ersion\030\004 \001(\t\022\021\n\thash_link\030\005 \001(\t\022\021\n\tdata_"
    "hash\030\006 \001(\t\022\024\n\014lineage_hash\030\007 \001(\t\022\024\n\014acce"
    "ss_level\030\010 \001(\t\022\014\n\004tags\030\t \003(\t\022\035\n\025compress"
    "ion_algorithm\030\n \001(\t\022\024\n\014is_encrypted\030\013 \001("
    "\010\022\037\n\027security_classification\030\014 \001(\t\022G\n\017me"
    "tadata_extras\030\r \003(\0132..seigr.seigr_cell.M"
    "etadata.MetadataExtrasEntry\0325\n\023MetadataE"
    "xtrasEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\002"
    "8\001\"V\n\017CoordinateIndex\022\t\n\001x\030\001 \001(\005\022\t\n\001y\030\002 "
    "\001(\005\022\t\n\001z\030\003 \001(\005\022\t\n\001t\030\004 \001(\t\022\027\n\017reference_f"
    "rame\030\005 \001(\t\"\263\002\n\nRE_License\022\024\n\014license_typ"
    "e\030\001 \001(\t\022\r\n\005terms\030\002 \001(\t\022\022\n\nlicense_id\030\003 \001"
    "(\t\022\024\n\014contributors\030\004 \003(\t\022\035\n\025ethical_use_"
    "guideline\030\005 \001(\t\0222\n\013permissions\030\006 \001(\0132\035.s"
    "eigr.seigr_cell.Permissions\022K\n\020license_m"
    "etadata\030\007 \003(\01321.seigr.seigr_cell.RE_Lice"
    "nse.LicenseMetadataEntry\0326\n\024LicenseMetad"
    "ataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001"
    "\"\270\001\n\013Permissions\022\032\n\022allow_modification\030\001"
    " \001(\010\022\031\n\021allow_derivatives\030\002 \001(\010\022\034\n\024allow"
    "_commercial_use\030\003 \001(\010\022\036\n\026geographic_rest"
    "riction\030\004 \001(\t\022\034\n\024temporal_restriction\030\005 "
    "\001(\t\022\026\n\016compliance_tag\030\006 \001(\t\"Y\n\016CustomPro"
    "perty\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t\022\025\n\rpro"
    "perty_type\030\003 \001(\t\022\024\n\014is_sensitive\030\004 \001(\010\"+"
    "\n\030ValidateSeigrCellRequest\022\017\n\007cell_id\030\001 "
    "\001(\t\"\346\001\n\031ValidateSeigrCellResponse\022\020\n\010is_"
    "valid\030\001 \001(\010\022\032\n\022validation_message\030\002 \001(\t\022"
    "`\n\023validation_metadata\030\003 \003(\0132C.seigr.sei"
    "gr_cell.ValidateSeigrCellResponse.Valida"
    "tionMetadataEntry\0329\n\027ValidationMetadataE"
    "ntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"+\n\030"
    "RetrieveSeigrCellRequest\022\017\n\007cell_id\030\001 \001("
    "\t\"c\n\031RetrieveSeigrCellResponse\022)\n\004cell\030\001"
    " \001(\0132\033.seigr.seigr_cell.SeigrCell\022\033\n\023ret"
    "rieval_timestamp\030\002 \001(\t\"\241\001\n\026UpdateSeigrCe"
    "llRequest\022\017\n\007cell_id\030\001 \001(\t\022F\n\007updates\030\002 "
    "\003(\01325.seigr.seigr_cell.UpdateSeigrCellRe"
    "quest.UpdatesEntry\032.\n\014UpdatesEntry\022\013\n\003ke"
    "y\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\";\n\027UpdateSeig"
    "rCellResponse\022\017\n\007success\030\001 \001(\010\022\017\n\007messag"
    "e\030\002 \001(\t\"U\n\025ListSeigrCellsRequest\022\014\n\004tags"
    "\030\001 \003(\t\022\024\n\014access_level\030\002 \001(\t\022\030\n\020show_onl"
    "y_active\030\003 \001(\010\"a\n\026ListSeigrCellsResponse"
    "\022*\n\005cells\030\001 \003(\0132\033.seigr.seigr_cell.Seigr"
    "Cell\022\033\n\023retrieval_timestamp\030\002 \001(\t2\273\003\n\020Se"
    "igrCellService\022l\n\021ValidateSeigrCell\022*.se"
    "igr.seigr_cell.ValidateSeigrCellRequest\032"
    "+.seigr.seigr_cell.ValidateSeigrCellResp"
    "onse\022l\n\021RetrieveSeigrCell\022*.seigr.seigr_"
    "cell.RetrieveSeigrCellRequest\032+.seigr.se"
    "igr_cell.RetrieveSeigrCellResponse\022f\n\017Up"
    "dateSeigrCell\022(.seigr.seigr_cell.UpdateS"
    "eigrCellRequest\032).seigr.seigr_cell.Updat"
    "eSeigrCellResponse\022c\n\016ListSeigrCells\022\'.s"
    "eigr.seigr_cell.ListSeigrCellsRequest\032(."
    "seigr.seigr_cell.ListSeigrCellsResponseb"
    "\006proto3"
};
static ::absl::once_flag descriptor_table_seigr_5fcell_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_seigr_5fcell_2eproto = {
    false,
    false,
    2727,
    descriptor_table_protodef_seigr_5fcell_2eproto,
    "seigr_cell.proto",
    &descriptor_table_seigr_5fcell_2eproto_once,
    nullptr,
    0,
    18,
    schemas,
    file_default_instances,
    TableStruct_seigr_5fcell_2eproto::offsets,
    file_level_enum_descriptors_seigr_5fcell_2eproto,
    file_level_service_descriptors_seigr_5fcell_2eproto,
};
namespace seigr {
namespace seigr_cell {
// ===================================================================

class SeigrCell::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SeigrCell>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SeigrCell, _impl_._has_bits_);
};

SeigrCell::SeigrCell(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.seigr_cell.SeigrCell)
}
inline PROTOBUF_NDEBUG_INLINE SeigrCell::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::seigr_cell::SeigrCell& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        custom_properties_{visibility, arena, from.custom_properties_},
        data_content_(arena, from.data_content_),
        primary_redundancy_marker_(arena, from.primary_redundancy_marker_),
        secondary_redundancy_marker_(arena, from.secondary_redundancy_marker_) {}

SeigrCell::SeigrCell(
    ::google::protobuf::Arena* arena,
    const SeigrCell& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SeigrCell* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.metadata_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::seigr::seigr_cell::Metadata>(
                              arena, *from._impl_.metadata_)
                        : nullptr;
  _impl_.coordinate_index_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::seigr::seigr_cell::CoordinateIndex>(
                              arena, *from._impl_.coordinate_index_)
                        : nullptr;
  _impl_.re_license_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::seigr::seigr_cell::RE_License>(
                              arena, *from._impl_.re_license_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:seigr.seigr_cell.SeigrCell)
}
inline PROTOBUF_NDEBUG_INLINE SeigrCell::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        custom_properties_{visibility, arena},
        data_content_(arena),
        primary_redundancy_marker_(arena),
        secondary_redundancy_marker_(arena) {}

inline void SeigrCell::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, metadata_),
           0,
           offsetof(Impl_, re_license_) -
               offsetof(Impl_, metadata_) +
               sizeof(Impl_::re_license_));
}
SeigrCell::~SeigrCell() {
  // @@protoc_insertion_point(destructor:seigr.seigr_cell.SeigrCell)
  SharedDtor(*this);
}
inline void SeigrCell::SharedDtor(MessageLite& self) {
  SeigrCell& this_ = static_cast<SeigrCell&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.data_content_.Destroy();
  this_._impl_.primary_redundancy_marker_.Destroy();
  this_._impl_.secondary_redundancy_marker_.Destroy();
  delete this_._impl_.metadata_;
  delete this_._impl_.coordinate_index_;
  delete this_._impl_.re_license_;
  this_._impl_.~Impl_();
}

inline void* SeigrCell::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SeigrCell(arena);
}
constexpr auto SeigrCell::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SeigrCell, _impl_.custom_properties_) +
          decltype(SeigrCell::_impl_.custom_properties_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(SeigrCell), alignof(SeigrCell), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SeigrCell::PlacementNew_,
                                 sizeof(SeigrCell),
                                 alignof(SeigrCell));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SeigrCell::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SeigrCell_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SeigrCell::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SeigrCell>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SeigrCell::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SeigrCell>(), &SeigrCell::ByteSizeLong,
            &SeigrCell::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SeigrCell, _impl_._cached_size_),
        false,
    },
    &SeigrCell::kDescriptorMethods,
    &descriptor_table_seigr_5fcell_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SeigrCell::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 4, 0, 2> SeigrCell::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SeigrCell, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::seigr_cell::SeigrCell>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes data_content = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SeigrCell, _impl_.data_content_)}},
    // bytes primary_redundancy_marker = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SeigrCell, _impl_.primary_redundancy_marker_)}},
    // bytes secondary_redundancy_marker = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(SeigrCell, _impl_.secondary_redundancy_marker_)}},
    // .seigr.seigr_cell.Metadata metadata = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(SeigrCell, _impl_.metadata_)}},
    // .seigr.seigr_cell.CoordinateIndex coordinate_index = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 1, PROTOBUF_FIELD_OFFSET(SeigrCell, _impl_.coordinate_index_)}},
    // .seigr.seigr_cell.RE_License re_license = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 2, 2, PROTOBUF_FIELD_OFFSET(SeigrCell, _impl_.re_license_)}},
    // repeated .seigr.seigr_cell.CustomProperty custom_properties = 7;
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 3, PROTOBUF_FIELD_OFFSET(SeigrCell, _impl_.custom_properties_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes data_content = 1;
    {PROTOBUF_FIELD_OFFSET(SeigrCell, _impl_.data_content_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes primary_redundancy_marker = 2;
    {PROTOBUF_FIELD_OFFSET(SeigrCell, _impl_.primary_redundancy_marker_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes secondary_redundancy_marker = 3;
    {PROTOBUF_FIELD_OFFSET(SeigrCell, _impl_.secondary_redundancy_marker_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // .seigr.seigr_cell.Metadata metadata = 4;
    {PROTOBUF_FIELD_OFFSET(SeigrCell, _impl_.metadata_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .seigr.seigr_cell.CoordinateIndex coordinate_index = 5;
    {PROTOBUF_FIELD_OFFSET(SeigrCell, _impl_.coordinate_index_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .seigr.seigr_cell.RE_License re_license = 6;
    {PROTOBUF_FIELD_OFFSET(SeigrCell, _impl_.re_license_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .seigr.seigr_cell.CustomProperty custom_properties = 7;
    {PROTOBUF_FIELD_OFFSET(SeigrCell, _impl_.custom_properties_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::seigr::seigr_cell::Metadata>()},
    {::_pbi::TcParser::GetTable<::seigr::seigr_cell::CoordinateIndex>()},
    {::_pbi::TcParser::GetTable<::seigr::seigr_cell::RE_License>()},
    {::_pbi::TcParser::GetTable<::seigr::seigr_cell::CustomProperty>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SeigrCell::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.seigr_cell.SeigrCell)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.custom_properties_.Clear();
  _impl_.data_content_.ClearToEmpty();
  _impl_.primary_redundancy_marker_.ClearToEmpty();
  _impl_.secondary_redundancy_marker_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.metadata_ != nullptr);
      _impl_.metadata_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.coordinate_index_ != nullptr);
      _impl_.coordinate_index_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.re_license_ != nullptr);
      _impl_.re_license_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SeigrCell::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SeigrCell& this_ = static_cast<const SeigrCell&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SeigrCell::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SeigrCell& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.seigr_cell.SeigrCell)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes data_content = 1;
          if (!this_._internal_data_content().empty()) {
            const std::string& _s = this_._internal_data_content();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          // bytes primary_redundancy_marker = 2;
          if (!this_._internal_primary_redundancy_marker().empty()) {
            const std::string& _s = this_._internal_primary_redundancy_marker();
            target = stream->WriteBytesMaybeAliased(2, _s, target);
          }

          // bytes secondary_redundancy_marker = 3;
          if (!this_._internal_secondary_redundancy_marker().empty()) {
            const std::string& _s = this_._internal_secondary_redundancy_marker();
            target = stream->WriteBytesMaybeAliased(3, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .seigr.seigr_cell.Metadata metadata = 4;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.metadata_, this_._impl_.metadata_->GetCachedSize(), target,
                stream);
          }

          // .seigr.seigr_cell.CoordinateIndex coordinate_index = 5;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.coordinate_index_, this_._impl_.coordinate_index_->GetCachedSize(), target,
                stream);
          }

          // .seigr.seigr_cell.RE_License re_license = 6;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.re_license_, this_._impl_.re_license_->GetCachedSize(), target,
                stream);
          }

          // repeated .seigr.seigr_cell.CustomProperty custom_properties = 7;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_custom_properties_size());
               i < n; i++) {
            const auto& repfield = this_._internal_custom_properties().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    7, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.seigr_cell.SeigrCell)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SeigrCell::ByteSizeLong(const MessageLite& base) {
          const SeigrCell& this_ = static_cast<const SeigrCell&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SeigrCell::ByteSizeLong() const {
          const SeigrCell& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.seigr_cell.SeigrCell)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .seigr.seigr_cell.CustomProperty custom_properties = 7;
            {
              total_size += 1UL * this_._internal_custom_properties_size();
              for (const auto& msg : this_._internal_custom_properties()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // bytes data_content = 1;
            if (!this_._internal_data_content().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_data_content());
            }
            // bytes primary_redundancy_marker = 2;
            if (!this_._internal_primary_redundancy_marker().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_primary_redundancy_marker());
            }
            // bytes secondary_redundancy_marker = 3;
            if (!this_._internal_secondary_redundancy_marker().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_secondary_redundancy_marker());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // .seigr.seigr_cell.Metadata metadata = 4;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.metadata_);
            }
            // .seigr.seigr_cell.CoordinateIndex coordinate_index = 5;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.coordinate_index_);
            }
            // .seigr.seigr_cell.RE_License re_license = 6;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.re_license_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SeigrCell::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SeigrCell*>(&to_msg);
  auto& from = static_cast<const SeigrCell&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.seigr_cell.SeigrCell)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_custom_properties()->MergeFrom(
      from._internal_custom_properties());
  if (!from._internal_data_content().empty()) {
    _this->_internal_set_data_content(from._internal_data_content());
  }
  if (!from._internal_primary_redundancy_marker().empty()) {
    _this->_internal_set_primary_redundancy_marker(from._internal_primary_redundancy_marker());
  }
  if (!from._internal_secondary_redundancy_marker().empty()) {
    _this->_internal_set_secondary_redundancy_marker(from._internal_secondary_redundancy_marker());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.metadata_ != nullptr);
      if (_this->_impl_.metadata_ == nullptr) {
        _this->_impl_.metadata_ =
            ::google::protobuf::Message::CopyConstruct<::seigr::seigr_cell::Metadata>(arena, *from._impl_.metadata_);
      } else {
        _this->_impl_.metadata_->MergeFrom(*from._impl_.metadata_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.coordinate_index_ != nullptr);
      if (_this->_impl_.coordinate_index_ == nullptr) {
        _this->_impl_.coordinate_index_ =
            ::google::protobuf::Message::CopyConstruct<::seigr::seigr_cell::CoordinateIndex>(arena, *from._impl_.coordinate_index_);
      } else {
        _this->_impl_.coordinate_index_->MergeFrom(*from._impl_.coordinate_index_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.re_license_ != nullptr);
      if (_this->_impl_.re_license_ == nullptr) {
        _this->_impl_.re_license_ =
            ::google::protobuf::Message::CopyConstruct<::seigr::seigr_cell::RE_License>(arena, *from._impl_.re_license_);
      } else {
        _this->_impl_.re_license_->MergeFrom(*from._impl_.re_license_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SeigrCell::CopyFrom(const SeigrCell& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.seigr_cell.SeigrCell)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SeigrCell::InternalSwap(SeigrCell* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.custom_properties_.InternalSwap(&other->_impl_.custom_properties_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_content_, &other->_impl_.data_content_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.primary_redundancy_marker_, &other->_impl_.primary_redundancy_marker_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.secondary_redundancy_marker_, &other->_impl_.secondary_redundancy_marker_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SeigrCell, _impl_.re_license_)
      + sizeof(SeigrCell::_impl_.re_license_)
      - PROTOBUF_FIELD_OFFSET(SeigrCell, _impl_.metadata_)>(
          reinterpret_cast<char*>(&_impl_.metadata_),
          reinterpret_cast<char*>(&other->_impl_.metadata_));
}

::google::protobuf::Metadata SeigrCell::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              Metadata_MetadataExtrasEntry_DoNotUse::Metadata_MetadataExtrasEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              Metadata_MetadataExtrasEntry_DoNotUse::Metadata_MetadataExtrasEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              Metadata_MetadataExtrasEntry_DoNotUse::Metadata_MetadataExtrasEntry_DoNotUse() : SuperType() {}
              Metadata_MetadataExtrasEntry_DoNotUse::Metadata_MetadataExtrasEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* Metadata_MetadataExtrasEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) Metadata_MetadataExtrasEntry_DoNotUse(arena);
              }
              constexpr auto Metadata_MetadataExtrasEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Metadata_MetadataExtrasEntry_DoNotUse),
                                                          alignof(Metadata_MetadataExtrasEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull Metadata_MetadataExtrasEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_Metadata_MetadataExtrasEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &Metadata_MetadataExtrasEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<Metadata_MetadataExtrasEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &Metadata_MetadataExtrasEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &Metadata_MetadataExtrasEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(Metadata_MetadataExtrasEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &Metadata_MetadataExtrasEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_seigr_5fcell_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* Metadata_MetadataExtrasEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 62, 2> Metadata_MetadataExtrasEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Metadata_MetadataExtrasEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::seigr_cell::Metadata_MetadataExtrasEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Metadata_MetadataExtrasEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Metadata_MetadataExtrasEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(Metadata_MetadataExtrasEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(Metadata_MetadataExtrasEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\55\3\5\0\0\0\0\0"
    "seigr.seigr_cell.Metadata.MetadataExtrasEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class Metadata::_Internal {
 public:
};

Metadata::Metadata(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.seigr_cell.Metadata)
}
inline PROTOBUF_NDEBUG_INLINE Metadata::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::seigr_cell::Metadata& from_msg)
      : tags_{visibility, arena, from.tags_},
        metadata_extras_{visibility, arena, from.metadata_extras_},
        cell_id_(arena, from.cell_id_),
        contributor_id_(arena, from.contributor_id_),
        timestamp_(arena, from.timestamp_),
        version_(arena, from.version_),
        hash_link_(arena, from.hash_link_),
        data_hash_(arena, from.data_hash_),
        lineage_hash_(arena, from.lineage_hash_),
        access_level_(arena, from.access_level_),
        compression_algorithm_(arena, from.compression_algorithm_),
        security_classification_(arena, from.security_classification_),
        _cached_size_{0} {}

Metadata::Metadata(
    ::google::protobuf::Arena* arena,
    const Metadata& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Metadata* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.is_encrypted_ = from._impl_.is_encrypted_;

  // @@protoc_insertion_point(copy_constructor:seigr.seigr_cell.Metadata)
}
inline PROTOBUF_NDEBUG_INLINE Metadata::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : tags_{visibility, arena},
        metadata_extras_{visibility, arena},
        cell_id_(arena),
        contributor_id_(arena),
        timestamp_(arena),
        version_(arena),
        hash_link_(arena),
        data_hash_(arena),
        lineage_hash_(arena),
        access_level_(arena),
        compression_algorithm_(arena),
        security_classification_(arena),
        _cached_size_{0} {}

inline void Metadata::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.is_encrypted_ = {};
}
Metadata::~Metadata() {
  // @@protoc_insertion_point(destructor:seigr.seigr_cell.Metadata)
  SharedDtor(*this);
}
inline void Metadata::SharedDtor(MessageLite& self) {
  Metadata& this_ = static_cast<Metadata&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.cell_id_.Destroy();
  this_._impl_.contributor_id_.Destroy();
  this_._impl_.timestamp_.Destroy();
  this_._impl_.version_.Destroy();
  this_._impl_.hash_link_.Destroy();
  this_._impl_.data_hash_.Destroy();
  this_._impl_.lineage_hash_.Destroy();
  this_._impl_.access_level_.Destroy();
  this_._impl_.compression_algorithm_.Destroy();
  this_._impl_.security_classification_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Metadata::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Metadata(arena);
}
constexpr auto Metadata::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Metadata, _impl_.tags_) +
          decltype(Metadata::_impl_.tags_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Metadata, _impl_.metadata_extras_) +
          decltype(Metadata::_impl_.metadata_extras_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Metadata, _impl_.metadata_extras_) +
          decltype(Metadata::_impl_.metadata_extras_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Metadata), alignof(Metadata), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Metadata::PlacementNew_,
                                 sizeof(Metadata),
                                 alignof(Metadata));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Metadata::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Metadata_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Metadata::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Metadata>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Metadata::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Metadata>(), &Metadata::ByteSizeLong,
            &Metadata::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Metadata, _impl_._cached_size_),
        false,
    },
    &Metadata::kDescriptorMethods,
    &descriptor_table_seigr_5fcell_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Metadata::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 13, 1, 184, 2> Metadata::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    13, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294959104,  // skipmap
    offsetof(decltype(_table_), field_entries),
    13,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::seigr_cell::Metadata>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string cell_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Metadata, _impl_.cell_id_)}},
    // string contributor_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Metadata, _impl_.contributor_id_)}},
    // string timestamp = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Metadata, _impl_.timestamp_)}},
    // string version = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Metadata, _impl_.version_)}},
    // string hash_link = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Metadata, _impl_.hash_link_)}},
    // string data_hash = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Metadata, _impl_.data_hash_)}},
    // string lineage_hash = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(Metadata, _impl_.lineage_hash_)}},
    // string access_level = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(Metadata, _impl_.access_level_)}},
    // repeated string tags = 9;
    {::_pbi::TcParser::FastUR1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(Metadata, _impl_.tags_)}},
    // string compression_algorithm = 10;
    {::_pbi::TcParser::FastUS1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(Metadata, _impl_.compression_algorithm_)}},
    // bool is_encrypted = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Metadata, _impl_.is_encrypted_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(Metadata, _impl_.is_encrypted_)}},
    // string security_classification = 12;
    {::_pbi::TcParser::FastUS1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(Metadata, _impl_.security_classification_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string cell_id = 1;
    {PROTOBUF_FIELD_OFFSET(Metadata, _impl_.cell_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string contributor_id = 2;
    {PROTOBUF_FIELD_OFFSET(Metadata, _impl_.contributor_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string timestamp = 3;
    {PROTOBUF_FIELD_OFFSET(Metadata, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string version = 4;
    {PROTOBUF_FIELD_OFFSET(Metadata, _impl_.version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string hash_link = 5;
    {PROTOBUF_FIELD_OFFSET(Metadata, _impl_.hash_link_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string data_hash = 6;
    {PROTOBUF_FIELD_OFFSET(Metadata, _impl_.data_hash_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string lineage_hash = 7;
    {PROTOBUF_FIELD_OFFSET(Metadata, _impl_.lineage_hash_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string access_level = 8;
    {PROTOBUF_FIELD_OFFSET(Metadata, _impl_.access_level_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string tags = 9;
    {PROTOBUF_FIELD_OFFSET(Metadata, _impl_.tags_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // string compression_algorithm = 10;
    {PROTOBUF_FIELD_OFFSET(Metadata, _impl_.compression_algorithm_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool is_encrypted = 11;
    {PROTOBUF_FIELD_OFFSET(Metadata, _impl_.is_encrypted_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string security_classification = 12;
    {PROTOBUF_FIELD_OFFSET(Metadata, _impl_.security_classification_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> metadata_extras = 13;
    {PROTOBUF_FIELD_OFFSET(Metadata, _impl_.metadata_extras_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(Metadata()._impl_.metadata_extras_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\31\7\16\11\7\11\11\14\14\4\25\0\27\17\0\0"
    "seigr.seigr_cell.Metadata"
    "cell_id"
    "contributor_id"
    "timestamp"
    "version"
    "hash_link"
    "data_hash"
    "lineage_hash"
    "access_level"
    "tags"
    "compression_algorithm"
    "security_classification"
    "metadata_extras"
  }},
};

PROTOBUF_NOINLINE void Metadata::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.seigr_cell.Metadata)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tags_.Clear();
  _impl_.metadata_extras_.Clear();
  _impl_.cell_id_.ClearToEmpty();
  _impl_.contributor_id_.ClearToEmpty();
  _impl_.timestamp_.ClearToEmpty();
  _impl_.version_.ClearToEmpty();
  _impl_.hash_link_.ClearToEmpty();
  _impl_.data_hash_.ClearToEmpty();
  _impl_.lineage_hash_.ClearToEmpty();
  _impl_.access_level_.ClearToEmpty();
  _impl_.compression_algorithm_.ClearToEmpty();
  _impl_.security_classification_.ClearToEmpty();
  _impl_.is_encrypted_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Metadata::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Metadata& this_ = static_cast<const Metadata&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Metadata::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Metadata& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.seigr_cell.Metadata)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string cell_id = 1;
          if (!this_._internal_cell_id().empty()) {
            const std::string& _s = this_._internal_cell_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_cell.Metadata.cell_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string contributor_id = 2;
          if (!this_._internal_contributor_id().empty()) {
            const std::string& _s = this_._internal_contributor_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_cell.Metadata.contributor_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string timestamp = 3;
          if (!this_._internal_timestamp().empty()) {
            const std::string& _s = this_._internal_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_cell.Metadata.timestamp");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string version = 4;
          if (!this_._internal_version().empty()) {
            const std::string& _s = this_._internal_version();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_cell.Metadata.version");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string hash_link = 5;
          if (!this_._internal_hash_link().empty()) {
            const std::string& _s = this_._internal_hash_link();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_cell.Metadata.hash_link");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string data_hash = 6;
          if (!this_._internal_data_hash().empty()) {
            const std::string& _s = this_._internal_data_hash();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_cell.Metadata.data_hash");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // string lineage_hash = 7;
          if (!this_._internal_lineage_hash().empty()) {
            const std::string& _s = this_._internal_lineage_hash();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_cell.Metadata.lineage_hash");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // string access_level = 8;
          if (!this_._internal_access_level().empty()) {
            const std::string& _s = this_._internal_access_level();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_cell.Metadata.access_level");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          // repeated string tags = 9;
          for (int i = 0, n = this_._internal_tags_size(); i < n; ++i) {
            const auto& s = this_._internal_tags().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_cell.Metadata.tags");
            target = stream->WriteString(9, s, target);
          }

          // string compression_algorithm = 10;
          if (!this_._internal_compression_algorithm().empty()) {
            const std::string& _s = this_._internal_compression_algorithm();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_cell.Metadata.compression_algorithm");
            target = stream->WriteStringMaybeAliased(10, _s, target);
          }

          // bool is_encrypted = 11;
          if (this_._internal_is_encrypted() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                11, this_._internal_is_encrypted(), target);
          }

          // string security_classification = 12;
          if (!this_._internal_security_classification().empty()) {
            const std::string& _s = this_._internal_security_classification();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_cell.Metadata.security_classification");
            target = stream->WriteStringMaybeAliased(12, _s, target);
          }

          // map<string, string> metadata_extras = 13;
          if (!this_._internal_metadata_extras().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_metadata_extras();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    13, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_cell.Metadata.metadata_extras");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_cell.Metadata.metadata_extras");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    13, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_cell.Metadata.metadata_extras");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_cell.Metadata.metadata_extras");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.seigr_cell.Metadata)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Metadata::ByteSizeLong(const MessageLite& base) {
          const Metadata& this_ = static_cast<const Metadata&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Metadata::ByteSizeLong() const {
          const Metadata& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.seigr_cell.Metadata)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string tags = 9;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_tags().size());
              for (int i = 0, n = this_._internal_tags().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_tags().Get(i));
              }
            }
            // map<string, string> metadata_extras = 13;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_metadata_extras_size());
              for (const auto& entry : this_._internal_metadata_extras()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string cell_id = 1;
            if (!this_._internal_cell_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_cell_id());
            }
            // string contributor_id = 2;
            if (!this_._internal_contributor_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_contributor_id());
            }
            // string timestamp = 3;
            if (!this_._internal_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_timestamp());
            }
            // string version = 4;
            if (!this_._internal_version().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_version());
            }
            // string hash_link = 5;
            if (!this_._internal_hash_link().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_hash_link());
            }
            // string data_hash = 6;
            if (!this_._internal_data_hash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_data_hash());
            }
            // string lineage_hash = 7;
            if (!this_._internal_lineage_hash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_lineage_hash());
            }
            // string access_level = 8;
            if (!this_._internal_access_level().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_access_level());
            }
            // string compression_algorithm = 10;
            if (!this_._internal_compression_algorithm().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_compression_algorithm());
            }
            // string security_classification = 12;
            if (!this_._internal_security_classification().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_security_classification());
            }
            // bool is_encrypted = 11;
            if (this_._internal_is_encrypted() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Metadata::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Metadata*>(&to_msg);
  auto& from = static_cast<const Metadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.seigr_cell.Metadata)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_tags()->MergeFrom(from._internal_tags());
  _this->_impl_.metadata_extras_.MergeFrom(from._impl_.metadata_extras_);
  if (!from._internal_cell_id().empty()) {
    _this->_internal_set_cell_id(from._internal_cell_id());
  }
  if (!from._internal_contributor_id().empty()) {
    _this->_internal_set_contributor_id(from._internal_contributor_id());
  }
  if (!from._internal_timestamp().empty()) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (!from._internal_version().empty()) {
    _this->_internal_set_version(from._internal_version());
  }
  if (!from._internal_hash_link().empty()) {
    _this->_internal_set_hash_link(from._internal_hash_link());
  }
  if (!from._internal_data_hash().empty()) {
    _this->_internal_set_data_hash(from._internal_data_hash());
  }
  if (!from._internal_lineage_hash().empty()) {
    _this->_internal_set_lineage_hash(from._internal_lineage_hash());
  }
  if (!from._internal_access_level().empty()) {
    _this->_internal_set_access_level(from._internal_access_level());
  }
  if (!from._internal_compression_algorithm().empty()) {
    _this->_internal_set_compression_algorithm(from._internal_compression_algorithm());
  }
  if (!from._internal_security_classification().empty()) {
    _this->_internal_set_security_classification(from._internal_security_classification());
  }
  if (from._internal_is_encrypted() != 0) {
    _this->_impl_.is_encrypted_ = from._impl_.is_encrypted_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Metadata::CopyFrom(const Metadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.seigr_cell.Metadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Metadata::InternalSwap(Metadata* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.tags_.InternalSwap(&other->_impl_.tags_);
  _impl_.metadata_extras_.InternalSwap(&other->_impl_.metadata_extras_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cell_id_, &other->_impl_.cell_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.contributor_id_, &other->_impl_.contributor_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.timestamp_, &other->_impl_.timestamp_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.version_, &other->_impl_.version_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hash_link_, &other->_impl_.hash_link_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_hash_, &other->_impl_.data_hash_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.lineage_hash_, &other->_impl_.lineage_hash_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.access_level_, &other->_impl_.access_level_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.compression_algorithm_, &other->_impl_.compression_algorithm_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.security_classification_, &other->_impl_.security_classification_, arena);
        swap(_impl_.is_encrypted_, other->_impl_.is_encrypted_);
}

::google::protobuf::Metadata Metadata::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CoordinateIndex::_Internal {
 public:
};

CoordinateIndex::CoordinateIndex(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.seigr_cell.CoordinateIndex)
}
inline PROTOBUF_NDEBUG_INLINE CoordinateIndex::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::seigr_cell::CoordinateIndex& from_msg)
      : t_(arena, from.t_),
        reference_frame_(arena, from.reference_frame_),
        _cached_size_{0} {}

CoordinateIndex::CoordinateIndex(
    ::google::protobuf::Arena* arena,
    const CoordinateIndex& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CoordinateIndex* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, x_),
           offsetof(Impl_, z_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::z_));

  // @@protoc_insertion_point(copy_constructor:seigr.seigr_cell.CoordinateIndex)
}
inline PROTOBUF_NDEBUG_INLINE CoordinateIndex::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : t_(arena),
        reference_frame_(arena),
        _cached_size_{0} {}

inline void CoordinateIndex::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, z_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::z_));
}
CoordinateIndex::~CoordinateIndex() {
  // @@protoc_insertion_point(destructor:seigr.seigr_cell.CoordinateIndex)
  SharedDtor(*this);
}
inline void CoordinateIndex::SharedDtor(MessageLite& self) {
  CoordinateIndex& this_ = static_cast<CoordinateIndex&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.t_.Destroy();
  this_._impl_.reference_frame_.Destroy();
  this_._impl_.~Impl_();
}

inline void* CoordinateIndex::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CoordinateIndex(arena);
}
constexpr auto CoordinateIndex::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CoordinateIndex),
                                            alignof(CoordinateIndex));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CoordinateIndex::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CoordinateIndex_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CoordinateIndex::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CoordinateIndex>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CoordinateIndex::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CoordinateIndex>(), &CoordinateIndex::ByteSizeLong,
            &CoordinateIndex::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_._cached_size_),
        false,
    },
    &CoordinateIndex::kDescriptorMethods,
    &descriptor_table_seigr_5fcell_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CoordinateIndex::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 57, 2> CoordinateIndex::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::seigr_cell::CoordinateIndex>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 x = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CoordinateIndex, _impl_.x_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_.x_)}},
    // int32 y = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CoordinateIndex, _impl_.y_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_.y_)}},
    // int32 z = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CoordinateIndex, _impl_.z_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_.z_)}},
    // string t = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_.t_)}},
    // string reference_frame = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_.reference_frame_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 x = 1;
    {PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 y = 2;
    {PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 z = 3;
    {PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_.z_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string t = 4;
    {PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_.t_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string reference_frame = 5;
    {PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_.reference_frame_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\40\0\0\0\1\17\0\0"
    "seigr.seigr_cell.CoordinateIndex"
    "t"
    "reference_frame"
  }},
};

PROTOBUF_NOINLINE void CoordinateIndex::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.seigr_cell.CoordinateIndex)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.t_.ClearToEmpty();
  _impl_.reference_frame_.ClearToEmpty();
  ::memset(&_impl_.x_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.z_) -
      reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.z_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CoordinateIndex::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CoordinateIndex& this_ = static_cast<const CoordinateIndex&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CoordinateIndex::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CoordinateIndex& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.seigr_cell.CoordinateIndex)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 x = 1;
          if (this_._internal_x() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_x(), target);
          }

          // int32 y = 2;
          if (this_._internal_y() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_y(), target);
          }

          // int32 z = 3;
          if (this_._internal_z() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_z(), target);
          }

          // string t = 4;
          if (!this_._internal_t().empty()) {
            const std::string& _s = this_._internal_t();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_cell.CoordinateIndex.t");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string reference_frame = 5;
          if (!this_._internal_reference_frame().empty()) {
            const std::string& _s = this_._internal_reference_frame();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_cell.CoordinateIndex.reference_frame");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.seigr_cell.CoordinateIndex)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CoordinateIndex::ByteSizeLong(const MessageLite& base) {
          const CoordinateIndex& this_ = static_cast<const CoordinateIndex&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CoordinateIndex::ByteSizeLong() const {
          const CoordinateIndex& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.seigr_cell.CoordinateIndex)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string t = 4;
            if (!this_._internal_t().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_t());
            }
            // string reference_frame = 5;
            if (!this_._internal_reference_frame().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_reference_frame());
            }
            // int32 x = 1;
            if (this_._internal_x() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_x());
            }
            // int32 y = 2;
            if (this_._internal_y() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_y());
            }
            // int32 z = 3;
            if (this_._internal_z() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_z());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CoordinateIndex::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CoordinateIndex*>(&to_msg);
  auto& from = static_cast<const CoordinateIndex&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.seigr_cell.CoordinateIndex)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_t().empty()) {
    _this->_internal_set_t(from._internal_t());
  }
  if (!from._internal_reference_frame().empty()) {
    _this->_internal_set_reference_frame(from._internal_reference_frame());
  }
  if (from._internal_x() != 0) {
    _this->_impl_.x_ = from._impl_.x_;
  }
  if (from._internal_y() != 0) {
    _this->_impl_.y_ = from._impl_.y_;
  }
  if (from._internal_z() != 0) {
    _this->_impl_.z_ = from._impl_.z_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CoordinateIndex::CopyFrom(const CoordinateIndex& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.seigr_cell.CoordinateIndex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CoordinateIndex::InternalSwap(CoordinateIndex* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.t_, &other->_impl_.t_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reference_frame_, &other->_impl_.reference_frame_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_.z_)
      + sizeof(CoordinateIndex::_impl_.z_)
      - PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata CoordinateIndex::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              RE_License_LicenseMetadataEntry_DoNotUse::RE_License_LicenseMetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              RE_License_LicenseMetadataEntry_DoNotUse::RE_License_LicenseMetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              RE_License_LicenseMetadataEntry_DoNotUse::RE_License_LicenseMetadataEntry_DoNotUse() : SuperType() {}
              RE_License_LicenseMetadataEntry_DoNotUse::RE_License_LicenseMetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* RE_License_LicenseMetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) RE_License_LicenseMetadataEntry_DoNotUse(arena);
              }
              constexpr auto RE_License_LicenseMetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RE_License_LicenseMetadataEntry_DoNotUse),
                                                          alignof(RE_License_LicenseMetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull RE_License_LicenseMetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_RE_License_LicenseMetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &RE_License_LicenseMetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<RE_License_LicenseMetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &RE_License_LicenseMetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &RE_License_LicenseMetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(RE_License_LicenseMetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &RE_License_LicenseMetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_seigr_5fcell_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* RE_License_LicenseMetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 65, 2> RE_License_LicenseMetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RE_License_LicenseMetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::seigr_cell::RE_License_LicenseMetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RE_License_LicenseMetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RE_License_LicenseMetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(RE_License_LicenseMetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(RE_License_LicenseMetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\60\3\5\0\0\0\0\0"
    "seigr.seigr_cell.RE_License.LicenseMetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class RE_License::_Internal {
 public:
  using HasBits =
      decltype(std::declval<RE_License>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RE_License, _impl_._has_bits_);
};

RE_License::RE_License(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.seigr_cell.RE_License)
}
inline PROTOBUF_NDEBUG_INLINE RE_License::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::seigr_cell::RE_License& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        contributors_{visibility, arena, from.contributors_},
        license_metadata_{visibility, arena, from.license_metadata_},
        license_type_(arena, from.license_type_),
        terms_(arena, from.terms_),
        license_id_(arena, from.license_id_),
        ethical_use_guideline_(arena, from.ethical_use_guideline_) {}

RE_License::RE_License(
    ::google::protobuf::Arena* arena,
    const RE_License& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RE_License* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.permissions_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::seigr::seigr_cell::Permissions>(
                              arena, *from._impl_.permissions_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:seigr.seigr_cell.RE_License)
}
inline PROTOBUF_NDEBUG_INLINE RE_License::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        contributors_{visibility, arena},
        license_metadata_{visibility, arena},
        license_type_(arena),
        terms_(arena),
        license_id_(arena),
        ethical_use_guideline_(arena) {}

inline void RE_License::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.permissions_ = {};
}
RE_License::~RE_License() {
  // @@protoc_insertion_point(destructor:seigr.seigr_cell.RE_License)
  SharedDtor(*this);
}
inline void RE_License::SharedDtor(MessageLite& self) {
  RE_License& this_ = static_cast<RE_License&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.license_type_.Destroy();
  this_._impl_.terms_.Destroy();
  this_._impl_.license_id_.Destroy();
  this_._impl_.ethical_use_guideline_.Destroy();
  delete this_._impl_.permissions_;
  this_._impl_.~Impl_();
}

inline void* RE_License::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RE_License(arena);
}
constexpr auto RE_License::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RE_License, _impl_.contributors_) +
          decltype(RE_License::_impl_.contributors_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RE_License, _impl_.license_metadata_) +
          decltype(RE_License::_impl_.license_metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RE_License, _impl_.license_metadata_) +
          decltype(RE_License::_impl_.license_metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(RE_License), alignof(RE_License), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RE_License::PlacementNew_,
                                 sizeof(RE_License),
                                 alignof(RE_License));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RE_License::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RE_License_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RE_License::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RE_License>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RE_License::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RE_License>(), &RE_License::ByteSizeLong,
            &RE_License::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RE_License, _impl_._cached_size_),
        false,
    },
    &RE_License::kDescriptorMethods,
    &descriptor_table_seigr_5fcell_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RE_License::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 2, 112, 2> RE_License::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RE_License, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::seigr_cell::RE_License>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string license_type = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RE_License, _impl_.license_type_)}},
    // string terms = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RE_License, _impl_.terms_)}},
    // string license_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(RE_License, _impl_.license_id_)}},
    // repeated string contributors = 4;
    {::_pbi::TcParser::FastUR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(RE_License, _impl_.contributors_)}},
    // string ethical_use_guideline = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(RE_License, _impl_.ethical_use_guideline_)}},
    // .seigr.seigr_cell.Permissions permissions = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(RE_License, _impl_.permissions_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string license_type = 1;
    {PROTOBUF_FIELD_OFFSET(RE_License, _impl_.license_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string terms = 2;
    {PROTOBUF_FIELD_OFFSET(RE_License, _impl_.terms_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string license_id = 3;
    {PROTOBUF_FIELD_OFFSET(RE_License, _impl_.license_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string contributors = 4;
    {PROTOBUF_FIELD_OFFSET(RE_License, _impl_.contributors_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // string ethical_use_guideline = 5;
    {PROTOBUF_FIELD_OFFSET(RE_License, _impl_.ethical_use_guideline_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.seigr_cell.Permissions permissions = 6;
    {PROTOBUF_FIELD_OFFSET(RE_License, _impl_.permissions_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<string, string> license_metadata = 7;
    {PROTOBUF_FIELD_OFFSET(RE_License, _impl_.license_metadata_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetTable<::seigr::seigr_cell::Permissions>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(RE_License()._impl_.license_metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\33\14\5\12\14\25\0\20"
    "seigr.seigr_cell.RE_License"
    "license_type"
    "terms"
    "license_id"
    "contributors"
    "ethical_use_guideline"
    "license_metadata"
  }},
};

PROTOBUF_NOINLINE void RE_License::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.seigr_cell.RE_License)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.contributors_.Clear();
  _impl_.license_metadata_.Clear();
  _impl_.license_type_.ClearToEmpty();
  _impl_.terms_.ClearToEmpty();
  _impl_.license_id_.ClearToEmpty();
  _impl_.ethical_use_guideline_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.permissions_ != nullptr);
    _impl_.permissions_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RE_License::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RE_License& this_ = static_cast<const RE_License&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RE_License::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RE_License& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.seigr_cell.RE_License)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string license_type = 1;
          if (!this_._internal_license_type().empty()) {
            const std::string& _s = this_._internal_license_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_cell.RE_License.license_type");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string terms = 2;
          if (!this_._internal_terms().empty()) {
            const std::string& _s = this_._internal_terms();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_cell.RE_License.terms");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string license_id = 3;
          if (!this_._internal_license_id().empty()) {
            const std::string& _s = this_._internal_license_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_cell.RE_License.license_id");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // repeated string contributors = 4;
          for (int i = 0, n = this_._internal_contributors_size(); i < n; ++i) {
            const auto& s = this_._internal_contributors().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_cell.RE_License.contributors");
            target = stream->WriteString(4, s, target);
          }

          // string ethical_use_guideline = 5;
          if (!this_._internal_ethical_use_guideline().empty()) {
            const std::string& _s = this_._internal_ethical_use_guideline();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_cell.RE_License.ethical_use_guideline");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .seigr.seigr_cell.Permissions permissions = 6;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.permissions_, this_._impl_.permissions_->GetCachedSize(), target,
                stream);
          }

          // map<string, string> license_metadata = 7;
          if (!this_._internal_license_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_license_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_cell.RE_License.license_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_cell.RE_License.license_metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_cell.RE_License.license_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_cell.RE_License.license_metadata");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.seigr_cell.RE_License)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RE_License::ByteSizeLong(const MessageLite& base) {
          const RE_License& this_ = static_cast<const RE_License&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RE_License::ByteSizeLong() const {
          const RE_License& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.seigr_cell.RE_License)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string contributors = 4;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_contributors().size());
              for (int i = 0, n = this_._internal_contributors().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_contributors().Get(i));
              }
            }
            // map<string, string> license_metadata = 7;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_license_metadata_size());
              for (const auto& entry : this_._internal_license_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string license_type = 1;
            if (!this_._internal_license_type().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_license_type());
            }
            // string terms = 2;
            if (!this_._internal_terms().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_terms());
            }
            // string license_id = 3;
            if (!this_._internal_license_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_license_id());
            }
            // string ethical_use_guideline = 5;
            if (!this_._internal_ethical_use_guideline().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_ethical_use_guideline());
            }
          }
           {
            // .seigr.seigr_cell.Permissions permissions = 6;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.permissions_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RE_License::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RE_License*>(&to_msg);
  auto& from = static_cast<const RE_License&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.seigr_cell.RE_License)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_contributors()->MergeFrom(from._internal_contributors());
  _this->_impl_.license_metadata_.MergeFrom(from._impl_.license_metadata_);
  if (!from._internal_license_type().empty()) {
    _this->_internal_set_license_type(from._internal_license_type());
  }
  if (!from._internal_terms().empty()) {
    _this->_internal_set_terms(from._internal_terms());
  }
  if (!from._internal_license_id().empty()) {
    _this->_internal_set_license_id(from._internal_license_id());
  }
  if (!from._internal_ethical_use_guideline().empty()) {
    _this->_internal_set_ethical_use_guideline(from._internal_ethical_use_guideline());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.permissions_ != nullptr);
    if (_this->_impl_.permissions_ == nullptr) {
      _this->_impl_.permissions_ =
          ::google::protobuf::Message::CopyConstruct<::seigr::seigr_cell::Permissions>(arena, *from._impl_.permissions_);
    } else {
      _this->_impl_.permissions_->MergeFrom(*from._impl_.permissions_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RE_License::CopyFrom(const RE_License& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.seigr_cell.RE_License)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RE_License::InternalSwap(RE_License* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.contributors_.InternalSwap(&other->_impl_.contributors_);
  _impl_.license_metadata_.InternalSwap(&other->_impl_.license_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.license_type_, &other->_impl_.license_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.terms_, &other->_impl_.terms_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.license_id_, &other->_impl_.license_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ethical_use_guideline_, &other->_impl_.ethical_use_guideline_, arena);
  swap(_impl_.permissions_, other->_impl_.permissions_);
}

::google::protobuf::Metadata RE_License::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Permissions::_Internal {
 public:
};

Permissions::Permissions(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.seigr_cell.Permissions)
}
inline PROTOBUF_NDEBUG_INLINE Permissions::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::seigr_cell::Permissions& from_msg)
      : geographic_restriction_(arena, from.geographic_restriction_),
        temporal_restriction_(arena, from.temporal_restriction_),
        compliance_tag_(arena, from.compliance_tag_),
        _cached_size_{0} {}

Permissions::Permissions(
    ::google::protobuf::Arena* arena,
    const Permissions& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Permissions* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, allow_modification_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, allow_modification_),
           offsetof(Impl_, allow_commercial_use_) -
               offsetof(Impl_, allow_modification_) +
               sizeof(Impl_::allow_commercial_use_));

  // @@protoc_insertion_point(copy_constructor:seigr.seigr_cell.Permissions)
}
inline PROTOBUF_NDEBUG_INLINE Permissions::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : geographic_restriction_(arena),
        temporal_restriction_(arena),
        compliance_tag_(arena),
        _cached_size_{0} {}

inline void Permissions::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, allow_modification_),
           0,
           offsetof(Impl_, allow_commercial_use_) -
               offsetof(Impl_, allow_modification_) +
               sizeof(Impl_::allow_commercial_use_));
}
Permissions::~Permissions() {
  // @@protoc_insertion_point(destructor:seigr.seigr_cell.Permissions)
  SharedDtor(*this);
}
inline void Permissions::SharedDtor(MessageLite& self) {
  Permissions& this_ = static_cast<Permissions&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.geographic_restriction_.Destroy();
  this_._impl_.temporal_restriction_.Destroy();
  this_._impl_.compliance_tag_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Permissions::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Permissions(arena);
}
constexpr auto Permissions::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Permissions),
                                            alignof(Permissions));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Permissions::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Permissions_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Permissions::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Permissions>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Permissions::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Permissions>(), &Permissions::ByteSizeLong,
            &Permissions::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Permissions, _impl_._cached_size_),
        false,
    },
    &Permissions::kDescriptorMethods,
    &descriptor_table_seigr_5fcell_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Permissions::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 93, 2> Permissions::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::seigr_cell::Permissions>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool allow_modification = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Permissions, _impl_.allow_modification_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Permissions, _impl_.allow_modification_)}},
    // bool allow_derivatives = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Permissions, _impl_.allow_derivatives_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Permissions, _impl_.allow_derivatives_)}},
    // bool allow_commercial_use = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Permissions, _impl_.allow_commercial_use_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Permissions, _impl_.allow_commercial_use_)}},
    // string geographic_restriction = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Permissions, _impl_.geographic_restriction_)}},
    // string temporal_restriction = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Permissions, _impl_.temporal_restriction_)}},
    // string compliance_tag = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Permissions, _impl_.compliance_tag_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bool allow_modification = 1;
    {PROTOBUF_FIELD_OFFSET(Permissions, _impl_.allow_modification_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool allow_derivatives = 2;
    {PROTOBUF_FIELD_OFFSET(Permissions, _impl_.allow_derivatives_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool allow_commercial_use = 3;
    {PROTOBUF_FIELD_OFFSET(Permissions, _impl_.allow_commercial_use_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string geographic_restriction = 4;
    {PROTOBUF_FIELD_OFFSET(Permissions, _impl_.geographic_restriction_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string temporal_restriction = 5;
    {PROTOBUF_FIELD_OFFSET(Permissions, _impl_.temporal_restriction_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string compliance_tag = 6;
    {PROTOBUF_FIELD_OFFSET(Permissions, _impl_.compliance_tag_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\34\0\0\0\26\24\16\0"
    "seigr.seigr_cell.Permissions"
    "geographic_restriction"
    "temporal_restriction"
    "compliance_tag"
  }},
};

PROTOBUF_NOINLINE void Permissions::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.seigr_cell.Permissions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.geographic_restriction_.ClearToEmpty();
  _impl_.temporal_restriction_.ClearToEmpty();
  _impl_.compliance_tag_.ClearToEmpty();
  ::memset(&_impl_.allow_modification_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.allow_commercial_use_) -
      reinterpret_cast<char*>(&_impl_.allow_modification_)) + sizeof(_impl_.allow_commercial_use_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Permissions::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Permissions& this_ = static_cast<const Permissions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Permissions::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Permissions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.seigr_cell.Permissions)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool allow_modification = 1;
          if (this_._internal_allow_modification() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_allow_modification(), target);
          }

          // bool allow_derivatives = 2;
          if (this_._internal_allow_derivatives() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                2, this_._internal_allow_derivatives(), target);
          }

          // bool allow_commercial_use = 3;
          if (this_._internal_allow_commercial_use() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_allow_commercial_use(), target);
          }

          // string geographic_restriction = 4;
          if (!this_._internal_geographic_restriction().empty()) {
            const std::string& _s = this_._internal_geographic_restriction();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_cell.Permissions.geographic_restriction");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string temporal_restriction = 5;
          if (!this_._internal_temporal_restriction().empty()) {
            const std::string& _s = this_._internal_temporal_restriction();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_cell.Permissions.temporal_restriction");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string compliance_tag = 6;
          if (!this_._internal_compliance_tag().empty()) {
            const std::string& _s = this_._internal_compliance_tag();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_cell.Permissions.compliance_tag");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.seigr_cell.Permissions)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Permissions::ByteSizeLong(const MessageLite& base) {
          const Permissions& this_ = static_cast<const Permissions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Permissions::ByteSizeLong() const {
          const Permissions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.seigr_cell.Permissions)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string geographic_restriction = 4;
            if (!this_._internal_geographic_restriction().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_geographic_restriction());
            }
            // string temporal_restriction = 5;
            if (!this_._internal_temporal_restriction().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_temporal_restriction());
            }
            // string compliance_tag = 6;
            if (!this_._internal_compliance_tag().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_compliance_tag());
            }
            // bool allow_modification = 1;
            if (this_._internal_allow_modification() != 0) {
              total_size += 2;
            }
            // bool allow_derivatives = 2;
            if (this_._internal_allow_derivatives() != 0) {
              total_size += 2;
            }
            // bool allow_commercial_use = 3;
            if (this_._internal_allow_commercial_use() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Permissions::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Permissions*>(&to_msg);
  auto& from = static_cast<const Permissions&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.seigr_cell.Permissions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_geographic_restriction().empty()) {
    _this->_internal_set_geographic_restriction(from._internal_geographic_restriction());
  }
  if (!from._internal_temporal_restriction().empty()) {
    _this->_internal_set_temporal_restriction(from._internal_temporal_restriction());
  }
  if (!from._internal_compliance_tag().empty()) {
    _this->_internal_set_compliance_tag(from._internal_compliance_tag());
  }
  if (from._internal_allow_modification() != 0) {
    _this->_impl_.allow_modification_ = from._impl_.allow_modification_;
  }
  if (from._internal_allow_derivatives() != 0) {
    _this->_impl_.allow_derivatives_ = from._impl_.allow_derivatives_;
  }
  if (from._internal_allow_commercial_use() != 0) {
    _this->_impl_.allow_commercial_use_ = from._impl_.allow_commercial_use_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Permissions::CopyFrom(const Permissions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.seigr_cell.Permissions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Permissions::InternalSwap(Permissions* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.geographic_restriction_, &other->_impl_.geographic_restriction_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.temporal_restriction_, &other->_impl_.temporal_restriction_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.compliance_tag_, &other->_impl_.compliance_tag_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Permissions, _impl_.allow_commercial_use_)
      + sizeof(Permissions::_impl_.allow_commercial_use_)
      - PROTOBUF_FIELD_OFFSET(Permissions, _impl_.allow_modification_)>(
          reinterpret_cast<char*>(&_impl_.allow_modification_),
          reinterpret_cast<char*>(&other->_impl_.allow_modification_));
}

::google::protobuf::Metadata Permissions::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CustomProperty::_Internal {
 public:
};

CustomProperty::CustomProperty(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.seigr_cell.CustomProperty)
}
inline PROTOBUF_NDEBUG_INLINE CustomProperty::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::seigr_cell::CustomProperty& from_msg)
      : key_(arena, from.key_),
        value_(arena, from.value_),
        property_type_(arena, from.property_type_),
        _cached_size_{0} {}

CustomProperty::CustomProperty(
    ::google::protobuf::Arena* arena,
    const CustomProperty& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CustomProperty* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.is_sensitive_ = from._impl_.is_sensitive_;

  // @@protoc_insertion_point(copy_constructor:seigr.seigr_cell.CustomProperty)
}
inline PROTOBUF_NDEBUG_INLINE CustomProperty::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : key_(arena),
        value_(arena),
        property_type_(arena),
        _cached_size_{0} {}

inline void CustomProperty::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.is_sensitive_ = {};
}
CustomProperty::~CustomProperty() {
  // @@protoc_insertion_point(destructor:seigr.seigr_cell.CustomProperty)
  SharedDtor(*this);
}
inline void CustomProperty::SharedDtor(MessageLite& self) {
  CustomProperty& this_ = static_cast<CustomProperty&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.key_.Destroy();
  this_._impl_.value_.Destroy();
  this_._impl_.property_type_.Destroy();
  this_._impl_.~Impl_();
}

inline void* CustomProperty::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CustomProperty(arena);
}
constexpr auto CustomProperty::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CustomProperty),
                                            alignof(CustomProperty));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CustomProperty::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CustomProperty_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CustomProperty::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CustomProperty>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CustomProperty::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CustomProperty>(), &CustomProperty::ByteSizeLong,
            &CustomProperty::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CustomProperty, _impl_._cached_size_),
        false,
    },
    &CustomProperty::kDescriptorMethods,
    &descriptor_table_seigr_5fcell_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CustomProperty::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 61, 2> CustomProperty::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::seigr_cell::CustomProperty>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool is_sensitive = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CustomProperty, _impl_.is_sensitive_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(CustomProperty, _impl_.is_sensitive_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CustomProperty, _impl_.key_)}},
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CustomProperty, _impl_.value_)}},
    // string property_type = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(CustomProperty, _impl_.property_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(CustomProperty, _impl_.key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(CustomProperty, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string property_type = 3;
    {PROTOBUF_FIELD_OFFSET(CustomProperty, _impl_.property_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool is_sensitive = 4;
    {PROTOBUF_FIELD_OFFSET(CustomProperty, _impl_.is_sensitive_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\37\3\5\15\0\0\0\0"
    "seigr.seigr_cell.CustomProperty"
    "key"
    "value"
    "property_type"
  }},
};

PROTOBUF_NOINLINE void CustomProperty::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.seigr_cell.CustomProperty)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.key_.ClearToEmpty();
  _impl_.value_.ClearToEmpty();
  _impl_.property_type_.ClearToEmpty();
  _impl_.is_sensitive_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CustomProperty::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CustomProperty& this_ = static_cast<const CustomProperty&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CustomProperty::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CustomProperty& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.seigr_cell.CustomProperty)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string key = 1;
          if (!this_._internal_key().empty()) {
            const std::string& _s = this_._internal_key();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_cell.CustomProperty.key");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string value = 2;
          if (!this_._internal_value().empty()) {
            const std::string& _s = this_._internal_value();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_cell.CustomProperty.value");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string property_type = 3;
          if (!this_._internal_property_type().empty()) {
            const std::string& _s = this_._internal_property_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_cell.CustomProperty.property_type");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // bool is_sensitive = 4;
          if (this_._internal_is_sensitive() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_is_sensitive(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.seigr_cell.CustomProperty)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CustomProperty::ByteSizeLong(const MessageLite& base) {
          const CustomProperty& this_ = static_cast<const CustomProperty&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CustomProperty::ByteSizeLong() const {
          const CustomProperty& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.seigr_cell.CustomProperty)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string key = 1;
            if (!this_._internal_key().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_key());
            }
            // string value = 2;
            if (!this_._internal_value().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_value());
            }
            // string property_type = 3;
            if (!this_._internal_property_type().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_property_type());
            }
            // bool is_sensitive = 4;
            if (this_._internal_is_sensitive() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CustomProperty::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CustomProperty*>(&to_msg);
  auto& from = static_cast<const CustomProperty&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.seigr_cell.CustomProperty)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  if (!from._internal_value().empty()) {
    _this->_internal_set_value(from._internal_value());
  }
  if (!from._internal_property_type().empty()) {
    _this->_internal_set_property_type(from._internal_property_type());
  }
  if (from._internal_is_sensitive() != 0) {
    _this->_impl_.is_sensitive_ = from._impl_.is_sensitive_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CustomProperty::CopyFrom(const CustomProperty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.seigr_cell.CustomProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CustomProperty::InternalSwap(CustomProperty* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, &other->_impl_.key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, &other->_impl_.value_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.property_type_, &other->_impl_.property_type_, arena);
        swap(_impl_.is_sensitive_, other->_impl_.is_sensitive_);
}

::google::protobuf::Metadata CustomProperty::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ValidateSeigrCellRequest::_Internal {
 public:
};

ValidateSeigrCellRequest::ValidateSeigrCellRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.seigr_cell.ValidateSeigrCellRequest)
}
inline PROTOBUF_NDEBUG_INLINE ValidateSeigrCellRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::seigr_cell::ValidateSeigrCellRequest& from_msg)
      : cell_id_(arena, from.cell_id_),
        _cached_size_{0} {}

ValidateSeigrCellRequest::ValidateSeigrCellRequest(
    ::google::protobuf::Arena* arena,
    const ValidateSeigrCellRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ValidateSeigrCellRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:seigr.seigr_cell.ValidateSeigrCellRequest)
}
inline PROTOBUF_NDEBUG_INLINE ValidateSeigrCellRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : cell_id_(arena),
        _cached_size_{0} {}

inline void ValidateSeigrCellRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ValidateSeigrCellRequest::~ValidateSeigrCellRequest() {
  // @@protoc_insertion_point(destructor:seigr.seigr_cell.ValidateSeigrCellRequest)
  SharedDtor(*this);
}
inline void ValidateSeigrCellRequest::SharedDtor(MessageLite& self) {
  ValidateSeigrCellRequest& this_ = static_cast<ValidateSeigrCellRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.cell_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ValidateSeigrCellRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ValidateSeigrCellRequest(arena);
}
constexpr auto ValidateSeigrCellRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ValidateSeigrCellRequest),
                                            alignof(ValidateSeigrCellRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ValidateSeigrCellRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ValidateSeigrCellRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ValidateSeigrCellRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ValidateSeigrCellRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ValidateSeigrCellRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ValidateSeigrCellRequest>(), &ValidateSeigrCellRequest::ByteSizeLong,
            &ValidateSeigrCellRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ValidateSeigrCellRequest, _impl_._cached_size_),
        false,
    },
    &ValidateSeigrCellRequest::kDescriptorMethods,
    &descriptor_table_seigr_5fcell_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ValidateSeigrCellRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 57, 2> ValidateSeigrCellRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::seigr_cell::ValidateSeigrCellRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string cell_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ValidateSeigrCellRequest, _impl_.cell_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string cell_id = 1;
    {PROTOBUF_FIELD_OFFSET(ValidateSeigrCellRequest, _impl_.cell_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\51\7\0\0\0\0\0\0"
    "seigr.seigr_cell.ValidateSeigrCellRequest"
    "cell_id"
  }},
};

PROTOBUF_NOINLINE void ValidateSeigrCellRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.seigr_cell.ValidateSeigrCellRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.cell_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ValidateSeigrCellRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ValidateSeigrCellRequest& this_ = static_cast<const ValidateSeigrCellRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ValidateSeigrCellRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ValidateSeigrCellRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.seigr_cell.ValidateSeigrCellRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string cell_id = 1;
          if (!this_._internal_cell_id().empty()) {
            const std::string& _s = this_._internal_cell_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_cell.ValidateSeigrCellRequest.cell_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.seigr_cell.ValidateSeigrCellRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ValidateSeigrCellRequest::ByteSizeLong(const MessageLite& base) {
          const ValidateSeigrCellRequest& this_ = static_cast<const ValidateSeigrCellRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ValidateSeigrCellRequest::ByteSizeLong() const {
          const ValidateSeigrCellRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.seigr_cell.ValidateSeigrCellRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string cell_id = 1;
            if (!this_._internal_cell_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_cell_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ValidateSeigrCellRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ValidateSeigrCellRequest*>(&to_msg);
  auto& from = static_cast<const ValidateSeigrCellRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.seigr_cell.ValidateSeigrCellRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_cell_id().empty()) {
    _this->_internal_set_cell_id(from._internal_cell_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ValidateSeigrCellRequest::CopyFrom(const ValidateSeigrCellRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.seigr_cell.ValidateSeigrCellRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ValidateSeigrCellRequest::InternalSwap(ValidateSeigrCellRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cell_id_, &other->_impl_.cell_id_, arena);
}

::google::protobuf::Metadata ValidateSeigrCellRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              ValidateSeigrCellResponse_ValidationMetadataEntry_DoNotUse::ValidateSeigrCellResponse_ValidationMetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              ValidateSeigrCellResponse_ValidationMetadataEntry_DoNotUse::ValidateSeigrCellResponse_ValidationMetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              ValidateSeigrCellResponse_ValidationMetadataEntry_DoNotUse::ValidateSeigrCellResponse_ValidationMetadataEntry_DoNotUse() : SuperType() {}
              ValidateSeigrCellResponse_ValidationMetadataEntry_DoNotUse::ValidateSeigrCellResponse_ValidationMetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* ValidateSeigrCellResponse_ValidationMetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) ValidateSeigrCellResponse_ValidationMetadataEntry_DoNotUse(arena);
              }
              constexpr auto ValidateSeigrCellResponse_ValidationMetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ValidateSeigrCellResponse_ValidationMetadataEntry_DoNotUse),
                                                          alignof(ValidateSeigrCellResponse_ValidationMetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull ValidateSeigrCellResponse_ValidationMetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_ValidateSeigrCellResponse_ValidationMetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &ValidateSeigrCellResponse_ValidationMetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<ValidateSeigrCellResponse_ValidationMetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &ValidateSeigrCellResponse_ValidationMetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &ValidateSeigrCellResponse_ValidationMetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(ValidateSeigrCellResponse_ValidationMetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &ValidateSeigrCellResponse_ValidationMetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_seigr_5fcell_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* ValidateSeigrCellResponse_ValidationMetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 83, 2> ValidateSeigrCellResponse_ValidationMetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ValidateSeigrCellResponse_ValidationMetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::seigr_cell::ValidateSeigrCellResponse_ValidationMetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ValidateSeigrCellResponse_ValidationMetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ValidateSeigrCellResponse_ValidationMetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(ValidateSeigrCellResponse_ValidationMetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(ValidateSeigrCellResponse_ValidationMetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\102\3\5\0\0\0\0\0"
    "seigr.seigr_cell.ValidateSeigrCellResponse.ValidationMetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class ValidateSeigrCellResponse::_Internal {
 public:
};

ValidateSeigrCellResponse::ValidateSeigrCellResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.seigr_cell.ValidateSeigrCellResponse)
}
inline PROTOBUF_NDEBUG_INLINE ValidateSeigrCellResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::seigr_cell::ValidateSeigrCellResponse& from_msg)
      : validation_metadata_{visibility, arena, from.validation_metadata_},
        validation_message_(arena, from.validation_message_),
        _cached_size_{0} {}

ValidateSeigrCellResponse::ValidateSeigrCellResponse(
    ::google::protobuf::Arena* arena,
    const ValidateSeigrCellResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ValidateSeigrCellResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.is_valid_ = from._impl_.is_valid_;

  // @@protoc_insertion_point(copy_constructor:seigr.seigr_cell.ValidateSeigrCellResponse)
}
inline PROTOBUF_NDEBUG_INLINE ValidateSeigrCellResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : validation_metadata_{visibility, arena},
        validation_message_(arena),
        _cached_size_{0} {}

inline void ValidateSeigrCellResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.is_valid_ = {};
}
ValidateSeigrCellResponse::~ValidateSeigrCellResponse() {
  // @@protoc_insertion_point(destructor:seigr.seigr_cell.ValidateSeigrCellResponse)
  SharedDtor(*this);
}
inline void ValidateSeigrCellResponse::SharedDtor(MessageLite& self) {
  ValidateSeigrCellResponse& this_ = static_cast<ValidateSeigrCellResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.validation_message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ValidateSeigrCellResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ValidateSeigrCellResponse(arena);
}
constexpr auto ValidateSeigrCellResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ValidateSeigrCellResponse, _impl_.validation_metadata_) +
          decltype(ValidateSeigrCellResponse::_impl_.validation_metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ValidateSeigrCellResponse, _impl_.validation_metadata_) +
          decltype(ValidateSeigrCellResponse::_impl_.validation_metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ValidateSeigrCellResponse), alignof(ValidateSeigrCellResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ValidateSeigrCellResponse::PlacementNew_,
                                 sizeof(ValidateSeigrCellResponse),
                                 alignof(ValidateSeigrCellResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ValidateSeigrCellResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ValidateSeigrCellResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ValidateSeigrCellResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ValidateSeigrCellResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ValidateSeigrCellResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ValidateSeigrCellResponse>(), &ValidateSeigrCellResponse::ByteSizeLong,
            &ValidateSeigrCellResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ValidateSeigrCellResponse, _impl_._cached_size_),
        false,
    },
    &ValidateSeigrCellResponse::kDescriptorMethods,
    &descriptor_table_seigr_5fcell_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ValidateSeigrCellResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 3, 1, 88, 2> ValidateSeigrCellResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::seigr_cell::ValidateSeigrCellResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string validation_message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ValidateSeigrCellResponse, _impl_.validation_message_)}},
    // bool is_valid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ValidateSeigrCellResponse, _impl_.is_valid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ValidateSeigrCellResponse, _impl_.is_valid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool is_valid = 1;
    {PROTOBUF_FIELD_OFFSET(ValidateSeigrCellResponse, _impl_.is_valid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string validation_message = 2;
    {PROTOBUF_FIELD_OFFSET(ValidateSeigrCellResponse, _impl_.validation_message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> validation_metadata = 3;
    {PROTOBUF_FIELD_OFFSET(ValidateSeigrCellResponse, _impl_.validation_metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(ValidateSeigrCellResponse()._impl_.validation_metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\52\0\22\23\0\0\0\0"
    "seigr.seigr_cell.ValidateSeigrCellResponse"
    "validation_message"
    "validation_metadata"
  }},
};

PROTOBUF_NOINLINE void ValidateSeigrCellResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.seigr_cell.ValidateSeigrCellResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.validation_metadata_.Clear();
  _impl_.validation_message_.ClearToEmpty();
  _impl_.is_valid_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ValidateSeigrCellResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ValidateSeigrCellResponse& this_ = static_cast<const ValidateSeigrCellResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ValidateSeigrCellResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ValidateSeigrCellResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.seigr_cell.ValidateSeigrCellResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool is_valid = 1;
          if (this_._internal_is_valid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_is_valid(), target);
          }

          // string validation_message = 2;
          if (!this_._internal_validation_message().empty()) {
            const std::string& _s = this_._internal_validation_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_cell.ValidateSeigrCellResponse.validation_message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // map<string, string> validation_metadata = 3;
          if (!this_._internal_validation_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_validation_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    3, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_cell.ValidateSeigrCellResponse.validation_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_cell.ValidateSeigrCellResponse.validation_metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    3, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_cell.ValidateSeigrCellResponse.validation_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_cell.ValidateSeigrCellResponse.validation_metadata");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.seigr_cell.ValidateSeigrCellResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ValidateSeigrCellResponse::ByteSizeLong(const MessageLite& base) {
          const ValidateSeigrCellResponse& this_ = static_cast<const ValidateSeigrCellResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ValidateSeigrCellResponse::ByteSizeLong() const {
          const ValidateSeigrCellResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.seigr_cell.ValidateSeigrCellResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> validation_metadata = 3;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_validation_metadata_size());
              for (const auto& entry : this_._internal_validation_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string validation_message = 2;
            if (!this_._internal_validation_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_validation_message());
            }
            // bool is_valid = 1;
            if (this_._internal_is_valid() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ValidateSeigrCellResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ValidateSeigrCellResponse*>(&to_msg);
  auto& from = static_cast<const ValidateSeigrCellResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.seigr_cell.ValidateSeigrCellResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.validation_metadata_.MergeFrom(from._impl_.validation_metadata_);
  if (!from._internal_validation_message().empty()) {
    _this->_internal_set_validation_message(from._internal_validation_message());
  }
  if (from._internal_is_valid() != 0) {
    _this->_impl_.is_valid_ = from._impl_.is_valid_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ValidateSeigrCellResponse::CopyFrom(const ValidateSeigrCellResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.seigr_cell.ValidateSeigrCellResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ValidateSeigrCellResponse::InternalSwap(ValidateSeigrCellResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.validation_metadata_.InternalSwap(&other->_impl_.validation_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.validation_message_, &other->_impl_.validation_message_, arena);
        swap(_impl_.is_valid_, other->_impl_.is_valid_);
}

::google::protobuf::Metadata ValidateSeigrCellResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RetrieveSeigrCellRequest::_Internal {
 public:
};

RetrieveSeigrCellRequest::RetrieveSeigrCellRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.seigr_cell.RetrieveSeigrCellRequest)
}
inline PROTOBUF_NDEBUG_INLINE RetrieveSeigrCellRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::seigr_cell::RetrieveSeigrCellRequest& from_msg)
      : cell_id_(arena, from.cell_id_),
        _cached_size_{0} {}

RetrieveSeigrCellRequest::RetrieveSeigrCellRequest(
    ::google::protobuf::Arena* arena,
    const RetrieveSeigrCellRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RetrieveSeigrCellRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:seigr.seigr_cell.RetrieveSeigrCellRequest)
}
inline PROTOBUF_NDEBUG_INLINE RetrieveSeigrCellRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : cell_id_(arena),
        _cached_size_{0} {}

inline void RetrieveSeigrCellRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RetrieveSeigrCellRequest::~RetrieveSeigrCellRequest() {
  // @@protoc_insertion_point(destructor:seigr.seigr_cell.RetrieveSeigrCellRequest)
  SharedDtor(*this);
}
inline void RetrieveSeigrCellRequest::SharedDtor(MessageLite& self) {
  RetrieveSeigrCellRequest& this_ = static_cast<RetrieveSeigrCellRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.cell_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* RetrieveSeigrCellRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RetrieveSeigrCellRequest(arena);
}
constexpr auto RetrieveSeigrCellRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RetrieveSeigrCellRequest),
                                            alignof(RetrieveSeigrCellRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RetrieveSeigrCellRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RetrieveSeigrCellRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RetrieveSeigrCellRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RetrieveSeigrCellRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RetrieveSeigrCellRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RetrieveSeigrCellRequest>(), &RetrieveSeigrCellRequest::ByteSizeLong,
            &RetrieveSeigrCellRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RetrieveSeigrCellRequest, _impl_._cached_size_),
        false,
    },
    &RetrieveSeigrCellRequest::kDescriptorMethods,
    &descriptor_table_seigr_5fcell_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RetrieveSeigrCellRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 57, 2> RetrieveSeigrCellRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::seigr_cell::RetrieveSeigrCellRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string cell_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RetrieveSeigrCellRequest, _impl_.cell_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string cell_id = 1;
    {PROTOBUF_FIELD_OFFSET(RetrieveSeigrCellRequest, _impl_.cell_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\51\7\0\0\0\0\0\0"
    "seigr.seigr_cell.RetrieveSeigrCellRequest"
    "cell_id"
  }},
};

PROTOBUF_NOINLINE void RetrieveSeigrCellRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.seigr_cell.RetrieveSeigrCellRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.cell_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RetrieveSeigrCellRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RetrieveSeigrCellRequest& this_ = static_cast<const RetrieveSeigrCellRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RetrieveSeigrCellRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RetrieveSeigrCellRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.seigr_cell.RetrieveSeigrCellRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string cell_id = 1;
          if (!this_._internal_cell_id().empty()) {
            const std::string& _s = this_._internal_cell_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_cell.RetrieveSeigrCellRequest.cell_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.seigr_cell.RetrieveSeigrCellRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RetrieveSeigrCellRequest::ByteSizeLong(const MessageLite& base) {
          const RetrieveSeigrCellRequest& this_ = static_cast<const RetrieveSeigrCellRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RetrieveSeigrCellRequest::ByteSizeLong() const {
          const RetrieveSeigrCellRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.seigr_cell.RetrieveSeigrCellRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string cell_id = 1;
            if (!this_._internal_cell_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_cell_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RetrieveSeigrCellRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RetrieveSeigrCellRequest*>(&to_msg);
  auto& from = static_cast<const RetrieveSeigrCellRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.seigr_cell.RetrieveSeigrCellRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_cell_id().empty()) {
    _this->_internal_set_cell_id(from._internal_cell_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RetrieveSeigrCellRequest::CopyFrom(const RetrieveSeigrCellRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.seigr_cell.RetrieveSeigrCellRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RetrieveSeigrCellRequest::InternalSwap(RetrieveSeigrCellRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cell_id_, &other->_impl_.cell_id_, arena);
}

::google::protobuf::Metadata RetrieveSeigrCellRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RetrieveSeigrCellResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<RetrieveSeigrCellResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RetrieveSeigrCellResponse, _impl_._has_bits_);
};

RetrieveSeigrCellResponse::RetrieveSeigrCellResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.seigr_cell.RetrieveSeigrCellResponse)
}
inline PROTOBUF_NDEBUG_INLINE RetrieveSeigrCellResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::seigr_cell::RetrieveSeigrCellResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        retrieval_timestamp_(arena, from.retrieval_timestamp_) {}

RetrieveSeigrCellResponse::RetrieveSeigrCellResponse(
    ::google::protobuf::Arena* arena,
    const RetrieveSeigrCellResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RetrieveSeigrCellResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.cell_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::seigr::seigr_cell::SeigrCell>(
                              arena, *from._impl_.cell_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:seigr.seigr_cell.RetrieveSeigrCellResponse)
}
inline PROTOBUF_NDEBUG_INLINE RetrieveSeigrCellResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        retrieval_timestamp_(arena) {}

inline void RetrieveSeigrCellResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.cell_ = {};
}
RetrieveSeigrCellResponse::~RetrieveSeigrCellResponse() {
  // @@protoc_insertion_point(destructor:seigr.seigr_cell.RetrieveSeigrCellResponse)
  SharedDtor(*this);
}
inline void RetrieveSeigrCellResponse::SharedDtor(MessageLite& self) {
  RetrieveSeigrCellResponse& this_ = static_cast<RetrieveSeigrCellResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.retrieval_timestamp_.Destroy();
  delete this_._impl_.cell_;
  this_._impl_.~Impl_();
}

inline void* RetrieveSeigrCellResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RetrieveSeigrCellResponse(arena);
}
constexpr auto RetrieveSeigrCellResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RetrieveSeigrCellResponse),
                                            alignof(RetrieveSeigrCellResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RetrieveSeigrCellResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RetrieveSeigrCellResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RetrieveSeigrCellResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RetrieveSeigrCellResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RetrieveSeigrCellResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RetrieveSeigrCellResponse>(), &RetrieveSeigrCellResponse::ByteSizeLong,
            &RetrieveSeigrCellResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RetrieveSeigrCellResponse, _impl_._cached_size_),
        false,
    },
    &RetrieveSeigrCellResponse::kDescriptorMethods,
    &descriptor_table_seigr_5fcell_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RetrieveSeigrCellResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 70, 2> RetrieveSeigrCellResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RetrieveSeigrCellResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::seigr_cell::RetrieveSeigrCellResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string retrieval_timestamp = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RetrieveSeigrCellResponse, _impl_.retrieval_timestamp_)}},
    // .seigr.seigr_cell.SeigrCell cell = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RetrieveSeigrCellResponse, _impl_.cell_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .seigr.seigr_cell.SeigrCell cell = 1;
    {PROTOBUF_FIELD_OFFSET(RetrieveSeigrCellResponse, _impl_.cell_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string retrieval_timestamp = 2;
    {PROTOBUF_FIELD_OFFSET(RetrieveSeigrCellResponse, _impl_.retrieval_timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::seigr::seigr_cell::SeigrCell>()},
  }}, {{
    "\52\0\23\0\0\0\0\0"
    "seigr.seigr_cell.RetrieveSeigrCellResponse"
    "retrieval_timestamp"
  }},
};

PROTOBUF_NOINLINE void RetrieveSeigrCellResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.seigr_cell.RetrieveSeigrCellResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.retrieval_timestamp_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.cell_ != nullptr);
    _impl_.cell_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RetrieveSeigrCellResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RetrieveSeigrCellResponse& this_ = static_cast<const RetrieveSeigrCellResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RetrieveSeigrCellResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RetrieveSeigrCellResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.seigr_cell.RetrieveSeigrCellResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .seigr.seigr_cell.SeigrCell cell = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.cell_, this_._impl_.cell_->GetCachedSize(), target,
                stream);
          }

          // string retrieval_timestamp = 2;
          if (!this_._internal_retrieval_timestamp().empty()) {
            const std::string& _s = this_._internal_retrieval_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_cell.RetrieveSeigrCellResponse.retrieval_timestamp");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.seigr_cell.RetrieveSeigrCellResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RetrieveSeigrCellResponse::ByteSizeLong(const MessageLite& base) {
          const RetrieveSeigrCellResponse& this_ = static_cast<const RetrieveSeigrCellResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RetrieveSeigrCellResponse::ByteSizeLong() const {
          const RetrieveSeigrCellResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.seigr_cell.RetrieveSeigrCellResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string retrieval_timestamp = 2;
            if (!this_._internal_retrieval_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_retrieval_timestamp());
            }
          }
           {
            // .seigr.seigr_cell.SeigrCell cell = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.cell_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RetrieveSeigrCellResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RetrieveSeigrCellResponse*>(&to_msg);
  auto& from = static_cast<const RetrieveSeigrCellResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.seigr_cell.RetrieveSeigrCellResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_retrieval_timestamp().empty()) {
    _this->_internal_set_retrieval_timestamp(from._internal_retrieval_timestamp());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.cell_ != nullptr);
    if (_this->_impl_.cell_ == nullptr) {
      _this->_impl_.cell_ =
          ::google::protobuf::Message::CopyConstruct<::seigr::seigr_cell::SeigrCell>(arena, *from._impl_.cell_);
    } else {
      _this->_impl_.cell_->MergeFrom(*from._impl_.cell_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RetrieveSeigrCellResponse::CopyFrom(const RetrieveSeigrCellResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.seigr_cell.RetrieveSeigrCellResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RetrieveSeigrCellResponse::InternalSwap(RetrieveSeigrCellResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.retrieval_timestamp_, &other->_impl_.retrieval_timestamp_, arena);
  swap(_impl_.cell_, other->_impl_.cell_);
}

::google::protobuf::Metadata RetrieveSeigrCellResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              UpdateSeigrCellRequest_UpdatesEntry_DoNotUse::UpdateSeigrCellRequest_UpdatesEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              UpdateSeigrCellRequest_UpdatesEntry_DoNotUse::UpdateSeigrCellRequest_UpdatesEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              UpdateSeigrCellRequest_UpdatesEntry_DoNotUse::UpdateSeigrCellRequest_UpdatesEntry_DoNotUse() : SuperType() {}
              UpdateSeigrCellRequest_UpdatesEntry_DoNotUse::UpdateSeigrCellRequest_UpdatesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* UpdateSeigrCellRequest_UpdatesEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) UpdateSeigrCellRequest_UpdatesEntry_DoNotUse(arena);
              }
              constexpr auto UpdateSeigrCellRequest_UpdatesEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(UpdateSeigrCellRequest_UpdatesEntry_DoNotUse),
                                                          alignof(UpdateSeigrCellRequest_UpdatesEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull UpdateSeigrCellRequest_UpdatesEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_UpdateSeigrCellRequest_UpdatesEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &UpdateSeigrCellRequest_UpdatesEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<UpdateSeigrCellRequest_UpdatesEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &UpdateSeigrCellRequest_UpdatesEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &UpdateSeigrCellRequest_UpdatesEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(UpdateSeigrCellRequest_UpdatesEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &UpdateSeigrCellRequest_UpdatesEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_seigr_5fcell_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* UpdateSeigrCellRequest_UpdatesEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 69, 2> UpdateSeigrCellRequest_UpdatesEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateSeigrCellRequest_UpdatesEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::seigr_cell::UpdateSeigrCellRequest_UpdatesEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateSeigrCellRequest_UpdatesEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateSeigrCellRequest_UpdatesEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(UpdateSeigrCellRequest_UpdatesEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(UpdateSeigrCellRequest_UpdatesEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\64\3\5\0\0\0\0\0"
    "seigr.seigr_cell.UpdateSeigrCellRequest.UpdatesEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class UpdateSeigrCellRequest::_Internal {
 public:
};

UpdateSeigrCellRequest::UpdateSeigrCellRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.seigr_cell.UpdateSeigrCellRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateSeigrCellRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::seigr_cell::UpdateSeigrCellRequest& from_msg)
      : updates_{visibility, arena, from.updates_},
        cell_id_(arena, from.cell_id_),
        _cached_size_{0} {}

UpdateSeigrCellRequest::UpdateSeigrCellRequest(
    ::google::protobuf::Arena* arena,
    const UpdateSeigrCellRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateSeigrCellRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:seigr.seigr_cell.UpdateSeigrCellRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateSeigrCellRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : updates_{visibility, arena},
        cell_id_(arena),
        _cached_size_{0} {}

inline void UpdateSeigrCellRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
UpdateSeigrCellRequest::~UpdateSeigrCellRequest() {
  // @@protoc_insertion_point(destructor:seigr.seigr_cell.UpdateSeigrCellRequest)
  SharedDtor(*this);
}
inline void UpdateSeigrCellRequest::SharedDtor(MessageLite& self) {
  UpdateSeigrCellRequest& this_ = static_cast<UpdateSeigrCellRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.cell_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* UpdateSeigrCellRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UpdateSeigrCellRequest(arena);
}
constexpr auto UpdateSeigrCellRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(UpdateSeigrCellRequest, _impl_.updates_) +
          decltype(UpdateSeigrCellRequest::_impl_.updates_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(UpdateSeigrCellRequest, _impl_.updates_) +
          decltype(UpdateSeigrCellRequest::_impl_.updates_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(UpdateSeigrCellRequest), alignof(UpdateSeigrCellRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&UpdateSeigrCellRequest::PlacementNew_,
                                 sizeof(UpdateSeigrCellRequest),
                                 alignof(UpdateSeigrCellRequest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UpdateSeigrCellRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UpdateSeigrCellRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UpdateSeigrCellRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UpdateSeigrCellRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UpdateSeigrCellRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UpdateSeigrCellRequest>(), &UpdateSeigrCellRequest::ByteSizeLong,
            &UpdateSeigrCellRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UpdateSeigrCellRequest, _impl_._cached_size_),
        false,
    },
    &UpdateSeigrCellRequest::kDescriptorMethods,
    &descriptor_table_seigr_5fcell_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UpdateSeigrCellRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 1, 62, 2> UpdateSeigrCellRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::seigr_cell::UpdateSeigrCellRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string cell_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateSeigrCellRequest, _impl_.cell_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string cell_id = 1;
    {PROTOBUF_FIELD_OFFSET(UpdateSeigrCellRequest, _impl_.cell_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> updates = 2;
    {PROTOBUF_FIELD_OFFSET(UpdateSeigrCellRequest, _impl_.updates_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(UpdateSeigrCellRequest()._impl_.updates_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\47\7\7\0\0\0\0\0"
    "seigr.seigr_cell.UpdateSeigrCellRequest"
    "cell_id"
    "updates"
  }},
};

PROTOBUF_NOINLINE void UpdateSeigrCellRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.seigr_cell.UpdateSeigrCellRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.updates_.Clear();
  _impl_.cell_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UpdateSeigrCellRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UpdateSeigrCellRequest& this_ = static_cast<const UpdateSeigrCellRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UpdateSeigrCellRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UpdateSeigrCellRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.seigr_cell.UpdateSeigrCellRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string cell_id = 1;
          if (!this_._internal_cell_id().empty()) {
            const std::string& _s = this_._internal_cell_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_cell.UpdateSeigrCellRequest.cell_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // map<string, string> updates = 2;
          if (!this_._internal_updates().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_updates();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    2, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_cell.UpdateSeigrCellRequest.updates");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_cell.UpdateSeigrCellRequest.updates");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    2, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_cell.UpdateSeigrCellRequest.updates");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_cell.UpdateSeigrCellRequest.updates");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.seigr_cell.UpdateSeigrCellRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UpdateSeigrCellRequest::ByteSizeLong(const MessageLite& base) {
          const UpdateSeigrCellRequest& this_ = static_cast<const UpdateSeigrCellRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UpdateSeigrCellRequest::ByteSizeLong() const {
          const UpdateSeigrCellRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.seigr_cell.UpdateSeigrCellRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> updates = 2;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_updates_size());
              for (const auto& entry : this_._internal_updates()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string cell_id = 1;
            if (!this_._internal_cell_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_cell_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UpdateSeigrCellRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateSeigrCellRequest*>(&to_msg);
  auto& from = static_cast<const UpdateSeigrCellRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.seigr_cell.UpdateSeigrCellRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.updates_.MergeFrom(from._impl_.updates_);
  if (!from._internal_cell_id().empty()) {
    _this->_internal_set_cell_id(from._internal_cell_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateSeigrCellRequest::CopyFrom(const UpdateSeigrCellRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.seigr_cell.UpdateSeigrCellRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateSeigrCellRequest::InternalSwap(UpdateSeigrCellRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.updates_.InternalSwap(&other->_impl_.updates_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cell_id_, &other->_impl_.cell_id_, arena);
}

::google::protobuf::Metadata UpdateSeigrCellRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateSeigrCellResponse::_Internal {
 public:
};

UpdateSeigrCellResponse::UpdateSeigrCellResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.seigr_cell.UpdateSeigrCellResponse)
}
inline PROTOBUF_NDEBUG_INLINE UpdateSeigrCellResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::seigr_cell::UpdateSeigrCellResponse& from_msg)
      : message_(arena, from.message_),
        _cached_size_{0} {}

UpdateSeigrCellResponse::UpdateSeigrCellResponse(
    ::google::protobuf::Arena* arena,
    const UpdateSeigrCellResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateSeigrCellResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:seigr.seigr_cell.UpdateSeigrCellResponse)
}
inline PROTOBUF_NDEBUG_INLINE UpdateSeigrCellResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_(arena),
        _cached_size_{0} {}

inline void UpdateSeigrCellResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
UpdateSeigrCellResponse::~UpdateSeigrCellResponse() {
  // @@protoc_insertion_point(destructor:seigr.seigr_cell.UpdateSeigrCellResponse)
  SharedDtor(*this);
}
inline void UpdateSeigrCellResponse::SharedDtor(MessageLite& self) {
  UpdateSeigrCellResponse& this_ = static_cast<UpdateSeigrCellResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* UpdateSeigrCellResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UpdateSeigrCellResponse(arena);
}
constexpr auto UpdateSeigrCellResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(UpdateSeigrCellResponse),
                                            alignof(UpdateSeigrCellResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UpdateSeigrCellResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UpdateSeigrCellResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UpdateSeigrCellResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UpdateSeigrCellResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UpdateSeigrCellResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UpdateSeigrCellResponse>(), &UpdateSeigrCellResponse::ByteSizeLong,
            &UpdateSeigrCellResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UpdateSeigrCellResponse, _impl_._cached_size_),
        false,
    },
    &UpdateSeigrCellResponse::kDescriptorMethods,
    &descriptor_table_seigr_5fcell_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UpdateSeigrCellResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 56, 2> UpdateSeigrCellResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::seigr_cell::UpdateSeigrCellResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateSeigrCellResponse, _impl_.message_)}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(UpdateSeigrCellResponse, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateSeigrCellResponse, _impl_.success_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(UpdateSeigrCellResponse, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(UpdateSeigrCellResponse, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\50\0\7\0\0\0\0\0"
    "seigr.seigr_cell.UpdateSeigrCellResponse"
    "message"
  }},
};

PROTOBUF_NOINLINE void UpdateSeigrCellResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.seigr_cell.UpdateSeigrCellResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UpdateSeigrCellResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UpdateSeigrCellResponse& this_ = static_cast<const UpdateSeigrCellResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UpdateSeigrCellResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UpdateSeigrCellResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.seigr_cell.UpdateSeigrCellResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool success = 1;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_success(), target);
          }

          // string message = 2;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_cell.UpdateSeigrCellResponse.message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.seigr_cell.UpdateSeigrCellResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UpdateSeigrCellResponse::ByteSizeLong(const MessageLite& base) {
          const UpdateSeigrCellResponse& this_ = static_cast<const UpdateSeigrCellResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UpdateSeigrCellResponse::ByteSizeLong() const {
          const UpdateSeigrCellResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.seigr_cell.UpdateSeigrCellResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string message = 2;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
            // bool success = 1;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UpdateSeigrCellResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateSeigrCellResponse*>(&to_msg);
  auto& from = static_cast<const UpdateSeigrCellResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.seigr_cell.UpdateSeigrCellResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateSeigrCellResponse::CopyFrom(const UpdateSeigrCellResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.seigr_cell.UpdateSeigrCellResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateSeigrCellResponse::InternalSwap(UpdateSeigrCellResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata UpdateSeigrCellResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ListSeigrCellsRequest::_Internal {
 public:
};

ListSeigrCellsRequest::ListSeigrCellsRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.seigr_cell.ListSeigrCellsRequest)
}
inline PROTOBUF_NDEBUG_INLINE ListSeigrCellsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::seigr_cell::ListSeigrCellsRequest& from_msg)
      : tags_{visibility, arena, from.tags_},
        access_level_(arena, from.access_level_),
        _cached_size_{0} {}

ListSeigrCellsRequest::ListSeigrCellsRequest(
    ::google::protobuf::Arena* arena,
    const ListSeigrCellsRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ListSeigrCellsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.show_only_active_ = from._impl_.show_only_active_;

  // @@protoc_insertion_point(copy_constructor:seigr.seigr_cell.ListSeigrCellsRequest)
}
inline PROTOBUF_NDEBUG_INLINE ListSeigrCellsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : tags_{visibility, arena},
        access_level_(arena),
        _cached_size_{0} {}

inline void ListSeigrCellsRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.show_only_active_ = {};
}
ListSeigrCellsRequest::~ListSeigrCellsRequest() {
  // @@protoc_insertion_point(destructor:seigr.seigr_cell.ListSeigrCellsRequest)
  SharedDtor(*this);
}
inline void ListSeigrCellsRequest::SharedDtor(MessageLite& self) {
  ListSeigrCellsRequest& this_ = static_cast<ListSeigrCellsRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.access_level_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ListSeigrCellsRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ListSeigrCellsRequest(arena);
}
constexpr auto ListSeigrCellsRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ListSeigrCellsRequest, _impl_.tags_) +
          decltype(ListSeigrCellsRequest::_impl_.tags_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ListSeigrCellsRequest), alignof(ListSeigrCellsRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ListSeigrCellsRequest::PlacementNew_,
                                 sizeof(ListSeigrCellsRequest),
                                 alignof(ListSeigrCellsRequest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ListSeigrCellsRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ListSeigrCellsRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ListSeigrCellsRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ListSeigrCellsRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ListSeigrCellsRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ListSeigrCellsRequest>(), &ListSeigrCellsRequest::ByteSizeLong,
            &ListSeigrCellsRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ListSeigrCellsRequest, _impl_._cached_size_),
        false,
    },
    &ListSeigrCellsRequest::kDescriptorMethods,
    &descriptor_table_seigr_5fcell_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ListSeigrCellsRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 63, 2> ListSeigrCellsRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::seigr_cell::ListSeigrCellsRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated string tags = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ListSeigrCellsRequest, _impl_.tags_)}},
    // string access_level = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ListSeigrCellsRequest, _impl_.access_level_)}},
    // bool show_only_active = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ListSeigrCellsRequest, _impl_.show_only_active_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(ListSeigrCellsRequest, _impl_.show_only_active_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string tags = 1;
    {PROTOBUF_FIELD_OFFSET(ListSeigrCellsRequest, _impl_.tags_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // string access_level = 2;
    {PROTOBUF_FIELD_OFFSET(ListSeigrCellsRequest, _impl_.access_level_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool show_only_active = 3;
    {PROTOBUF_FIELD_OFFSET(ListSeigrCellsRequest, _impl_.show_only_active_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\46\4\14\0\0\0\0\0"
    "seigr.seigr_cell.ListSeigrCellsRequest"
    "tags"
    "access_level"
  }},
};

PROTOBUF_NOINLINE void ListSeigrCellsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.seigr_cell.ListSeigrCellsRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tags_.Clear();
  _impl_.access_level_.ClearToEmpty();
  _impl_.show_only_active_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ListSeigrCellsRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ListSeigrCellsRequest& this_ = static_cast<const ListSeigrCellsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ListSeigrCellsRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ListSeigrCellsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.seigr_cell.ListSeigrCellsRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated string tags = 1;
          for (int i = 0, n = this_._internal_tags_size(); i < n; ++i) {
            const auto& s = this_._internal_tags().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_cell.ListSeigrCellsRequest.tags");
            target = stream->WriteString(1, s, target);
          }

          // string access_level = 2;
          if (!this_._internal_access_level().empty()) {
            const std::string& _s = this_._internal_access_level();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_cell.ListSeigrCellsRequest.access_level");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // bool show_only_active = 3;
          if (this_._internal_show_only_active() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_show_only_active(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.seigr_cell.ListSeigrCellsRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ListSeigrCellsRequest::ByteSizeLong(const MessageLite& base) {
          const ListSeigrCellsRequest& this_ = static_cast<const ListSeigrCellsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ListSeigrCellsRequest::ByteSizeLong() const {
          const ListSeigrCellsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.seigr_cell.ListSeigrCellsRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string tags = 1;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_tags().size());
              for (int i = 0, n = this_._internal_tags().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_tags().Get(i));
              }
            }
          }
           {
            // string access_level = 2;
            if (!this_._internal_access_level().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_access_level());
            }
            // bool show_only_active = 3;
            if (this_._internal_show_only_active() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ListSeigrCellsRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ListSeigrCellsRequest*>(&to_msg);
  auto& from = static_cast<const ListSeigrCellsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.seigr_cell.ListSeigrCellsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_tags()->MergeFrom(from._internal_tags());
  if (!from._internal_access_level().empty()) {
    _this->_internal_set_access_level(from._internal_access_level());
  }
  if (from._internal_show_only_active() != 0) {
    _this->_impl_.show_only_active_ = from._impl_.show_only_active_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListSeigrCellsRequest::CopyFrom(const ListSeigrCellsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.seigr_cell.ListSeigrCellsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ListSeigrCellsRequest::InternalSwap(ListSeigrCellsRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.tags_.InternalSwap(&other->_impl_.tags_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.access_level_, &other->_impl_.access_level_, arena);
        swap(_impl_.show_only_active_, other->_impl_.show_only_active_);
}

::google::protobuf::Metadata ListSeigrCellsRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ListSeigrCellsResponse::_Internal {
 public:
};

ListSeigrCellsResponse::ListSeigrCellsResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.seigr_cell.ListSeigrCellsResponse)
}
inline PROTOBUF_NDEBUG_INLINE ListSeigrCellsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::seigr_cell::ListSeigrCellsResponse& from_msg)
      : cells_{visibility, arena, from.cells_},
        retrieval_timestamp_(arena, from.retrieval_timestamp_),
        _cached_size_{0} {}

ListSeigrCellsResponse::ListSeigrCellsResponse(
    ::google::protobuf::Arena* arena,
    const ListSeigrCellsResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ListSeigrCellsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:seigr.seigr_cell.ListSeigrCellsResponse)
}
inline PROTOBUF_NDEBUG_INLINE ListSeigrCellsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : cells_{visibility, arena},
        retrieval_timestamp_(arena),
        _cached_size_{0} {}

inline void ListSeigrCellsResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ListSeigrCellsResponse::~ListSeigrCellsResponse() {
  // @@protoc_insertion_point(destructor:seigr.seigr_cell.ListSeigrCellsResponse)
  SharedDtor(*this);
}
inline void ListSeigrCellsResponse::SharedDtor(MessageLite& self) {
  ListSeigrCellsResponse& this_ = static_cast<ListSeigrCellsResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.retrieval_timestamp_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ListSeigrCellsResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ListSeigrCellsResponse(arena);
}
constexpr auto ListSeigrCellsResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ListSeigrCellsResponse, _impl_.cells_) +
          decltype(ListSeigrCellsResponse::_impl_.cells_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ListSeigrCellsResponse), alignof(ListSeigrCellsResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ListSeigrCellsResponse::PlacementNew_,
                                 sizeof(ListSeigrCellsResponse),
                                 alignof(ListSeigrCellsResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ListSeigrCellsResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ListSeigrCellsResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ListSeigrCellsResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ListSeigrCellsResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ListSeigrCellsResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ListSeigrCellsResponse>(), &ListSeigrCellsResponse::ByteSizeLong,
            &ListSeigrCellsResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ListSeigrCellsResponse, _impl_._cached_size_),
        false,
    },
    &ListSeigrCellsResponse::kDescriptorMethods,
    &descriptor_table_seigr_5fcell_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ListSeigrCellsResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 67, 2> ListSeigrCellsResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::seigr_cell::ListSeigrCellsResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string retrieval_timestamp = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ListSeigrCellsResponse, _impl_.retrieval_timestamp_)}},
    // repeated .seigr.seigr_cell.SeigrCell cells = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ListSeigrCellsResponse, _impl_.cells_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .seigr.seigr_cell.SeigrCell cells = 1;
    {PROTOBUF_FIELD_OFFSET(ListSeigrCellsResponse, _impl_.cells_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string retrieval_timestamp = 2;
    {PROTOBUF_FIELD_OFFSET(ListSeigrCellsResponse, _impl_.retrieval_timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::seigr::seigr_cell::SeigrCell>()},
  }}, {{
    "\47\0\23\0\0\0\0\0"
    "seigr.seigr_cell.ListSeigrCellsResponse"
    "retrieval_timestamp"
  }},
};

PROTOBUF_NOINLINE void ListSeigrCellsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.seigr_cell.ListSeigrCellsResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.cells_.Clear();
  _impl_.retrieval_timestamp_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ListSeigrCellsResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ListSeigrCellsResponse& this_ = static_cast<const ListSeigrCellsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ListSeigrCellsResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ListSeigrCellsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.seigr_cell.ListSeigrCellsResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .seigr.seigr_cell.SeigrCell cells = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_cells_size());
               i < n; i++) {
            const auto& repfield = this_._internal_cells().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // string retrieval_timestamp = 2;
          if (!this_._internal_retrieval_timestamp().empty()) {
            const std::string& _s = this_._internal_retrieval_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_cell.ListSeigrCellsResponse.retrieval_timestamp");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.seigr_cell.ListSeigrCellsResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ListSeigrCellsResponse::ByteSizeLong(const MessageLite& base) {
          const ListSeigrCellsResponse& this_ = static_cast<const ListSeigrCellsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ListSeigrCellsResponse::ByteSizeLong() const {
          const ListSeigrCellsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.seigr_cell.ListSeigrCellsResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .seigr.seigr_cell.SeigrCell cells = 1;
            {
              total_size += 1UL * this_._internal_cells_size();
              for (const auto& msg : this_._internal_cells()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string retrieval_timestamp = 2;
            if (!this_._internal_retrieval_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_retrieval_timestamp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ListSeigrCellsResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ListSeigrCellsResponse*>(&to_msg);
  auto& from = static_cast<const ListSeigrCellsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.seigr_cell.ListSeigrCellsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_cells()->MergeFrom(
      from._internal_cells());
  if (!from._internal_retrieval_timestamp().empty()) {
    _this->_internal_set_retrieval_timestamp(from._internal_retrieval_timestamp());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListSeigrCellsResponse::CopyFrom(const ListSeigrCellsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.seigr_cell.ListSeigrCellsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ListSeigrCellsResponse::InternalSwap(ListSeigrCellsResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.cells_.InternalSwap(&other->_impl_.cells_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.retrieval_timestamp_, &other->_impl_.retrieval_timestamp_, arena);
}

::google::protobuf::Metadata ListSeigrCellsResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace seigr_cell
}  // namespace seigr
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_seigr_5fcell_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
