// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: smart_contract.proto
// Protobuf C++ Version: 5.29.2

#include "smart_contract.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace seigr {
namespace smart_contract {
              template <typename>
PROTOBUF_CONSTEXPR ModifyContractRequest_NewTermsEntry_DoNotUse::ModifyContractRequest_NewTermsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ModifyContractRequest_NewTermsEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ModifyContractRequest_NewTermsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ModifyContractRequest_NewTermsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModifyContractRequest_NewTermsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModifyContractRequest_NewTermsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ModifyContractRequest_NewTermsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModifyContractRequest_NewTermsEntry_DoNotUseDefaultTypeInternal _ModifyContractRequest_NewTermsEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR ContractExecutionCriteria_ConditionsEntry_DoNotUse::ContractExecutionCriteria_ConditionsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ContractExecutionCriteria_ConditionsEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ContractExecutionCriteria_ConditionsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ContractExecutionCriteria_ConditionsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ContractExecutionCriteria_ConditionsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ContractExecutionCriteria_ConditionsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ContractExecutionCriteria_ConditionsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ContractExecutionCriteria_ConditionsEntry_DoNotUseDefaultTypeInternal _ContractExecutionCriteria_ConditionsEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR ContractExecution_ExecutionMetadataEntry_DoNotUse::ContractExecution_ExecutionMetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ContractExecution_ExecutionMetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ContractExecution_ExecutionMetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ContractExecution_ExecutionMetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ContractExecution_ExecutionMetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ContractExecution_ExecutionMetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ContractExecution_ExecutionMetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ContractExecution_ExecutionMetadataEntry_DoNotUseDefaultTypeInternal _ContractExecution_ExecutionMetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR ContractConfig_TermsEntry_DoNotUse::ContractConfig_TermsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ContractConfig_TermsEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ContractConfig_TermsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ContractConfig_TermsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ContractConfig_TermsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ContractConfig_TermsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ContractConfig_TermsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ContractConfig_TermsEntry_DoNotUseDefaultTypeInternal _ContractConfig_TermsEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR ContractConfig_ConfigMetadataEntry_DoNotUse::ContractConfig_ConfigMetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ContractConfig_ConfigMetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ContractConfig_ConfigMetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ContractConfig_ConfigMetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ContractConfig_ConfigMetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ContractConfig_ConfigMetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ContractConfig_ConfigMetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ContractConfig_ConfigMetadataEntry_DoNotUseDefaultTypeInternal _ContractConfig_ConfigMetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR ContractAuditRequest_FiltersEntry_DoNotUse::ContractAuditRequest_FiltersEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ContractAuditRequest_FiltersEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ContractAuditRequest_FiltersEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ContractAuditRequest_FiltersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ContractAuditRequest_FiltersEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ContractAuditRequest_FiltersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ContractAuditRequest_FiltersEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ContractAuditRequest_FiltersEntry_DoNotUseDefaultTypeInternal _ContractAuditRequest_FiltersEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR ContractAuditLog_DetailsEntry_DoNotUse::ContractAuditLog_DetailsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ContractAuditLog_DetailsEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ContractAuditLog_DetailsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ContractAuditLog_DetailsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ContractAuditLog_DetailsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ContractAuditLog_DetailsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ContractAuditLog_DetailsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ContractAuditLog_DetailsEntry_DoNotUseDefaultTypeInternal _ContractAuditLog_DetailsEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR ContractActionResponse_ResponseMetadataEntry_DoNotUse::ContractActionResponse_ResponseMetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ContractActionResponse_ResponseMetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ContractActionResponse_ResponseMetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ContractActionResponse_ResponseMetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ContractActionResponse_ResponseMetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ContractActionResponse_ResponseMetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ContractActionResponse_ResponseMetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ContractActionResponse_ResponseMetadataEntry_DoNotUseDefaultTypeInternal _ContractActionResponse_ResponseMetadataEntry_DoNotUse_default_instance_;

inline constexpr CancelContractRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : contract_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        cancelled_by_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        cancellation_reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        cancellation_timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CancelContractRequest::CancelContractRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CancelContractRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CancelContractRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CancelContractRequestDefaultTypeInternal() {}
  union {
    CancelContractRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CancelContractRequestDefaultTypeInternal _CancelContractRequest_default_instance_;

inline constexpr ModifyContractRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : new_terms_{},
        contract_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        modified_by_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        modification_timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ModifyContractRequest::ModifyContractRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ModifyContractRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModifyContractRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModifyContractRequestDefaultTypeInternal() {}
  union {
    ModifyContractRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModifyContractRequestDefaultTypeInternal _ModifyContractRequest_default_instance_;

inline constexpr ContractExecutionCriteria::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : required_roles_{},
        conditions_{},
        dependent_contract_ids_{},
        contract_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        min_vote_count_{0},
        adaptive_threshold_enabled_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ContractExecutionCriteria::ContractExecutionCriteria(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ContractExecutionCriteriaDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ContractExecutionCriteriaDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ContractExecutionCriteriaDefaultTypeInternal() {}
  union {
    ContractExecutionCriteria _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ContractExecutionCriteriaDefaultTypeInternal _ContractExecutionCriteria_default_instance_;

inline constexpr ContractExecution::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : execution_metadata_{},
        execution_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        contract_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        initiated_by_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        started_at_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        completed_at_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_{static_cast< ::seigr::smart_contract::ContractExecutionStatus >(0)},
        requires_manual_review_{false},
        gas_limit_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ContractExecution::ContractExecution(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ContractExecutionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ContractExecutionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ContractExecutionDefaultTypeInternal() {}
  union {
    ContractExecution _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ContractExecutionDefaultTypeInternal _ContractExecution_default_instance_;

inline constexpr ContractConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : terms_{},
        config_metadata_{},
        contract_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        created_by_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        created_at_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        expiration_date_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        contract_type_{static_cast< ::seigr::smart_contract::ContractType >(0)},
        requires_voting_approval_{false},
        enforce_adaptive_conditions_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ContractConfig::ContractConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ContractConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ContractConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ContractConfigDefaultTypeInternal() {}
  union {
    ContractConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ContractConfigDefaultTypeInternal _ContractConfig_default_instance_;

inline constexpr ContractAuditRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : filters_{},
        contract_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        time_range_start_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        time_range_end_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ContractAuditRequest::ContractAuditRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ContractAuditRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ContractAuditRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ContractAuditRequestDefaultTypeInternal() {}
  union {
    ContractAuditRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ContractAuditRequestDefaultTypeInternal _ContractAuditRequest_default_instance_;

inline constexpr ContractAuditLog::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : details_{},
        log_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        contract_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        action_by_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        corrective_action_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        action_{static_cast< ::seigr::smart_contract::ContractAuditAction >(0)},
        compliance_flag_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ContractAuditLog::ContractAuditLog(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ContractAuditLogDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ContractAuditLogDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ContractAuditLogDefaultTypeInternal() {}
  union {
    ContractAuditLog _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ContractAuditLogDefaultTypeInternal _ContractAuditLog_default_instance_;

inline constexpr ContractActionResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : response_metadata_{},
        contract_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        response_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        result_message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false},
        final_status_{static_cast< ::seigr::smart_contract::ContractExecutionStatus >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ContractActionResponse::ContractActionResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ContractActionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ContractActionResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ContractActionResponseDefaultTypeInternal() {}
  union {
    ContractActionResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ContractActionResponseDefaultTypeInternal _ContractActionResponse_default_instance_;

inline constexpr ContractAuditResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : logs_{},
        status_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ContractAuditResponse::ContractAuditResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ContractAuditResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ContractAuditResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ContractAuditResponseDefaultTypeInternal() {}
  union {
    ContractAuditResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ContractAuditResponseDefaultTypeInternal _ContractAuditResponse_default_instance_;
}  // namespace smart_contract
}  // namespace seigr
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_smart_5fcontract_2eproto[3];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_smart_5fcontract_2eproto = nullptr;
const ::uint32_t
    TableStruct_smart_5fcontract_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractConfig_TermsEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractConfig_TermsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractConfig_TermsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractConfig_TermsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractConfig_ConfigMetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractConfig_ConfigMetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractConfig_ConfigMetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractConfig_ConfigMetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractConfig, _impl_.contract_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractConfig, _impl_.contract_type_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractConfig, _impl_.created_by_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractConfig, _impl_.created_at_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractConfig, _impl_.terms_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractConfig, _impl_.requires_voting_approval_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractConfig, _impl_.enforce_adaptive_conditions_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractConfig, _impl_.config_metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractConfig, _impl_.expiration_date_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractExecutionCriteria_ConditionsEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractExecutionCriteria_ConditionsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractExecutionCriteria_ConditionsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractExecutionCriteria_ConditionsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractExecutionCriteria, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractExecutionCriteria, _impl_.contract_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractExecutionCriteria, _impl_.required_roles_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractExecutionCriteria, _impl_.conditions_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractExecutionCriteria, _impl_.min_vote_count_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractExecutionCriteria, _impl_.adaptive_threshold_enabled_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractExecutionCriteria, _impl_.dependent_contract_ids_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractExecution_ExecutionMetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractExecution_ExecutionMetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractExecution_ExecutionMetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractExecution_ExecutionMetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractExecution, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractExecution, _impl_.execution_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractExecution, _impl_.contract_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractExecution, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractExecution, _impl_.initiated_by_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractExecution, _impl_.started_at_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractExecution, _impl_.completed_at_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractExecution, _impl_.execution_metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractExecution, _impl_.requires_manual_review_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractExecution, _impl_.gas_limit_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractAuditLog_DetailsEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractAuditLog_DetailsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractAuditLog_DetailsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractAuditLog_DetailsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractAuditLog, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractAuditLog, _impl_.log_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractAuditLog, _impl_.contract_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractAuditLog, _impl_.action_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractAuditLog, _impl_.action_by_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractAuditLog, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractAuditLog, _impl_.details_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractAuditLog, _impl_.compliance_flag_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractAuditLog, _impl_.corrective_action_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractActionResponse_ResponseMetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractActionResponse_ResponseMetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractActionResponse_ResponseMetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractActionResponse_ResponseMetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractActionResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractActionResponse, _impl_.contract_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractActionResponse, _impl_.response_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractActionResponse, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractActionResponse, _impl_.result_message_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractActionResponse, _impl_.final_status_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractActionResponse, _impl_.response_metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ModifyContractRequest_NewTermsEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ModifyContractRequest_NewTermsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ModifyContractRequest_NewTermsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ModifyContractRequest_NewTermsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ModifyContractRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ModifyContractRequest, _impl_.contract_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ModifyContractRequest, _impl_.new_terms_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ModifyContractRequest, _impl_.modified_by_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ModifyContractRequest, _impl_.modification_timestamp_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::CancelContractRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::CancelContractRequest, _impl_.contract_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::CancelContractRequest, _impl_.cancelled_by_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::CancelContractRequest, _impl_.cancellation_reason_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::CancelContractRequest, _impl_.cancellation_timestamp_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractAuditRequest_FiltersEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractAuditRequest_FiltersEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractAuditRequest_FiltersEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractAuditRequest_FiltersEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractAuditRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractAuditRequest, _impl_.contract_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractAuditRequest, _impl_.time_range_start_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractAuditRequest, _impl_.time_range_end_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractAuditRequest, _impl_.filters_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractAuditResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractAuditResponse, _impl_.logs_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractAuditResponse, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::seigr::smart_contract::ContractAuditResponse, _impl_.message_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::seigr::smart_contract::ContractConfig_TermsEntry_DoNotUse)},
        {12, 22, -1, sizeof(::seigr::smart_contract::ContractConfig_ConfigMetadataEntry_DoNotUse)},
        {24, -1, -1, sizeof(::seigr::smart_contract::ContractConfig)},
        {41, 51, -1, sizeof(::seigr::smart_contract::ContractExecutionCriteria_ConditionsEntry_DoNotUse)},
        {53, -1, -1, sizeof(::seigr::smart_contract::ContractExecutionCriteria)},
        {67, 77, -1, sizeof(::seigr::smart_contract::ContractExecution_ExecutionMetadataEntry_DoNotUse)},
        {79, -1, -1, sizeof(::seigr::smart_contract::ContractExecution)},
        {96, 106, -1, sizeof(::seigr::smart_contract::ContractAuditLog_DetailsEntry_DoNotUse)},
        {108, -1, -1, sizeof(::seigr::smart_contract::ContractAuditLog)},
        {124, 134, -1, sizeof(::seigr::smart_contract::ContractActionResponse_ResponseMetadataEntry_DoNotUse)},
        {136, -1, -1, sizeof(::seigr::smart_contract::ContractActionResponse)},
        {150, 160, -1, sizeof(::seigr::smart_contract::ModifyContractRequest_NewTermsEntry_DoNotUse)},
        {162, -1, -1, sizeof(::seigr::smart_contract::ModifyContractRequest)},
        {174, -1, -1, sizeof(::seigr::smart_contract::CancelContractRequest)},
        {186, 196, -1, sizeof(::seigr::smart_contract::ContractAuditRequest_FiltersEntry_DoNotUse)},
        {198, -1, -1, sizeof(::seigr::smart_contract::ContractAuditRequest)},
        {210, -1, -1, sizeof(::seigr::smart_contract::ContractAuditResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::seigr::smart_contract::_ContractConfig_TermsEntry_DoNotUse_default_instance_._instance,
    &::seigr::smart_contract::_ContractConfig_ConfigMetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::smart_contract::_ContractConfig_default_instance_._instance,
    &::seigr::smart_contract::_ContractExecutionCriteria_ConditionsEntry_DoNotUse_default_instance_._instance,
    &::seigr::smart_contract::_ContractExecutionCriteria_default_instance_._instance,
    &::seigr::smart_contract::_ContractExecution_ExecutionMetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::smart_contract::_ContractExecution_default_instance_._instance,
    &::seigr::smart_contract::_ContractAuditLog_DetailsEntry_DoNotUse_default_instance_._instance,
    &::seigr::smart_contract::_ContractAuditLog_default_instance_._instance,
    &::seigr::smart_contract::_ContractActionResponse_ResponseMetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::smart_contract::_ContractActionResponse_default_instance_._instance,
    &::seigr::smart_contract::_ModifyContractRequest_NewTermsEntry_DoNotUse_default_instance_._instance,
    &::seigr::smart_contract::_ModifyContractRequest_default_instance_._instance,
    &::seigr::smart_contract::_CancelContractRequest_default_instance_._instance,
    &::seigr::smart_contract::_ContractAuditRequest_FiltersEntry_DoNotUse_default_instance_._instance,
    &::seigr::smart_contract::_ContractAuditRequest_default_instance_._instance,
    &::seigr::smart_contract::_ContractAuditResponse_default_instance_._instance,
};
const char descriptor_table_protodef_smart_5fcontract_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\024smart_contract.proto\022\024seigr.smart_cont"
    "ract\"\340\003\n\016ContractConfig\022\023\n\013contract_id\030\001"
    " \001(\t\0229\n\rcontract_type\030\002 \001(\0162\".seigr.smar"
    "t_contract.ContractType\022\022\n\ncreated_by\030\003 "
    "\001(\t\022\022\n\ncreated_at\030\004 \001(\t\022>\n\005terms\030\005 \003(\0132/"
    ".seigr.smart_contract.ContractConfig.Ter"
    "msEntry\022 \n\030requires_voting_approval\030\006 \001("
    "\010\022#\n\033enforce_adaptive_conditions\030\007 \001(\010\022Q"
    "\n\017config_metadata\030\010 \003(\01328.seigr.smart_co"
    "ntract.ContractConfig.ConfigMetadataEntr"
    "y\022\027\n\017expiration_date\030\t \001(\t\032,\n\nTermsEntry"
    "\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\0325\n\023Conf"
    "igMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 "
    "\001(\t:\0028\001\"\254\002\n\031ContractExecutionCriteria\022\023\n"
    "\013contract_id\030\001 \001(\t\022\026\n\016required_roles\030\002 \003"
    "(\t\022S\n\nconditions\030\003 \003(\0132\?.seigr.smart_con"
    "tract.ContractExecutionCriteria.Conditio"
    "nsEntry\022\026\n\016min_vote_count\030\004 \001(\005\022\"\n\032adapt"
    "ive_threshold_enabled\030\005 \001(\010\022\036\n\026dependent"
    "_contract_ids\030\006 \003(\t\0321\n\017ConditionsEntry\022\013"
    "\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\206\003\n\021Contr"
    "actExecution\022\024\n\014execution_id\030\001 \001(\t\022\023\n\013co"
    "ntract_id\030\002 \001(\t\022=\n\006status\030\003 \001(\0162-.seigr."
    "smart_contract.ContractExecutionStatus\022\024"
    "\n\014initiated_by\030\004 \001(\t\022\022\n\nstarted_at\030\005 \001(\t"
    "\022\024\n\014completed_at\030\006 \001(\t\022Z\n\022execution_meta"
    "data\030\007 \003(\0132>.seigr.smart_contract.Contra"
    "ctExecution.ExecutionMetadataEntry\022\036\n\026re"
    "quires_manual_review\030\010 \001(\010\022\021\n\tgas_limit\030"
    "\t \001(\003\0328\n\026ExecutionMetadataEntry\022\013\n\003key\030\001"
    " \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\302\002\n\020ContractAudi"
    "tLog\022\016\n\006log_id\030\001 \001(\t\022\023\n\013contract_id\030\002 \001("
    "\t\0229\n\006action\030\003 \001(\0162).seigr.smart_contract"
    ".ContractAuditAction\022\021\n\taction_by\030\004 \001(\t\022"
    "\021\n\ttimestamp\030\005 \001(\t\022D\n\007details\030\006 \003(\01323.se"
    "igr.smart_contract.ContractAuditLog.Deta"
    "ilsEntry\022\027\n\017compliance_flag\030\007 \001(\010\022\031\n\021cor"
    "rective_action\030\010 \001(\t\032.\n\014DetailsEntry\022\013\n\003"
    "key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\310\002\n\026Contrac"
    "tActionResponse\022\023\n\013contract_id\030\001 \001(\t\022\023\n\013"
    "response_id\030\002 \001(\t\022\017\n\007success\030\003 \001(\010\022\026\n\016re"
    "sult_message\030\004 \001(\t\022C\n\014final_status\030\005 \001(\016"
    "2-.seigr.smart_contract.ContractExecutio"
    "nStatus\022]\n\021response_metadata\030\006 \003(\0132B.sei"
    "gr.smart_contract.ContractActionResponse"
    ".ResponseMetadataEntry\0327\n\025ResponseMetada"
    "taEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\""
    "\340\001\n\025ModifyContractRequest\022\023\n\013contract_id"
    "\030\001 \001(\t\022L\n\tnew_terms\030\002 \003(\01329.seigr.smart_"
    "contract.ModifyContractRequest.NewTermsE"
    "ntry\022\023\n\013modified_by\030\003 \001(\t\022\036\n\026modificatio"
    "n_timestamp\030\004 \001(\t\032/\n\rNewTermsEntry\022\013\n\003ke"
    "y\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\177\n\025CancelCont"
    "ractRequest\022\023\n\013contract_id\030\001 \001(\t\022\024\n\014canc"
    "elled_by\030\002 \001(\t\022\033\n\023cancellation_reason\030\003 "
    "\001(\t\022\036\n\026cancellation_timestamp\030\004 \001(\t\"\327\001\n\024"
    "ContractAuditRequest\022\023\n\013contract_id\030\001 \001("
    "\t\022\030\n\020time_range_start\030\002 \001(\t\022\026\n\016time_rang"
    "e_end\030\003 \001(\t\022H\n\007filters\030\004 \003(\01327.seigr.sma"
    "rt_contract.ContractAuditRequest.Filters"
    "Entry\032.\n\014FiltersEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005va"
    "lue\030\002 \001(\t:\0028\001\"n\n\025ContractAuditResponse\0224"
    "\n\004logs\030\001 \003(\0132&.seigr.smart_contract.Cont"
    "ractAuditLog\022\016\n\006status\030\002 \001(\t\022\017\n\007message\030"
    "\003 \001(\t*\231\001\n\014ContractType\022\033\n\027CONTRACT_TYPE_"
    "UNDEFINED\020\000\022 \n\034CONTRACT_REWARD_DISTRIBUT"
    "ION\020\001\022 \n\034CONTRACT_RESOURCE_ALLOCATION\020\002\022"
    "\023\n\017CONTRACT_VOTING\020\003\022\023\n\017CONTRACT_CUSTOM\020"
    "\004*\256\001\n\027ContractExecutionStatus\022\036\n\032EXECUTI"
    "ON_STATUS_UNDEFINED\020\000\022\025\n\021EXECUTION_PENDI"
    "NG\020\001\022\024\n\020EXECUTION_ACTIVE\020\002\022\027\n\023EXECUTION_"
    "COMPLETED\020\003\022\024\n\020EXECUTION_FAILED\020\004\022\027\n\023EXE"
    "CUTION_CANCELLED\020\005*\333\001\n\023ContractAuditActi"
    "on\022\032\n\026AUDIT_ACTION_UNDEFINED\020\000\022\030\n\024CONTRA"
    "CT_INITIALIZED\020\001\022\036\n\032CONTRACT_EXECUTION_S"
    "TARTED\020\002\022 \n\034CONTRACT_EXECUTION_COMPLETED"
    "\020\003\022\035\n\031CONTRACT_EXECUTION_FAILED\020\004\022\026\n\022CON"
    "TRACT_CANCELLED\020\005\022\025\n\021CONTRACT_MODIFIED\020\006"
    "2\276\004\n\024SmartContractService\022h\n\022InitializeC"
    "ontract\022$.seigr.smart_contract.ContractC"
    "onfig\032,.seigr.smart_contract.ContractAct"
    "ionResponse\022h\n\017ExecuteContract\022\'.seigr.s"
    "mart_contract.ContractExecution\032,.seigr."
    "smart_contract.ContractActionResponse\022p\n"
    "\023ModifyContractTerms\022+.seigr.smart_contr"
    "act.ModifyContractRequest\032,.seigr.smart_"
    "contract.ContractActionResponse\022k\n\016Cance"
    "lContract\022+.seigr.smart_contract.CancelC"
    "ontractRequest\032,.seigr.smart_contract.Co"
    "ntractActionResponse\022s\n\030RetrieveContract"
    "AuditLog\022*.seigr.smart_contract.Contract"
    "AuditRequest\032+.seigr.smart_contract.Cont"
    "ractAuditResponseb\006proto3"
};
static ::absl::once_flag descriptor_table_smart_5fcontract_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_smart_5fcontract_2eproto = {
    false,
    false,
    3705,
    descriptor_table_protodef_smart_5fcontract_2eproto,
    "smart_contract.proto",
    &descriptor_table_smart_5fcontract_2eproto_once,
    nullptr,
    0,
    17,
    schemas,
    file_default_instances,
    TableStruct_smart_5fcontract_2eproto::offsets,
    file_level_enum_descriptors_smart_5fcontract_2eproto,
    file_level_service_descriptors_smart_5fcontract_2eproto,
};
namespace seigr {
namespace smart_contract {
const ::google::protobuf::EnumDescriptor* ContractType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_smart_5fcontract_2eproto);
  return file_level_enum_descriptors_smart_5fcontract_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t ContractType_internal_data_[] = {
    327680u, 0u, };
bool ContractType_IsValid(int value) {
  return 0 <= value && value <= 4;
}
const ::google::protobuf::EnumDescriptor* ContractExecutionStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_smart_5fcontract_2eproto);
  return file_level_enum_descriptors_smart_5fcontract_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t ContractExecutionStatus_internal_data_[] = {
    393216u, 0u, };
bool ContractExecutionStatus_IsValid(int value) {
  return 0 <= value && value <= 5;
}
const ::google::protobuf::EnumDescriptor* ContractAuditAction_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_smart_5fcontract_2eproto);
  return file_level_enum_descriptors_smart_5fcontract_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t ContractAuditAction_internal_data_[] = {
    458752u, 0u, };
bool ContractAuditAction_IsValid(int value) {
  return 0 <= value && value <= 6;
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              ContractConfig_TermsEntry_DoNotUse::ContractConfig_TermsEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              ContractConfig_TermsEntry_DoNotUse::ContractConfig_TermsEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              ContractConfig_TermsEntry_DoNotUse::ContractConfig_TermsEntry_DoNotUse() : SuperType() {}
              ContractConfig_TermsEntry_DoNotUse::ContractConfig_TermsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* ContractConfig_TermsEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) ContractConfig_TermsEntry_DoNotUse(arena);
              }
              constexpr auto ContractConfig_TermsEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ContractConfig_TermsEntry_DoNotUse),
                                                          alignof(ContractConfig_TermsEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull ContractConfig_TermsEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_ContractConfig_TermsEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &ContractConfig_TermsEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<ContractConfig_TermsEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &ContractConfig_TermsEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &ContractConfig_TermsEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(ContractConfig_TermsEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &ContractConfig_TermsEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_smart_5fcontract_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* ContractConfig_TermsEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 63, 2> ContractConfig_TermsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ContractConfig_TermsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::smart_contract::ContractConfig_TermsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ContractConfig_TermsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ContractConfig_TermsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(ContractConfig_TermsEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(ContractConfig_TermsEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\56\3\5\0\0\0\0\0"
    "seigr.smart_contract.ContractConfig.TermsEntry"
    "key"
    "value"
  }},
};

// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              ContractConfig_ConfigMetadataEntry_DoNotUse::ContractConfig_ConfigMetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              ContractConfig_ConfigMetadataEntry_DoNotUse::ContractConfig_ConfigMetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              ContractConfig_ConfigMetadataEntry_DoNotUse::ContractConfig_ConfigMetadataEntry_DoNotUse() : SuperType() {}
              ContractConfig_ConfigMetadataEntry_DoNotUse::ContractConfig_ConfigMetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* ContractConfig_ConfigMetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) ContractConfig_ConfigMetadataEntry_DoNotUse(arena);
              }
              constexpr auto ContractConfig_ConfigMetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ContractConfig_ConfigMetadataEntry_DoNotUse),
                                                          alignof(ContractConfig_ConfigMetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull ContractConfig_ConfigMetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_ContractConfig_ConfigMetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &ContractConfig_ConfigMetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<ContractConfig_ConfigMetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &ContractConfig_ConfigMetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &ContractConfig_ConfigMetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(ContractConfig_ConfigMetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &ContractConfig_ConfigMetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_smart_5fcontract_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* ContractConfig_ConfigMetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 72, 2> ContractConfig_ConfigMetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ContractConfig_ConfigMetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::smart_contract::ContractConfig_ConfigMetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ContractConfig_ConfigMetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ContractConfig_ConfigMetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(ContractConfig_ConfigMetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(ContractConfig_ConfigMetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\67\3\5\0\0\0\0\0"
    "seigr.smart_contract.ContractConfig.ConfigMetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class ContractConfig::_Internal {
 public:
};

ContractConfig::ContractConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.smart_contract.ContractConfig)
}
inline PROTOBUF_NDEBUG_INLINE ContractConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::smart_contract::ContractConfig& from_msg)
      : terms_{visibility, arena, from.terms_},
        config_metadata_{visibility, arena, from.config_metadata_},
        contract_id_(arena, from.contract_id_),
        created_by_(arena, from.created_by_),
        created_at_(arena, from.created_at_),
        expiration_date_(arena, from.expiration_date_),
        _cached_size_{0} {}

ContractConfig::ContractConfig(
    ::google::protobuf::Arena* arena,
    const ContractConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ContractConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, contract_type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, contract_type_),
           offsetof(Impl_, enforce_adaptive_conditions_) -
               offsetof(Impl_, contract_type_) +
               sizeof(Impl_::enforce_adaptive_conditions_));

  // @@protoc_insertion_point(copy_constructor:seigr.smart_contract.ContractConfig)
}
inline PROTOBUF_NDEBUG_INLINE ContractConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : terms_{visibility, arena},
        config_metadata_{visibility, arena},
        contract_id_(arena),
        created_by_(arena),
        created_at_(arena),
        expiration_date_(arena),
        _cached_size_{0} {}

inline void ContractConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, contract_type_),
           0,
           offsetof(Impl_, enforce_adaptive_conditions_) -
               offsetof(Impl_, contract_type_) +
               sizeof(Impl_::enforce_adaptive_conditions_));
}
ContractConfig::~ContractConfig() {
  // @@protoc_insertion_point(destructor:seigr.smart_contract.ContractConfig)
  SharedDtor(*this);
}
inline void ContractConfig::SharedDtor(MessageLite& self) {
  ContractConfig& this_ = static_cast<ContractConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.contract_id_.Destroy();
  this_._impl_.created_by_.Destroy();
  this_._impl_.created_at_.Destroy();
  this_._impl_.expiration_date_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ContractConfig::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ContractConfig(arena);
}
constexpr auto ContractConfig::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ContractConfig, _impl_.terms_) +
          decltype(ContractConfig::_impl_.terms_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ContractConfig, _impl_.terms_) +
          decltype(ContractConfig::_impl_.terms_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ContractConfig, _impl_.config_metadata_) +
          decltype(ContractConfig::_impl_.config_metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ContractConfig, _impl_.config_metadata_) +
          decltype(ContractConfig::_impl_.config_metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ContractConfig), alignof(ContractConfig), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ContractConfig::PlacementNew_,
                                 sizeof(ContractConfig),
                                 alignof(ContractConfig));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ContractConfig::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ContractConfig_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ContractConfig::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ContractConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ContractConfig::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ContractConfig>(), &ContractConfig::ByteSizeLong,
            &ContractConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ContractConfig, _impl_._cached_size_),
        false,
    },
    &ContractConfig::kDescriptorMethods,
    &descriptor_table_smart_5fcontract_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ContractConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 2, 118, 2> ContractConfig::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::smart_contract::ContractConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string contract_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ContractConfig, _impl_.contract_id_)}},
    // .seigr.smart_contract.ContractType contract_type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ContractConfig, _impl_.contract_type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ContractConfig, _impl_.contract_type_)}},
    // string created_by = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ContractConfig, _impl_.created_by_)}},
    // string created_at = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ContractConfig, _impl_.created_at_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // bool requires_voting_approval = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ContractConfig, _impl_.requires_voting_approval_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(ContractConfig, _impl_.requires_voting_approval_)}},
    // bool enforce_adaptive_conditions = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ContractConfig, _impl_.enforce_adaptive_conditions_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(ContractConfig, _impl_.enforce_adaptive_conditions_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string expiration_date = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(ContractConfig, _impl_.expiration_date_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string contract_id = 1;
    {PROTOBUF_FIELD_OFFSET(ContractConfig, _impl_.contract_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.smart_contract.ContractType contract_type = 2;
    {PROTOBUF_FIELD_OFFSET(ContractConfig, _impl_.contract_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string created_by = 3;
    {PROTOBUF_FIELD_OFFSET(ContractConfig, _impl_.created_by_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string created_at = 4;
    {PROTOBUF_FIELD_OFFSET(ContractConfig, _impl_.created_at_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> terms = 5;
    {PROTOBUF_FIELD_OFFSET(ContractConfig, _impl_.terms_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // bool requires_voting_approval = 6;
    {PROTOBUF_FIELD_OFFSET(ContractConfig, _impl_.requires_voting_approval_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool enforce_adaptive_conditions = 7;
    {PROTOBUF_FIELD_OFFSET(ContractConfig, _impl_.enforce_adaptive_conditions_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // map<string, string> config_metadata = 8;
    {PROTOBUF_FIELD_OFFSET(ContractConfig, _impl_.config_metadata_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string expiration_date = 9;
    {PROTOBUF_FIELD_OFFSET(ContractConfig, _impl_.expiration_date_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(ContractConfig()._impl_.terms_)>(
        1, 0, 0, 9,
        9)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(ContractConfig()._impl_.config_metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\43\13\0\12\12\5\0\0\17\17\0\0\0\0\0\0"
    "seigr.smart_contract.ContractConfig"
    "contract_id"
    "created_by"
    "created_at"
    "terms"
    "config_metadata"
    "expiration_date"
  }},
};

PROTOBUF_NOINLINE void ContractConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.smart_contract.ContractConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.terms_.Clear();
  _impl_.config_metadata_.Clear();
  _impl_.contract_id_.ClearToEmpty();
  _impl_.created_by_.ClearToEmpty();
  _impl_.created_at_.ClearToEmpty();
  _impl_.expiration_date_.ClearToEmpty();
  ::memset(&_impl_.contract_type_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.enforce_adaptive_conditions_) -
      reinterpret_cast<char*>(&_impl_.contract_type_)) + sizeof(_impl_.enforce_adaptive_conditions_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ContractConfig::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ContractConfig& this_ = static_cast<const ContractConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ContractConfig::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ContractConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.smart_contract.ContractConfig)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string contract_id = 1;
          if (!this_._internal_contract_id().empty()) {
            const std::string& _s = this_._internal_contract_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ContractConfig.contract_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // .seigr.smart_contract.ContractType contract_type = 2;
          if (this_._internal_contract_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_contract_type(), target);
          }

          // string created_by = 3;
          if (!this_._internal_created_by().empty()) {
            const std::string& _s = this_._internal_created_by();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ContractConfig.created_by");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string created_at = 4;
          if (!this_._internal_created_at().empty()) {
            const std::string& _s = this_._internal_created_at();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ContractConfig.created_at");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // map<string, string> terms = 5;
          if (!this_._internal_terms().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_terms();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    5, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ContractConfig.terms");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ContractConfig.terms");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    5, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ContractConfig.terms");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ContractConfig.terms");
              }
            }
          }

          // bool requires_voting_approval = 6;
          if (this_._internal_requires_voting_approval() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                6, this_._internal_requires_voting_approval(), target);
          }

          // bool enforce_adaptive_conditions = 7;
          if (this_._internal_enforce_adaptive_conditions() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                7, this_._internal_enforce_adaptive_conditions(), target);
          }

          // map<string, string> config_metadata = 8;
          if (!this_._internal_config_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_config_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    8, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ContractConfig.config_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ContractConfig.config_metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    8, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ContractConfig.config_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ContractConfig.config_metadata");
              }
            }
          }

          // string expiration_date = 9;
          if (!this_._internal_expiration_date().empty()) {
            const std::string& _s = this_._internal_expiration_date();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ContractConfig.expiration_date");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.smart_contract.ContractConfig)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ContractConfig::ByteSizeLong(const MessageLite& base) {
          const ContractConfig& this_ = static_cast<const ContractConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ContractConfig::ByteSizeLong() const {
          const ContractConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.smart_contract.ContractConfig)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> terms = 5;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_terms_size());
              for (const auto& entry : this_._internal_terms()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // map<string, string> config_metadata = 8;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_config_metadata_size());
              for (const auto& entry : this_._internal_config_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string contract_id = 1;
            if (!this_._internal_contract_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_contract_id());
            }
            // string created_by = 3;
            if (!this_._internal_created_by().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_created_by());
            }
            // string created_at = 4;
            if (!this_._internal_created_at().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_created_at());
            }
            // string expiration_date = 9;
            if (!this_._internal_expiration_date().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_expiration_date());
            }
            // .seigr.smart_contract.ContractType contract_type = 2;
            if (this_._internal_contract_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_contract_type());
            }
            // bool requires_voting_approval = 6;
            if (this_._internal_requires_voting_approval() != 0) {
              total_size += 2;
            }
            // bool enforce_adaptive_conditions = 7;
            if (this_._internal_enforce_adaptive_conditions() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ContractConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ContractConfig*>(&to_msg);
  auto& from = static_cast<const ContractConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.smart_contract.ContractConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.terms_.MergeFrom(from._impl_.terms_);
  _this->_impl_.config_metadata_.MergeFrom(from._impl_.config_metadata_);
  if (!from._internal_contract_id().empty()) {
    _this->_internal_set_contract_id(from._internal_contract_id());
  }
  if (!from._internal_created_by().empty()) {
    _this->_internal_set_created_by(from._internal_created_by());
  }
  if (!from._internal_created_at().empty()) {
    _this->_internal_set_created_at(from._internal_created_at());
  }
  if (!from._internal_expiration_date().empty()) {
    _this->_internal_set_expiration_date(from._internal_expiration_date());
  }
  if (from._internal_contract_type() != 0) {
    _this->_impl_.contract_type_ = from._impl_.contract_type_;
  }
  if (from._internal_requires_voting_approval() != 0) {
    _this->_impl_.requires_voting_approval_ = from._impl_.requires_voting_approval_;
  }
  if (from._internal_enforce_adaptive_conditions() != 0) {
    _this->_impl_.enforce_adaptive_conditions_ = from._impl_.enforce_adaptive_conditions_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ContractConfig::CopyFrom(const ContractConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.smart_contract.ContractConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ContractConfig::InternalSwap(ContractConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.terms_.InternalSwap(&other->_impl_.terms_);
  _impl_.config_metadata_.InternalSwap(&other->_impl_.config_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.contract_id_, &other->_impl_.contract_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.created_by_, &other->_impl_.created_by_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.created_at_, &other->_impl_.created_at_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.expiration_date_, &other->_impl_.expiration_date_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ContractConfig, _impl_.enforce_adaptive_conditions_)
      + sizeof(ContractConfig::_impl_.enforce_adaptive_conditions_)
      - PROTOBUF_FIELD_OFFSET(ContractConfig, _impl_.contract_type_)>(
          reinterpret_cast<char*>(&_impl_.contract_type_),
          reinterpret_cast<char*>(&other->_impl_.contract_type_));
}

::google::protobuf::Metadata ContractConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              ContractExecutionCriteria_ConditionsEntry_DoNotUse::ContractExecutionCriteria_ConditionsEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              ContractExecutionCriteria_ConditionsEntry_DoNotUse::ContractExecutionCriteria_ConditionsEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              ContractExecutionCriteria_ConditionsEntry_DoNotUse::ContractExecutionCriteria_ConditionsEntry_DoNotUse() : SuperType() {}
              ContractExecutionCriteria_ConditionsEntry_DoNotUse::ContractExecutionCriteria_ConditionsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* ContractExecutionCriteria_ConditionsEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) ContractExecutionCriteria_ConditionsEntry_DoNotUse(arena);
              }
              constexpr auto ContractExecutionCriteria_ConditionsEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ContractExecutionCriteria_ConditionsEntry_DoNotUse),
                                                          alignof(ContractExecutionCriteria_ConditionsEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull ContractExecutionCriteria_ConditionsEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_ContractExecutionCriteria_ConditionsEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &ContractExecutionCriteria_ConditionsEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<ContractExecutionCriteria_ConditionsEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &ContractExecutionCriteria_ConditionsEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &ContractExecutionCriteria_ConditionsEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(ContractExecutionCriteria_ConditionsEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &ContractExecutionCriteria_ConditionsEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_smart_5fcontract_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* ContractExecutionCriteria_ConditionsEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 79, 2> ContractExecutionCriteria_ConditionsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ContractExecutionCriteria_ConditionsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::smart_contract::ContractExecutionCriteria_ConditionsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ContractExecutionCriteria_ConditionsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ContractExecutionCriteria_ConditionsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(ContractExecutionCriteria_ConditionsEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(ContractExecutionCriteria_ConditionsEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\76\3\5\0\0\0\0\0"
    "seigr.smart_contract.ContractExecutionCriteria.ConditionsEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class ContractExecutionCriteria::_Internal {
 public:
};

ContractExecutionCriteria::ContractExecutionCriteria(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.smart_contract.ContractExecutionCriteria)
}
inline PROTOBUF_NDEBUG_INLINE ContractExecutionCriteria::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::smart_contract::ContractExecutionCriteria& from_msg)
      : required_roles_{visibility, arena, from.required_roles_},
        conditions_{visibility, arena, from.conditions_},
        dependent_contract_ids_{visibility, arena, from.dependent_contract_ids_},
        contract_id_(arena, from.contract_id_),
        _cached_size_{0} {}

ContractExecutionCriteria::ContractExecutionCriteria(
    ::google::protobuf::Arena* arena,
    const ContractExecutionCriteria& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ContractExecutionCriteria* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, min_vote_count_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, min_vote_count_),
           offsetof(Impl_, adaptive_threshold_enabled_) -
               offsetof(Impl_, min_vote_count_) +
               sizeof(Impl_::adaptive_threshold_enabled_));

  // @@protoc_insertion_point(copy_constructor:seigr.smart_contract.ContractExecutionCriteria)
}
inline PROTOBUF_NDEBUG_INLINE ContractExecutionCriteria::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : required_roles_{visibility, arena},
        conditions_{visibility, arena},
        dependent_contract_ids_{visibility, arena},
        contract_id_(arena),
        _cached_size_{0} {}

inline void ContractExecutionCriteria::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, min_vote_count_),
           0,
           offsetof(Impl_, adaptive_threshold_enabled_) -
               offsetof(Impl_, min_vote_count_) +
               sizeof(Impl_::adaptive_threshold_enabled_));
}
ContractExecutionCriteria::~ContractExecutionCriteria() {
  // @@protoc_insertion_point(destructor:seigr.smart_contract.ContractExecutionCriteria)
  SharedDtor(*this);
}
inline void ContractExecutionCriteria::SharedDtor(MessageLite& self) {
  ContractExecutionCriteria& this_ = static_cast<ContractExecutionCriteria&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.contract_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ContractExecutionCriteria::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ContractExecutionCriteria(arena);
}
constexpr auto ContractExecutionCriteria::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ContractExecutionCriteria, _impl_.required_roles_) +
          decltype(ContractExecutionCriteria::_impl_.required_roles_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ContractExecutionCriteria, _impl_.conditions_) +
          decltype(ContractExecutionCriteria::_impl_.conditions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ContractExecutionCriteria, _impl_.conditions_) +
          decltype(ContractExecutionCriteria::_impl_.conditions_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ContractExecutionCriteria, _impl_.dependent_contract_ids_) +
          decltype(ContractExecutionCriteria::_impl_.dependent_contract_ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ContractExecutionCriteria), alignof(ContractExecutionCriteria), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ContractExecutionCriteria::PlacementNew_,
                                 sizeof(ContractExecutionCriteria),
                                 alignof(ContractExecutionCriteria));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ContractExecutionCriteria::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ContractExecutionCriteria_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ContractExecutionCriteria::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ContractExecutionCriteria>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ContractExecutionCriteria::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ContractExecutionCriteria>(), &ContractExecutionCriteria::ByteSizeLong,
            &ContractExecutionCriteria::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ContractExecutionCriteria, _impl_._cached_size_),
        false,
    },
    &ContractExecutionCriteria::kDescriptorMethods,
    &descriptor_table_smart_5fcontract_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ContractExecutionCriteria::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 112, 2> ContractExecutionCriteria::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::smart_contract::ContractExecutionCriteria>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string contract_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ContractExecutionCriteria, _impl_.contract_id_)}},
    // repeated string required_roles = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ContractExecutionCriteria, _impl_.required_roles_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // int32 min_vote_count = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ContractExecutionCriteria, _impl_.min_vote_count_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(ContractExecutionCriteria, _impl_.min_vote_count_)}},
    // bool adaptive_threshold_enabled = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ContractExecutionCriteria, _impl_.adaptive_threshold_enabled_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(ContractExecutionCriteria, _impl_.adaptive_threshold_enabled_)}},
    // repeated string dependent_contract_ids = 6;
    {::_pbi::TcParser::FastUR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(ContractExecutionCriteria, _impl_.dependent_contract_ids_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string contract_id = 1;
    {PROTOBUF_FIELD_OFFSET(ContractExecutionCriteria, _impl_.contract_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string required_roles = 2;
    {PROTOBUF_FIELD_OFFSET(ContractExecutionCriteria, _impl_.required_roles_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // map<string, string> conditions = 3;
    {PROTOBUF_FIELD_OFFSET(ContractExecutionCriteria, _impl_.conditions_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // int32 min_vote_count = 4;
    {PROTOBUF_FIELD_OFFSET(ContractExecutionCriteria, _impl_.min_vote_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool adaptive_threshold_enabled = 5;
    {PROTOBUF_FIELD_OFFSET(ContractExecutionCriteria, _impl_.adaptive_threshold_enabled_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // repeated string dependent_contract_ids = 6;
    {PROTOBUF_FIELD_OFFSET(ContractExecutionCriteria, _impl_.dependent_contract_ids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(ContractExecutionCriteria()._impl_.conditions_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\56\13\16\12\0\0\26\0"
    "seigr.smart_contract.ContractExecutionCriteria"
    "contract_id"
    "required_roles"
    "conditions"
    "dependent_contract_ids"
  }},
};

PROTOBUF_NOINLINE void ContractExecutionCriteria::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.smart_contract.ContractExecutionCriteria)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.required_roles_.Clear();
  _impl_.conditions_.Clear();
  _impl_.dependent_contract_ids_.Clear();
  _impl_.contract_id_.ClearToEmpty();
  ::memset(&_impl_.min_vote_count_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.adaptive_threshold_enabled_) -
      reinterpret_cast<char*>(&_impl_.min_vote_count_)) + sizeof(_impl_.adaptive_threshold_enabled_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ContractExecutionCriteria::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ContractExecutionCriteria& this_ = static_cast<const ContractExecutionCriteria&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ContractExecutionCriteria::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ContractExecutionCriteria& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.smart_contract.ContractExecutionCriteria)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string contract_id = 1;
          if (!this_._internal_contract_id().empty()) {
            const std::string& _s = this_._internal_contract_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ContractExecutionCriteria.contract_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated string required_roles = 2;
          for (int i = 0, n = this_._internal_required_roles_size(); i < n; ++i) {
            const auto& s = this_._internal_required_roles().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ContractExecutionCriteria.required_roles");
            target = stream->WriteString(2, s, target);
          }

          // map<string, string> conditions = 3;
          if (!this_._internal_conditions().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_conditions();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    3, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ContractExecutionCriteria.conditions");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ContractExecutionCriteria.conditions");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    3, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ContractExecutionCriteria.conditions");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ContractExecutionCriteria.conditions");
              }
            }
          }

          // int32 min_vote_count = 4;
          if (this_._internal_min_vote_count() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<4>(
                    stream, this_._internal_min_vote_count(), target);
          }

          // bool adaptive_threshold_enabled = 5;
          if (this_._internal_adaptive_threshold_enabled() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                5, this_._internal_adaptive_threshold_enabled(), target);
          }

          // repeated string dependent_contract_ids = 6;
          for (int i = 0, n = this_._internal_dependent_contract_ids_size(); i < n; ++i) {
            const auto& s = this_._internal_dependent_contract_ids().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ContractExecutionCriteria.dependent_contract_ids");
            target = stream->WriteString(6, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.smart_contract.ContractExecutionCriteria)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ContractExecutionCriteria::ByteSizeLong(const MessageLite& base) {
          const ContractExecutionCriteria& this_ = static_cast<const ContractExecutionCriteria&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ContractExecutionCriteria::ByteSizeLong() const {
          const ContractExecutionCriteria& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.smart_contract.ContractExecutionCriteria)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string required_roles = 2;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_required_roles().size());
              for (int i = 0, n = this_._internal_required_roles().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_required_roles().Get(i));
              }
            }
            // map<string, string> conditions = 3;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_conditions_size());
              for (const auto& entry : this_._internal_conditions()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // repeated string dependent_contract_ids = 6;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_dependent_contract_ids().size());
              for (int i = 0, n = this_._internal_dependent_contract_ids().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_dependent_contract_ids().Get(i));
              }
            }
          }
           {
            // string contract_id = 1;
            if (!this_._internal_contract_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_contract_id());
            }
            // int32 min_vote_count = 4;
            if (this_._internal_min_vote_count() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_min_vote_count());
            }
            // bool adaptive_threshold_enabled = 5;
            if (this_._internal_adaptive_threshold_enabled() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ContractExecutionCriteria::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ContractExecutionCriteria*>(&to_msg);
  auto& from = static_cast<const ContractExecutionCriteria&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.smart_contract.ContractExecutionCriteria)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_required_roles()->MergeFrom(from._internal_required_roles());
  _this->_impl_.conditions_.MergeFrom(from._impl_.conditions_);
  _this->_internal_mutable_dependent_contract_ids()->MergeFrom(from._internal_dependent_contract_ids());
  if (!from._internal_contract_id().empty()) {
    _this->_internal_set_contract_id(from._internal_contract_id());
  }
  if (from._internal_min_vote_count() != 0) {
    _this->_impl_.min_vote_count_ = from._impl_.min_vote_count_;
  }
  if (from._internal_adaptive_threshold_enabled() != 0) {
    _this->_impl_.adaptive_threshold_enabled_ = from._impl_.adaptive_threshold_enabled_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ContractExecutionCriteria::CopyFrom(const ContractExecutionCriteria& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.smart_contract.ContractExecutionCriteria)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ContractExecutionCriteria::InternalSwap(ContractExecutionCriteria* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.required_roles_.InternalSwap(&other->_impl_.required_roles_);
  _impl_.conditions_.InternalSwap(&other->_impl_.conditions_);
  _impl_.dependent_contract_ids_.InternalSwap(&other->_impl_.dependent_contract_ids_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.contract_id_, &other->_impl_.contract_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ContractExecutionCriteria, _impl_.adaptive_threshold_enabled_)
      + sizeof(ContractExecutionCriteria::_impl_.adaptive_threshold_enabled_)
      - PROTOBUF_FIELD_OFFSET(ContractExecutionCriteria, _impl_.min_vote_count_)>(
          reinterpret_cast<char*>(&_impl_.min_vote_count_),
          reinterpret_cast<char*>(&other->_impl_.min_vote_count_));
}

::google::protobuf::Metadata ContractExecutionCriteria::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              ContractExecution_ExecutionMetadataEntry_DoNotUse::ContractExecution_ExecutionMetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              ContractExecution_ExecutionMetadataEntry_DoNotUse::ContractExecution_ExecutionMetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              ContractExecution_ExecutionMetadataEntry_DoNotUse::ContractExecution_ExecutionMetadataEntry_DoNotUse() : SuperType() {}
              ContractExecution_ExecutionMetadataEntry_DoNotUse::ContractExecution_ExecutionMetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* ContractExecution_ExecutionMetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) ContractExecution_ExecutionMetadataEntry_DoNotUse(arena);
              }
              constexpr auto ContractExecution_ExecutionMetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ContractExecution_ExecutionMetadataEntry_DoNotUse),
                                                          alignof(ContractExecution_ExecutionMetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull ContractExecution_ExecutionMetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_ContractExecution_ExecutionMetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &ContractExecution_ExecutionMetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<ContractExecution_ExecutionMetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &ContractExecution_ExecutionMetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &ContractExecution_ExecutionMetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(ContractExecution_ExecutionMetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &ContractExecution_ExecutionMetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_smart_5fcontract_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* ContractExecution_ExecutionMetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 78, 2> ContractExecution_ExecutionMetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ContractExecution_ExecutionMetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::smart_contract::ContractExecution_ExecutionMetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ContractExecution_ExecutionMetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ContractExecution_ExecutionMetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(ContractExecution_ExecutionMetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(ContractExecution_ExecutionMetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\75\3\5\0\0\0\0\0"
    "seigr.smart_contract.ContractExecution.ExecutionMetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class ContractExecution::_Internal {
 public:
};

ContractExecution::ContractExecution(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.smart_contract.ContractExecution)
}
inline PROTOBUF_NDEBUG_INLINE ContractExecution::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::smart_contract::ContractExecution& from_msg)
      : execution_metadata_{visibility, arena, from.execution_metadata_},
        execution_id_(arena, from.execution_id_),
        contract_id_(arena, from.contract_id_),
        initiated_by_(arena, from.initiated_by_),
        started_at_(arena, from.started_at_),
        completed_at_(arena, from.completed_at_),
        _cached_size_{0} {}

ContractExecution::ContractExecution(
    ::google::protobuf::Arena* arena,
    const ContractExecution& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ContractExecution* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, status_),
           offsetof(Impl_, gas_limit_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::gas_limit_));

  // @@protoc_insertion_point(copy_constructor:seigr.smart_contract.ContractExecution)
}
inline PROTOBUF_NDEBUG_INLINE ContractExecution::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : execution_metadata_{visibility, arena},
        execution_id_(arena),
        contract_id_(arena),
        initiated_by_(arena),
        started_at_(arena),
        completed_at_(arena),
        _cached_size_{0} {}

inline void ContractExecution::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_),
           0,
           offsetof(Impl_, gas_limit_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::gas_limit_));
}
ContractExecution::~ContractExecution() {
  // @@protoc_insertion_point(destructor:seigr.smart_contract.ContractExecution)
  SharedDtor(*this);
}
inline void ContractExecution::SharedDtor(MessageLite& self) {
  ContractExecution& this_ = static_cast<ContractExecution&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.execution_id_.Destroy();
  this_._impl_.contract_id_.Destroy();
  this_._impl_.initiated_by_.Destroy();
  this_._impl_.started_at_.Destroy();
  this_._impl_.completed_at_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ContractExecution::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ContractExecution(arena);
}
constexpr auto ContractExecution::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ContractExecution, _impl_.execution_metadata_) +
          decltype(ContractExecution::_impl_.execution_metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ContractExecution, _impl_.execution_metadata_) +
          decltype(ContractExecution::_impl_.execution_metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ContractExecution), alignof(ContractExecution), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ContractExecution::PlacementNew_,
                                 sizeof(ContractExecution),
                                 alignof(ContractExecution));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ContractExecution::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ContractExecution_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ContractExecution::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ContractExecution>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ContractExecution::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ContractExecution>(), &ContractExecution::ByteSizeLong,
            &ContractExecution::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ContractExecution, _impl_._cached_size_),
        false,
    },
    &ContractExecution::kDescriptorMethods,
    &descriptor_table_smart_5fcontract_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ContractExecution::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 1, 130, 2> ContractExecution::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::smart_contract::ContractExecution>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string execution_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ContractExecution, _impl_.execution_id_)}},
    // string contract_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ContractExecution, _impl_.contract_id_)}},
    // .seigr.smart_contract.ContractExecutionStatus status = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ContractExecution, _impl_.status_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(ContractExecution, _impl_.status_)}},
    // string initiated_by = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ContractExecution, _impl_.initiated_by_)}},
    // string started_at = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(ContractExecution, _impl_.started_at_)}},
    // string completed_at = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(ContractExecution, _impl_.completed_at_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // bool requires_manual_review = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ContractExecution, _impl_.requires_manual_review_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(ContractExecution, _impl_.requires_manual_review_)}},
    // int64 gas_limit = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ContractExecution, _impl_.gas_limit_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(ContractExecution, _impl_.gas_limit_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string execution_id = 1;
    {PROTOBUF_FIELD_OFFSET(ContractExecution, _impl_.execution_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string contract_id = 2;
    {PROTOBUF_FIELD_OFFSET(ContractExecution, _impl_.contract_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.smart_contract.ContractExecutionStatus status = 3;
    {PROTOBUF_FIELD_OFFSET(ContractExecution, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string initiated_by = 4;
    {PROTOBUF_FIELD_OFFSET(ContractExecution, _impl_.initiated_by_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string started_at = 5;
    {PROTOBUF_FIELD_OFFSET(ContractExecution, _impl_.started_at_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string completed_at = 6;
    {PROTOBUF_FIELD_OFFSET(ContractExecution, _impl_.completed_at_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> execution_metadata = 7;
    {PROTOBUF_FIELD_OFFSET(ContractExecution, _impl_.execution_metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // bool requires_manual_review = 8;
    {PROTOBUF_FIELD_OFFSET(ContractExecution, _impl_.requires_manual_review_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int64 gas_limit = 9;
    {PROTOBUF_FIELD_OFFSET(ContractExecution, _impl_.gas_limit_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(ContractExecution()._impl_.execution_metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\46\14\13\0\14\12\14\22\0\0\0\0\0\0\0\0"
    "seigr.smart_contract.ContractExecution"
    "execution_id"
    "contract_id"
    "initiated_by"
    "started_at"
    "completed_at"
    "execution_metadata"
  }},
};

PROTOBUF_NOINLINE void ContractExecution::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.smart_contract.ContractExecution)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.execution_metadata_.Clear();
  _impl_.execution_id_.ClearToEmpty();
  _impl_.contract_id_.ClearToEmpty();
  _impl_.initiated_by_.ClearToEmpty();
  _impl_.started_at_.ClearToEmpty();
  _impl_.completed_at_.ClearToEmpty();
  ::memset(&_impl_.status_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.gas_limit_) -
      reinterpret_cast<char*>(&_impl_.status_)) + sizeof(_impl_.gas_limit_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ContractExecution::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ContractExecution& this_ = static_cast<const ContractExecution&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ContractExecution::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ContractExecution& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.smart_contract.ContractExecution)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string execution_id = 1;
          if (!this_._internal_execution_id().empty()) {
            const std::string& _s = this_._internal_execution_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ContractExecution.execution_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string contract_id = 2;
          if (!this_._internal_contract_id().empty()) {
            const std::string& _s = this_._internal_contract_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ContractExecution.contract_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // .seigr.smart_contract.ContractExecutionStatus status = 3;
          if (this_._internal_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_status(), target);
          }

          // string initiated_by = 4;
          if (!this_._internal_initiated_by().empty()) {
            const std::string& _s = this_._internal_initiated_by();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ContractExecution.initiated_by");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string started_at = 5;
          if (!this_._internal_started_at().empty()) {
            const std::string& _s = this_._internal_started_at();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ContractExecution.started_at");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string completed_at = 6;
          if (!this_._internal_completed_at().empty()) {
            const std::string& _s = this_._internal_completed_at();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ContractExecution.completed_at");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // map<string, string> execution_metadata = 7;
          if (!this_._internal_execution_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_execution_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ContractExecution.execution_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ContractExecution.execution_metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ContractExecution.execution_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ContractExecution.execution_metadata");
              }
            }
          }

          // bool requires_manual_review = 8;
          if (this_._internal_requires_manual_review() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                8, this_._internal_requires_manual_review(), target);
          }

          // int64 gas_limit = 9;
          if (this_._internal_gas_limit() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<9>(
                    stream, this_._internal_gas_limit(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.smart_contract.ContractExecution)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ContractExecution::ByteSizeLong(const MessageLite& base) {
          const ContractExecution& this_ = static_cast<const ContractExecution&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ContractExecution::ByteSizeLong() const {
          const ContractExecution& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.smart_contract.ContractExecution)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> execution_metadata = 7;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_execution_metadata_size());
              for (const auto& entry : this_._internal_execution_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string execution_id = 1;
            if (!this_._internal_execution_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_execution_id());
            }
            // string contract_id = 2;
            if (!this_._internal_contract_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_contract_id());
            }
            // string initiated_by = 4;
            if (!this_._internal_initiated_by().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_initiated_by());
            }
            // string started_at = 5;
            if (!this_._internal_started_at().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_started_at());
            }
            // string completed_at = 6;
            if (!this_._internal_completed_at().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_completed_at());
            }
            // .seigr.smart_contract.ContractExecutionStatus status = 3;
            if (this_._internal_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
            }
            // bool requires_manual_review = 8;
            if (this_._internal_requires_manual_review() != 0) {
              total_size += 2;
            }
            // int64 gas_limit = 9;
            if (this_._internal_gas_limit() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_gas_limit());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ContractExecution::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ContractExecution*>(&to_msg);
  auto& from = static_cast<const ContractExecution&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.smart_contract.ContractExecution)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.execution_metadata_.MergeFrom(from._impl_.execution_metadata_);
  if (!from._internal_execution_id().empty()) {
    _this->_internal_set_execution_id(from._internal_execution_id());
  }
  if (!from._internal_contract_id().empty()) {
    _this->_internal_set_contract_id(from._internal_contract_id());
  }
  if (!from._internal_initiated_by().empty()) {
    _this->_internal_set_initiated_by(from._internal_initiated_by());
  }
  if (!from._internal_started_at().empty()) {
    _this->_internal_set_started_at(from._internal_started_at());
  }
  if (!from._internal_completed_at().empty()) {
    _this->_internal_set_completed_at(from._internal_completed_at());
  }
  if (from._internal_status() != 0) {
    _this->_impl_.status_ = from._impl_.status_;
  }
  if (from._internal_requires_manual_review() != 0) {
    _this->_impl_.requires_manual_review_ = from._impl_.requires_manual_review_;
  }
  if (from._internal_gas_limit() != 0) {
    _this->_impl_.gas_limit_ = from._impl_.gas_limit_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ContractExecution::CopyFrom(const ContractExecution& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.smart_contract.ContractExecution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ContractExecution::InternalSwap(ContractExecution* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.execution_metadata_.InternalSwap(&other->_impl_.execution_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.execution_id_, &other->_impl_.execution_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.contract_id_, &other->_impl_.contract_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.initiated_by_, &other->_impl_.initiated_by_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.started_at_, &other->_impl_.started_at_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.completed_at_, &other->_impl_.completed_at_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ContractExecution, _impl_.gas_limit_)
      + sizeof(ContractExecution::_impl_.gas_limit_)
      - PROTOBUF_FIELD_OFFSET(ContractExecution, _impl_.status_)>(
          reinterpret_cast<char*>(&_impl_.status_),
          reinterpret_cast<char*>(&other->_impl_.status_));
}

::google::protobuf::Metadata ContractExecution::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              ContractAuditLog_DetailsEntry_DoNotUse::ContractAuditLog_DetailsEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              ContractAuditLog_DetailsEntry_DoNotUse::ContractAuditLog_DetailsEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              ContractAuditLog_DetailsEntry_DoNotUse::ContractAuditLog_DetailsEntry_DoNotUse() : SuperType() {}
              ContractAuditLog_DetailsEntry_DoNotUse::ContractAuditLog_DetailsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* ContractAuditLog_DetailsEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) ContractAuditLog_DetailsEntry_DoNotUse(arena);
              }
              constexpr auto ContractAuditLog_DetailsEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ContractAuditLog_DetailsEntry_DoNotUse),
                                                          alignof(ContractAuditLog_DetailsEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull ContractAuditLog_DetailsEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_ContractAuditLog_DetailsEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &ContractAuditLog_DetailsEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<ContractAuditLog_DetailsEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &ContractAuditLog_DetailsEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &ContractAuditLog_DetailsEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(ContractAuditLog_DetailsEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &ContractAuditLog_DetailsEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_smart_5fcontract_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* ContractAuditLog_DetailsEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 67, 2> ContractAuditLog_DetailsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ContractAuditLog_DetailsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::smart_contract::ContractAuditLog_DetailsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ContractAuditLog_DetailsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ContractAuditLog_DetailsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(ContractAuditLog_DetailsEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(ContractAuditLog_DetailsEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\62\3\5\0\0\0\0\0"
    "seigr.smart_contract.ContractAuditLog.DetailsEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class ContractAuditLog::_Internal {
 public:
};

ContractAuditLog::ContractAuditLog(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.smart_contract.ContractAuditLog)
}
inline PROTOBUF_NDEBUG_INLINE ContractAuditLog::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::smart_contract::ContractAuditLog& from_msg)
      : details_{visibility, arena, from.details_},
        log_id_(arena, from.log_id_),
        contract_id_(arena, from.contract_id_),
        action_by_(arena, from.action_by_),
        timestamp_(arena, from.timestamp_),
        corrective_action_(arena, from.corrective_action_),
        _cached_size_{0} {}

ContractAuditLog::ContractAuditLog(
    ::google::protobuf::Arena* arena,
    const ContractAuditLog& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ContractAuditLog* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, action_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, action_),
           offsetof(Impl_, compliance_flag_) -
               offsetof(Impl_, action_) +
               sizeof(Impl_::compliance_flag_));

  // @@protoc_insertion_point(copy_constructor:seigr.smart_contract.ContractAuditLog)
}
inline PROTOBUF_NDEBUG_INLINE ContractAuditLog::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : details_{visibility, arena},
        log_id_(arena),
        contract_id_(arena),
        action_by_(arena),
        timestamp_(arena),
        corrective_action_(arena),
        _cached_size_{0} {}

inline void ContractAuditLog::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, action_),
           0,
           offsetof(Impl_, compliance_flag_) -
               offsetof(Impl_, action_) +
               sizeof(Impl_::compliance_flag_));
}
ContractAuditLog::~ContractAuditLog() {
  // @@protoc_insertion_point(destructor:seigr.smart_contract.ContractAuditLog)
  SharedDtor(*this);
}
inline void ContractAuditLog::SharedDtor(MessageLite& self) {
  ContractAuditLog& this_ = static_cast<ContractAuditLog&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.log_id_.Destroy();
  this_._impl_.contract_id_.Destroy();
  this_._impl_.action_by_.Destroy();
  this_._impl_.timestamp_.Destroy();
  this_._impl_.corrective_action_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ContractAuditLog::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ContractAuditLog(arena);
}
constexpr auto ContractAuditLog::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ContractAuditLog, _impl_.details_) +
          decltype(ContractAuditLog::_impl_.details_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ContractAuditLog, _impl_.details_) +
          decltype(ContractAuditLog::_impl_.details_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ContractAuditLog), alignof(ContractAuditLog), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ContractAuditLog::PlacementNew_,
                                 sizeof(ContractAuditLog),
                                 alignof(ContractAuditLog));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ContractAuditLog::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ContractAuditLog_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ContractAuditLog::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ContractAuditLog>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ContractAuditLog::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ContractAuditLog>(), &ContractAuditLog::ByteSizeLong,
            &ContractAuditLog::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ContractAuditLog, _impl_._cached_size_),
        false,
    },
    &ContractAuditLog::kDescriptorMethods,
    &descriptor_table_smart_5fcontract_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ContractAuditLog::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 1, 113, 2> ContractAuditLog::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::smart_contract::ContractAuditLog>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string corrective_action = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(ContractAuditLog, _impl_.corrective_action_)}},
    // string log_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ContractAuditLog, _impl_.log_id_)}},
    // string contract_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ContractAuditLog, _impl_.contract_id_)}},
    // .seigr.smart_contract.ContractAuditAction action = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ContractAuditLog, _impl_.action_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(ContractAuditLog, _impl_.action_)}},
    // string action_by = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ContractAuditLog, _impl_.action_by_)}},
    // string timestamp = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(ContractAuditLog, _impl_.timestamp_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // bool compliance_flag = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ContractAuditLog, _impl_.compliance_flag_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(ContractAuditLog, _impl_.compliance_flag_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string log_id = 1;
    {PROTOBUF_FIELD_OFFSET(ContractAuditLog, _impl_.log_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string contract_id = 2;
    {PROTOBUF_FIELD_OFFSET(ContractAuditLog, _impl_.contract_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.smart_contract.ContractAuditAction action = 3;
    {PROTOBUF_FIELD_OFFSET(ContractAuditLog, _impl_.action_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string action_by = 4;
    {PROTOBUF_FIELD_OFFSET(ContractAuditLog, _impl_.action_by_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string timestamp = 5;
    {PROTOBUF_FIELD_OFFSET(ContractAuditLog, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> details = 6;
    {PROTOBUF_FIELD_OFFSET(ContractAuditLog, _impl_.details_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // bool compliance_flag = 7;
    {PROTOBUF_FIELD_OFFSET(ContractAuditLog, _impl_.compliance_flag_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string corrective_action = 8;
    {PROTOBUF_FIELD_OFFSET(ContractAuditLog, _impl_.corrective_action_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(ContractAuditLog()._impl_.details_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\45\6\13\0\11\11\7\0\21\0\0\0\0\0\0\0"
    "seigr.smart_contract.ContractAuditLog"
    "log_id"
    "contract_id"
    "action_by"
    "timestamp"
    "details"
    "corrective_action"
  }},
};

PROTOBUF_NOINLINE void ContractAuditLog::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.smart_contract.ContractAuditLog)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.details_.Clear();
  _impl_.log_id_.ClearToEmpty();
  _impl_.contract_id_.ClearToEmpty();
  _impl_.action_by_.ClearToEmpty();
  _impl_.timestamp_.ClearToEmpty();
  _impl_.corrective_action_.ClearToEmpty();
  ::memset(&_impl_.action_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.compliance_flag_) -
      reinterpret_cast<char*>(&_impl_.action_)) + sizeof(_impl_.compliance_flag_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ContractAuditLog::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ContractAuditLog& this_ = static_cast<const ContractAuditLog&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ContractAuditLog::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ContractAuditLog& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.smart_contract.ContractAuditLog)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string log_id = 1;
          if (!this_._internal_log_id().empty()) {
            const std::string& _s = this_._internal_log_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ContractAuditLog.log_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string contract_id = 2;
          if (!this_._internal_contract_id().empty()) {
            const std::string& _s = this_._internal_contract_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ContractAuditLog.contract_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // .seigr.smart_contract.ContractAuditAction action = 3;
          if (this_._internal_action() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_action(), target);
          }

          // string action_by = 4;
          if (!this_._internal_action_by().empty()) {
            const std::string& _s = this_._internal_action_by();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ContractAuditLog.action_by");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string timestamp = 5;
          if (!this_._internal_timestamp().empty()) {
            const std::string& _s = this_._internal_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ContractAuditLog.timestamp");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // map<string, string> details = 6;
          if (!this_._internal_details().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_details();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ContractAuditLog.details");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ContractAuditLog.details");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ContractAuditLog.details");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ContractAuditLog.details");
              }
            }
          }

          // bool compliance_flag = 7;
          if (this_._internal_compliance_flag() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                7, this_._internal_compliance_flag(), target);
          }

          // string corrective_action = 8;
          if (!this_._internal_corrective_action().empty()) {
            const std::string& _s = this_._internal_corrective_action();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ContractAuditLog.corrective_action");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.smart_contract.ContractAuditLog)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ContractAuditLog::ByteSizeLong(const MessageLite& base) {
          const ContractAuditLog& this_ = static_cast<const ContractAuditLog&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ContractAuditLog::ByteSizeLong() const {
          const ContractAuditLog& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.smart_contract.ContractAuditLog)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> details = 6;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_details_size());
              for (const auto& entry : this_._internal_details()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string log_id = 1;
            if (!this_._internal_log_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_log_id());
            }
            // string contract_id = 2;
            if (!this_._internal_contract_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_contract_id());
            }
            // string action_by = 4;
            if (!this_._internal_action_by().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_action_by());
            }
            // string timestamp = 5;
            if (!this_._internal_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_timestamp());
            }
            // string corrective_action = 8;
            if (!this_._internal_corrective_action().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_corrective_action());
            }
            // .seigr.smart_contract.ContractAuditAction action = 3;
            if (this_._internal_action() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_action());
            }
            // bool compliance_flag = 7;
            if (this_._internal_compliance_flag() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ContractAuditLog::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ContractAuditLog*>(&to_msg);
  auto& from = static_cast<const ContractAuditLog&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.smart_contract.ContractAuditLog)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.details_.MergeFrom(from._impl_.details_);
  if (!from._internal_log_id().empty()) {
    _this->_internal_set_log_id(from._internal_log_id());
  }
  if (!from._internal_contract_id().empty()) {
    _this->_internal_set_contract_id(from._internal_contract_id());
  }
  if (!from._internal_action_by().empty()) {
    _this->_internal_set_action_by(from._internal_action_by());
  }
  if (!from._internal_timestamp().empty()) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (!from._internal_corrective_action().empty()) {
    _this->_internal_set_corrective_action(from._internal_corrective_action());
  }
  if (from._internal_action() != 0) {
    _this->_impl_.action_ = from._impl_.action_;
  }
  if (from._internal_compliance_flag() != 0) {
    _this->_impl_.compliance_flag_ = from._impl_.compliance_flag_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ContractAuditLog::CopyFrom(const ContractAuditLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.smart_contract.ContractAuditLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ContractAuditLog::InternalSwap(ContractAuditLog* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.details_.InternalSwap(&other->_impl_.details_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.log_id_, &other->_impl_.log_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.contract_id_, &other->_impl_.contract_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.action_by_, &other->_impl_.action_by_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.timestamp_, &other->_impl_.timestamp_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.corrective_action_, &other->_impl_.corrective_action_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ContractAuditLog, _impl_.compliance_flag_)
      + sizeof(ContractAuditLog::_impl_.compliance_flag_)
      - PROTOBUF_FIELD_OFFSET(ContractAuditLog, _impl_.action_)>(
          reinterpret_cast<char*>(&_impl_.action_),
          reinterpret_cast<char*>(&other->_impl_.action_));
}

::google::protobuf::Metadata ContractAuditLog::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              ContractActionResponse_ResponseMetadataEntry_DoNotUse::ContractActionResponse_ResponseMetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              ContractActionResponse_ResponseMetadataEntry_DoNotUse::ContractActionResponse_ResponseMetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              ContractActionResponse_ResponseMetadataEntry_DoNotUse::ContractActionResponse_ResponseMetadataEntry_DoNotUse() : SuperType() {}
              ContractActionResponse_ResponseMetadataEntry_DoNotUse::ContractActionResponse_ResponseMetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* ContractActionResponse_ResponseMetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) ContractActionResponse_ResponseMetadataEntry_DoNotUse(arena);
              }
              constexpr auto ContractActionResponse_ResponseMetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ContractActionResponse_ResponseMetadataEntry_DoNotUse),
                                                          alignof(ContractActionResponse_ResponseMetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull ContractActionResponse_ResponseMetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_ContractActionResponse_ResponseMetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &ContractActionResponse_ResponseMetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<ContractActionResponse_ResponseMetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &ContractActionResponse_ResponseMetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &ContractActionResponse_ResponseMetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(ContractActionResponse_ResponseMetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &ContractActionResponse_ResponseMetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_smart_5fcontract_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* ContractActionResponse_ResponseMetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 82, 2> ContractActionResponse_ResponseMetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ContractActionResponse_ResponseMetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::smart_contract::ContractActionResponse_ResponseMetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ContractActionResponse_ResponseMetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ContractActionResponse_ResponseMetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(ContractActionResponse_ResponseMetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(ContractActionResponse_ResponseMetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\101\3\5\0\0\0\0\0"
    "seigr.smart_contract.ContractActionResponse.ResponseMetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class ContractActionResponse::_Internal {
 public:
};

ContractActionResponse::ContractActionResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.smart_contract.ContractActionResponse)
}
inline PROTOBUF_NDEBUG_INLINE ContractActionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::smart_contract::ContractActionResponse& from_msg)
      : response_metadata_{visibility, arena, from.response_metadata_},
        contract_id_(arena, from.contract_id_),
        response_id_(arena, from.response_id_),
        result_message_(arena, from.result_message_),
        _cached_size_{0} {}

ContractActionResponse::ContractActionResponse(
    ::google::protobuf::Arena* arena,
    const ContractActionResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ContractActionResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, success_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, success_),
           offsetof(Impl_, final_status_) -
               offsetof(Impl_, success_) +
               sizeof(Impl_::final_status_));

  // @@protoc_insertion_point(copy_constructor:seigr.smart_contract.ContractActionResponse)
}
inline PROTOBUF_NDEBUG_INLINE ContractActionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : response_metadata_{visibility, arena},
        contract_id_(arena),
        response_id_(arena),
        result_message_(arena),
        _cached_size_{0} {}

inline void ContractActionResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, success_),
           0,
           offsetof(Impl_, final_status_) -
               offsetof(Impl_, success_) +
               sizeof(Impl_::final_status_));
}
ContractActionResponse::~ContractActionResponse() {
  // @@protoc_insertion_point(destructor:seigr.smart_contract.ContractActionResponse)
  SharedDtor(*this);
}
inline void ContractActionResponse::SharedDtor(MessageLite& self) {
  ContractActionResponse& this_ = static_cast<ContractActionResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.contract_id_.Destroy();
  this_._impl_.response_id_.Destroy();
  this_._impl_.result_message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ContractActionResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ContractActionResponse(arena);
}
constexpr auto ContractActionResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ContractActionResponse, _impl_.response_metadata_) +
          decltype(ContractActionResponse::_impl_.response_metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ContractActionResponse, _impl_.response_metadata_) +
          decltype(ContractActionResponse::_impl_.response_metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ContractActionResponse), alignof(ContractActionResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ContractActionResponse::PlacementNew_,
                                 sizeof(ContractActionResponse),
                                 alignof(ContractActionResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ContractActionResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ContractActionResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ContractActionResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ContractActionResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ContractActionResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ContractActionResponse>(), &ContractActionResponse::ByteSizeLong,
            &ContractActionResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ContractActionResponse, _impl_._cached_size_),
        false,
    },
    &ContractActionResponse::kDescriptorMethods,
    &descriptor_table_smart_5fcontract_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ContractActionResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 105, 2> ContractActionResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::smart_contract::ContractActionResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string contract_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ContractActionResponse, _impl_.contract_id_)}},
    // string response_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ContractActionResponse, _impl_.response_id_)}},
    // bool success = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ContractActionResponse, _impl_.success_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(ContractActionResponse, _impl_.success_)}},
    // string result_message = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ContractActionResponse, _impl_.result_message_)}},
    // .seigr.smart_contract.ContractExecutionStatus final_status = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ContractActionResponse, _impl_.final_status_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(ContractActionResponse, _impl_.final_status_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string contract_id = 1;
    {PROTOBUF_FIELD_OFFSET(ContractActionResponse, _impl_.contract_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string response_id = 2;
    {PROTOBUF_FIELD_OFFSET(ContractActionResponse, _impl_.response_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool success = 3;
    {PROTOBUF_FIELD_OFFSET(ContractActionResponse, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string result_message = 4;
    {PROTOBUF_FIELD_OFFSET(ContractActionResponse, _impl_.result_message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.smart_contract.ContractExecutionStatus final_status = 5;
    {PROTOBUF_FIELD_OFFSET(ContractActionResponse, _impl_.final_status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // map<string, string> response_metadata = 6;
    {PROTOBUF_FIELD_OFFSET(ContractActionResponse, _impl_.response_metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(ContractActionResponse()._impl_.response_metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\53\13\13\0\16\0\21\0"
    "seigr.smart_contract.ContractActionResponse"
    "contract_id"
    "response_id"
    "result_message"
    "response_metadata"
  }},
};

PROTOBUF_NOINLINE void ContractActionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.smart_contract.ContractActionResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.response_metadata_.Clear();
  _impl_.contract_id_.ClearToEmpty();
  _impl_.response_id_.ClearToEmpty();
  _impl_.result_message_.ClearToEmpty();
  ::memset(&_impl_.success_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.final_status_) -
      reinterpret_cast<char*>(&_impl_.success_)) + sizeof(_impl_.final_status_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ContractActionResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ContractActionResponse& this_ = static_cast<const ContractActionResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ContractActionResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ContractActionResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.smart_contract.ContractActionResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string contract_id = 1;
          if (!this_._internal_contract_id().empty()) {
            const std::string& _s = this_._internal_contract_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ContractActionResponse.contract_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string response_id = 2;
          if (!this_._internal_response_id().empty()) {
            const std::string& _s = this_._internal_response_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ContractActionResponse.response_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // bool success = 3;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_success(), target);
          }

          // string result_message = 4;
          if (!this_._internal_result_message().empty()) {
            const std::string& _s = this_._internal_result_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ContractActionResponse.result_message");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // .seigr.smart_contract.ContractExecutionStatus final_status = 5;
          if (this_._internal_final_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                5, this_._internal_final_status(), target);
          }

          // map<string, string> response_metadata = 6;
          if (!this_._internal_response_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_response_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ContractActionResponse.response_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ContractActionResponse.response_metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ContractActionResponse.response_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ContractActionResponse.response_metadata");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.smart_contract.ContractActionResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ContractActionResponse::ByteSizeLong(const MessageLite& base) {
          const ContractActionResponse& this_ = static_cast<const ContractActionResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ContractActionResponse::ByteSizeLong() const {
          const ContractActionResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.smart_contract.ContractActionResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> response_metadata = 6;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_response_metadata_size());
              for (const auto& entry : this_._internal_response_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string contract_id = 1;
            if (!this_._internal_contract_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_contract_id());
            }
            // string response_id = 2;
            if (!this_._internal_response_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_response_id());
            }
            // string result_message = 4;
            if (!this_._internal_result_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_result_message());
            }
            // bool success = 3;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
            // .seigr.smart_contract.ContractExecutionStatus final_status = 5;
            if (this_._internal_final_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_final_status());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ContractActionResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ContractActionResponse*>(&to_msg);
  auto& from = static_cast<const ContractActionResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.smart_contract.ContractActionResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.response_metadata_.MergeFrom(from._impl_.response_metadata_);
  if (!from._internal_contract_id().empty()) {
    _this->_internal_set_contract_id(from._internal_contract_id());
  }
  if (!from._internal_response_id().empty()) {
    _this->_internal_set_response_id(from._internal_response_id());
  }
  if (!from._internal_result_message().empty()) {
    _this->_internal_set_result_message(from._internal_result_message());
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  if (from._internal_final_status() != 0) {
    _this->_impl_.final_status_ = from._impl_.final_status_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ContractActionResponse::CopyFrom(const ContractActionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.smart_contract.ContractActionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ContractActionResponse::InternalSwap(ContractActionResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.response_metadata_.InternalSwap(&other->_impl_.response_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.contract_id_, &other->_impl_.contract_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.response_id_, &other->_impl_.response_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.result_message_, &other->_impl_.result_message_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ContractActionResponse, _impl_.final_status_)
      + sizeof(ContractActionResponse::_impl_.final_status_)
      - PROTOBUF_FIELD_OFFSET(ContractActionResponse, _impl_.success_)>(
          reinterpret_cast<char*>(&_impl_.success_),
          reinterpret_cast<char*>(&other->_impl_.success_));
}

::google::protobuf::Metadata ContractActionResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              ModifyContractRequest_NewTermsEntry_DoNotUse::ModifyContractRequest_NewTermsEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              ModifyContractRequest_NewTermsEntry_DoNotUse::ModifyContractRequest_NewTermsEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              ModifyContractRequest_NewTermsEntry_DoNotUse::ModifyContractRequest_NewTermsEntry_DoNotUse() : SuperType() {}
              ModifyContractRequest_NewTermsEntry_DoNotUse::ModifyContractRequest_NewTermsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* ModifyContractRequest_NewTermsEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) ModifyContractRequest_NewTermsEntry_DoNotUse(arena);
              }
              constexpr auto ModifyContractRequest_NewTermsEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ModifyContractRequest_NewTermsEntry_DoNotUse),
                                                          alignof(ModifyContractRequest_NewTermsEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull ModifyContractRequest_NewTermsEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_ModifyContractRequest_NewTermsEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &ModifyContractRequest_NewTermsEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<ModifyContractRequest_NewTermsEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &ModifyContractRequest_NewTermsEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &ModifyContractRequest_NewTermsEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(ModifyContractRequest_NewTermsEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &ModifyContractRequest_NewTermsEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_smart_5fcontract_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* ModifyContractRequest_NewTermsEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 73, 2> ModifyContractRequest_NewTermsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ModifyContractRequest_NewTermsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::smart_contract::ModifyContractRequest_NewTermsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ModifyContractRequest_NewTermsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ModifyContractRequest_NewTermsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(ModifyContractRequest_NewTermsEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(ModifyContractRequest_NewTermsEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\70\3\5\0\0\0\0\0"
    "seigr.smart_contract.ModifyContractRequest.NewTermsEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class ModifyContractRequest::_Internal {
 public:
};

ModifyContractRequest::ModifyContractRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.smart_contract.ModifyContractRequest)
}
inline PROTOBUF_NDEBUG_INLINE ModifyContractRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::smart_contract::ModifyContractRequest& from_msg)
      : new_terms_{visibility, arena, from.new_terms_},
        contract_id_(arena, from.contract_id_),
        modified_by_(arena, from.modified_by_),
        modification_timestamp_(arena, from.modification_timestamp_),
        _cached_size_{0} {}

ModifyContractRequest::ModifyContractRequest(
    ::google::protobuf::Arena* arena,
    const ModifyContractRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ModifyContractRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:seigr.smart_contract.ModifyContractRequest)
}
inline PROTOBUF_NDEBUG_INLINE ModifyContractRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : new_terms_{visibility, arena},
        contract_id_(arena),
        modified_by_(arena),
        modification_timestamp_(arena),
        _cached_size_{0} {}

inline void ModifyContractRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ModifyContractRequest::~ModifyContractRequest() {
  // @@protoc_insertion_point(destructor:seigr.smart_contract.ModifyContractRequest)
  SharedDtor(*this);
}
inline void ModifyContractRequest::SharedDtor(MessageLite& self) {
  ModifyContractRequest& this_ = static_cast<ModifyContractRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.contract_id_.Destroy();
  this_._impl_.modified_by_.Destroy();
  this_._impl_.modification_timestamp_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ModifyContractRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ModifyContractRequest(arena);
}
constexpr auto ModifyContractRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ModifyContractRequest, _impl_.new_terms_) +
          decltype(ModifyContractRequest::_impl_.new_terms_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ModifyContractRequest, _impl_.new_terms_) +
          decltype(ModifyContractRequest::_impl_.new_terms_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ModifyContractRequest), alignof(ModifyContractRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ModifyContractRequest::PlacementNew_,
                                 sizeof(ModifyContractRequest),
                                 alignof(ModifyContractRequest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ModifyContractRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ModifyContractRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ModifyContractRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ModifyContractRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ModifyContractRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ModifyContractRequest>(), &ModifyContractRequest::ByteSizeLong,
            &ModifyContractRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ModifyContractRequest, _impl_._cached_size_),
        false,
    },
    &ModifyContractRequest::kDescriptorMethods,
    &descriptor_table_smart_5fcontract_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ModifyContractRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 104, 2> ModifyContractRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::smart_contract::ModifyContractRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string modification_timestamp = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ModifyContractRequest, _impl_.modification_timestamp_)}},
    // string contract_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ModifyContractRequest, _impl_.contract_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string modified_by = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ModifyContractRequest, _impl_.modified_by_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string contract_id = 1;
    {PROTOBUF_FIELD_OFFSET(ModifyContractRequest, _impl_.contract_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> new_terms = 2;
    {PROTOBUF_FIELD_OFFSET(ModifyContractRequest, _impl_.new_terms_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string modified_by = 3;
    {PROTOBUF_FIELD_OFFSET(ModifyContractRequest, _impl_.modified_by_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string modification_timestamp = 4;
    {PROTOBUF_FIELD_OFFSET(ModifyContractRequest, _impl_.modification_timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(ModifyContractRequest()._impl_.new_terms_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\52\13\11\13\26\0\0\0"
    "seigr.smart_contract.ModifyContractRequest"
    "contract_id"
    "new_terms"
    "modified_by"
    "modification_timestamp"
  }},
};

PROTOBUF_NOINLINE void ModifyContractRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.smart_contract.ModifyContractRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.new_terms_.Clear();
  _impl_.contract_id_.ClearToEmpty();
  _impl_.modified_by_.ClearToEmpty();
  _impl_.modification_timestamp_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ModifyContractRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ModifyContractRequest& this_ = static_cast<const ModifyContractRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ModifyContractRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ModifyContractRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.smart_contract.ModifyContractRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string contract_id = 1;
          if (!this_._internal_contract_id().empty()) {
            const std::string& _s = this_._internal_contract_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ModifyContractRequest.contract_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // map<string, string> new_terms = 2;
          if (!this_._internal_new_terms().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_new_terms();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    2, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ModifyContractRequest.new_terms");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ModifyContractRequest.new_terms");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    2, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ModifyContractRequest.new_terms");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ModifyContractRequest.new_terms");
              }
            }
          }

          // string modified_by = 3;
          if (!this_._internal_modified_by().empty()) {
            const std::string& _s = this_._internal_modified_by();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ModifyContractRequest.modified_by");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string modification_timestamp = 4;
          if (!this_._internal_modification_timestamp().empty()) {
            const std::string& _s = this_._internal_modification_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ModifyContractRequest.modification_timestamp");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.smart_contract.ModifyContractRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ModifyContractRequest::ByteSizeLong(const MessageLite& base) {
          const ModifyContractRequest& this_ = static_cast<const ModifyContractRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ModifyContractRequest::ByteSizeLong() const {
          const ModifyContractRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.smart_contract.ModifyContractRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> new_terms = 2;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_new_terms_size());
              for (const auto& entry : this_._internal_new_terms()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string contract_id = 1;
            if (!this_._internal_contract_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_contract_id());
            }
            // string modified_by = 3;
            if (!this_._internal_modified_by().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_modified_by());
            }
            // string modification_timestamp = 4;
            if (!this_._internal_modification_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_modification_timestamp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ModifyContractRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ModifyContractRequest*>(&to_msg);
  auto& from = static_cast<const ModifyContractRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.smart_contract.ModifyContractRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.new_terms_.MergeFrom(from._impl_.new_terms_);
  if (!from._internal_contract_id().empty()) {
    _this->_internal_set_contract_id(from._internal_contract_id());
  }
  if (!from._internal_modified_by().empty()) {
    _this->_internal_set_modified_by(from._internal_modified_by());
  }
  if (!from._internal_modification_timestamp().empty()) {
    _this->_internal_set_modification_timestamp(from._internal_modification_timestamp());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ModifyContractRequest::CopyFrom(const ModifyContractRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.smart_contract.ModifyContractRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ModifyContractRequest::InternalSwap(ModifyContractRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.new_terms_.InternalSwap(&other->_impl_.new_terms_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.contract_id_, &other->_impl_.contract_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.modified_by_, &other->_impl_.modified_by_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.modification_timestamp_, &other->_impl_.modification_timestamp_, arena);
}

::google::protobuf::Metadata ModifyContractRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CancelContractRequest::_Internal {
 public:
};

CancelContractRequest::CancelContractRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.smart_contract.CancelContractRequest)
}
inline PROTOBUF_NDEBUG_INLINE CancelContractRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::smart_contract::CancelContractRequest& from_msg)
      : contract_id_(arena, from.contract_id_),
        cancelled_by_(arena, from.cancelled_by_),
        cancellation_reason_(arena, from.cancellation_reason_),
        cancellation_timestamp_(arena, from.cancellation_timestamp_),
        _cached_size_{0} {}

CancelContractRequest::CancelContractRequest(
    ::google::protobuf::Arena* arena,
    const CancelContractRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CancelContractRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:seigr.smart_contract.CancelContractRequest)
}
inline PROTOBUF_NDEBUG_INLINE CancelContractRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : contract_id_(arena),
        cancelled_by_(arena),
        cancellation_reason_(arena),
        cancellation_timestamp_(arena),
        _cached_size_{0} {}

inline void CancelContractRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CancelContractRequest::~CancelContractRequest() {
  // @@protoc_insertion_point(destructor:seigr.smart_contract.CancelContractRequest)
  SharedDtor(*this);
}
inline void CancelContractRequest::SharedDtor(MessageLite& self) {
  CancelContractRequest& this_ = static_cast<CancelContractRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.contract_id_.Destroy();
  this_._impl_.cancelled_by_.Destroy();
  this_._impl_.cancellation_reason_.Destroy();
  this_._impl_.cancellation_timestamp_.Destroy();
  this_._impl_.~Impl_();
}

inline void* CancelContractRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CancelContractRequest(arena);
}
constexpr auto CancelContractRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CancelContractRequest),
                                            alignof(CancelContractRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CancelContractRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CancelContractRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CancelContractRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CancelContractRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CancelContractRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CancelContractRequest>(), &CancelContractRequest::ByteSizeLong,
            &CancelContractRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CancelContractRequest, _impl_._cached_size_),
        false,
    },
    &CancelContractRequest::kDescriptorMethods,
    &descriptor_table_smart_5fcontract_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CancelContractRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 115, 2> CancelContractRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::smart_contract::CancelContractRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string cancellation_timestamp = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(CancelContractRequest, _impl_.cancellation_timestamp_)}},
    // string contract_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CancelContractRequest, _impl_.contract_id_)}},
    // string cancelled_by = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CancelContractRequest, _impl_.cancelled_by_)}},
    // string cancellation_reason = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(CancelContractRequest, _impl_.cancellation_reason_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string contract_id = 1;
    {PROTOBUF_FIELD_OFFSET(CancelContractRequest, _impl_.contract_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string cancelled_by = 2;
    {PROTOBUF_FIELD_OFFSET(CancelContractRequest, _impl_.cancelled_by_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string cancellation_reason = 3;
    {PROTOBUF_FIELD_OFFSET(CancelContractRequest, _impl_.cancellation_reason_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string cancellation_timestamp = 4;
    {PROTOBUF_FIELD_OFFSET(CancelContractRequest, _impl_.cancellation_timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\52\13\14\23\26\0\0\0"
    "seigr.smart_contract.CancelContractRequest"
    "contract_id"
    "cancelled_by"
    "cancellation_reason"
    "cancellation_timestamp"
  }},
};

PROTOBUF_NOINLINE void CancelContractRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.smart_contract.CancelContractRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.contract_id_.ClearToEmpty();
  _impl_.cancelled_by_.ClearToEmpty();
  _impl_.cancellation_reason_.ClearToEmpty();
  _impl_.cancellation_timestamp_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CancelContractRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CancelContractRequest& this_ = static_cast<const CancelContractRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CancelContractRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CancelContractRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.smart_contract.CancelContractRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string contract_id = 1;
          if (!this_._internal_contract_id().empty()) {
            const std::string& _s = this_._internal_contract_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.CancelContractRequest.contract_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string cancelled_by = 2;
          if (!this_._internal_cancelled_by().empty()) {
            const std::string& _s = this_._internal_cancelled_by();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.CancelContractRequest.cancelled_by");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string cancellation_reason = 3;
          if (!this_._internal_cancellation_reason().empty()) {
            const std::string& _s = this_._internal_cancellation_reason();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.CancelContractRequest.cancellation_reason");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string cancellation_timestamp = 4;
          if (!this_._internal_cancellation_timestamp().empty()) {
            const std::string& _s = this_._internal_cancellation_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.CancelContractRequest.cancellation_timestamp");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.smart_contract.CancelContractRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CancelContractRequest::ByteSizeLong(const MessageLite& base) {
          const CancelContractRequest& this_ = static_cast<const CancelContractRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CancelContractRequest::ByteSizeLong() const {
          const CancelContractRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.smart_contract.CancelContractRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string contract_id = 1;
            if (!this_._internal_contract_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_contract_id());
            }
            // string cancelled_by = 2;
            if (!this_._internal_cancelled_by().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_cancelled_by());
            }
            // string cancellation_reason = 3;
            if (!this_._internal_cancellation_reason().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_cancellation_reason());
            }
            // string cancellation_timestamp = 4;
            if (!this_._internal_cancellation_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_cancellation_timestamp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CancelContractRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CancelContractRequest*>(&to_msg);
  auto& from = static_cast<const CancelContractRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.smart_contract.CancelContractRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_contract_id().empty()) {
    _this->_internal_set_contract_id(from._internal_contract_id());
  }
  if (!from._internal_cancelled_by().empty()) {
    _this->_internal_set_cancelled_by(from._internal_cancelled_by());
  }
  if (!from._internal_cancellation_reason().empty()) {
    _this->_internal_set_cancellation_reason(from._internal_cancellation_reason());
  }
  if (!from._internal_cancellation_timestamp().empty()) {
    _this->_internal_set_cancellation_timestamp(from._internal_cancellation_timestamp());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CancelContractRequest::CopyFrom(const CancelContractRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.smart_contract.CancelContractRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CancelContractRequest::InternalSwap(CancelContractRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.contract_id_, &other->_impl_.contract_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cancelled_by_, &other->_impl_.cancelled_by_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cancellation_reason_, &other->_impl_.cancellation_reason_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cancellation_timestamp_, &other->_impl_.cancellation_timestamp_, arena);
}

::google::protobuf::Metadata CancelContractRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              ContractAuditRequest_FiltersEntry_DoNotUse::ContractAuditRequest_FiltersEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              ContractAuditRequest_FiltersEntry_DoNotUse::ContractAuditRequest_FiltersEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              ContractAuditRequest_FiltersEntry_DoNotUse::ContractAuditRequest_FiltersEntry_DoNotUse() : SuperType() {}
              ContractAuditRequest_FiltersEntry_DoNotUse::ContractAuditRequest_FiltersEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* ContractAuditRequest_FiltersEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) ContractAuditRequest_FiltersEntry_DoNotUse(arena);
              }
              constexpr auto ContractAuditRequest_FiltersEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ContractAuditRequest_FiltersEntry_DoNotUse),
                                                          alignof(ContractAuditRequest_FiltersEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull ContractAuditRequest_FiltersEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_ContractAuditRequest_FiltersEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &ContractAuditRequest_FiltersEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<ContractAuditRequest_FiltersEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &ContractAuditRequest_FiltersEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &ContractAuditRequest_FiltersEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(ContractAuditRequest_FiltersEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &ContractAuditRequest_FiltersEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_smart_5fcontract_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* ContractAuditRequest_FiltersEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 71, 2> ContractAuditRequest_FiltersEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ContractAuditRequest_FiltersEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::smart_contract::ContractAuditRequest_FiltersEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ContractAuditRequest_FiltersEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ContractAuditRequest_FiltersEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(ContractAuditRequest_FiltersEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(ContractAuditRequest_FiltersEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\66\3\5\0\0\0\0\0"
    "seigr.smart_contract.ContractAuditRequest.FiltersEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class ContractAuditRequest::_Internal {
 public:
};

ContractAuditRequest::ContractAuditRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.smart_contract.ContractAuditRequest)
}
inline PROTOBUF_NDEBUG_INLINE ContractAuditRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::smart_contract::ContractAuditRequest& from_msg)
      : filters_{visibility, arena, from.filters_},
        contract_id_(arena, from.contract_id_),
        time_range_start_(arena, from.time_range_start_),
        time_range_end_(arena, from.time_range_end_),
        _cached_size_{0} {}

ContractAuditRequest::ContractAuditRequest(
    ::google::protobuf::Arena* arena,
    const ContractAuditRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ContractAuditRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:seigr.smart_contract.ContractAuditRequest)
}
inline PROTOBUF_NDEBUG_INLINE ContractAuditRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : filters_{visibility, arena},
        contract_id_(arena),
        time_range_start_(arena),
        time_range_end_(arena),
        _cached_size_{0} {}

inline void ContractAuditRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ContractAuditRequest::~ContractAuditRequest() {
  // @@protoc_insertion_point(destructor:seigr.smart_contract.ContractAuditRequest)
  SharedDtor(*this);
}
inline void ContractAuditRequest::SharedDtor(MessageLite& self) {
  ContractAuditRequest& this_ = static_cast<ContractAuditRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.contract_id_.Destroy();
  this_._impl_.time_range_start_.Destroy();
  this_._impl_.time_range_end_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ContractAuditRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ContractAuditRequest(arena);
}
constexpr auto ContractAuditRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ContractAuditRequest, _impl_.filters_) +
          decltype(ContractAuditRequest::_impl_.filters_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ContractAuditRequest, _impl_.filters_) +
          decltype(ContractAuditRequest::_impl_.filters_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ContractAuditRequest), alignof(ContractAuditRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ContractAuditRequest::PlacementNew_,
                                 sizeof(ContractAuditRequest),
                                 alignof(ContractAuditRequest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ContractAuditRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ContractAuditRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ContractAuditRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ContractAuditRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ContractAuditRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ContractAuditRequest>(), &ContractAuditRequest::ByteSizeLong,
            &ContractAuditRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ContractAuditRequest, _impl_._cached_size_),
        false,
    },
    &ContractAuditRequest::kDescriptorMethods,
    &descriptor_table_smart_5fcontract_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ContractAuditRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 98, 2> ContractAuditRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::smart_contract::ContractAuditRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string contract_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ContractAuditRequest, _impl_.contract_id_)}},
    // string time_range_start = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ContractAuditRequest, _impl_.time_range_start_)}},
    // string time_range_end = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ContractAuditRequest, _impl_.time_range_end_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string contract_id = 1;
    {PROTOBUF_FIELD_OFFSET(ContractAuditRequest, _impl_.contract_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string time_range_start = 2;
    {PROTOBUF_FIELD_OFFSET(ContractAuditRequest, _impl_.time_range_start_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string time_range_end = 3;
    {PROTOBUF_FIELD_OFFSET(ContractAuditRequest, _impl_.time_range_end_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> filters = 4;
    {PROTOBUF_FIELD_OFFSET(ContractAuditRequest, _impl_.filters_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(ContractAuditRequest()._impl_.filters_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\51\13\20\16\7\0\0\0"
    "seigr.smart_contract.ContractAuditRequest"
    "contract_id"
    "time_range_start"
    "time_range_end"
    "filters"
  }},
};

PROTOBUF_NOINLINE void ContractAuditRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.smart_contract.ContractAuditRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.filters_.Clear();
  _impl_.contract_id_.ClearToEmpty();
  _impl_.time_range_start_.ClearToEmpty();
  _impl_.time_range_end_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ContractAuditRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ContractAuditRequest& this_ = static_cast<const ContractAuditRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ContractAuditRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ContractAuditRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.smart_contract.ContractAuditRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string contract_id = 1;
          if (!this_._internal_contract_id().empty()) {
            const std::string& _s = this_._internal_contract_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ContractAuditRequest.contract_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string time_range_start = 2;
          if (!this_._internal_time_range_start().empty()) {
            const std::string& _s = this_._internal_time_range_start();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ContractAuditRequest.time_range_start");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string time_range_end = 3;
          if (!this_._internal_time_range_end().empty()) {
            const std::string& _s = this_._internal_time_range_end();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ContractAuditRequest.time_range_end");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // map<string, string> filters = 4;
          if (!this_._internal_filters().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_filters();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    4, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ContractAuditRequest.filters");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ContractAuditRequest.filters");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    4, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ContractAuditRequest.filters");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ContractAuditRequest.filters");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.smart_contract.ContractAuditRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ContractAuditRequest::ByteSizeLong(const MessageLite& base) {
          const ContractAuditRequest& this_ = static_cast<const ContractAuditRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ContractAuditRequest::ByteSizeLong() const {
          const ContractAuditRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.smart_contract.ContractAuditRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> filters = 4;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_filters_size());
              for (const auto& entry : this_._internal_filters()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string contract_id = 1;
            if (!this_._internal_contract_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_contract_id());
            }
            // string time_range_start = 2;
            if (!this_._internal_time_range_start().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_time_range_start());
            }
            // string time_range_end = 3;
            if (!this_._internal_time_range_end().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_time_range_end());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ContractAuditRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ContractAuditRequest*>(&to_msg);
  auto& from = static_cast<const ContractAuditRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.smart_contract.ContractAuditRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.filters_.MergeFrom(from._impl_.filters_);
  if (!from._internal_contract_id().empty()) {
    _this->_internal_set_contract_id(from._internal_contract_id());
  }
  if (!from._internal_time_range_start().empty()) {
    _this->_internal_set_time_range_start(from._internal_time_range_start());
  }
  if (!from._internal_time_range_end().empty()) {
    _this->_internal_set_time_range_end(from._internal_time_range_end());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ContractAuditRequest::CopyFrom(const ContractAuditRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.smart_contract.ContractAuditRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ContractAuditRequest::InternalSwap(ContractAuditRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.filters_.InternalSwap(&other->_impl_.filters_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.contract_id_, &other->_impl_.contract_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.time_range_start_, &other->_impl_.time_range_start_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.time_range_end_, &other->_impl_.time_range_end_, arena);
}

::google::protobuf::Metadata ContractAuditRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ContractAuditResponse::_Internal {
 public:
};

ContractAuditResponse::ContractAuditResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.smart_contract.ContractAuditResponse)
}
inline PROTOBUF_NDEBUG_INLINE ContractAuditResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::smart_contract::ContractAuditResponse& from_msg)
      : logs_{visibility, arena, from.logs_},
        status_(arena, from.status_),
        message_(arena, from.message_),
        _cached_size_{0} {}

ContractAuditResponse::ContractAuditResponse(
    ::google::protobuf::Arena* arena,
    const ContractAuditResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ContractAuditResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:seigr.smart_contract.ContractAuditResponse)
}
inline PROTOBUF_NDEBUG_INLINE ContractAuditResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : logs_{visibility, arena},
        status_(arena),
        message_(arena),
        _cached_size_{0} {}

inline void ContractAuditResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ContractAuditResponse::~ContractAuditResponse() {
  // @@protoc_insertion_point(destructor:seigr.smart_contract.ContractAuditResponse)
  SharedDtor(*this);
}
inline void ContractAuditResponse::SharedDtor(MessageLite& self) {
  ContractAuditResponse& this_ = static_cast<ContractAuditResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.status_.Destroy();
  this_._impl_.message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ContractAuditResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ContractAuditResponse(arena);
}
constexpr auto ContractAuditResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ContractAuditResponse, _impl_.logs_) +
          decltype(ContractAuditResponse::_impl_.logs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ContractAuditResponse), alignof(ContractAuditResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ContractAuditResponse::PlacementNew_,
                                 sizeof(ContractAuditResponse),
                                 alignof(ContractAuditResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ContractAuditResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ContractAuditResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ContractAuditResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ContractAuditResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ContractAuditResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ContractAuditResponse>(), &ContractAuditResponse::ByteSizeLong,
            &ContractAuditResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ContractAuditResponse, _impl_._cached_size_),
        false,
    },
    &ContractAuditResponse::kDescriptorMethods,
    &descriptor_table_smart_5fcontract_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ContractAuditResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 64, 2> ContractAuditResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::smart_contract::ContractAuditResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .seigr.smart_contract.ContractAuditLog logs = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ContractAuditResponse, _impl_.logs_)}},
    // string status = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ContractAuditResponse, _impl_.status_)}},
    // string message = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ContractAuditResponse, _impl_.message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .seigr.smart_contract.ContractAuditLog logs = 1;
    {PROTOBUF_FIELD_OFFSET(ContractAuditResponse, _impl_.logs_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string status = 2;
    {PROTOBUF_FIELD_OFFSET(ContractAuditResponse, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string message = 3;
    {PROTOBUF_FIELD_OFFSET(ContractAuditResponse, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::seigr::smart_contract::ContractAuditLog>()},
  }}, {{
    "\52\0\6\7\0\0\0\0"
    "seigr.smart_contract.ContractAuditResponse"
    "status"
    "message"
  }},
};

PROTOBUF_NOINLINE void ContractAuditResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.smart_contract.ContractAuditResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.logs_.Clear();
  _impl_.status_.ClearToEmpty();
  _impl_.message_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ContractAuditResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ContractAuditResponse& this_ = static_cast<const ContractAuditResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ContractAuditResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ContractAuditResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.smart_contract.ContractAuditResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .seigr.smart_contract.ContractAuditLog logs = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_logs_size());
               i < n; i++) {
            const auto& repfield = this_._internal_logs().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // string status = 2;
          if (!this_._internal_status().empty()) {
            const std::string& _s = this_._internal_status();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ContractAuditResponse.status");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string message = 3;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.smart_contract.ContractAuditResponse.message");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.smart_contract.ContractAuditResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ContractAuditResponse::ByteSizeLong(const MessageLite& base) {
          const ContractAuditResponse& this_ = static_cast<const ContractAuditResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ContractAuditResponse::ByteSizeLong() const {
          const ContractAuditResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.smart_contract.ContractAuditResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .seigr.smart_contract.ContractAuditLog logs = 1;
            {
              total_size += 1UL * this_._internal_logs_size();
              for (const auto& msg : this_._internal_logs()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string status = 2;
            if (!this_._internal_status().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_status());
            }
            // string message = 3;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ContractAuditResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ContractAuditResponse*>(&to_msg);
  auto& from = static_cast<const ContractAuditResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.smart_contract.ContractAuditResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_logs()->MergeFrom(
      from._internal_logs());
  if (!from._internal_status().empty()) {
    _this->_internal_set_status(from._internal_status());
  }
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ContractAuditResponse::CopyFrom(const ContractAuditResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.smart_contract.ContractAuditResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ContractAuditResponse::InternalSwap(ContractAuditResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.logs_.InternalSwap(&other->_impl_.logs_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.status_, &other->_impl_.status_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
}

::google::protobuf::Metadata ContractAuditResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace smart_contract
}  // namespace seigr
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_smart_5fcontract_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
