// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: segment_metadata.proto
// Protobuf C++ Version: 5.29.2

#ifndef segment_5fmetadata_2eproto_2epb_2eh
#define segment_5fmetadata_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "common.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_segment_5fmetadata_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_segment_5fmetadata_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_segment_5fmetadata_2eproto;
namespace seigr {
namespace segment_metadata {
class SegmentMetadata;
struct SegmentMetadataDefaultTypeInternal;
extern SegmentMetadataDefaultTypeInternal _SegmentMetadata_default_instance_;
class SegmentMetadata_MetadataEntry_DoNotUse;
struct SegmentMetadata_MetadataEntry_DoNotUseDefaultTypeInternal;
extern SegmentMetadata_MetadataEntry_DoNotUseDefaultTypeInternal _SegmentMetadata_MetadataEntry_DoNotUse_default_instance_;
class SegmentPerformance;
struct SegmentPerformanceDefaultTypeInternal;
extern SegmentPerformanceDefaultTypeInternal _SegmentPerformance_default_instance_;
class SegmentPerformance_MetadataEntry_DoNotUse;
struct SegmentPerformance_MetadataEntry_DoNotUseDefaultTypeInternal;
extern SegmentPerformance_MetadataEntry_DoNotUseDefaultTypeInternal _SegmentPerformance_MetadataEntry_DoNotUse_default_instance_;
class SegmentRecovery;
struct SegmentRecoveryDefaultTypeInternal;
extern SegmentRecoveryDefaultTypeInternal _SegmentRecovery_default_instance_;
class SegmentRecoveryRequest;
struct SegmentRecoveryRequestDefaultTypeInternal;
extern SegmentRecoveryRequestDefaultTypeInternal _SegmentRecoveryRequest_default_instance_;
class SegmentRecoveryResponse;
struct SegmentRecoveryResponseDefaultTypeInternal;
extern SegmentRecoveryResponseDefaultTypeInternal _SegmentRecoveryResponse_default_instance_;
class SegmentRecovery_MetadataEntry_DoNotUse;
struct SegmentRecovery_MetadataEntry_DoNotUseDefaultTypeInternal;
extern SegmentRecovery_MetadataEntry_DoNotUseDefaultTypeInternal _SegmentRecovery_MetadataEntry_DoNotUse_default_instance_;
class SegmentStatus;
struct SegmentStatusDefaultTypeInternal;
extern SegmentStatusDefaultTypeInternal _SegmentStatus_default_instance_;
class SegmentStatusRequest;
struct SegmentStatusRequestDefaultTypeInternal;
extern SegmentStatusRequestDefaultTypeInternal _SegmentStatusRequest_default_instance_;
class SegmentStatusResponse;
struct SegmentStatusResponseDefaultTypeInternal;
extern SegmentStatusResponseDefaultTypeInternal _SegmentStatusResponse_default_instance_;
class SegmentStatus_MetadataEntry_DoNotUse;
struct SegmentStatus_MetadataEntry_DoNotUseDefaultTypeInternal;
extern SegmentStatus_MetadataEntry_DoNotUseDefaultTypeInternal _SegmentStatus_MetadataEntry_DoNotUse_default_instance_;
class UpdateSegmentMetadataRequest;
struct UpdateSegmentMetadataRequestDefaultTypeInternal;
extern UpdateSegmentMetadataRequestDefaultTypeInternal _UpdateSegmentMetadataRequest_default_instance_;
class UpdateSegmentMetadataRequest_UpdatedMetadataEntry_DoNotUse;
struct UpdateSegmentMetadataRequest_UpdatedMetadataEntry_DoNotUseDefaultTypeInternal;
extern UpdateSegmentMetadataRequest_UpdatedMetadataEntry_DoNotUseDefaultTypeInternal _UpdateSegmentMetadataRequest_UpdatedMetadataEntry_DoNotUse_default_instance_;
class UpdateSegmentMetadataResponse;
struct UpdateSegmentMetadataResponseDefaultTypeInternal;
extern UpdateSegmentMetadataResponseDefaultTypeInternal _UpdateSegmentMetadataResponse_default_instance_;
class ValidateSegmentRequest;
struct ValidateSegmentRequestDefaultTypeInternal;
extern ValidateSegmentRequestDefaultTypeInternal _ValidateSegmentRequest_default_instance_;
class ValidateSegmentResponse;
struct ValidateSegmentResponseDefaultTypeInternal;
extern ValidateSegmentResponseDefaultTypeInternal _ValidateSegmentResponse_default_instance_;
}  // namespace segment_metadata
}  // namespace seigr
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace seigr {
namespace segment_metadata {
enum SegmentOperationStatus : int {
  SEGMENT_STATUS_UNDEFINED = 0,
  SEGMENT_ACTIVE = 1,
  SEGMENT_INACTIVE = 2,
  SEGMENT_ARCHIVED = 3,
  SEGMENT_DECOMMISSIONED = 4,
  SegmentOperationStatus_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  SegmentOperationStatus_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool SegmentOperationStatus_IsValid(int value);
extern const uint32_t SegmentOperationStatus_internal_data_[];
constexpr SegmentOperationStatus SegmentOperationStatus_MIN = static_cast<SegmentOperationStatus>(0);
constexpr SegmentOperationStatus SegmentOperationStatus_MAX = static_cast<SegmentOperationStatus>(4);
constexpr int SegmentOperationStatus_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor*
SegmentOperationStatus_descriptor();
template <typename T>
const std::string& SegmentOperationStatus_Name(T value) {
  static_assert(std::is_same<T, SegmentOperationStatus>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to SegmentOperationStatus_Name().");
  return SegmentOperationStatus_Name(static_cast<SegmentOperationStatus>(value));
}
template <>
inline const std::string& SegmentOperationStatus_Name(SegmentOperationStatus value) {
  return ::google::protobuf::internal::NameOfDenseEnum<SegmentOperationStatus_descriptor,
                                                 0, 4>(
      static_cast<int>(value));
}
inline bool SegmentOperationStatus_Parse(absl::string_view name, SegmentOperationStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SegmentOperationStatus>(
      SegmentOperationStatus_descriptor(), name, value);
}
enum ReplicationLevel : int {
  REPLICATION_LEVEL_UNDEFINED = 0,
  REPLICATION_LEVEL_LOW = 1,
  REPLICATION_LEVEL_MEDIUM = 2,
  REPLICATION_LEVEL_HIGH = 3,
  REPLICATION_LEVEL_MAXIMUM = 4,
  ReplicationLevel_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ReplicationLevel_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool ReplicationLevel_IsValid(int value);
extern const uint32_t ReplicationLevel_internal_data_[];
constexpr ReplicationLevel ReplicationLevel_MIN = static_cast<ReplicationLevel>(0);
constexpr ReplicationLevel ReplicationLevel_MAX = static_cast<ReplicationLevel>(4);
constexpr int ReplicationLevel_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor*
ReplicationLevel_descriptor();
template <typename T>
const std::string& ReplicationLevel_Name(T value) {
  static_assert(std::is_same<T, ReplicationLevel>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ReplicationLevel_Name().");
  return ReplicationLevel_Name(static_cast<ReplicationLevel>(value));
}
template <>
inline const std::string& ReplicationLevel_Name(ReplicationLevel value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ReplicationLevel_descriptor,
                                                 0, 4>(
      static_cast<int>(value));
}
inline bool ReplicationLevel_Parse(absl::string_view name, ReplicationLevel* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ReplicationLevel>(
      ReplicationLevel_descriptor(), name, value);
}
enum EncryptionStatus : int {
  ENCRYPTION_UNDEFINED = 0,
  ENCRYPTED = 1,
  UNENCRYPTED = 2,
  EncryptionStatus_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  EncryptionStatus_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool EncryptionStatus_IsValid(int value);
extern const uint32_t EncryptionStatus_internal_data_[];
constexpr EncryptionStatus EncryptionStatus_MIN = static_cast<EncryptionStatus>(0);
constexpr EncryptionStatus EncryptionStatus_MAX = static_cast<EncryptionStatus>(2);
constexpr int EncryptionStatus_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
EncryptionStatus_descriptor();
template <typename T>
const std::string& EncryptionStatus_Name(T value) {
  static_assert(std::is_same<T, EncryptionStatus>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to EncryptionStatus_Name().");
  return EncryptionStatus_Name(static_cast<EncryptionStatus>(value));
}
template <>
inline const std::string& EncryptionStatus_Name(EncryptionStatus value) {
  return ::google::protobuf::internal::NameOfDenseEnum<EncryptionStatus_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool EncryptionStatus_Parse(absl::string_view name, EncryptionStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EncryptionStatus>(
      EncryptionStatus_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class ValidateSegmentResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.segment_metadata.ValidateSegmentResponse) */ {
 public:
  inline ValidateSegmentResponse() : ValidateSegmentResponse(nullptr) {}
  ~ValidateSegmentResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ValidateSegmentResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ValidateSegmentResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ValidateSegmentResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ValidateSegmentResponse(const ValidateSegmentResponse& from) : ValidateSegmentResponse(nullptr, from) {}
  inline ValidateSegmentResponse(ValidateSegmentResponse&& from) noexcept
      : ValidateSegmentResponse(nullptr, std::move(from)) {}
  inline ValidateSegmentResponse& operator=(const ValidateSegmentResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ValidateSegmentResponse& operator=(ValidateSegmentResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ValidateSegmentResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ValidateSegmentResponse* internal_default_instance() {
    return reinterpret_cast<const ValidateSegmentResponse*>(
        &_ValidateSegmentResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(ValidateSegmentResponse& a, ValidateSegmentResponse& b) { a.Swap(&b); }
  inline void Swap(ValidateSegmentResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ValidateSegmentResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ValidateSegmentResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ValidateSegmentResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ValidateSegmentResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ValidateSegmentResponse& from) { ValidateSegmentResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ValidateSegmentResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.segment_metadata.ValidateSegmentResponse"; }

 protected:
  explicit ValidateSegmentResponse(::google::protobuf::Arena* arena);
  ValidateSegmentResponse(::google::protobuf::Arena* arena, const ValidateSegmentResponse& from);
  ValidateSegmentResponse(::google::protobuf::Arena* arena, ValidateSegmentResponse&& from) noexcept
      : ValidateSegmentResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageFieldNumber = 2,
    kSuccessFieldNumber = 1,
  };
  // string message = 2;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.segment_metadata.ValidateSegmentResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      62, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ValidateSegmentResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr message_;
    bool success_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_segment_5fmetadata_2eproto;
};
// -------------------------------------------------------------------

class ValidateSegmentRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.segment_metadata.ValidateSegmentRequest) */ {
 public:
  inline ValidateSegmentRequest() : ValidateSegmentRequest(nullptr) {}
  ~ValidateSegmentRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ValidateSegmentRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ValidateSegmentRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ValidateSegmentRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ValidateSegmentRequest(const ValidateSegmentRequest& from) : ValidateSegmentRequest(nullptr, from) {}
  inline ValidateSegmentRequest(ValidateSegmentRequest&& from) noexcept
      : ValidateSegmentRequest(nullptr, std::move(from)) {}
  inline ValidateSegmentRequest& operator=(const ValidateSegmentRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ValidateSegmentRequest& operator=(ValidateSegmentRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ValidateSegmentRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ValidateSegmentRequest* internal_default_instance() {
    return reinterpret_cast<const ValidateSegmentRequest*>(
        &_ValidateSegmentRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(ValidateSegmentRequest& a, ValidateSegmentRequest& b) { a.Swap(&b); }
  inline void Swap(ValidateSegmentRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ValidateSegmentRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ValidateSegmentRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ValidateSegmentRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ValidateSegmentRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ValidateSegmentRequest& from) { ValidateSegmentRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ValidateSegmentRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.segment_metadata.ValidateSegmentRequest"; }

 protected:
  explicit ValidateSegmentRequest(::google::protobuf::Arena* arena);
  ValidateSegmentRequest(::google::protobuf::Arena* arena, const ValidateSegmentRequest& from);
  ValidateSegmentRequest(::google::protobuf::Arena* arena, ValidateSegmentRequest&& from) noexcept
      : ValidateSegmentRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSegmentHashFieldNumber = 1,
  };
  // string segment_hash = 1;
  void clear_segment_hash() ;
  const std::string& segment_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_segment_hash(Arg_&& arg, Args_... args);
  std::string* mutable_segment_hash();
  PROTOBUF_NODISCARD std::string* release_segment_hash();
  void set_allocated_segment_hash(std::string* value);

  private:
  const std::string& _internal_segment_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_segment_hash(
      const std::string& value);
  std::string* _internal_mutable_segment_hash();

  public:
  // @@protoc_insertion_point(class_scope:seigr.segment_metadata.ValidateSegmentRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      66, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ValidateSegmentRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr segment_hash_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_segment_5fmetadata_2eproto;
};
// -------------------------------------------------------------------

class UpdateSegmentMetadataResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.segment_metadata.UpdateSegmentMetadataResponse) */ {
 public:
  inline UpdateSegmentMetadataResponse() : UpdateSegmentMetadataResponse(nullptr) {}
  ~UpdateSegmentMetadataResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateSegmentMetadataResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateSegmentMetadataResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateSegmentMetadataResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateSegmentMetadataResponse(const UpdateSegmentMetadataResponse& from) : UpdateSegmentMetadataResponse(nullptr, from) {}
  inline UpdateSegmentMetadataResponse(UpdateSegmentMetadataResponse&& from) noexcept
      : UpdateSegmentMetadataResponse(nullptr, std::move(from)) {}
  inline UpdateSegmentMetadataResponse& operator=(const UpdateSegmentMetadataResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateSegmentMetadataResponse& operator=(UpdateSegmentMetadataResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateSegmentMetadataResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateSegmentMetadataResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateSegmentMetadataResponse*>(
        &_UpdateSegmentMetadataResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(UpdateSegmentMetadataResponse& a, UpdateSegmentMetadataResponse& b) { a.Swap(&b); }
  inline void Swap(UpdateSegmentMetadataResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateSegmentMetadataResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateSegmentMetadataResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateSegmentMetadataResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateSegmentMetadataResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateSegmentMetadataResponse& from) { UpdateSegmentMetadataResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateSegmentMetadataResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.segment_metadata.UpdateSegmentMetadataResponse"; }

 protected:
  explicit UpdateSegmentMetadataResponse(::google::protobuf::Arena* arena);
  UpdateSegmentMetadataResponse(::google::protobuf::Arena* arena, const UpdateSegmentMetadataResponse& from);
  UpdateSegmentMetadataResponse(::google::protobuf::Arena* arena, UpdateSegmentMetadataResponse&& from) noexcept
      : UpdateSegmentMetadataResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageFieldNumber = 2,
    kSuccessFieldNumber = 1,
  };
  // string message = 2;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.segment_metadata.UpdateSegmentMetadataResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      68, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateSegmentMetadataResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr message_;
    bool success_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_segment_5fmetadata_2eproto;
};
// -------------------------------------------------------------------

class UpdateSegmentMetadataRequest_UpdatedMetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  UpdateSegmentMetadataRequest_UpdatedMetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateSegmentMetadataRequest_UpdatedMetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit UpdateSegmentMetadataRequest_UpdatedMetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const UpdateSegmentMetadataRequest_UpdatedMetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const UpdateSegmentMetadataRequest_UpdatedMetadataEntry_DoNotUse*>(
        &_UpdateSegmentMetadataRequest_UpdatedMetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_segment_5fmetadata_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      89, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class SegmentStatusRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.segment_metadata.SegmentStatusRequest) */ {
 public:
  inline SegmentStatusRequest() : SegmentStatusRequest(nullptr) {}
  ~SegmentStatusRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SegmentStatusRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SegmentStatusRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SegmentStatusRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SegmentStatusRequest(const SegmentStatusRequest& from) : SegmentStatusRequest(nullptr, from) {}
  inline SegmentStatusRequest(SegmentStatusRequest&& from) noexcept
      : SegmentStatusRequest(nullptr, std::move(from)) {}
  inline SegmentStatusRequest& operator=(const SegmentStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SegmentStatusRequest& operator=(SegmentStatusRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SegmentStatusRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SegmentStatusRequest* internal_default_instance() {
    return reinterpret_cast<const SegmentStatusRequest*>(
        &_SegmentStatusRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(SegmentStatusRequest& a, SegmentStatusRequest& b) { a.Swap(&b); }
  inline void Swap(SegmentStatusRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SegmentStatusRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SegmentStatusRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SegmentStatusRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SegmentStatusRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SegmentStatusRequest& from) { SegmentStatusRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SegmentStatusRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.segment_metadata.SegmentStatusRequest"; }

 protected:
  explicit SegmentStatusRequest(::google::protobuf::Arena* arena);
  SegmentStatusRequest(::google::protobuf::Arena* arena, const SegmentStatusRequest& from);
  SegmentStatusRequest(::google::protobuf::Arena* arena, SegmentStatusRequest&& from) noexcept
      : SegmentStatusRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSegmentHashFieldNumber = 1,
  };
  // string segment_hash = 1;
  void clear_segment_hash() ;
  const std::string& segment_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_segment_hash(Arg_&& arg, Args_... args);
  std::string* mutable_segment_hash();
  PROTOBUF_NODISCARD std::string* release_segment_hash();
  void set_allocated_segment_hash(std::string* value);

  private:
  const std::string& _internal_segment_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_segment_hash(
      const std::string& value);
  std::string* _internal_mutable_segment_hash();

  public:
  // @@protoc_insertion_point(class_scope:seigr.segment_metadata.SegmentStatusRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      64, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SegmentStatusRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr segment_hash_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_segment_5fmetadata_2eproto;
};
// -------------------------------------------------------------------

class SegmentStatus_MetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  SegmentStatus_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SegmentStatus_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit SegmentStatus_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const SegmentStatus_MetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const SegmentStatus_MetadataEntry_DoNotUse*>(
        &_SegmentStatus_MetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_segment_5fmetadata_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      67, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class SegmentRecoveryResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.segment_metadata.SegmentRecoveryResponse) */ {
 public:
  inline SegmentRecoveryResponse() : SegmentRecoveryResponse(nullptr) {}
  ~SegmentRecoveryResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SegmentRecoveryResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SegmentRecoveryResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SegmentRecoveryResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SegmentRecoveryResponse(const SegmentRecoveryResponse& from) : SegmentRecoveryResponse(nullptr, from) {}
  inline SegmentRecoveryResponse(SegmentRecoveryResponse&& from) noexcept
      : SegmentRecoveryResponse(nullptr, std::move(from)) {}
  inline SegmentRecoveryResponse& operator=(const SegmentRecoveryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SegmentRecoveryResponse& operator=(SegmentRecoveryResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SegmentRecoveryResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SegmentRecoveryResponse* internal_default_instance() {
    return reinterpret_cast<const SegmentRecoveryResponse*>(
        &_SegmentRecoveryResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(SegmentRecoveryResponse& a, SegmentRecoveryResponse& b) { a.Swap(&b); }
  inline void Swap(SegmentRecoveryResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SegmentRecoveryResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SegmentRecoveryResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SegmentRecoveryResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SegmentRecoveryResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SegmentRecoveryResponse& from) { SegmentRecoveryResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SegmentRecoveryResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.segment_metadata.SegmentRecoveryResponse"; }

 protected:
  explicit SegmentRecoveryResponse(::google::protobuf::Arena* arena);
  SegmentRecoveryResponse(::google::protobuf::Arena* arena, const SegmentRecoveryResponse& from);
  SegmentRecoveryResponse(::google::protobuf::Arena* arena, SegmentRecoveryResponse&& from) noexcept
      : SegmentRecoveryResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageFieldNumber = 2,
    kSuccessFieldNumber = 1,
  };
  // string message = 2;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.segment_metadata.SegmentRecoveryResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      62, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SegmentRecoveryResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr message_;
    bool success_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_segment_5fmetadata_2eproto;
};
// -------------------------------------------------------------------

class SegmentRecoveryRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.segment_metadata.SegmentRecoveryRequest) */ {
 public:
  inline SegmentRecoveryRequest() : SegmentRecoveryRequest(nullptr) {}
  ~SegmentRecoveryRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SegmentRecoveryRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SegmentRecoveryRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SegmentRecoveryRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SegmentRecoveryRequest(const SegmentRecoveryRequest& from) : SegmentRecoveryRequest(nullptr, from) {}
  inline SegmentRecoveryRequest(SegmentRecoveryRequest&& from) noexcept
      : SegmentRecoveryRequest(nullptr, std::move(from)) {}
  inline SegmentRecoveryRequest& operator=(const SegmentRecoveryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SegmentRecoveryRequest& operator=(SegmentRecoveryRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SegmentRecoveryRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SegmentRecoveryRequest* internal_default_instance() {
    return reinterpret_cast<const SegmentRecoveryRequest*>(
        &_SegmentRecoveryRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(SegmentRecoveryRequest& a, SegmentRecoveryRequest& b) { a.Swap(&b); }
  inline void Swap(SegmentRecoveryRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SegmentRecoveryRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SegmentRecoveryRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SegmentRecoveryRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SegmentRecoveryRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SegmentRecoveryRequest& from) { SegmentRecoveryRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SegmentRecoveryRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.segment_metadata.SegmentRecoveryRequest"; }

 protected:
  explicit SegmentRecoveryRequest(::google::protobuf::Arena* arena);
  SegmentRecoveryRequest(::google::protobuf::Arena* arena, const SegmentRecoveryRequest& from);
  SegmentRecoveryRequest(::google::protobuf::Arena* arena, SegmentRecoveryRequest&& from) noexcept
      : SegmentRecoveryRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSegmentHashFieldNumber = 1,
  };
  // string segment_hash = 1;
  void clear_segment_hash() ;
  const std::string& segment_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_segment_hash(Arg_&& arg, Args_... args);
  std::string* mutable_segment_hash();
  PROTOBUF_NODISCARD std::string* release_segment_hash();
  void set_allocated_segment_hash(std::string* value);

  private:
  const std::string& _internal_segment_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_segment_hash(
      const std::string& value);
  std::string* _internal_mutable_segment_hash();

  public:
  // @@protoc_insertion_point(class_scope:seigr.segment_metadata.SegmentRecoveryRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      66, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SegmentRecoveryRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr segment_hash_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_segment_5fmetadata_2eproto;
};
// -------------------------------------------------------------------

class SegmentRecovery_MetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  SegmentRecovery_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SegmentRecovery_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit SegmentRecovery_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const SegmentRecovery_MetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const SegmentRecovery_MetadataEntry_DoNotUse*>(
        &_SegmentRecovery_MetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_segment_5fmetadata_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      69, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class SegmentPerformance_MetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  SegmentPerformance_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SegmentPerformance_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit SegmentPerformance_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const SegmentPerformance_MetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const SegmentPerformance_MetadataEntry_DoNotUse*>(
        &_SegmentPerformance_MetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_segment_5fmetadata_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      72, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class SegmentMetadata_MetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  SegmentMetadata_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SegmentMetadata_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit SegmentMetadata_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const SegmentMetadata_MetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const SegmentMetadata_MetadataEntry_DoNotUse*>(
        &_SegmentMetadata_MetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_segment_5fmetadata_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      69, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class UpdateSegmentMetadataRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.segment_metadata.UpdateSegmentMetadataRequest) */ {
 public:
  inline UpdateSegmentMetadataRequest() : UpdateSegmentMetadataRequest(nullptr) {}
  ~UpdateSegmentMetadataRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateSegmentMetadataRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateSegmentMetadataRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateSegmentMetadataRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateSegmentMetadataRequest(const UpdateSegmentMetadataRequest& from) : UpdateSegmentMetadataRequest(nullptr, from) {}
  inline UpdateSegmentMetadataRequest(UpdateSegmentMetadataRequest&& from) noexcept
      : UpdateSegmentMetadataRequest(nullptr, std::move(from)) {}
  inline UpdateSegmentMetadataRequest& operator=(const UpdateSegmentMetadataRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateSegmentMetadataRequest& operator=(UpdateSegmentMetadataRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateSegmentMetadataRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateSegmentMetadataRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateSegmentMetadataRequest*>(
        &_UpdateSegmentMetadataRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(UpdateSegmentMetadataRequest& a, UpdateSegmentMetadataRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateSegmentMetadataRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateSegmentMetadataRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateSegmentMetadataRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateSegmentMetadataRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateSegmentMetadataRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateSegmentMetadataRequest& from) { UpdateSegmentMetadataRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateSegmentMetadataRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.segment_metadata.UpdateSegmentMetadataRequest"; }

 protected:
  explicit UpdateSegmentMetadataRequest(::google::protobuf::Arena* arena);
  UpdateSegmentMetadataRequest(::google::protobuf::Arena* arena, const UpdateSegmentMetadataRequest& from);
  UpdateSegmentMetadataRequest(::google::protobuf::Arena* arena, UpdateSegmentMetadataRequest&& from) noexcept
      : UpdateSegmentMetadataRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUpdatedMetadataFieldNumber = 2,
    kSegmentHashFieldNumber = 1,
  };
  // map<string, string> updated_metadata = 2;
  int updated_metadata_size() const;
  private:
  int _internal_updated_metadata_size() const;

  public:
  void clear_updated_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& updated_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_updated_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_updated_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_updated_metadata();

  public:
  // string segment_hash = 1;
  void clear_segment_hash() ;
  const std::string& segment_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_segment_hash(Arg_&& arg, Args_... args);
  std::string* mutable_segment_hash();
  PROTOBUF_NODISCARD std::string* release_segment_hash();
  void set_allocated_segment_hash(std::string* value);

  private:
  const std::string& _internal_segment_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_segment_hash(
      const std::string& value);
  std::string* _internal_mutable_segment_hash();

  public:
  // @@protoc_insertion_point(class_scope:seigr.segment_metadata.UpdateSegmentMetadataRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 1,
      88, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateSegmentMetadataRequest& from_msg);
    ::google::protobuf::internal::MapField<UpdateSegmentMetadataRequest_UpdatedMetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        updated_metadata_;
    ::google::protobuf::internal::ArenaStringPtr segment_hash_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_segment_5fmetadata_2eproto;
};
// -------------------------------------------------------------------

class SegmentStatus final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.segment_metadata.SegmentStatus) */ {
 public:
  inline SegmentStatus() : SegmentStatus(nullptr) {}
  ~SegmentStatus() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SegmentStatus* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SegmentStatus));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SegmentStatus(
      ::google::protobuf::internal::ConstantInitialized);

  inline SegmentStatus(const SegmentStatus& from) : SegmentStatus(nullptr, from) {}
  inline SegmentStatus(SegmentStatus&& from) noexcept
      : SegmentStatus(nullptr, std::move(from)) {}
  inline SegmentStatus& operator=(const SegmentStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline SegmentStatus& operator=(SegmentStatus&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SegmentStatus& default_instance() {
    return *internal_default_instance();
  }
  static inline const SegmentStatus* internal_default_instance() {
    return reinterpret_cast<const SegmentStatus*>(
        &_SegmentStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(SegmentStatus& a, SegmentStatus& b) { a.Swap(&b); }
  inline void Swap(SegmentStatus* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SegmentStatus* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SegmentStatus* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SegmentStatus>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SegmentStatus& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SegmentStatus& from) { SegmentStatus::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SegmentStatus* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.segment_metadata.SegmentStatus"; }

 protected:
  explicit SegmentStatus(::google::protobuf::Arena* arena);
  SegmentStatus(::google::protobuf::Arena* arena, const SegmentStatus& from);
  SegmentStatus(::google::protobuf::Arena* arena, SegmentStatus&& from) noexcept
      : SegmentStatus(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMetadataFieldNumber = 7,
    kSegmentHashFieldNumber = 1,
    kLastCheckedFieldNumber = 6,
    kLastUpdatedByFieldNumber = 8,
    kPerformanceStatusFieldNumber = 10,
    kAccessPatternFieldNumber = 12,
    kThreatLevelFieldNumber = 2,
    kIntegrityCheckPassedFieldNumber = 3,
    kThreatCountFieldNumber = 4,
    kReplicationCountFieldNumber = 5,
    kResourceEfficiencyScoreFieldNumber = 9,
    kEncryptionStatusFieldNumber = 11,
  };
  // map<string, string> metadata = 7;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // string segment_hash = 1;
  void clear_segment_hash() ;
  const std::string& segment_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_segment_hash(Arg_&& arg, Args_... args);
  std::string* mutable_segment_hash();
  PROTOBUF_NODISCARD std::string* release_segment_hash();
  void set_allocated_segment_hash(std::string* value);

  private:
  const std::string& _internal_segment_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_segment_hash(
      const std::string& value);
  std::string* _internal_mutable_segment_hash();

  public:
  // string last_checked = 6;
  void clear_last_checked() ;
  const std::string& last_checked() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_last_checked(Arg_&& arg, Args_... args);
  std::string* mutable_last_checked();
  PROTOBUF_NODISCARD std::string* release_last_checked();
  void set_allocated_last_checked(std::string* value);

  private:
  const std::string& _internal_last_checked() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_last_checked(
      const std::string& value);
  std::string* _internal_mutable_last_checked();

  public:
  // string last_updated_by = 8;
  void clear_last_updated_by() ;
  const std::string& last_updated_by() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_last_updated_by(Arg_&& arg, Args_... args);
  std::string* mutable_last_updated_by();
  PROTOBUF_NODISCARD std::string* release_last_updated_by();
  void set_allocated_last_updated_by(std::string* value);

  private:
  const std::string& _internal_last_updated_by() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_last_updated_by(
      const std::string& value);
  std::string* _internal_mutable_last_updated_by();

  public:
  // string performance_status = 10;
  void clear_performance_status() ;
  const std::string& performance_status() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_performance_status(Arg_&& arg, Args_... args);
  std::string* mutable_performance_status();
  PROTOBUF_NODISCARD std::string* release_performance_status();
  void set_allocated_performance_status(std::string* value);

  private:
  const std::string& _internal_performance_status() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_performance_status(
      const std::string& value);
  std::string* _internal_mutable_performance_status();

  public:
  // string access_pattern = 12;
  void clear_access_pattern() ;
  const std::string& access_pattern() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_access_pattern(Arg_&& arg, Args_... args);
  std::string* mutable_access_pattern();
  PROTOBUF_NODISCARD std::string* release_access_pattern();
  void set_allocated_access_pattern(std::string* value);

  private:
  const std::string& _internal_access_pattern() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_access_pattern(
      const std::string& value);
  std::string* _internal_mutable_access_pattern();

  public:
  // .seigr.common.ThreatLevel threat_level = 2;
  void clear_threat_level() ;
  ::seigr::common::ThreatLevel threat_level() const;
  void set_threat_level(::seigr::common::ThreatLevel value);

  private:
  ::seigr::common::ThreatLevel _internal_threat_level() const;
  void _internal_set_threat_level(::seigr::common::ThreatLevel value);

  public:
  // bool integrity_check_passed = 3;
  void clear_integrity_check_passed() ;
  bool integrity_check_passed() const;
  void set_integrity_check_passed(bool value);

  private:
  bool _internal_integrity_check_passed() const;
  void _internal_set_integrity_check_passed(bool value);

  public:
  // int32 threat_count = 4;
  void clear_threat_count() ;
  ::int32_t threat_count() const;
  void set_threat_count(::int32_t value);

  private:
  ::int32_t _internal_threat_count() const;
  void _internal_set_threat_count(::int32_t value);

  public:
  // int32 replication_count = 5;
  void clear_replication_count() ;
  ::int32_t replication_count() const;
  void set_replication_count(::int32_t value);

  private:
  ::int32_t _internal_replication_count() const;
  void _internal_set_replication_count(::int32_t value);

  public:
  // float resource_efficiency_score = 9;
  void clear_resource_efficiency_score() ;
  float resource_efficiency_score() const;
  void set_resource_efficiency_score(float value);

  private:
  float _internal_resource_efficiency_score() const;
  void _internal_set_resource_efficiency_score(float value);

  public:
  // .seigr.segment_metadata.EncryptionStatus encryption_status = 11;
  void clear_encryption_status() ;
  ::seigr::segment_metadata::EncryptionStatus encryption_status() const;
  void set_encryption_status(::seigr::segment_metadata::EncryptionStatus value);

  private:
  ::seigr::segment_metadata::EncryptionStatus _internal_encryption_status() const;
  void _internal_set_encryption_status(::seigr::segment_metadata::EncryptionStatus value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.segment_metadata.SegmentStatus)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 12, 1,
      132, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SegmentStatus& from_msg);
    ::google::protobuf::internal::MapField<SegmentStatus_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::internal::ArenaStringPtr segment_hash_;
    ::google::protobuf::internal::ArenaStringPtr last_checked_;
    ::google::protobuf::internal::ArenaStringPtr last_updated_by_;
    ::google::protobuf::internal::ArenaStringPtr performance_status_;
    ::google::protobuf::internal::ArenaStringPtr access_pattern_;
    int threat_level_;
    bool integrity_check_passed_;
    ::int32_t threat_count_;
    ::int32_t replication_count_;
    float resource_efficiency_score_;
    int encryption_status_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_segment_5fmetadata_2eproto;
};
// -------------------------------------------------------------------

class SegmentRecovery final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.segment_metadata.SegmentRecovery) */ {
 public:
  inline SegmentRecovery() : SegmentRecovery(nullptr) {}
  ~SegmentRecovery() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SegmentRecovery* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SegmentRecovery));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SegmentRecovery(
      ::google::protobuf::internal::ConstantInitialized);

  inline SegmentRecovery(const SegmentRecovery& from) : SegmentRecovery(nullptr, from) {}
  inline SegmentRecovery(SegmentRecovery&& from) noexcept
      : SegmentRecovery(nullptr, std::move(from)) {}
  inline SegmentRecovery& operator=(const SegmentRecovery& from) {
    CopyFrom(from);
    return *this;
  }
  inline SegmentRecovery& operator=(SegmentRecovery&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SegmentRecovery& default_instance() {
    return *internal_default_instance();
  }
  static inline const SegmentRecovery* internal_default_instance() {
    return reinterpret_cast<const SegmentRecovery*>(
        &_SegmentRecovery_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(SegmentRecovery& a, SegmentRecovery& b) { a.Swap(&b); }
  inline void Swap(SegmentRecovery* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SegmentRecovery* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SegmentRecovery* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SegmentRecovery>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SegmentRecovery& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SegmentRecovery& from) { SegmentRecovery::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SegmentRecovery* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.segment_metadata.SegmentRecovery"; }

 protected:
  explicit SegmentRecovery(::google::protobuf::Arena* arena);
  SegmentRecovery(::google::protobuf::Arena* arena, const SegmentRecovery& from);
  SegmentRecovery(::google::protobuf::Arena* arena, SegmentRecovery&& from) noexcept
      : SegmentRecovery(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMetadataFieldNumber = 8,
    kSegmentHashFieldNumber = 1,
    kRecoveryInitiatedByFieldNumber = 2,
    kRecoveryStartedAtFieldNumber = 3,
    kRecoveryCompletedAtFieldNumber = 4,
    kRecoveryStrategyFieldNumber = 5,
    kFailureReasonFieldNumber = 7,
    kRecoverySuccessfulFieldNumber = 6,
  };
  // map<string, string> metadata = 8;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // string segment_hash = 1;
  void clear_segment_hash() ;
  const std::string& segment_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_segment_hash(Arg_&& arg, Args_... args);
  std::string* mutable_segment_hash();
  PROTOBUF_NODISCARD std::string* release_segment_hash();
  void set_allocated_segment_hash(std::string* value);

  private:
  const std::string& _internal_segment_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_segment_hash(
      const std::string& value);
  std::string* _internal_mutable_segment_hash();

  public:
  // string recovery_initiated_by = 2;
  void clear_recovery_initiated_by() ;
  const std::string& recovery_initiated_by() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_recovery_initiated_by(Arg_&& arg, Args_... args);
  std::string* mutable_recovery_initiated_by();
  PROTOBUF_NODISCARD std::string* release_recovery_initiated_by();
  void set_allocated_recovery_initiated_by(std::string* value);

  private:
  const std::string& _internal_recovery_initiated_by() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_recovery_initiated_by(
      const std::string& value);
  std::string* _internal_mutable_recovery_initiated_by();

  public:
  // string recovery_started_at = 3;
  void clear_recovery_started_at() ;
  const std::string& recovery_started_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_recovery_started_at(Arg_&& arg, Args_... args);
  std::string* mutable_recovery_started_at();
  PROTOBUF_NODISCARD std::string* release_recovery_started_at();
  void set_allocated_recovery_started_at(std::string* value);

  private:
  const std::string& _internal_recovery_started_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_recovery_started_at(
      const std::string& value);
  std::string* _internal_mutable_recovery_started_at();

  public:
  // string recovery_completed_at = 4;
  void clear_recovery_completed_at() ;
  const std::string& recovery_completed_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_recovery_completed_at(Arg_&& arg, Args_... args);
  std::string* mutable_recovery_completed_at();
  PROTOBUF_NODISCARD std::string* release_recovery_completed_at();
  void set_allocated_recovery_completed_at(std::string* value);

  private:
  const std::string& _internal_recovery_completed_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_recovery_completed_at(
      const std::string& value);
  std::string* _internal_mutable_recovery_completed_at();

  public:
  // string recovery_strategy = 5;
  void clear_recovery_strategy() ;
  const std::string& recovery_strategy() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_recovery_strategy(Arg_&& arg, Args_... args);
  std::string* mutable_recovery_strategy();
  PROTOBUF_NODISCARD std::string* release_recovery_strategy();
  void set_allocated_recovery_strategy(std::string* value);

  private:
  const std::string& _internal_recovery_strategy() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_recovery_strategy(
      const std::string& value);
  std::string* _internal_mutable_recovery_strategy();

  public:
  // string failure_reason = 7;
  void clear_failure_reason() ;
  const std::string& failure_reason() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_failure_reason(Arg_&& arg, Args_... args);
  std::string* mutable_failure_reason();
  PROTOBUF_NODISCARD std::string* release_failure_reason();
  void set_allocated_failure_reason(std::string* value);

  private:
  const std::string& _internal_failure_reason() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_failure_reason(
      const std::string& value);
  std::string* _internal_mutable_failure_reason();

  public:
  // bool recovery_successful = 6;
  void clear_recovery_successful() ;
  bool recovery_successful() const;
  void set_recovery_successful(bool value);

  private:
  bool _internal_recovery_successful() const;
  void _internal_set_recovery_successful(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.segment_metadata.SegmentRecovery)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 1,
      167, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SegmentRecovery& from_msg);
    ::google::protobuf::internal::MapField<SegmentRecovery_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::internal::ArenaStringPtr segment_hash_;
    ::google::protobuf::internal::ArenaStringPtr recovery_initiated_by_;
    ::google::protobuf::internal::ArenaStringPtr recovery_started_at_;
    ::google::protobuf::internal::ArenaStringPtr recovery_completed_at_;
    ::google::protobuf::internal::ArenaStringPtr recovery_strategy_;
    ::google::protobuf::internal::ArenaStringPtr failure_reason_;
    bool recovery_successful_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_segment_5fmetadata_2eproto;
};
// -------------------------------------------------------------------

class SegmentPerformance final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.segment_metadata.SegmentPerformance) */ {
 public:
  inline SegmentPerformance() : SegmentPerformance(nullptr) {}
  ~SegmentPerformance() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SegmentPerformance* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SegmentPerformance));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SegmentPerformance(
      ::google::protobuf::internal::ConstantInitialized);

  inline SegmentPerformance(const SegmentPerformance& from) : SegmentPerformance(nullptr, from) {}
  inline SegmentPerformance(SegmentPerformance&& from) noexcept
      : SegmentPerformance(nullptr, std::move(from)) {}
  inline SegmentPerformance& operator=(const SegmentPerformance& from) {
    CopyFrom(from);
    return *this;
  }
  inline SegmentPerformance& operator=(SegmentPerformance&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SegmentPerformance& default_instance() {
    return *internal_default_instance();
  }
  static inline const SegmentPerformance* internal_default_instance() {
    return reinterpret_cast<const SegmentPerformance*>(
        &_SegmentPerformance_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(SegmentPerformance& a, SegmentPerformance& b) { a.Swap(&b); }
  inline void Swap(SegmentPerformance* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SegmentPerformance* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SegmentPerformance* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SegmentPerformance>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SegmentPerformance& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SegmentPerformance& from) { SegmentPerformance::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SegmentPerformance* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.segment_metadata.SegmentPerformance"; }

 protected:
  explicit SegmentPerformance(::google::protobuf::Arena* arena);
  SegmentPerformance(::google::protobuf::Arena* arena, const SegmentPerformance& from);
  SegmentPerformance(::google::protobuf::Arena* arena, SegmentPerformance&& from) noexcept
      : SegmentPerformance(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMetadataFieldNumber = 9,
    kSegmentHashFieldNumber = 1,
    kLastUpdatedFieldNumber = 8,
    kReadLatencyMsFieldNumber = 2,
    kWriteLatencyMsFieldNumber = 3,
    kAccessFrequencyScoreFieldNumber = 4,
    kReplicationEfficiencyScoreFieldNumber = 5,
    kResourceUtilizationScoreFieldNumber = 6,
    kSustainabilityIndexFieldNumber = 7,
  };
  // map<string, string> metadata = 9;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // string segment_hash = 1;
  void clear_segment_hash() ;
  const std::string& segment_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_segment_hash(Arg_&& arg, Args_... args);
  std::string* mutable_segment_hash();
  PROTOBUF_NODISCARD std::string* release_segment_hash();
  void set_allocated_segment_hash(std::string* value);

  private:
  const std::string& _internal_segment_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_segment_hash(
      const std::string& value);
  std::string* _internal_mutable_segment_hash();

  public:
  // string last_updated = 8;
  void clear_last_updated() ;
  const std::string& last_updated() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_last_updated(Arg_&& arg, Args_... args);
  std::string* mutable_last_updated();
  PROTOBUF_NODISCARD std::string* release_last_updated();
  void set_allocated_last_updated(std::string* value);

  private:
  const std::string& _internal_last_updated() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_last_updated(
      const std::string& value);
  std::string* _internal_mutable_last_updated();

  public:
  // float read_latency_ms = 2;
  void clear_read_latency_ms() ;
  float read_latency_ms() const;
  void set_read_latency_ms(float value);

  private:
  float _internal_read_latency_ms() const;
  void _internal_set_read_latency_ms(float value);

  public:
  // float write_latency_ms = 3;
  void clear_write_latency_ms() ;
  float write_latency_ms() const;
  void set_write_latency_ms(float value);

  private:
  float _internal_write_latency_ms() const;
  void _internal_set_write_latency_ms(float value);

  public:
  // float access_frequency_score = 4;
  void clear_access_frequency_score() ;
  float access_frequency_score() const;
  void set_access_frequency_score(float value);

  private:
  float _internal_access_frequency_score() const;
  void _internal_set_access_frequency_score(float value);

  public:
  // float replication_efficiency_score = 5;
  void clear_replication_efficiency_score() ;
  float replication_efficiency_score() const;
  void set_replication_efficiency_score(float value);

  private:
  float _internal_replication_efficiency_score() const;
  void _internal_set_replication_efficiency_score(float value);

  public:
  // float resource_utilization_score = 6;
  void clear_resource_utilization_score() ;
  float resource_utilization_score() const;
  void set_resource_utilization_score(float value);

  private:
  float _internal_resource_utilization_score() const;
  void _internal_set_resource_utilization_score(float value);

  public:
  // float sustainability_index = 7;
  void clear_sustainability_index() ;
  float sustainability_index() const;
  void set_sustainability_index(float value);

  private:
  float _internal_sustainability_index() const;
  void _internal_set_sustainability_index(float value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.segment_metadata.SegmentPerformance)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 9, 1,
      90, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SegmentPerformance& from_msg);
    ::google::protobuf::internal::MapField<SegmentPerformance_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::internal::ArenaStringPtr segment_hash_;
    ::google::protobuf::internal::ArenaStringPtr last_updated_;
    float read_latency_ms_;
    float write_latency_ms_;
    float access_frequency_score_;
    float replication_efficiency_score_;
    float resource_utilization_score_;
    float sustainability_index_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_segment_5fmetadata_2eproto;
};
// -------------------------------------------------------------------

class SegmentMetadata final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.segment_metadata.SegmentMetadata) */ {
 public:
  inline SegmentMetadata() : SegmentMetadata(nullptr) {}
  ~SegmentMetadata() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SegmentMetadata* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SegmentMetadata));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SegmentMetadata(
      ::google::protobuf::internal::ConstantInitialized);

  inline SegmentMetadata(const SegmentMetadata& from) : SegmentMetadata(nullptr, from) {}
  inline SegmentMetadata(SegmentMetadata&& from) noexcept
      : SegmentMetadata(nullptr, std::move(from)) {}
  inline SegmentMetadata& operator=(const SegmentMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline SegmentMetadata& operator=(SegmentMetadata&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SegmentMetadata& default_instance() {
    return *internal_default_instance();
  }
  static inline const SegmentMetadata* internal_default_instance() {
    return reinterpret_cast<const SegmentMetadata*>(
        &_SegmentMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(SegmentMetadata& a, SegmentMetadata& b) { a.Swap(&b); }
  inline void Swap(SegmentMetadata* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SegmentMetadata* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SegmentMetadata* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SegmentMetadata>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SegmentMetadata& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SegmentMetadata& from) { SegmentMetadata::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SegmentMetadata* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.segment_metadata.SegmentMetadata"; }

 protected:
  explicit SegmentMetadata(::google::protobuf::Arena* arena);
  SegmentMetadata(::google::protobuf::Arena* arena, const SegmentMetadata& from);
  SegmentMetadata(::google::protobuf::Arena* arena, SegmentMetadata&& from) noexcept
      : SegmentMetadata(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSecondaryLinksFieldNumber = 9,
    kMetadataFieldNumber = 10,
    kSegmentHashFieldNumber = 3,
    kCreationTimestampFieldNumber = 7,
    kPrimaryLinkFieldNumber = 8,
    kLastAccessedFieldNumber = 12,
    kIntegrityLevelFieldNumber = 13,
    kPerformanceProfileFieldNumber = 14,
    kRecoveryStrategyFieldNumber = 16,
    kArchivalPolicyFieldNumber = 17,
    kSegmentIndexFieldNumber = 1,
    kSegmentSizeFieldNumber = 2,
    kStatusFieldNumber = 4,
    kReplicationLevelFieldNumber = 5,
    kEncryptionStatusFieldNumber = 6,
    kAccessFrequencyFieldNumber = 11,
    kAdaptiveReplicationEnabledFieldNumber = 15,
    kSustainabilityFlagFieldNumber = 18,
  };
  // repeated string secondary_links = 9;
  int secondary_links_size() const;
  private:
  int _internal_secondary_links_size() const;

  public:
  void clear_secondary_links() ;
  const std::string& secondary_links(int index) const;
  std::string* mutable_secondary_links(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_secondary_links(int index, Arg_&& value, Args_... args);
  std::string* add_secondary_links();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_secondary_links(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& secondary_links() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_secondary_links();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_secondary_links() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_secondary_links();

  public:
  // map<string, string> metadata = 10;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // string segment_hash = 3;
  void clear_segment_hash() ;
  const std::string& segment_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_segment_hash(Arg_&& arg, Args_... args);
  std::string* mutable_segment_hash();
  PROTOBUF_NODISCARD std::string* release_segment_hash();
  void set_allocated_segment_hash(std::string* value);

  private:
  const std::string& _internal_segment_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_segment_hash(
      const std::string& value);
  std::string* _internal_mutable_segment_hash();

  public:
  // string creation_timestamp = 7;
  void clear_creation_timestamp() ;
  const std::string& creation_timestamp() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_creation_timestamp(Arg_&& arg, Args_... args);
  std::string* mutable_creation_timestamp();
  PROTOBUF_NODISCARD std::string* release_creation_timestamp();
  void set_allocated_creation_timestamp(std::string* value);

  private:
  const std::string& _internal_creation_timestamp() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_creation_timestamp(
      const std::string& value);
  std::string* _internal_mutable_creation_timestamp();

  public:
  // string primary_link = 8;
  void clear_primary_link() ;
  const std::string& primary_link() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_primary_link(Arg_&& arg, Args_... args);
  std::string* mutable_primary_link();
  PROTOBUF_NODISCARD std::string* release_primary_link();
  void set_allocated_primary_link(std::string* value);

  private:
  const std::string& _internal_primary_link() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_primary_link(
      const std::string& value);
  std::string* _internal_mutable_primary_link();

  public:
  // string last_accessed = 12;
  void clear_last_accessed() ;
  const std::string& last_accessed() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_last_accessed(Arg_&& arg, Args_... args);
  std::string* mutable_last_accessed();
  PROTOBUF_NODISCARD std::string* release_last_accessed();
  void set_allocated_last_accessed(std::string* value);

  private:
  const std::string& _internal_last_accessed() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_last_accessed(
      const std::string& value);
  std::string* _internal_mutable_last_accessed();

  public:
  // string integrity_level = 13;
  void clear_integrity_level() ;
  const std::string& integrity_level() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_integrity_level(Arg_&& arg, Args_... args);
  std::string* mutable_integrity_level();
  PROTOBUF_NODISCARD std::string* release_integrity_level();
  void set_allocated_integrity_level(std::string* value);

  private:
  const std::string& _internal_integrity_level() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_integrity_level(
      const std::string& value);
  std::string* _internal_mutable_integrity_level();

  public:
  // string performance_profile = 14;
  void clear_performance_profile() ;
  const std::string& performance_profile() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_performance_profile(Arg_&& arg, Args_... args);
  std::string* mutable_performance_profile();
  PROTOBUF_NODISCARD std::string* release_performance_profile();
  void set_allocated_performance_profile(std::string* value);

  private:
  const std::string& _internal_performance_profile() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_performance_profile(
      const std::string& value);
  std::string* _internal_mutable_performance_profile();

  public:
  // string recovery_strategy = 16;
  void clear_recovery_strategy() ;
  const std::string& recovery_strategy() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_recovery_strategy(Arg_&& arg, Args_... args);
  std::string* mutable_recovery_strategy();
  PROTOBUF_NODISCARD std::string* release_recovery_strategy();
  void set_allocated_recovery_strategy(std::string* value);

  private:
  const std::string& _internal_recovery_strategy() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_recovery_strategy(
      const std::string& value);
  std::string* _internal_mutable_recovery_strategy();

  public:
  // string archival_policy = 17;
  void clear_archival_policy() ;
  const std::string& archival_policy() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_archival_policy(Arg_&& arg, Args_... args);
  std::string* mutable_archival_policy();
  PROTOBUF_NODISCARD std::string* release_archival_policy();
  void set_allocated_archival_policy(std::string* value);

  private:
  const std::string& _internal_archival_policy() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_archival_policy(
      const std::string& value);
  std::string* _internal_mutable_archival_policy();

  public:
  // int32 segment_index = 1;
  void clear_segment_index() ;
  ::int32_t segment_index() const;
  void set_segment_index(::int32_t value);

  private:
  ::int32_t _internal_segment_index() const;
  void _internal_set_segment_index(::int32_t value);

  public:
  // int32 segment_size = 2;
  void clear_segment_size() ;
  ::int32_t segment_size() const;
  void set_segment_size(::int32_t value);

  private:
  ::int32_t _internal_segment_size() const;
  void _internal_set_segment_size(::int32_t value);

  public:
  // .seigr.segment_metadata.SegmentOperationStatus status = 4;
  void clear_status() ;
  ::seigr::segment_metadata::SegmentOperationStatus status() const;
  void set_status(::seigr::segment_metadata::SegmentOperationStatus value);

  private:
  ::seigr::segment_metadata::SegmentOperationStatus _internal_status() const;
  void _internal_set_status(::seigr::segment_metadata::SegmentOperationStatus value);

  public:
  // .seigr.segment_metadata.ReplicationLevel replication_level = 5;
  void clear_replication_level() ;
  ::seigr::segment_metadata::ReplicationLevel replication_level() const;
  void set_replication_level(::seigr::segment_metadata::ReplicationLevel value);

  private:
  ::seigr::segment_metadata::ReplicationLevel _internal_replication_level() const;
  void _internal_set_replication_level(::seigr::segment_metadata::ReplicationLevel value);

  public:
  // .seigr.segment_metadata.EncryptionStatus encryption_status = 6;
  void clear_encryption_status() ;
  ::seigr::segment_metadata::EncryptionStatus encryption_status() const;
  void set_encryption_status(::seigr::segment_metadata::EncryptionStatus value);

  private:
  ::seigr::segment_metadata::EncryptionStatus _internal_encryption_status() const;
  void _internal_set_encryption_status(::seigr::segment_metadata::EncryptionStatus value);

  public:
  // int32 access_frequency = 11;
  void clear_access_frequency() ;
  ::int32_t access_frequency() const;
  void set_access_frequency(::int32_t value);

  private:
  ::int32_t _internal_access_frequency() const;
  void _internal_set_access_frequency(::int32_t value);

  public:
  // bool adaptive_replication_enabled = 15;
  void clear_adaptive_replication_enabled() ;
  bool adaptive_replication_enabled() const;
  void set_adaptive_replication_enabled(bool value);

  private:
  bool _internal_adaptive_replication_enabled() const;
  void _internal_set_adaptive_replication_enabled(bool value);

  public:
  // bool sustainability_flag = 18;
  void clear_sustainability_flag() ;
  bool sustainability_flag() const;
  void set_sustainability_flag(bool value);

  private:
  bool _internal_sustainability_flag() const;
  void _internal_set_sustainability_flag(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.segment_metadata.SegmentMetadata)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 18, 1,
      207, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SegmentMetadata& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> secondary_links_;
    ::google::protobuf::internal::MapField<SegmentMetadata_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::internal::ArenaStringPtr segment_hash_;
    ::google::protobuf::internal::ArenaStringPtr creation_timestamp_;
    ::google::protobuf::internal::ArenaStringPtr primary_link_;
    ::google::protobuf::internal::ArenaStringPtr last_accessed_;
    ::google::protobuf::internal::ArenaStringPtr integrity_level_;
    ::google::protobuf::internal::ArenaStringPtr performance_profile_;
    ::google::protobuf::internal::ArenaStringPtr recovery_strategy_;
    ::google::protobuf::internal::ArenaStringPtr archival_policy_;
    ::int32_t segment_index_;
    ::int32_t segment_size_;
    int status_;
    int replication_level_;
    int encryption_status_;
    ::int32_t access_frequency_;
    bool adaptive_replication_enabled_;
    bool sustainability_flag_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_segment_5fmetadata_2eproto;
};
// -------------------------------------------------------------------

class SegmentStatusResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.segment_metadata.SegmentStatusResponse) */ {
 public:
  inline SegmentStatusResponse() : SegmentStatusResponse(nullptr) {}
  ~SegmentStatusResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SegmentStatusResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SegmentStatusResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SegmentStatusResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SegmentStatusResponse(const SegmentStatusResponse& from) : SegmentStatusResponse(nullptr, from) {}
  inline SegmentStatusResponse(SegmentStatusResponse&& from) noexcept
      : SegmentStatusResponse(nullptr, std::move(from)) {}
  inline SegmentStatusResponse& operator=(const SegmentStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SegmentStatusResponse& operator=(SegmentStatusResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SegmentStatusResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SegmentStatusResponse* internal_default_instance() {
    return reinterpret_cast<const SegmentStatusResponse*>(
        &_SegmentStatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(SegmentStatusResponse& a, SegmentStatusResponse& b) { a.Swap(&b); }
  inline void Swap(SegmentStatusResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SegmentStatusResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SegmentStatusResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SegmentStatusResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SegmentStatusResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SegmentStatusResponse& from) { SegmentStatusResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SegmentStatusResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.segment_metadata.SegmentStatusResponse"; }

 protected:
  explicit SegmentStatusResponse(::google::protobuf::Arena* arena);
  SegmentStatusResponse(::google::protobuf::Arena* arena, const SegmentStatusResponse& from);
  SegmentStatusResponse(::google::protobuf::Arena* arena, SegmentStatusResponse&& from) noexcept
      : SegmentStatusResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageFieldNumber = 3,
    kStatusFieldNumber = 2,
    kSuccessFieldNumber = 1,
  };
  // string message = 3;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // .seigr.segment_metadata.SegmentStatus status = 2;
  bool has_status() const;
  void clear_status() ;
  const ::seigr::segment_metadata::SegmentStatus& status() const;
  PROTOBUF_NODISCARD ::seigr::segment_metadata::SegmentStatus* release_status();
  ::seigr::segment_metadata::SegmentStatus* mutable_status();
  void set_allocated_status(::seigr::segment_metadata::SegmentStatus* value);
  void unsafe_arena_set_allocated_status(::seigr::segment_metadata::SegmentStatus* value);
  ::seigr::segment_metadata::SegmentStatus* unsafe_arena_release_status();

  private:
  const ::seigr::segment_metadata::SegmentStatus& _internal_status() const;
  ::seigr::segment_metadata::SegmentStatus* _internal_mutable_status();

  public:
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.segment_metadata.SegmentStatusResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      60, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SegmentStatusResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr message_;
    ::seigr::segment_metadata::SegmentStatus* status_;
    bool success_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_segment_5fmetadata_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SegmentStatus

// string segment_hash = 1;
inline void SegmentStatus::clear_segment_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.segment_hash_.ClearToEmpty();
}
inline const std::string& SegmentStatus::segment_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.SegmentStatus.segment_hash)
  return _internal_segment_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SegmentStatus::set_segment_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.segment_hash_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.SegmentStatus.segment_hash)
}
inline std::string* SegmentStatus::mutable_segment_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_segment_hash();
  // @@protoc_insertion_point(field_mutable:seigr.segment_metadata.SegmentStatus.segment_hash)
  return _s;
}
inline const std::string& SegmentStatus::_internal_segment_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.segment_hash_.Get();
}
inline void SegmentStatus::_internal_set_segment_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.segment_hash_.Set(value, GetArena());
}
inline std::string* SegmentStatus::_internal_mutable_segment_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.segment_hash_.Mutable( GetArena());
}
inline std::string* SegmentStatus::release_segment_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.segment_metadata.SegmentStatus.segment_hash)
  return _impl_.segment_hash_.Release();
}
inline void SegmentStatus::set_allocated_segment_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.segment_hash_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.segment_hash_.IsDefault()) {
    _impl_.segment_hash_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.segment_metadata.SegmentStatus.segment_hash)
}

// .seigr.common.ThreatLevel threat_level = 2;
inline void SegmentStatus::clear_threat_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.threat_level_ = 0;
}
inline ::seigr::common::ThreatLevel SegmentStatus::threat_level() const {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.SegmentStatus.threat_level)
  return _internal_threat_level();
}
inline void SegmentStatus::set_threat_level(::seigr::common::ThreatLevel value) {
  _internal_set_threat_level(value);
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.SegmentStatus.threat_level)
}
inline ::seigr::common::ThreatLevel SegmentStatus::_internal_threat_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::common::ThreatLevel>(_impl_.threat_level_);
}
inline void SegmentStatus::_internal_set_threat_level(::seigr::common::ThreatLevel value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.threat_level_ = value;
}

// bool integrity_check_passed = 3;
inline void SegmentStatus::clear_integrity_check_passed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.integrity_check_passed_ = false;
}
inline bool SegmentStatus::integrity_check_passed() const {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.SegmentStatus.integrity_check_passed)
  return _internal_integrity_check_passed();
}
inline void SegmentStatus::set_integrity_check_passed(bool value) {
  _internal_set_integrity_check_passed(value);
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.SegmentStatus.integrity_check_passed)
}
inline bool SegmentStatus::_internal_integrity_check_passed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.integrity_check_passed_;
}
inline void SegmentStatus::_internal_set_integrity_check_passed(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.integrity_check_passed_ = value;
}

// int32 threat_count = 4;
inline void SegmentStatus::clear_threat_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.threat_count_ = 0;
}
inline ::int32_t SegmentStatus::threat_count() const {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.SegmentStatus.threat_count)
  return _internal_threat_count();
}
inline void SegmentStatus::set_threat_count(::int32_t value) {
  _internal_set_threat_count(value);
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.SegmentStatus.threat_count)
}
inline ::int32_t SegmentStatus::_internal_threat_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.threat_count_;
}
inline void SegmentStatus::_internal_set_threat_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.threat_count_ = value;
}

// int32 replication_count = 5;
inline void SegmentStatus::clear_replication_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.replication_count_ = 0;
}
inline ::int32_t SegmentStatus::replication_count() const {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.SegmentStatus.replication_count)
  return _internal_replication_count();
}
inline void SegmentStatus::set_replication_count(::int32_t value) {
  _internal_set_replication_count(value);
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.SegmentStatus.replication_count)
}
inline ::int32_t SegmentStatus::_internal_replication_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.replication_count_;
}
inline void SegmentStatus::_internal_set_replication_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.replication_count_ = value;
}

// string last_checked = 6;
inline void SegmentStatus::clear_last_checked() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_checked_.ClearToEmpty();
}
inline const std::string& SegmentStatus::last_checked() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.SegmentStatus.last_checked)
  return _internal_last_checked();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SegmentStatus::set_last_checked(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_checked_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.SegmentStatus.last_checked)
}
inline std::string* SegmentStatus::mutable_last_checked() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_last_checked();
  // @@protoc_insertion_point(field_mutable:seigr.segment_metadata.SegmentStatus.last_checked)
  return _s;
}
inline const std::string& SegmentStatus::_internal_last_checked() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_checked_.Get();
}
inline void SegmentStatus::_internal_set_last_checked(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_checked_.Set(value, GetArena());
}
inline std::string* SegmentStatus::_internal_mutable_last_checked() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.last_checked_.Mutable( GetArena());
}
inline std::string* SegmentStatus::release_last_checked() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.segment_metadata.SegmentStatus.last_checked)
  return _impl_.last_checked_.Release();
}
inline void SegmentStatus::set_allocated_last_checked(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_checked_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.last_checked_.IsDefault()) {
    _impl_.last_checked_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.segment_metadata.SegmentStatus.last_checked)
}

// map<string, string> metadata = 7;
inline int SegmentStatus::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int SegmentStatus::metadata_size() const {
  return _internal_metadata_size();
}
inline void SegmentStatus::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& SegmentStatus::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& SegmentStatus::metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.segment_metadata.SegmentStatus.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* SegmentStatus::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* SegmentStatus::mutable_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.segment_metadata.SegmentStatus.metadata)
  return _internal_mutable_metadata();
}

// string last_updated_by = 8;
inline void SegmentStatus::clear_last_updated_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_updated_by_.ClearToEmpty();
}
inline const std::string& SegmentStatus::last_updated_by() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.SegmentStatus.last_updated_by)
  return _internal_last_updated_by();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SegmentStatus::set_last_updated_by(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_updated_by_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.SegmentStatus.last_updated_by)
}
inline std::string* SegmentStatus::mutable_last_updated_by() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_last_updated_by();
  // @@protoc_insertion_point(field_mutable:seigr.segment_metadata.SegmentStatus.last_updated_by)
  return _s;
}
inline const std::string& SegmentStatus::_internal_last_updated_by() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_updated_by_.Get();
}
inline void SegmentStatus::_internal_set_last_updated_by(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_updated_by_.Set(value, GetArena());
}
inline std::string* SegmentStatus::_internal_mutable_last_updated_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.last_updated_by_.Mutable( GetArena());
}
inline std::string* SegmentStatus::release_last_updated_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.segment_metadata.SegmentStatus.last_updated_by)
  return _impl_.last_updated_by_.Release();
}
inline void SegmentStatus::set_allocated_last_updated_by(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_updated_by_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.last_updated_by_.IsDefault()) {
    _impl_.last_updated_by_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.segment_metadata.SegmentStatus.last_updated_by)
}

// float resource_efficiency_score = 9;
inline void SegmentStatus::clear_resource_efficiency_score() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resource_efficiency_score_ = 0;
}
inline float SegmentStatus::resource_efficiency_score() const {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.SegmentStatus.resource_efficiency_score)
  return _internal_resource_efficiency_score();
}
inline void SegmentStatus::set_resource_efficiency_score(float value) {
  _internal_set_resource_efficiency_score(value);
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.SegmentStatus.resource_efficiency_score)
}
inline float SegmentStatus::_internal_resource_efficiency_score() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.resource_efficiency_score_;
}
inline void SegmentStatus::_internal_set_resource_efficiency_score(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resource_efficiency_score_ = value;
}

// string performance_status = 10;
inline void SegmentStatus::clear_performance_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.performance_status_.ClearToEmpty();
}
inline const std::string& SegmentStatus::performance_status() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.SegmentStatus.performance_status)
  return _internal_performance_status();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SegmentStatus::set_performance_status(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.performance_status_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.SegmentStatus.performance_status)
}
inline std::string* SegmentStatus::mutable_performance_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_performance_status();
  // @@protoc_insertion_point(field_mutable:seigr.segment_metadata.SegmentStatus.performance_status)
  return _s;
}
inline const std::string& SegmentStatus::_internal_performance_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.performance_status_.Get();
}
inline void SegmentStatus::_internal_set_performance_status(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.performance_status_.Set(value, GetArena());
}
inline std::string* SegmentStatus::_internal_mutable_performance_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.performance_status_.Mutable( GetArena());
}
inline std::string* SegmentStatus::release_performance_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.segment_metadata.SegmentStatus.performance_status)
  return _impl_.performance_status_.Release();
}
inline void SegmentStatus::set_allocated_performance_status(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.performance_status_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.performance_status_.IsDefault()) {
    _impl_.performance_status_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.segment_metadata.SegmentStatus.performance_status)
}

// .seigr.segment_metadata.EncryptionStatus encryption_status = 11;
inline void SegmentStatus::clear_encryption_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.encryption_status_ = 0;
}
inline ::seigr::segment_metadata::EncryptionStatus SegmentStatus::encryption_status() const {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.SegmentStatus.encryption_status)
  return _internal_encryption_status();
}
inline void SegmentStatus::set_encryption_status(::seigr::segment_metadata::EncryptionStatus value) {
  _internal_set_encryption_status(value);
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.SegmentStatus.encryption_status)
}
inline ::seigr::segment_metadata::EncryptionStatus SegmentStatus::_internal_encryption_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::segment_metadata::EncryptionStatus>(_impl_.encryption_status_);
}
inline void SegmentStatus::_internal_set_encryption_status(::seigr::segment_metadata::EncryptionStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.encryption_status_ = value;
}

// string access_pattern = 12;
inline void SegmentStatus::clear_access_pattern() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.access_pattern_.ClearToEmpty();
}
inline const std::string& SegmentStatus::access_pattern() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.SegmentStatus.access_pattern)
  return _internal_access_pattern();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SegmentStatus::set_access_pattern(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.access_pattern_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.SegmentStatus.access_pattern)
}
inline std::string* SegmentStatus::mutable_access_pattern() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_access_pattern();
  // @@protoc_insertion_point(field_mutable:seigr.segment_metadata.SegmentStatus.access_pattern)
  return _s;
}
inline const std::string& SegmentStatus::_internal_access_pattern() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.access_pattern_.Get();
}
inline void SegmentStatus::_internal_set_access_pattern(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.access_pattern_.Set(value, GetArena());
}
inline std::string* SegmentStatus::_internal_mutable_access_pattern() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.access_pattern_.Mutable( GetArena());
}
inline std::string* SegmentStatus::release_access_pattern() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.segment_metadata.SegmentStatus.access_pattern)
  return _impl_.access_pattern_.Release();
}
inline void SegmentStatus::set_allocated_access_pattern(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.access_pattern_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.access_pattern_.IsDefault()) {
    _impl_.access_pattern_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.segment_metadata.SegmentStatus.access_pattern)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SegmentMetadata

// int32 segment_index = 1;
inline void SegmentMetadata::clear_segment_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.segment_index_ = 0;
}
inline ::int32_t SegmentMetadata::segment_index() const {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.SegmentMetadata.segment_index)
  return _internal_segment_index();
}
inline void SegmentMetadata::set_segment_index(::int32_t value) {
  _internal_set_segment_index(value);
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.SegmentMetadata.segment_index)
}
inline ::int32_t SegmentMetadata::_internal_segment_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.segment_index_;
}
inline void SegmentMetadata::_internal_set_segment_index(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.segment_index_ = value;
}

// int32 segment_size = 2;
inline void SegmentMetadata::clear_segment_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.segment_size_ = 0;
}
inline ::int32_t SegmentMetadata::segment_size() const {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.SegmentMetadata.segment_size)
  return _internal_segment_size();
}
inline void SegmentMetadata::set_segment_size(::int32_t value) {
  _internal_set_segment_size(value);
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.SegmentMetadata.segment_size)
}
inline ::int32_t SegmentMetadata::_internal_segment_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.segment_size_;
}
inline void SegmentMetadata::_internal_set_segment_size(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.segment_size_ = value;
}

// string segment_hash = 3;
inline void SegmentMetadata::clear_segment_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.segment_hash_.ClearToEmpty();
}
inline const std::string& SegmentMetadata::segment_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.SegmentMetadata.segment_hash)
  return _internal_segment_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SegmentMetadata::set_segment_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.segment_hash_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.SegmentMetadata.segment_hash)
}
inline std::string* SegmentMetadata::mutable_segment_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_segment_hash();
  // @@protoc_insertion_point(field_mutable:seigr.segment_metadata.SegmentMetadata.segment_hash)
  return _s;
}
inline const std::string& SegmentMetadata::_internal_segment_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.segment_hash_.Get();
}
inline void SegmentMetadata::_internal_set_segment_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.segment_hash_.Set(value, GetArena());
}
inline std::string* SegmentMetadata::_internal_mutable_segment_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.segment_hash_.Mutable( GetArena());
}
inline std::string* SegmentMetadata::release_segment_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.segment_metadata.SegmentMetadata.segment_hash)
  return _impl_.segment_hash_.Release();
}
inline void SegmentMetadata::set_allocated_segment_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.segment_hash_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.segment_hash_.IsDefault()) {
    _impl_.segment_hash_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.segment_metadata.SegmentMetadata.segment_hash)
}

// .seigr.segment_metadata.SegmentOperationStatus status = 4;
inline void SegmentMetadata::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0;
}
inline ::seigr::segment_metadata::SegmentOperationStatus SegmentMetadata::status() const {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.SegmentMetadata.status)
  return _internal_status();
}
inline void SegmentMetadata::set_status(::seigr::segment_metadata::SegmentOperationStatus value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.SegmentMetadata.status)
}
inline ::seigr::segment_metadata::SegmentOperationStatus SegmentMetadata::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::segment_metadata::SegmentOperationStatus>(_impl_.status_);
}
inline void SegmentMetadata::_internal_set_status(::seigr::segment_metadata::SegmentOperationStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// .seigr.segment_metadata.ReplicationLevel replication_level = 5;
inline void SegmentMetadata::clear_replication_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.replication_level_ = 0;
}
inline ::seigr::segment_metadata::ReplicationLevel SegmentMetadata::replication_level() const {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.SegmentMetadata.replication_level)
  return _internal_replication_level();
}
inline void SegmentMetadata::set_replication_level(::seigr::segment_metadata::ReplicationLevel value) {
  _internal_set_replication_level(value);
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.SegmentMetadata.replication_level)
}
inline ::seigr::segment_metadata::ReplicationLevel SegmentMetadata::_internal_replication_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::segment_metadata::ReplicationLevel>(_impl_.replication_level_);
}
inline void SegmentMetadata::_internal_set_replication_level(::seigr::segment_metadata::ReplicationLevel value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.replication_level_ = value;
}

// .seigr.segment_metadata.EncryptionStatus encryption_status = 6;
inline void SegmentMetadata::clear_encryption_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.encryption_status_ = 0;
}
inline ::seigr::segment_metadata::EncryptionStatus SegmentMetadata::encryption_status() const {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.SegmentMetadata.encryption_status)
  return _internal_encryption_status();
}
inline void SegmentMetadata::set_encryption_status(::seigr::segment_metadata::EncryptionStatus value) {
  _internal_set_encryption_status(value);
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.SegmentMetadata.encryption_status)
}
inline ::seigr::segment_metadata::EncryptionStatus SegmentMetadata::_internal_encryption_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::segment_metadata::EncryptionStatus>(_impl_.encryption_status_);
}
inline void SegmentMetadata::_internal_set_encryption_status(::seigr::segment_metadata::EncryptionStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.encryption_status_ = value;
}

// string creation_timestamp = 7;
inline void SegmentMetadata::clear_creation_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creation_timestamp_.ClearToEmpty();
}
inline const std::string& SegmentMetadata::creation_timestamp() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.SegmentMetadata.creation_timestamp)
  return _internal_creation_timestamp();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SegmentMetadata::set_creation_timestamp(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creation_timestamp_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.SegmentMetadata.creation_timestamp)
}
inline std::string* SegmentMetadata::mutable_creation_timestamp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_creation_timestamp();
  // @@protoc_insertion_point(field_mutable:seigr.segment_metadata.SegmentMetadata.creation_timestamp)
  return _s;
}
inline const std::string& SegmentMetadata::_internal_creation_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.creation_timestamp_.Get();
}
inline void SegmentMetadata::_internal_set_creation_timestamp(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creation_timestamp_.Set(value, GetArena());
}
inline std::string* SegmentMetadata::_internal_mutable_creation_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.creation_timestamp_.Mutable( GetArena());
}
inline std::string* SegmentMetadata::release_creation_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.segment_metadata.SegmentMetadata.creation_timestamp)
  return _impl_.creation_timestamp_.Release();
}
inline void SegmentMetadata::set_allocated_creation_timestamp(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creation_timestamp_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.creation_timestamp_.IsDefault()) {
    _impl_.creation_timestamp_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.segment_metadata.SegmentMetadata.creation_timestamp)
}

// string primary_link = 8;
inline void SegmentMetadata::clear_primary_link() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.primary_link_.ClearToEmpty();
}
inline const std::string& SegmentMetadata::primary_link() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.SegmentMetadata.primary_link)
  return _internal_primary_link();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SegmentMetadata::set_primary_link(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.primary_link_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.SegmentMetadata.primary_link)
}
inline std::string* SegmentMetadata::mutable_primary_link() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_primary_link();
  // @@protoc_insertion_point(field_mutable:seigr.segment_metadata.SegmentMetadata.primary_link)
  return _s;
}
inline const std::string& SegmentMetadata::_internal_primary_link() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.primary_link_.Get();
}
inline void SegmentMetadata::_internal_set_primary_link(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.primary_link_.Set(value, GetArena());
}
inline std::string* SegmentMetadata::_internal_mutable_primary_link() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.primary_link_.Mutable( GetArena());
}
inline std::string* SegmentMetadata::release_primary_link() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.segment_metadata.SegmentMetadata.primary_link)
  return _impl_.primary_link_.Release();
}
inline void SegmentMetadata::set_allocated_primary_link(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.primary_link_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.primary_link_.IsDefault()) {
    _impl_.primary_link_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.segment_metadata.SegmentMetadata.primary_link)
}

// repeated string secondary_links = 9;
inline int SegmentMetadata::_internal_secondary_links_size() const {
  return _internal_secondary_links().size();
}
inline int SegmentMetadata::secondary_links_size() const {
  return _internal_secondary_links_size();
}
inline void SegmentMetadata::clear_secondary_links() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.secondary_links_.Clear();
}
inline std::string* SegmentMetadata::add_secondary_links() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_secondary_links()->Add();
  // @@protoc_insertion_point(field_add_mutable:seigr.segment_metadata.SegmentMetadata.secondary_links)
  return _s;
}
inline const std::string& SegmentMetadata::secondary_links(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.SegmentMetadata.secondary_links)
  return _internal_secondary_links().Get(index);
}
inline std::string* SegmentMetadata::mutable_secondary_links(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.segment_metadata.SegmentMetadata.secondary_links)
  return _internal_mutable_secondary_links()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void SegmentMetadata::set_secondary_links(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_secondary_links()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.SegmentMetadata.secondary_links)
}
template <typename Arg_, typename... Args_>
inline void SegmentMetadata::add_secondary_links(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_secondary_links(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seigr.segment_metadata.SegmentMetadata.secondary_links)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SegmentMetadata::secondary_links() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.segment_metadata.SegmentMetadata.secondary_links)
  return _internal_secondary_links();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SegmentMetadata::mutable_secondary_links() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.segment_metadata.SegmentMetadata.secondary_links)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_secondary_links();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SegmentMetadata::_internal_secondary_links() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.secondary_links_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SegmentMetadata::_internal_mutable_secondary_links() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.secondary_links_;
}

// map<string, string> metadata = 10;
inline int SegmentMetadata::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int SegmentMetadata::metadata_size() const {
  return _internal_metadata_size();
}
inline void SegmentMetadata::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& SegmentMetadata::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& SegmentMetadata::metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.segment_metadata.SegmentMetadata.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* SegmentMetadata::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* SegmentMetadata::mutable_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.segment_metadata.SegmentMetadata.metadata)
  return _internal_mutable_metadata();
}

// int32 access_frequency = 11;
inline void SegmentMetadata::clear_access_frequency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.access_frequency_ = 0;
}
inline ::int32_t SegmentMetadata::access_frequency() const {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.SegmentMetadata.access_frequency)
  return _internal_access_frequency();
}
inline void SegmentMetadata::set_access_frequency(::int32_t value) {
  _internal_set_access_frequency(value);
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.SegmentMetadata.access_frequency)
}
inline ::int32_t SegmentMetadata::_internal_access_frequency() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.access_frequency_;
}
inline void SegmentMetadata::_internal_set_access_frequency(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.access_frequency_ = value;
}

// string last_accessed = 12;
inline void SegmentMetadata::clear_last_accessed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_accessed_.ClearToEmpty();
}
inline const std::string& SegmentMetadata::last_accessed() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.SegmentMetadata.last_accessed)
  return _internal_last_accessed();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SegmentMetadata::set_last_accessed(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_accessed_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.SegmentMetadata.last_accessed)
}
inline std::string* SegmentMetadata::mutable_last_accessed() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_last_accessed();
  // @@protoc_insertion_point(field_mutable:seigr.segment_metadata.SegmentMetadata.last_accessed)
  return _s;
}
inline const std::string& SegmentMetadata::_internal_last_accessed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_accessed_.Get();
}
inline void SegmentMetadata::_internal_set_last_accessed(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_accessed_.Set(value, GetArena());
}
inline std::string* SegmentMetadata::_internal_mutable_last_accessed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.last_accessed_.Mutable( GetArena());
}
inline std::string* SegmentMetadata::release_last_accessed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.segment_metadata.SegmentMetadata.last_accessed)
  return _impl_.last_accessed_.Release();
}
inline void SegmentMetadata::set_allocated_last_accessed(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_accessed_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.last_accessed_.IsDefault()) {
    _impl_.last_accessed_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.segment_metadata.SegmentMetadata.last_accessed)
}

// string integrity_level = 13;
inline void SegmentMetadata::clear_integrity_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.integrity_level_.ClearToEmpty();
}
inline const std::string& SegmentMetadata::integrity_level() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.SegmentMetadata.integrity_level)
  return _internal_integrity_level();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SegmentMetadata::set_integrity_level(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.integrity_level_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.SegmentMetadata.integrity_level)
}
inline std::string* SegmentMetadata::mutable_integrity_level() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_integrity_level();
  // @@protoc_insertion_point(field_mutable:seigr.segment_metadata.SegmentMetadata.integrity_level)
  return _s;
}
inline const std::string& SegmentMetadata::_internal_integrity_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.integrity_level_.Get();
}
inline void SegmentMetadata::_internal_set_integrity_level(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.integrity_level_.Set(value, GetArena());
}
inline std::string* SegmentMetadata::_internal_mutable_integrity_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.integrity_level_.Mutable( GetArena());
}
inline std::string* SegmentMetadata::release_integrity_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.segment_metadata.SegmentMetadata.integrity_level)
  return _impl_.integrity_level_.Release();
}
inline void SegmentMetadata::set_allocated_integrity_level(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.integrity_level_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.integrity_level_.IsDefault()) {
    _impl_.integrity_level_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.segment_metadata.SegmentMetadata.integrity_level)
}

// string performance_profile = 14;
inline void SegmentMetadata::clear_performance_profile() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.performance_profile_.ClearToEmpty();
}
inline const std::string& SegmentMetadata::performance_profile() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.SegmentMetadata.performance_profile)
  return _internal_performance_profile();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SegmentMetadata::set_performance_profile(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.performance_profile_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.SegmentMetadata.performance_profile)
}
inline std::string* SegmentMetadata::mutable_performance_profile() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_performance_profile();
  // @@protoc_insertion_point(field_mutable:seigr.segment_metadata.SegmentMetadata.performance_profile)
  return _s;
}
inline const std::string& SegmentMetadata::_internal_performance_profile() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.performance_profile_.Get();
}
inline void SegmentMetadata::_internal_set_performance_profile(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.performance_profile_.Set(value, GetArena());
}
inline std::string* SegmentMetadata::_internal_mutable_performance_profile() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.performance_profile_.Mutable( GetArena());
}
inline std::string* SegmentMetadata::release_performance_profile() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.segment_metadata.SegmentMetadata.performance_profile)
  return _impl_.performance_profile_.Release();
}
inline void SegmentMetadata::set_allocated_performance_profile(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.performance_profile_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.performance_profile_.IsDefault()) {
    _impl_.performance_profile_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.segment_metadata.SegmentMetadata.performance_profile)
}

// bool adaptive_replication_enabled = 15;
inline void SegmentMetadata::clear_adaptive_replication_enabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.adaptive_replication_enabled_ = false;
}
inline bool SegmentMetadata::adaptive_replication_enabled() const {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.SegmentMetadata.adaptive_replication_enabled)
  return _internal_adaptive_replication_enabled();
}
inline void SegmentMetadata::set_adaptive_replication_enabled(bool value) {
  _internal_set_adaptive_replication_enabled(value);
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.SegmentMetadata.adaptive_replication_enabled)
}
inline bool SegmentMetadata::_internal_adaptive_replication_enabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.adaptive_replication_enabled_;
}
inline void SegmentMetadata::_internal_set_adaptive_replication_enabled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.adaptive_replication_enabled_ = value;
}

// string recovery_strategy = 16;
inline void SegmentMetadata::clear_recovery_strategy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recovery_strategy_.ClearToEmpty();
}
inline const std::string& SegmentMetadata::recovery_strategy() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.SegmentMetadata.recovery_strategy)
  return _internal_recovery_strategy();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SegmentMetadata::set_recovery_strategy(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recovery_strategy_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.SegmentMetadata.recovery_strategy)
}
inline std::string* SegmentMetadata::mutable_recovery_strategy() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_recovery_strategy();
  // @@protoc_insertion_point(field_mutable:seigr.segment_metadata.SegmentMetadata.recovery_strategy)
  return _s;
}
inline const std::string& SegmentMetadata::_internal_recovery_strategy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.recovery_strategy_.Get();
}
inline void SegmentMetadata::_internal_set_recovery_strategy(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recovery_strategy_.Set(value, GetArena());
}
inline std::string* SegmentMetadata::_internal_mutable_recovery_strategy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.recovery_strategy_.Mutable( GetArena());
}
inline std::string* SegmentMetadata::release_recovery_strategy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.segment_metadata.SegmentMetadata.recovery_strategy)
  return _impl_.recovery_strategy_.Release();
}
inline void SegmentMetadata::set_allocated_recovery_strategy(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recovery_strategy_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.recovery_strategy_.IsDefault()) {
    _impl_.recovery_strategy_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.segment_metadata.SegmentMetadata.recovery_strategy)
}

// string archival_policy = 17;
inline void SegmentMetadata::clear_archival_policy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.archival_policy_.ClearToEmpty();
}
inline const std::string& SegmentMetadata::archival_policy() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.SegmentMetadata.archival_policy)
  return _internal_archival_policy();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SegmentMetadata::set_archival_policy(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.archival_policy_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.SegmentMetadata.archival_policy)
}
inline std::string* SegmentMetadata::mutable_archival_policy() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_archival_policy();
  // @@protoc_insertion_point(field_mutable:seigr.segment_metadata.SegmentMetadata.archival_policy)
  return _s;
}
inline const std::string& SegmentMetadata::_internal_archival_policy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.archival_policy_.Get();
}
inline void SegmentMetadata::_internal_set_archival_policy(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.archival_policy_.Set(value, GetArena());
}
inline std::string* SegmentMetadata::_internal_mutable_archival_policy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.archival_policy_.Mutable( GetArena());
}
inline std::string* SegmentMetadata::release_archival_policy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.segment_metadata.SegmentMetadata.archival_policy)
  return _impl_.archival_policy_.Release();
}
inline void SegmentMetadata::set_allocated_archival_policy(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.archival_policy_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.archival_policy_.IsDefault()) {
    _impl_.archival_policy_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.segment_metadata.SegmentMetadata.archival_policy)
}

// bool sustainability_flag = 18;
inline void SegmentMetadata::clear_sustainability_flag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sustainability_flag_ = false;
}
inline bool SegmentMetadata::sustainability_flag() const {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.SegmentMetadata.sustainability_flag)
  return _internal_sustainability_flag();
}
inline void SegmentMetadata::set_sustainability_flag(bool value) {
  _internal_set_sustainability_flag(value);
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.SegmentMetadata.sustainability_flag)
}
inline bool SegmentMetadata::_internal_sustainability_flag() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sustainability_flag_;
}
inline void SegmentMetadata::_internal_set_sustainability_flag(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sustainability_flag_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SegmentRecovery

// string segment_hash = 1;
inline void SegmentRecovery::clear_segment_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.segment_hash_.ClearToEmpty();
}
inline const std::string& SegmentRecovery::segment_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.SegmentRecovery.segment_hash)
  return _internal_segment_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SegmentRecovery::set_segment_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.segment_hash_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.SegmentRecovery.segment_hash)
}
inline std::string* SegmentRecovery::mutable_segment_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_segment_hash();
  // @@protoc_insertion_point(field_mutable:seigr.segment_metadata.SegmentRecovery.segment_hash)
  return _s;
}
inline const std::string& SegmentRecovery::_internal_segment_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.segment_hash_.Get();
}
inline void SegmentRecovery::_internal_set_segment_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.segment_hash_.Set(value, GetArena());
}
inline std::string* SegmentRecovery::_internal_mutable_segment_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.segment_hash_.Mutable( GetArena());
}
inline std::string* SegmentRecovery::release_segment_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.segment_metadata.SegmentRecovery.segment_hash)
  return _impl_.segment_hash_.Release();
}
inline void SegmentRecovery::set_allocated_segment_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.segment_hash_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.segment_hash_.IsDefault()) {
    _impl_.segment_hash_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.segment_metadata.SegmentRecovery.segment_hash)
}

// string recovery_initiated_by = 2;
inline void SegmentRecovery::clear_recovery_initiated_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recovery_initiated_by_.ClearToEmpty();
}
inline const std::string& SegmentRecovery::recovery_initiated_by() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.SegmentRecovery.recovery_initiated_by)
  return _internal_recovery_initiated_by();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SegmentRecovery::set_recovery_initiated_by(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recovery_initiated_by_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.SegmentRecovery.recovery_initiated_by)
}
inline std::string* SegmentRecovery::mutable_recovery_initiated_by() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_recovery_initiated_by();
  // @@protoc_insertion_point(field_mutable:seigr.segment_metadata.SegmentRecovery.recovery_initiated_by)
  return _s;
}
inline const std::string& SegmentRecovery::_internal_recovery_initiated_by() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.recovery_initiated_by_.Get();
}
inline void SegmentRecovery::_internal_set_recovery_initiated_by(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recovery_initiated_by_.Set(value, GetArena());
}
inline std::string* SegmentRecovery::_internal_mutable_recovery_initiated_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.recovery_initiated_by_.Mutable( GetArena());
}
inline std::string* SegmentRecovery::release_recovery_initiated_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.segment_metadata.SegmentRecovery.recovery_initiated_by)
  return _impl_.recovery_initiated_by_.Release();
}
inline void SegmentRecovery::set_allocated_recovery_initiated_by(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recovery_initiated_by_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.recovery_initiated_by_.IsDefault()) {
    _impl_.recovery_initiated_by_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.segment_metadata.SegmentRecovery.recovery_initiated_by)
}

// string recovery_started_at = 3;
inline void SegmentRecovery::clear_recovery_started_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recovery_started_at_.ClearToEmpty();
}
inline const std::string& SegmentRecovery::recovery_started_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.SegmentRecovery.recovery_started_at)
  return _internal_recovery_started_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SegmentRecovery::set_recovery_started_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recovery_started_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.SegmentRecovery.recovery_started_at)
}
inline std::string* SegmentRecovery::mutable_recovery_started_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_recovery_started_at();
  // @@protoc_insertion_point(field_mutable:seigr.segment_metadata.SegmentRecovery.recovery_started_at)
  return _s;
}
inline const std::string& SegmentRecovery::_internal_recovery_started_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.recovery_started_at_.Get();
}
inline void SegmentRecovery::_internal_set_recovery_started_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recovery_started_at_.Set(value, GetArena());
}
inline std::string* SegmentRecovery::_internal_mutable_recovery_started_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.recovery_started_at_.Mutable( GetArena());
}
inline std::string* SegmentRecovery::release_recovery_started_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.segment_metadata.SegmentRecovery.recovery_started_at)
  return _impl_.recovery_started_at_.Release();
}
inline void SegmentRecovery::set_allocated_recovery_started_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recovery_started_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.recovery_started_at_.IsDefault()) {
    _impl_.recovery_started_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.segment_metadata.SegmentRecovery.recovery_started_at)
}

// string recovery_completed_at = 4;
inline void SegmentRecovery::clear_recovery_completed_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recovery_completed_at_.ClearToEmpty();
}
inline const std::string& SegmentRecovery::recovery_completed_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.SegmentRecovery.recovery_completed_at)
  return _internal_recovery_completed_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SegmentRecovery::set_recovery_completed_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recovery_completed_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.SegmentRecovery.recovery_completed_at)
}
inline std::string* SegmentRecovery::mutable_recovery_completed_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_recovery_completed_at();
  // @@protoc_insertion_point(field_mutable:seigr.segment_metadata.SegmentRecovery.recovery_completed_at)
  return _s;
}
inline const std::string& SegmentRecovery::_internal_recovery_completed_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.recovery_completed_at_.Get();
}
inline void SegmentRecovery::_internal_set_recovery_completed_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recovery_completed_at_.Set(value, GetArena());
}
inline std::string* SegmentRecovery::_internal_mutable_recovery_completed_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.recovery_completed_at_.Mutable( GetArena());
}
inline std::string* SegmentRecovery::release_recovery_completed_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.segment_metadata.SegmentRecovery.recovery_completed_at)
  return _impl_.recovery_completed_at_.Release();
}
inline void SegmentRecovery::set_allocated_recovery_completed_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recovery_completed_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.recovery_completed_at_.IsDefault()) {
    _impl_.recovery_completed_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.segment_metadata.SegmentRecovery.recovery_completed_at)
}

// string recovery_strategy = 5;
inline void SegmentRecovery::clear_recovery_strategy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recovery_strategy_.ClearToEmpty();
}
inline const std::string& SegmentRecovery::recovery_strategy() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.SegmentRecovery.recovery_strategy)
  return _internal_recovery_strategy();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SegmentRecovery::set_recovery_strategy(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recovery_strategy_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.SegmentRecovery.recovery_strategy)
}
inline std::string* SegmentRecovery::mutable_recovery_strategy() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_recovery_strategy();
  // @@protoc_insertion_point(field_mutable:seigr.segment_metadata.SegmentRecovery.recovery_strategy)
  return _s;
}
inline const std::string& SegmentRecovery::_internal_recovery_strategy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.recovery_strategy_.Get();
}
inline void SegmentRecovery::_internal_set_recovery_strategy(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recovery_strategy_.Set(value, GetArena());
}
inline std::string* SegmentRecovery::_internal_mutable_recovery_strategy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.recovery_strategy_.Mutable( GetArena());
}
inline std::string* SegmentRecovery::release_recovery_strategy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.segment_metadata.SegmentRecovery.recovery_strategy)
  return _impl_.recovery_strategy_.Release();
}
inline void SegmentRecovery::set_allocated_recovery_strategy(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recovery_strategy_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.recovery_strategy_.IsDefault()) {
    _impl_.recovery_strategy_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.segment_metadata.SegmentRecovery.recovery_strategy)
}

// bool recovery_successful = 6;
inline void SegmentRecovery::clear_recovery_successful() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recovery_successful_ = false;
}
inline bool SegmentRecovery::recovery_successful() const {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.SegmentRecovery.recovery_successful)
  return _internal_recovery_successful();
}
inline void SegmentRecovery::set_recovery_successful(bool value) {
  _internal_set_recovery_successful(value);
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.SegmentRecovery.recovery_successful)
}
inline bool SegmentRecovery::_internal_recovery_successful() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.recovery_successful_;
}
inline void SegmentRecovery::_internal_set_recovery_successful(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recovery_successful_ = value;
}

// string failure_reason = 7;
inline void SegmentRecovery::clear_failure_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.failure_reason_.ClearToEmpty();
}
inline const std::string& SegmentRecovery::failure_reason() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.SegmentRecovery.failure_reason)
  return _internal_failure_reason();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SegmentRecovery::set_failure_reason(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.failure_reason_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.SegmentRecovery.failure_reason)
}
inline std::string* SegmentRecovery::mutable_failure_reason() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_failure_reason();
  // @@protoc_insertion_point(field_mutable:seigr.segment_metadata.SegmentRecovery.failure_reason)
  return _s;
}
inline const std::string& SegmentRecovery::_internal_failure_reason() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.failure_reason_.Get();
}
inline void SegmentRecovery::_internal_set_failure_reason(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.failure_reason_.Set(value, GetArena());
}
inline std::string* SegmentRecovery::_internal_mutable_failure_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.failure_reason_.Mutable( GetArena());
}
inline std::string* SegmentRecovery::release_failure_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.segment_metadata.SegmentRecovery.failure_reason)
  return _impl_.failure_reason_.Release();
}
inline void SegmentRecovery::set_allocated_failure_reason(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.failure_reason_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.failure_reason_.IsDefault()) {
    _impl_.failure_reason_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.segment_metadata.SegmentRecovery.failure_reason)
}

// map<string, string> metadata = 8;
inline int SegmentRecovery::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int SegmentRecovery::metadata_size() const {
  return _internal_metadata_size();
}
inline void SegmentRecovery::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& SegmentRecovery::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& SegmentRecovery::metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.segment_metadata.SegmentRecovery.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* SegmentRecovery::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* SegmentRecovery::mutable_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.segment_metadata.SegmentRecovery.metadata)
  return _internal_mutable_metadata();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SegmentPerformance

// string segment_hash = 1;
inline void SegmentPerformance::clear_segment_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.segment_hash_.ClearToEmpty();
}
inline const std::string& SegmentPerformance::segment_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.SegmentPerformance.segment_hash)
  return _internal_segment_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SegmentPerformance::set_segment_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.segment_hash_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.SegmentPerformance.segment_hash)
}
inline std::string* SegmentPerformance::mutable_segment_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_segment_hash();
  // @@protoc_insertion_point(field_mutable:seigr.segment_metadata.SegmentPerformance.segment_hash)
  return _s;
}
inline const std::string& SegmentPerformance::_internal_segment_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.segment_hash_.Get();
}
inline void SegmentPerformance::_internal_set_segment_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.segment_hash_.Set(value, GetArena());
}
inline std::string* SegmentPerformance::_internal_mutable_segment_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.segment_hash_.Mutable( GetArena());
}
inline std::string* SegmentPerformance::release_segment_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.segment_metadata.SegmentPerformance.segment_hash)
  return _impl_.segment_hash_.Release();
}
inline void SegmentPerformance::set_allocated_segment_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.segment_hash_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.segment_hash_.IsDefault()) {
    _impl_.segment_hash_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.segment_metadata.SegmentPerformance.segment_hash)
}

// float read_latency_ms = 2;
inline void SegmentPerformance::clear_read_latency_ms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.read_latency_ms_ = 0;
}
inline float SegmentPerformance::read_latency_ms() const {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.SegmentPerformance.read_latency_ms)
  return _internal_read_latency_ms();
}
inline void SegmentPerformance::set_read_latency_ms(float value) {
  _internal_set_read_latency_ms(value);
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.SegmentPerformance.read_latency_ms)
}
inline float SegmentPerformance::_internal_read_latency_ms() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.read_latency_ms_;
}
inline void SegmentPerformance::_internal_set_read_latency_ms(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.read_latency_ms_ = value;
}

// float write_latency_ms = 3;
inline void SegmentPerformance::clear_write_latency_ms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.write_latency_ms_ = 0;
}
inline float SegmentPerformance::write_latency_ms() const {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.SegmentPerformance.write_latency_ms)
  return _internal_write_latency_ms();
}
inline void SegmentPerformance::set_write_latency_ms(float value) {
  _internal_set_write_latency_ms(value);
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.SegmentPerformance.write_latency_ms)
}
inline float SegmentPerformance::_internal_write_latency_ms() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.write_latency_ms_;
}
inline void SegmentPerformance::_internal_set_write_latency_ms(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.write_latency_ms_ = value;
}

// float access_frequency_score = 4;
inline void SegmentPerformance::clear_access_frequency_score() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.access_frequency_score_ = 0;
}
inline float SegmentPerformance::access_frequency_score() const {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.SegmentPerformance.access_frequency_score)
  return _internal_access_frequency_score();
}
inline void SegmentPerformance::set_access_frequency_score(float value) {
  _internal_set_access_frequency_score(value);
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.SegmentPerformance.access_frequency_score)
}
inline float SegmentPerformance::_internal_access_frequency_score() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.access_frequency_score_;
}
inline void SegmentPerformance::_internal_set_access_frequency_score(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.access_frequency_score_ = value;
}

// float replication_efficiency_score = 5;
inline void SegmentPerformance::clear_replication_efficiency_score() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.replication_efficiency_score_ = 0;
}
inline float SegmentPerformance::replication_efficiency_score() const {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.SegmentPerformance.replication_efficiency_score)
  return _internal_replication_efficiency_score();
}
inline void SegmentPerformance::set_replication_efficiency_score(float value) {
  _internal_set_replication_efficiency_score(value);
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.SegmentPerformance.replication_efficiency_score)
}
inline float SegmentPerformance::_internal_replication_efficiency_score() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.replication_efficiency_score_;
}
inline void SegmentPerformance::_internal_set_replication_efficiency_score(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.replication_efficiency_score_ = value;
}

// float resource_utilization_score = 6;
inline void SegmentPerformance::clear_resource_utilization_score() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resource_utilization_score_ = 0;
}
inline float SegmentPerformance::resource_utilization_score() const {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.SegmentPerformance.resource_utilization_score)
  return _internal_resource_utilization_score();
}
inline void SegmentPerformance::set_resource_utilization_score(float value) {
  _internal_set_resource_utilization_score(value);
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.SegmentPerformance.resource_utilization_score)
}
inline float SegmentPerformance::_internal_resource_utilization_score() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.resource_utilization_score_;
}
inline void SegmentPerformance::_internal_set_resource_utilization_score(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resource_utilization_score_ = value;
}

// float sustainability_index = 7;
inline void SegmentPerformance::clear_sustainability_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sustainability_index_ = 0;
}
inline float SegmentPerformance::sustainability_index() const {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.SegmentPerformance.sustainability_index)
  return _internal_sustainability_index();
}
inline void SegmentPerformance::set_sustainability_index(float value) {
  _internal_set_sustainability_index(value);
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.SegmentPerformance.sustainability_index)
}
inline float SegmentPerformance::_internal_sustainability_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sustainability_index_;
}
inline void SegmentPerformance::_internal_set_sustainability_index(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sustainability_index_ = value;
}

// string last_updated = 8;
inline void SegmentPerformance::clear_last_updated() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_updated_.ClearToEmpty();
}
inline const std::string& SegmentPerformance::last_updated() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.SegmentPerformance.last_updated)
  return _internal_last_updated();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SegmentPerformance::set_last_updated(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_updated_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.SegmentPerformance.last_updated)
}
inline std::string* SegmentPerformance::mutable_last_updated() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_last_updated();
  // @@protoc_insertion_point(field_mutable:seigr.segment_metadata.SegmentPerformance.last_updated)
  return _s;
}
inline const std::string& SegmentPerformance::_internal_last_updated() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_updated_.Get();
}
inline void SegmentPerformance::_internal_set_last_updated(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_updated_.Set(value, GetArena());
}
inline std::string* SegmentPerformance::_internal_mutable_last_updated() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.last_updated_.Mutable( GetArena());
}
inline std::string* SegmentPerformance::release_last_updated() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.segment_metadata.SegmentPerformance.last_updated)
  return _impl_.last_updated_.Release();
}
inline void SegmentPerformance::set_allocated_last_updated(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_updated_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.last_updated_.IsDefault()) {
    _impl_.last_updated_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.segment_metadata.SegmentPerformance.last_updated)
}

// map<string, string> metadata = 9;
inline int SegmentPerformance::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int SegmentPerformance::metadata_size() const {
  return _internal_metadata_size();
}
inline void SegmentPerformance::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& SegmentPerformance::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& SegmentPerformance::metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.segment_metadata.SegmentPerformance.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* SegmentPerformance::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* SegmentPerformance::mutable_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.segment_metadata.SegmentPerformance.metadata)
  return _internal_mutable_metadata();
}

// -------------------------------------------------------------------

// SegmentStatusRequest

// string segment_hash = 1;
inline void SegmentStatusRequest::clear_segment_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.segment_hash_.ClearToEmpty();
}
inline const std::string& SegmentStatusRequest::segment_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.SegmentStatusRequest.segment_hash)
  return _internal_segment_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SegmentStatusRequest::set_segment_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.segment_hash_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.SegmentStatusRequest.segment_hash)
}
inline std::string* SegmentStatusRequest::mutable_segment_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_segment_hash();
  // @@protoc_insertion_point(field_mutable:seigr.segment_metadata.SegmentStatusRequest.segment_hash)
  return _s;
}
inline const std::string& SegmentStatusRequest::_internal_segment_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.segment_hash_.Get();
}
inline void SegmentStatusRequest::_internal_set_segment_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.segment_hash_.Set(value, GetArena());
}
inline std::string* SegmentStatusRequest::_internal_mutable_segment_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.segment_hash_.Mutable( GetArena());
}
inline std::string* SegmentStatusRequest::release_segment_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.segment_metadata.SegmentStatusRequest.segment_hash)
  return _impl_.segment_hash_.Release();
}
inline void SegmentStatusRequest::set_allocated_segment_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.segment_hash_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.segment_hash_.IsDefault()) {
    _impl_.segment_hash_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.segment_metadata.SegmentStatusRequest.segment_hash)
}

// -------------------------------------------------------------------

// SegmentStatusResponse

// bool success = 1;
inline void SegmentStatusResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool SegmentStatusResponse::success() const {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.SegmentStatusResponse.success)
  return _internal_success();
}
inline void SegmentStatusResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.SegmentStatusResponse.success)
}
inline bool SegmentStatusResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void SegmentStatusResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// .seigr.segment_metadata.SegmentStatus status = 2;
inline bool SegmentStatusResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline void SegmentStatusResponse::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::seigr::segment_metadata::SegmentStatus& SegmentStatusResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seigr::segment_metadata::SegmentStatus* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::seigr::segment_metadata::SegmentStatus&>(::seigr::segment_metadata::_SegmentStatus_default_instance_);
}
inline const ::seigr::segment_metadata::SegmentStatus& SegmentStatusResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.SegmentStatusResponse.status)
  return _internal_status();
}
inline void SegmentStatusResponse::unsafe_arena_set_allocated_status(::seigr::segment_metadata::SegmentStatus* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::seigr::segment_metadata::SegmentStatus*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seigr.segment_metadata.SegmentStatusResponse.status)
}
inline ::seigr::segment_metadata::SegmentStatus* SegmentStatusResponse::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seigr::segment_metadata::SegmentStatus* released = _impl_.status_;
  _impl_.status_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seigr::segment_metadata::SegmentStatus* SegmentStatusResponse::unsafe_arena_release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.segment_metadata.SegmentStatusResponse.status)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seigr::segment_metadata::SegmentStatus* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::seigr::segment_metadata::SegmentStatus* SegmentStatusResponse::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seigr::segment_metadata::SegmentStatus>(GetArena());
    _impl_.status_ = reinterpret_cast<::seigr::segment_metadata::SegmentStatus*>(p);
  }
  return _impl_.status_;
}
inline ::seigr::segment_metadata::SegmentStatus* SegmentStatusResponse::mutable_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::seigr::segment_metadata::SegmentStatus* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:seigr.segment_metadata.SegmentStatusResponse.status)
  return _msg;
}
inline void SegmentStatusResponse::set_allocated_status(::seigr::segment_metadata::SegmentStatus* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.status_ = reinterpret_cast<::seigr::segment_metadata::SegmentStatus*>(value);
  // @@protoc_insertion_point(field_set_allocated:seigr.segment_metadata.SegmentStatusResponse.status)
}

// string message = 3;
inline void SegmentStatusResponse::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& SegmentStatusResponse::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.SegmentStatusResponse.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SegmentStatusResponse::set_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.SegmentStatusResponse.message)
}
inline std::string* SegmentStatusResponse::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:seigr.segment_metadata.SegmentStatusResponse.message)
  return _s;
}
inline const std::string& SegmentStatusResponse::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void SegmentStatusResponse::_internal_set_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(value, GetArena());
}
inline std::string* SegmentStatusResponse::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* SegmentStatusResponse::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.segment_metadata.SegmentStatusResponse.message)
  return _impl_.message_.Release();
}
inline void SegmentStatusResponse::set_allocated_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.segment_metadata.SegmentStatusResponse.message)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// UpdateSegmentMetadataRequest

// string segment_hash = 1;
inline void UpdateSegmentMetadataRequest::clear_segment_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.segment_hash_.ClearToEmpty();
}
inline const std::string& UpdateSegmentMetadataRequest::segment_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.UpdateSegmentMetadataRequest.segment_hash)
  return _internal_segment_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpdateSegmentMetadataRequest::set_segment_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.segment_hash_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.UpdateSegmentMetadataRequest.segment_hash)
}
inline std::string* UpdateSegmentMetadataRequest::mutable_segment_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_segment_hash();
  // @@protoc_insertion_point(field_mutable:seigr.segment_metadata.UpdateSegmentMetadataRequest.segment_hash)
  return _s;
}
inline const std::string& UpdateSegmentMetadataRequest::_internal_segment_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.segment_hash_.Get();
}
inline void UpdateSegmentMetadataRequest::_internal_set_segment_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.segment_hash_.Set(value, GetArena());
}
inline std::string* UpdateSegmentMetadataRequest::_internal_mutable_segment_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.segment_hash_.Mutable( GetArena());
}
inline std::string* UpdateSegmentMetadataRequest::release_segment_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.segment_metadata.UpdateSegmentMetadataRequest.segment_hash)
  return _impl_.segment_hash_.Release();
}
inline void UpdateSegmentMetadataRequest::set_allocated_segment_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.segment_hash_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.segment_hash_.IsDefault()) {
    _impl_.segment_hash_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.segment_metadata.UpdateSegmentMetadataRequest.segment_hash)
}

// map<string, string> updated_metadata = 2;
inline int UpdateSegmentMetadataRequest::_internal_updated_metadata_size() const {
  return _internal_updated_metadata().size();
}
inline int UpdateSegmentMetadataRequest::updated_metadata_size() const {
  return _internal_updated_metadata_size();
}
inline void UpdateSegmentMetadataRequest::clear_updated_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& UpdateSegmentMetadataRequest::_internal_updated_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updated_metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& UpdateSegmentMetadataRequest::updated_metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.segment_metadata.UpdateSegmentMetadataRequest.updated_metadata)
  return _internal_updated_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* UpdateSegmentMetadataRequest::_internal_mutable_updated_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.updated_metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* UpdateSegmentMetadataRequest::mutable_updated_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.segment_metadata.UpdateSegmentMetadataRequest.updated_metadata)
  return _internal_mutable_updated_metadata();
}

// -------------------------------------------------------------------

// UpdateSegmentMetadataResponse

// bool success = 1;
inline void UpdateSegmentMetadataResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool UpdateSegmentMetadataResponse::success() const {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.UpdateSegmentMetadataResponse.success)
  return _internal_success();
}
inline void UpdateSegmentMetadataResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.UpdateSegmentMetadataResponse.success)
}
inline bool UpdateSegmentMetadataResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void UpdateSegmentMetadataResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// string message = 2;
inline void UpdateSegmentMetadataResponse::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& UpdateSegmentMetadataResponse::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.UpdateSegmentMetadataResponse.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpdateSegmentMetadataResponse::set_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.UpdateSegmentMetadataResponse.message)
}
inline std::string* UpdateSegmentMetadataResponse::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:seigr.segment_metadata.UpdateSegmentMetadataResponse.message)
  return _s;
}
inline const std::string& UpdateSegmentMetadataResponse::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void UpdateSegmentMetadataResponse::_internal_set_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(value, GetArena());
}
inline std::string* UpdateSegmentMetadataResponse::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* UpdateSegmentMetadataResponse::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.segment_metadata.UpdateSegmentMetadataResponse.message)
  return _impl_.message_.Release();
}
inline void UpdateSegmentMetadataResponse::set_allocated_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.segment_metadata.UpdateSegmentMetadataResponse.message)
}

// -------------------------------------------------------------------

// ValidateSegmentRequest

// string segment_hash = 1;
inline void ValidateSegmentRequest::clear_segment_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.segment_hash_.ClearToEmpty();
}
inline const std::string& ValidateSegmentRequest::segment_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.ValidateSegmentRequest.segment_hash)
  return _internal_segment_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ValidateSegmentRequest::set_segment_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.segment_hash_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.ValidateSegmentRequest.segment_hash)
}
inline std::string* ValidateSegmentRequest::mutable_segment_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_segment_hash();
  // @@protoc_insertion_point(field_mutable:seigr.segment_metadata.ValidateSegmentRequest.segment_hash)
  return _s;
}
inline const std::string& ValidateSegmentRequest::_internal_segment_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.segment_hash_.Get();
}
inline void ValidateSegmentRequest::_internal_set_segment_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.segment_hash_.Set(value, GetArena());
}
inline std::string* ValidateSegmentRequest::_internal_mutable_segment_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.segment_hash_.Mutable( GetArena());
}
inline std::string* ValidateSegmentRequest::release_segment_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.segment_metadata.ValidateSegmentRequest.segment_hash)
  return _impl_.segment_hash_.Release();
}
inline void ValidateSegmentRequest::set_allocated_segment_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.segment_hash_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.segment_hash_.IsDefault()) {
    _impl_.segment_hash_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.segment_metadata.ValidateSegmentRequest.segment_hash)
}

// -------------------------------------------------------------------

// ValidateSegmentResponse

// bool success = 1;
inline void ValidateSegmentResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool ValidateSegmentResponse::success() const {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.ValidateSegmentResponse.success)
  return _internal_success();
}
inline void ValidateSegmentResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.ValidateSegmentResponse.success)
}
inline bool ValidateSegmentResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void ValidateSegmentResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// string message = 2;
inline void ValidateSegmentResponse::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& ValidateSegmentResponse::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.ValidateSegmentResponse.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ValidateSegmentResponse::set_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.ValidateSegmentResponse.message)
}
inline std::string* ValidateSegmentResponse::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:seigr.segment_metadata.ValidateSegmentResponse.message)
  return _s;
}
inline const std::string& ValidateSegmentResponse::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void ValidateSegmentResponse::_internal_set_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(value, GetArena());
}
inline std::string* ValidateSegmentResponse::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* ValidateSegmentResponse::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.segment_metadata.ValidateSegmentResponse.message)
  return _impl_.message_.Release();
}
inline void ValidateSegmentResponse::set_allocated_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.segment_metadata.ValidateSegmentResponse.message)
}

// -------------------------------------------------------------------

// SegmentRecoveryRequest

// string segment_hash = 1;
inline void SegmentRecoveryRequest::clear_segment_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.segment_hash_.ClearToEmpty();
}
inline const std::string& SegmentRecoveryRequest::segment_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.SegmentRecoveryRequest.segment_hash)
  return _internal_segment_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SegmentRecoveryRequest::set_segment_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.segment_hash_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.SegmentRecoveryRequest.segment_hash)
}
inline std::string* SegmentRecoveryRequest::mutable_segment_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_segment_hash();
  // @@protoc_insertion_point(field_mutable:seigr.segment_metadata.SegmentRecoveryRequest.segment_hash)
  return _s;
}
inline const std::string& SegmentRecoveryRequest::_internal_segment_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.segment_hash_.Get();
}
inline void SegmentRecoveryRequest::_internal_set_segment_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.segment_hash_.Set(value, GetArena());
}
inline std::string* SegmentRecoveryRequest::_internal_mutable_segment_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.segment_hash_.Mutable( GetArena());
}
inline std::string* SegmentRecoveryRequest::release_segment_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.segment_metadata.SegmentRecoveryRequest.segment_hash)
  return _impl_.segment_hash_.Release();
}
inline void SegmentRecoveryRequest::set_allocated_segment_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.segment_hash_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.segment_hash_.IsDefault()) {
    _impl_.segment_hash_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.segment_metadata.SegmentRecoveryRequest.segment_hash)
}

// -------------------------------------------------------------------

// SegmentRecoveryResponse

// bool success = 1;
inline void SegmentRecoveryResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool SegmentRecoveryResponse::success() const {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.SegmentRecoveryResponse.success)
  return _internal_success();
}
inline void SegmentRecoveryResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.SegmentRecoveryResponse.success)
}
inline bool SegmentRecoveryResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void SegmentRecoveryResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// string message = 2;
inline void SegmentRecoveryResponse::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& SegmentRecoveryResponse::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.segment_metadata.SegmentRecoveryResponse.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SegmentRecoveryResponse::set_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.segment_metadata.SegmentRecoveryResponse.message)
}
inline std::string* SegmentRecoveryResponse::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:seigr.segment_metadata.SegmentRecoveryResponse.message)
  return _s;
}
inline const std::string& SegmentRecoveryResponse::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void SegmentRecoveryResponse::_internal_set_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(value, GetArena());
}
inline std::string* SegmentRecoveryResponse::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* SegmentRecoveryResponse::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.segment_metadata.SegmentRecoveryResponse.message)
  return _impl_.message_.Release();
}
inline void SegmentRecoveryResponse::set_allocated_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.segment_metadata.SegmentRecoveryResponse.message)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace segment_metadata
}  // namespace seigr


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::seigr::segment_metadata::SegmentOperationStatus> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::seigr::segment_metadata::SegmentOperationStatus>() {
  return ::seigr::segment_metadata::SegmentOperationStatus_descriptor();
}
template <>
struct is_proto_enum<::seigr::segment_metadata::ReplicationLevel> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::seigr::segment_metadata::ReplicationLevel>() {
  return ::seigr::segment_metadata::ReplicationLevel_descriptor();
}
template <>
struct is_proto_enum<::seigr::segment_metadata::EncryptionStatus> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::seigr::segment_metadata::EncryptionStatus>() {
  return ::seigr::segment_metadata::EncryptionStatus_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // segment_5fmetadata_2eproto_2epb_2eh
