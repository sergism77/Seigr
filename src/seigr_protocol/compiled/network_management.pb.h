// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: network_management.proto
// Protobuf C++ Version: 5.29.2

#ifndef network_5fmanagement_2eproto_2epb_2eh
#define network_5fmanagement_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "common.pb.h"
#include "network.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_network_5fmanagement_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_network_5fmanagement_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_network_5fmanagement_2eproto;
namespace seigr {
namespace network_management {
class ConnectivityStatus;
struct ConnectivityStatusDefaultTypeInternal;
extern ConnectivityStatusDefaultTypeInternal _ConnectivityStatus_default_instance_;
class ConnectivityStatus_ConnectionMetadataEntry_DoNotUse;
struct ConnectivityStatus_ConnectionMetadataEntry_DoNotUseDefaultTypeInternal;
extern ConnectivityStatus_ConnectionMetadataEntry_DoNotUseDefaultTypeInternal _ConnectivityStatus_ConnectionMetadataEntry_DoNotUse_default_instance_;
class DataSyncEvent;
struct DataSyncEventDefaultTypeInternal;
extern DataSyncEventDefaultTypeInternal _DataSyncEvent_default_instance_;
class DataSyncEvent_MetadataEntry_DoNotUse;
struct DataSyncEvent_MetadataEntry_DoNotUseDefaultTypeInternal;
extern DataSyncEvent_MetadataEntry_DoNotUseDefaultTypeInternal _DataSyncEvent_MetadataEntry_DoNotUse_default_instance_;
class HyphenInfo;
struct HyphenInfoDefaultTypeInternal;
extern HyphenInfoDefaultTypeInternal _HyphenInfo_default_instance_;
class HyphenInfo_MetadataEntry_DoNotUse;
struct HyphenInfo_MetadataEntry_DoNotUseDefaultTypeInternal;
extern HyphenInfo_MetadataEntry_DoNotUseDefaultTypeInternal _HyphenInfo_MetadataEntry_DoNotUse_default_instance_;
class NetworkAnomalyAlert;
struct NetworkAnomalyAlertDefaultTypeInternal;
extern NetworkAnomalyAlertDefaultTypeInternal _NetworkAnomalyAlert_default_instance_;
class NetworkAnomalyAlert_MetadataEntry_DoNotUse;
struct NetworkAnomalyAlert_MetadataEntry_DoNotUseDefaultTypeInternal;
extern NetworkAnomalyAlert_MetadataEntry_DoNotUseDefaultTypeInternal _NetworkAnomalyAlert_MetadataEntry_DoNotUse_default_instance_;
}  // namespace network_management
}  // namespace seigr
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace seigr {
namespace network_management {
enum HyphenRole : int {
  ROLE_UNDEFINED = 0,
  ROLE_USER_HYPHEN = 1,
  ROLE_NON_USER_HYPHEN = 2,
  ROLE_MASTER = 3,
  ROLE_WORKER = 4,
  ROLE_GATEWAY = 5,
  ROLE_ADAPTIVE = 6,
  HyphenRole_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  HyphenRole_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool HyphenRole_IsValid(int value);
extern const uint32_t HyphenRole_internal_data_[];
constexpr HyphenRole HyphenRole_MIN = static_cast<HyphenRole>(0);
constexpr HyphenRole HyphenRole_MAX = static_cast<HyphenRole>(6);
constexpr int HyphenRole_ARRAYSIZE = 6 + 1;
const ::google::protobuf::EnumDescriptor*
HyphenRole_descriptor();
template <typename T>
const std::string& HyphenRole_Name(T value) {
  static_assert(std::is_same<T, HyphenRole>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to HyphenRole_Name().");
  return HyphenRole_Name(static_cast<HyphenRole>(value));
}
template <>
inline const std::string& HyphenRole_Name(HyphenRole value) {
  return ::google::protobuf::internal::NameOfDenseEnum<HyphenRole_descriptor,
                                                 0, 6>(
      static_cast<int>(value));
}
inline bool HyphenRole_Parse(absl::string_view name, HyphenRole* value) {
  return ::google::protobuf::internal::ParseNamedEnum<HyphenRole>(
      HyphenRole_descriptor(), name, value);
}
enum SyncType : int {
  SYNC_TYPE_UNDEFINED = 0,
  SYNC_TYPE_FULL = 1,
  SYNC_TYPE_INCREMENTAL = 2,
  SYNC_TYPE_REAL_TIME = 3,
  SyncType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  SyncType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool SyncType_IsValid(int value);
extern const uint32_t SyncType_internal_data_[];
constexpr SyncType SyncType_MIN = static_cast<SyncType>(0);
constexpr SyncType SyncType_MAX = static_cast<SyncType>(3);
constexpr int SyncType_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
SyncType_descriptor();
template <typename T>
const std::string& SyncType_Name(T value) {
  static_assert(std::is_same<T, SyncType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to SyncType_Name().");
  return SyncType_Name(static_cast<SyncType>(value));
}
template <>
inline const std::string& SyncType_Name(SyncType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<SyncType_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool SyncType_Parse(absl::string_view name, SyncType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SyncType>(
      SyncType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class NetworkAnomalyAlert_MetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  NetworkAnomalyAlert_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NetworkAnomalyAlert_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit NetworkAnomalyAlert_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const NetworkAnomalyAlert_MetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const NetworkAnomalyAlert_MetadataEntry_DoNotUse*>(
        &_NetworkAnomalyAlert_MetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_network_5fmanagement_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      75, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class HyphenInfo_MetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  HyphenInfo_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR HyphenInfo_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit HyphenInfo_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const HyphenInfo_MetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const HyphenInfo_MetadataEntry_DoNotUse*>(
        &_HyphenInfo_MetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_network_5fmanagement_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      66, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class DataSyncEvent_MetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  DataSyncEvent_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DataSyncEvent_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit DataSyncEvent_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const DataSyncEvent_MetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const DataSyncEvent_MetadataEntry_DoNotUse*>(
        &_DataSyncEvent_MetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_network_5fmanagement_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      69, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class ConnectivityStatus_ConnectionMetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  ConnectivityStatus_ConnectionMetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ConnectivityStatus_ConnectionMetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit ConnectivityStatus_ConnectionMetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const ConnectivityStatus_ConnectionMetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const ConnectivityStatus_ConnectionMetadataEntry_DoNotUse*>(
        &_ConnectivityStatus_ConnectionMetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_network_5fmanagement_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      84, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class NetworkAnomalyAlert final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.network_management.NetworkAnomalyAlert) */ {
 public:
  inline NetworkAnomalyAlert() : NetworkAnomalyAlert(nullptr) {}
  ~NetworkAnomalyAlert() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(NetworkAnomalyAlert* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(NetworkAnomalyAlert));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NetworkAnomalyAlert(
      ::google::protobuf::internal::ConstantInitialized);

  inline NetworkAnomalyAlert(const NetworkAnomalyAlert& from) : NetworkAnomalyAlert(nullptr, from) {}
  inline NetworkAnomalyAlert(NetworkAnomalyAlert&& from) noexcept
      : NetworkAnomalyAlert(nullptr, std::move(from)) {}
  inline NetworkAnomalyAlert& operator=(const NetworkAnomalyAlert& from) {
    CopyFrom(from);
    return *this;
  }
  inline NetworkAnomalyAlert& operator=(NetworkAnomalyAlert&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NetworkAnomalyAlert& default_instance() {
    return *internal_default_instance();
  }
  static inline const NetworkAnomalyAlert* internal_default_instance() {
    return reinterpret_cast<const NetworkAnomalyAlert*>(
        &_NetworkAnomalyAlert_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(NetworkAnomalyAlert& a, NetworkAnomalyAlert& b) { a.Swap(&b); }
  inline void Swap(NetworkAnomalyAlert* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NetworkAnomalyAlert* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NetworkAnomalyAlert* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<NetworkAnomalyAlert>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NetworkAnomalyAlert& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NetworkAnomalyAlert& from) { NetworkAnomalyAlert::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(NetworkAnomalyAlert* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.network_management.NetworkAnomalyAlert"; }

 protected:
  explicit NetworkAnomalyAlert(::google::protobuf::Arena* arena);
  NetworkAnomalyAlert(::google::protobuf::Arena* arena, const NetworkAnomalyAlert& from);
  NetworkAnomalyAlert(::google::protobuf::Arena* arena, NetworkAnomalyAlert&& from) noexcept
      : NetworkAnomalyAlert(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMetadataFieldNumber = 6,
    kAlertIdFieldNumber = 1,
    kDetectedByFieldNumber = 2,
    kDescriptionFieldNumber = 4,
    kTimestampFieldNumber = 5,
    kThreatLevelFieldNumber = 3,
  };
  // map<string, string> metadata = 6;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // string alert_id = 1;
  void clear_alert_id() ;
  const std::string& alert_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_alert_id(Arg_&& arg, Args_... args);
  std::string* mutable_alert_id();
  PROTOBUF_NODISCARD std::string* release_alert_id();
  void set_allocated_alert_id(std::string* value);

  private:
  const std::string& _internal_alert_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_alert_id(
      const std::string& value);
  std::string* _internal_mutable_alert_id();

  public:
  // string detected_by = 2;
  void clear_detected_by() ;
  const std::string& detected_by() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_detected_by(Arg_&& arg, Args_... args);
  std::string* mutable_detected_by();
  PROTOBUF_NODISCARD std::string* release_detected_by();
  void set_allocated_detected_by(std::string* value);

  private:
  const std::string& _internal_detected_by() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_detected_by(
      const std::string& value);
  std::string* _internal_mutable_detected_by();

  public:
  // string description = 4;
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // string timestamp = 5;
  void clear_timestamp() ;
  const std::string& timestamp() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_timestamp(Arg_&& arg, Args_... args);
  std::string* mutable_timestamp();
  PROTOBUF_NODISCARD std::string* release_timestamp();
  void set_allocated_timestamp(std::string* value);

  private:
  const std::string& _internal_timestamp() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_timestamp(
      const std::string& value);
  std::string* _internal_mutable_timestamp();

  public:
  // .seigr.common.ThreatLevel threat_level = 3;
  void clear_threat_level() ;
  ::seigr::common::ThreatLevel threat_level() const;
  void set_threat_level(::seigr::common::ThreatLevel value);

  private:
  ::seigr::common::ThreatLevel _internal_threat_level() const;
  void _internal_set_threat_level(::seigr::common::ThreatLevel value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.network_management.NetworkAnomalyAlert)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 1,
      100, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NetworkAnomalyAlert& from_msg);
    ::google::protobuf::internal::MapField<NetworkAnomalyAlert_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::internal::ArenaStringPtr alert_id_;
    ::google::protobuf::internal::ArenaStringPtr detected_by_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::internal::ArenaStringPtr timestamp_;
    int threat_level_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_network_5fmanagement_2eproto;
};
// -------------------------------------------------------------------

class HyphenInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.network_management.HyphenInfo) */ {
 public:
  inline HyphenInfo() : HyphenInfo(nullptr) {}
  ~HyphenInfo() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(HyphenInfo* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(HyphenInfo));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR HyphenInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline HyphenInfo(const HyphenInfo& from) : HyphenInfo(nullptr, from) {}
  inline HyphenInfo(HyphenInfo&& from) noexcept
      : HyphenInfo(nullptr, std::move(from)) {}
  inline HyphenInfo& operator=(const HyphenInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline HyphenInfo& operator=(HyphenInfo&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HyphenInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const HyphenInfo* internal_default_instance() {
    return reinterpret_cast<const HyphenInfo*>(
        &_HyphenInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(HyphenInfo& a, HyphenInfo& b) { a.Swap(&b); }
  inline void Swap(HyphenInfo* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HyphenInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HyphenInfo* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<HyphenInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const HyphenInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const HyphenInfo& from) { HyphenInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(HyphenInfo* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.network_management.HyphenInfo"; }

 protected:
  explicit HyphenInfo(::google::protobuf::Arena* arena);
  HyphenInfo(::google::protobuf::Arena* arena, const HyphenInfo& from);
  HyphenInfo(::google::protobuf::Arena* arena, HyphenInfo&& from) noexcept
      : HyphenInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMetadataFieldNumber = 6,
    kSupportedProtocolsFieldNumber = 7,
    kHyphenIdFieldNumber = 1,
    kLastSeenFieldNumber = 5,
    kLastUpdatedFieldNumber = 9,
    kSelfHealingStatusFieldNumber = 14,
    kRoleFieldNumber = 2,
    kPrimaryProtocolFieldNumber = 3,
    kStatusFieldNumber = 4,
    kAvailableCpuPercentFieldNumber = 10,
    kCurrentLoadFieldNumber = 8,
    kAvailableMemoryMbFieldNumber = 11,
    kAvailableBandwidthMbpsFieldNumber = 12,
    kSupportsSelfHealingFieldNumber = 13,
  };
  // map<string, string> metadata = 6;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // repeated .seigr.network.NetworkProtocol supported_protocols = 7;
  int supported_protocols_size() const;
  private:
  int _internal_supported_protocols_size() const;

  public:
  void clear_supported_protocols() ;
  public:
  ::seigr::network::NetworkProtocol supported_protocols(int index) const;
  void set_supported_protocols(int index, ::seigr::network::NetworkProtocol value);
  void add_supported_protocols(::seigr::network::NetworkProtocol value);
  const ::google::protobuf::RepeatedField<int>& supported_protocols() const;
  ::google::protobuf::RepeatedField<int>* mutable_supported_protocols();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_supported_protocols() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_supported_protocols();

  public:
  // string hyphen_id = 1;
  void clear_hyphen_id() ;
  const std::string& hyphen_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_hyphen_id(Arg_&& arg, Args_... args);
  std::string* mutable_hyphen_id();
  PROTOBUF_NODISCARD std::string* release_hyphen_id();
  void set_allocated_hyphen_id(std::string* value);

  private:
  const std::string& _internal_hyphen_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_hyphen_id(
      const std::string& value);
  std::string* _internal_mutable_hyphen_id();

  public:
  // string last_seen = 5;
  void clear_last_seen() ;
  const std::string& last_seen() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_last_seen(Arg_&& arg, Args_... args);
  std::string* mutable_last_seen();
  PROTOBUF_NODISCARD std::string* release_last_seen();
  void set_allocated_last_seen(std::string* value);

  private:
  const std::string& _internal_last_seen() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_last_seen(
      const std::string& value);
  std::string* _internal_mutable_last_seen();

  public:
  // string last_updated = 9;
  void clear_last_updated() ;
  const std::string& last_updated() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_last_updated(Arg_&& arg, Args_... args);
  std::string* mutable_last_updated();
  PROTOBUF_NODISCARD std::string* release_last_updated();
  void set_allocated_last_updated(std::string* value);

  private:
  const std::string& _internal_last_updated() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_last_updated(
      const std::string& value);
  std::string* _internal_mutable_last_updated();

  public:
  // string self_healing_status = 14;
  void clear_self_healing_status() ;
  const std::string& self_healing_status() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_self_healing_status(Arg_&& arg, Args_... args);
  std::string* mutable_self_healing_status();
  PROTOBUF_NODISCARD std::string* release_self_healing_status();
  void set_allocated_self_healing_status(std::string* value);

  private:
  const std::string& _internal_self_healing_status() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_self_healing_status(
      const std::string& value);
  std::string* _internal_mutable_self_healing_status();

  public:
  // .seigr.network_management.HyphenRole role = 2;
  void clear_role() ;
  ::seigr::network_management::HyphenRole role() const;
  void set_role(::seigr::network_management::HyphenRole value);

  private:
  ::seigr::network_management::HyphenRole _internal_role() const;
  void _internal_set_role(::seigr::network_management::HyphenRole value);

  public:
  // .seigr.network.NetworkProtocol primary_protocol = 3;
  void clear_primary_protocol() ;
  ::seigr::network::NetworkProtocol primary_protocol() const;
  void set_primary_protocol(::seigr::network::NetworkProtocol value);

  private:
  ::seigr::network::NetworkProtocol _internal_primary_protocol() const;
  void _internal_set_primary_protocol(::seigr::network::NetworkProtocol value);

  public:
  // .seigr.network.HyphenStatus status = 4;
  void clear_status() ;
  ::seigr::network::HyphenStatus status() const;
  void set_status(::seigr::network::HyphenStatus value);

  private:
  ::seigr::network::HyphenStatus _internal_status() const;
  void _internal_set_status(::seigr::network::HyphenStatus value);

  public:
  // int32 available_cpu_percent = 10;
  void clear_available_cpu_percent() ;
  ::int32_t available_cpu_percent() const;
  void set_available_cpu_percent(::int32_t value);

  private:
  ::int32_t _internal_available_cpu_percent() const;
  void _internal_set_available_cpu_percent(::int32_t value);

  public:
  // int64 current_load = 8;
  void clear_current_load() ;
  ::int64_t current_load() const;
  void set_current_load(::int64_t value);

  private:
  ::int64_t _internal_current_load() const;
  void _internal_set_current_load(::int64_t value);

  public:
  // int32 available_memory_mb = 11;
  void clear_available_memory_mb() ;
  ::int32_t available_memory_mb() const;
  void set_available_memory_mb(::int32_t value);

  private:
  ::int32_t _internal_available_memory_mb() const;
  void _internal_set_available_memory_mb(::int32_t value);

  public:
  // int32 available_bandwidth_mbps = 12;
  void clear_available_bandwidth_mbps() ;
  ::int32_t available_bandwidth_mbps() const;
  void set_available_bandwidth_mbps(::int32_t value);

  private:
  ::int32_t _internal_available_bandwidth_mbps() const;
  void _internal_set_available_bandwidth_mbps(::int32_t value);

  public:
  // bool supports_self_healing = 13;
  void clear_supports_self_healing() ;
  bool supports_self_healing() const;
  void set_supports_self_healing(bool value);

  private:
  bool _internal_supports_self_healing() const;
  void _internal_set_supports_self_healing(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.network_management.HyphenInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 14, 1,
      109, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const HyphenInfo& from_msg);
    ::google::protobuf::internal::MapField<HyphenInfo_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::RepeatedField<int> supported_protocols_;
    ::google::protobuf::internal::CachedSize _supported_protocols_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr hyphen_id_;
    ::google::protobuf::internal::ArenaStringPtr last_seen_;
    ::google::protobuf::internal::ArenaStringPtr last_updated_;
    ::google::protobuf::internal::ArenaStringPtr self_healing_status_;
    int role_;
    int primary_protocol_;
    int status_;
    ::int32_t available_cpu_percent_;
    ::int64_t current_load_;
    ::int32_t available_memory_mb_;
    ::int32_t available_bandwidth_mbps_;
    bool supports_self_healing_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_network_5fmanagement_2eproto;
};
// -------------------------------------------------------------------

class DataSyncEvent final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.network_management.DataSyncEvent) */ {
 public:
  inline DataSyncEvent() : DataSyncEvent(nullptr) {}
  ~DataSyncEvent() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DataSyncEvent* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DataSyncEvent));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DataSyncEvent(
      ::google::protobuf::internal::ConstantInitialized);

  inline DataSyncEvent(const DataSyncEvent& from) : DataSyncEvent(nullptr, from) {}
  inline DataSyncEvent(DataSyncEvent&& from) noexcept
      : DataSyncEvent(nullptr, std::move(from)) {}
  inline DataSyncEvent& operator=(const DataSyncEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline DataSyncEvent& operator=(DataSyncEvent&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DataSyncEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const DataSyncEvent* internal_default_instance() {
    return reinterpret_cast<const DataSyncEvent*>(
        &_DataSyncEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(DataSyncEvent& a, DataSyncEvent& b) { a.Swap(&b); }
  inline void Swap(DataSyncEvent* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DataSyncEvent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DataSyncEvent* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DataSyncEvent>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DataSyncEvent& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DataSyncEvent& from) { DataSyncEvent::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DataSyncEvent* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.network_management.DataSyncEvent"; }

 protected:
  explicit DataSyncEvent(::google::protobuf::Arena* arena);
  DataSyncEvent(::google::protobuf::Arena* arena, const DataSyncEvent& from);
  DataSyncEvent(::google::protobuf::Arena* arena, DataSyncEvent&& from) noexcept
      : DataSyncEvent(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMetadataFieldNumber = 9,
    kSyncIdFieldNumber = 1,
    kSourceHyphenIdFieldNumber = 2,
    kTargetHyphenIdFieldNumber = 3,
    kDataHashFieldNumber = 5,
    kTimestampFieldNumber = 8,
    kAdaptiveBandwidthUsedFieldNumber = 12,
    kRedundancyAppliedFieldNumber = 13,
    kProtocolFieldNumber = 4,
    kSyncTypeFieldNumber = 6,
    kSuccessFieldNumber = 7,
    kRetriesFieldNumber = 11,
    kDataSizeBytesFieldNumber = 10,
    kNetworkLoadFactorFieldNumber = 14,
  };
  // map<string, string> metadata = 9;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // string sync_id = 1;
  void clear_sync_id() ;
  const std::string& sync_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sync_id(Arg_&& arg, Args_... args);
  std::string* mutable_sync_id();
  PROTOBUF_NODISCARD std::string* release_sync_id();
  void set_allocated_sync_id(std::string* value);

  private:
  const std::string& _internal_sync_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sync_id(
      const std::string& value);
  std::string* _internal_mutable_sync_id();

  public:
  // string source_hyphen_id = 2;
  void clear_source_hyphen_id() ;
  const std::string& source_hyphen_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_source_hyphen_id(Arg_&& arg, Args_... args);
  std::string* mutable_source_hyphen_id();
  PROTOBUF_NODISCARD std::string* release_source_hyphen_id();
  void set_allocated_source_hyphen_id(std::string* value);

  private:
  const std::string& _internal_source_hyphen_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_source_hyphen_id(
      const std::string& value);
  std::string* _internal_mutable_source_hyphen_id();

  public:
  // string target_hyphen_id = 3;
  void clear_target_hyphen_id() ;
  const std::string& target_hyphen_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_target_hyphen_id(Arg_&& arg, Args_... args);
  std::string* mutable_target_hyphen_id();
  PROTOBUF_NODISCARD std::string* release_target_hyphen_id();
  void set_allocated_target_hyphen_id(std::string* value);

  private:
  const std::string& _internal_target_hyphen_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_target_hyphen_id(
      const std::string& value);
  std::string* _internal_mutable_target_hyphen_id();

  public:
  // string data_hash = 5;
  void clear_data_hash() ;
  const std::string& data_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data_hash(Arg_&& arg, Args_... args);
  std::string* mutable_data_hash();
  PROTOBUF_NODISCARD std::string* release_data_hash();
  void set_allocated_data_hash(std::string* value);

  private:
  const std::string& _internal_data_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data_hash(
      const std::string& value);
  std::string* _internal_mutable_data_hash();

  public:
  // string timestamp = 8;
  void clear_timestamp() ;
  const std::string& timestamp() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_timestamp(Arg_&& arg, Args_... args);
  std::string* mutable_timestamp();
  PROTOBUF_NODISCARD std::string* release_timestamp();
  void set_allocated_timestamp(std::string* value);

  private:
  const std::string& _internal_timestamp() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_timestamp(
      const std::string& value);
  std::string* _internal_mutable_timestamp();

  public:
  // string adaptive_bandwidth_used = 12;
  void clear_adaptive_bandwidth_used() ;
  const std::string& adaptive_bandwidth_used() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_adaptive_bandwidth_used(Arg_&& arg, Args_... args);
  std::string* mutable_adaptive_bandwidth_used();
  PROTOBUF_NODISCARD std::string* release_adaptive_bandwidth_used();
  void set_allocated_adaptive_bandwidth_used(std::string* value);

  private:
  const std::string& _internal_adaptive_bandwidth_used() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_adaptive_bandwidth_used(
      const std::string& value);
  std::string* _internal_mutable_adaptive_bandwidth_used();

  public:
  // string redundancy_applied = 13;
  void clear_redundancy_applied() ;
  const std::string& redundancy_applied() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_redundancy_applied(Arg_&& arg, Args_... args);
  std::string* mutable_redundancy_applied();
  PROTOBUF_NODISCARD std::string* release_redundancy_applied();
  void set_allocated_redundancy_applied(std::string* value);

  private:
  const std::string& _internal_redundancy_applied() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_redundancy_applied(
      const std::string& value);
  std::string* _internal_mutable_redundancy_applied();

  public:
  // .seigr.network.NetworkProtocol protocol = 4;
  void clear_protocol() ;
  ::seigr::network::NetworkProtocol protocol() const;
  void set_protocol(::seigr::network::NetworkProtocol value);

  private:
  ::seigr::network::NetworkProtocol _internal_protocol() const;
  void _internal_set_protocol(::seigr::network::NetworkProtocol value);

  public:
  // .seigr.network_management.SyncType sync_type = 6;
  void clear_sync_type() ;
  ::seigr::network_management::SyncType sync_type() const;
  void set_sync_type(::seigr::network_management::SyncType value);

  private:
  ::seigr::network_management::SyncType _internal_sync_type() const;
  void _internal_set_sync_type(::seigr::network_management::SyncType value);

  public:
  // bool success = 7;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // int32 retries = 11;
  void clear_retries() ;
  ::int32_t retries() const;
  void set_retries(::int32_t value);

  private:
  ::int32_t _internal_retries() const;
  void _internal_set_retries(::int32_t value);

  public:
  // int64 data_size_bytes = 10;
  void clear_data_size_bytes() ;
  ::int64_t data_size_bytes() const;
  void set_data_size_bytes(::int64_t value);

  private:
  ::int64_t _internal_data_size_bytes() const;
  void _internal_set_data_size_bytes(::int64_t value);

  public:
  // float network_load_factor = 14;
  void clear_network_load_factor() ;
  float network_load_factor() const;
  void set_network_load_factor(float value);

  private:
  float _internal_network_load_factor() const;
  void _internal_set_network_load_factor(float value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.network_management.DataSyncEvent)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 14, 1,
      161, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DataSyncEvent& from_msg);
    ::google::protobuf::internal::MapField<DataSyncEvent_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::internal::ArenaStringPtr sync_id_;
    ::google::protobuf::internal::ArenaStringPtr source_hyphen_id_;
    ::google::protobuf::internal::ArenaStringPtr target_hyphen_id_;
    ::google::protobuf::internal::ArenaStringPtr data_hash_;
    ::google::protobuf::internal::ArenaStringPtr timestamp_;
    ::google::protobuf::internal::ArenaStringPtr adaptive_bandwidth_used_;
    ::google::protobuf::internal::ArenaStringPtr redundancy_applied_;
    int protocol_;
    int sync_type_;
    bool success_;
    ::int32_t retries_;
    ::int64_t data_size_bytes_;
    float network_load_factor_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_network_5fmanagement_2eproto;
};
// -------------------------------------------------------------------

class ConnectivityStatus final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.network_management.ConnectivityStatus) */ {
 public:
  inline ConnectivityStatus() : ConnectivityStatus(nullptr) {}
  ~ConnectivityStatus() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ConnectivityStatus* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ConnectivityStatus));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ConnectivityStatus(
      ::google::protobuf::internal::ConstantInitialized);

  inline ConnectivityStatus(const ConnectivityStatus& from) : ConnectivityStatus(nullptr, from) {}
  inline ConnectivityStatus(ConnectivityStatus&& from) noexcept
      : ConnectivityStatus(nullptr, std::move(from)) {}
  inline ConnectivityStatus& operator=(const ConnectivityStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConnectivityStatus& operator=(ConnectivityStatus&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ConnectivityStatus& default_instance() {
    return *internal_default_instance();
  }
  static inline const ConnectivityStatus* internal_default_instance() {
    return reinterpret_cast<const ConnectivityStatus*>(
        &_ConnectivityStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(ConnectivityStatus& a, ConnectivityStatus& b) { a.Swap(&b); }
  inline void Swap(ConnectivityStatus* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ConnectivityStatus* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ConnectivityStatus* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ConnectivityStatus>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ConnectivityStatus& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ConnectivityStatus& from) { ConnectivityStatus::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ConnectivityStatus* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.network_management.ConnectivityStatus"; }

 protected:
  explicit ConnectivityStatus(::google::protobuf::Arena* arena);
  ConnectivityStatus(::google::protobuf::Arena* arena, const ConnectivityStatus& from);
  ConnectivityStatus(::google::protobuf::Arena* arena, ConnectivityStatus&& from) noexcept
      : ConnectivityStatus(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConnectionMetadataFieldNumber = 9,
    kSourceHyphenIdFieldNumber = 1,
    kTargetHyphenIdFieldNumber = 2,
    kProtocolSpecificIdFieldNumber = 5,
    kTimestampFieldNumber = 7,
    kErrorMessageFieldNumber = 8,
    kReRoutePathFieldNumber = 12,
    kAlternativeProtocolFieldNumber = 13,
    kProtocolFieldNumber = 3,
    kConnectionStatusFieldNumber = 4,
    kLatencyMsFieldNumber = 6,
    kPacketLossRateFieldNumber = 10,
    kAutoReRoutedFieldNumber = 11,
  };
  // map<string, string> connection_metadata = 9;
  int connection_metadata_size() const;
  private:
  int _internal_connection_metadata_size() const;

  public:
  void clear_connection_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& connection_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_connection_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_connection_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_connection_metadata();

  public:
  // string source_hyphen_id = 1;
  void clear_source_hyphen_id() ;
  const std::string& source_hyphen_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_source_hyphen_id(Arg_&& arg, Args_... args);
  std::string* mutable_source_hyphen_id();
  PROTOBUF_NODISCARD std::string* release_source_hyphen_id();
  void set_allocated_source_hyphen_id(std::string* value);

  private:
  const std::string& _internal_source_hyphen_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_source_hyphen_id(
      const std::string& value);
  std::string* _internal_mutable_source_hyphen_id();

  public:
  // string target_hyphen_id = 2;
  void clear_target_hyphen_id() ;
  const std::string& target_hyphen_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_target_hyphen_id(Arg_&& arg, Args_... args);
  std::string* mutable_target_hyphen_id();
  PROTOBUF_NODISCARD std::string* release_target_hyphen_id();
  void set_allocated_target_hyphen_id(std::string* value);

  private:
  const std::string& _internal_target_hyphen_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_target_hyphen_id(
      const std::string& value);
  std::string* _internal_mutable_target_hyphen_id();

  public:
  // string protocol_specific_id = 5;
  void clear_protocol_specific_id() ;
  const std::string& protocol_specific_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_protocol_specific_id(Arg_&& arg, Args_... args);
  std::string* mutable_protocol_specific_id();
  PROTOBUF_NODISCARD std::string* release_protocol_specific_id();
  void set_allocated_protocol_specific_id(std::string* value);

  private:
  const std::string& _internal_protocol_specific_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_protocol_specific_id(
      const std::string& value);
  std::string* _internal_mutable_protocol_specific_id();

  public:
  // string timestamp = 7;
  void clear_timestamp() ;
  const std::string& timestamp() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_timestamp(Arg_&& arg, Args_... args);
  std::string* mutable_timestamp();
  PROTOBUF_NODISCARD std::string* release_timestamp();
  void set_allocated_timestamp(std::string* value);

  private:
  const std::string& _internal_timestamp() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_timestamp(
      const std::string& value);
  std::string* _internal_mutable_timestamp();

  public:
  // string error_message = 8;
  void clear_error_message() ;
  const std::string& error_message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_error_message(Arg_&& arg, Args_... args);
  std::string* mutable_error_message();
  PROTOBUF_NODISCARD std::string* release_error_message();
  void set_allocated_error_message(std::string* value);

  private:
  const std::string& _internal_error_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_error_message(
      const std::string& value);
  std::string* _internal_mutable_error_message();

  public:
  // string re_route_path = 12;
  void clear_re_route_path() ;
  const std::string& re_route_path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_re_route_path(Arg_&& arg, Args_... args);
  std::string* mutable_re_route_path();
  PROTOBUF_NODISCARD std::string* release_re_route_path();
  void set_allocated_re_route_path(std::string* value);

  private:
  const std::string& _internal_re_route_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_re_route_path(
      const std::string& value);
  std::string* _internal_mutable_re_route_path();

  public:
  // string alternative_protocol = 13;
  void clear_alternative_protocol() ;
  const std::string& alternative_protocol() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_alternative_protocol(Arg_&& arg, Args_... args);
  std::string* mutable_alternative_protocol();
  PROTOBUF_NODISCARD std::string* release_alternative_protocol();
  void set_allocated_alternative_protocol(std::string* value);

  private:
  const std::string& _internal_alternative_protocol() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_alternative_protocol(
      const std::string& value);
  std::string* _internal_mutable_alternative_protocol();

  public:
  // .seigr.network.NetworkProtocol protocol = 3;
  void clear_protocol() ;
  ::seigr::network::NetworkProtocol protocol() const;
  void set_protocol(::seigr::network::NetworkProtocol value);

  private:
  ::seigr::network::NetworkProtocol _internal_protocol() const;
  void _internal_set_protocol(::seigr::network::NetworkProtocol value);

  public:
  // .seigr.network.HyphenStatus connection_status = 4;
  void clear_connection_status() ;
  ::seigr::network::HyphenStatus connection_status() const;
  void set_connection_status(::seigr::network::HyphenStatus value);

  private:
  ::seigr::network::HyphenStatus _internal_connection_status() const;
  void _internal_set_connection_status(::seigr::network::HyphenStatus value);

  public:
  // int32 latency_ms = 6;
  void clear_latency_ms() ;
  ::int32_t latency_ms() const;
  void set_latency_ms(::int32_t value);

  private:
  ::int32_t _internal_latency_ms() const;
  void _internal_set_latency_ms(::int32_t value);

  public:
  // float packet_loss_rate = 10;
  void clear_packet_loss_rate() ;
  float packet_loss_rate() const;
  void set_packet_loss_rate(float value);

  private:
  float _internal_packet_loss_rate() const;
  void _internal_set_packet_loss_rate(float value);

  public:
  // bool auto_re_routed = 11;
  void clear_auto_re_routed() ;
  bool auto_re_routed() const;
  void set_auto_re_routed(bool value);

  private:
  bool _internal_auto_re_routed() const;
  void _internal_set_auto_re_routed(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.network_management.ConnectivityStatus)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 13, 1,
      186, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ConnectivityStatus& from_msg);
    ::google::protobuf::internal::MapField<ConnectivityStatus_ConnectionMetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        connection_metadata_;
    ::google::protobuf::internal::ArenaStringPtr source_hyphen_id_;
    ::google::protobuf::internal::ArenaStringPtr target_hyphen_id_;
    ::google::protobuf::internal::ArenaStringPtr protocol_specific_id_;
    ::google::protobuf::internal::ArenaStringPtr timestamp_;
    ::google::protobuf::internal::ArenaStringPtr error_message_;
    ::google::protobuf::internal::ArenaStringPtr re_route_path_;
    ::google::protobuf::internal::ArenaStringPtr alternative_protocol_;
    int protocol_;
    int connection_status_;
    ::int32_t latency_ms_;
    float packet_loss_rate_;
    bool auto_re_routed_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_network_5fmanagement_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// HyphenInfo

// string hyphen_id = 1;
inline void HyphenInfo::clear_hyphen_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hyphen_id_.ClearToEmpty();
}
inline const std::string& HyphenInfo::hyphen_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.network_management.HyphenInfo.hyphen_id)
  return _internal_hyphen_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void HyphenInfo::set_hyphen_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hyphen_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.network_management.HyphenInfo.hyphen_id)
}
inline std::string* HyphenInfo::mutable_hyphen_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_hyphen_id();
  // @@protoc_insertion_point(field_mutable:seigr.network_management.HyphenInfo.hyphen_id)
  return _s;
}
inline const std::string& HyphenInfo::_internal_hyphen_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.hyphen_id_.Get();
}
inline void HyphenInfo::_internal_set_hyphen_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hyphen_id_.Set(value, GetArena());
}
inline std::string* HyphenInfo::_internal_mutable_hyphen_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.hyphen_id_.Mutable( GetArena());
}
inline std::string* HyphenInfo::release_hyphen_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.network_management.HyphenInfo.hyphen_id)
  return _impl_.hyphen_id_.Release();
}
inline void HyphenInfo::set_allocated_hyphen_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hyphen_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.hyphen_id_.IsDefault()) {
    _impl_.hyphen_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.network_management.HyphenInfo.hyphen_id)
}

// .seigr.network_management.HyphenRole role = 2;
inline void HyphenInfo::clear_role() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_ = 0;
}
inline ::seigr::network_management::HyphenRole HyphenInfo::role() const {
  // @@protoc_insertion_point(field_get:seigr.network_management.HyphenInfo.role)
  return _internal_role();
}
inline void HyphenInfo::set_role(::seigr::network_management::HyphenRole value) {
  _internal_set_role(value);
  // @@protoc_insertion_point(field_set:seigr.network_management.HyphenInfo.role)
}
inline ::seigr::network_management::HyphenRole HyphenInfo::_internal_role() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::network_management::HyphenRole>(_impl_.role_);
}
inline void HyphenInfo::_internal_set_role(::seigr::network_management::HyphenRole value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_ = value;
}

// .seigr.network.NetworkProtocol primary_protocol = 3;
inline void HyphenInfo::clear_primary_protocol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.primary_protocol_ = 0;
}
inline ::seigr::network::NetworkProtocol HyphenInfo::primary_protocol() const {
  // @@protoc_insertion_point(field_get:seigr.network_management.HyphenInfo.primary_protocol)
  return _internal_primary_protocol();
}
inline void HyphenInfo::set_primary_protocol(::seigr::network::NetworkProtocol value) {
  _internal_set_primary_protocol(value);
  // @@protoc_insertion_point(field_set:seigr.network_management.HyphenInfo.primary_protocol)
}
inline ::seigr::network::NetworkProtocol HyphenInfo::_internal_primary_protocol() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::network::NetworkProtocol>(_impl_.primary_protocol_);
}
inline void HyphenInfo::_internal_set_primary_protocol(::seigr::network::NetworkProtocol value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.primary_protocol_ = value;
}

// .seigr.network.HyphenStatus status = 4;
inline void HyphenInfo::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0;
}
inline ::seigr::network::HyphenStatus HyphenInfo::status() const {
  // @@protoc_insertion_point(field_get:seigr.network_management.HyphenInfo.status)
  return _internal_status();
}
inline void HyphenInfo::set_status(::seigr::network::HyphenStatus value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:seigr.network_management.HyphenInfo.status)
}
inline ::seigr::network::HyphenStatus HyphenInfo::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::network::HyphenStatus>(_impl_.status_);
}
inline void HyphenInfo::_internal_set_status(::seigr::network::HyphenStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// string last_seen = 5;
inline void HyphenInfo::clear_last_seen() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_seen_.ClearToEmpty();
}
inline const std::string& HyphenInfo::last_seen() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.network_management.HyphenInfo.last_seen)
  return _internal_last_seen();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void HyphenInfo::set_last_seen(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_seen_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.network_management.HyphenInfo.last_seen)
}
inline std::string* HyphenInfo::mutable_last_seen() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_last_seen();
  // @@protoc_insertion_point(field_mutable:seigr.network_management.HyphenInfo.last_seen)
  return _s;
}
inline const std::string& HyphenInfo::_internal_last_seen() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_seen_.Get();
}
inline void HyphenInfo::_internal_set_last_seen(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_seen_.Set(value, GetArena());
}
inline std::string* HyphenInfo::_internal_mutable_last_seen() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.last_seen_.Mutable( GetArena());
}
inline std::string* HyphenInfo::release_last_seen() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.network_management.HyphenInfo.last_seen)
  return _impl_.last_seen_.Release();
}
inline void HyphenInfo::set_allocated_last_seen(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_seen_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.last_seen_.IsDefault()) {
    _impl_.last_seen_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.network_management.HyphenInfo.last_seen)
}

// map<string, string> metadata = 6;
inline int HyphenInfo::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int HyphenInfo::metadata_size() const {
  return _internal_metadata_size();
}
inline void HyphenInfo::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& HyphenInfo::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& HyphenInfo::metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.network_management.HyphenInfo.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* HyphenInfo::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* HyphenInfo::mutable_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.network_management.HyphenInfo.metadata)
  return _internal_mutable_metadata();
}

// repeated .seigr.network.NetworkProtocol supported_protocols = 7;
inline int HyphenInfo::_internal_supported_protocols_size() const {
  return _internal_supported_protocols().size();
}
inline int HyphenInfo::supported_protocols_size() const {
  return _internal_supported_protocols_size();
}
inline void HyphenInfo::clear_supported_protocols() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.supported_protocols_.Clear();
}
inline ::seigr::network::NetworkProtocol HyphenInfo::supported_protocols(int index) const {
  // @@protoc_insertion_point(field_get:seigr.network_management.HyphenInfo.supported_protocols)
  return static_cast<::seigr::network::NetworkProtocol>(_internal_supported_protocols().Get(index));
}
inline void HyphenInfo::set_supported_protocols(int index, ::seigr::network::NetworkProtocol value) {
  _internal_mutable_supported_protocols()->Set(index, value);
  // @@protoc_insertion_point(field_set:seigr.network_management.HyphenInfo.supported_protocols)
}
inline void HyphenInfo::add_supported_protocols(::seigr::network::NetworkProtocol value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_supported_protocols()->Add(value);
  // @@protoc_insertion_point(field_add:seigr.network_management.HyphenInfo.supported_protocols)
}
inline const ::google::protobuf::RepeatedField<int>& HyphenInfo::supported_protocols() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.network_management.HyphenInfo.supported_protocols)
  return _internal_supported_protocols();
}
inline ::google::protobuf::RepeatedField<int>* HyphenInfo::mutable_supported_protocols()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.network_management.HyphenInfo.supported_protocols)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_supported_protocols();
}
inline const ::google::protobuf::RepeatedField<int>& HyphenInfo::_internal_supported_protocols()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.supported_protocols_;
}
inline ::google::protobuf::RepeatedField<int>* HyphenInfo::_internal_mutable_supported_protocols() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.supported_protocols_;
}

// int64 current_load = 8;
inline void HyphenInfo::clear_current_load() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.current_load_ = ::int64_t{0};
}
inline ::int64_t HyphenInfo::current_load() const {
  // @@protoc_insertion_point(field_get:seigr.network_management.HyphenInfo.current_load)
  return _internal_current_load();
}
inline void HyphenInfo::set_current_load(::int64_t value) {
  _internal_set_current_load(value);
  // @@protoc_insertion_point(field_set:seigr.network_management.HyphenInfo.current_load)
}
inline ::int64_t HyphenInfo::_internal_current_load() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.current_load_;
}
inline void HyphenInfo::_internal_set_current_load(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.current_load_ = value;
}

// string last_updated = 9;
inline void HyphenInfo::clear_last_updated() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_updated_.ClearToEmpty();
}
inline const std::string& HyphenInfo::last_updated() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.network_management.HyphenInfo.last_updated)
  return _internal_last_updated();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void HyphenInfo::set_last_updated(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_updated_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.network_management.HyphenInfo.last_updated)
}
inline std::string* HyphenInfo::mutable_last_updated() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_last_updated();
  // @@protoc_insertion_point(field_mutable:seigr.network_management.HyphenInfo.last_updated)
  return _s;
}
inline const std::string& HyphenInfo::_internal_last_updated() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_updated_.Get();
}
inline void HyphenInfo::_internal_set_last_updated(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_updated_.Set(value, GetArena());
}
inline std::string* HyphenInfo::_internal_mutable_last_updated() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.last_updated_.Mutable( GetArena());
}
inline std::string* HyphenInfo::release_last_updated() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.network_management.HyphenInfo.last_updated)
  return _impl_.last_updated_.Release();
}
inline void HyphenInfo::set_allocated_last_updated(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_updated_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.last_updated_.IsDefault()) {
    _impl_.last_updated_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.network_management.HyphenInfo.last_updated)
}

// int32 available_cpu_percent = 10;
inline void HyphenInfo::clear_available_cpu_percent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.available_cpu_percent_ = 0;
}
inline ::int32_t HyphenInfo::available_cpu_percent() const {
  // @@protoc_insertion_point(field_get:seigr.network_management.HyphenInfo.available_cpu_percent)
  return _internal_available_cpu_percent();
}
inline void HyphenInfo::set_available_cpu_percent(::int32_t value) {
  _internal_set_available_cpu_percent(value);
  // @@protoc_insertion_point(field_set:seigr.network_management.HyphenInfo.available_cpu_percent)
}
inline ::int32_t HyphenInfo::_internal_available_cpu_percent() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.available_cpu_percent_;
}
inline void HyphenInfo::_internal_set_available_cpu_percent(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.available_cpu_percent_ = value;
}

// int32 available_memory_mb = 11;
inline void HyphenInfo::clear_available_memory_mb() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.available_memory_mb_ = 0;
}
inline ::int32_t HyphenInfo::available_memory_mb() const {
  // @@protoc_insertion_point(field_get:seigr.network_management.HyphenInfo.available_memory_mb)
  return _internal_available_memory_mb();
}
inline void HyphenInfo::set_available_memory_mb(::int32_t value) {
  _internal_set_available_memory_mb(value);
  // @@protoc_insertion_point(field_set:seigr.network_management.HyphenInfo.available_memory_mb)
}
inline ::int32_t HyphenInfo::_internal_available_memory_mb() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.available_memory_mb_;
}
inline void HyphenInfo::_internal_set_available_memory_mb(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.available_memory_mb_ = value;
}

// int32 available_bandwidth_mbps = 12;
inline void HyphenInfo::clear_available_bandwidth_mbps() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.available_bandwidth_mbps_ = 0;
}
inline ::int32_t HyphenInfo::available_bandwidth_mbps() const {
  // @@protoc_insertion_point(field_get:seigr.network_management.HyphenInfo.available_bandwidth_mbps)
  return _internal_available_bandwidth_mbps();
}
inline void HyphenInfo::set_available_bandwidth_mbps(::int32_t value) {
  _internal_set_available_bandwidth_mbps(value);
  // @@protoc_insertion_point(field_set:seigr.network_management.HyphenInfo.available_bandwidth_mbps)
}
inline ::int32_t HyphenInfo::_internal_available_bandwidth_mbps() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.available_bandwidth_mbps_;
}
inline void HyphenInfo::_internal_set_available_bandwidth_mbps(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.available_bandwidth_mbps_ = value;
}

// bool supports_self_healing = 13;
inline void HyphenInfo::clear_supports_self_healing() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.supports_self_healing_ = false;
}
inline bool HyphenInfo::supports_self_healing() const {
  // @@protoc_insertion_point(field_get:seigr.network_management.HyphenInfo.supports_self_healing)
  return _internal_supports_self_healing();
}
inline void HyphenInfo::set_supports_self_healing(bool value) {
  _internal_set_supports_self_healing(value);
  // @@protoc_insertion_point(field_set:seigr.network_management.HyphenInfo.supports_self_healing)
}
inline bool HyphenInfo::_internal_supports_self_healing() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.supports_self_healing_;
}
inline void HyphenInfo::_internal_set_supports_self_healing(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.supports_self_healing_ = value;
}

// string self_healing_status = 14;
inline void HyphenInfo::clear_self_healing_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.self_healing_status_.ClearToEmpty();
}
inline const std::string& HyphenInfo::self_healing_status() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.network_management.HyphenInfo.self_healing_status)
  return _internal_self_healing_status();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void HyphenInfo::set_self_healing_status(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.self_healing_status_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.network_management.HyphenInfo.self_healing_status)
}
inline std::string* HyphenInfo::mutable_self_healing_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_self_healing_status();
  // @@protoc_insertion_point(field_mutable:seigr.network_management.HyphenInfo.self_healing_status)
  return _s;
}
inline const std::string& HyphenInfo::_internal_self_healing_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.self_healing_status_.Get();
}
inline void HyphenInfo::_internal_set_self_healing_status(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.self_healing_status_.Set(value, GetArena());
}
inline std::string* HyphenInfo::_internal_mutable_self_healing_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.self_healing_status_.Mutable( GetArena());
}
inline std::string* HyphenInfo::release_self_healing_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.network_management.HyphenInfo.self_healing_status)
  return _impl_.self_healing_status_.Release();
}
inline void HyphenInfo::set_allocated_self_healing_status(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.self_healing_status_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.self_healing_status_.IsDefault()) {
    _impl_.self_healing_status_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.network_management.HyphenInfo.self_healing_status)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ConnectivityStatus

// string source_hyphen_id = 1;
inline void ConnectivityStatus::clear_source_hyphen_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_hyphen_id_.ClearToEmpty();
}
inline const std::string& ConnectivityStatus::source_hyphen_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.network_management.ConnectivityStatus.source_hyphen_id)
  return _internal_source_hyphen_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ConnectivityStatus::set_source_hyphen_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_hyphen_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.network_management.ConnectivityStatus.source_hyphen_id)
}
inline std::string* ConnectivityStatus::mutable_source_hyphen_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_source_hyphen_id();
  // @@protoc_insertion_point(field_mutable:seigr.network_management.ConnectivityStatus.source_hyphen_id)
  return _s;
}
inline const std::string& ConnectivityStatus::_internal_source_hyphen_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.source_hyphen_id_.Get();
}
inline void ConnectivityStatus::_internal_set_source_hyphen_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_hyphen_id_.Set(value, GetArena());
}
inline std::string* ConnectivityStatus::_internal_mutable_source_hyphen_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.source_hyphen_id_.Mutable( GetArena());
}
inline std::string* ConnectivityStatus::release_source_hyphen_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.network_management.ConnectivityStatus.source_hyphen_id)
  return _impl_.source_hyphen_id_.Release();
}
inline void ConnectivityStatus::set_allocated_source_hyphen_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_hyphen_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.source_hyphen_id_.IsDefault()) {
    _impl_.source_hyphen_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.network_management.ConnectivityStatus.source_hyphen_id)
}

// string target_hyphen_id = 2;
inline void ConnectivityStatus::clear_target_hyphen_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_hyphen_id_.ClearToEmpty();
}
inline const std::string& ConnectivityStatus::target_hyphen_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.network_management.ConnectivityStatus.target_hyphen_id)
  return _internal_target_hyphen_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ConnectivityStatus::set_target_hyphen_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_hyphen_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.network_management.ConnectivityStatus.target_hyphen_id)
}
inline std::string* ConnectivityStatus::mutable_target_hyphen_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_target_hyphen_id();
  // @@protoc_insertion_point(field_mutable:seigr.network_management.ConnectivityStatus.target_hyphen_id)
  return _s;
}
inline const std::string& ConnectivityStatus::_internal_target_hyphen_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_hyphen_id_.Get();
}
inline void ConnectivityStatus::_internal_set_target_hyphen_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_hyphen_id_.Set(value, GetArena());
}
inline std::string* ConnectivityStatus::_internal_mutable_target_hyphen_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.target_hyphen_id_.Mutable( GetArena());
}
inline std::string* ConnectivityStatus::release_target_hyphen_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.network_management.ConnectivityStatus.target_hyphen_id)
  return _impl_.target_hyphen_id_.Release();
}
inline void ConnectivityStatus::set_allocated_target_hyphen_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_hyphen_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.target_hyphen_id_.IsDefault()) {
    _impl_.target_hyphen_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.network_management.ConnectivityStatus.target_hyphen_id)
}

// .seigr.network.NetworkProtocol protocol = 3;
inline void ConnectivityStatus::clear_protocol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.protocol_ = 0;
}
inline ::seigr::network::NetworkProtocol ConnectivityStatus::protocol() const {
  // @@protoc_insertion_point(field_get:seigr.network_management.ConnectivityStatus.protocol)
  return _internal_protocol();
}
inline void ConnectivityStatus::set_protocol(::seigr::network::NetworkProtocol value) {
  _internal_set_protocol(value);
  // @@protoc_insertion_point(field_set:seigr.network_management.ConnectivityStatus.protocol)
}
inline ::seigr::network::NetworkProtocol ConnectivityStatus::_internal_protocol() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::network::NetworkProtocol>(_impl_.protocol_);
}
inline void ConnectivityStatus::_internal_set_protocol(::seigr::network::NetworkProtocol value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.protocol_ = value;
}

// .seigr.network.HyphenStatus connection_status = 4;
inline void ConnectivityStatus::clear_connection_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_status_ = 0;
}
inline ::seigr::network::HyphenStatus ConnectivityStatus::connection_status() const {
  // @@protoc_insertion_point(field_get:seigr.network_management.ConnectivityStatus.connection_status)
  return _internal_connection_status();
}
inline void ConnectivityStatus::set_connection_status(::seigr::network::HyphenStatus value) {
  _internal_set_connection_status(value);
  // @@protoc_insertion_point(field_set:seigr.network_management.ConnectivityStatus.connection_status)
}
inline ::seigr::network::HyphenStatus ConnectivityStatus::_internal_connection_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::network::HyphenStatus>(_impl_.connection_status_);
}
inline void ConnectivityStatus::_internal_set_connection_status(::seigr::network::HyphenStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_status_ = value;
}

// string protocol_specific_id = 5;
inline void ConnectivityStatus::clear_protocol_specific_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.protocol_specific_id_.ClearToEmpty();
}
inline const std::string& ConnectivityStatus::protocol_specific_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.network_management.ConnectivityStatus.protocol_specific_id)
  return _internal_protocol_specific_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ConnectivityStatus::set_protocol_specific_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.protocol_specific_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.network_management.ConnectivityStatus.protocol_specific_id)
}
inline std::string* ConnectivityStatus::mutable_protocol_specific_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_protocol_specific_id();
  // @@protoc_insertion_point(field_mutable:seigr.network_management.ConnectivityStatus.protocol_specific_id)
  return _s;
}
inline const std::string& ConnectivityStatus::_internal_protocol_specific_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.protocol_specific_id_.Get();
}
inline void ConnectivityStatus::_internal_set_protocol_specific_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.protocol_specific_id_.Set(value, GetArena());
}
inline std::string* ConnectivityStatus::_internal_mutable_protocol_specific_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.protocol_specific_id_.Mutable( GetArena());
}
inline std::string* ConnectivityStatus::release_protocol_specific_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.network_management.ConnectivityStatus.protocol_specific_id)
  return _impl_.protocol_specific_id_.Release();
}
inline void ConnectivityStatus::set_allocated_protocol_specific_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.protocol_specific_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.protocol_specific_id_.IsDefault()) {
    _impl_.protocol_specific_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.network_management.ConnectivityStatus.protocol_specific_id)
}

// int32 latency_ms = 6;
inline void ConnectivityStatus::clear_latency_ms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.latency_ms_ = 0;
}
inline ::int32_t ConnectivityStatus::latency_ms() const {
  // @@protoc_insertion_point(field_get:seigr.network_management.ConnectivityStatus.latency_ms)
  return _internal_latency_ms();
}
inline void ConnectivityStatus::set_latency_ms(::int32_t value) {
  _internal_set_latency_ms(value);
  // @@protoc_insertion_point(field_set:seigr.network_management.ConnectivityStatus.latency_ms)
}
inline ::int32_t ConnectivityStatus::_internal_latency_ms() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.latency_ms_;
}
inline void ConnectivityStatus::_internal_set_latency_ms(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.latency_ms_ = value;
}

// string timestamp = 7;
inline void ConnectivityStatus::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.ClearToEmpty();
}
inline const std::string& ConnectivityStatus::timestamp() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.network_management.ConnectivityStatus.timestamp)
  return _internal_timestamp();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ConnectivityStatus::set_timestamp(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.network_management.ConnectivityStatus.timestamp)
}
inline std::string* ConnectivityStatus::mutable_timestamp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_timestamp();
  // @@protoc_insertion_point(field_mutable:seigr.network_management.ConnectivityStatus.timestamp)
  return _s;
}
inline const std::string& ConnectivityStatus::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_.Get();
}
inline void ConnectivityStatus::_internal_set_timestamp(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.Set(value, GetArena());
}
inline std::string* ConnectivityStatus::_internal_mutable_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.timestamp_.Mutable( GetArena());
}
inline std::string* ConnectivityStatus::release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.network_management.ConnectivityStatus.timestamp)
  return _impl_.timestamp_.Release();
}
inline void ConnectivityStatus::set_allocated_timestamp(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.timestamp_.IsDefault()) {
    _impl_.timestamp_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.network_management.ConnectivityStatus.timestamp)
}

// string error_message = 8;
inline void ConnectivityStatus::clear_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.ClearToEmpty();
}
inline const std::string& ConnectivityStatus::error_message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.network_management.ConnectivityStatus.error_message)
  return _internal_error_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ConnectivityStatus::set_error_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.network_management.ConnectivityStatus.error_message)
}
inline std::string* ConnectivityStatus::mutable_error_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_error_message();
  // @@protoc_insertion_point(field_mutable:seigr.network_management.ConnectivityStatus.error_message)
  return _s;
}
inline const std::string& ConnectivityStatus::_internal_error_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.error_message_.Get();
}
inline void ConnectivityStatus::_internal_set_error_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.Set(value, GetArena());
}
inline std::string* ConnectivityStatus::_internal_mutable_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.error_message_.Mutable( GetArena());
}
inline std::string* ConnectivityStatus::release_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.network_management.ConnectivityStatus.error_message)
  return _impl_.error_message_.Release();
}
inline void ConnectivityStatus::set_allocated_error_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.error_message_.IsDefault()) {
    _impl_.error_message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.network_management.ConnectivityStatus.error_message)
}

// map<string, string> connection_metadata = 9;
inline int ConnectivityStatus::_internal_connection_metadata_size() const {
  return _internal_connection_metadata().size();
}
inline int ConnectivityStatus::connection_metadata_size() const {
  return _internal_connection_metadata_size();
}
inline void ConnectivityStatus::clear_connection_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& ConnectivityStatus::_internal_connection_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.connection_metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& ConnectivityStatus::connection_metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.network_management.ConnectivityStatus.connection_metadata)
  return _internal_connection_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* ConnectivityStatus::_internal_mutable_connection_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.connection_metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* ConnectivityStatus::mutable_connection_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.network_management.ConnectivityStatus.connection_metadata)
  return _internal_mutable_connection_metadata();
}

// float packet_loss_rate = 10;
inline void ConnectivityStatus::clear_packet_loss_rate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packet_loss_rate_ = 0;
}
inline float ConnectivityStatus::packet_loss_rate() const {
  // @@protoc_insertion_point(field_get:seigr.network_management.ConnectivityStatus.packet_loss_rate)
  return _internal_packet_loss_rate();
}
inline void ConnectivityStatus::set_packet_loss_rate(float value) {
  _internal_set_packet_loss_rate(value);
  // @@protoc_insertion_point(field_set:seigr.network_management.ConnectivityStatus.packet_loss_rate)
}
inline float ConnectivityStatus::_internal_packet_loss_rate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.packet_loss_rate_;
}
inline void ConnectivityStatus::_internal_set_packet_loss_rate(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packet_loss_rate_ = value;
}

// bool auto_re_routed = 11;
inline void ConnectivityStatus::clear_auto_re_routed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.auto_re_routed_ = false;
}
inline bool ConnectivityStatus::auto_re_routed() const {
  // @@protoc_insertion_point(field_get:seigr.network_management.ConnectivityStatus.auto_re_routed)
  return _internal_auto_re_routed();
}
inline void ConnectivityStatus::set_auto_re_routed(bool value) {
  _internal_set_auto_re_routed(value);
  // @@protoc_insertion_point(field_set:seigr.network_management.ConnectivityStatus.auto_re_routed)
}
inline bool ConnectivityStatus::_internal_auto_re_routed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.auto_re_routed_;
}
inline void ConnectivityStatus::_internal_set_auto_re_routed(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.auto_re_routed_ = value;
}

// string re_route_path = 12;
inline void ConnectivityStatus::clear_re_route_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.re_route_path_.ClearToEmpty();
}
inline const std::string& ConnectivityStatus::re_route_path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.network_management.ConnectivityStatus.re_route_path)
  return _internal_re_route_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ConnectivityStatus::set_re_route_path(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.re_route_path_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.network_management.ConnectivityStatus.re_route_path)
}
inline std::string* ConnectivityStatus::mutable_re_route_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_re_route_path();
  // @@protoc_insertion_point(field_mutable:seigr.network_management.ConnectivityStatus.re_route_path)
  return _s;
}
inline const std::string& ConnectivityStatus::_internal_re_route_path() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.re_route_path_.Get();
}
inline void ConnectivityStatus::_internal_set_re_route_path(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.re_route_path_.Set(value, GetArena());
}
inline std::string* ConnectivityStatus::_internal_mutable_re_route_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.re_route_path_.Mutable( GetArena());
}
inline std::string* ConnectivityStatus::release_re_route_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.network_management.ConnectivityStatus.re_route_path)
  return _impl_.re_route_path_.Release();
}
inline void ConnectivityStatus::set_allocated_re_route_path(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.re_route_path_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.re_route_path_.IsDefault()) {
    _impl_.re_route_path_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.network_management.ConnectivityStatus.re_route_path)
}

// string alternative_protocol = 13;
inline void ConnectivityStatus::clear_alternative_protocol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alternative_protocol_.ClearToEmpty();
}
inline const std::string& ConnectivityStatus::alternative_protocol() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.network_management.ConnectivityStatus.alternative_protocol)
  return _internal_alternative_protocol();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ConnectivityStatus::set_alternative_protocol(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alternative_protocol_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.network_management.ConnectivityStatus.alternative_protocol)
}
inline std::string* ConnectivityStatus::mutable_alternative_protocol() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_alternative_protocol();
  // @@protoc_insertion_point(field_mutable:seigr.network_management.ConnectivityStatus.alternative_protocol)
  return _s;
}
inline const std::string& ConnectivityStatus::_internal_alternative_protocol() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.alternative_protocol_.Get();
}
inline void ConnectivityStatus::_internal_set_alternative_protocol(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alternative_protocol_.Set(value, GetArena());
}
inline std::string* ConnectivityStatus::_internal_mutable_alternative_protocol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.alternative_protocol_.Mutable( GetArena());
}
inline std::string* ConnectivityStatus::release_alternative_protocol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.network_management.ConnectivityStatus.alternative_protocol)
  return _impl_.alternative_protocol_.Release();
}
inline void ConnectivityStatus::set_allocated_alternative_protocol(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alternative_protocol_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.alternative_protocol_.IsDefault()) {
    _impl_.alternative_protocol_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.network_management.ConnectivityStatus.alternative_protocol)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// DataSyncEvent

// string sync_id = 1;
inline void DataSyncEvent::clear_sync_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sync_id_.ClearToEmpty();
}
inline const std::string& DataSyncEvent::sync_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.network_management.DataSyncEvent.sync_id)
  return _internal_sync_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DataSyncEvent::set_sync_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sync_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.network_management.DataSyncEvent.sync_id)
}
inline std::string* DataSyncEvent::mutable_sync_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sync_id();
  // @@protoc_insertion_point(field_mutable:seigr.network_management.DataSyncEvent.sync_id)
  return _s;
}
inline const std::string& DataSyncEvent::_internal_sync_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sync_id_.Get();
}
inline void DataSyncEvent::_internal_set_sync_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sync_id_.Set(value, GetArena());
}
inline std::string* DataSyncEvent::_internal_mutable_sync_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.sync_id_.Mutable( GetArena());
}
inline std::string* DataSyncEvent::release_sync_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.network_management.DataSyncEvent.sync_id)
  return _impl_.sync_id_.Release();
}
inline void DataSyncEvent::set_allocated_sync_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sync_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.sync_id_.IsDefault()) {
    _impl_.sync_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.network_management.DataSyncEvent.sync_id)
}

// string source_hyphen_id = 2;
inline void DataSyncEvent::clear_source_hyphen_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_hyphen_id_.ClearToEmpty();
}
inline const std::string& DataSyncEvent::source_hyphen_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.network_management.DataSyncEvent.source_hyphen_id)
  return _internal_source_hyphen_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DataSyncEvent::set_source_hyphen_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_hyphen_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.network_management.DataSyncEvent.source_hyphen_id)
}
inline std::string* DataSyncEvent::mutable_source_hyphen_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_source_hyphen_id();
  // @@protoc_insertion_point(field_mutable:seigr.network_management.DataSyncEvent.source_hyphen_id)
  return _s;
}
inline const std::string& DataSyncEvent::_internal_source_hyphen_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.source_hyphen_id_.Get();
}
inline void DataSyncEvent::_internal_set_source_hyphen_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_hyphen_id_.Set(value, GetArena());
}
inline std::string* DataSyncEvent::_internal_mutable_source_hyphen_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.source_hyphen_id_.Mutable( GetArena());
}
inline std::string* DataSyncEvent::release_source_hyphen_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.network_management.DataSyncEvent.source_hyphen_id)
  return _impl_.source_hyphen_id_.Release();
}
inline void DataSyncEvent::set_allocated_source_hyphen_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_hyphen_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.source_hyphen_id_.IsDefault()) {
    _impl_.source_hyphen_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.network_management.DataSyncEvent.source_hyphen_id)
}

// string target_hyphen_id = 3;
inline void DataSyncEvent::clear_target_hyphen_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_hyphen_id_.ClearToEmpty();
}
inline const std::string& DataSyncEvent::target_hyphen_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.network_management.DataSyncEvent.target_hyphen_id)
  return _internal_target_hyphen_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DataSyncEvent::set_target_hyphen_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_hyphen_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.network_management.DataSyncEvent.target_hyphen_id)
}
inline std::string* DataSyncEvent::mutable_target_hyphen_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_target_hyphen_id();
  // @@protoc_insertion_point(field_mutable:seigr.network_management.DataSyncEvent.target_hyphen_id)
  return _s;
}
inline const std::string& DataSyncEvent::_internal_target_hyphen_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_hyphen_id_.Get();
}
inline void DataSyncEvent::_internal_set_target_hyphen_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_hyphen_id_.Set(value, GetArena());
}
inline std::string* DataSyncEvent::_internal_mutable_target_hyphen_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.target_hyphen_id_.Mutable( GetArena());
}
inline std::string* DataSyncEvent::release_target_hyphen_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.network_management.DataSyncEvent.target_hyphen_id)
  return _impl_.target_hyphen_id_.Release();
}
inline void DataSyncEvent::set_allocated_target_hyphen_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_hyphen_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.target_hyphen_id_.IsDefault()) {
    _impl_.target_hyphen_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.network_management.DataSyncEvent.target_hyphen_id)
}

// .seigr.network.NetworkProtocol protocol = 4;
inline void DataSyncEvent::clear_protocol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.protocol_ = 0;
}
inline ::seigr::network::NetworkProtocol DataSyncEvent::protocol() const {
  // @@protoc_insertion_point(field_get:seigr.network_management.DataSyncEvent.protocol)
  return _internal_protocol();
}
inline void DataSyncEvent::set_protocol(::seigr::network::NetworkProtocol value) {
  _internal_set_protocol(value);
  // @@protoc_insertion_point(field_set:seigr.network_management.DataSyncEvent.protocol)
}
inline ::seigr::network::NetworkProtocol DataSyncEvent::_internal_protocol() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::network::NetworkProtocol>(_impl_.protocol_);
}
inline void DataSyncEvent::_internal_set_protocol(::seigr::network::NetworkProtocol value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.protocol_ = value;
}

// string data_hash = 5;
inline void DataSyncEvent::clear_data_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_hash_.ClearToEmpty();
}
inline const std::string& DataSyncEvent::data_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.network_management.DataSyncEvent.data_hash)
  return _internal_data_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DataSyncEvent::set_data_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_hash_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.network_management.DataSyncEvent.data_hash)
}
inline std::string* DataSyncEvent::mutable_data_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data_hash();
  // @@protoc_insertion_point(field_mutable:seigr.network_management.DataSyncEvent.data_hash)
  return _s;
}
inline const std::string& DataSyncEvent::_internal_data_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_hash_.Get();
}
inline void DataSyncEvent::_internal_set_data_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_hash_.Set(value, GetArena());
}
inline std::string* DataSyncEvent::_internal_mutable_data_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_hash_.Mutable( GetArena());
}
inline std::string* DataSyncEvent::release_data_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.network_management.DataSyncEvent.data_hash)
  return _impl_.data_hash_.Release();
}
inline void DataSyncEvent::set_allocated_data_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_hash_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.data_hash_.IsDefault()) {
    _impl_.data_hash_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.network_management.DataSyncEvent.data_hash)
}

// .seigr.network_management.SyncType sync_type = 6;
inline void DataSyncEvent::clear_sync_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sync_type_ = 0;
}
inline ::seigr::network_management::SyncType DataSyncEvent::sync_type() const {
  // @@protoc_insertion_point(field_get:seigr.network_management.DataSyncEvent.sync_type)
  return _internal_sync_type();
}
inline void DataSyncEvent::set_sync_type(::seigr::network_management::SyncType value) {
  _internal_set_sync_type(value);
  // @@protoc_insertion_point(field_set:seigr.network_management.DataSyncEvent.sync_type)
}
inline ::seigr::network_management::SyncType DataSyncEvent::_internal_sync_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::network_management::SyncType>(_impl_.sync_type_);
}
inline void DataSyncEvent::_internal_set_sync_type(::seigr::network_management::SyncType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sync_type_ = value;
}

// bool success = 7;
inline void DataSyncEvent::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool DataSyncEvent::success() const {
  // @@protoc_insertion_point(field_get:seigr.network_management.DataSyncEvent.success)
  return _internal_success();
}
inline void DataSyncEvent::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:seigr.network_management.DataSyncEvent.success)
}
inline bool DataSyncEvent::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void DataSyncEvent::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// string timestamp = 8;
inline void DataSyncEvent::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.ClearToEmpty();
}
inline const std::string& DataSyncEvent::timestamp() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.network_management.DataSyncEvent.timestamp)
  return _internal_timestamp();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DataSyncEvent::set_timestamp(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.network_management.DataSyncEvent.timestamp)
}
inline std::string* DataSyncEvent::mutable_timestamp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_timestamp();
  // @@protoc_insertion_point(field_mutable:seigr.network_management.DataSyncEvent.timestamp)
  return _s;
}
inline const std::string& DataSyncEvent::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_.Get();
}
inline void DataSyncEvent::_internal_set_timestamp(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.Set(value, GetArena());
}
inline std::string* DataSyncEvent::_internal_mutable_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.timestamp_.Mutable( GetArena());
}
inline std::string* DataSyncEvent::release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.network_management.DataSyncEvent.timestamp)
  return _impl_.timestamp_.Release();
}
inline void DataSyncEvent::set_allocated_timestamp(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.timestamp_.IsDefault()) {
    _impl_.timestamp_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.network_management.DataSyncEvent.timestamp)
}

// map<string, string> metadata = 9;
inline int DataSyncEvent::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int DataSyncEvent::metadata_size() const {
  return _internal_metadata_size();
}
inline void DataSyncEvent::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& DataSyncEvent::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& DataSyncEvent::metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.network_management.DataSyncEvent.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* DataSyncEvent::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* DataSyncEvent::mutable_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.network_management.DataSyncEvent.metadata)
  return _internal_mutable_metadata();
}

// int64 data_size_bytes = 10;
inline void DataSyncEvent::clear_data_size_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_size_bytes_ = ::int64_t{0};
}
inline ::int64_t DataSyncEvent::data_size_bytes() const {
  // @@protoc_insertion_point(field_get:seigr.network_management.DataSyncEvent.data_size_bytes)
  return _internal_data_size_bytes();
}
inline void DataSyncEvent::set_data_size_bytes(::int64_t value) {
  _internal_set_data_size_bytes(value);
  // @@protoc_insertion_point(field_set:seigr.network_management.DataSyncEvent.data_size_bytes)
}
inline ::int64_t DataSyncEvent::_internal_data_size_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_size_bytes_;
}
inline void DataSyncEvent::_internal_set_data_size_bytes(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_size_bytes_ = value;
}

// int32 retries = 11;
inline void DataSyncEvent::clear_retries() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.retries_ = 0;
}
inline ::int32_t DataSyncEvent::retries() const {
  // @@protoc_insertion_point(field_get:seigr.network_management.DataSyncEvent.retries)
  return _internal_retries();
}
inline void DataSyncEvent::set_retries(::int32_t value) {
  _internal_set_retries(value);
  // @@protoc_insertion_point(field_set:seigr.network_management.DataSyncEvent.retries)
}
inline ::int32_t DataSyncEvent::_internal_retries() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.retries_;
}
inline void DataSyncEvent::_internal_set_retries(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.retries_ = value;
}

// string adaptive_bandwidth_used = 12;
inline void DataSyncEvent::clear_adaptive_bandwidth_used() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.adaptive_bandwidth_used_.ClearToEmpty();
}
inline const std::string& DataSyncEvent::adaptive_bandwidth_used() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.network_management.DataSyncEvent.adaptive_bandwidth_used)
  return _internal_adaptive_bandwidth_used();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DataSyncEvent::set_adaptive_bandwidth_used(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.adaptive_bandwidth_used_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.network_management.DataSyncEvent.adaptive_bandwidth_used)
}
inline std::string* DataSyncEvent::mutable_adaptive_bandwidth_used() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_adaptive_bandwidth_used();
  // @@protoc_insertion_point(field_mutable:seigr.network_management.DataSyncEvent.adaptive_bandwidth_used)
  return _s;
}
inline const std::string& DataSyncEvent::_internal_adaptive_bandwidth_used() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.adaptive_bandwidth_used_.Get();
}
inline void DataSyncEvent::_internal_set_adaptive_bandwidth_used(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.adaptive_bandwidth_used_.Set(value, GetArena());
}
inline std::string* DataSyncEvent::_internal_mutable_adaptive_bandwidth_used() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.adaptive_bandwidth_used_.Mutable( GetArena());
}
inline std::string* DataSyncEvent::release_adaptive_bandwidth_used() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.network_management.DataSyncEvent.adaptive_bandwidth_used)
  return _impl_.adaptive_bandwidth_used_.Release();
}
inline void DataSyncEvent::set_allocated_adaptive_bandwidth_used(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.adaptive_bandwidth_used_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.adaptive_bandwidth_used_.IsDefault()) {
    _impl_.adaptive_bandwidth_used_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.network_management.DataSyncEvent.adaptive_bandwidth_used)
}

// string redundancy_applied = 13;
inline void DataSyncEvent::clear_redundancy_applied() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.redundancy_applied_.ClearToEmpty();
}
inline const std::string& DataSyncEvent::redundancy_applied() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.network_management.DataSyncEvent.redundancy_applied)
  return _internal_redundancy_applied();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DataSyncEvent::set_redundancy_applied(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.redundancy_applied_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.network_management.DataSyncEvent.redundancy_applied)
}
inline std::string* DataSyncEvent::mutable_redundancy_applied() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_redundancy_applied();
  // @@protoc_insertion_point(field_mutable:seigr.network_management.DataSyncEvent.redundancy_applied)
  return _s;
}
inline const std::string& DataSyncEvent::_internal_redundancy_applied() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.redundancy_applied_.Get();
}
inline void DataSyncEvent::_internal_set_redundancy_applied(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.redundancy_applied_.Set(value, GetArena());
}
inline std::string* DataSyncEvent::_internal_mutable_redundancy_applied() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.redundancy_applied_.Mutable( GetArena());
}
inline std::string* DataSyncEvent::release_redundancy_applied() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.network_management.DataSyncEvent.redundancy_applied)
  return _impl_.redundancy_applied_.Release();
}
inline void DataSyncEvent::set_allocated_redundancy_applied(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.redundancy_applied_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.redundancy_applied_.IsDefault()) {
    _impl_.redundancy_applied_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.network_management.DataSyncEvent.redundancy_applied)
}

// float network_load_factor = 14;
inline void DataSyncEvent::clear_network_load_factor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.network_load_factor_ = 0;
}
inline float DataSyncEvent::network_load_factor() const {
  // @@protoc_insertion_point(field_get:seigr.network_management.DataSyncEvent.network_load_factor)
  return _internal_network_load_factor();
}
inline void DataSyncEvent::set_network_load_factor(float value) {
  _internal_set_network_load_factor(value);
  // @@protoc_insertion_point(field_set:seigr.network_management.DataSyncEvent.network_load_factor)
}
inline float DataSyncEvent::_internal_network_load_factor() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.network_load_factor_;
}
inline void DataSyncEvent::_internal_set_network_load_factor(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.network_load_factor_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// NetworkAnomalyAlert

// string alert_id = 1;
inline void NetworkAnomalyAlert::clear_alert_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alert_id_.ClearToEmpty();
}
inline const std::string& NetworkAnomalyAlert::alert_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.network_management.NetworkAnomalyAlert.alert_id)
  return _internal_alert_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NetworkAnomalyAlert::set_alert_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alert_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.network_management.NetworkAnomalyAlert.alert_id)
}
inline std::string* NetworkAnomalyAlert::mutable_alert_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_alert_id();
  // @@protoc_insertion_point(field_mutable:seigr.network_management.NetworkAnomalyAlert.alert_id)
  return _s;
}
inline const std::string& NetworkAnomalyAlert::_internal_alert_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.alert_id_.Get();
}
inline void NetworkAnomalyAlert::_internal_set_alert_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alert_id_.Set(value, GetArena());
}
inline std::string* NetworkAnomalyAlert::_internal_mutable_alert_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.alert_id_.Mutable( GetArena());
}
inline std::string* NetworkAnomalyAlert::release_alert_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.network_management.NetworkAnomalyAlert.alert_id)
  return _impl_.alert_id_.Release();
}
inline void NetworkAnomalyAlert::set_allocated_alert_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alert_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.alert_id_.IsDefault()) {
    _impl_.alert_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.network_management.NetworkAnomalyAlert.alert_id)
}

// string detected_by = 2;
inline void NetworkAnomalyAlert::clear_detected_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.detected_by_.ClearToEmpty();
}
inline const std::string& NetworkAnomalyAlert::detected_by() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.network_management.NetworkAnomalyAlert.detected_by)
  return _internal_detected_by();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NetworkAnomalyAlert::set_detected_by(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.detected_by_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.network_management.NetworkAnomalyAlert.detected_by)
}
inline std::string* NetworkAnomalyAlert::mutable_detected_by() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_detected_by();
  // @@protoc_insertion_point(field_mutable:seigr.network_management.NetworkAnomalyAlert.detected_by)
  return _s;
}
inline const std::string& NetworkAnomalyAlert::_internal_detected_by() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.detected_by_.Get();
}
inline void NetworkAnomalyAlert::_internal_set_detected_by(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.detected_by_.Set(value, GetArena());
}
inline std::string* NetworkAnomalyAlert::_internal_mutable_detected_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.detected_by_.Mutable( GetArena());
}
inline std::string* NetworkAnomalyAlert::release_detected_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.network_management.NetworkAnomalyAlert.detected_by)
  return _impl_.detected_by_.Release();
}
inline void NetworkAnomalyAlert::set_allocated_detected_by(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.detected_by_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.detected_by_.IsDefault()) {
    _impl_.detected_by_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.network_management.NetworkAnomalyAlert.detected_by)
}

// .seigr.common.ThreatLevel threat_level = 3;
inline void NetworkAnomalyAlert::clear_threat_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.threat_level_ = 0;
}
inline ::seigr::common::ThreatLevel NetworkAnomalyAlert::threat_level() const {
  // @@protoc_insertion_point(field_get:seigr.network_management.NetworkAnomalyAlert.threat_level)
  return _internal_threat_level();
}
inline void NetworkAnomalyAlert::set_threat_level(::seigr::common::ThreatLevel value) {
  _internal_set_threat_level(value);
  // @@protoc_insertion_point(field_set:seigr.network_management.NetworkAnomalyAlert.threat_level)
}
inline ::seigr::common::ThreatLevel NetworkAnomalyAlert::_internal_threat_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::common::ThreatLevel>(_impl_.threat_level_);
}
inline void NetworkAnomalyAlert::_internal_set_threat_level(::seigr::common::ThreatLevel value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.threat_level_ = value;
}

// string description = 4;
inline void NetworkAnomalyAlert::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
}
inline const std::string& NetworkAnomalyAlert::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.network_management.NetworkAnomalyAlert.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NetworkAnomalyAlert::set_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.network_management.NetworkAnomalyAlert.description)
}
inline std::string* NetworkAnomalyAlert::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:seigr.network_management.NetworkAnomalyAlert.description)
  return _s;
}
inline const std::string& NetworkAnomalyAlert::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void NetworkAnomalyAlert::_internal_set_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(value, GetArena());
}
inline std::string* NetworkAnomalyAlert::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* NetworkAnomalyAlert::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.network_management.NetworkAnomalyAlert.description)
  return _impl_.description_.Release();
}
inline void NetworkAnomalyAlert::set_allocated_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.network_management.NetworkAnomalyAlert.description)
}

// string timestamp = 5;
inline void NetworkAnomalyAlert::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.ClearToEmpty();
}
inline const std::string& NetworkAnomalyAlert::timestamp() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.network_management.NetworkAnomalyAlert.timestamp)
  return _internal_timestamp();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NetworkAnomalyAlert::set_timestamp(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.network_management.NetworkAnomalyAlert.timestamp)
}
inline std::string* NetworkAnomalyAlert::mutable_timestamp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_timestamp();
  // @@protoc_insertion_point(field_mutable:seigr.network_management.NetworkAnomalyAlert.timestamp)
  return _s;
}
inline const std::string& NetworkAnomalyAlert::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_.Get();
}
inline void NetworkAnomalyAlert::_internal_set_timestamp(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.Set(value, GetArena());
}
inline std::string* NetworkAnomalyAlert::_internal_mutable_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.timestamp_.Mutable( GetArena());
}
inline std::string* NetworkAnomalyAlert::release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.network_management.NetworkAnomalyAlert.timestamp)
  return _impl_.timestamp_.Release();
}
inline void NetworkAnomalyAlert::set_allocated_timestamp(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.timestamp_.IsDefault()) {
    _impl_.timestamp_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.network_management.NetworkAnomalyAlert.timestamp)
}

// map<string, string> metadata = 6;
inline int NetworkAnomalyAlert::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int NetworkAnomalyAlert::metadata_size() const {
  return _internal_metadata_size();
}
inline void NetworkAnomalyAlert::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& NetworkAnomalyAlert::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& NetworkAnomalyAlert::metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.network_management.NetworkAnomalyAlert.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* NetworkAnomalyAlert::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* NetworkAnomalyAlert::mutable_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.network_management.NetworkAnomalyAlert.metadata)
  return _internal_mutable_metadata();
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace network_management
}  // namespace seigr


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::seigr::network_management::HyphenRole> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::seigr::network_management::HyphenRole>() {
  return ::seigr::network_management::HyphenRole_descriptor();
}
template <>
struct is_proto_enum<::seigr::network_management::SyncType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::seigr::network_management::SyncType>() {
  return ::seigr::network_management::SyncType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // network_5fmanagement_2eproto_2epb_2eh
