syntax = "proto3";

package seigr;

// =======================
// ðŸŽ¯ Enums
// =======================

// Enum defining different types of alerts
enum AlertType {
    ALERT_TYPE_UNDEFINED = 0;
    ALERT_TYPE_SECURITY = 1;             // Security-related alert
    ALERT_TYPE_SYSTEM = 2;               // System operation and maintenance alerts
    ALERT_TYPE_DATA_INTEGRITY = 3;       // Alerts related to data integrity issues
    ALERT_TYPE_NETWORK = 4;              // Network-related alert
    ALERT_TYPE_REPLICATION = 5;          // Replication process alert
    ALERT_TYPE_RESOURCE_USAGE = 6;       // High or critical resource usage alert
    ALERT_TYPE_CUSTOM = 7;               // Custom user-defined alert
}

// Enum specifying alert severity levels
enum AlertSeverity {
    ALERT_SEVERITY_UNDEFINED = 0;
    ALERT_SEVERITY_INFO = 1;                   // Informational alert
    ALERT_SEVERITY_WARNING = 2;                // Warning, potential issue detected
    ALERT_SEVERITY_CRITICAL = 3;               // Critical alert, immediate attention required
    ALERT_SEVERITY_FATAL = 4;                  // Fatal issue, system or component failure
    ALERT_SEVERITY_ERROR = 5;                  // Non-fatal error requiring attention
}

// Enum specifying trigger source for alerts
enum AlertTriggerSource {
    ALERT_TRIGGER_UNDEFINED = 0;
    ALERT_TRIGGER_AUTOMATED = 1;        // Triggered automatically by the system
    ALERT_TRIGGER_MANUAL = 2;           // Triggered manually by a user
    ALERT_TRIGGER_EXTERNAL = 3;         // Triggered by an external system
}

// Enum defining alert action types
enum AlertAction {
    ALERT_ACTION_UNDEFINED = 0;
    ALERT_ACTION_AUTO_RECOVERED = 1;    // Automatically recovered by the system
    ALERT_ACTION_MANUAL_INTERVENTION = 2; // Resolved manually
    ALERT_ACTION_ESCALATED = 3;         // Escalated to higher severity
    ALERT_ACTION_IGNORED = 4;           // Explicitly ignored
}

// =======================
// ðŸ“¦ Messages
// =======================

// Metadata key-value pair
message AlertMetadata {
    string key = 1;
    string value = 2;
}

// Contextual data associated with an alert
message AlertContext {
    string request_id = 1;             // Request ID related to the alert
    string session_id = 2;             // Session ID if applicable
    string user_id = 3;                // User ID involved in the alert
    string trace_id = 4;               // Trace ID for distributed tracing
    map<string, string> additional_context = 5; // Any additional context data
}

// Resolution details for an alert
message AlertResolution {
    string resolved_by_id = 1;         // ID of the user/system who resolved it
    string resolution_details = 2;    // Steps taken for resolution
    string resolved_at = 3;           // Resolution timestamp
    AlertAction action_taken = 4;     // Action taken during resolution
    map<string, string> metadata = 5; // Additional metadata for resolution
}

// Defines the escalation chain for alerts
message AlertEscalationChain {
    repeated AlertEscalation escalation_steps = 1; // Sequential escalation steps
    string final_status = 2;            // Final status of escalation
}

// Main alert definition
message Alert {
    string alert_id = 1;                // Unique identifier for the alert
    AlertType type = 2;                 // Type of alert
    AlertSeverity severity = 3;         // Severity level
    string message = 4;                 // Description
    string timestamp = 5;               // Generation timestamp
    string source_component = 6;        // Source of alert
    AlertTriggerSource trigger_source = 7; // Trigger source
    AlertContext context = 8;           // Contextual details
    map<string, string> metadata = 9;   // Additional metadata
    AlertResolution resolution = 10;    // Resolution details
    AlertEscalationChain escalation_chain = 11; // Escalation chain
    AlertAction last_action = 12;       // Last recorded action on the alert
}

// Configuration for alert rules
message AlertRule {
    string rule_id = 1;                 
    AlertType alert_type = 2;
    AlertSeverity min_severity = 3;
    string condition_expression = 4;
    bool is_enabled = 5;
    repeated string alert_recipients = 6;
    string escalation_policy_id = 7;
    map<string, string> metadata = 8;
    bool dynamic_thresholds_enabled = 9;
}

// Notification preferences
message AlertNotificationConfig {
    string config_id = 1;
    repeated string default_recipients = 2;
    repeated AlertType alert_types = 3;
    AlertSeverity min_notification_severity = 4;
    bool email_notifications_enabled = 5;
    bool sms_notifications_enabled = 6;
    bool push_notifications_enabled = 7;
    string do_not_disturb_start_time = 8;
    string do_not_disturb_end_time = 9;
    map<string, bool> channel_preferences = 10;
    map<string, string> metadata = 11;
}

// Log entry for an alert
message AlertLog {
    string log_id = 1;
    string alert_id = 2;
    AlertSeverity severity = 3;
    string log_timestamp = 4;
    string alert_status = 5;
    AlertResolution resolution = 6;
    map<string, string> metadata = 7;
    repeated string event_trace = 8;
    string status_code = 9;
}

// Request for alert information
message AlertRequest {
    repeated AlertType requested_types = 1;
    AlertSeverity min_severity = 2;
    string start_time_filter = 3;
    string end_time_filter = 4;
    repeated string source_components = 5;
    map<string, string> filters = 6;
    bool include_escalations = 7;
}

// Response for alert information
message AlertResponse {
    repeated AlertLog matching_logs = 1;
    string request_id = 2;
    string response_timestamp = 3;
    map<string, string> metadata = 4;
}
