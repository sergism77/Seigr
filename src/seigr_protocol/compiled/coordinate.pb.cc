// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: coordinate.proto
// Protobuf C++ Version: 5.29.2

#include "coordinate.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace seigr {
namespace coordinate {
              template <typename>
PROTOBUF_CONSTEXPR CoordinateSummary_MetadataEntry_DoNotUse::CoordinateSummary_MetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : CoordinateSummary_MetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : CoordinateSummary_MetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct CoordinateSummary_MetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CoordinateSummary_MetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CoordinateSummary_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    CoordinateSummary_MetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CoordinateSummary_MetadataEntry_DoNotUseDefaultTypeInternal _CoordinateSummary_MetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR CoordinateRule_MetadataEntry_DoNotUse::CoordinateRule_MetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : CoordinateRule_MetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : CoordinateRule_MetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct CoordinateRule_MetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CoordinateRule_MetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CoordinateRule_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    CoordinateRule_MetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CoordinateRule_MetadataEntry_DoNotUseDefaultTypeInternal _CoordinateRule_MetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR CoordinatePath_MetadataEntry_DoNotUse::CoordinatePath_MetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : CoordinatePath_MetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : CoordinatePath_MetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct CoordinatePath_MetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CoordinatePath_MetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CoordinatePath_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    CoordinatePath_MetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CoordinatePath_MetadataEntry_DoNotUseDefaultTypeInternal _CoordinatePath_MetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR CoordinateIndex_MetadataEntry_DoNotUse::CoordinateIndex_MetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : CoordinateIndex_MetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : CoordinateIndex_MetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct CoordinateIndex_MetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CoordinateIndex_MetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CoordinateIndex_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    CoordinateIndex_MetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CoordinateIndex_MetadataEntry_DoNotUseDefaultTypeInternal _CoordinateIndex_MetadataEntry_DoNotUse_default_instance_;

inline constexpr CoordinateSummary::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : metadata_{},
        last_updated_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        total_coordinates_{0},
        active_coordinates_{0},
        inactive_coordinates_{0},
        flagged_coordinates_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CoordinateSummary::CoordinateSummary(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CoordinateSummaryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CoordinateSummaryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CoordinateSummaryDefaultTypeInternal() {}
  union {
    CoordinateSummary _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CoordinateSummaryDefaultTypeInternal _CoordinateSummary_default_instance_;

inline constexpr CoordinateRule::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : applicable_flags_{},
        _applicable_flags_cached_byte_size_{0},
        metadata_{},
        rule_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        rule_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        creation_timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        updated_timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        target_layer_{static_cast< ::seigr::coordinate::LayerType >(0)},
        relation_type_{static_cast< ::seigr::coordinate::CoordinateRelationType >(0)},
        is_mandatory_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CoordinateRule::CoordinateRule(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CoordinateRuleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CoordinateRuleDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CoordinateRuleDefaultTypeInternal() {}
  union {
    CoordinateRule _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CoordinateRuleDefaultTypeInternal _CoordinateRule_default_instance_;

inline constexpr CoordinatePath::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : intermediate_hyphens_{},
        metadata_{},
        start_hyphen_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        end_hyphen_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        direction_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        time_constraint_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        backup_path_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        latency_constraint_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        total_weight_{0},
        path_type_{static_cast< ::seigr::coordinate::CoordinateRelationType >(0)},
        directional_strength_{0},
        load_threshold_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CoordinatePath::CoordinatePath(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CoordinatePathDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CoordinatePathDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CoordinatePathDefaultTypeInternal() {}
  union {
    CoordinatePath _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CoordinatePathDefaultTypeInternal _CoordinatePath_default_instance_;

inline constexpr CoordinateIndex::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : connected_hyphens_{},
        flags_{},
        _flags_cached_byte_size_{0},
        metadata_{},
        geo_boundaries_{},
        layer_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        hyphen_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        branch_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        parent_hyphen_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        last_modified_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        geographic_location_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        active_period_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        role_description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        relation_type_{static_cast< ::seigr::coordinate::CoordinateRelationType >(0)},
        layer_type_{static_cast< ::seigr::coordinate::LayerType >(0)},
        depth_level_{0},
        path_weight_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CoordinateIndex::CoordinateIndex(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CoordinateIndexDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CoordinateIndexDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CoordinateIndexDefaultTypeInternal() {}
  union {
    CoordinateIndex _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CoordinateIndexDefaultTypeInternal _CoordinateIndex_default_instance_;
}  // namespace coordinate
}  // namespace seigr
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_coordinate_2eproto[3];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_coordinate_2eproto = nullptr;
const ::uint32_t
    TableStruct_coordinate_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinateIndex_MetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinateIndex_MetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinateIndex_MetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinateIndex_MetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinateIndex, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinateIndex, _impl_.relation_type_),
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinateIndex, _impl_.layer_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinateIndex, _impl_.layer_type_),
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinateIndex, _impl_.hyphen_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinateIndex, _impl_.branch_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinateIndex, _impl_.depth_level_),
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinateIndex, _impl_.connected_hyphens_),
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinateIndex, _impl_.path_weight_),
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinateIndex, _impl_.parent_hyphen_),
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinateIndex, _impl_.flags_),
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinateIndex, _impl_.version_),
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinateIndex, _impl_.last_modified_),
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinateIndex, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinateIndex, _impl_.geographic_location_),
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinateIndex, _impl_.active_period_),
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinateIndex, _impl_.geo_boundaries_),
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinateIndex, _impl_.role_description_),
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinatePath_MetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinatePath_MetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinatePath_MetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinatePath_MetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinatePath, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinatePath, _impl_.start_hyphen_),
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinatePath, _impl_.end_hyphen_),
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinatePath, _impl_.intermediate_hyphens_),
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinatePath, _impl_.total_weight_),
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinatePath, _impl_.path_type_),
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinatePath, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinatePath, _impl_.direction_),
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinatePath, _impl_.time_constraint_),
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinatePath, _impl_.directional_strength_),
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinatePath, _impl_.load_threshold_),
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinatePath, _impl_.backup_path_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinatePath, _impl_.latency_constraint_),
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinateRule_MetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinateRule_MetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinateRule_MetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinateRule_MetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinateRule, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinateRule, _impl_.rule_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinateRule, _impl_.rule_name_),
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinateRule, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinateRule, _impl_.applicable_flags_),
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinateRule, _impl_.target_layer_),
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinateRule, _impl_.relation_type_),
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinateRule, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinateRule, _impl_.is_mandatory_),
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinateRule, _impl_.creation_timestamp_),
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinateRule, _impl_.updated_timestamp_),
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinateSummary_MetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinateSummary_MetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinateSummary_MetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinateSummary_MetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinateSummary, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinateSummary, _impl_.total_coordinates_),
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinateSummary, _impl_.active_coordinates_),
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinateSummary, _impl_.inactive_coordinates_),
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinateSummary, _impl_.flagged_coordinates_),
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinateSummary, _impl_.last_updated_),
        PROTOBUF_FIELD_OFFSET(::seigr::coordinate::CoordinateSummary, _impl_.metadata_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::seigr::coordinate::CoordinateIndex_MetadataEntry_DoNotUse)},
        {12, -1, -1, sizeof(::seigr::coordinate::CoordinateIndex)},
        {37, 47, -1, sizeof(::seigr::coordinate::CoordinatePath_MetadataEntry_DoNotUse)},
        {49, -1, -1, sizeof(::seigr::coordinate::CoordinatePath)},
        {69, 79, -1, sizeof(::seigr::coordinate::CoordinateRule_MetadataEntry_DoNotUse)},
        {81, -1, -1, sizeof(::seigr::coordinate::CoordinateRule)},
        {99, 109, -1, sizeof(::seigr::coordinate::CoordinateSummary_MetadataEntry_DoNotUse)},
        {111, -1, -1, sizeof(::seigr::coordinate::CoordinateSummary)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::seigr::coordinate::_CoordinateIndex_MetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::coordinate::_CoordinateIndex_default_instance_._instance,
    &::seigr::coordinate::_CoordinatePath_MetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::coordinate::_CoordinatePath_default_instance_._instance,
    &::seigr::coordinate::_CoordinateRule_MetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::coordinate::_CoordinateRule_default_instance_._instance,
    &::seigr::coordinate::_CoordinateSummary_MetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::coordinate::_CoordinateSummary_default_instance_._instance,
};
const char descriptor_table_protodef_coordinate_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\020coordinate.proto\022\020seigr.coordinate\"\312\004\n"
    "\017CoordinateIndex\022\?\n\rrelation_type\030\001 \001(\0162"
    "(.seigr.coordinate.CoordinateRelationTyp"
    "e\022\020\n\010layer_id\030\002 \001(\t\022/\n\nlayer_type\030\003 \001(\0162"
    "\033.seigr.coordinate.LayerType\022\021\n\thyphen_i"
    "d\030\004 \001(\t\022\021\n\tbranch_id\030\005 \001(\t\022\023\n\013depth_leve"
    "l\030\006 \001(\005\022\031\n\021connected_hyphens\030\007 \003(\t\022\023\n\013pa"
    "th_weight\030\010 \001(\002\022\025\n\rparent_hyphen\030\t \001(\t\022/"
    "\n\005flags\030\n \003(\0162 .seigr.coordinate.Coordin"
    "ateFlag\022\017\n\007version\030\013 \001(\t\022\025\n\rlast_modifie"
    "d\030\014 \001(\t\022A\n\010metadata\030\r \003(\0132/.seigr.coordi"
    "nate.CoordinateIndex.MetadataEntry\022\033\n\023ge"
    "ographic_location\030\016 \001(\t\022\025\n\ractive_period"
    "\030\017 \001(\t\022\026\n\016geo_boundaries\030\020 \003(\t\022\030\n\020role_d"
    "escription\030\021 \001(\t\032/\n\rMetadataEntry\022\013\n\003key"
    "\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\264\003\n\016Coordinate"
    "Path\022\024\n\014start_hyphen\030\001 \001(\t\022\022\n\nend_hyphen"
    "\030\002 \001(\t\022\034\n\024intermediate_hyphens\030\003 \003(\t\022\024\n\014"
    "total_weight\030\004 \001(\002\022;\n\tpath_type\030\005 \001(\0162(."
    "seigr.coordinate.CoordinateRelationType\022"
    "@\n\010metadata\030\006 \003(\0132..seigr.coordinate.Coo"
    "rdinatePath.MetadataEntry\022\021\n\tdirection\030\007"
    " \001(\t\022\027\n\017time_constraint\030\010 \001(\t\022\034\n\024directi"
    "onal_strength\030\t \001(\002\022\026\n\016load_threshold\030\n "
    "\001(\005\022\026\n\016backup_path_id\030\013 \001(\t\022\032\n\022latency_c"
    "onstraint\030\014 \001(\t\032/\n\rMetadataEntry\022\013\n\003key\030"
    "\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\271\003\n\016CoordinateR"
    "ule\022\017\n\007rule_id\030\001 \001(\t\022\021\n\trule_name\030\002 \001(\t\022"
    "\023\n\013description\030\003 \001(\t\022:\n\020applicable_flags"
    "\030\004 \003(\0162 .seigr.coordinate.CoordinateFlag"
    "\0221\n\014target_layer\030\005 \001(\0162\033.seigr.coordinat"
    "e.LayerType\022\?\n\rrelation_type\030\006 \001(\0162(.sei"
    "gr.coordinate.CoordinateRelationType\022@\n\010"
    "metadata\030\007 \003(\0132..seigr.coordinate.Coordi"
    "nateRule.MetadataEntry\022\024\n\014is_mandatory\030\010"
    " \001(\010\022\032\n\022creation_timestamp\030\t \001(\t\022\031\n\021upda"
    "ted_timestamp\030\n \001(\t\032/\n\rMetadataEntry\022\013\n\003"
    "key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\221\002\n\021Coordin"
    "ateSummary\022\031\n\021total_coordinates\030\001 \001(\005\022\032\n"
    "\022active_coordinates\030\002 \001(\005\022\034\n\024inactive_co"
    "ordinates\030\003 \001(\005\022\033\n\023flagged_coordinates\030\004"
    " \001(\005\022\024\n\014last_updated\030\005 \001(\t\022C\n\010metadata\030\006"
    " \003(\01321.seigr.coordinate.CoordinateSummar"
    "y.MetadataEntry\032/\n\rMetadataEntry\022\013\n\003key\030"
    "\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001*\306\002\n\026CoordinateR"
    "elationType\022\033\n\027RELATION_TYPE_UNDEFINED\020\000"
    "\022\036\n\032RELATION_TYPE_PRIMARY_PATH\020\001\022 \n\034RELA"
    "TION_TYPE_SECONDARY_PATH\020\002\022$\n RELATION_T"
    "YPE_HIERARCHICAL_LAYER\020\003\022$\n RELATION_TYP"
    "E_CLUSTER_CONNECTION\020\004\022\033\n\027RELATION_TYPE_"
    "PEER_LINK\020\005\022$\n RELATION_TYPE_CROSS_CLUST"
    "ER_LINK\020\006\022\035\n\031RELATION_TYPE_BACKUP_LINK\020\007"
    "\022\037\n\033RELATION_TYPE_LOAD_BALANCED\020\010*\304\002\n\016Co"
    "ordinateFlag\022\035\n\031COORDINATE_FLAG_UNDEFINE"
    "D\020\000\022\032\n\026COORDINATE_FLAG_ACTIVE\020\001\022\034\n\030COORD"
    "INATE_FLAG_INACTIVE\020\002\022\034\n\030COORDINATE_FLAG"
    "_ARCHIVED\020\003\022\035\n\031COORDINATE_FLAG_TEMPORARY"
    "\020\004\022\032\n\026COORDINATE_FLAG_LOCKED\020\005\022\034\n\030COORDI"
    "NATE_FLAG_PRIORITY\020\006\022!\n\035COORDINATE_FLAG_"
    "SYNC_REQUIRED\020\007\022\035\n\031COORDINATE_FLAG_VALID"
    "ATOR\020\010\022 \n\034COORDINATE_FLAG_CACHE_HYPHEN\020\t"
    "*\301\001\n\tLayerType\022\030\n\024LAYER_TYPE_UNDEFINED\020\000"
    "\022\027\n\023LAYER_TYPE_TEMPORAL\020\001\022\026\n\022LAYER_TYPE_"
    "SPATIAL\020\002\022\026\n\022LAYER_TYPE_LOGICAL\020\003\022\027\n\023LAY"
    "ER_TYPE_SECURITY\020\004\022\037\n\033LAYER_TYPE_NETWORK"
    "_TOPOLOGY\020\005\022\027\n\023LAYER_TYPE_ADAPTIVE\020\006b\006pr"
    "oto3"
};
static ::absl::once_flag descriptor_table_coordinate_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_coordinate_2eproto = {
    false,
    false,
    2644,
    descriptor_table_protodef_coordinate_2eproto,
    "coordinate.proto",
    &descriptor_table_coordinate_2eproto_once,
    nullptr,
    0,
    8,
    schemas,
    file_default_instances,
    TableStruct_coordinate_2eproto::offsets,
    file_level_enum_descriptors_coordinate_2eproto,
    file_level_service_descriptors_coordinate_2eproto,
};
namespace seigr {
namespace coordinate {
const ::google::protobuf::EnumDescriptor* CoordinateRelationType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_coordinate_2eproto);
  return file_level_enum_descriptors_coordinate_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t CoordinateRelationType_internal_data_[] = {
    589824u, 0u, };
bool CoordinateRelationType_IsValid(int value) {
  return 0 <= value && value <= 8;
}
const ::google::protobuf::EnumDescriptor* CoordinateFlag_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_coordinate_2eproto);
  return file_level_enum_descriptors_coordinate_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t CoordinateFlag_internal_data_[] = {
    655360u, 0u, };
bool CoordinateFlag_IsValid(int value) {
  return 0 <= value && value <= 9;
}
const ::google::protobuf::EnumDescriptor* LayerType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_coordinate_2eproto);
  return file_level_enum_descriptors_coordinate_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t LayerType_internal_data_[] = {
    458752u, 0u, };
bool LayerType_IsValid(int value) {
  return 0 <= value && value <= 6;
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              CoordinateIndex_MetadataEntry_DoNotUse::CoordinateIndex_MetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              CoordinateIndex_MetadataEntry_DoNotUse::CoordinateIndex_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              CoordinateIndex_MetadataEntry_DoNotUse::CoordinateIndex_MetadataEntry_DoNotUse() : SuperType() {}
              CoordinateIndex_MetadataEntry_DoNotUse::CoordinateIndex_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* CoordinateIndex_MetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) CoordinateIndex_MetadataEntry_DoNotUse(arena);
              }
              constexpr auto CoordinateIndex_MetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CoordinateIndex_MetadataEntry_DoNotUse),
                                                          alignof(CoordinateIndex_MetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull CoordinateIndex_MetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_CoordinateIndex_MetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &CoordinateIndex_MetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<CoordinateIndex_MetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &CoordinateIndex_MetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &CoordinateIndex_MetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(CoordinateIndex_MetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &CoordinateIndex_MetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_coordinate_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* CoordinateIndex_MetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 63, 2> CoordinateIndex_MetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CoordinateIndex_MetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::coordinate::CoordinateIndex_MetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinateIndex_MetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinateIndex_MetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(CoordinateIndex_MetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(CoordinateIndex_MetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\56\3\5\0\0\0\0\0"
    "seigr.coordinate.CoordinateIndex.MetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class CoordinateIndex::_Internal {
 public:
};

CoordinateIndex::CoordinateIndex(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.coordinate.CoordinateIndex)
}
inline PROTOBUF_NDEBUG_INLINE CoordinateIndex::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::coordinate::CoordinateIndex& from_msg)
      : connected_hyphens_{visibility, arena, from.connected_hyphens_},
        flags_{visibility, arena, from.flags_},
        _flags_cached_byte_size_{0},
        metadata_{visibility, arena, from.metadata_},
        geo_boundaries_{visibility, arena, from.geo_boundaries_},
        layer_id_(arena, from.layer_id_),
        hyphen_id_(arena, from.hyphen_id_),
        branch_id_(arena, from.branch_id_),
        parent_hyphen_(arena, from.parent_hyphen_),
        version_(arena, from.version_),
        last_modified_(arena, from.last_modified_),
        geographic_location_(arena, from.geographic_location_),
        active_period_(arena, from.active_period_),
        role_description_(arena, from.role_description_),
        _cached_size_{0} {}

CoordinateIndex::CoordinateIndex(
    ::google::protobuf::Arena* arena,
    const CoordinateIndex& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CoordinateIndex* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, relation_type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, relation_type_),
           offsetof(Impl_, path_weight_) -
               offsetof(Impl_, relation_type_) +
               sizeof(Impl_::path_weight_));

  // @@protoc_insertion_point(copy_constructor:seigr.coordinate.CoordinateIndex)
}
inline PROTOBUF_NDEBUG_INLINE CoordinateIndex::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : connected_hyphens_{visibility, arena},
        flags_{visibility, arena},
        _flags_cached_byte_size_{0},
        metadata_{visibility, arena},
        geo_boundaries_{visibility, arena},
        layer_id_(arena),
        hyphen_id_(arena),
        branch_id_(arena),
        parent_hyphen_(arena),
        version_(arena),
        last_modified_(arena),
        geographic_location_(arena),
        active_period_(arena),
        role_description_(arena),
        _cached_size_{0} {}

inline void CoordinateIndex::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, relation_type_),
           0,
           offsetof(Impl_, path_weight_) -
               offsetof(Impl_, relation_type_) +
               sizeof(Impl_::path_weight_));
}
CoordinateIndex::~CoordinateIndex() {
  // @@protoc_insertion_point(destructor:seigr.coordinate.CoordinateIndex)
  SharedDtor(*this);
}
inline void CoordinateIndex::SharedDtor(MessageLite& self) {
  CoordinateIndex& this_ = static_cast<CoordinateIndex&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.layer_id_.Destroy();
  this_._impl_.hyphen_id_.Destroy();
  this_._impl_.branch_id_.Destroy();
  this_._impl_.parent_hyphen_.Destroy();
  this_._impl_.version_.Destroy();
  this_._impl_.last_modified_.Destroy();
  this_._impl_.geographic_location_.Destroy();
  this_._impl_.active_period_.Destroy();
  this_._impl_.role_description_.Destroy();
  this_._impl_.~Impl_();
}

inline void* CoordinateIndex::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CoordinateIndex(arena);
}
constexpr auto CoordinateIndex::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_.connected_hyphens_) +
          decltype(CoordinateIndex::_impl_.connected_hyphens_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_.flags_) +
          decltype(CoordinateIndex::_impl_.flags_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_.metadata_) +
          decltype(CoordinateIndex::_impl_.metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_.metadata_) +
          decltype(CoordinateIndex::_impl_.metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_.geo_boundaries_) +
          decltype(CoordinateIndex::_impl_.geo_boundaries_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(CoordinateIndex), alignof(CoordinateIndex), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CoordinateIndex::PlacementNew_,
                                 sizeof(CoordinateIndex),
                                 alignof(CoordinateIndex));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CoordinateIndex::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CoordinateIndex_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CoordinateIndex::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CoordinateIndex>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CoordinateIndex::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CoordinateIndex>(), &CoordinateIndex::ByteSizeLong,
            &CoordinateIndex::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_._cached_size_),
        false,
    },
    &CoordinateIndex::kDescriptorMethods,
    &descriptor_table_coordinate_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CoordinateIndex::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 17, 1, 203, 2> CoordinateIndex::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    17, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294836224,  // skipmap
    offsetof(decltype(_table_), field_entries),
    17,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::coordinate::CoordinateIndex>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .seigr.coordinate.CoordinateRelationType relation_type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CoordinateIndex, _impl_.relation_type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_.relation_type_)}},
    // string layer_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_.layer_id_)}},
    // .seigr.coordinate.LayerType layer_type = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CoordinateIndex, _impl_.layer_type_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_.layer_type_)}},
    // string hyphen_id = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_.hyphen_id_)}},
    // string branch_id = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_.branch_id_)}},
    // int32 depth_level = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CoordinateIndex, _impl_.depth_level_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_.depth_level_)}},
    // repeated string connected_hyphens = 7;
    {::_pbi::TcParser::FastUR1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_.connected_hyphens_)}},
    // float path_weight = 8;
    {::_pbi::TcParser::FastF32S1,
     {69, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_.path_weight_)}},
    // string parent_hyphen = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_.parent_hyphen_)}},
    // repeated .seigr.coordinate.CoordinateFlag flags = 10;
    {::_pbi::TcParser::FastV32P1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_.flags_)}},
    // string version = 11;
    {::_pbi::TcParser::FastUS1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_.version_)}},
    // string last_modified = 12;
    {::_pbi::TcParser::FastUS1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_.last_modified_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string geographic_location = 14;
    {::_pbi::TcParser::FastUS1,
     {114, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_.geographic_location_)}},
    // string active_period = 15;
    {::_pbi::TcParser::FastUS1,
     {122, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_.active_period_)}},
    // repeated string geo_boundaries = 16;
    {::_pbi::TcParser::FastUR2,
     {386, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_.geo_boundaries_)}},
    // string role_description = 17;
    {::_pbi::TcParser::FastUS2,
     {394, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_.role_description_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .seigr.coordinate.CoordinateRelationType relation_type = 1;
    {PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_.relation_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string layer_id = 2;
    {PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_.layer_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.coordinate.LayerType layer_type = 3;
    {PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_.layer_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string hyphen_id = 4;
    {PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_.hyphen_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string branch_id = 5;
    {PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_.branch_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 depth_level = 6;
    {PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_.depth_level_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated string connected_hyphens = 7;
    {PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_.connected_hyphens_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // float path_weight = 8;
    {PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_.path_weight_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // string parent_hyphen = 9;
    {PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_.parent_hyphen_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .seigr.coordinate.CoordinateFlag flags = 10;
    {PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_.flags_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // string version = 11;
    {PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_.version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string last_modified = 12;
    {PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_.last_modified_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> metadata = 13;
    {PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_.metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string geographic_location = 14;
    {PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_.geographic_location_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string active_period = 15;
    {PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_.active_period_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string geo_boundaries = 16;
    {PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_.geo_boundaries_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // string role_description = 17;
    {PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_.role_description_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(CoordinateIndex()._impl_.metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\40\0\10\0\11\11\0\21\0\15\0\7\15\10\23\15\16\20\0\0\0\0\0\0"
    "seigr.coordinate.CoordinateIndex"
    "layer_id"
    "hyphen_id"
    "branch_id"
    "connected_hyphens"
    "parent_hyphen"
    "version"
    "last_modified"
    "metadata"
    "geographic_location"
    "active_period"
    "geo_boundaries"
    "role_description"
  }},
};

PROTOBUF_NOINLINE void CoordinateIndex::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.coordinate.CoordinateIndex)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.connected_hyphens_.Clear();
  _impl_.flags_.Clear();
  _impl_.metadata_.Clear();
  _impl_.geo_boundaries_.Clear();
  _impl_.layer_id_.ClearToEmpty();
  _impl_.hyphen_id_.ClearToEmpty();
  _impl_.branch_id_.ClearToEmpty();
  _impl_.parent_hyphen_.ClearToEmpty();
  _impl_.version_.ClearToEmpty();
  _impl_.last_modified_.ClearToEmpty();
  _impl_.geographic_location_.ClearToEmpty();
  _impl_.active_period_.ClearToEmpty();
  _impl_.role_description_.ClearToEmpty();
  ::memset(&_impl_.relation_type_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.path_weight_) -
      reinterpret_cast<char*>(&_impl_.relation_type_)) + sizeof(_impl_.path_weight_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CoordinateIndex::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CoordinateIndex& this_ = static_cast<const CoordinateIndex&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CoordinateIndex::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CoordinateIndex& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.coordinate.CoordinateIndex)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .seigr.coordinate.CoordinateRelationType relation_type = 1;
          if (this_._internal_relation_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_relation_type(), target);
          }

          // string layer_id = 2;
          if (!this_._internal_layer_id().empty()) {
            const std::string& _s = this_._internal_layer_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.coordinate.CoordinateIndex.layer_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // .seigr.coordinate.LayerType layer_type = 3;
          if (this_._internal_layer_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_layer_type(), target);
          }

          // string hyphen_id = 4;
          if (!this_._internal_hyphen_id().empty()) {
            const std::string& _s = this_._internal_hyphen_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.coordinate.CoordinateIndex.hyphen_id");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string branch_id = 5;
          if (!this_._internal_branch_id().empty()) {
            const std::string& _s = this_._internal_branch_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.coordinate.CoordinateIndex.branch_id");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // int32 depth_level = 6;
          if (this_._internal_depth_level() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<6>(
                    stream, this_._internal_depth_level(), target);
          }

          // repeated string connected_hyphens = 7;
          for (int i = 0, n = this_._internal_connected_hyphens_size(); i < n; ++i) {
            const auto& s = this_._internal_connected_hyphens().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.coordinate.CoordinateIndex.connected_hyphens");
            target = stream->WriteString(7, s, target);
          }

          // float path_weight = 8;
          if (::absl::bit_cast<::uint32_t>(this_._internal_path_weight()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                8, this_._internal_path_weight(), target);
          }

          // string parent_hyphen = 9;
          if (!this_._internal_parent_hyphen().empty()) {
            const std::string& _s = this_._internal_parent_hyphen();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.coordinate.CoordinateIndex.parent_hyphen");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          // repeated .seigr.coordinate.CoordinateFlag flags = 10;
          {
            std::size_t byte_size =
                                              this_._impl_._flags_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteEnumPacked(
                  10, this_._internal_flags(), byte_size, target);
            }
          }

          // string version = 11;
          if (!this_._internal_version().empty()) {
            const std::string& _s = this_._internal_version();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.coordinate.CoordinateIndex.version");
            target = stream->WriteStringMaybeAliased(11, _s, target);
          }

          // string last_modified = 12;
          if (!this_._internal_last_modified().empty()) {
            const std::string& _s = this_._internal_last_modified();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.coordinate.CoordinateIndex.last_modified");
            target = stream->WriteStringMaybeAliased(12, _s, target);
          }

          // map<string, string> metadata = 13;
          if (!this_._internal_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    13, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.coordinate.CoordinateIndex.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.coordinate.CoordinateIndex.metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    13, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.coordinate.CoordinateIndex.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.coordinate.CoordinateIndex.metadata");
              }
            }
          }

          // string geographic_location = 14;
          if (!this_._internal_geographic_location().empty()) {
            const std::string& _s = this_._internal_geographic_location();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.coordinate.CoordinateIndex.geographic_location");
            target = stream->WriteStringMaybeAliased(14, _s, target);
          }

          // string active_period = 15;
          if (!this_._internal_active_period().empty()) {
            const std::string& _s = this_._internal_active_period();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.coordinate.CoordinateIndex.active_period");
            target = stream->WriteStringMaybeAliased(15, _s, target);
          }

          // repeated string geo_boundaries = 16;
          for (int i = 0, n = this_._internal_geo_boundaries_size(); i < n; ++i) {
            const auto& s = this_._internal_geo_boundaries().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.coordinate.CoordinateIndex.geo_boundaries");
            target = stream->WriteString(16, s, target);
          }

          // string role_description = 17;
          if (!this_._internal_role_description().empty()) {
            const std::string& _s = this_._internal_role_description();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.coordinate.CoordinateIndex.role_description");
            target = stream->WriteStringMaybeAliased(17, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.coordinate.CoordinateIndex)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CoordinateIndex::ByteSizeLong(const MessageLite& base) {
          const CoordinateIndex& this_ = static_cast<const CoordinateIndex&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CoordinateIndex::ByteSizeLong() const {
          const CoordinateIndex& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.coordinate.CoordinateIndex)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string connected_hyphens = 7;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_connected_hyphens().size());
              for (int i = 0, n = this_._internal_connected_hyphens().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_connected_hyphens().Get(i));
              }
            }
            // repeated .seigr.coordinate.CoordinateFlag flags = 10;
            {
              total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
                  this_._internal_flags(), 1, this_._impl_._flags_cached_byte_size_);
            }
            // map<string, string> metadata = 13;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_metadata_size());
              for (const auto& entry : this_._internal_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // repeated string geo_boundaries = 16;
            {
              total_size +=
                  2 * ::google::protobuf::internal::FromIntSize(this_._internal_geo_boundaries().size());
              for (int i = 0, n = this_._internal_geo_boundaries().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_geo_boundaries().Get(i));
              }
            }
          }
           {
            // string layer_id = 2;
            if (!this_._internal_layer_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_layer_id());
            }
            // string hyphen_id = 4;
            if (!this_._internal_hyphen_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_hyphen_id());
            }
            // string branch_id = 5;
            if (!this_._internal_branch_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_branch_id());
            }
            // string parent_hyphen = 9;
            if (!this_._internal_parent_hyphen().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_parent_hyphen());
            }
            // string version = 11;
            if (!this_._internal_version().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_version());
            }
            // string last_modified = 12;
            if (!this_._internal_last_modified().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_last_modified());
            }
            // string geographic_location = 14;
            if (!this_._internal_geographic_location().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_geographic_location());
            }
            // string active_period = 15;
            if (!this_._internal_active_period().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_active_period());
            }
            // string role_description = 17;
            if (!this_._internal_role_description().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_role_description());
            }
            // .seigr.coordinate.CoordinateRelationType relation_type = 1;
            if (this_._internal_relation_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_relation_type());
            }
            // .seigr.coordinate.LayerType layer_type = 3;
            if (this_._internal_layer_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_layer_type());
            }
            // int32 depth_level = 6;
            if (this_._internal_depth_level() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_depth_level());
            }
            // float path_weight = 8;
            if (::absl::bit_cast<::uint32_t>(this_._internal_path_weight()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CoordinateIndex::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CoordinateIndex*>(&to_msg);
  auto& from = static_cast<const CoordinateIndex&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.coordinate.CoordinateIndex)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_connected_hyphens()->MergeFrom(from._internal_connected_hyphens());
  _this->_internal_mutable_flags()->MergeFrom(from._internal_flags());
  _this->_impl_.metadata_.MergeFrom(from._impl_.metadata_);
  _this->_internal_mutable_geo_boundaries()->MergeFrom(from._internal_geo_boundaries());
  if (!from._internal_layer_id().empty()) {
    _this->_internal_set_layer_id(from._internal_layer_id());
  }
  if (!from._internal_hyphen_id().empty()) {
    _this->_internal_set_hyphen_id(from._internal_hyphen_id());
  }
  if (!from._internal_branch_id().empty()) {
    _this->_internal_set_branch_id(from._internal_branch_id());
  }
  if (!from._internal_parent_hyphen().empty()) {
    _this->_internal_set_parent_hyphen(from._internal_parent_hyphen());
  }
  if (!from._internal_version().empty()) {
    _this->_internal_set_version(from._internal_version());
  }
  if (!from._internal_last_modified().empty()) {
    _this->_internal_set_last_modified(from._internal_last_modified());
  }
  if (!from._internal_geographic_location().empty()) {
    _this->_internal_set_geographic_location(from._internal_geographic_location());
  }
  if (!from._internal_active_period().empty()) {
    _this->_internal_set_active_period(from._internal_active_period());
  }
  if (!from._internal_role_description().empty()) {
    _this->_internal_set_role_description(from._internal_role_description());
  }
  if (from._internal_relation_type() != 0) {
    _this->_impl_.relation_type_ = from._impl_.relation_type_;
  }
  if (from._internal_layer_type() != 0) {
    _this->_impl_.layer_type_ = from._impl_.layer_type_;
  }
  if (from._internal_depth_level() != 0) {
    _this->_impl_.depth_level_ = from._impl_.depth_level_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_path_weight()) != 0) {
    _this->_impl_.path_weight_ = from._impl_.path_weight_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CoordinateIndex::CopyFrom(const CoordinateIndex& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.coordinate.CoordinateIndex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CoordinateIndex::InternalSwap(CoordinateIndex* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.connected_hyphens_.InternalSwap(&other->_impl_.connected_hyphens_);
  _impl_.flags_.InternalSwap(&other->_impl_.flags_);
  _impl_.metadata_.InternalSwap(&other->_impl_.metadata_);
  _impl_.geo_boundaries_.InternalSwap(&other->_impl_.geo_boundaries_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.layer_id_, &other->_impl_.layer_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hyphen_id_, &other->_impl_.hyphen_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.branch_id_, &other->_impl_.branch_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.parent_hyphen_, &other->_impl_.parent_hyphen_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.version_, &other->_impl_.version_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.last_modified_, &other->_impl_.last_modified_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.geographic_location_, &other->_impl_.geographic_location_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.active_period_, &other->_impl_.active_period_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.role_description_, &other->_impl_.role_description_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_.path_weight_)
      + sizeof(CoordinateIndex::_impl_.path_weight_)
      - PROTOBUF_FIELD_OFFSET(CoordinateIndex, _impl_.relation_type_)>(
          reinterpret_cast<char*>(&_impl_.relation_type_),
          reinterpret_cast<char*>(&other->_impl_.relation_type_));
}

::google::protobuf::Metadata CoordinateIndex::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              CoordinatePath_MetadataEntry_DoNotUse::CoordinatePath_MetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              CoordinatePath_MetadataEntry_DoNotUse::CoordinatePath_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              CoordinatePath_MetadataEntry_DoNotUse::CoordinatePath_MetadataEntry_DoNotUse() : SuperType() {}
              CoordinatePath_MetadataEntry_DoNotUse::CoordinatePath_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* CoordinatePath_MetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) CoordinatePath_MetadataEntry_DoNotUse(arena);
              }
              constexpr auto CoordinatePath_MetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CoordinatePath_MetadataEntry_DoNotUse),
                                                          alignof(CoordinatePath_MetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull CoordinatePath_MetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_CoordinatePath_MetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &CoordinatePath_MetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<CoordinatePath_MetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &CoordinatePath_MetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &CoordinatePath_MetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(CoordinatePath_MetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &CoordinatePath_MetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_coordinate_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* CoordinatePath_MetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 62, 2> CoordinatePath_MetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CoordinatePath_MetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::coordinate::CoordinatePath_MetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinatePath_MetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinatePath_MetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(CoordinatePath_MetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(CoordinatePath_MetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\55\3\5\0\0\0\0\0"
    "seigr.coordinate.CoordinatePath.MetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class CoordinatePath::_Internal {
 public:
};

CoordinatePath::CoordinatePath(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.coordinate.CoordinatePath)
}
inline PROTOBUF_NDEBUG_INLINE CoordinatePath::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::coordinate::CoordinatePath& from_msg)
      : intermediate_hyphens_{visibility, arena, from.intermediate_hyphens_},
        metadata_{visibility, arena, from.metadata_},
        start_hyphen_(arena, from.start_hyphen_),
        end_hyphen_(arena, from.end_hyphen_),
        direction_(arena, from.direction_),
        time_constraint_(arena, from.time_constraint_),
        backup_path_id_(arena, from.backup_path_id_),
        latency_constraint_(arena, from.latency_constraint_),
        _cached_size_{0} {}

CoordinatePath::CoordinatePath(
    ::google::protobuf::Arena* arena,
    const CoordinatePath& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CoordinatePath* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_weight_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, total_weight_),
           offsetof(Impl_, load_threshold_) -
               offsetof(Impl_, total_weight_) +
               sizeof(Impl_::load_threshold_));

  // @@protoc_insertion_point(copy_constructor:seigr.coordinate.CoordinatePath)
}
inline PROTOBUF_NDEBUG_INLINE CoordinatePath::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : intermediate_hyphens_{visibility, arena},
        metadata_{visibility, arena},
        start_hyphen_(arena),
        end_hyphen_(arena),
        direction_(arena),
        time_constraint_(arena),
        backup_path_id_(arena),
        latency_constraint_(arena),
        _cached_size_{0} {}

inline void CoordinatePath::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_weight_),
           0,
           offsetof(Impl_, load_threshold_) -
               offsetof(Impl_, total_weight_) +
               sizeof(Impl_::load_threshold_));
}
CoordinatePath::~CoordinatePath() {
  // @@protoc_insertion_point(destructor:seigr.coordinate.CoordinatePath)
  SharedDtor(*this);
}
inline void CoordinatePath::SharedDtor(MessageLite& self) {
  CoordinatePath& this_ = static_cast<CoordinatePath&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.start_hyphen_.Destroy();
  this_._impl_.end_hyphen_.Destroy();
  this_._impl_.direction_.Destroy();
  this_._impl_.time_constraint_.Destroy();
  this_._impl_.backup_path_id_.Destroy();
  this_._impl_.latency_constraint_.Destroy();
  this_._impl_.~Impl_();
}

inline void* CoordinatePath::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CoordinatePath(arena);
}
constexpr auto CoordinatePath::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CoordinatePath, _impl_.intermediate_hyphens_) +
          decltype(CoordinatePath::_impl_.intermediate_hyphens_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CoordinatePath, _impl_.metadata_) +
          decltype(CoordinatePath::_impl_.metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CoordinatePath, _impl_.metadata_) +
          decltype(CoordinatePath::_impl_.metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(CoordinatePath), alignof(CoordinatePath), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CoordinatePath::PlacementNew_,
                                 sizeof(CoordinatePath),
                                 alignof(CoordinatePath));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CoordinatePath::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CoordinatePath_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CoordinatePath::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CoordinatePath>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CoordinatePath::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CoordinatePath>(), &CoordinatePath::ByteSizeLong,
            &CoordinatePath::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CoordinatePath, _impl_._cached_size_),
        false,
    },
    &CoordinatePath::kDescriptorMethods,
    &descriptor_table_coordinate_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CoordinatePath::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 12, 1, 154, 2> CoordinatePath::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    12, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963200,  // skipmap
    offsetof(decltype(_table_), field_entries),
    12,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::coordinate::CoordinatePath>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string start_hyphen = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinatePath, _impl_.start_hyphen_)}},
    // string end_hyphen = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinatePath, _impl_.end_hyphen_)}},
    // repeated string intermediate_hyphens = 3;
    {::_pbi::TcParser::FastUR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinatePath, _impl_.intermediate_hyphens_)}},
    // float total_weight = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinatePath, _impl_.total_weight_)}},
    // .seigr.coordinate.CoordinateRelationType path_type = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CoordinatePath, _impl_.path_type_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinatePath, _impl_.path_type_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string direction = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinatePath, _impl_.direction_)}},
    // string time_constraint = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinatePath, _impl_.time_constraint_)}},
    // float directional_strength = 9;
    {::_pbi::TcParser::FastF32S1,
     {77, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinatePath, _impl_.directional_strength_)}},
    // int32 load_threshold = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CoordinatePath, _impl_.load_threshold_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinatePath, _impl_.load_threshold_)}},
    // string backup_path_id = 11;
    {::_pbi::TcParser::FastUS1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinatePath, _impl_.backup_path_id_)}},
    // string latency_constraint = 12;
    {::_pbi::TcParser::FastUS1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinatePath, _impl_.latency_constraint_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string start_hyphen = 1;
    {PROTOBUF_FIELD_OFFSET(CoordinatePath, _impl_.start_hyphen_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string end_hyphen = 2;
    {PROTOBUF_FIELD_OFFSET(CoordinatePath, _impl_.end_hyphen_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string intermediate_hyphens = 3;
    {PROTOBUF_FIELD_OFFSET(CoordinatePath, _impl_.intermediate_hyphens_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // float total_weight = 4;
    {PROTOBUF_FIELD_OFFSET(CoordinatePath, _impl_.total_weight_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // .seigr.coordinate.CoordinateRelationType path_type = 5;
    {PROTOBUF_FIELD_OFFSET(CoordinatePath, _impl_.path_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // map<string, string> metadata = 6;
    {PROTOBUF_FIELD_OFFSET(CoordinatePath, _impl_.metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string direction = 7;
    {PROTOBUF_FIELD_OFFSET(CoordinatePath, _impl_.direction_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string time_constraint = 8;
    {PROTOBUF_FIELD_OFFSET(CoordinatePath, _impl_.time_constraint_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // float directional_strength = 9;
    {PROTOBUF_FIELD_OFFSET(CoordinatePath, _impl_.directional_strength_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // int32 load_threshold = 10;
    {PROTOBUF_FIELD_OFFSET(CoordinatePath, _impl_.load_threshold_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string backup_path_id = 11;
    {PROTOBUF_FIELD_OFFSET(CoordinatePath, _impl_.backup_path_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string latency_constraint = 12;
    {PROTOBUF_FIELD_OFFSET(CoordinatePath, _impl_.latency_constraint_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(CoordinatePath()._impl_.metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\37\14\12\24\0\0\10\11\17\0\0\16\22\0\0\0"
    "seigr.coordinate.CoordinatePath"
    "start_hyphen"
    "end_hyphen"
    "intermediate_hyphens"
    "metadata"
    "direction"
    "time_constraint"
    "backup_path_id"
    "latency_constraint"
  }},
};

PROTOBUF_NOINLINE void CoordinatePath::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.coordinate.CoordinatePath)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.intermediate_hyphens_.Clear();
  _impl_.metadata_.Clear();
  _impl_.start_hyphen_.ClearToEmpty();
  _impl_.end_hyphen_.ClearToEmpty();
  _impl_.direction_.ClearToEmpty();
  _impl_.time_constraint_.ClearToEmpty();
  _impl_.backup_path_id_.ClearToEmpty();
  _impl_.latency_constraint_.ClearToEmpty();
  ::memset(&_impl_.total_weight_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.load_threshold_) -
      reinterpret_cast<char*>(&_impl_.total_weight_)) + sizeof(_impl_.load_threshold_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CoordinatePath::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CoordinatePath& this_ = static_cast<const CoordinatePath&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CoordinatePath::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CoordinatePath& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.coordinate.CoordinatePath)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string start_hyphen = 1;
          if (!this_._internal_start_hyphen().empty()) {
            const std::string& _s = this_._internal_start_hyphen();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.coordinate.CoordinatePath.start_hyphen");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string end_hyphen = 2;
          if (!this_._internal_end_hyphen().empty()) {
            const std::string& _s = this_._internal_end_hyphen();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.coordinate.CoordinatePath.end_hyphen");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // repeated string intermediate_hyphens = 3;
          for (int i = 0, n = this_._internal_intermediate_hyphens_size(); i < n; ++i) {
            const auto& s = this_._internal_intermediate_hyphens().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.coordinate.CoordinatePath.intermediate_hyphens");
            target = stream->WriteString(3, s, target);
          }

          // float total_weight = 4;
          if (::absl::bit_cast<::uint32_t>(this_._internal_total_weight()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                4, this_._internal_total_weight(), target);
          }

          // .seigr.coordinate.CoordinateRelationType path_type = 5;
          if (this_._internal_path_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                5, this_._internal_path_type(), target);
          }

          // map<string, string> metadata = 6;
          if (!this_._internal_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.coordinate.CoordinatePath.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.coordinate.CoordinatePath.metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.coordinate.CoordinatePath.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.coordinate.CoordinatePath.metadata");
              }
            }
          }

          // string direction = 7;
          if (!this_._internal_direction().empty()) {
            const std::string& _s = this_._internal_direction();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.coordinate.CoordinatePath.direction");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // string time_constraint = 8;
          if (!this_._internal_time_constraint().empty()) {
            const std::string& _s = this_._internal_time_constraint();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.coordinate.CoordinatePath.time_constraint");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          // float directional_strength = 9;
          if (::absl::bit_cast<::uint32_t>(this_._internal_directional_strength()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                9, this_._internal_directional_strength(), target);
          }

          // int32 load_threshold = 10;
          if (this_._internal_load_threshold() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<10>(
                    stream, this_._internal_load_threshold(), target);
          }

          // string backup_path_id = 11;
          if (!this_._internal_backup_path_id().empty()) {
            const std::string& _s = this_._internal_backup_path_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.coordinate.CoordinatePath.backup_path_id");
            target = stream->WriteStringMaybeAliased(11, _s, target);
          }

          // string latency_constraint = 12;
          if (!this_._internal_latency_constraint().empty()) {
            const std::string& _s = this_._internal_latency_constraint();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.coordinate.CoordinatePath.latency_constraint");
            target = stream->WriteStringMaybeAliased(12, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.coordinate.CoordinatePath)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CoordinatePath::ByteSizeLong(const MessageLite& base) {
          const CoordinatePath& this_ = static_cast<const CoordinatePath&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CoordinatePath::ByteSizeLong() const {
          const CoordinatePath& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.coordinate.CoordinatePath)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string intermediate_hyphens = 3;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_intermediate_hyphens().size());
              for (int i = 0, n = this_._internal_intermediate_hyphens().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_intermediate_hyphens().Get(i));
              }
            }
            // map<string, string> metadata = 6;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_metadata_size());
              for (const auto& entry : this_._internal_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string start_hyphen = 1;
            if (!this_._internal_start_hyphen().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_start_hyphen());
            }
            // string end_hyphen = 2;
            if (!this_._internal_end_hyphen().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_end_hyphen());
            }
            // string direction = 7;
            if (!this_._internal_direction().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_direction());
            }
            // string time_constraint = 8;
            if (!this_._internal_time_constraint().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_time_constraint());
            }
            // string backup_path_id = 11;
            if (!this_._internal_backup_path_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_backup_path_id());
            }
            // string latency_constraint = 12;
            if (!this_._internal_latency_constraint().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_latency_constraint());
            }
            // float total_weight = 4;
            if (::absl::bit_cast<::uint32_t>(this_._internal_total_weight()) != 0) {
              total_size += 5;
            }
            // .seigr.coordinate.CoordinateRelationType path_type = 5;
            if (this_._internal_path_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_path_type());
            }
            // float directional_strength = 9;
            if (::absl::bit_cast<::uint32_t>(this_._internal_directional_strength()) != 0) {
              total_size += 5;
            }
            // int32 load_threshold = 10;
            if (this_._internal_load_threshold() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_load_threshold());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CoordinatePath::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CoordinatePath*>(&to_msg);
  auto& from = static_cast<const CoordinatePath&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.coordinate.CoordinatePath)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_intermediate_hyphens()->MergeFrom(from._internal_intermediate_hyphens());
  _this->_impl_.metadata_.MergeFrom(from._impl_.metadata_);
  if (!from._internal_start_hyphen().empty()) {
    _this->_internal_set_start_hyphen(from._internal_start_hyphen());
  }
  if (!from._internal_end_hyphen().empty()) {
    _this->_internal_set_end_hyphen(from._internal_end_hyphen());
  }
  if (!from._internal_direction().empty()) {
    _this->_internal_set_direction(from._internal_direction());
  }
  if (!from._internal_time_constraint().empty()) {
    _this->_internal_set_time_constraint(from._internal_time_constraint());
  }
  if (!from._internal_backup_path_id().empty()) {
    _this->_internal_set_backup_path_id(from._internal_backup_path_id());
  }
  if (!from._internal_latency_constraint().empty()) {
    _this->_internal_set_latency_constraint(from._internal_latency_constraint());
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_total_weight()) != 0) {
    _this->_impl_.total_weight_ = from._impl_.total_weight_;
  }
  if (from._internal_path_type() != 0) {
    _this->_impl_.path_type_ = from._impl_.path_type_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_directional_strength()) != 0) {
    _this->_impl_.directional_strength_ = from._impl_.directional_strength_;
  }
  if (from._internal_load_threshold() != 0) {
    _this->_impl_.load_threshold_ = from._impl_.load_threshold_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CoordinatePath::CopyFrom(const CoordinatePath& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.coordinate.CoordinatePath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CoordinatePath::InternalSwap(CoordinatePath* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.intermediate_hyphens_.InternalSwap(&other->_impl_.intermediate_hyphens_);
  _impl_.metadata_.InternalSwap(&other->_impl_.metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.start_hyphen_, &other->_impl_.start_hyphen_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.end_hyphen_, &other->_impl_.end_hyphen_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.direction_, &other->_impl_.direction_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.time_constraint_, &other->_impl_.time_constraint_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.backup_path_id_, &other->_impl_.backup_path_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.latency_constraint_, &other->_impl_.latency_constraint_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CoordinatePath, _impl_.load_threshold_)
      + sizeof(CoordinatePath::_impl_.load_threshold_)
      - PROTOBUF_FIELD_OFFSET(CoordinatePath, _impl_.total_weight_)>(
          reinterpret_cast<char*>(&_impl_.total_weight_),
          reinterpret_cast<char*>(&other->_impl_.total_weight_));
}

::google::protobuf::Metadata CoordinatePath::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              CoordinateRule_MetadataEntry_DoNotUse::CoordinateRule_MetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              CoordinateRule_MetadataEntry_DoNotUse::CoordinateRule_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              CoordinateRule_MetadataEntry_DoNotUse::CoordinateRule_MetadataEntry_DoNotUse() : SuperType() {}
              CoordinateRule_MetadataEntry_DoNotUse::CoordinateRule_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* CoordinateRule_MetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) CoordinateRule_MetadataEntry_DoNotUse(arena);
              }
              constexpr auto CoordinateRule_MetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CoordinateRule_MetadataEntry_DoNotUse),
                                                          alignof(CoordinateRule_MetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull CoordinateRule_MetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_CoordinateRule_MetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &CoordinateRule_MetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<CoordinateRule_MetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &CoordinateRule_MetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &CoordinateRule_MetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(CoordinateRule_MetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &CoordinateRule_MetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_coordinate_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* CoordinateRule_MetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 62, 2> CoordinateRule_MetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CoordinateRule_MetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::coordinate::CoordinateRule_MetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinateRule_MetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinateRule_MetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(CoordinateRule_MetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(CoordinateRule_MetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\55\3\5\0\0\0\0\0"
    "seigr.coordinate.CoordinateRule.MetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class CoordinateRule::_Internal {
 public:
};

CoordinateRule::CoordinateRule(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.coordinate.CoordinateRule)
}
inline PROTOBUF_NDEBUG_INLINE CoordinateRule::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::coordinate::CoordinateRule& from_msg)
      : applicable_flags_{visibility, arena, from.applicable_flags_},
        _applicable_flags_cached_byte_size_{0},
        metadata_{visibility, arena, from.metadata_},
        rule_id_(arena, from.rule_id_),
        rule_name_(arena, from.rule_name_),
        description_(arena, from.description_),
        creation_timestamp_(arena, from.creation_timestamp_),
        updated_timestamp_(arena, from.updated_timestamp_),
        _cached_size_{0} {}

CoordinateRule::CoordinateRule(
    ::google::protobuf::Arena* arena,
    const CoordinateRule& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CoordinateRule* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, target_layer_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, target_layer_),
           offsetof(Impl_, is_mandatory_) -
               offsetof(Impl_, target_layer_) +
               sizeof(Impl_::is_mandatory_));

  // @@protoc_insertion_point(copy_constructor:seigr.coordinate.CoordinateRule)
}
inline PROTOBUF_NDEBUG_INLINE CoordinateRule::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : applicable_flags_{visibility, arena},
        _applicable_flags_cached_byte_size_{0},
        metadata_{visibility, arena},
        rule_id_(arena),
        rule_name_(arena),
        description_(arena),
        creation_timestamp_(arena),
        updated_timestamp_(arena),
        _cached_size_{0} {}

inline void CoordinateRule::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, target_layer_),
           0,
           offsetof(Impl_, is_mandatory_) -
               offsetof(Impl_, target_layer_) +
               sizeof(Impl_::is_mandatory_));
}
CoordinateRule::~CoordinateRule() {
  // @@protoc_insertion_point(destructor:seigr.coordinate.CoordinateRule)
  SharedDtor(*this);
}
inline void CoordinateRule::SharedDtor(MessageLite& self) {
  CoordinateRule& this_ = static_cast<CoordinateRule&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.rule_id_.Destroy();
  this_._impl_.rule_name_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.creation_timestamp_.Destroy();
  this_._impl_.updated_timestamp_.Destroy();
  this_._impl_.~Impl_();
}

inline void* CoordinateRule::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CoordinateRule(arena);
}
constexpr auto CoordinateRule::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CoordinateRule, _impl_.applicable_flags_) +
          decltype(CoordinateRule::_impl_.applicable_flags_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CoordinateRule, _impl_.metadata_) +
          decltype(CoordinateRule::_impl_.metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CoordinateRule, _impl_.metadata_) +
          decltype(CoordinateRule::_impl_.metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(CoordinateRule), alignof(CoordinateRule), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CoordinateRule::PlacementNew_,
                                 sizeof(CoordinateRule),
                                 alignof(CoordinateRule));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CoordinateRule::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CoordinateRule_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CoordinateRule::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CoordinateRule>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CoordinateRule::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CoordinateRule>(), &CoordinateRule::ByteSizeLong,
            &CoordinateRule::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CoordinateRule, _impl_._cached_size_),
        false,
    },
    &CoordinateRule::kDescriptorMethods,
    &descriptor_table_coordinate_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CoordinateRule::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 1, 118, 2> CoordinateRule::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::coordinate::CoordinateRule>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string rule_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinateRule, _impl_.rule_id_)}},
    // string rule_name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinateRule, _impl_.rule_name_)}},
    // string description = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinateRule, _impl_.description_)}},
    // repeated .seigr.coordinate.CoordinateFlag applicable_flags = 4;
    {::_pbi::TcParser::FastV32P1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinateRule, _impl_.applicable_flags_)}},
    // .seigr.coordinate.LayerType target_layer = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CoordinateRule, _impl_.target_layer_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinateRule, _impl_.target_layer_)}},
    // .seigr.coordinate.CoordinateRelationType relation_type = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CoordinateRule, _impl_.relation_type_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinateRule, _impl_.relation_type_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // bool is_mandatory = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CoordinateRule, _impl_.is_mandatory_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinateRule, _impl_.is_mandatory_)}},
    // string creation_timestamp = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinateRule, _impl_.creation_timestamp_)}},
    // string updated_timestamp = 10;
    {::_pbi::TcParser::FastUS1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinateRule, _impl_.updated_timestamp_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string rule_id = 1;
    {PROTOBUF_FIELD_OFFSET(CoordinateRule, _impl_.rule_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string rule_name = 2;
    {PROTOBUF_FIELD_OFFSET(CoordinateRule, _impl_.rule_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 3;
    {PROTOBUF_FIELD_OFFSET(CoordinateRule, _impl_.description_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .seigr.coordinate.CoordinateFlag applicable_flags = 4;
    {PROTOBUF_FIELD_OFFSET(CoordinateRule, _impl_.applicable_flags_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // .seigr.coordinate.LayerType target_layer = 5;
    {PROTOBUF_FIELD_OFFSET(CoordinateRule, _impl_.target_layer_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .seigr.coordinate.CoordinateRelationType relation_type = 6;
    {PROTOBUF_FIELD_OFFSET(CoordinateRule, _impl_.relation_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // map<string, string> metadata = 7;
    {PROTOBUF_FIELD_OFFSET(CoordinateRule, _impl_.metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // bool is_mandatory = 8;
    {PROTOBUF_FIELD_OFFSET(CoordinateRule, _impl_.is_mandatory_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string creation_timestamp = 9;
    {PROTOBUF_FIELD_OFFSET(CoordinateRule, _impl_.creation_timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string updated_timestamp = 10;
    {PROTOBUF_FIELD_OFFSET(CoordinateRule, _impl_.updated_timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(CoordinateRule()._impl_.metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\37\7\11\13\0\0\0\10\0\22\21\0\0\0\0\0"
    "seigr.coordinate.CoordinateRule"
    "rule_id"
    "rule_name"
    "description"
    "metadata"
    "creation_timestamp"
    "updated_timestamp"
  }},
};

PROTOBUF_NOINLINE void CoordinateRule::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.coordinate.CoordinateRule)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.applicable_flags_.Clear();
  _impl_.metadata_.Clear();
  _impl_.rule_id_.ClearToEmpty();
  _impl_.rule_name_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _impl_.creation_timestamp_.ClearToEmpty();
  _impl_.updated_timestamp_.ClearToEmpty();
  ::memset(&_impl_.target_layer_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.is_mandatory_) -
      reinterpret_cast<char*>(&_impl_.target_layer_)) + sizeof(_impl_.is_mandatory_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CoordinateRule::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CoordinateRule& this_ = static_cast<const CoordinateRule&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CoordinateRule::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CoordinateRule& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.coordinate.CoordinateRule)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string rule_id = 1;
          if (!this_._internal_rule_id().empty()) {
            const std::string& _s = this_._internal_rule_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.coordinate.CoordinateRule.rule_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string rule_name = 2;
          if (!this_._internal_rule_name().empty()) {
            const std::string& _s = this_._internal_rule_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.coordinate.CoordinateRule.rule_name");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string description = 3;
          if (!this_._internal_description().empty()) {
            const std::string& _s = this_._internal_description();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.coordinate.CoordinateRule.description");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // repeated .seigr.coordinate.CoordinateFlag applicable_flags = 4;
          {
            std::size_t byte_size =
                                              this_._impl_._applicable_flags_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteEnumPacked(
                  4, this_._internal_applicable_flags(), byte_size, target);
            }
          }

          // .seigr.coordinate.LayerType target_layer = 5;
          if (this_._internal_target_layer() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                5, this_._internal_target_layer(), target);
          }

          // .seigr.coordinate.CoordinateRelationType relation_type = 6;
          if (this_._internal_relation_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                6, this_._internal_relation_type(), target);
          }

          // map<string, string> metadata = 7;
          if (!this_._internal_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.coordinate.CoordinateRule.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.coordinate.CoordinateRule.metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.coordinate.CoordinateRule.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.coordinate.CoordinateRule.metadata");
              }
            }
          }

          // bool is_mandatory = 8;
          if (this_._internal_is_mandatory() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                8, this_._internal_is_mandatory(), target);
          }

          // string creation_timestamp = 9;
          if (!this_._internal_creation_timestamp().empty()) {
            const std::string& _s = this_._internal_creation_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.coordinate.CoordinateRule.creation_timestamp");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          // string updated_timestamp = 10;
          if (!this_._internal_updated_timestamp().empty()) {
            const std::string& _s = this_._internal_updated_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.coordinate.CoordinateRule.updated_timestamp");
            target = stream->WriteStringMaybeAliased(10, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.coordinate.CoordinateRule)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CoordinateRule::ByteSizeLong(const MessageLite& base) {
          const CoordinateRule& this_ = static_cast<const CoordinateRule&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CoordinateRule::ByteSizeLong() const {
          const CoordinateRule& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.coordinate.CoordinateRule)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .seigr.coordinate.CoordinateFlag applicable_flags = 4;
            {
              total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
                  this_._internal_applicable_flags(), 1, this_._impl_._applicable_flags_cached_byte_size_);
            }
            // map<string, string> metadata = 7;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_metadata_size());
              for (const auto& entry : this_._internal_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string rule_id = 1;
            if (!this_._internal_rule_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_rule_id());
            }
            // string rule_name = 2;
            if (!this_._internal_rule_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_rule_name());
            }
            // string description = 3;
            if (!this_._internal_description().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_description());
            }
            // string creation_timestamp = 9;
            if (!this_._internal_creation_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_creation_timestamp());
            }
            // string updated_timestamp = 10;
            if (!this_._internal_updated_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_updated_timestamp());
            }
            // .seigr.coordinate.LayerType target_layer = 5;
            if (this_._internal_target_layer() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_target_layer());
            }
            // .seigr.coordinate.CoordinateRelationType relation_type = 6;
            if (this_._internal_relation_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_relation_type());
            }
            // bool is_mandatory = 8;
            if (this_._internal_is_mandatory() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CoordinateRule::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CoordinateRule*>(&to_msg);
  auto& from = static_cast<const CoordinateRule&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.coordinate.CoordinateRule)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_applicable_flags()->MergeFrom(from._internal_applicable_flags());
  _this->_impl_.metadata_.MergeFrom(from._impl_.metadata_);
  if (!from._internal_rule_id().empty()) {
    _this->_internal_set_rule_id(from._internal_rule_id());
  }
  if (!from._internal_rule_name().empty()) {
    _this->_internal_set_rule_name(from._internal_rule_name());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (!from._internal_creation_timestamp().empty()) {
    _this->_internal_set_creation_timestamp(from._internal_creation_timestamp());
  }
  if (!from._internal_updated_timestamp().empty()) {
    _this->_internal_set_updated_timestamp(from._internal_updated_timestamp());
  }
  if (from._internal_target_layer() != 0) {
    _this->_impl_.target_layer_ = from._impl_.target_layer_;
  }
  if (from._internal_relation_type() != 0) {
    _this->_impl_.relation_type_ = from._impl_.relation_type_;
  }
  if (from._internal_is_mandatory() != 0) {
    _this->_impl_.is_mandatory_ = from._impl_.is_mandatory_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CoordinateRule::CopyFrom(const CoordinateRule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.coordinate.CoordinateRule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CoordinateRule::InternalSwap(CoordinateRule* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.applicable_flags_.InternalSwap(&other->_impl_.applicable_flags_);
  _impl_.metadata_.InternalSwap(&other->_impl_.metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.rule_id_, &other->_impl_.rule_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.rule_name_, &other->_impl_.rule_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.creation_timestamp_, &other->_impl_.creation_timestamp_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.updated_timestamp_, &other->_impl_.updated_timestamp_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CoordinateRule, _impl_.is_mandatory_)
      + sizeof(CoordinateRule::_impl_.is_mandatory_)
      - PROTOBUF_FIELD_OFFSET(CoordinateRule, _impl_.target_layer_)>(
          reinterpret_cast<char*>(&_impl_.target_layer_),
          reinterpret_cast<char*>(&other->_impl_.target_layer_));
}

::google::protobuf::Metadata CoordinateRule::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              CoordinateSummary_MetadataEntry_DoNotUse::CoordinateSummary_MetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              CoordinateSummary_MetadataEntry_DoNotUse::CoordinateSummary_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              CoordinateSummary_MetadataEntry_DoNotUse::CoordinateSummary_MetadataEntry_DoNotUse() : SuperType() {}
              CoordinateSummary_MetadataEntry_DoNotUse::CoordinateSummary_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* CoordinateSummary_MetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) CoordinateSummary_MetadataEntry_DoNotUse(arena);
              }
              constexpr auto CoordinateSummary_MetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CoordinateSummary_MetadataEntry_DoNotUse),
                                                          alignof(CoordinateSummary_MetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull CoordinateSummary_MetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_CoordinateSummary_MetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &CoordinateSummary_MetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<CoordinateSummary_MetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &CoordinateSummary_MetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &CoordinateSummary_MetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(CoordinateSummary_MetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &CoordinateSummary_MetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_coordinate_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* CoordinateSummary_MetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 65, 2> CoordinateSummary_MetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CoordinateSummary_MetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::coordinate::CoordinateSummary_MetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinateSummary_MetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinateSummary_MetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(CoordinateSummary_MetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(CoordinateSummary_MetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\60\3\5\0\0\0\0\0"
    "seigr.coordinate.CoordinateSummary.MetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class CoordinateSummary::_Internal {
 public:
};

CoordinateSummary::CoordinateSummary(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.coordinate.CoordinateSummary)
}
inline PROTOBUF_NDEBUG_INLINE CoordinateSummary::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::coordinate::CoordinateSummary& from_msg)
      : metadata_{visibility, arena, from.metadata_},
        last_updated_(arena, from.last_updated_),
        _cached_size_{0} {}

CoordinateSummary::CoordinateSummary(
    ::google::protobuf::Arena* arena,
    const CoordinateSummary& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CoordinateSummary* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_coordinates_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, total_coordinates_),
           offsetof(Impl_, flagged_coordinates_) -
               offsetof(Impl_, total_coordinates_) +
               sizeof(Impl_::flagged_coordinates_));

  // @@protoc_insertion_point(copy_constructor:seigr.coordinate.CoordinateSummary)
}
inline PROTOBUF_NDEBUG_INLINE CoordinateSummary::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : metadata_{visibility, arena},
        last_updated_(arena),
        _cached_size_{0} {}

inline void CoordinateSummary::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_coordinates_),
           0,
           offsetof(Impl_, flagged_coordinates_) -
               offsetof(Impl_, total_coordinates_) +
               sizeof(Impl_::flagged_coordinates_));
}
CoordinateSummary::~CoordinateSummary() {
  // @@protoc_insertion_point(destructor:seigr.coordinate.CoordinateSummary)
  SharedDtor(*this);
}
inline void CoordinateSummary::SharedDtor(MessageLite& self) {
  CoordinateSummary& this_ = static_cast<CoordinateSummary&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.last_updated_.Destroy();
  this_._impl_.~Impl_();
}

inline void* CoordinateSummary::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CoordinateSummary(arena);
}
constexpr auto CoordinateSummary::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CoordinateSummary, _impl_.metadata_) +
          decltype(CoordinateSummary::_impl_.metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CoordinateSummary, _impl_.metadata_) +
          decltype(CoordinateSummary::_impl_.metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(CoordinateSummary), alignof(CoordinateSummary), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CoordinateSummary::PlacementNew_,
                                 sizeof(CoordinateSummary),
                                 alignof(CoordinateSummary));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CoordinateSummary::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CoordinateSummary_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CoordinateSummary::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CoordinateSummary>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CoordinateSummary::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CoordinateSummary>(), &CoordinateSummary::ByteSizeLong,
            &CoordinateSummary::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CoordinateSummary, _impl_._cached_size_),
        false,
    },
    &CoordinateSummary::kDescriptorMethods,
    &descriptor_table_coordinate_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CoordinateSummary::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 63, 2> CoordinateSummary::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::coordinate::CoordinateSummary>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 total_coordinates = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CoordinateSummary, _impl_.total_coordinates_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinateSummary, _impl_.total_coordinates_)}},
    // int32 active_coordinates = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CoordinateSummary, _impl_.active_coordinates_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinateSummary, _impl_.active_coordinates_)}},
    // int32 inactive_coordinates = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CoordinateSummary, _impl_.inactive_coordinates_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinateSummary, _impl_.inactive_coordinates_)}},
    // int32 flagged_coordinates = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CoordinateSummary, _impl_.flagged_coordinates_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinateSummary, _impl_.flagged_coordinates_)}},
    // string last_updated = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinateSummary, _impl_.last_updated_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 total_coordinates = 1;
    {PROTOBUF_FIELD_OFFSET(CoordinateSummary, _impl_.total_coordinates_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 active_coordinates = 2;
    {PROTOBUF_FIELD_OFFSET(CoordinateSummary, _impl_.active_coordinates_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 inactive_coordinates = 3;
    {PROTOBUF_FIELD_OFFSET(CoordinateSummary, _impl_.inactive_coordinates_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 flagged_coordinates = 4;
    {PROTOBUF_FIELD_OFFSET(CoordinateSummary, _impl_.flagged_coordinates_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string last_updated = 5;
    {PROTOBUF_FIELD_OFFSET(CoordinateSummary, _impl_.last_updated_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> metadata = 6;
    {PROTOBUF_FIELD_OFFSET(CoordinateSummary, _impl_.metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(CoordinateSummary()._impl_.metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\42\0\0\0\0\14\10\0"
    "seigr.coordinate.CoordinateSummary"
    "last_updated"
    "metadata"
  }},
};

PROTOBUF_NOINLINE void CoordinateSummary::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.coordinate.CoordinateSummary)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.metadata_.Clear();
  _impl_.last_updated_.ClearToEmpty();
  ::memset(&_impl_.total_coordinates_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.flagged_coordinates_) -
      reinterpret_cast<char*>(&_impl_.total_coordinates_)) + sizeof(_impl_.flagged_coordinates_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CoordinateSummary::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CoordinateSummary& this_ = static_cast<const CoordinateSummary&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CoordinateSummary::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CoordinateSummary& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.coordinate.CoordinateSummary)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 total_coordinates = 1;
          if (this_._internal_total_coordinates() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_total_coordinates(), target);
          }

          // int32 active_coordinates = 2;
          if (this_._internal_active_coordinates() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_active_coordinates(), target);
          }

          // int32 inactive_coordinates = 3;
          if (this_._internal_inactive_coordinates() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_inactive_coordinates(), target);
          }

          // int32 flagged_coordinates = 4;
          if (this_._internal_flagged_coordinates() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<4>(
                    stream, this_._internal_flagged_coordinates(), target);
          }

          // string last_updated = 5;
          if (!this_._internal_last_updated().empty()) {
            const std::string& _s = this_._internal_last_updated();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.coordinate.CoordinateSummary.last_updated");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // map<string, string> metadata = 6;
          if (!this_._internal_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.coordinate.CoordinateSummary.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.coordinate.CoordinateSummary.metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.coordinate.CoordinateSummary.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.coordinate.CoordinateSummary.metadata");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.coordinate.CoordinateSummary)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CoordinateSummary::ByteSizeLong(const MessageLite& base) {
          const CoordinateSummary& this_ = static_cast<const CoordinateSummary&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CoordinateSummary::ByteSizeLong() const {
          const CoordinateSummary& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.coordinate.CoordinateSummary)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> metadata = 6;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_metadata_size());
              for (const auto& entry : this_._internal_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string last_updated = 5;
            if (!this_._internal_last_updated().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_last_updated());
            }
            // int32 total_coordinates = 1;
            if (this_._internal_total_coordinates() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_total_coordinates());
            }
            // int32 active_coordinates = 2;
            if (this_._internal_active_coordinates() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_active_coordinates());
            }
            // int32 inactive_coordinates = 3;
            if (this_._internal_inactive_coordinates() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_inactive_coordinates());
            }
            // int32 flagged_coordinates = 4;
            if (this_._internal_flagged_coordinates() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_flagged_coordinates());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CoordinateSummary::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CoordinateSummary*>(&to_msg);
  auto& from = static_cast<const CoordinateSummary&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.coordinate.CoordinateSummary)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.metadata_.MergeFrom(from._impl_.metadata_);
  if (!from._internal_last_updated().empty()) {
    _this->_internal_set_last_updated(from._internal_last_updated());
  }
  if (from._internal_total_coordinates() != 0) {
    _this->_impl_.total_coordinates_ = from._impl_.total_coordinates_;
  }
  if (from._internal_active_coordinates() != 0) {
    _this->_impl_.active_coordinates_ = from._impl_.active_coordinates_;
  }
  if (from._internal_inactive_coordinates() != 0) {
    _this->_impl_.inactive_coordinates_ = from._impl_.inactive_coordinates_;
  }
  if (from._internal_flagged_coordinates() != 0) {
    _this->_impl_.flagged_coordinates_ = from._impl_.flagged_coordinates_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CoordinateSummary::CopyFrom(const CoordinateSummary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.coordinate.CoordinateSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CoordinateSummary::InternalSwap(CoordinateSummary* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.metadata_.InternalSwap(&other->_impl_.metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.last_updated_, &other->_impl_.last_updated_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CoordinateSummary, _impl_.flagged_coordinates_)
      + sizeof(CoordinateSummary::_impl_.flagged_coordinates_)
      - PROTOBUF_FIELD_OFFSET(CoordinateSummary, _impl_.total_coordinates_)>(
          reinterpret_cast<char*>(&_impl_.total_coordinates_),
          reinterpret_cast<char*>(&other->_impl_.total_coordinates_));
}

::google::protobuf::Metadata CoordinateSummary::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace coordinate
}  // namespace seigr
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_coordinate_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
