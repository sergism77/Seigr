// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: orchestration.proto
// Protobuf C++ Version: 5.29.2

#include "orchestration.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace seigr {
namespace orchestration {
              template <typename>
PROTOBUF_CONSTEXPR Workflow_WorkflowMetadataEntry_DoNotUse::Workflow_WorkflowMetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : Workflow_WorkflowMetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : Workflow_WorkflowMetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct Workflow_WorkflowMetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Workflow_WorkflowMetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Workflow_WorkflowMetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Workflow_WorkflowMetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Workflow_WorkflowMetadataEntry_DoNotUseDefaultTypeInternal _Workflow_WorkflowMetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR Workflow_ResilienceParametersEntry_DoNotUse::Workflow_ResilienceParametersEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : Workflow_ResilienceParametersEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : Workflow_ResilienceParametersEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct Workflow_ResilienceParametersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Workflow_ResilienceParametersEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Workflow_ResilienceParametersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Workflow_ResilienceParametersEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Workflow_ResilienceParametersEntry_DoNotUseDefaultTypeInternal _Workflow_ResilienceParametersEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR TaskSchedule_TriggerConditionsEntry_DoNotUse::TaskSchedule_TriggerConditionsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : TaskSchedule_TriggerConditionsEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : TaskSchedule_TriggerConditionsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct TaskSchedule_TriggerConditionsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TaskSchedule_TriggerConditionsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TaskSchedule_TriggerConditionsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TaskSchedule_TriggerConditionsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TaskSchedule_TriggerConditionsEntry_DoNotUseDefaultTypeInternal _TaskSchedule_TriggerConditionsEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR TaskSchedule_ScheduleMetadataEntry_DoNotUse::TaskSchedule_ScheduleMetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : TaskSchedule_ScheduleMetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : TaskSchedule_ScheduleMetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct TaskSchedule_ScheduleMetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TaskSchedule_ScheduleMetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TaskSchedule_ScheduleMetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TaskSchedule_ScheduleMetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TaskSchedule_ScheduleMetadataEntry_DoNotUseDefaultTypeInternal _TaskSchedule_ScheduleMetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR TaskMonitoring_MonitoringDataEntry_DoNotUse::TaskMonitoring_MonitoringDataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : TaskMonitoring_MonitoringDataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : TaskMonitoring_MonitoringDataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct TaskMonitoring_MonitoringDataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TaskMonitoring_MonitoringDataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TaskMonitoring_MonitoringDataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TaskMonitoring_MonitoringDataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TaskMonitoring_MonitoringDataEntry_DoNotUseDefaultTypeInternal _TaskMonitoring_MonitoringDataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR Task_ResultDataEntry_DoNotUse::Task_ResultDataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : Task_ResultDataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : Task_ResultDataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct Task_ResultDataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Task_ResultDataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Task_ResultDataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Task_ResultDataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Task_ResultDataEntry_DoNotUseDefaultTypeInternal _Task_ResultDataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR Task_ResourceRequirementsEntry_DoNotUse::Task_ResourceRequirementsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : Task_ResourceRequirementsEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : Task_ResourceRequirementsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct Task_ResourceRequirementsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Task_ResourceRequirementsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Task_ResourceRequirementsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Task_ResourceRequirementsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Task_ResourceRequirementsEntry_DoNotUseDefaultTypeInternal _Task_ResourceRequirementsEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR Task_ParametersEntry_DoNotUse::Task_ParametersEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : Task_ParametersEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : Task_ParametersEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct Task_ParametersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Task_ParametersEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Task_ParametersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Task_ParametersEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Task_ParametersEntry_DoNotUseDefaultTypeInternal _Task_ParametersEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR Task_DependencyTypesEntry_DoNotUse::Task_DependencyTypesEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : Task_DependencyTypesEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : Task_DependencyTypesEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct Task_DependencyTypesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Task_DependencyTypesEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Task_DependencyTypesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Task_DependencyTypesEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Task_DependencyTypesEntry_DoNotUseDefaultTypeInternal _Task_DependencyTypesEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR Task_AdaptiveSettingsEntry_DoNotUse::Task_AdaptiveSettingsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : Task_AdaptiveSettingsEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : Task_AdaptiveSettingsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct Task_AdaptiveSettingsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Task_AdaptiveSettingsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Task_AdaptiveSettingsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Task_AdaptiveSettingsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Task_AdaptiveSettingsEntry_DoNotUseDefaultTypeInternal _Task_AdaptiveSettingsEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR OrchestrationConfig_EscalationPoliciesEntry_DoNotUse::OrchestrationConfig_EscalationPoliciesEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : OrchestrationConfig_EscalationPoliciesEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : OrchestrationConfig_EscalationPoliciesEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct OrchestrationConfig_EscalationPoliciesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrchestrationConfig_EscalationPoliciesEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrchestrationConfig_EscalationPoliciesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    OrchestrationConfig_EscalationPoliciesEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrchestrationConfig_EscalationPoliciesEntry_DoNotUseDefaultTypeInternal _OrchestrationConfig_EscalationPoliciesEntry_DoNotUse_default_instance_;

inline constexpr EscalationAction::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : escalation_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        affected_task_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        triggered_by_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        escalation_timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        escalation_policy_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        resolution_status_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        resolved_at_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        priority_adjustment_{static_cast< ::seigr::orchestration::TaskPriority >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EscalationAction::EscalationAction(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EscalationActionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EscalationActionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EscalationActionDefaultTypeInternal() {}
  union {
    EscalationAction _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EscalationActionDefaultTypeInternal _EscalationAction_default_instance_;

inline constexpr TaskSchedule::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : schedule_metadata_{},
        trigger_conditions_{},
        task_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        cron_expression_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timezone_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        next_run_time_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        last_scheduled_adjustment_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        is_recurring_{false},
        adaptive_rescheduling_enabled_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TaskSchedule::TaskSchedule(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TaskScheduleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TaskScheduleDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TaskScheduleDefaultTypeInternal() {}
  union {
    TaskSchedule _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TaskScheduleDefaultTypeInternal _TaskSchedule_default_instance_;

inline constexpr TaskMonitoring::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : monitoring_data_{},
        task_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        last_update_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        assigned_hyphen_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        error_message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_{static_cast< ::seigr::orchestration::TaskStatus >(0)},
        current_attempt_{0},
        execution_duration_ms_{::int64_t{0}},
        memory_usage_bytes_{::int64_t{0}},
        cpu_load_percentage_{0},
        progress_percentage_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TaskMonitoring::TaskMonitoring(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TaskMonitoringDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TaskMonitoringDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TaskMonitoringDefaultTypeInternal() {}
  union {
    TaskMonitoring _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TaskMonitoringDefaultTypeInternal _TaskMonitoring_default_instance_;

inline constexpr Task::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : dependencies_{},
        dependency_types_{},
        parameters_{},
        result_data_{},
        resource_requirements_{},
        adaptive_settings_{},
        task_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        task_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        assigned_hyphen_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        created_at_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        completed_at_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        last_attempt_timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        error_message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        retry_policy_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        escalation_policy_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_{static_cast< ::seigr::orchestration::TaskStatus >(0)},
        priority_{static_cast< ::seigr::orchestration::TaskPriority >(0)},
        max_retries_{0},
        rollback_on_failure_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Task::Task(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TaskDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TaskDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TaskDefaultTypeInternal() {}
  union {
    Task _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TaskDefaultTypeInternal _Task_default_instance_;

inline constexpr OrchestrationConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : escalation_policies_{},
        global_timeout_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        max_parallel_tasks_{0},
        default_retry_limit_{0},
        enable_adaptive_retry_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR OrchestrationConfig::OrchestrationConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OrchestrationConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrchestrationConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrchestrationConfigDefaultTypeInternal() {}
  union {
    OrchestrationConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrchestrationConfigDefaultTypeInternal _OrchestrationConfig_default_instance_;

inline constexpr Workflow::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : tasks_{},
        workflow_metadata_{},
        resilience_parameters_{},
        workflow_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        initiated_by_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        started_at_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ended_at_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        failure_reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        reconfiguration_timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        overall_status_{static_cast< ::seigr::orchestration::TaskStatus >(0)},
        current_stage_{static_cast< ::seigr::orchestration::WorkflowStage >(0)},
        priority_{static_cast< ::seigr::orchestration::TaskPriority >(0)},
        rollback_on_failure_{false},
        adaptive_reconfiguration_enabled_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Workflow::Workflow(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WorkflowDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WorkflowDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WorkflowDefaultTypeInternal() {}
  union {
    Workflow _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WorkflowDefaultTypeInternal _Workflow_default_instance_;
}  // namespace orchestration
}  // namespace seigr
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_orchestration_2eproto[4];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_orchestration_2eproto = nullptr;
const ::uint32_t
    TableStruct_orchestration_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Task_DependencyTypesEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Task_DependencyTypesEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Task_DependencyTypesEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Task_DependencyTypesEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Task_ParametersEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Task_ParametersEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Task_ParametersEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Task_ParametersEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Task_ResultDataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Task_ResultDataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Task_ResultDataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Task_ResultDataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Task_ResourceRequirementsEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Task_ResourceRequirementsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Task_ResourceRequirementsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Task_ResourceRequirementsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Task_AdaptiveSettingsEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Task_AdaptiveSettingsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Task_AdaptiveSettingsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Task_AdaptiveSettingsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Task, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Task, _impl_.task_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Task, _impl_.task_type_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Task, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Task, _impl_.priority_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Task, _impl_.assigned_hyphen_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Task, _impl_.dependencies_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Task, _impl_.dependency_types_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Task, _impl_.max_retries_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Task, _impl_.created_at_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Task, _impl_.completed_at_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Task, _impl_.parameters_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Task, _impl_.result_data_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Task, _impl_.last_attempt_timestamp_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Task, _impl_.error_message_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Task, _impl_.resource_requirements_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Task, _impl_.retry_policy_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Task, _impl_.rollback_on_failure_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Task, _impl_.adaptive_settings_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Task, _impl_.escalation_policy_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Workflow_WorkflowMetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Workflow_WorkflowMetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Workflow_WorkflowMetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Workflow_WorkflowMetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Workflow_ResilienceParametersEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Workflow_ResilienceParametersEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Workflow_ResilienceParametersEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Workflow_ResilienceParametersEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Workflow, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Workflow, _impl_.workflow_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Workflow, _impl_.tasks_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Workflow, _impl_.overall_status_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Workflow, _impl_.initiated_by_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Workflow, _impl_.started_at_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Workflow, _impl_.ended_at_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Workflow, _impl_.workflow_metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Workflow, _impl_.current_stage_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Workflow, _impl_.priority_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Workflow, _impl_.failure_reason_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Workflow, _impl_.rollback_on_failure_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Workflow, _impl_.adaptive_reconfiguration_enabled_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Workflow, _impl_.resilience_parameters_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::Workflow, _impl_.reconfiguration_timestamp_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::TaskSchedule_ScheduleMetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::TaskSchedule_ScheduleMetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::TaskSchedule_ScheduleMetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::TaskSchedule_ScheduleMetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::TaskSchedule_TriggerConditionsEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::TaskSchedule_TriggerConditionsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::TaskSchedule_TriggerConditionsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::TaskSchedule_TriggerConditionsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::TaskSchedule, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::TaskSchedule, _impl_.task_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::TaskSchedule, _impl_.cron_expression_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::TaskSchedule, _impl_.timezone_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::TaskSchedule, _impl_.is_recurring_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::TaskSchedule, _impl_.next_run_time_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::TaskSchedule, _impl_.schedule_metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::TaskSchedule, _impl_.trigger_conditions_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::TaskSchedule, _impl_.adaptive_rescheduling_enabled_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::TaskSchedule, _impl_.last_scheduled_adjustment_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::TaskMonitoring_MonitoringDataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::TaskMonitoring_MonitoringDataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::TaskMonitoring_MonitoringDataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::TaskMonitoring_MonitoringDataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::TaskMonitoring, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::TaskMonitoring, _impl_.task_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::TaskMonitoring, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::TaskMonitoring, _impl_.current_attempt_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::TaskMonitoring, _impl_.last_update_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::TaskMonitoring, _impl_.assigned_hyphen_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::TaskMonitoring, _impl_.error_message_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::TaskMonitoring, _impl_.monitoring_data_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::TaskMonitoring, _impl_.execution_duration_ms_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::TaskMonitoring, _impl_.memory_usage_bytes_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::TaskMonitoring, _impl_.cpu_load_percentage_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::TaskMonitoring, _impl_.progress_percentage_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::OrchestrationConfig_EscalationPoliciesEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::OrchestrationConfig_EscalationPoliciesEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::OrchestrationConfig_EscalationPoliciesEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::OrchestrationConfig_EscalationPoliciesEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::OrchestrationConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::OrchestrationConfig, _impl_.max_parallel_tasks_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::OrchestrationConfig, _impl_.default_retry_limit_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::OrchestrationConfig, _impl_.global_timeout_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::OrchestrationConfig, _impl_.enable_adaptive_retry_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::OrchestrationConfig, _impl_.escalation_policies_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::EscalationAction, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::EscalationAction, _impl_.escalation_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::EscalationAction, _impl_.affected_task_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::EscalationAction, _impl_.triggered_by_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::EscalationAction, _impl_.priority_adjustment_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::EscalationAction, _impl_.escalation_timestamp_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::EscalationAction, _impl_.escalation_policy_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::EscalationAction, _impl_.resolution_status_),
        PROTOBUF_FIELD_OFFSET(::seigr::orchestration::EscalationAction, _impl_.resolved_at_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::seigr::orchestration::Task_DependencyTypesEntry_DoNotUse)},
        {12, 22, -1, sizeof(::seigr::orchestration::Task_ParametersEntry_DoNotUse)},
        {24, 34, -1, sizeof(::seigr::orchestration::Task_ResultDataEntry_DoNotUse)},
        {36, 46, -1, sizeof(::seigr::orchestration::Task_ResourceRequirementsEntry_DoNotUse)},
        {48, 58, -1, sizeof(::seigr::orchestration::Task_AdaptiveSettingsEntry_DoNotUse)},
        {60, -1, -1, sizeof(::seigr::orchestration::Task)},
        {87, 97, -1, sizeof(::seigr::orchestration::Workflow_WorkflowMetadataEntry_DoNotUse)},
        {99, 109, -1, sizeof(::seigr::orchestration::Workflow_ResilienceParametersEntry_DoNotUse)},
        {111, -1, -1, sizeof(::seigr::orchestration::Workflow)},
        {133, 143, -1, sizeof(::seigr::orchestration::TaskSchedule_ScheduleMetadataEntry_DoNotUse)},
        {145, 155, -1, sizeof(::seigr::orchestration::TaskSchedule_TriggerConditionsEntry_DoNotUse)},
        {157, -1, -1, sizeof(::seigr::orchestration::TaskSchedule)},
        {174, 184, -1, sizeof(::seigr::orchestration::TaskMonitoring_MonitoringDataEntry_DoNotUse)},
        {186, -1, -1, sizeof(::seigr::orchestration::TaskMonitoring)},
        {205, 215, -1, sizeof(::seigr::orchestration::OrchestrationConfig_EscalationPoliciesEntry_DoNotUse)},
        {217, -1, -1, sizeof(::seigr::orchestration::OrchestrationConfig)},
        {230, -1, -1, sizeof(::seigr::orchestration::EscalationAction)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::seigr::orchestration::_Task_DependencyTypesEntry_DoNotUse_default_instance_._instance,
    &::seigr::orchestration::_Task_ParametersEntry_DoNotUse_default_instance_._instance,
    &::seigr::orchestration::_Task_ResultDataEntry_DoNotUse_default_instance_._instance,
    &::seigr::orchestration::_Task_ResourceRequirementsEntry_DoNotUse_default_instance_._instance,
    &::seigr::orchestration::_Task_AdaptiveSettingsEntry_DoNotUse_default_instance_._instance,
    &::seigr::orchestration::_Task_default_instance_._instance,
    &::seigr::orchestration::_Workflow_WorkflowMetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::orchestration::_Workflow_ResilienceParametersEntry_DoNotUse_default_instance_._instance,
    &::seigr::orchestration::_Workflow_default_instance_._instance,
    &::seigr::orchestration::_TaskSchedule_ScheduleMetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::orchestration::_TaskSchedule_TriggerConditionsEntry_DoNotUse_default_instance_._instance,
    &::seigr::orchestration::_TaskSchedule_default_instance_._instance,
    &::seigr::orchestration::_TaskMonitoring_MonitoringDataEntry_DoNotUse_default_instance_._instance,
    &::seigr::orchestration::_TaskMonitoring_default_instance_._instance,
    &::seigr::orchestration::_OrchestrationConfig_EscalationPoliciesEntry_DoNotUse_default_instance_._instance,
    &::seigr::orchestration::_OrchestrationConfig_default_instance_._instance,
    &::seigr::orchestration::_EscalationAction_default_instance_._instance,
};
const char descriptor_table_protodef_orchestration_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\023orchestration.proto\022\023seigr.orchestrati"
    "on\"\254\010\n\004Task\022\017\n\007task_id\030\001 \001(\t\022\021\n\ttask_typ"
    "e\030\002 \001(\t\022/\n\006status\030\003 \001(\0162\037.seigr.orchestr"
    "ation.TaskStatus\0223\n\010priority\030\004 \001(\0162!.sei"
    "gr.orchestration.TaskPriority\022\027\n\017assigne"
    "d_hyphen\030\005 \001(\t\022\024\n\014dependencies\030\006 \003(\t\022H\n\020"
    "dependency_types\030\007 \003(\0132..seigr.orchestra"
    "tion.Task.DependencyTypesEntry\022\023\n\013max_re"
    "tries\030\010 \001(\005\022\022\n\ncreated_at\030\t \001(\t\022\024\n\014compl"
    "eted_at\030\n \001(\t\022=\n\nparameters\030\013 \003(\0132).seig"
    "r.orchestration.Task.ParametersEntry\022>\n\013"
    "result_data\030\014 \003(\0132).seigr.orchestration."
    "Task.ResultDataEntry\022\036\n\026last_attempt_tim"
    "estamp\030\r \001(\t\022\025\n\rerror_message\030\016 \001(\t\022R\n\025r"
    "esource_requirements\030\017 \003(\01323.seigr.orche"
    "stration.Task.ResourceRequirementsEntry\022"
    "\024\n\014retry_policy\030\020 \001(\t\022\033\n\023rollback_on_fai"
    "lure\030\021 \001(\010\022J\n\021adaptive_settings\030\022 \003(\0132/."
    "seigr.orchestration.Task.AdaptiveSetting"
    "sEntry\022\034\n\024escalation_policy_id\030\023 \001(\t\032_\n\024"
    "DependencyTypesEntry\022\013\n\003key\030\001 \001(\t\0226\n\005val"
    "ue\030\002 \001(\0162\'.seigr.orchestration.TaskDepen"
    "dencyType:\0028\001\0321\n\017ParametersEntry\022\013\n\003key\030"
    "\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\0321\n\017ResultDataEn"
    "try\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\032;\n\031R"
    "esourceRequirementsEntry\022\013\n\003key\030\001 \001(\t\022\r\n"
    "\005value\030\002 \001(\t:\0028\001\0327\n\025AdaptiveSettingsEntr"
    "y\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\316\005\n\010Wo"
    "rkflow\022\023\n\013workflow_id\030\001 \001(\t\022(\n\005tasks\030\002 \003"
    "(\0132\031.seigr.orchestration.Task\0227\n\016overall"
    "_status\030\003 \001(\0162\037.seigr.orchestration.Task"
    "Status\022\024\n\014initiated_by\030\004 \001(\t\022\022\n\nstarted_"
    "at\030\005 \001(\t\022\020\n\010ended_at\030\006 \001(\t\022N\n\021workflow_m"
    "etadata\030\007 \003(\01323.seigr.orchestration.Work"
    "flow.WorkflowMetadataEntry\0229\n\rcurrent_st"
    "age\030\010 \001(\0162\".seigr.orchestration.Workflow"
    "Stage\0223\n\010priority\030\t \001(\0162!.seigr.orchestr"
    "ation.TaskPriority\022\026\n\016failure_reason\030\n \001"
    "(\t\022\033\n\023rollback_on_failure\030\013 \001(\010\022(\n adapt"
    "ive_reconfiguration_enabled\030\014 \001(\010\022V\n\025res"
    "ilience_parameters\030\r \003(\01327.seigr.orchest"
    "ration.Workflow.ResilienceParametersEntr"
    "y\022!\n\031reconfiguration_timestamp\030\016 \001(\t\0327\n\025"
    "WorkflowMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005va"
    "lue\030\002 \001(\t:\0028\001\032;\n\031ResilienceParametersEnt"
    "ry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\336\003\n\014T"
    "askSchedule\022\017\n\007task_id\030\001 \001(\t\022\027\n\017cron_exp"
    "ression\030\002 \001(\t\022\020\n\010timezone\030\003 \001(\t\022\024\n\014is_re"
    "curring\030\004 \001(\010\022\025\n\rnext_run_time\030\005 \001(\t\022R\n\021"
    "schedule_metadata\030\006 \003(\01327.seigr.orchestr"
    "ation.TaskSchedule.ScheduleMetadataEntry"
    "\022T\n\022trigger_conditions\030\007 \003(\01328.seigr.orc"
    "hestration.TaskSchedule.TriggerCondition"
    "sEntry\022%\n\035adaptive_rescheduling_enabled\030"
    "\010 \001(\010\022!\n\031last_scheduled_adjustment\030\t \001(\t"
    "\0327\n\025ScheduleMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r"
    "\n\005value\030\002 \001(\t:\0028\001\0328\n\026TriggerConditionsEn"
    "try\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\256\003\n\016"
    "TaskMonitoring\022\017\n\007task_id\030\001 \001(\t\022/\n\006statu"
    "s\030\002 \001(\0162\037.seigr.orchestration.TaskStatus"
    "\022\027\n\017current_attempt\030\003 \001(\005\022\023\n\013last_update"
    "\030\004 \001(\t\022\027\n\017assigned_hyphen\030\005 \001(\t\022\025\n\rerror"
    "_message\030\006 \001(\t\022P\n\017monitoring_data\030\007 \003(\0132"
    "7.seigr.orchestration.TaskMonitoring.Mon"
    "itoringDataEntry\022\035\n\025execution_duration_m"
    "s\030\010 \001(\003\022\032\n\022memory_usage_bytes\030\t \001(\003\022\033\n\023c"
    "pu_load_percentage\030\n \001(\002\022\033\n\023progress_per"
    "centage\030\013 \001(\002\0325\n\023MonitoringDataEntry\022\013\n\003"
    "key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\237\002\n\023Orchest"
    "rationConfig\022\032\n\022max_parallel_tasks\030\001 \001(\005"
    "\022\033\n\023default_retry_limit\030\002 \001(\005\022\026\n\016global_"
    "timeout\030\003 \001(\t\022\035\n\025enable_adaptive_retry\030\004"
    " \001(\010\022]\n\023escalation_policies\030\005 \003(\0132@.seig"
    "r.orchestration.OrchestrationConfig.Esca"
    "lationPoliciesEntry\0329\n\027EscalationPolicie"
    "sEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\205"
    "\002\n\020EscalationAction\022\025\n\rescalation_id\030\001 \001"
    "(\t\022\030\n\020affected_task_id\030\002 \001(\t\022\024\n\014triggere"
    "d_by\030\003 \001(\t\022>\n\023priority_adjustment\030\004 \001(\0162"
    "!.seigr.orchestration.TaskPriority\022\034\n\024es"
    "calation_timestamp\030\005 \001(\t\022\034\n\024escalation_p"
    "olicy_id\030\006 \001(\t\022\031\n\021resolution_status\030\007 \001("
    "\t\022\023\n\013resolved_at\030\010 \001(\t*\242\002\n\nTaskStatus\022\031\n"
    "\025TASK_STATUS_UNDEFINED\020\000\022\026\n\022TASK_STATUS_"
    "QUEUED\020\001\022\027\n\023TASK_STATUS_RUNNING\020\002\022\031\n\025TAS"
    "K_STATUS_COMPLETED\020\003\022\026\n\022TASK_STATUS_FAIL"
    "ED\020\004\022\030\n\024TASK_STATUS_CANCELED\020\005\022\030\n\024TASK_S"
    "TATUS_RETRYING\020\006\022\026\n\022TASK_STATUS_PAUSED\020\007"
    "\022!\n\035TASK_STATUS_WAITING_RESOURCES\020\010\022&\n\"T"
    "ASK_STATUS_RESOLVING_DEPENDENCIES\020\t*\252\001\n\014"
    "TaskPriority\022\033\n\027TASK_PRIORITY_UNDEFINED\020"
    "\000\022\025\n\021TASK_PRIORITY_LOW\020\001\022\030\n\024TASK_PRIORIT"
    "Y_MEDIUM\020\002\022\026\n\022TASK_PRIORITY_HIGH\020\003\022\032\n\026TA"
    "SK_PRIORITY_CRITICAL\020\004\022\030\n\024TASK_PRIORITY_"
    "URGENT\020\005*\311\001\n\rWorkflowStage\022\023\n\017STAGE_UNDE"
    "FINED\020\000\022\026\n\022STAGE_INITIALIZING\020\001\022\023\n\017STAGE"
    "_EXECUTING\020\002\022\024\n\020STAGE_VALIDATING\020\003\022\024\n\020ST"
    "AGE_FINALIZING\020\004\022\023\n\017STAGE_COMPLETED\020\005\022\021\n"
    "\rSTAGE_ABORTED\020\006\022\"\n\036STAGE_ADAPTIVE_RECON"
    "FIGURATION\020\007*Z\n\022TaskDependencyType\022\023\n\017DE"
    "PENDENCY_HARD\020\000\022\023\n\017DEPENDENCY_SOFT\020\001\022\032\n\026"
    "DEPENDENCY_CONDITIONAL\020\002b\006proto3"
};
static ::absl::once_flag descriptor_table_orchestration_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_orchestration_2eproto = {
    false,
    false,
    4072,
    descriptor_table_protodef_orchestration_2eproto,
    "orchestration.proto",
    &descriptor_table_orchestration_2eproto_once,
    nullptr,
    0,
    17,
    schemas,
    file_default_instances,
    TableStruct_orchestration_2eproto::offsets,
    file_level_enum_descriptors_orchestration_2eproto,
    file_level_service_descriptors_orchestration_2eproto,
};
namespace seigr {
namespace orchestration {
const ::google::protobuf::EnumDescriptor* TaskStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_orchestration_2eproto);
  return file_level_enum_descriptors_orchestration_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t TaskStatus_internal_data_[] = {
    655360u, 0u, };
bool TaskStatus_IsValid(int value) {
  return 0 <= value && value <= 9;
}
const ::google::protobuf::EnumDescriptor* TaskPriority_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_orchestration_2eproto);
  return file_level_enum_descriptors_orchestration_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t TaskPriority_internal_data_[] = {
    393216u, 0u, };
bool TaskPriority_IsValid(int value) {
  return 0 <= value && value <= 5;
}
const ::google::protobuf::EnumDescriptor* WorkflowStage_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_orchestration_2eproto);
  return file_level_enum_descriptors_orchestration_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t WorkflowStage_internal_data_[] = {
    524288u, 0u, };
bool WorkflowStage_IsValid(int value) {
  return 0 <= value && value <= 7;
}
const ::google::protobuf::EnumDescriptor* TaskDependencyType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_orchestration_2eproto);
  return file_level_enum_descriptors_orchestration_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t TaskDependencyType_internal_data_[] = {
    196608u, 0u, };
bool TaskDependencyType_IsValid(int value) {
  return 0 <= value && value <= 2;
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              Task_DependencyTypesEntry_DoNotUse::Task_DependencyTypesEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              Task_DependencyTypesEntry_DoNotUse::Task_DependencyTypesEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              Task_DependencyTypesEntry_DoNotUse::Task_DependencyTypesEntry_DoNotUse() : SuperType() {}
              Task_DependencyTypesEntry_DoNotUse::Task_DependencyTypesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* Task_DependencyTypesEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) Task_DependencyTypesEntry_DoNotUse(arena);
              }
              constexpr auto Task_DependencyTypesEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Task_DependencyTypesEntry_DoNotUse),
                                                          alignof(Task_DependencyTypesEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull Task_DependencyTypesEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_Task_DependencyTypesEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &Task_DependencyTypesEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<Task_DependencyTypesEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &Task_DependencyTypesEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &Task_DependencyTypesEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(Task_DependencyTypesEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &Task_DependencyTypesEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_orchestration_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* Task_DependencyTypesEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 57, 2> Task_DependencyTypesEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Task_DependencyTypesEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::orchestration::Task_DependencyTypesEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .seigr.orchestration.TaskDependencyType value = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Task_DependencyTypesEntry_DoNotUse, _impl_.value_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Task_DependencyTypesEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Task_DependencyTypesEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(Task_DependencyTypesEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.orchestration.TaskDependencyType value = 2;
    {PROTOBUF_FIELD_OFFSET(Task_DependencyTypesEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\55\3\0\0\0\0\0\0"
    "seigr.orchestration.Task.DependencyTypesEntry"
    "key"
  }},
};

// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              Task_ParametersEntry_DoNotUse::Task_ParametersEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              Task_ParametersEntry_DoNotUse::Task_ParametersEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              Task_ParametersEntry_DoNotUse::Task_ParametersEntry_DoNotUse() : SuperType() {}
              Task_ParametersEntry_DoNotUse::Task_ParametersEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* Task_ParametersEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) Task_ParametersEntry_DoNotUse(arena);
              }
              constexpr auto Task_ParametersEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Task_ParametersEntry_DoNotUse),
                                                          alignof(Task_ParametersEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull Task_ParametersEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_Task_ParametersEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &Task_ParametersEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<Task_ParametersEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &Task_ParametersEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &Task_ParametersEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(Task_ParametersEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &Task_ParametersEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_orchestration_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* Task_ParametersEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 57, 2> Task_ParametersEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Task_ParametersEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::orchestration::Task_ParametersEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Task_ParametersEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Task_ParametersEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(Task_ParametersEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(Task_ParametersEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\50\3\5\0\0\0\0\0"
    "seigr.orchestration.Task.ParametersEntry"
    "key"
    "value"
  }},
};

// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              Task_ResultDataEntry_DoNotUse::Task_ResultDataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              Task_ResultDataEntry_DoNotUse::Task_ResultDataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              Task_ResultDataEntry_DoNotUse::Task_ResultDataEntry_DoNotUse() : SuperType() {}
              Task_ResultDataEntry_DoNotUse::Task_ResultDataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* Task_ResultDataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) Task_ResultDataEntry_DoNotUse(arena);
              }
              constexpr auto Task_ResultDataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Task_ResultDataEntry_DoNotUse),
                                                          alignof(Task_ResultDataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull Task_ResultDataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_Task_ResultDataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &Task_ResultDataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<Task_ResultDataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &Task_ResultDataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &Task_ResultDataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(Task_ResultDataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &Task_ResultDataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_orchestration_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* Task_ResultDataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 57, 2> Task_ResultDataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Task_ResultDataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::orchestration::Task_ResultDataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Task_ResultDataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Task_ResultDataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(Task_ResultDataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(Task_ResultDataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\50\3\5\0\0\0\0\0"
    "seigr.orchestration.Task.ResultDataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              Task_ResourceRequirementsEntry_DoNotUse::Task_ResourceRequirementsEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              Task_ResourceRequirementsEntry_DoNotUse::Task_ResourceRequirementsEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              Task_ResourceRequirementsEntry_DoNotUse::Task_ResourceRequirementsEntry_DoNotUse() : SuperType() {}
              Task_ResourceRequirementsEntry_DoNotUse::Task_ResourceRequirementsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* Task_ResourceRequirementsEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) Task_ResourceRequirementsEntry_DoNotUse(arena);
              }
              constexpr auto Task_ResourceRequirementsEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Task_ResourceRequirementsEntry_DoNotUse),
                                                          alignof(Task_ResourceRequirementsEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull Task_ResourceRequirementsEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_Task_ResourceRequirementsEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &Task_ResourceRequirementsEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<Task_ResourceRequirementsEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &Task_ResourceRequirementsEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &Task_ResourceRequirementsEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(Task_ResourceRequirementsEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &Task_ResourceRequirementsEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_orchestration_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* Task_ResourceRequirementsEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 67, 2> Task_ResourceRequirementsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Task_ResourceRequirementsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::orchestration::Task_ResourceRequirementsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Task_ResourceRequirementsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Task_ResourceRequirementsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(Task_ResourceRequirementsEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(Task_ResourceRequirementsEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\62\3\5\0\0\0\0\0"
    "seigr.orchestration.Task.ResourceRequirementsEntry"
    "key"
    "value"
  }},
};

// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              Task_AdaptiveSettingsEntry_DoNotUse::Task_AdaptiveSettingsEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              Task_AdaptiveSettingsEntry_DoNotUse::Task_AdaptiveSettingsEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              Task_AdaptiveSettingsEntry_DoNotUse::Task_AdaptiveSettingsEntry_DoNotUse() : SuperType() {}
              Task_AdaptiveSettingsEntry_DoNotUse::Task_AdaptiveSettingsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* Task_AdaptiveSettingsEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) Task_AdaptiveSettingsEntry_DoNotUse(arena);
              }
              constexpr auto Task_AdaptiveSettingsEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Task_AdaptiveSettingsEntry_DoNotUse),
                                                          alignof(Task_AdaptiveSettingsEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull Task_AdaptiveSettingsEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_Task_AdaptiveSettingsEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &Task_AdaptiveSettingsEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<Task_AdaptiveSettingsEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &Task_AdaptiveSettingsEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &Task_AdaptiveSettingsEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(Task_AdaptiveSettingsEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &Task_AdaptiveSettingsEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_orchestration_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* Task_AdaptiveSettingsEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 63, 2> Task_AdaptiveSettingsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Task_AdaptiveSettingsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::orchestration::Task_AdaptiveSettingsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Task_AdaptiveSettingsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Task_AdaptiveSettingsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(Task_AdaptiveSettingsEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(Task_AdaptiveSettingsEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\56\3\5\0\0\0\0\0"
    "seigr.orchestration.Task.AdaptiveSettingsEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class Task::_Internal {
 public:
};

Task::Task(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.orchestration.Task)
}
inline PROTOBUF_NDEBUG_INLINE Task::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::orchestration::Task& from_msg)
      : dependencies_{visibility, arena, from.dependencies_},
        dependency_types_{visibility, arena, from.dependency_types_},
        parameters_{visibility, arena, from.parameters_},
        result_data_{visibility, arena, from.result_data_},
        resource_requirements_{visibility, arena, from.resource_requirements_},
        adaptive_settings_{visibility, arena, from.adaptive_settings_},
        task_id_(arena, from.task_id_),
        task_type_(arena, from.task_type_),
        assigned_hyphen_(arena, from.assigned_hyphen_),
        created_at_(arena, from.created_at_),
        completed_at_(arena, from.completed_at_),
        last_attempt_timestamp_(arena, from.last_attempt_timestamp_),
        error_message_(arena, from.error_message_),
        retry_policy_(arena, from.retry_policy_),
        escalation_policy_id_(arena, from.escalation_policy_id_),
        _cached_size_{0} {}

Task::Task(
    ::google::protobuf::Arena* arena,
    const Task& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Task* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, status_),
           offsetof(Impl_, rollback_on_failure_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::rollback_on_failure_));

  // @@protoc_insertion_point(copy_constructor:seigr.orchestration.Task)
}
inline PROTOBUF_NDEBUG_INLINE Task::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : dependencies_{visibility, arena},
        dependency_types_{visibility, arena},
        parameters_{visibility, arena},
        result_data_{visibility, arena},
        resource_requirements_{visibility, arena},
        adaptive_settings_{visibility, arena},
        task_id_(arena),
        task_type_(arena),
        assigned_hyphen_(arena),
        created_at_(arena),
        completed_at_(arena),
        last_attempt_timestamp_(arena),
        error_message_(arena),
        retry_policy_(arena),
        escalation_policy_id_(arena),
        _cached_size_{0} {}

inline void Task::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_),
           0,
           offsetof(Impl_, rollback_on_failure_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::rollback_on_failure_));
}
Task::~Task() {
  // @@protoc_insertion_point(destructor:seigr.orchestration.Task)
  SharedDtor(*this);
}
inline void Task::SharedDtor(MessageLite& self) {
  Task& this_ = static_cast<Task&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.task_id_.Destroy();
  this_._impl_.task_type_.Destroy();
  this_._impl_.assigned_hyphen_.Destroy();
  this_._impl_.created_at_.Destroy();
  this_._impl_.completed_at_.Destroy();
  this_._impl_.last_attempt_timestamp_.Destroy();
  this_._impl_.error_message_.Destroy();
  this_._impl_.retry_policy_.Destroy();
  this_._impl_.escalation_policy_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Task::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Task(arena);
}
constexpr auto Task::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Task, _impl_.dependencies_) +
          decltype(Task::_impl_.dependencies_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Task, _impl_.dependency_types_) +
          decltype(Task::_impl_.dependency_types_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Task, _impl_.dependency_types_) +
          decltype(Task::_impl_.dependency_types_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Task, _impl_.parameters_) +
          decltype(Task::_impl_.parameters_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Task, _impl_.parameters_) +
          decltype(Task::_impl_.parameters_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Task, _impl_.result_data_) +
          decltype(Task::_impl_.result_data_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Task, _impl_.result_data_) +
          decltype(Task::_impl_.result_data_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Task, _impl_.resource_requirements_) +
          decltype(Task::_impl_.resource_requirements_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Task, _impl_.resource_requirements_) +
          decltype(Task::_impl_.resource_requirements_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Task, _impl_.adaptive_settings_) +
          decltype(Task::_impl_.adaptive_settings_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Task, _impl_.adaptive_settings_) +
          decltype(Task::_impl_.adaptive_settings_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Task), alignof(Task), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Task::PlacementNew_,
                                 sizeof(Task),
                                 alignof(Task));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Task::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Task_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Task::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Task>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Task::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Task>(), &Task::ByteSizeLong,
            &Task::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Task, _impl_._cached_size_),
        false,
    },
    &Task::kDescriptorMethods,
    &descriptor_table_orchestration_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Task::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 19, 5, 256, 2> Task::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    19, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294443008,  // skipmap
    offsetof(decltype(_table_), field_entries),
    19,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::orchestration::Task>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string task_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Task, _impl_.task_id_)}},
    // string task_type = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Task, _impl_.task_type_)}},
    // .seigr.orchestration.TaskStatus status = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Task, _impl_.status_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Task, _impl_.status_)}},
    // .seigr.orchestration.TaskPriority priority = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Task, _impl_.priority_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Task, _impl_.priority_)}},
    // string assigned_hyphen = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Task, _impl_.assigned_hyphen_)}},
    // repeated string dependencies = 6;
    {::_pbi::TcParser::FastUR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Task, _impl_.dependencies_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // int32 max_retries = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Task, _impl_.max_retries_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(Task, _impl_.max_retries_)}},
    // string created_at = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(Task, _impl_.created_at_)}},
    // string completed_at = 10;
    {::_pbi::TcParser::FastUS1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(Task, _impl_.completed_at_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // string last_attempt_timestamp = 13;
    {::_pbi::TcParser::FastUS1,
     {106, 63, 0, PROTOBUF_FIELD_OFFSET(Task, _impl_.last_attempt_timestamp_)}},
    // string error_message = 14;
    {::_pbi::TcParser::FastUS1,
     {114, 63, 0, PROTOBUF_FIELD_OFFSET(Task, _impl_.error_message_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string retry_policy = 16;
    {::_pbi::TcParser::FastUS2,
     {386, 63, 0, PROTOBUF_FIELD_OFFSET(Task, _impl_.retry_policy_)}},
    // bool rollback_on_failure = 17;
    {::_pbi::TcParser::FastV8S2,
     {392, 63, 0, PROTOBUF_FIELD_OFFSET(Task, _impl_.rollback_on_failure_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string escalation_policy_id = 19;
    {::_pbi::TcParser::FastUS2,
     {410, 63, 0, PROTOBUF_FIELD_OFFSET(Task, _impl_.escalation_policy_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string task_id = 1;
    {PROTOBUF_FIELD_OFFSET(Task, _impl_.task_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string task_type = 2;
    {PROTOBUF_FIELD_OFFSET(Task, _impl_.task_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.orchestration.TaskStatus status = 3;
    {PROTOBUF_FIELD_OFFSET(Task, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .seigr.orchestration.TaskPriority priority = 4;
    {PROTOBUF_FIELD_OFFSET(Task, _impl_.priority_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string assigned_hyphen = 5;
    {PROTOBUF_FIELD_OFFSET(Task, _impl_.assigned_hyphen_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string dependencies = 6;
    {PROTOBUF_FIELD_OFFSET(Task, _impl_.dependencies_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // map<string, .seigr.orchestration.TaskDependencyType> dependency_types = 7;
    {PROTOBUF_FIELD_OFFSET(Task, _impl_.dependency_types_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // int32 max_retries = 8;
    {PROTOBUF_FIELD_OFFSET(Task, _impl_.max_retries_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string created_at = 9;
    {PROTOBUF_FIELD_OFFSET(Task, _impl_.created_at_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string completed_at = 10;
    {PROTOBUF_FIELD_OFFSET(Task, _impl_.completed_at_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> parameters = 11;
    {PROTOBUF_FIELD_OFFSET(Task, _impl_.parameters_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<string, string> result_data = 12;
    {PROTOBUF_FIELD_OFFSET(Task, _impl_.result_data_), 0, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string last_attempt_timestamp = 13;
    {PROTOBUF_FIELD_OFFSET(Task, _impl_.last_attempt_timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string error_message = 14;
    {PROTOBUF_FIELD_OFFSET(Task, _impl_.error_message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> resource_requirements = 15;
    {PROTOBUF_FIELD_OFFSET(Task, _impl_.resource_requirements_), 0, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string retry_policy = 16;
    {PROTOBUF_FIELD_OFFSET(Task, _impl_.retry_policy_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool rollback_on_failure = 17;
    {PROTOBUF_FIELD_OFFSET(Task, _impl_.rollback_on_failure_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // map<string, string> adaptive_settings = 18;
    {PROTOBUF_FIELD_OFFSET(Task, _impl_.adaptive_settings_), 0, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string escalation_policy_id = 19;
    {PROTOBUF_FIELD_OFFSET(Task, _impl_.escalation_policy_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(Task()._impl_.dependency_types_)>(
        1, 0, 0, 9,
        14)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(Task()._impl_.parameters_)>(
        1, 0, 0, 9,
        9)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(Task()._impl_.result_data_)>(
        1, 0, 0, 9,
        9)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(Task()._impl_.resource_requirements_)>(
        1, 0, 0, 9,
        9)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(Task()._impl_.adaptive_settings_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\30\7\11\0\0\17\14\20\0\12\14\12\13\26\15\25\14\0\21\24\0\0\0\0"
    "seigr.orchestration.Task"
    "task_id"
    "task_type"
    "assigned_hyphen"
    "dependencies"
    "dependency_types"
    "created_at"
    "completed_at"
    "parameters"
    "result_data"
    "last_attempt_timestamp"
    "error_message"
    "resource_requirements"
    "retry_policy"
    "adaptive_settings"
    "escalation_policy_id"
  }},
};

PROTOBUF_NOINLINE void Task::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.orchestration.Task)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dependencies_.Clear();
  _impl_.dependency_types_.Clear();
  _impl_.parameters_.Clear();
  _impl_.result_data_.Clear();
  _impl_.resource_requirements_.Clear();
  _impl_.adaptive_settings_.Clear();
  _impl_.task_id_.ClearToEmpty();
  _impl_.task_type_.ClearToEmpty();
  _impl_.assigned_hyphen_.ClearToEmpty();
  _impl_.created_at_.ClearToEmpty();
  _impl_.completed_at_.ClearToEmpty();
  _impl_.last_attempt_timestamp_.ClearToEmpty();
  _impl_.error_message_.ClearToEmpty();
  _impl_.retry_policy_.ClearToEmpty();
  _impl_.escalation_policy_id_.ClearToEmpty();
  ::memset(&_impl_.status_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.rollback_on_failure_) -
      reinterpret_cast<char*>(&_impl_.status_)) + sizeof(_impl_.rollback_on_failure_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Task::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Task& this_ = static_cast<const Task&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Task::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Task& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.orchestration.Task)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string task_id = 1;
          if (!this_._internal_task_id().empty()) {
            const std::string& _s = this_._internal_task_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.Task.task_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string task_type = 2;
          if (!this_._internal_task_type().empty()) {
            const std::string& _s = this_._internal_task_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.Task.task_type");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // .seigr.orchestration.TaskStatus status = 3;
          if (this_._internal_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_status(), target);
          }

          // .seigr.orchestration.TaskPriority priority = 4;
          if (this_._internal_priority() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                4, this_._internal_priority(), target);
          }

          // string assigned_hyphen = 5;
          if (!this_._internal_assigned_hyphen().empty()) {
            const std::string& _s = this_._internal_assigned_hyphen();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.Task.assigned_hyphen");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // repeated string dependencies = 6;
          for (int i = 0, n = this_._internal_dependencies_size(); i < n; ++i) {
            const auto& s = this_._internal_dependencies().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.Task.dependencies");
            target = stream->WriteString(6, s, target);
          }

          // map<string, .seigr.orchestration.TaskDependencyType> dependency_types = 7;
          if (!this_._internal_dependency_types().empty()) {
            using MapType = ::google::protobuf::Map<std::string, ::seigr::orchestration::TaskDependencyType>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, ::seigr::orchestration::TaskDependencyType,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_ENUM>;
            const auto& field = this_._internal_dependency_types();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.Task.dependency_types");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.Task.dependency_types");
              }
            }
          }

          // int32 max_retries = 8;
          if (this_._internal_max_retries() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<8>(
                    stream, this_._internal_max_retries(), target);
          }

          // string created_at = 9;
          if (!this_._internal_created_at().empty()) {
            const std::string& _s = this_._internal_created_at();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.Task.created_at");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          // string completed_at = 10;
          if (!this_._internal_completed_at().empty()) {
            const std::string& _s = this_._internal_completed_at();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.Task.completed_at");
            target = stream->WriteStringMaybeAliased(10, _s, target);
          }

          // map<string, string> parameters = 11;
          if (!this_._internal_parameters().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_parameters();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    11, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.Task.parameters");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.Task.parameters");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    11, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.Task.parameters");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.Task.parameters");
              }
            }
          }

          // map<string, string> result_data = 12;
          if (!this_._internal_result_data().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_result_data();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    12, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.Task.result_data");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.Task.result_data");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    12, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.Task.result_data");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.Task.result_data");
              }
            }
          }

          // string last_attempt_timestamp = 13;
          if (!this_._internal_last_attempt_timestamp().empty()) {
            const std::string& _s = this_._internal_last_attempt_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.Task.last_attempt_timestamp");
            target = stream->WriteStringMaybeAliased(13, _s, target);
          }

          // string error_message = 14;
          if (!this_._internal_error_message().empty()) {
            const std::string& _s = this_._internal_error_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.Task.error_message");
            target = stream->WriteStringMaybeAliased(14, _s, target);
          }

          // map<string, string> resource_requirements = 15;
          if (!this_._internal_resource_requirements().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_resource_requirements();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    15, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.Task.resource_requirements");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.Task.resource_requirements");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    15, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.Task.resource_requirements");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.Task.resource_requirements");
              }
            }
          }

          // string retry_policy = 16;
          if (!this_._internal_retry_policy().empty()) {
            const std::string& _s = this_._internal_retry_policy();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.Task.retry_policy");
            target = stream->WriteStringMaybeAliased(16, _s, target);
          }

          // bool rollback_on_failure = 17;
          if (this_._internal_rollback_on_failure() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                17, this_._internal_rollback_on_failure(), target);
          }

          // map<string, string> adaptive_settings = 18;
          if (!this_._internal_adaptive_settings().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_adaptive_settings();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    18, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.Task.adaptive_settings");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.Task.adaptive_settings");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    18, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.Task.adaptive_settings");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.Task.adaptive_settings");
              }
            }
          }

          // string escalation_policy_id = 19;
          if (!this_._internal_escalation_policy_id().empty()) {
            const std::string& _s = this_._internal_escalation_policy_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.Task.escalation_policy_id");
            target = stream->WriteStringMaybeAliased(19, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.orchestration.Task)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Task::ByteSizeLong(const MessageLite& base) {
          const Task& this_ = static_cast<const Task&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Task::ByteSizeLong() const {
          const Task& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.orchestration.Task)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string dependencies = 6;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_dependencies().size());
              for (int i = 0, n = this_._internal_dependencies().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_dependencies().Get(i));
              }
            }
            // map<string, .seigr.orchestration.TaskDependencyType> dependency_types = 7;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_dependency_types_size());
              for (const auto& entry : this_._internal_dependency_types()) {
                total_size += _pbi::MapEntryFuncs<std::string, ::seigr::orchestration::TaskDependencyType,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_ENUM>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // map<string, string> parameters = 11;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_parameters_size());
              for (const auto& entry : this_._internal_parameters()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // map<string, string> result_data = 12;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_result_data_size());
              for (const auto& entry : this_._internal_result_data()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // map<string, string> resource_requirements = 15;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_resource_requirements_size());
              for (const auto& entry : this_._internal_resource_requirements()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // map<string, string> adaptive_settings = 18;
            {
              total_size +=
                  2 * ::google::protobuf::internal::FromIntSize(this_._internal_adaptive_settings_size());
              for (const auto& entry : this_._internal_adaptive_settings()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string task_id = 1;
            if (!this_._internal_task_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_task_id());
            }
            // string task_type = 2;
            if (!this_._internal_task_type().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_task_type());
            }
            // string assigned_hyphen = 5;
            if (!this_._internal_assigned_hyphen().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_assigned_hyphen());
            }
            // string created_at = 9;
            if (!this_._internal_created_at().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_created_at());
            }
            // string completed_at = 10;
            if (!this_._internal_completed_at().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_completed_at());
            }
            // string last_attempt_timestamp = 13;
            if (!this_._internal_last_attempt_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_last_attempt_timestamp());
            }
            // string error_message = 14;
            if (!this_._internal_error_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_error_message());
            }
            // string retry_policy = 16;
            if (!this_._internal_retry_policy().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_retry_policy());
            }
            // string escalation_policy_id = 19;
            if (!this_._internal_escalation_policy_id().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_escalation_policy_id());
            }
            // .seigr.orchestration.TaskStatus status = 3;
            if (this_._internal_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
            }
            // .seigr.orchestration.TaskPriority priority = 4;
            if (this_._internal_priority() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_priority());
            }
            // int32 max_retries = 8;
            if (this_._internal_max_retries() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_max_retries());
            }
            // bool rollback_on_failure = 17;
            if (this_._internal_rollback_on_failure() != 0) {
              total_size += 3;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Task::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Task*>(&to_msg);
  auto& from = static_cast<const Task&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.orchestration.Task)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_dependencies()->MergeFrom(from._internal_dependencies());
  _this->_impl_.dependency_types_.MergeFrom(from._impl_.dependency_types_);
  _this->_impl_.parameters_.MergeFrom(from._impl_.parameters_);
  _this->_impl_.result_data_.MergeFrom(from._impl_.result_data_);
  _this->_impl_.resource_requirements_.MergeFrom(from._impl_.resource_requirements_);
  _this->_impl_.adaptive_settings_.MergeFrom(from._impl_.adaptive_settings_);
  if (!from._internal_task_id().empty()) {
    _this->_internal_set_task_id(from._internal_task_id());
  }
  if (!from._internal_task_type().empty()) {
    _this->_internal_set_task_type(from._internal_task_type());
  }
  if (!from._internal_assigned_hyphen().empty()) {
    _this->_internal_set_assigned_hyphen(from._internal_assigned_hyphen());
  }
  if (!from._internal_created_at().empty()) {
    _this->_internal_set_created_at(from._internal_created_at());
  }
  if (!from._internal_completed_at().empty()) {
    _this->_internal_set_completed_at(from._internal_completed_at());
  }
  if (!from._internal_last_attempt_timestamp().empty()) {
    _this->_internal_set_last_attempt_timestamp(from._internal_last_attempt_timestamp());
  }
  if (!from._internal_error_message().empty()) {
    _this->_internal_set_error_message(from._internal_error_message());
  }
  if (!from._internal_retry_policy().empty()) {
    _this->_internal_set_retry_policy(from._internal_retry_policy());
  }
  if (!from._internal_escalation_policy_id().empty()) {
    _this->_internal_set_escalation_policy_id(from._internal_escalation_policy_id());
  }
  if (from._internal_status() != 0) {
    _this->_impl_.status_ = from._impl_.status_;
  }
  if (from._internal_priority() != 0) {
    _this->_impl_.priority_ = from._impl_.priority_;
  }
  if (from._internal_max_retries() != 0) {
    _this->_impl_.max_retries_ = from._impl_.max_retries_;
  }
  if (from._internal_rollback_on_failure() != 0) {
    _this->_impl_.rollback_on_failure_ = from._impl_.rollback_on_failure_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Task::CopyFrom(const Task& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.orchestration.Task)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Task::InternalSwap(Task* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.dependencies_.InternalSwap(&other->_impl_.dependencies_);
  _impl_.dependency_types_.InternalSwap(&other->_impl_.dependency_types_);
  _impl_.parameters_.InternalSwap(&other->_impl_.parameters_);
  _impl_.result_data_.InternalSwap(&other->_impl_.result_data_);
  _impl_.resource_requirements_.InternalSwap(&other->_impl_.resource_requirements_);
  _impl_.adaptive_settings_.InternalSwap(&other->_impl_.adaptive_settings_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.task_id_, &other->_impl_.task_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.task_type_, &other->_impl_.task_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.assigned_hyphen_, &other->_impl_.assigned_hyphen_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.created_at_, &other->_impl_.created_at_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.completed_at_, &other->_impl_.completed_at_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.last_attempt_timestamp_, &other->_impl_.last_attempt_timestamp_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_message_, &other->_impl_.error_message_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.retry_policy_, &other->_impl_.retry_policy_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.escalation_policy_id_, &other->_impl_.escalation_policy_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Task, _impl_.rollback_on_failure_)
      + sizeof(Task::_impl_.rollback_on_failure_)
      - PROTOBUF_FIELD_OFFSET(Task, _impl_.status_)>(
          reinterpret_cast<char*>(&_impl_.status_),
          reinterpret_cast<char*>(&other->_impl_.status_));
}

::google::protobuf::Metadata Task::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              Workflow_WorkflowMetadataEntry_DoNotUse::Workflow_WorkflowMetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              Workflow_WorkflowMetadataEntry_DoNotUse::Workflow_WorkflowMetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              Workflow_WorkflowMetadataEntry_DoNotUse::Workflow_WorkflowMetadataEntry_DoNotUse() : SuperType() {}
              Workflow_WorkflowMetadataEntry_DoNotUse::Workflow_WorkflowMetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* Workflow_WorkflowMetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) Workflow_WorkflowMetadataEntry_DoNotUse(arena);
              }
              constexpr auto Workflow_WorkflowMetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Workflow_WorkflowMetadataEntry_DoNotUse),
                                                          alignof(Workflow_WorkflowMetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull Workflow_WorkflowMetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_Workflow_WorkflowMetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &Workflow_WorkflowMetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<Workflow_WorkflowMetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &Workflow_WorkflowMetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &Workflow_WorkflowMetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(Workflow_WorkflowMetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &Workflow_WorkflowMetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_orchestration_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* Workflow_WorkflowMetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 67, 2> Workflow_WorkflowMetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Workflow_WorkflowMetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::orchestration::Workflow_WorkflowMetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Workflow_WorkflowMetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Workflow_WorkflowMetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(Workflow_WorkflowMetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(Workflow_WorkflowMetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\62\3\5\0\0\0\0\0"
    "seigr.orchestration.Workflow.WorkflowMetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              Workflow_ResilienceParametersEntry_DoNotUse::Workflow_ResilienceParametersEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              Workflow_ResilienceParametersEntry_DoNotUse::Workflow_ResilienceParametersEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              Workflow_ResilienceParametersEntry_DoNotUse::Workflow_ResilienceParametersEntry_DoNotUse() : SuperType() {}
              Workflow_ResilienceParametersEntry_DoNotUse::Workflow_ResilienceParametersEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* Workflow_ResilienceParametersEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) Workflow_ResilienceParametersEntry_DoNotUse(arena);
              }
              constexpr auto Workflow_ResilienceParametersEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Workflow_ResilienceParametersEntry_DoNotUse),
                                                          alignof(Workflow_ResilienceParametersEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull Workflow_ResilienceParametersEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_Workflow_ResilienceParametersEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &Workflow_ResilienceParametersEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<Workflow_ResilienceParametersEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &Workflow_ResilienceParametersEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &Workflow_ResilienceParametersEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(Workflow_ResilienceParametersEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &Workflow_ResilienceParametersEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_orchestration_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* Workflow_ResilienceParametersEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 71, 2> Workflow_ResilienceParametersEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Workflow_ResilienceParametersEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::orchestration::Workflow_ResilienceParametersEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Workflow_ResilienceParametersEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Workflow_ResilienceParametersEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(Workflow_ResilienceParametersEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(Workflow_ResilienceParametersEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\66\3\5\0\0\0\0\0"
    "seigr.orchestration.Workflow.ResilienceParametersEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class Workflow::_Internal {
 public:
};

Workflow::Workflow(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.orchestration.Workflow)
}
inline PROTOBUF_NDEBUG_INLINE Workflow::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::orchestration::Workflow& from_msg)
      : tasks_{visibility, arena, from.tasks_},
        workflow_metadata_{visibility, arena, from.workflow_metadata_},
        resilience_parameters_{visibility, arena, from.resilience_parameters_},
        workflow_id_(arena, from.workflow_id_),
        initiated_by_(arena, from.initiated_by_),
        started_at_(arena, from.started_at_),
        ended_at_(arena, from.ended_at_),
        failure_reason_(arena, from.failure_reason_),
        reconfiguration_timestamp_(arena, from.reconfiguration_timestamp_),
        _cached_size_{0} {}

Workflow::Workflow(
    ::google::protobuf::Arena* arena,
    const Workflow& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Workflow* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, overall_status_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, overall_status_),
           offsetof(Impl_, adaptive_reconfiguration_enabled_) -
               offsetof(Impl_, overall_status_) +
               sizeof(Impl_::adaptive_reconfiguration_enabled_));

  // @@protoc_insertion_point(copy_constructor:seigr.orchestration.Workflow)
}
inline PROTOBUF_NDEBUG_INLINE Workflow::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : tasks_{visibility, arena},
        workflow_metadata_{visibility, arena},
        resilience_parameters_{visibility, arena},
        workflow_id_(arena),
        initiated_by_(arena),
        started_at_(arena),
        ended_at_(arena),
        failure_reason_(arena),
        reconfiguration_timestamp_(arena),
        _cached_size_{0} {}

inline void Workflow::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, overall_status_),
           0,
           offsetof(Impl_, adaptive_reconfiguration_enabled_) -
               offsetof(Impl_, overall_status_) +
               sizeof(Impl_::adaptive_reconfiguration_enabled_));
}
Workflow::~Workflow() {
  // @@protoc_insertion_point(destructor:seigr.orchestration.Workflow)
  SharedDtor(*this);
}
inline void Workflow::SharedDtor(MessageLite& self) {
  Workflow& this_ = static_cast<Workflow&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.workflow_id_.Destroy();
  this_._impl_.initiated_by_.Destroy();
  this_._impl_.started_at_.Destroy();
  this_._impl_.ended_at_.Destroy();
  this_._impl_.failure_reason_.Destroy();
  this_._impl_.reconfiguration_timestamp_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Workflow::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Workflow(arena);
}
constexpr auto Workflow::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Workflow, _impl_.tasks_) +
          decltype(Workflow::_impl_.tasks_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Workflow, _impl_.workflow_metadata_) +
          decltype(Workflow::_impl_.workflow_metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Workflow, _impl_.workflow_metadata_) +
          decltype(Workflow::_impl_.workflow_metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Workflow, _impl_.resilience_parameters_) +
          decltype(Workflow::_impl_.resilience_parameters_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Workflow, _impl_.resilience_parameters_) +
          decltype(Workflow::_impl_.resilience_parameters_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Workflow), alignof(Workflow), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Workflow::PlacementNew_,
                                 sizeof(Workflow),
                                 alignof(Workflow));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Workflow::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Workflow_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Workflow::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Workflow>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Workflow::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Workflow>(), &Workflow::ByteSizeLong,
            &Workflow::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Workflow, _impl_._cached_size_),
        false,
    },
    &Workflow::kDescriptorMethods,
    &descriptor_table_orchestration_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Workflow::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 14, 3, 163, 2> Workflow::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    14, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294950912,  // skipmap
    offsetof(decltype(_table_), field_entries),
    14,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::orchestration::Workflow>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string workflow_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Workflow, _impl_.workflow_id_)}},
    // repeated .seigr.orchestration.Task tasks = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Workflow, _impl_.tasks_)}},
    // .seigr.orchestration.TaskStatus overall_status = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Workflow, _impl_.overall_status_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Workflow, _impl_.overall_status_)}},
    // string initiated_by = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Workflow, _impl_.initiated_by_)}},
    // string started_at = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Workflow, _impl_.started_at_)}},
    // string ended_at = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Workflow, _impl_.ended_at_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .seigr.orchestration.WorkflowStage current_stage = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Workflow, _impl_.current_stage_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(Workflow, _impl_.current_stage_)}},
    // .seigr.orchestration.TaskPriority priority = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Workflow, _impl_.priority_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(Workflow, _impl_.priority_)}},
    // string failure_reason = 10;
    {::_pbi::TcParser::FastUS1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(Workflow, _impl_.failure_reason_)}},
    // bool rollback_on_failure = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Workflow, _impl_.rollback_on_failure_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(Workflow, _impl_.rollback_on_failure_)}},
    // bool adaptive_reconfiguration_enabled = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Workflow, _impl_.adaptive_reconfiguration_enabled_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(Workflow, _impl_.adaptive_reconfiguration_enabled_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string reconfiguration_timestamp = 14;
    {::_pbi::TcParser::FastUS1,
     {114, 63, 0, PROTOBUF_FIELD_OFFSET(Workflow, _impl_.reconfiguration_timestamp_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string workflow_id = 1;
    {PROTOBUF_FIELD_OFFSET(Workflow, _impl_.workflow_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .seigr.orchestration.Task tasks = 2;
    {PROTOBUF_FIELD_OFFSET(Workflow, _impl_.tasks_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .seigr.orchestration.TaskStatus overall_status = 3;
    {PROTOBUF_FIELD_OFFSET(Workflow, _impl_.overall_status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string initiated_by = 4;
    {PROTOBUF_FIELD_OFFSET(Workflow, _impl_.initiated_by_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string started_at = 5;
    {PROTOBUF_FIELD_OFFSET(Workflow, _impl_.started_at_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string ended_at = 6;
    {PROTOBUF_FIELD_OFFSET(Workflow, _impl_.ended_at_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> workflow_metadata = 7;
    {PROTOBUF_FIELD_OFFSET(Workflow, _impl_.workflow_metadata_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // .seigr.orchestration.WorkflowStage current_stage = 8;
    {PROTOBUF_FIELD_OFFSET(Workflow, _impl_.current_stage_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .seigr.orchestration.TaskPriority priority = 9;
    {PROTOBUF_FIELD_OFFSET(Workflow, _impl_.priority_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string failure_reason = 10;
    {PROTOBUF_FIELD_OFFSET(Workflow, _impl_.failure_reason_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool rollback_on_failure = 11;
    {PROTOBUF_FIELD_OFFSET(Workflow, _impl_.rollback_on_failure_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool adaptive_reconfiguration_enabled = 12;
    {PROTOBUF_FIELD_OFFSET(Workflow, _impl_.adaptive_reconfiguration_enabled_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // map<string, string> resilience_parameters = 13;
    {PROTOBUF_FIELD_OFFSET(Workflow, _impl_.resilience_parameters_), 0, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string reconfiguration_timestamp = 14;
    {PROTOBUF_FIELD_OFFSET(Workflow, _impl_.reconfiguration_timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::seigr::orchestration::Task>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(Workflow()._impl_.workflow_metadata_)>(
        1, 0, 0, 9,
        9)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(Workflow()._impl_.resilience_parameters_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\34\13\0\0\14\12\10\21\0\0\16\0\0\25\31\0"
    "seigr.orchestration.Workflow"
    "workflow_id"
    "initiated_by"
    "started_at"
    "ended_at"
    "workflow_metadata"
    "failure_reason"
    "resilience_parameters"
    "reconfiguration_timestamp"
  }},
};

PROTOBUF_NOINLINE void Workflow::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.orchestration.Workflow)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tasks_.Clear();
  _impl_.workflow_metadata_.Clear();
  _impl_.resilience_parameters_.Clear();
  _impl_.workflow_id_.ClearToEmpty();
  _impl_.initiated_by_.ClearToEmpty();
  _impl_.started_at_.ClearToEmpty();
  _impl_.ended_at_.ClearToEmpty();
  _impl_.failure_reason_.ClearToEmpty();
  _impl_.reconfiguration_timestamp_.ClearToEmpty();
  ::memset(&_impl_.overall_status_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.adaptive_reconfiguration_enabled_) -
      reinterpret_cast<char*>(&_impl_.overall_status_)) + sizeof(_impl_.adaptive_reconfiguration_enabled_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Workflow::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Workflow& this_ = static_cast<const Workflow&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Workflow::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Workflow& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.orchestration.Workflow)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string workflow_id = 1;
          if (!this_._internal_workflow_id().empty()) {
            const std::string& _s = this_._internal_workflow_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.Workflow.workflow_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated .seigr.orchestration.Task tasks = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_tasks_size());
               i < n; i++) {
            const auto& repfield = this_._internal_tasks().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // .seigr.orchestration.TaskStatus overall_status = 3;
          if (this_._internal_overall_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_overall_status(), target);
          }

          // string initiated_by = 4;
          if (!this_._internal_initiated_by().empty()) {
            const std::string& _s = this_._internal_initiated_by();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.Workflow.initiated_by");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string started_at = 5;
          if (!this_._internal_started_at().empty()) {
            const std::string& _s = this_._internal_started_at();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.Workflow.started_at");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string ended_at = 6;
          if (!this_._internal_ended_at().empty()) {
            const std::string& _s = this_._internal_ended_at();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.Workflow.ended_at");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // map<string, string> workflow_metadata = 7;
          if (!this_._internal_workflow_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_workflow_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.Workflow.workflow_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.Workflow.workflow_metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.Workflow.workflow_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.Workflow.workflow_metadata");
              }
            }
          }

          // .seigr.orchestration.WorkflowStage current_stage = 8;
          if (this_._internal_current_stage() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                8, this_._internal_current_stage(), target);
          }

          // .seigr.orchestration.TaskPriority priority = 9;
          if (this_._internal_priority() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                9, this_._internal_priority(), target);
          }

          // string failure_reason = 10;
          if (!this_._internal_failure_reason().empty()) {
            const std::string& _s = this_._internal_failure_reason();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.Workflow.failure_reason");
            target = stream->WriteStringMaybeAliased(10, _s, target);
          }

          // bool rollback_on_failure = 11;
          if (this_._internal_rollback_on_failure() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                11, this_._internal_rollback_on_failure(), target);
          }

          // bool adaptive_reconfiguration_enabled = 12;
          if (this_._internal_adaptive_reconfiguration_enabled() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                12, this_._internal_adaptive_reconfiguration_enabled(), target);
          }

          // map<string, string> resilience_parameters = 13;
          if (!this_._internal_resilience_parameters().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_resilience_parameters();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    13, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.Workflow.resilience_parameters");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.Workflow.resilience_parameters");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    13, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.Workflow.resilience_parameters");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.Workflow.resilience_parameters");
              }
            }
          }

          // string reconfiguration_timestamp = 14;
          if (!this_._internal_reconfiguration_timestamp().empty()) {
            const std::string& _s = this_._internal_reconfiguration_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.Workflow.reconfiguration_timestamp");
            target = stream->WriteStringMaybeAliased(14, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.orchestration.Workflow)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Workflow::ByteSizeLong(const MessageLite& base) {
          const Workflow& this_ = static_cast<const Workflow&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Workflow::ByteSizeLong() const {
          const Workflow& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.orchestration.Workflow)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .seigr.orchestration.Task tasks = 2;
            {
              total_size += 1UL * this_._internal_tasks_size();
              for (const auto& msg : this_._internal_tasks()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // map<string, string> workflow_metadata = 7;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_workflow_metadata_size());
              for (const auto& entry : this_._internal_workflow_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // map<string, string> resilience_parameters = 13;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_resilience_parameters_size());
              for (const auto& entry : this_._internal_resilience_parameters()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string workflow_id = 1;
            if (!this_._internal_workflow_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_workflow_id());
            }
            // string initiated_by = 4;
            if (!this_._internal_initiated_by().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_initiated_by());
            }
            // string started_at = 5;
            if (!this_._internal_started_at().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_started_at());
            }
            // string ended_at = 6;
            if (!this_._internal_ended_at().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_ended_at());
            }
            // string failure_reason = 10;
            if (!this_._internal_failure_reason().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_failure_reason());
            }
            // string reconfiguration_timestamp = 14;
            if (!this_._internal_reconfiguration_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_reconfiguration_timestamp());
            }
            // .seigr.orchestration.TaskStatus overall_status = 3;
            if (this_._internal_overall_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_overall_status());
            }
            // .seigr.orchestration.WorkflowStage current_stage = 8;
            if (this_._internal_current_stage() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_current_stage());
            }
            // .seigr.orchestration.TaskPriority priority = 9;
            if (this_._internal_priority() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_priority());
            }
            // bool rollback_on_failure = 11;
            if (this_._internal_rollback_on_failure() != 0) {
              total_size += 2;
            }
            // bool adaptive_reconfiguration_enabled = 12;
            if (this_._internal_adaptive_reconfiguration_enabled() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Workflow::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Workflow*>(&to_msg);
  auto& from = static_cast<const Workflow&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.orchestration.Workflow)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_tasks()->MergeFrom(
      from._internal_tasks());
  _this->_impl_.workflow_metadata_.MergeFrom(from._impl_.workflow_metadata_);
  _this->_impl_.resilience_parameters_.MergeFrom(from._impl_.resilience_parameters_);
  if (!from._internal_workflow_id().empty()) {
    _this->_internal_set_workflow_id(from._internal_workflow_id());
  }
  if (!from._internal_initiated_by().empty()) {
    _this->_internal_set_initiated_by(from._internal_initiated_by());
  }
  if (!from._internal_started_at().empty()) {
    _this->_internal_set_started_at(from._internal_started_at());
  }
  if (!from._internal_ended_at().empty()) {
    _this->_internal_set_ended_at(from._internal_ended_at());
  }
  if (!from._internal_failure_reason().empty()) {
    _this->_internal_set_failure_reason(from._internal_failure_reason());
  }
  if (!from._internal_reconfiguration_timestamp().empty()) {
    _this->_internal_set_reconfiguration_timestamp(from._internal_reconfiguration_timestamp());
  }
  if (from._internal_overall_status() != 0) {
    _this->_impl_.overall_status_ = from._impl_.overall_status_;
  }
  if (from._internal_current_stage() != 0) {
    _this->_impl_.current_stage_ = from._impl_.current_stage_;
  }
  if (from._internal_priority() != 0) {
    _this->_impl_.priority_ = from._impl_.priority_;
  }
  if (from._internal_rollback_on_failure() != 0) {
    _this->_impl_.rollback_on_failure_ = from._impl_.rollback_on_failure_;
  }
  if (from._internal_adaptive_reconfiguration_enabled() != 0) {
    _this->_impl_.adaptive_reconfiguration_enabled_ = from._impl_.adaptive_reconfiguration_enabled_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Workflow::CopyFrom(const Workflow& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.orchestration.Workflow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Workflow::InternalSwap(Workflow* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.tasks_.InternalSwap(&other->_impl_.tasks_);
  _impl_.workflow_metadata_.InternalSwap(&other->_impl_.workflow_metadata_);
  _impl_.resilience_parameters_.InternalSwap(&other->_impl_.resilience_parameters_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.workflow_id_, &other->_impl_.workflow_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.initiated_by_, &other->_impl_.initiated_by_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.started_at_, &other->_impl_.started_at_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ended_at_, &other->_impl_.ended_at_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.failure_reason_, &other->_impl_.failure_reason_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reconfiguration_timestamp_, &other->_impl_.reconfiguration_timestamp_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Workflow, _impl_.adaptive_reconfiguration_enabled_)
      + sizeof(Workflow::_impl_.adaptive_reconfiguration_enabled_)
      - PROTOBUF_FIELD_OFFSET(Workflow, _impl_.overall_status_)>(
          reinterpret_cast<char*>(&_impl_.overall_status_),
          reinterpret_cast<char*>(&other->_impl_.overall_status_));
}

::google::protobuf::Metadata Workflow::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              TaskSchedule_ScheduleMetadataEntry_DoNotUse::TaskSchedule_ScheduleMetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              TaskSchedule_ScheduleMetadataEntry_DoNotUse::TaskSchedule_ScheduleMetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              TaskSchedule_ScheduleMetadataEntry_DoNotUse::TaskSchedule_ScheduleMetadataEntry_DoNotUse() : SuperType() {}
              TaskSchedule_ScheduleMetadataEntry_DoNotUse::TaskSchedule_ScheduleMetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* TaskSchedule_ScheduleMetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) TaskSchedule_ScheduleMetadataEntry_DoNotUse(arena);
              }
              constexpr auto TaskSchedule_ScheduleMetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TaskSchedule_ScheduleMetadataEntry_DoNotUse),
                                                          alignof(TaskSchedule_ScheduleMetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull TaskSchedule_ScheduleMetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_TaskSchedule_ScheduleMetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &TaskSchedule_ScheduleMetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<TaskSchedule_ScheduleMetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &TaskSchedule_ScheduleMetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &TaskSchedule_ScheduleMetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(TaskSchedule_ScheduleMetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &TaskSchedule_ScheduleMetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_orchestration_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* TaskSchedule_ScheduleMetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 71, 2> TaskSchedule_ScheduleMetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TaskSchedule_ScheduleMetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::orchestration::TaskSchedule_ScheduleMetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(TaskSchedule_ScheduleMetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TaskSchedule_ScheduleMetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(TaskSchedule_ScheduleMetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(TaskSchedule_ScheduleMetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\66\3\5\0\0\0\0\0"
    "seigr.orchestration.TaskSchedule.ScheduleMetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              TaskSchedule_TriggerConditionsEntry_DoNotUse::TaskSchedule_TriggerConditionsEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              TaskSchedule_TriggerConditionsEntry_DoNotUse::TaskSchedule_TriggerConditionsEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              TaskSchedule_TriggerConditionsEntry_DoNotUse::TaskSchedule_TriggerConditionsEntry_DoNotUse() : SuperType() {}
              TaskSchedule_TriggerConditionsEntry_DoNotUse::TaskSchedule_TriggerConditionsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* TaskSchedule_TriggerConditionsEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) TaskSchedule_TriggerConditionsEntry_DoNotUse(arena);
              }
              constexpr auto TaskSchedule_TriggerConditionsEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TaskSchedule_TriggerConditionsEntry_DoNotUse),
                                                          alignof(TaskSchedule_TriggerConditionsEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull TaskSchedule_TriggerConditionsEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_TaskSchedule_TriggerConditionsEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &TaskSchedule_TriggerConditionsEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<TaskSchedule_TriggerConditionsEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &TaskSchedule_TriggerConditionsEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &TaskSchedule_TriggerConditionsEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(TaskSchedule_TriggerConditionsEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &TaskSchedule_TriggerConditionsEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_orchestration_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* TaskSchedule_TriggerConditionsEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 72, 2> TaskSchedule_TriggerConditionsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TaskSchedule_TriggerConditionsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::orchestration::TaskSchedule_TriggerConditionsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(TaskSchedule_TriggerConditionsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TaskSchedule_TriggerConditionsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(TaskSchedule_TriggerConditionsEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(TaskSchedule_TriggerConditionsEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\67\3\5\0\0\0\0\0"
    "seigr.orchestration.TaskSchedule.TriggerConditionsEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class TaskSchedule::_Internal {
 public:
};

TaskSchedule::TaskSchedule(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.orchestration.TaskSchedule)
}
inline PROTOBUF_NDEBUG_INLINE TaskSchedule::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::orchestration::TaskSchedule& from_msg)
      : schedule_metadata_{visibility, arena, from.schedule_metadata_},
        trigger_conditions_{visibility, arena, from.trigger_conditions_},
        task_id_(arena, from.task_id_),
        cron_expression_(arena, from.cron_expression_),
        timezone_(arena, from.timezone_),
        next_run_time_(arena, from.next_run_time_),
        last_scheduled_adjustment_(arena, from.last_scheduled_adjustment_),
        _cached_size_{0} {}

TaskSchedule::TaskSchedule(
    ::google::protobuf::Arena* arena,
    const TaskSchedule& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TaskSchedule* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, is_recurring_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, is_recurring_),
           offsetof(Impl_, adaptive_rescheduling_enabled_) -
               offsetof(Impl_, is_recurring_) +
               sizeof(Impl_::adaptive_rescheduling_enabled_));

  // @@protoc_insertion_point(copy_constructor:seigr.orchestration.TaskSchedule)
}
inline PROTOBUF_NDEBUG_INLINE TaskSchedule::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : schedule_metadata_{visibility, arena},
        trigger_conditions_{visibility, arena},
        task_id_(arena),
        cron_expression_(arena),
        timezone_(arena),
        next_run_time_(arena),
        last_scheduled_adjustment_(arena),
        _cached_size_{0} {}

inline void TaskSchedule::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, is_recurring_),
           0,
           offsetof(Impl_, adaptive_rescheduling_enabled_) -
               offsetof(Impl_, is_recurring_) +
               sizeof(Impl_::adaptive_rescheduling_enabled_));
}
TaskSchedule::~TaskSchedule() {
  // @@protoc_insertion_point(destructor:seigr.orchestration.TaskSchedule)
  SharedDtor(*this);
}
inline void TaskSchedule::SharedDtor(MessageLite& self) {
  TaskSchedule& this_ = static_cast<TaskSchedule&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.task_id_.Destroy();
  this_._impl_.cron_expression_.Destroy();
  this_._impl_.timezone_.Destroy();
  this_._impl_.next_run_time_.Destroy();
  this_._impl_.last_scheduled_adjustment_.Destroy();
  this_._impl_.~Impl_();
}

inline void* TaskSchedule::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TaskSchedule(arena);
}
constexpr auto TaskSchedule::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(TaskSchedule, _impl_.schedule_metadata_) +
          decltype(TaskSchedule::_impl_.schedule_metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TaskSchedule, _impl_.schedule_metadata_) +
          decltype(TaskSchedule::_impl_.schedule_metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TaskSchedule, _impl_.trigger_conditions_) +
          decltype(TaskSchedule::_impl_.trigger_conditions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TaskSchedule, _impl_.trigger_conditions_) +
          decltype(TaskSchedule::_impl_.trigger_conditions_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(TaskSchedule), alignof(TaskSchedule), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&TaskSchedule::PlacementNew_,
                                 sizeof(TaskSchedule),
                                 alignof(TaskSchedule));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TaskSchedule::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TaskSchedule_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TaskSchedule::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TaskSchedule>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TaskSchedule::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TaskSchedule>(), &TaskSchedule::ByteSizeLong,
            &TaskSchedule::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TaskSchedule, _impl_._cached_size_),
        false,
    },
    &TaskSchedule::kDescriptorMethods,
    &descriptor_table_orchestration_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TaskSchedule::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 2, 152, 2> TaskSchedule::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::orchestration::TaskSchedule>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string task_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TaskSchedule, _impl_.task_id_)}},
    // string cron_expression = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(TaskSchedule, _impl_.cron_expression_)}},
    // string timezone = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(TaskSchedule, _impl_.timezone_)}},
    // bool is_recurring = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TaskSchedule, _impl_.is_recurring_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(TaskSchedule, _impl_.is_recurring_)}},
    // string next_run_time = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(TaskSchedule, _impl_.next_run_time_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // bool adaptive_rescheduling_enabled = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TaskSchedule, _impl_.adaptive_rescheduling_enabled_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(TaskSchedule, _impl_.adaptive_rescheduling_enabled_)}},
    // string last_scheduled_adjustment = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(TaskSchedule, _impl_.last_scheduled_adjustment_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string task_id = 1;
    {PROTOBUF_FIELD_OFFSET(TaskSchedule, _impl_.task_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string cron_expression = 2;
    {PROTOBUF_FIELD_OFFSET(TaskSchedule, _impl_.cron_expression_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string timezone = 3;
    {PROTOBUF_FIELD_OFFSET(TaskSchedule, _impl_.timezone_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool is_recurring = 4;
    {PROTOBUF_FIELD_OFFSET(TaskSchedule, _impl_.is_recurring_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string next_run_time = 5;
    {PROTOBUF_FIELD_OFFSET(TaskSchedule, _impl_.next_run_time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> schedule_metadata = 6;
    {PROTOBUF_FIELD_OFFSET(TaskSchedule, _impl_.schedule_metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<string, string> trigger_conditions = 7;
    {PROTOBUF_FIELD_OFFSET(TaskSchedule, _impl_.trigger_conditions_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // bool adaptive_rescheduling_enabled = 8;
    {PROTOBUF_FIELD_OFFSET(TaskSchedule, _impl_.adaptive_rescheduling_enabled_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string last_scheduled_adjustment = 9;
    {PROTOBUF_FIELD_OFFSET(TaskSchedule, _impl_.last_scheduled_adjustment_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(TaskSchedule()._impl_.schedule_metadata_)>(
        1, 0, 0, 9,
        9)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(TaskSchedule()._impl_.trigger_conditions_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\40\7\17\10\0\15\21\22\0\31\0\0\0\0\0\0"
    "seigr.orchestration.TaskSchedule"
    "task_id"
    "cron_expression"
    "timezone"
    "next_run_time"
    "schedule_metadata"
    "trigger_conditions"
    "last_scheduled_adjustment"
  }},
};

PROTOBUF_NOINLINE void TaskSchedule::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.orchestration.TaskSchedule)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.schedule_metadata_.Clear();
  _impl_.trigger_conditions_.Clear();
  _impl_.task_id_.ClearToEmpty();
  _impl_.cron_expression_.ClearToEmpty();
  _impl_.timezone_.ClearToEmpty();
  _impl_.next_run_time_.ClearToEmpty();
  _impl_.last_scheduled_adjustment_.ClearToEmpty();
  ::memset(&_impl_.is_recurring_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.adaptive_rescheduling_enabled_) -
      reinterpret_cast<char*>(&_impl_.is_recurring_)) + sizeof(_impl_.adaptive_rescheduling_enabled_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TaskSchedule::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TaskSchedule& this_ = static_cast<const TaskSchedule&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TaskSchedule::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TaskSchedule& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.orchestration.TaskSchedule)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string task_id = 1;
          if (!this_._internal_task_id().empty()) {
            const std::string& _s = this_._internal_task_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.TaskSchedule.task_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string cron_expression = 2;
          if (!this_._internal_cron_expression().empty()) {
            const std::string& _s = this_._internal_cron_expression();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.TaskSchedule.cron_expression");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string timezone = 3;
          if (!this_._internal_timezone().empty()) {
            const std::string& _s = this_._internal_timezone();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.TaskSchedule.timezone");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // bool is_recurring = 4;
          if (this_._internal_is_recurring() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_is_recurring(), target);
          }

          // string next_run_time = 5;
          if (!this_._internal_next_run_time().empty()) {
            const std::string& _s = this_._internal_next_run_time();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.TaskSchedule.next_run_time");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // map<string, string> schedule_metadata = 6;
          if (!this_._internal_schedule_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_schedule_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.TaskSchedule.schedule_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.TaskSchedule.schedule_metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.TaskSchedule.schedule_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.TaskSchedule.schedule_metadata");
              }
            }
          }

          // map<string, string> trigger_conditions = 7;
          if (!this_._internal_trigger_conditions().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_trigger_conditions();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.TaskSchedule.trigger_conditions");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.TaskSchedule.trigger_conditions");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.TaskSchedule.trigger_conditions");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.TaskSchedule.trigger_conditions");
              }
            }
          }

          // bool adaptive_rescheduling_enabled = 8;
          if (this_._internal_adaptive_rescheduling_enabled() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                8, this_._internal_adaptive_rescheduling_enabled(), target);
          }

          // string last_scheduled_adjustment = 9;
          if (!this_._internal_last_scheduled_adjustment().empty()) {
            const std::string& _s = this_._internal_last_scheduled_adjustment();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.TaskSchedule.last_scheduled_adjustment");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.orchestration.TaskSchedule)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TaskSchedule::ByteSizeLong(const MessageLite& base) {
          const TaskSchedule& this_ = static_cast<const TaskSchedule&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TaskSchedule::ByteSizeLong() const {
          const TaskSchedule& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.orchestration.TaskSchedule)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> schedule_metadata = 6;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_schedule_metadata_size());
              for (const auto& entry : this_._internal_schedule_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // map<string, string> trigger_conditions = 7;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_trigger_conditions_size());
              for (const auto& entry : this_._internal_trigger_conditions()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string task_id = 1;
            if (!this_._internal_task_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_task_id());
            }
            // string cron_expression = 2;
            if (!this_._internal_cron_expression().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_cron_expression());
            }
            // string timezone = 3;
            if (!this_._internal_timezone().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_timezone());
            }
            // string next_run_time = 5;
            if (!this_._internal_next_run_time().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_next_run_time());
            }
            // string last_scheduled_adjustment = 9;
            if (!this_._internal_last_scheduled_adjustment().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_last_scheduled_adjustment());
            }
            // bool is_recurring = 4;
            if (this_._internal_is_recurring() != 0) {
              total_size += 2;
            }
            // bool adaptive_rescheduling_enabled = 8;
            if (this_._internal_adaptive_rescheduling_enabled() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TaskSchedule::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TaskSchedule*>(&to_msg);
  auto& from = static_cast<const TaskSchedule&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.orchestration.TaskSchedule)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.schedule_metadata_.MergeFrom(from._impl_.schedule_metadata_);
  _this->_impl_.trigger_conditions_.MergeFrom(from._impl_.trigger_conditions_);
  if (!from._internal_task_id().empty()) {
    _this->_internal_set_task_id(from._internal_task_id());
  }
  if (!from._internal_cron_expression().empty()) {
    _this->_internal_set_cron_expression(from._internal_cron_expression());
  }
  if (!from._internal_timezone().empty()) {
    _this->_internal_set_timezone(from._internal_timezone());
  }
  if (!from._internal_next_run_time().empty()) {
    _this->_internal_set_next_run_time(from._internal_next_run_time());
  }
  if (!from._internal_last_scheduled_adjustment().empty()) {
    _this->_internal_set_last_scheduled_adjustment(from._internal_last_scheduled_adjustment());
  }
  if (from._internal_is_recurring() != 0) {
    _this->_impl_.is_recurring_ = from._impl_.is_recurring_;
  }
  if (from._internal_adaptive_rescheduling_enabled() != 0) {
    _this->_impl_.adaptive_rescheduling_enabled_ = from._impl_.adaptive_rescheduling_enabled_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TaskSchedule::CopyFrom(const TaskSchedule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.orchestration.TaskSchedule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TaskSchedule::InternalSwap(TaskSchedule* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.schedule_metadata_.InternalSwap(&other->_impl_.schedule_metadata_);
  _impl_.trigger_conditions_.InternalSwap(&other->_impl_.trigger_conditions_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.task_id_, &other->_impl_.task_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cron_expression_, &other->_impl_.cron_expression_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.timezone_, &other->_impl_.timezone_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.next_run_time_, &other->_impl_.next_run_time_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.last_scheduled_adjustment_, &other->_impl_.last_scheduled_adjustment_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TaskSchedule, _impl_.adaptive_rescheduling_enabled_)
      + sizeof(TaskSchedule::_impl_.adaptive_rescheduling_enabled_)
      - PROTOBUF_FIELD_OFFSET(TaskSchedule, _impl_.is_recurring_)>(
          reinterpret_cast<char*>(&_impl_.is_recurring_),
          reinterpret_cast<char*>(&other->_impl_.is_recurring_));
}

::google::protobuf::Metadata TaskSchedule::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              TaskMonitoring_MonitoringDataEntry_DoNotUse::TaskMonitoring_MonitoringDataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              TaskMonitoring_MonitoringDataEntry_DoNotUse::TaskMonitoring_MonitoringDataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              TaskMonitoring_MonitoringDataEntry_DoNotUse::TaskMonitoring_MonitoringDataEntry_DoNotUse() : SuperType() {}
              TaskMonitoring_MonitoringDataEntry_DoNotUse::TaskMonitoring_MonitoringDataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* TaskMonitoring_MonitoringDataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) TaskMonitoring_MonitoringDataEntry_DoNotUse(arena);
              }
              constexpr auto TaskMonitoring_MonitoringDataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TaskMonitoring_MonitoringDataEntry_DoNotUse),
                                                          alignof(TaskMonitoring_MonitoringDataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull TaskMonitoring_MonitoringDataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_TaskMonitoring_MonitoringDataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &TaskMonitoring_MonitoringDataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<TaskMonitoring_MonitoringDataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &TaskMonitoring_MonitoringDataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &TaskMonitoring_MonitoringDataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(TaskMonitoring_MonitoringDataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &TaskMonitoring_MonitoringDataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_orchestration_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* TaskMonitoring_MonitoringDataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 71, 2> TaskMonitoring_MonitoringDataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TaskMonitoring_MonitoringDataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::orchestration::TaskMonitoring_MonitoringDataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(TaskMonitoring_MonitoringDataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TaskMonitoring_MonitoringDataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(TaskMonitoring_MonitoringDataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(TaskMonitoring_MonitoringDataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\66\3\5\0\0\0\0\0"
    "seigr.orchestration.TaskMonitoring.MonitoringDataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class TaskMonitoring::_Internal {
 public:
};

TaskMonitoring::TaskMonitoring(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.orchestration.TaskMonitoring)
}
inline PROTOBUF_NDEBUG_INLINE TaskMonitoring::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::orchestration::TaskMonitoring& from_msg)
      : monitoring_data_{visibility, arena, from.monitoring_data_},
        task_id_(arena, from.task_id_),
        last_update_(arena, from.last_update_),
        assigned_hyphen_(arena, from.assigned_hyphen_),
        error_message_(arena, from.error_message_),
        _cached_size_{0} {}

TaskMonitoring::TaskMonitoring(
    ::google::protobuf::Arena* arena,
    const TaskMonitoring& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TaskMonitoring* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, status_),
           offsetof(Impl_, progress_percentage_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::progress_percentage_));

  // @@protoc_insertion_point(copy_constructor:seigr.orchestration.TaskMonitoring)
}
inline PROTOBUF_NDEBUG_INLINE TaskMonitoring::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : monitoring_data_{visibility, arena},
        task_id_(arena),
        last_update_(arena),
        assigned_hyphen_(arena),
        error_message_(arena),
        _cached_size_{0} {}

inline void TaskMonitoring::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_),
           0,
           offsetof(Impl_, progress_percentage_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::progress_percentage_));
}
TaskMonitoring::~TaskMonitoring() {
  // @@protoc_insertion_point(destructor:seigr.orchestration.TaskMonitoring)
  SharedDtor(*this);
}
inline void TaskMonitoring::SharedDtor(MessageLite& self) {
  TaskMonitoring& this_ = static_cast<TaskMonitoring&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.task_id_.Destroy();
  this_._impl_.last_update_.Destroy();
  this_._impl_.assigned_hyphen_.Destroy();
  this_._impl_.error_message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* TaskMonitoring::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TaskMonitoring(arena);
}
constexpr auto TaskMonitoring::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(TaskMonitoring, _impl_.monitoring_data_) +
          decltype(TaskMonitoring::_impl_.monitoring_data_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TaskMonitoring, _impl_.monitoring_data_) +
          decltype(TaskMonitoring::_impl_.monitoring_data_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(TaskMonitoring), alignof(TaskMonitoring), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&TaskMonitoring::PlacementNew_,
                                 sizeof(TaskMonitoring),
                                 alignof(TaskMonitoring));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TaskMonitoring::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TaskMonitoring_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TaskMonitoring::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TaskMonitoring>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TaskMonitoring::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TaskMonitoring>(), &TaskMonitoring::ByteSizeLong,
            &TaskMonitoring::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TaskMonitoring, _impl_._cached_size_),
        false,
    },
    &TaskMonitoring::kDescriptorMethods,
    &descriptor_table_orchestration_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TaskMonitoring::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 1, 112, 2> TaskMonitoring::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::orchestration::TaskMonitoring>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string task_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TaskMonitoring, _impl_.task_id_)}},
    // .seigr.orchestration.TaskStatus status = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TaskMonitoring, _impl_.status_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(TaskMonitoring, _impl_.status_)}},
    // int32 current_attempt = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TaskMonitoring, _impl_.current_attempt_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(TaskMonitoring, _impl_.current_attempt_)}},
    // string last_update = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(TaskMonitoring, _impl_.last_update_)}},
    // string assigned_hyphen = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(TaskMonitoring, _impl_.assigned_hyphen_)}},
    // string error_message = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(TaskMonitoring, _impl_.error_message_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // int64 execution_duration_ms = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TaskMonitoring, _impl_.execution_duration_ms_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(TaskMonitoring, _impl_.execution_duration_ms_)}},
    // int64 memory_usage_bytes = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TaskMonitoring, _impl_.memory_usage_bytes_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(TaskMonitoring, _impl_.memory_usage_bytes_)}},
    // float cpu_load_percentage = 10;
    {::_pbi::TcParser::FastF32S1,
     {85, 63, 0, PROTOBUF_FIELD_OFFSET(TaskMonitoring, _impl_.cpu_load_percentage_)}},
    // float progress_percentage = 11;
    {::_pbi::TcParser::FastF32S1,
     {93, 63, 0, PROTOBUF_FIELD_OFFSET(TaskMonitoring, _impl_.progress_percentage_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string task_id = 1;
    {PROTOBUF_FIELD_OFFSET(TaskMonitoring, _impl_.task_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.orchestration.TaskStatus status = 2;
    {PROTOBUF_FIELD_OFFSET(TaskMonitoring, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // int32 current_attempt = 3;
    {PROTOBUF_FIELD_OFFSET(TaskMonitoring, _impl_.current_attempt_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string last_update = 4;
    {PROTOBUF_FIELD_OFFSET(TaskMonitoring, _impl_.last_update_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string assigned_hyphen = 5;
    {PROTOBUF_FIELD_OFFSET(TaskMonitoring, _impl_.assigned_hyphen_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string error_message = 6;
    {PROTOBUF_FIELD_OFFSET(TaskMonitoring, _impl_.error_message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> monitoring_data = 7;
    {PROTOBUF_FIELD_OFFSET(TaskMonitoring, _impl_.monitoring_data_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // int64 execution_duration_ms = 8;
    {PROTOBUF_FIELD_OFFSET(TaskMonitoring, _impl_.execution_duration_ms_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 memory_usage_bytes = 9;
    {PROTOBUF_FIELD_OFFSET(TaskMonitoring, _impl_.memory_usage_bytes_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // float cpu_load_percentage = 10;
    {PROTOBUF_FIELD_OFFSET(TaskMonitoring, _impl_.cpu_load_percentage_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float progress_percentage = 11;
    {PROTOBUF_FIELD_OFFSET(TaskMonitoring, _impl_.progress_percentage_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(TaskMonitoring()._impl_.monitoring_data_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\42\7\0\0\13\17\15\17\0\0\0\0\0\0\0\0"
    "seigr.orchestration.TaskMonitoring"
    "task_id"
    "last_update"
    "assigned_hyphen"
    "error_message"
    "monitoring_data"
  }},
};

PROTOBUF_NOINLINE void TaskMonitoring::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.orchestration.TaskMonitoring)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.monitoring_data_.Clear();
  _impl_.task_id_.ClearToEmpty();
  _impl_.last_update_.ClearToEmpty();
  _impl_.assigned_hyphen_.ClearToEmpty();
  _impl_.error_message_.ClearToEmpty();
  ::memset(&_impl_.status_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.progress_percentage_) -
      reinterpret_cast<char*>(&_impl_.status_)) + sizeof(_impl_.progress_percentage_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TaskMonitoring::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TaskMonitoring& this_ = static_cast<const TaskMonitoring&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TaskMonitoring::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TaskMonitoring& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.orchestration.TaskMonitoring)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string task_id = 1;
          if (!this_._internal_task_id().empty()) {
            const std::string& _s = this_._internal_task_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.TaskMonitoring.task_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // .seigr.orchestration.TaskStatus status = 2;
          if (this_._internal_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_status(), target);
          }

          // int32 current_attempt = 3;
          if (this_._internal_current_attempt() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_current_attempt(), target);
          }

          // string last_update = 4;
          if (!this_._internal_last_update().empty()) {
            const std::string& _s = this_._internal_last_update();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.TaskMonitoring.last_update");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string assigned_hyphen = 5;
          if (!this_._internal_assigned_hyphen().empty()) {
            const std::string& _s = this_._internal_assigned_hyphen();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.TaskMonitoring.assigned_hyphen");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string error_message = 6;
          if (!this_._internal_error_message().empty()) {
            const std::string& _s = this_._internal_error_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.TaskMonitoring.error_message");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // map<string, string> monitoring_data = 7;
          if (!this_._internal_monitoring_data().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_monitoring_data();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.TaskMonitoring.monitoring_data");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.TaskMonitoring.monitoring_data");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.TaskMonitoring.monitoring_data");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.TaskMonitoring.monitoring_data");
              }
            }
          }

          // int64 execution_duration_ms = 8;
          if (this_._internal_execution_duration_ms() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<8>(
                    stream, this_._internal_execution_duration_ms(), target);
          }

          // int64 memory_usage_bytes = 9;
          if (this_._internal_memory_usage_bytes() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<9>(
                    stream, this_._internal_memory_usage_bytes(), target);
          }

          // float cpu_load_percentage = 10;
          if (::absl::bit_cast<::uint32_t>(this_._internal_cpu_load_percentage()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                10, this_._internal_cpu_load_percentage(), target);
          }

          // float progress_percentage = 11;
          if (::absl::bit_cast<::uint32_t>(this_._internal_progress_percentage()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                11, this_._internal_progress_percentage(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.orchestration.TaskMonitoring)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TaskMonitoring::ByteSizeLong(const MessageLite& base) {
          const TaskMonitoring& this_ = static_cast<const TaskMonitoring&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TaskMonitoring::ByteSizeLong() const {
          const TaskMonitoring& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.orchestration.TaskMonitoring)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> monitoring_data = 7;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_monitoring_data_size());
              for (const auto& entry : this_._internal_monitoring_data()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string task_id = 1;
            if (!this_._internal_task_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_task_id());
            }
            // string last_update = 4;
            if (!this_._internal_last_update().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_last_update());
            }
            // string assigned_hyphen = 5;
            if (!this_._internal_assigned_hyphen().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_assigned_hyphen());
            }
            // string error_message = 6;
            if (!this_._internal_error_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_error_message());
            }
            // .seigr.orchestration.TaskStatus status = 2;
            if (this_._internal_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
            }
            // int32 current_attempt = 3;
            if (this_._internal_current_attempt() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_current_attempt());
            }
            // int64 execution_duration_ms = 8;
            if (this_._internal_execution_duration_ms() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_execution_duration_ms());
            }
            // int64 memory_usage_bytes = 9;
            if (this_._internal_memory_usage_bytes() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_memory_usage_bytes());
            }
            // float cpu_load_percentage = 10;
            if (::absl::bit_cast<::uint32_t>(this_._internal_cpu_load_percentage()) != 0) {
              total_size += 5;
            }
            // float progress_percentage = 11;
            if (::absl::bit_cast<::uint32_t>(this_._internal_progress_percentage()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TaskMonitoring::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TaskMonitoring*>(&to_msg);
  auto& from = static_cast<const TaskMonitoring&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.orchestration.TaskMonitoring)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.monitoring_data_.MergeFrom(from._impl_.monitoring_data_);
  if (!from._internal_task_id().empty()) {
    _this->_internal_set_task_id(from._internal_task_id());
  }
  if (!from._internal_last_update().empty()) {
    _this->_internal_set_last_update(from._internal_last_update());
  }
  if (!from._internal_assigned_hyphen().empty()) {
    _this->_internal_set_assigned_hyphen(from._internal_assigned_hyphen());
  }
  if (!from._internal_error_message().empty()) {
    _this->_internal_set_error_message(from._internal_error_message());
  }
  if (from._internal_status() != 0) {
    _this->_impl_.status_ = from._impl_.status_;
  }
  if (from._internal_current_attempt() != 0) {
    _this->_impl_.current_attempt_ = from._impl_.current_attempt_;
  }
  if (from._internal_execution_duration_ms() != 0) {
    _this->_impl_.execution_duration_ms_ = from._impl_.execution_duration_ms_;
  }
  if (from._internal_memory_usage_bytes() != 0) {
    _this->_impl_.memory_usage_bytes_ = from._impl_.memory_usage_bytes_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_cpu_load_percentage()) != 0) {
    _this->_impl_.cpu_load_percentage_ = from._impl_.cpu_load_percentage_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_progress_percentage()) != 0) {
    _this->_impl_.progress_percentage_ = from._impl_.progress_percentage_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TaskMonitoring::CopyFrom(const TaskMonitoring& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.orchestration.TaskMonitoring)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TaskMonitoring::InternalSwap(TaskMonitoring* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.monitoring_data_.InternalSwap(&other->_impl_.monitoring_data_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.task_id_, &other->_impl_.task_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.last_update_, &other->_impl_.last_update_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.assigned_hyphen_, &other->_impl_.assigned_hyphen_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_message_, &other->_impl_.error_message_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TaskMonitoring, _impl_.progress_percentage_)
      + sizeof(TaskMonitoring::_impl_.progress_percentage_)
      - PROTOBUF_FIELD_OFFSET(TaskMonitoring, _impl_.status_)>(
          reinterpret_cast<char*>(&_impl_.status_),
          reinterpret_cast<char*>(&other->_impl_.status_));
}

::google::protobuf::Metadata TaskMonitoring::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              OrchestrationConfig_EscalationPoliciesEntry_DoNotUse::OrchestrationConfig_EscalationPoliciesEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              OrchestrationConfig_EscalationPoliciesEntry_DoNotUse::OrchestrationConfig_EscalationPoliciesEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              OrchestrationConfig_EscalationPoliciesEntry_DoNotUse::OrchestrationConfig_EscalationPoliciesEntry_DoNotUse() : SuperType() {}
              OrchestrationConfig_EscalationPoliciesEntry_DoNotUse::OrchestrationConfig_EscalationPoliciesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* OrchestrationConfig_EscalationPoliciesEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) OrchestrationConfig_EscalationPoliciesEntry_DoNotUse(arena);
              }
              constexpr auto OrchestrationConfig_EscalationPoliciesEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(OrchestrationConfig_EscalationPoliciesEntry_DoNotUse),
                                                          alignof(OrchestrationConfig_EscalationPoliciesEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull OrchestrationConfig_EscalationPoliciesEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_OrchestrationConfig_EscalationPoliciesEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &OrchestrationConfig_EscalationPoliciesEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<OrchestrationConfig_EscalationPoliciesEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &OrchestrationConfig_EscalationPoliciesEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &OrchestrationConfig_EscalationPoliciesEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(OrchestrationConfig_EscalationPoliciesEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &OrchestrationConfig_EscalationPoliciesEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_orchestration_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* OrchestrationConfig_EscalationPoliciesEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 80, 2> OrchestrationConfig_EscalationPoliciesEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OrchestrationConfig_EscalationPoliciesEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::orchestration::OrchestrationConfig_EscalationPoliciesEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(OrchestrationConfig_EscalationPoliciesEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(OrchestrationConfig_EscalationPoliciesEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(OrchestrationConfig_EscalationPoliciesEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(OrchestrationConfig_EscalationPoliciesEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\77\3\5\0\0\0\0\0"
    "seigr.orchestration.OrchestrationConfig.EscalationPoliciesEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class OrchestrationConfig::_Internal {
 public:
};

OrchestrationConfig::OrchestrationConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.orchestration.OrchestrationConfig)
}
inline PROTOBUF_NDEBUG_INLINE OrchestrationConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::orchestration::OrchestrationConfig& from_msg)
      : escalation_policies_{visibility, arena, from.escalation_policies_},
        global_timeout_(arena, from.global_timeout_),
        _cached_size_{0} {}

OrchestrationConfig::OrchestrationConfig(
    ::google::protobuf::Arena* arena,
    const OrchestrationConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OrchestrationConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, max_parallel_tasks_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, max_parallel_tasks_),
           offsetof(Impl_, enable_adaptive_retry_) -
               offsetof(Impl_, max_parallel_tasks_) +
               sizeof(Impl_::enable_adaptive_retry_));

  // @@protoc_insertion_point(copy_constructor:seigr.orchestration.OrchestrationConfig)
}
inline PROTOBUF_NDEBUG_INLINE OrchestrationConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : escalation_policies_{visibility, arena},
        global_timeout_(arena),
        _cached_size_{0} {}

inline void OrchestrationConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, max_parallel_tasks_),
           0,
           offsetof(Impl_, enable_adaptive_retry_) -
               offsetof(Impl_, max_parallel_tasks_) +
               sizeof(Impl_::enable_adaptive_retry_));
}
OrchestrationConfig::~OrchestrationConfig() {
  // @@protoc_insertion_point(destructor:seigr.orchestration.OrchestrationConfig)
  SharedDtor(*this);
}
inline void OrchestrationConfig::SharedDtor(MessageLite& self) {
  OrchestrationConfig& this_ = static_cast<OrchestrationConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.global_timeout_.Destroy();
  this_._impl_.~Impl_();
}

inline void* OrchestrationConfig::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) OrchestrationConfig(arena);
}
constexpr auto OrchestrationConfig::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(OrchestrationConfig, _impl_.escalation_policies_) +
          decltype(OrchestrationConfig::_impl_.escalation_policies_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(OrchestrationConfig, _impl_.escalation_policies_) +
          decltype(OrchestrationConfig::_impl_.escalation_policies_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(OrchestrationConfig), alignof(OrchestrationConfig), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&OrchestrationConfig::PlacementNew_,
                                 sizeof(OrchestrationConfig),
                                 alignof(OrchestrationConfig));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull OrchestrationConfig::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_OrchestrationConfig_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &OrchestrationConfig::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<OrchestrationConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &OrchestrationConfig::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<OrchestrationConfig>(), &OrchestrationConfig::ByteSizeLong,
            &OrchestrationConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(OrchestrationConfig, _impl_._cached_size_),
        false,
    },
    &OrchestrationConfig::kDescriptorMethods,
    &descriptor_table_orchestration_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* OrchestrationConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 5, 1, 81, 2> OrchestrationConfig::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::orchestration::OrchestrationConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool enable_adaptive_retry = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(OrchestrationConfig, _impl_.enable_adaptive_retry_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(OrchestrationConfig, _impl_.enable_adaptive_retry_)}},
    // int32 max_parallel_tasks = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrchestrationConfig, _impl_.max_parallel_tasks_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(OrchestrationConfig, _impl_.max_parallel_tasks_)}},
    // int32 default_retry_limit = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrchestrationConfig, _impl_.default_retry_limit_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(OrchestrationConfig, _impl_.default_retry_limit_)}},
    // string global_timeout = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(OrchestrationConfig, _impl_.global_timeout_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 max_parallel_tasks = 1;
    {PROTOBUF_FIELD_OFFSET(OrchestrationConfig, _impl_.max_parallel_tasks_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 default_retry_limit = 2;
    {PROTOBUF_FIELD_OFFSET(OrchestrationConfig, _impl_.default_retry_limit_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string global_timeout = 3;
    {PROTOBUF_FIELD_OFFSET(OrchestrationConfig, _impl_.global_timeout_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool enable_adaptive_retry = 4;
    {PROTOBUF_FIELD_OFFSET(OrchestrationConfig, _impl_.enable_adaptive_retry_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // map<string, string> escalation_policies = 5;
    {PROTOBUF_FIELD_OFFSET(OrchestrationConfig, _impl_.escalation_policies_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(OrchestrationConfig()._impl_.escalation_policies_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\47\0\0\16\0\23\0\0"
    "seigr.orchestration.OrchestrationConfig"
    "global_timeout"
    "escalation_policies"
  }},
};

PROTOBUF_NOINLINE void OrchestrationConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.orchestration.OrchestrationConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.escalation_policies_.Clear();
  _impl_.global_timeout_.ClearToEmpty();
  ::memset(&_impl_.max_parallel_tasks_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.enable_adaptive_retry_) -
      reinterpret_cast<char*>(&_impl_.max_parallel_tasks_)) + sizeof(_impl_.enable_adaptive_retry_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* OrchestrationConfig::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const OrchestrationConfig& this_ = static_cast<const OrchestrationConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* OrchestrationConfig::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const OrchestrationConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.orchestration.OrchestrationConfig)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 max_parallel_tasks = 1;
          if (this_._internal_max_parallel_tasks() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_max_parallel_tasks(), target);
          }

          // int32 default_retry_limit = 2;
          if (this_._internal_default_retry_limit() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_default_retry_limit(), target);
          }

          // string global_timeout = 3;
          if (!this_._internal_global_timeout().empty()) {
            const std::string& _s = this_._internal_global_timeout();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.OrchestrationConfig.global_timeout");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // bool enable_adaptive_retry = 4;
          if (this_._internal_enable_adaptive_retry() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_enable_adaptive_retry(), target);
          }

          // map<string, string> escalation_policies = 5;
          if (!this_._internal_escalation_policies().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_escalation_policies();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    5, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.OrchestrationConfig.escalation_policies");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.OrchestrationConfig.escalation_policies");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    5, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.OrchestrationConfig.escalation_policies");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.OrchestrationConfig.escalation_policies");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.orchestration.OrchestrationConfig)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t OrchestrationConfig::ByteSizeLong(const MessageLite& base) {
          const OrchestrationConfig& this_ = static_cast<const OrchestrationConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t OrchestrationConfig::ByteSizeLong() const {
          const OrchestrationConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.orchestration.OrchestrationConfig)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> escalation_policies = 5;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_escalation_policies_size());
              for (const auto& entry : this_._internal_escalation_policies()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string global_timeout = 3;
            if (!this_._internal_global_timeout().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_global_timeout());
            }
            // int32 max_parallel_tasks = 1;
            if (this_._internal_max_parallel_tasks() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_max_parallel_tasks());
            }
            // int32 default_retry_limit = 2;
            if (this_._internal_default_retry_limit() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_default_retry_limit());
            }
            // bool enable_adaptive_retry = 4;
            if (this_._internal_enable_adaptive_retry() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void OrchestrationConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OrchestrationConfig*>(&to_msg);
  auto& from = static_cast<const OrchestrationConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.orchestration.OrchestrationConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.escalation_policies_.MergeFrom(from._impl_.escalation_policies_);
  if (!from._internal_global_timeout().empty()) {
    _this->_internal_set_global_timeout(from._internal_global_timeout());
  }
  if (from._internal_max_parallel_tasks() != 0) {
    _this->_impl_.max_parallel_tasks_ = from._impl_.max_parallel_tasks_;
  }
  if (from._internal_default_retry_limit() != 0) {
    _this->_impl_.default_retry_limit_ = from._impl_.default_retry_limit_;
  }
  if (from._internal_enable_adaptive_retry() != 0) {
    _this->_impl_.enable_adaptive_retry_ = from._impl_.enable_adaptive_retry_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OrchestrationConfig::CopyFrom(const OrchestrationConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.orchestration.OrchestrationConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OrchestrationConfig::InternalSwap(OrchestrationConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.escalation_policies_.InternalSwap(&other->_impl_.escalation_policies_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.global_timeout_, &other->_impl_.global_timeout_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OrchestrationConfig, _impl_.enable_adaptive_retry_)
      + sizeof(OrchestrationConfig::_impl_.enable_adaptive_retry_)
      - PROTOBUF_FIELD_OFFSET(OrchestrationConfig, _impl_.max_parallel_tasks_)>(
          reinterpret_cast<char*>(&_impl_.max_parallel_tasks_),
          reinterpret_cast<char*>(&other->_impl_.max_parallel_tasks_));
}

::google::protobuf::Metadata OrchestrationConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EscalationAction::_Internal {
 public:
};

EscalationAction::EscalationAction(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.orchestration.EscalationAction)
}
inline PROTOBUF_NDEBUG_INLINE EscalationAction::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::orchestration::EscalationAction& from_msg)
      : escalation_id_(arena, from.escalation_id_),
        affected_task_id_(arena, from.affected_task_id_),
        triggered_by_(arena, from.triggered_by_),
        escalation_timestamp_(arena, from.escalation_timestamp_),
        escalation_policy_id_(arena, from.escalation_policy_id_),
        resolution_status_(arena, from.resolution_status_),
        resolved_at_(arena, from.resolved_at_),
        _cached_size_{0} {}

EscalationAction::EscalationAction(
    ::google::protobuf::Arena* arena,
    const EscalationAction& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EscalationAction* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.priority_adjustment_ = from._impl_.priority_adjustment_;

  // @@protoc_insertion_point(copy_constructor:seigr.orchestration.EscalationAction)
}
inline PROTOBUF_NDEBUG_INLINE EscalationAction::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : escalation_id_(arena),
        affected_task_id_(arena),
        triggered_by_(arena),
        escalation_timestamp_(arena),
        escalation_policy_id_(arena),
        resolution_status_(arena),
        resolved_at_(arena),
        _cached_size_{0} {}

inline void EscalationAction::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.priority_adjustment_ = {};
}
EscalationAction::~EscalationAction() {
  // @@protoc_insertion_point(destructor:seigr.orchestration.EscalationAction)
  SharedDtor(*this);
}
inline void EscalationAction::SharedDtor(MessageLite& self) {
  EscalationAction& this_ = static_cast<EscalationAction&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.escalation_id_.Destroy();
  this_._impl_.affected_task_id_.Destroy();
  this_._impl_.triggered_by_.Destroy();
  this_._impl_.escalation_timestamp_.Destroy();
  this_._impl_.escalation_policy_id_.Destroy();
  this_._impl_.resolution_status_.Destroy();
  this_._impl_.resolved_at_.Destroy();
  this_._impl_.~Impl_();
}

inline void* EscalationAction::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EscalationAction(arena);
}
constexpr auto EscalationAction::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(EscalationAction),
                                            alignof(EscalationAction));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EscalationAction::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EscalationAction_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EscalationAction::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EscalationAction>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EscalationAction::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EscalationAction>(), &EscalationAction::ByteSizeLong,
            &EscalationAction::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EscalationAction, _impl_._cached_size_),
        false,
    },
    &EscalationAction::kDescriptorMethods,
    &descriptor_table_orchestration_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EscalationAction::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 0, 162, 2> EscalationAction::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::orchestration::EscalationAction>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string resolved_at = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(EscalationAction, _impl_.resolved_at_)}},
    // string escalation_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EscalationAction, _impl_.escalation_id_)}},
    // string affected_task_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(EscalationAction, _impl_.affected_task_id_)}},
    // string triggered_by = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(EscalationAction, _impl_.triggered_by_)}},
    // .seigr.orchestration.TaskPriority priority_adjustment = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EscalationAction, _impl_.priority_adjustment_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(EscalationAction, _impl_.priority_adjustment_)}},
    // string escalation_timestamp = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(EscalationAction, _impl_.escalation_timestamp_)}},
    // string escalation_policy_id = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(EscalationAction, _impl_.escalation_policy_id_)}},
    // string resolution_status = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(EscalationAction, _impl_.resolution_status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string escalation_id = 1;
    {PROTOBUF_FIELD_OFFSET(EscalationAction, _impl_.escalation_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string affected_task_id = 2;
    {PROTOBUF_FIELD_OFFSET(EscalationAction, _impl_.affected_task_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string triggered_by = 3;
    {PROTOBUF_FIELD_OFFSET(EscalationAction, _impl_.triggered_by_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.orchestration.TaskPriority priority_adjustment = 4;
    {PROTOBUF_FIELD_OFFSET(EscalationAction, _impl_.priority_adjustment_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string escalation_timestamp = 5;
    {PROTOBUF_FIELD_OFFSET(EscalationAction, _impl_.escalation_timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string escalation_policy_id = 6;
    {PROTOBUF_FIELD_OFFSET(EscalationAction, _impl_.escalation_policy_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string resolution_status = 7;
    {PROTOBUF_FIELD_OFFSET(EscalationAction, _impl_.resolution_status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string resolved_at = 8;
    {PROTOBUF_FIELD_OFFSET(EscalationAction, _impl_.resolved_at_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\44\15\20\14\0\24\24\21\13\0\0\0\0\0\0\0"
    "seigr.orchestration.EscalationAction"
    "escalation_id"
    "affected_task_id"
    "triggered_by"
    "escalation_timestamp"
    "escalation_policy_id"
    "resolution_status"
    "resolved_at"
  }},
};

PROTOBUF_NOINLINE void EscalationAction::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.orchestration.EscalationAction)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.escalation_id_.ClearToEmpty();
  _impl_.affected_task_id_.ClearToEmpty();
  _impl_.triggered_by_.ClearToEmpty();
  _impl_.escalation_timestamp_.ClearToEmpty();
  _impl_.escalation_policy_id_.ClearToEmpty();
  _impl_.resolution_status_.ClearToEmpty();
  _impl_.resolved_at_.ClearToEmpty();
  _impl_.priority_adjustment_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EscalationAction::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EscalationAction& this_ = static_cast<const EscalationAction&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EscalationAction::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EscalationAction& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.orchestration.EscalationAction)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string escalation_id = 1;
          if (!this_._internal_escalation_id().empty()) {
            const std::string& _s = this_._internal_escalation_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.EscalationAction.escalation_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string affected_task_id = 2;
          if (!this_._internal_affected_task_id().empty()) {
            const std::string& _s = this_._internal_affected_task_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.EscalationAction.affected_task_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string triggered_by = 3;
          if (!this_._internal_triggered_by().empty()) {
            const std::string& _s = this_._internal_triggered_by();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.EscalationAction.triggered_by");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // .seigr.orchestration.TaskPriority priority_adjustment = 4;
          if (this_._internal_priority_adjustment() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                4, this_._internal_priority_adjustment(), target);
          }

          // string escalation_timestamp = 5;
          if (!this_._internal_escalation_timestamp().empty()) {
            const std::string& _s = this_._internal_escalation_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.EscalationAction.escalation_timestamp");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string escalation_policy_id = 6;
          if (!this_._internal_escalation_policy_id().empty()) {
            const std::string& _s = this_._internal_escalation_policy_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.EscalationAction.escalation_policy_id");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // string resolution_status = 7;
          if (!this_._internal_resolution_status().empty()) {
            const std::string& _s = this_._internal_resolution_status();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.EscalationAction.resolution_status");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // string resolved_at = 8;
          if (!this_._internal_resolved_at().empty()) {
            const std::string& _s = this_._internal_resolved_at();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.orchestration.EscalationAction.resolved_at");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.orchestration.EscalationAction)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EscalationAction::ByteSizeLong(const MessageLite& base) {
          const EscalationAction& this_ = static_cast<const EscalationAction&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EscalationAction::ByteSizeLong() const {
          const EscalationAction& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.orchestration.EscalationAction)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string escalation_id = 1;
            if (!this_._internal_escalation_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_escalation_id());
            }
            // string affected_task_id = 2;
            if (!this_._internal_affected_task_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_affected_task_id());
            }
            // string triggered_by = 3;
            if (!this_._internal_triggered_by().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_triggered_by());
            }
            // string escalation_timestamp = 5;
            if (!this_._internal_escalation_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_escalation_timestamp());
            }
            // string escalation_policy_id = 6;
            if (!this_._internal_escalation_policy_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_escalation_policy_id());
            }
            // string resolution_status = 7;
            if (!this_._internal_resolution_status().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_resolution_status());
            }
            // string resolved_at = 8;
            if (!this_._internal_resolved_at().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_resolved_at());
            }
            // .seigr.orchestration.TaskPriority priority_adjustment = 4;
            if (this_._internal_priority_adjustment() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_priority_adjustment());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EscalationAction::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EscalationAction*>(&to_msg);
  auto& from = static_cast<const EscalationAction&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.orchestration.EscalationAction)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_escalation_id().empty()) {
    _this->_internal_set_escalation_id(from._internal_escalation_id());
  }
  if (!from._internal_affected_task_id().empty()) {
    _this->_internal_set_affected_task_id(from._internal_affected_task_id());
  }
  if (!from._internal_triggered_by().empty()) {
    _this->_internal_set_triggered_by(from._internal_triggered_by());
  }
  if (!from._internal_escalation_timestamp().empty()) {
    _this->_internal_set_escalation_timestamp(from._internal_escalation_timestamp());
  }
  if (!from._internal_escalation_policy_id().empty()) {
    _this->_internal_set_escalation_policy_id(from._internal_escalation_policy_id());
  }
  if (!from._internal_resolution_status().empty()) {
    _this->_internal_set_resolution_status(from._internal_resolution_status());
  }
  if (!from._internal_resolved_at().empty()) {
    _this->_internal_set_resolved_at(from._internal_resolved_at());
  }
  if (from._internal_priority_adjustment() != 0) {
    _this->_impl_.priority_adjustment_ = from._impl_.priority_adjustment_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EscalationAction::CopyFrom(const EscalationAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.orchestration.EscalationAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EscalationAction::InternalSwap(EscalationAction* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.escalation_id_, &other->_impl_.escalation_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.affected_task_id_, &other->_impl_.affected_task_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.triggered_by_, &other->_impl_.triggered_by_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.escalation_timestamp_, &other->_impl_.escalation_timestamp_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.escalation_policy_id_, &other->_impl_.escalation_policy_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.resolution_status_, &other->_impl_.resolution_status_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.resolved_at_, &other->_impl_.resolved_at_, arena);
  swap(_impl_.priority_adjustment_, other->_impl_.priority_adjustment_);
}

::google::protobuf::Metadata EscalationAction::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace orchestration
}  // namespace seigr
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_orchestration_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
