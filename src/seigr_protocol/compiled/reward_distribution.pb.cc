// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: reward_distribution.proto
// Protobuf C++ Version: 5.29.2

#include "reward_distribution.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace seigr {
namespace reward_distribution {

inline constexpr UpdateScalingConfigResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateScalingConfigResponse::UpdateScalingConfigResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateScalingConfigResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateScalingConfigResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateScalingConfigResponseDefaultTypeInternal() {}
  union {
    UpdateScalingConfigResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateScalingConfigResponseDefaultTypeInternal _UpdateScalingConfigResponse_default_instance_;

inline constexpr UpdateScalingConfigRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : new_scaling_factor_{0},
        new_adjustment_interval_{::uint64_t{0u}},
        min_scaling_factor_{0},
        max_scaling_factor_{0},
        eco_priority_weight_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateScalingConfigRequest::UpdateScalingConfigRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateScalingConfigRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateScalingConfigRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateScalingConfigRequestDefaultTypeInternal() {}
  union {
    UpdateScalingConfigRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateScalingConfigRequestDefaultTypeInternal _UpdateScalingConfigRequest_default_instance_;

inline constexpr RewardScalingConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : scaling_factor_{0},
        adjustment_interval_{::uint64_t{0u}},
        min_scaling_factor_{0},
        max_scaling_factor_{0},
        eco_priority_weight_{0},
        max_distribution_limit_{::uint64_t{0u}},
        adaptive_scaling_enabled_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RewardScalingConfig::RewardScalingConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RewardScalingConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RewardScalingConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RewardScalingConfigDefaultTypeInternal() {}
  union {
    RewardScalingConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RewardScalingConfigDefaultTypeInternal _RewardScalingConfig_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR Reward_DynamicParametersEntry_DoNotUse::Reward_DynamicParametersEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : Reward_DynamicParametersEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : Reward_DynamicParametersEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct Reward_DynamicParametersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Reward_DynamicParametersEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Reward_DynamicParametersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Reward_DynamicParametersEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Reward_DynamicParametersEntry_DoNotUseDefaultTypeInternal _Reward_DynamicParametersEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR Reward_ConditionsEntry_DoNotUse::Reward_ConditionsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : Reward_ConditionsEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : Reward_ConditionsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct Reward_ConditionsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Reward_ConditionsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Reward_ConditionsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Reward_ConditionsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Reward_ConditionsEntry_DoNotUseDefaultTypeInternal _Reward_ConditionsEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR RedistributionPool_DynamicThresholdsEntry_DoNotUse::RedistributionPool_DynamicThresholdsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : RedistributionPool_DynamicThresholdsEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : RedistributionPool_DynamicThresholdsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct RedistributionPool_DynamicThresholdsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RedistributionPool_DynamicThresholdsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RedistributionPool_DynamicThresholdsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    RedistributionPool_DynamicThresholdsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RedistributionPool_DynamicThresholdsEntry_DoNotUseDefaultTypeInternal _RedistributionPool_DynamicThresholdsEntry_DoNotUse_default_instance_;

inline constexpr GetRewardHistoryRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : recipient_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        limit_{0u},
        include_expired_{false},
        only_eco_rewards_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetRewardHistoryRequest::GetRewardHistoryRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetRewardHistoryRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRewardHistoryRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRewardHistoryRequestDefaultTypeInternal() {}
  union {
    GetRewardHistoryRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRewardHistoryRequestDefaultTypeInternal _GetRewardHistoryRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR EcoReportResponse_EcoIncentivesSummaryEntry_DoNotUse::EcoReportResponse_EcoIncentivesSummaryEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : EcoReportResponse_EcoIncentivesSummaryEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : EcoReportResponse_EcoIncentivesSummaryEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct EcoReportResponse_EcoIncentivesSummaryEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EcoReportResponse_EcoIncentivesSummaryEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EcoReportResponse_EcoIncentivesSummaryEntry_DoNotUseDefaultTypeInternal() {}
  union {
    EcoReportResponse_EcoIncentivesSummaryEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EcoReportResponse_EcoIncentivesSummaryEntry_DoNotUseDefaultTypeInternal _EcoReportResponse_EcoIncentivesSummaryEntry_DoNotUse_default_instance_;

inline constexpr EcoReportRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : period_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        include_detailed_breakdown_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EcoReportRequest::EcoReportRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EcoReportRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EcoReportRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EcoReportRequestDefaultTypeInternal() {}
  union {
    EcoReportRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EcoReportRequestDefaultTypeInternal _EcoReportRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR DistributePoolResponse_RewardDistributionBreakdownEntry_DoNotUse::DistributePoolResponse_RewardDistributionBreakdownEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : DistributePoolResponse_RewardDistributionBreakdownEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : DistributePoolResponse_RewardDistributionBreakdownEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct DistributePoolResponse_RewardDistributionBreakdownEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DistributePoolResponse_RewardDistributionBreakdownEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DistributePoolResponse_RewardDistributionBreakdownEntry_DoNotUseDefaultTypeInternal() {}
  union {
    DistributePoolResponse_RewardDistributionBreakdownEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DistributePoolResponse_RewardDistributionBreakdownEntry_DoNotUseDefaultTypeInternal _DistributePoolResponse_RewardDistributionBreakdownEntry_DoNotUse_default_instance_;

inline constexpr DistributePoolRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : senary_threshold_{::uint64_t{0u}},
        override_inactive_status_{false},
        prioritize_eco_friendly_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DistributePoolRequest::DistributePoolRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DistributePoolRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DistributePoolRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DistributePoolRequestDefaultTypeInternal() {}
  union {
    DistributePoolRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DistributePoolRequestDefaultTypeInternal _DistributePoolRequest_default_instance_;

inline constexpr AllocateRewardResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        reward_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AllocateRewardResponse::AllocateRewardResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AllocateRewardResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AllocateRewardResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AllocateRewardResponseDefaultTypeInternal() {}
  union {
    AllocateRewardResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AllocateRewardResponseDefaultTypeInternal _AllocateRewardResponse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR AllocateRewardRequest_AdditionalConditionsEntry_DoNotUse::AllocateRewardRequest_AdditionalConditionsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : AllocateRewardRequest_AdditionalConditionsEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : AllocateRewardRequest_AdditionalConditionsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct AllocateRewardRequest_AdditionalConditionsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AllocateRewardRequest_AdditionalConditionsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AllocateRewardRequest_AdditionalConditionsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    AllocateRewardRequest_AdditionalConditionsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AllocateRewardRequest_AdditionalConditionsEntry_DoNotUseDefaultTypeInternal _AllocateRewardRequest_AdditionalConditionsEntry_DoNotUse_default_instance_;

inline constexpr Reward::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : conditions_{},
        dynamic_parameters_{},
        reward_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        recipient_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        expiration_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        issued_by_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        amount_{::uint64_t{0u}},
        interval_{::uint64_t{0u}},
        reward_type_{static_cast< ::seigr::reward_distribution::RewardType >(0)},
        eco_friendly_flag_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Reward::Reward(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RewardDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RewardDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RewardDefaultTypeInternal() {}
  union {
    Reward _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RewardDefaultTypeInternal _Reward_default_instance_;

inline constexpr EcoReportResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : eco_incentives_summary_{},
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        total_eco_funds_distributed_{0},
        network_sustainability_score_{0},
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EcoReportResponse::EcoReportResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EcoReportResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EcoReportResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EcoReportResponseDefaultTypeInternal() {}
  union {
    EcoReportResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EcoReportResponseDefaultTypeInternal _EcoReportResponse_default_instance_;

inline constexpr DistributePoolResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : reward_distribution_breakdown_{},
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        distributed_amount_{::uint64_t{0u}},
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DistributePoolResponse::DistributePoolResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DistributePoolResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DistributePoolResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DistributePoolResponseDefaultTypeInternal() {}
  union {
    DistributePoolResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DistributePoolResponseDefaultTypeInternal _DistributePoolResponse_default_instance_;

inline constexpr AllocateRewardRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : additional_conditions_{},
        recipient_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        amount_{::uint64_t{0u}},
        reward_type_{static_cast< ::seigr::reward_distribution::RewardType >(0)},
        eco_incentive_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AllocateRewardRequest::AllocateRewardRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AllocateRewardRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AllocateRewardRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AllocateRewardRequestDefaultTypeInternal() {}
  union {
    AllocateRewardRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AllocateRewardRequestDefaultTypeInternal _AllocateRewardRequest_default_instance_;

inline constexpr RedistributionPool::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : reward_queue_{},
        dynamic_thresholds_{},
        last_distributed_at_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        pool_balance_{::uint64_t{0u}},
        senary_threshold_{::uint64_t{0u}},
        eco_reserve_fund_{::uint64_t{0u}},
        status_{static_cast< ::seigr::reward_distribution::PoolStatus >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RedistributionPool::RedistributionPool(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RedistributionPoolDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RedistributionPoolDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RedistributionPoolDefaultTypeInternal() {}
  union {
    RedistributionPool _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RedistributionPoolDefaultTypeInternal _RedistributionPool_default_instance_;

inline constexpr GetRewardHistoryResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : rewards_{},
        recipient_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetRewardHistoryResponse::GetRewardHistoryResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetRewardHistoryResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRewardHistoryResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRewardHistoryResponseDefaultTypeInternal() {}
  union {
    GetRewardHistoryResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRewardHistoryResponseDefaultTypeInternal _GetRewardHistoryResponse_default_instance_;
}  // namespace reward_distribution
}  // namespace seigr
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_reward_5fdistribution_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_reward_5fdistribution_2eproto = nullptr;
const ::uint32_t
    TableStruct_reward_5fdistribution_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::Reward_ConditionsEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::Reward_ConditionsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::Reward_ConditionsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::Reward_ConditionsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::Reward_DynamicParametersEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::Reward_DynamicParametersEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::Reward_DynamicParametersEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::Reward_DynamicParametersEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::Reward, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::Reward, _impl_.reward_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::Reward, _impl_.recipient_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::Reward, _impl_.amount_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::Reward, _impl_.reward_type_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::Reward, _impl_.interval_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::Reward, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::Reward, _impl_.expiration_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::Reward, _impl_.conditions_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::Reward, _impl_.issued_by_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::Reward, _impl_.eco_friendly_flag_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::Reward, _impl_.dynamic_parameters_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::RedistributionPool_DynamicThresholdsEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::RedistributionPool_DynamicThresholdsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::RedistributionPool_DynamicThresholdsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::RedistributionPool_DynamicThresholdsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::RedistributionPool, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::RedistributionPool, _impl_.pool_balance_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::RedistributionPool, _impl_.reward_queue_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::RedistributionPool, _impl_.senary_threshold_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::RedistributionPool, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::RedistributionPool, _impl_.dynamic_thresholds_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::RedistributionPool, _impl_.eco_reserve_fund_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::RedistributionPool, _impl_.last_distributed_at_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::RewardScalingConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::RewardScalingConfig, _impl_.scaling_factor_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::RewardScalingConfig, _impl_.adjustment_interval_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::RewardScalingConfig, _impl_.min_scaling_factor_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::RewardScalingConfig, _impl_.max_scaling_factor_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::RewardScalingConfig, _impl_.eco_priority_weight_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::RewardScalingConfig, _impl_.max_distribution_limit_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::RewardScalingConfig, _impl_.adaptive_scaling_enabled_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::AllocateRewardRequest_AdditionalConditionsEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::AllocateRewardRequest_AdditionalConditionsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::AllocateRewardRequest_AdditionalConditionsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::AllocateRewardRequest_AdditionalConditionsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::AllocateRewardRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::AllocateRewardRequest, _impl_.recipient_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::AllocateRewardRequest, _impl_.reward_type_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::AllocateRewardRequest, _impl_.amount_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::AllocateRewardRequest, _impl_.additional_conditions_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::AllocateRewardRequest, _impl_.eco_incentive_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::AllocateRewardResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::AllocateRewardResponse, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::AllocateRewardResponse, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::AllocateRewardResponse, _impl_.reward_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::DistributePoolRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::DistributePoolRequest, _impl_.senary_threshold_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::DistributePoolRequest, _impl_.override_inactive_status_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::DistributePoolRequest, _impl_.prioritize_eco_friendly_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::DistributePoolResponse_RewardDistributionBreakdownEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::DistributePoolResponse_RewardDistributionBreakdownEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::DistributePoolResponse_RewardDistributionBreakdownEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::DistributePoolResponse_RewardDistributionBreakdownEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::DistributePoolResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::DistributePoolResponse, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::DistributePoolResponse, _impl_.distributed_amount_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::DistributePoolResponse, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::DistributePoolResponse, _impl_.reward_distribution_breakdown_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::GetRewardHistoryRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::GetRewardHistoryRequest, _impl_.recipient_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::GetRewardHistoryRequest, _impl_.limit_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::GetRewardHistoryRequest, _impl_.include_expired_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::GetRewardHistoryRequest, _impl_.only_eco_rewards_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::GetRewardHistoryResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::GetRewardHistoryResponse, _impl_.recipient_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::GetRewardHistoryResponse, _impl_.rewards_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::UpdateScalingConfigRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::UpdateScalingConfigRequest, _impl_.new_scaling_factor_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::UpdateScalingConfigRequest, _impl_.new_adjustment_interval_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::UpdateScalingConfigRequest, _impl_.min_scaling_factor_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::UpdateScalingConfigRequest, _impl_.max_scaling_factor_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::UpdateScalingConfigRequest, _impl_.eco_priority_weight_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::UpdateScalingConfigResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::UpdateScalingConfigResponse, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::UpdateScalingConfigResponse, _impl_.message_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::EcoReportRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::EcoReportRequest, _impl_.period_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::EcoReportRequest, _impl_.include_detailed_breakdown_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::EcoReportResponse_EcoIncentivesSummaryEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::EcoReportResponse_EcoIncentivesSummaryEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::EcoReportResponse_EcoIncentivesSummaryEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::EcoReportResponse_EcoIncentivesSummaryEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::EcoReportResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::EcoReportResponse, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::EcoReportResponse, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::EcoReportResponse, _impl_.eco_incentives_summary_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::EcoReportResponse, _impl_.total_eco_funds_distributed_),
        PROTOBUF_FIELD_OFFSET(::seigr::reward_distribution::EcoReportResponse, _impl_.network_sustainability_score_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::seigr::reward_distribution::Reward_ConditionsEntry_DoNotUse)},
        {12, 22, -1, sizeof(::seigr::reward_distribution::Reward_DynamicParametersEntry_DoNotUse)},
        {24, -1, -1, sizeof(::seigr::reward_distribution::Reward)},
        {43, 53, -1, sizeof(::seigr::reward_distribution::RedistributionPool_DynamicThresholdsEntry_DoNotUse)},
        {55, -1, -1, sizeof(::seigr::reward_distribution::RedistributionPool)},
        {70, -1, -1, sizeof(::seigr::reward_distribution::RewardScalingConfig)},
        {85, 95, -1, sizeof(::seigr::reward_distribution::AllocateRewardRequest_AdditionalConditionsEntry_DoNotUse)},
        {97, -1, -1, sizeof(::seigr::reward_distribution::AllocateRewardRequest)},
        {110, -1, -1, sizeof(::seigr::reward_distribution::AllocateRewardResponse)},
        {121, -1, -1, sizeof(::seigr::reward_distribution::DistributePoolRequest)},
        {132, 142, -1, sizeof(::seigr::reward_distribution::DistributePoolResponse_RewardDistributionBreakdownEntry_DoNotUse)},
        {144, -1, -1, sizeof(::seigr::reward_distribution::DistributePoolResponse)},
        {156, -1, -1, sizeof(::seigr::reward_distribution::GetRewardHistoryRequest)},
        {168, -1, -1, sizeof(::seigr::reward_distribution::GetRewardHistoryResponse)},
        {178, -1, -1, sizeof(::seigr::reward_distribution::UpdateScalingConfigRequest)},
        {191, -1, -1, sizeof(::seigr::reward_distribution::UpdateScalingConfigResponse)},
        {201, -1, -1, sizeof(::seigr::reward_distribution::EcoReportRequest)},
        {211, 221, -1, sizeof(::seigr::reward_distribution::EcoReportResponse_EcoIncentivesSummaryEntry_DoNotUse)},
        {223, -1, -1, sizeof(::seigr::reward_distribution::EcoReportResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::seigr::reward_distribution::_Reward_ConditionsEntry_DoNotUse_default_instance_._instance,
    &::seigr::reward_distribution::_Reward_DynamicParametersEntry_DoNotUse_default_instance_._instance,
    &::seigr::reward_distribution::_Reward_default_instance_._instance,
    &::seigr::reward_distribution::_RedistributionPool_DynamicThresholdsEntry_DoNotUse_default_instance_._instance,
    &::seigr::reward_distribution::_RedistributionPool_default_instance_._instance,
    &::seigr::reward_distribution::_RewardScalingConfig_default_instance_._instance,
    &::seigr::reward_distribution::_AllocateRewardRequest_AdditionalConditionsEntry_DoNotUse_default_instance_._instance,
    &::seigr::reward_distribution::_AllocateRewardRequest_default_instance_._instance,
    &::seigr::reward_distribution::_AllocateRewardResponse_default_instance_._instance,
    &::seigr::reward_distribution::_DistributePoolRequest_default_instance_._instance,
    &::seigr::reward_distribution::_DistributePoolResponse_RewardDistributionBreakdownEntry_DoNotUse_default_instance_._instance,
    &::seigr::reward_distribution::_DistributePoolResponse_default_instance_._instance,
    &::seigr::reward_distribution::_GetRewardHistoryRequest_default_instance_._instance,
    &::seigr::reward_distribution::_GetRewardHistoryResponse_default_instance_._instance,
    &::seigr::reward_distribution::_UpdateScalingConfigRequest_default_instance_._instance,
    &::seigr::reward_distribution::_UpdateScalingConfigResponse_default_instance_._instance,
    &::seigr::reward_distribution::_EcoReportRequest_default_instance_._instance,
    &::seigr::reward_distribution::_EcoReportResponse_EcoIncentivesSummaryEntry_DoNotUse_default_instance_._instance,
    &::seigr::reward_distribution::_EcoReportResponse_default_instance_._instance,
};
const char descriptor_table_protodef_reward_5fdistribution_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\031reward_distribution.proto\022\031seigr.rewar"
    "d_distribution\"\356\003\n\006Reward\022\021\n\treward_id\030\001"
    " \001(\t\022\024\n\014recipient_id\030\002 \001(\t\022\016\n\006amount\030\003 \001"
    "(\004\022:\n\013reward_type\030\004 \001(\0162%.seigr.reward_d"
    "istribution.RewardType\022\020\n\010interval\030\005 \001(\004"
    "\022\021\n\ttimestamp\030\006 \001(\t\022\022\n\nexpiration\030\007 \001(\t\022"
    "E\n\nconditions\030\010 \003(\01321.seigr.reward_distr"
    "ibution.Reward.ConditionsEntry\022\021\n\tissued"
    "_by\030\t \001(\t\022\031\n\021eco_friendly_flag\030\n \001(\010\022T\n\022"
    "dynamic_parameters\030\013 \003(\01328.seigr.reward_"
    "distribution.Reward.DynamicParametersEnt"
    "ry\0321\n\017ConditionsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005va"
    "lue\030\002 \001(\t:\0028\001\0328\n\026DynamicParametersEntry\022"
    "\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\001:\0028\001\"\207\003\n\022Redi"
    "stributionPool\022\024\n\014pool_balance\030\001 \001(\004\0227\n\014"
    "reward_queue\030\002 \003(\0132!.seigr.reward_distri"
    "bution.Reward\022\030\n\020senary_threshold\030\003 \001(\004\022"
    "5\n\006status\030\004 \001(\0162%.seigr.reward_distribut"
    "ion.PoolStatus\022`\n\022dynamic_thresholds\030\005 \003"
    "(\0132D.seigr.reward_distribution.Redistrib"
    "utionPool.DynamicThresholdsEntry\022\030\n\020eco_"
    "reserve_fund\030\006 \001(\004\022\033\n\023last_distributed_a"
    "t\030\007 \001(\t\0328\n\026DynamicThresholdsEntry\022\013\n\003key"
    "\030\001 \001(\t\022\r\n\005value\030\002 \001(\001:\0028\001\"\341\001\n\023RewardScal"
    "ingConfig\022\026\n\016scaling_factor\030\001 \001(\001\022\033\n\023adj"
    "ustment_interval\030\002 \001(\004\022\032\n\022min_scaling_fa"
    "ctor\030\003 \001(\001\022\032\n\022max_scaling_factor\030\004 \001(\001\022\033"
    "\n\023eco_priority_weight\030\005 \001(\001\022\036\n\026max_distr"
    "ibution_limit\030\006 \001(\004\022 \n\030adaptive_scaling_"
    "enabled\030\007 \001(\010\"\270\002\n\025AllocateRewardRequest\022"
    "\024\n\014recipient_id\030\001 \001(\t\022:\n\013reward_type\030\002 \001"
    "(\0162%.seigr.reward_distribution.RewardTyp"
    "e\022\016\n\006amount\030\003 \001(\004\022i\n\025additional_conditio"
    "ns\030\004 \003(\0132J.seigr.reward_distribution.All"
    "ocateRewardRequest.AdditionalConditionsE"
    "ntry\022\025\n\reco_incentive\030\005 \001(\010\032;\n\031Additiona"
    "lConditionsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002"
    " \001(\t:\0028\001\"M\n\026AllocateRewardResponse\022\017\n\007su"
    "ccess\030\001 \001(\010\022\017\n\007message\030\002 \001(\t\022\021\n\treward_i"
    "d\030\003 \001(\t\"t\n\025DistributePoolRequest\022\030\n\020sena"
    "ry_threshold\030\001 \001(\004\022 \n\030override_inactive_"
    "status\030\002 \001(\010\022\037\n\027prioritize_eco_friendly\030"
    "\003 \001(\010\"\225\002\n\026DistributePoolResponse\022\017\n\007succ"
    "ess\030\001 \001(\010\022\032\n\022distributed_amount\030\002 \001(\004\022\017\n"
    "\007message\030\003 \001(\t\022y\n\035reward_distribution_br"
    "eakdown\030\004 \003(\0132R.seigr.reward_distributio"
    "n.DistributePoolResponse.RewardDistribut"
    "ionBreakdownEntry\032B\n RewardDistributionB"
    "reakdownEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001("
    "\004:\0028\001\"q\n\027GetRewardHistoryRequest\022\024\n\014reci"
    "pient_id\030\001 \001(\t\022\r\n\005limit\030\002 \001(\r\022\027\n\017include"
    "_expired\030\003 \001(\010\022\030\n\020only_eco_rewards\030\004 \001(\010"
    "\"d\n\030GetRewardHistoryResponse\022\024\n\014recipien"
    "t_id\030\001 \001(\t\0222\n\007rewards\030\002 \003(\0132!.seigr.rewa"
    "rd_distribution.Reward\"\256\001\n\032UpdateScaling"
    "ConfigRequest\022\032\n\022new_scaling_factor\030\001 \001("
    "\001\022\037\n\027new_adjustment_interval\030\002 \001(\004\022\032\n\022mi"
    "n_scaling_factor\030\003 \001(\001\022\032\n\022max_scaling_fa"
    "ctor\030\004 \001(\001\022\033\n\023eco_priority_weight\030\005 \001(\001\""
    "\?\n\033UpdateScalingConfigResponse\022\017\n\007succes"
    "s\030\001 \001(\010\022\017\n\007message\030\002 \001(\t\"F\n\020EcoReportReq"
    "uest\022\016\n\006period\030\001 \001(\t\022\"\n\032include_detailed"
    "_breakdown\030\002 \001(\010\"\245\002\n\021EcoReportResponse\022\017"
    "\n\007success\030\001 \001(\010\022\017\n\007message\030\002 \001(\t\022f\n\026eco_"
    "incentives_summary\030\003 \003(\0132F.seigr.reward_"
    "distribution.EcoReportResponse.EcoIncent"
    "ivesSummaryEntry\022#\n\033total_eco_funds_dist"
    "ributed\030\004 \001(\001\022$\n\034network_sustainability_"
    "score\030\005 \001(\001\032;\n\031EcoIncentivesSummaryEntry"
    "\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\001:\0028\001*\332\001\n\nRew"
    "ardType\022\031\n\025REWARD_TYPE_UNDEFINED\020\000\022\034\n\030RE"
    "WARD_TYPE_CONNECTIVITY\020\001\022$\n REWARD_TYPE_"
    "CONTENT_CONTRIBUTION\020\002\022$\n REWARD_TYPE_VO"
    "TING_PARTICIPATION\020\003\022#\n\037REWARD_TYPE_RESO"
    "URCE_EFFICIENCY\020\004\022\"\n\036REWARD_TYPE_COLLABO"
    "RATIVE_TASK\020\005*\221\001\n\nPoolStatus\022\031\n\025POOL_STA"
    "TUS_UNDEFINED\020\000\022\026\n\022POOL_STATUS_ACTIVE\020\001\022"
    "\030\n\024POOL_STATUS_INACTIVE\020\002\022\034\n\030POOL_STATUS"
    "_DISTRIBUTING\020\003\022\030\n\024POOL_STATUS_DEPLETED\020"
    "\0042\375\004\n\031RewardDistributionService\022u\n\016Alloc"
    "ateReward\0220.seigr.reward_distribution.Al"
    "locateRewardRequest\0321.seigr.reward_distr"
    "ibution.AllocateRewardResponse\022u\n\016Distri"
    "butePool\0220.seigr.reward_distribution.Dis"
    "tributePoolRequest\0321.seigr.reward_distri"
    "bution.DistributePoolResponse\022{\n\020GetRewa"
    "rdHistory\0222.seigr.reward_distribution.Ge"
    "tRewardHistoryRequest\0323.seigr.reward_dis"
    "tribution.GetRewardHistoryResponse\022\204\001\n\023U"
    "pdateScalingConfig\0225.seigr.reward_distri"
    "bution.UpdateScalingConfigRequest\0326.seig"
    "r.reward_distribution.UpdateScalingConfi"
    "gResponse\022n\n\021GenerateEcoReport\022+.seigr.r"
    "eward_distribution.EcoReportRequest\032,.se"
    "igr.reward_distribution.EcoReportRespons"
    "eb\006proto3"
};
static ::absl::once_flag descriptor_table_reward_5fdistribution_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_reward_5fdistribution_2eproto = {
    false,
    false,
    3809,
    descriptor_table_protodef_reward_5fdistribution_2eproto,
    "reward_distribution.proto",
    &descriptor_table_reward_5fdistribution_2eproto_once,
    nullptr,
    0,
    19,
    schemas,
    file_default_instances,
    TableStruct_reward_5fdistribution_2eproto::offsets,
    file_level_enum_descriptors_reward_5fdistribution_2eproto,
    file_level_service_descriptors_reward_5fdistribution_2eproto,
};
namespace seigr {
namespace reward_distribution {
const ::google::protobuf::EnumDescriptor* RewardType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_reward_5fdistribution_2eproto);
  return file_level_enum_descriptors_reward_5fdistribution_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t RewardType_internal_data_[] = {
    393216u, 0u, };
bool RewardType_IsValid(int value) {
  return 0 <= value && value <= 5;
}
const ::google::protobuf::EnumDescriptor* PoolStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_reward_5fdistribution_2eproto);
  return file_level_enum_descriptors_reward_5fdistribution_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t PoolStatus_internal_data_[] = {
    327680u, 0u, };
bool PoolStatus_IsValid(int value) {
  return 0 <= value && value <= 4;
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              Reward_ConditionsEntry_DoNotUse::Reward_ConditionsEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              Reward_ConditionsEntry_DoNotUse::Reward_ConditionsEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              Reward_ConditionsEntry_DoNotUse::Reward_ConditionsEntry_DoNotUse() : SuperType() {}
              Reward_ConditionsEntry_DoNotUse::Reward_ConditionsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* Reward_ConditionsEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) Reward_ConditionsEntry_DoNotUse(arena);
              }
              constexpr auto Reward_ConditionsEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Reward_ConditionsEntry_DoNotUse),
                                                          alignof(Reward_ConditionsEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull Reward_ConditionsEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_Reward_ConditionsEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &Reward_ConditionsEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<Reward_ConditionsEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &Reward_ConditionsEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &Reward_ConditionsEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(Reward_ConditionsEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &Reward_ConditionsEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_reward_5fdistribution_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* Reward_ConditionsEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 65, 2> Reward_ConditionsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Reward_ConditionsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::reward_distribution::Reward_ConditionsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Reward_ConditionsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Reward_ConditionsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(Reward_ConditionsEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(Reward_ConditionsEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\60\3\5\0\0\0\0\0"
    "seigr.reward_distribution.Reward.ConditionsEntry"
    "key"
    "value"
  }},
};

// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              Reward_DynamicParametersEntry_DoNotUse::Reward_DynamicParametersEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              Reward_DynamicParametersEntry_DoNotUse::Reward_DynamicParametersEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              Reward_DynamicParametersEntry_DoNotUse::Reward_DynamicParametersEntry_DoNotUse() : SuperType() {}
              Reward_DynamicParametersEntry_DoNotUse::Reward_DynamicParametersEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* Reward_DynamicParametersEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) Reward_DynamicParametersEntry_DoNotUse(arena);
              }
              constexpr auto Reward_DynamicParametersEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Reward_DynamicParametersEntry_DoNotUse),
                                                          alignof(Reward_DynamicParametersEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull Reward_DynamicParametersEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_Reward_DynamicParametersEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &Reward_DynamicParametersEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<Reward_DynamicParametersEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &Reward_DynamicParametersEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &Reward_DynamicParametersEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(Reward_DynamicParametersEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &Reward_DynamicParametersEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_reward_5fdistribution_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* Reward_DynamicParametersEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 67, 2> Reward_DynamicParametersEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Reward_DynamicParametersEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::reward_distribution::Reward_DynamicParametersEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double value = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(Reward_DynamicParametersEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Reward_DynamicParametersEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(Reward_DynamicParametersEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double value = 2;
    {PROTOBUF_FIELD_OFFSET(Reward_DynamicParametersEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
    "\67\3\0\0\0\0\0\0"
    "seigr.reward_distribution.Reward.DynamicParametersEntry"
    "key"
  }},
};

// ===================================================================

class Reward::_Internal {
 public:
};

Reward::Reward(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.reward_distribution.Reward)
}
inline PROTOBUF_NDEBUG_INLINE Reward::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::reward_distribution::Reward& from_msg)
      : conditions_{visibility, arena, from.conditions_},
        dynamic_parameters_{visibility, arena, from.dynamic_parameters_},
        reward_id_(arena, from.reward_id_),
        recipient_id_(arena, from.recipient_id_),
        timestamp_(arena, from.timestamp_),
        expiration_(arena, from.expiration_),
        issued_by_(arena, from.issued_by_),
        _cached_size_{0} {}

Reward::Reward(
    ::google::protobuf::Arena* arena,
    const Reward& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Reward* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, amount_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, amount_),
           offsetof(Impl_, eco_friendly_flag_) -
               offsetof(Impl_, amount_) +
               sizeof(Impl_::eco_friendly_flag_));

  // @@protoc_insertion_point(copy_constructor:seigr.reward_distribution.Reward)
}
inline PROTOBUF_NDEBUG_INLINE Reward::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : conditions_{visibility, arena},
        dynamic_parameters_{visibility, arena},
        reward_id_(arena),
        recipient_id_(arena),
        timestamp_(arena),
        expiration_(arena),
        issued_by_(arena),
        _cached_size_{0} {}

inline void Reward::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, amount_),
           0,
           offsetof(Impl_, eco_friendly_flag_) -
               offsetof(Impl_, amount_) +
               sizeof(Impl_::eco_friendly_flag_));
}
Reward::~Reward() {
  // @@protoc_insertion_point(destructor:seigr.reward_distribution.Reward)
  SharedDtor(*this);
}
inline void Reward::SharedDtor(MessageLite& self) {
  Reward& this_ = static_cast<Reward&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.reward_id_.Destroy();
  this_._impl_.recipient_id_.Destroy();
  this_._impl_.timestamp_.Destroy();
  this_._impl_.expiration_.Destroy();
  this_._impl_.issued_by_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Reward::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Reward(arena);
}
constexpr auto Reward::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Reward, _impl_.conditions_) +
          decltype(Reward::_impl_.conditions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Reward, _impl_.conditions_) +
          decltype(Reward::_impl_.conditions_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Reward, _impl_.dynamic_parameters_) +
          decltype(Reward::_impl_.dynamic_parameters_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Reward, _impl_.dynamic_parameters_) +
          decltype(Reward::_impl_.dynamic_parameters_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Reward), alignof(Reward), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Reward::PlacementNew_,
                                 sizeof(Reward),
                                 alignof(Reward));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Reward::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Reward_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Reward::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Reward>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Reward::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Reward>(), &Reward::ByteSizeLong,
            &Reward::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Reward, _impl_._cached_size_),
        false,
    },
    &Reward::kDescriptorMethods,
    &descriptor_table_reward_5fdistribution_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Reward::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 2, 126, 2> Reward::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::reward_distribution::Reward>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string reward_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Reward, _impl_.reward_id_)}},
    // string recipient_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Reward, _impl_.recipient_id_)}},
    // uint64 amount = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Reward, _impl_.amount_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Reward, _impl_.amount_)}},
    // .seigr.reward_distribution.RewardType reward_type = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Reward, _impl_.reward_type_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Reward, _impl_.reward_type_)}},
    // uint64 interval = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Reward, _impl_.interval_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(Reward, _impl_.interval_)}},
    // string timestamp = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Reward, _impl_.timestamp_)}},
    // string expiration = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(Reward, _impl_.expiration_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string issued_by = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(Reward, _impl_.issued_by_)}},
    // bool eco_friendly_flag = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Reward, _impl_.eco_friendly_flag_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(Reward, _impl_.eco_friendly_flag_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string reward_id = 1;
    {PROTOBUF_FIELD_OFFSET(Reward, _impl_.reward_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string recipient_id = 2;
    {PROTOBUF_FIELD_OFFSET(Reward, _impl_.recipient_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 amount = 3;
    {PROTOBUF_FIELD_OFFSET(Reward, _impl_.amount_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .seigr.reward_distribution.RewardType reward_type = 4;
    {PROTOBUF_FIELD_OFFSET(Reward, _impl_.reward_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // uint64 interval = 5;
    {PROTOBUF_FIELD_OFFSET(Reward, _impl_.interval_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string timestamp = 6;
    {PROTOBUF_FIELD_OFFSET(Reward, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string expiration = 7;
    {PROTOBUF_FIELD_OFFSET(Reward, _impl_.expiration_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> conditions = 8;
    {PROTOBUF_FIELD_OFFSET(Reward, _impl_.conditions_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string issued_by = 9;
    {PROTOBUF_FIELD_OFFSET(Reward, _impl_.issued_by_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool eco_friendly_flag = 10;
    {PROTOBUF_FIELD_OFFSET(Reward, _impl_.eco_friendly_flag_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // map<string, double> dynamic_parameters = 11;
    {PROTOBUF_FIELD_OFFSET(Reward, _impl_.dynamic_parameters_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(Reward()._impl_.conditions_)>(
        1, 0, 0, 9,
        9)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(Reward()._impl_.dynamic_parameters_)>(
        1, 0, 0, 9,
        1)},
  }}, {{
    "\40\11\14\0\0\0\11\12\12\11\0\22\0\0\0\0"
    "seigr.reward_distribution.Reward"
    "reward_id"
    "recipient_id"
    "timestamp"
    "expiration"
    "conditions"
    "issued_by"
    "dynamic_parameters"
  }},
};

PROTOBUF_NOINLINE void Reward::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.reward_distribution.Reward)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.conditions_.Clear();
  _impl_.dynamic_parameters_.Clear();
  _impl_.reward_id_.ClearToEmpty();
  _impl_.recipient_id_.ClearToEmpty();
  _impl_.timestamp_.ClearToEmpty();
  _impl_.expiration_.ClearToEmpty();
  _impl_.issued_by_.ClearToEmpty();
  ::memset(&_impl_.amount_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.eco_friendly_flag_) -
      reinterpret_cast<char*>(&_impl_.amount_)) + sizeof(_impl_.eco_friendly_flag_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Reward::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Reward& this_ = static_cast<const Reward&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Reward::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Reward& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.reward_distribution.Reward)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string reward_id = 1;
          if (!this_._internal_reward_id().empty()) {
            const std::string& _s = this_._internal_reward_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.reward_distribution.Reward.reward_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string recipient_id = 2;
          if (!this_._internal_recipient_id().empty()) {
            const std::string& _s = this_._internal_recipient_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.reward_distribution.Reward.recipient_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // uint64 amount = 3;
          if (this_._internal_amount() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                3, this_._internal_amount(), target);
          }

          // .seigr.reward_distribution.RewardType reward_type = 4;
          if (this_._internal_reward_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                4, this_._internal_reward_type(), target);
          }

          // uint64 interval = 5;
          if (this_._internal_interval() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                5, this_._internal_interval(), target);
          }

          // string timestamp = 6;
          if (!this_._internal_timestamp().empty()) {
            const std::string& _s = this_._internal_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.reward_distribution.Reward.timestamp");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // string expiration = 7;
          if (!this_._internal_expiration().empty()) {
            const std::string& _s = this_._internal_expiration();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.reward_distribution.Reward.expiration");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // map<string, string> conditions = 8;
          if (!this_._internal_conditions().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_conditions();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    8, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.reward_distribution.Reward.conditions");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.reward_distribution.Reward.conditions");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    8, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.reward_distribution.Reward.conditions");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.reward_distribution.Reward.conditions");
              }
            }
          }

          // string issued_by = 9;
          if (!this_._internal_issued_by().empty()) {
            const std::string& _s = this_._internal_issued_by();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.reward_distribution.Reward.issued_by");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          // bool eco_friendly_flag = 10;
          if (this_._internal_eco_friendly_flag() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                10, this_._internal_eco_friendly_flag(), target);
          }

          // map<string, double> dynamic_parameters = 11;
          if (!this_._internal_dynamic_parameters().empty()) {
            using MapType = ::google::protobuf::Map<std::string, double>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, double,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_DOUBLE>;
            const auto& field = this_._internal_dynamic_parameters();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    11, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.reward_distribution.Reward.dynamic_parameters");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    11, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.reward_distribution.Reward.dynamic_parameters");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.reward_distribution.Reward)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Reward::ByteSizeLong(const MessageLite& base) {
          const Reward& this_ = static_cast<const Reward&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Reward::ByteSizeLong() const {
          const Reward& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.reward_distribution.Reward)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> conditions = 8;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_conditions_size());
              for (const auto& entry : this_._internal_conditions()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // map<string, double> dynamic_parameters = 11;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_dynamic_parameters_size());
              for (const auto& entry : this_._internal_dynamic_parameters()) {
                total_size += _pbi::MapEntryFuncs<std::string, double,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_DOUBLE>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string reward_id = 1;
            if (!this_._internal_reward_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_reward_id());
            }
            // string recipient_id = 2;
            if (!this_._internal_recipient_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_recipient_id());
            }
            // string timestamp = 6;
            if (!this_._internal_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_timestamp());
            }
            // string expiration = 7;
            if (!this_._internal_expiration().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_expiration());
            }
            // string issued_by = 9;
            if (!this_._internal_issued_by().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_issued_by());
            }
            // uint64 amount = 3;
            if (this_._internal_amount() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_amount());
            }
            // uint64 interval = 5;
            if (this_._internal_interval() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_interval());
            }
            // .seigr.reward_distribution.RewardType reward_type = 4;
            if (this_._internal_reward_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_reward_type());
            }
            // bool eco_friendly_flag = 10;
            if (this_._internal_eco_friendly_flag() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Reward::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Reward*>(&to_msg);
  auto& from = static_cast<const Reward&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.reward_distribution.Reward)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.conditions_.MergeFrom(from._impl_.conditions_);
  _this->_impl_.dynamic_parameters_.MergeFrom(from._impl_.dynamic_parameters_);
  if (!from._internal_reward_id().empty()) {
    _this->_internal_set_reward_id(from._internal_reward_id());
  }
  if (!from._internal_recipient_id().empty()) {
    _this->_internal_set_recipient_id(from._internal_recipient_id());
  }
  if (!from._internal_timestamp().empty()) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (!from._internal_expiration().empty()) {
    _this->_internal_set_expiration(from._internal_expiration());
  }
  if (!from._internal_issued_by().empty()) {
    _this->_internal_set_issued_by(from._internal_issued_by());
  }
  if (from._internal_amount() != 0) {
    _this->_impl_.amount_ = from._impl_.amount_;
  }
  if (from._internal_interval() != 0) {
    _this->_impl_.interval_ = from._impl_.interval_;
  }
  if (from._internal_reward_type() != 0) {
    _this->_impl_.reward_type_ = from._impl_.reward_type_;
  }
  if (from._internal_eco_friendly_flag() != 0) {
    _this->_impl_.eco_friendly_flag_ = from._impl_.eco_friendly_flag_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Reward::CopyFrom(const Reward& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.reward_distribution.Reward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Reward::InternalSwap(Reward* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.conditions_.InternalSwap(&other->_impl_.conditions_);
  _impl_.dynamic_parameters_.InternalSwap(&other->_impl_.dynamic_parameters_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reward_id_, &other->_impl_.reward_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.recipient_id_, &other->_impl_.recipient_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.timestamp_, &other->_impl_.timestamp_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.expiration_, &other->_impl_.expiration_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.issued_by_, &other->_impl_.issued_by_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Reward, _impl_.eco_friendly_flag_)
      + sizeof(Reward::_impl_.eco_friendly_flag_)
      - PROTOBUF_FIELD_OFFSET(Reward, _impl_.amount_)>(
          reinterpret_cast<char*>(&_impl_.amount_),
          reinterpret_cast<char*>(&other->_impl_.amount_));
}

::google::protobuf::Metadata Reward::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              RedistributionPool_DynamicThresholdsEntry_DoNotUse::RedistributionPool_DynamicThresholdsEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              RedistributionPool_DynamicThresholdsEntry_DoNotUse::RedistributionPool_DynamicThresholdsEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              RedistributionPool_DynamicThresholdsEntry_DoNotUse::RedistributionPool_DynamicThresholdsEntry_DoNotUse() : SuperType() {}
              RedistributionPool_DynamicThresholdsEntry_DoNotUse::RedistributionPool_DynamicThresholdsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* RedistributionPool_DynamicThresholdsEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) RedistributionPool_DynamicThresholdsEntry_DoNotUse(arena);
              }
              constexpr auto RedistributionPool_DynamicThresholdsEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RedistributionPool_DynamicThresholdsEntry_DoNotUse),
                                                          alignof(RedistributionPool_DynamicThresholdsEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull RedistributionPool_DynamicThresholdsEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_RedistributionPool_DynamicThresholdsEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &RedistributionPool_DynamicThresholdsEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<RedistributionPool_DynamicThresholdsEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &RedistributionPool_DynamicThresholdsEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &RedistributionPool_DynamicThresholdsEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(RedistributionPool_DynamicThresholdsEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &RedistributionPool_DynamicThresholdsEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_reward_5fdistribution_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* RedistributionPool_DynamicThresholdsEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 79, 2> RedistributionPool_DynamicThresholdsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RedistributionPool_DynamicThresholdsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::reward_distribution::RedistributionPool_DynamicThresholdsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double value = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(RedistributionPool_DynamicThresholdsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RedistributionPool_DynamicThresholdsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(RedistributionPool_DynamicThresholdsEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double value = 2;
    {PROTOBUF_FIELD_OFFSET(RedistributionPool_DynamicThresholdsEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
    "\103\3\0\0\0\0\0\0"
    "seigr.reward_distribution.RedistributionPool.DynamicThresholdsEntry"
    "key"
  }},
};

// ===================================================================

class RedistributionPool::_Internal {
 public:
};

RedistributionPool::RedistributionPool(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.reward_distribution.RedistributionPool)
}
inline PROTOBUF_NDEBUG_INLINE RedistributionPool::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::reward_distribution::RedistributionPool& from_msg)
      : reward_queue_{visibility, arena, from.reward_queue_},
        dynamic_thresholds_{visibility, arena, from.dynamic_thresholds_},
        last_distributed_at_(arena, from.last_distributed_at_),
        _cached_size_{0} {}

RedistributionPool::RedistributionPool(
    ::google::protobuf::Arena* arena,
    const RedistributionPool& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RedistributionPool* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, pool_balance_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, pool_balance_),
           offsetof(Impl_, status_) -
               offsetof(Impl_, pool_balance_) +
               sizeof(Impl_::status_));

  // @@protoc_insertion_point(copy_constructor:seigr.reward_distribution.RedistributionPool)
}
inline PROTOBUF_NDEBUG_INLINE RedistributionPool::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : reward_queue_{visibility, arena},
        dynamic_thresholds_{visibility, arena},
        last_distributed_at_(arena),
        _cached_size_{0} {}

inline void RedistributionPool::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, pool_balance_),
           0,
           offsetof(Impl_, status_) -
               offsetof(Impl_, pool_balance_) +
               sizeof(Impl_::status_));
}
RedistributionPool::~RedistributionPool() {
  // @@protoc_insertion_point(destructor:seigr.reward_distribution.RedistributionPool)
  SharedDtor(*this);
}
inline void RedistributionPool::SharedDtor(MessageLite& self) {
  RedistributionPool& this_ = static_cast<RedistributionPool&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.last_distributed_at_.Destroy();
  this_._impl_.~Impl_();
}

inline void* RedistributionPool::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RedistributionPool(arena);
}
constexpr auto RedistributionPool::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RedistributionPool, _impl_.reward_queue_) +
          decltype(RedistributionPool::_impl_.reward_queue_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RedistributionPool, _impl_.dynamic_thresholds_) +
          decltype(RedistributionPool::_impl_.dynamic_thresholds_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RedistributionPool, _impl_.dynamic_thresholds_) +
          decltype(RedistributionPool::_impl_.dynamic_thresholds_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(RedistributionPool), alignof(RedistributionPool), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RedistributionPool::PlacementNew_,
                                 sizeof(RedistributionPool),
                                 alignof(RedistributionPool));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RedistributionPool::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RedistributionPool_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RedistributionPool::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RedistributionPool>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RedistributionPool::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RedistributionPool>(), &RedistributionPool::ByteSizeLong,
            &RedistributionPool::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RedistributionPool, _impl_._cached_size_),
        false,
    },
    &RedistributionPool::kDescriptorMethods,
    &descriptor_table_reward_5fdistribution_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RedistributionPool::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 2, 90, 2> RedistributionPool::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::reward_distribution::RedistributionPool>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 pool_balance = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RedistributionPool, _impl_.pool_balance_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RedistributionPool, _impl_.pool_balance_)}},
    // repeated .seigr.reward_distribution.Reward reward_queue = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RedistributionPool, _impl_.reward_queue_)}},
    // uint64 senary_threshold = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RedistributionPool, _impl_.senary_threshold_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(RedistributionPool, _impl_.senary_threshold_)}},
    // .seigr.reward_distribution.PoolStatus status = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RedistributionPool, _impl_.status_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(RedistributionPool, _impl_.status_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 eco_reserve_fund = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RedistributionPool, _impl_.eco_reserve_fund_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(RedistributionPool, _impl_.eco_reserve_fund_)}},
    // string last_distributed_at = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(RedistributionPool, _impl_.last_distributed_at_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 pool_balance = 1;
    {PROTOBUF_FIELD_OFFSET(RedistributionPool, _impl_.pool_balance_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // repeated .seigr.reward_distribution.Reward reward_queue = 2;
    {PROTOBUF_FIELD_OFFSET(RedistributionPool, _impl_.reward_queue_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 senary_threshold = 3;
    {PROTOBUF_FIELD_OFFSET(RedistributionPool, _impl_.senary_threshold_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .seigr.reward_distribution.PoolStatus status = 4;
    {PROTOBUF_FIELD_OFFSET(RedistributionPool, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // map<string, double> dynamic_thresholds = 5;
    {PROTOBUF_FIELD_OFFSET(RedistributionPool, _impl_.dynamic_thresholds_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // uint64 eco_reserve_fund = 6;
    {PROTOBUF_FIELD_OFFSET(RedistributionPool, _impl_.eco_reserve_fund_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string last_distributed_at = 7;
    {PROTOBUF_FIELD_OFFSET(RedistributionPool, _impl_.last_distributed_at_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::seigr::reward_distribution::Reward>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(RedistributionPool()._impl_.dynamic_thresholds_)>(
        1, 0, 0, 9,
        1)},
  }}, {{
    "\54\0\0\0\0\22\0\23"
    "seigr.reward_distribution.RedistributionPool"
    "dynamic_thresholds"
    "last_distributed_at"
  }},
};

PROTOBUF_NOINLINE void RedistributionPool::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.reward_distribution.RedistributionPool)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reward_queue_.Clear();
  _impl_.dynamic_thresholds_.Clear();
  _impl_.last_distributed_at_.ClearToEmpty();
  ::memset(&_impl_.pool_balance_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.status_) -
      reinterpret_cast<char*>(&_impl_.pool_balance_)) + sizeof(_impl_.status_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RedistributionPool::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RedistributionPool& this_ = static_cast<const RedistributionPool&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RedistributionPool::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RedistributionPool& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.reward_distribution.RedistributionPool)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 pool_balance = 1;
          if (this_._internal_pool_balance() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_pool_balance(), target);
          }

          // repeated .seigr.reward_distribution.Reward reward_queue = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_reward_queue_size());
               i < n; i++) {
            const auto& repfield = this_._internal_reward_queue().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // uint64 senary_threshold = 3;
          if (this_._internal_senary_threshold() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                3, this_._internal_senary_threshold(), target);
          }

          // .seigr.reward_distribution.PoolStatus status = 4;
          if (this_._internal_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                4, this_._internal_status(), target);
          }

          // map<string, double> dynamic_thresholds = 5;
          if (!this_._internal_dynamic_thresholds().empty()) {
            using MapType = ::google::protobuf::Map<std::string, double>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, double,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_DOUBLE>;
            const auto& field = this_._internal_dynamic_thresholds();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    5, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.reward_distribution.RedistributionPool.dynamic_thresholds");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    5, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.reward_distribution.RedistributionPool.dynamic_thresholds");
              }
            }
          }

          // uint64 eco_reserve_fund = 6;
          if (this_._internal_eco_reserve_fund() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                6, this_._internal_eco_reserve_fund(), target);
          }

          // string last_distributed_at = 7;
          if (!this_._internal_last_distributed_at().empty()) {
            const std::string& _s = this_._internal_last_distributed_at();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.reward_distribution.RedistributionPool.last_distributed_at");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.reward_distribution.RedistributionPool)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RedistributionPool::ByteSizeLong(const MessageLite& base) {
          const RedistributionPool& this_ = static_cast<const RedistributionPool&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RedistributionPool::ByteSizeLong() const {
          const RedistributionPool& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.reward_distribution.RedistributionPool)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .seigr.reward_distribution.Reward reward_queue = 2;
            {
              total_size += 1UL * this_._internal_reward_queue_size();
              for (const auto& msg : this_._internal_reward_queue()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // map<string, double> dynamic_thresholds = 5;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_dynamic_thresholds_size());
              for (const auto& entry : this_._internal_dynamic_thresholds()) {
                total_size += _pbi::MapEntryFuncs<std::string, double,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_DOUBLE>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string last_distributed_at = 7;
            if (!this_._internal_last_distributed_at().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_last_distributed_at());
            }
            // uint64 pool_balance = 1;
            if (this_._internal_pool_balance() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_pool_balance());
            }
            // uint64 senary_threshold = 3;
            if (this_._internal_senary_threshold() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_senary_threshold());
            }
            // uint64 eco_reserve_fund = 6;
            if (this_._internal_eco_reserve_fund() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_eco_reserve_fund());
            }
            // .seigr.reward_distribution.PoolStatus status = 4;
            if (this_._internal_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RedistributionPool::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RedistributionPool*>(&to_msg);
  auto& from = static_cast<const RedistributionPool&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.reward_distribution.RedistributionPool)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_reward_queue()->MergeFrom(
      from._internal_reward_queue());
  _this->_impl_.dynamic_thresholds_.MergeFrom(from._impl_.dynamic_thresholds_);
  if (!from._internal_last_distributed_at().empty()) {
    _this->_internal_set_last_distributed_at(from._internal_last_distributed_at());
  }
  if (from._internal_pool_balance() != 0) {
    _this->_impl_.pool_balance_ = from._impl_.pool_balance_;
  }
  if (from._internal_senary_threshold() != 0) {
    _this->_impl_.senary_threshold_ = from._impl_.senary_threshold_;
  }
  if (from._internal_eco_reserve_fund() != 0) {
    _this->_impl_.eco_reserve_fund_ = from._impl_.eco_reserve_fund_;
  }
  if (from._internal_status() != 0) {
    _this->_impl_.status_ = from._impl_.status_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RedistributionPool::CopyFrom(const RedistributionPool& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.reward_distribution.RedistributionPool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RedistributionPool::InternalSwap(RedistributionPool* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.reward_queue_.InternalSwap(&other->_impl_.reward_queue_);
  _impl_.dynamic_thresholds_.InternalSwap(&other->_impl_.dynamic_thresholds_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.last_distributed_at_, &other->_impl_.last_distributed_at_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RedistributionPool, _impl_.status_)
      + sizeof(RedistributionPool::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(RedistributionPool, _impl_.pool_balance_)>(
          reinterpret_cast<char*>(&_impl_.pool_balance_),
          reinterpret_cast<char*>(&other->_impl_.pool_balance_));
}

::google::protobuf::Metadata RedistributionPool::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RewardScalingConfig::_Internal {
 public:
};

RewardScalingConfig::RewardScalingConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.reward_distribution.RewardScalingConfig)
}
RewardScalingConfig::RewardScalingConfig(
    ::google::protobuf::Arena* arena, const RewardScalingConfig& from)
    : RewardScalingConfig(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE RewardScalingConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RewardScalingConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, scaling_factor_),
           0,
           offsetof(Impl_, adaptive_scaling_enabled_) -
               offsetof(Impl_, scaling_factor_) +
               sizeof(Impl_::adaptive_scaling_enabled_));
}
RewardScalingConfig::~RewardScalingConfig() {
  // @@protoc_insertion_point(destructor:seigr.reward_distribution.RewardScalingConfig)
  SharedDtor(*this);
}
inline void RewardScalingConfig::SharedDtor(MessageLite& self) {
  RewardScalingConfig& this_ = static_cast<RewardScalingConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* RewardScalingConfig::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RewardScalingConfig(arena);
}
constexpr auto RewardScalingConfig::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RewardScalingConfig),
                                            alignof(RewardScalingConfig));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RewardScalingConfig::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RewardScalingConfig_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RewardScalingConfig::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RewardScalingConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RewardScalingConfig::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RewardScalingConfig>(), &RewardScalingConfig::ByteSizeLong,
            &RewardScalingConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RewardScalingConfig, _impl_._cached_size_),
        false,
    },
    &RewardScalingConfig::kDescriptorMethods,
    &descriptor_table_reward_5fdistribution_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RewardScalingConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 0, 2> RewardScalingConfig::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::reward_distribution::RewardScalingConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double scaling_factor = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(RewardScalingConfig, _impl_.scaling_factor_)}},
    // uint64 adjustment_interval = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RewardScalingConfig, _impl_.adjustment_interval_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(RewardScalingConfig, _impl_.adjustment_interval_)}},
    // double min_scaling_factor = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(RewardScalingConfig, _impl_.min_scaling_factor_)}},
    // double max_scaling_factor = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(RewardScalingConfig, _impl_.max_scaling_factor_)}},
    // double eco_priority_weight = 5;
    {::_pbi::TcParser::FastF64S1,
     {41, 63, 0, PROTOBUF_FIELD_OFFSET(RewardScalingConfig, _impl_.eco_priority_weight_)}},
    // uint64 max_distribution_limit = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RewardScalingConfig, _impl_.max_distribution_limit_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(RewardScalingConfig, _impl_.max_distribution_limit_)}},
    // bool adaptive_scaling_enabled = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RewardScalingConfig, _impl_.adaptive_scaling_enabled_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(RewardScalingConfig, _impl_.adaptive_scaling_enabled_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double scaling_factor = 1;
    {PROTOBUF_FIELD_OFFSET(RewardScalingConfig, _impl_.scaling_factor_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // uint64 adjustment_interval = 2;
    {PROTOBUF_FIELD_OFFSET(RewardScalingConfig, _impl_.adjustment_interval_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // double min_scaling_factor = 3;
    {PROTOBUF_FIELD_OFFSET(RewardScalingConfig, _impl_.min_scaling_factor_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double max_scaling_factor = 4;
    {PROTOBUF_FIELD_OFFSET(RewardScalingConfig, _impl_.max_scaling_factor_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double eco_priority_weight = 5;
    {PROTOBUF_FIELD_OFFSET(RewardScalingConfig, _impl_.eco_priority_weight_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // uint64 max_distribution_limit = 6;
    {PROTOBUF_FIELD_OFFSET(RewardScalingConfig, _impl_.max_distribution_limit_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // bool adaptive_scaling_enabled = 7;
    {PROTOBUF_FIELD_OFFSET(RewardScalingConfig, _impl_.adaptive_scaling_enabled_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void RewardScalingConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.reward_distribution.RewardScalingConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.scaling_factor_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.adaptive_scaling_enabled_) -
      reinterpret_cast<char*>(&_impl_.scaling_factor_)) + sizeof(_impl_.adaptive_scaling_enabled_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RewardScalingConfig::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RewardScalingConfig& this_ = static_cast<const RewardScalingConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RewardScalingConfig::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RewardScalingConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.reward_distribution.RewardScalingConfig)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double scaling_factor = 1;
          if (::absl::bit_cast<::uint64_t>(this_._internal_scaling_factor()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_scaling_factor(), target);
          }

          // uint64 adjustment_interval = 2;
          if (this_._internal_adjustment_interval() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_adjustment_interval(), target);
          }

          // double min_scaling_factor = 3;
          if (::absl::bit_cast<::uint64_t>(this_._internal_min_scaling_factor()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                3, this_._internal_min_scaling_factor(), target);
          }

          // double max_scaling_factor = 4;
          if (::absl::bit_cast<::uint64_t>(this_._internal_max_scaling_factor()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                4, this_._internal_max_scaling_factor(), target);
          }

          // double eco_priority_weight = 5;
          if (::absl::bit_cast<::uint64_t>(this_._internal_eco_priority_weight()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                5, this_._internal_eco_priority_weight(), target);
          }

          // uint64 max_distribution_limit = 6;
          if (this_._internal_max_distribution_limit() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                6, this_._internal_max_distribution_limit(), target);
          }

          // bool adaptive_scaling_enabled = 7;
          if (this_._internal_adaptive_scaling_enabled() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                7, this_._internal_adaptive_scaling_enabled(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.reward_distribution.RewardScalingConfig)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RewardScalingConfig::ByteSizeLong(const MessageLite& base) {
          const RewardScalingConfig& this_ = static_cast<const RewardScalingConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RewardScalingConfig::ByteSizeLong() const {
          const RewardScalingConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.reward_distribution.RewardScalingConfig)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // double scaling_factor = 1;
            if (::absl::bit_cast<::uint64_t>(this_._internal_scaling_factor()) != 0) {
              total_size += 9;
            }
            // uint64 adjustment_interval = 2;
            if (this_._internal_adjustment_interval() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_adjustment_interval());
            }
            // double min_scaling_factor = 3;
            if (::absl::bit_cast<::uint64_t>(this_._internal_min_scaling_factor()) != 0) {
              total_size += 9;
            }
            // double max_scaling_factor = 4;
            if (::absl::bit_cast<::uint64_t>(this_._internal_max_scaling_factor()) != 0) {
              total_size += 9;
            }
            // double eco_priority_weight = 5;
            if (::absl::bit_cast<::uint64_t>(this_._internal_eco_priority_weight()) != 0) {
              total_size += 9;
            }
            // uint64 max_distribution_limit = 6;
            if (this_._internal_max_distribution_limit() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_max_distribution_limit());
            }
            // bool adaptive_scaling_enabled = 7;
            if (this_._internal_adaptive_scaling_enabled() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RewardScalingConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RewardScalingConfig*>(&to_msg);
  auto& from = static_cast<const RewardScalingConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.reward_distribution.RewardScalingConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_scaling_factor()) != 0) {
    _this->_impl_.scaling_factor_ = from._impl_.scaling_factor_;
  }
  if (from._internal_adjustment_interval() != 0) {
    _this->_impl_.adjustment_interval_ = from._impl_.adjustment_interval_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_min_scaling_factor()) != 0) {
    _this->_impl_.min_scaling_factor_ = from._impl_.min_scaling_factor_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_max_scaling_factor()) != 0) {
    _this->_impl_.max_scaling_factor_ = from._impl_.max_scaling_factor_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_eco_priority_weight()) != 0) {
    _this->_impl_.eco_priority_weight_ = from._impl_.eco_priority_weight_;
  }
  if (from._internal_max_distribution_limit() != 0) {
    _this->_impl_.max_distribution_limit_ = from._impl_.max_distribution_limit_;
  }
  if (from._internal_adaptive_scaling_enabled() != 0) {
    _this->_impl_.adaptive_scaling_enabled_ = from._impl_.adaptive_scaling_enabled_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RewardScalingConfig::CopyFrom(const RewardScalingConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.reward_distribution.RewardScalingConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RewardScalingConfig::InternalSwap(RewardScalingConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RewardScalingConfig, _impl_.adaptive_scaling_enabled_)
      + sizeof(RewardScalingConfig::_impl_.adaptive_scaling_enabled_)
      - PROTOBUF_FIELD_OFFSET(RewardScalingConfig, _impl_.scaling_factor_)>(
          reinterpret_cast<char*>(&_impl_.scaling_factor_),
          reinterpret_cast<char*>(&other->_impl_.scaling_factor_));
}

::google::protobuf::Metadata RewardScalingConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              AllocateRewardRequest_AdditionalConditionsEntry_DoNotUse::AllocateRewardRequest_AdditionalConditionsEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              AllocateRewardRequest_AdditionalConditionsEntry_DoNotUse::AllocateRewardRequest_AdditionalConditionsEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              AllocateRewardRequest_AdditionalConditionsEntry_DoNotUse::AllocateRewardRequest_AdditionalConditionsEntry_DoNotUse() : SuperType() {}
              AllocateRewardRequest_AdditionalConditionsEntry_DoNotUse::AllocateRewardRequest_AdditionalConditionsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* AllocateRewardRequest_AdditionalConditionsEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) AllocateRewardRequest_AdditionalConditionsEntry_DoNotUse(arena);
              }
              constexpr auto AllocateRewardRequest_AdditionalConditionsEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AllocateRewardRequest_AdditionalConditionsEntry_DoNotUse),
                                                          alignof(AllocateRewardRequest_AdditionalConditionsEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull AllocateRewardRequest_AdditionalConditionsEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_AllocateRewardRequest_AdditionalConditionsEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &AllocateRewardRequest_AdditionalConditionsEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<AllocateRewardRequest_AdditionalConditionsEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &AllocateRewardRequest_AdditionalConditionsEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &AllocateRewardRequest_AdditionalConditionsEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(AllocateRewardRequest_AdditionalConditionsEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &AllocateRewardRequest_AdditionalConditionsEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_reward_5fdistribution_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* AllocateRewardRequest_AdditionalConditionsEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 90, 2> AllocateRewardRequest_AdditionalConditionsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AllocateRewardRequest_AdditionalConditionsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::reward_distribution::AllocateRewardRequest_AdditionalConditionsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AllocateRewardRequest_AdditionalConditionsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AllocateRewardRequest_AdditionalConditionsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(AllocateRewardRequest_AdditionalConditionsEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(AllocateRewardRequest_AdditionalConditionsEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\111\3\5\0\0\0\0\0"
    "seigr.reward_distribution.AllocateRewardRequest.AdditionalConditionsEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class AllocateRewardRequest::_Internal {
 public:
};

AllocateRewardRequest::AllocateRewardRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.reward_distribution.AllocateRewardRequest)
}
inline PROTOBUF_NDEBUG_INLINE AllocateRewardRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::reward_distribution::AllocateRewardRequest& from_msg)
      : additional_conditions_{visibility, arena, from.additional_conditions_},
        recipient_id_(arena, from.recipient_id_),
        _cached_size_{0} {}

AllocateRewardRequest::AllocateRewardRequest(
    ::google::protobuf::Arena* arena,
    const AllocateRewardRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AllocateRewardRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, amount_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, amount_),
           offsetof(Impl_, eco_incentive_) -
               offsetof(Impl_, amount_) +
               sizeof(Impl_::eco_incentive_));

  // @@protoc_insertion_point(copy_constructor:seigr.reward_distribution.AllocateRewardRequest)
}
inline PROTOBUF_NDEBUG_INLINE AllocateRewardRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : additional_conditions_{visibility, arena},
        recipient_id_(arena),
        _cached_size_{0} {}

inline void AllocateRewardRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, amount_),
           0,
           offsetof(Impl_, eco_incentive_) -
               offsetof(Impl_, amount_) +
               sizeof(Impl_::eco_incentive_));
}
AllocateRewardRequest::~AllocateRewardRequest() {
  // @@protoc_insertion_point(destructor:seigr.reward_distribution.AllocateRewardRequest)
  SharedDtor(*this);
}
inline void AllocateRewardRequest::SharedDtor(MessageLite& self) {
  AllocateRewardRequest& this_ = static_cast<AllocateRewardRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.recipient_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* AllocateRewardRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AllocateRewardRequest(arena);
}
constexpr auto AllocateRewardRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(AllocateRewardRequest, _impl_.additional_conditions_) +
          decltype(AllocateRewardRequest::_impl_.additional_conditions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(AllocateRewardRequest, _impl_.additional_conditions_) +
          decltype(AllocateRewardRequest::_impl_.additional_conditions_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(AllocateRewardRequest), alignof(AllocateRewardRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&AllocateRewardRequest::PlacementNew_,
                                 sizeof(AllocateRewardRequest),
                                 alignof(AllocateRewardRequest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AllocateRewardRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AllocateRewardRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AllocateRewardRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AllocateRewardRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AllocateRewardRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AllocateRewardRequest>(), &AllocateRewardRequest::ByteSizeLong,
            &AllocateRewardRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AllocateRewardRequest, _impl_._cached_size_),
        false,
    },
    &AllocateRewardRequest::kDescriptorMethods,
    &descriptor_table_reward_5fdistribution_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AllocateRewardRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 89, 2> AllocateRewardRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::reward_distribution::AllocateRewardRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string recipient_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AllocateRewardRequest, _impl_.recipient_id_)}},
    // .seigr.reward_distribution.RewardType reward_type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AllocateRewardRequest, _impl_.reward_type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(AllocateRewardRequest, _impl_.reward_type_)}},
    // uint64 amount = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(AllocateRewardRequest, _impl_.amount_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(AllocateRewardRequest, _impl_.amount_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // bool eco_incentive = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AllocateRewardRequest, _impl_.eco_incentive_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(AllocateRewardRequest, _impl_.eco_incentive_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string recipient_id = 1;
    {PROTOBUF_FIELD_OFFSET(AllocateRewardRequest, _impl_.recipient_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.reward_distribution.RewardType reward_type = 2;
    {PROTOBUF_FIELD_OFFSET(AllocateRewardRequest, _impl_.reward_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // uint64 amount = 3;
    {PROTOBUF_FIELD_OFFSET(AllocateRewardRequest, _impl_.amount_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // map<string, string> additional_conditions = 4;
    {PROTOBUF_FIELD_OFFSET(AllocateRewardRequest, _impl_.additional_conditions_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // bool eco_incentive = 5;
    {PROTOBUF_FIELD_OFFSET(AllocateRewardRequest, _impl_.eco_incentive_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(AllocateRewardRequest()._impl_.additional_conditions_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\57\14\0\0\25\0\0\0"
    "seigr.reward_distribution.AllocateRewardRequest"
    "recipient_id"
    "additional_conditions"
  }},
};

PROTOBUF_NOINLINE void AllocateRewardRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.reward_distribution.AllocateRewardRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.additional_conditions_.Clear();
  _impl_.recipient_id_.ClearToEmpty();
  ::memset(&_impl_.amount_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.eco_incentive_) -
      reinterpret_cast<char*>(&_impl_.amount_)) + sizeof(_impl_.eco_incentive_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AllocateRewardRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AllocateRewardRequest& this_ = static_cast<const AllocateRewardRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AllocateRewardRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AllocateRewardRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.reward_distribution.AllocateRewardRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string recipient_id = 1;
          if (!this_._internal_recipient_id().empty()) {
            const std::string& _s = this_._internal_recipient_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.reward_distribution.AllocateRewardRequest.recipient_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // .seigr.reward_distribution.RewardType reward_type = 2;
          if (this_._internal_reward_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_reward_type(), target);
          }

          // uint64 amount = 3;
          if (this_._internal_amount() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                3, this_._internal_amount(), target);
          }

          // map<string, string> additional_conditions = 4;
          if (!this_._internal_additional_conditions().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_additional_conditions();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    4, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.reward_distribution.AllocateRewardRequest.additional_conditions");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.reward_distribution.AllocateRewardRequest.additional_conditions");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    4, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.reward_distribution.AllocateRewardRequest.additional_conditions");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.reward_distribution.AllocateRewardRequest.additional_conditions");
              }
            }
          }

          // bool eco_incentive = 5;
          if (this_._internal_eco_incentive() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                5, this_._internal_eco_incentive(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.reward_distribution.AllocateRewardRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AllocateRewardRequest::ByteSizeLong(const MessageLite& base) {
          const AllocateRewardRequest& this_ = static_cast<const AllocateRewardRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AllocateRewardRequest::ByteSizeLong() const {
          const AllocateRewardRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.reward_distribution.AllocateRewardRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> additional_conditions = 4;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_additional_conditions_size());
              for (const auto& entry : this_._internal_additional_conditions()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string recipient_id = 1;
            if (!this_._internal_recipient_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_recipient_id());
            }
            // uint64 amount = 3;
            if (this_._internal_amount() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_amount());
            }
            // .seigr.reward_distribution.RewardType reward_type = 2;
            if (this_._internal_reward_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_reward_type());
            }
            // bool eco_incentive = 5;
            if (this_._internal_eco_incentive() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AllocateRewardRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AllocateRewardRequest*>(&to_msg);
  auto& from = static_cast<const AllocateRewardRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.reward_distribution.AllocateRewardRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.additional_conditions_.MergeFrom(from._impl_.additional_conditions_);
  if (!from._internal_recipient_id().empty()) {
    _this->_internal_set_recipient_id(from._internal_recipient_id());
  }
  if (from._internal_amount() != 0) {
    _this->_impl_.amount_ = from._impl_.amount_;
  }
  if (from._internal_reward_type() != 0) {
    _this->_impl_.reward_type_ = from._impl_.reward_type_;
  }
  if (from._internal_eco_incentive() != 0) {
    _this->_impl_.eco_incentive_ = from._impl_.eco_incentive_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AllocateRewardRequest::CopyFrom(const AllocateRewardRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.reward_distribution.AllocateRewardRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AllocateRewardRequest::InternalSwap(AllocateRewardRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.additional_conditions_.InternalSwap(&other->_impl_.additional_conditions_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.recipient_id_, &other->_impl_.recipient_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AllocateRewardRequest, _impl_.eco_incentive_)
      + sizeof(AllocateRewardRequest::_impl_.eco_incentive_)
      - PROTOBUF_FIELD_OFFSET(AllocateRewardRequest, _impl_.amount_)>(
          reinterpret_cast<char*>(&_impl_.amount_),
          reinterpret_cast<char*>(&other->_impl_.amount_));
}

::google::protobuf::Metadata AllocateRewardRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AllocateRewardResponse::_Internal {
 public:
};

AllocateRewardResponse::AllocateRewardResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.reward_distribution.AllocateRewardResponse)
}
inline PROTOBUF_NDEBUG_INLINE AllocateRewardResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::reward_distribution::AllocateRewardResponse& from_msg)
      : message_(arena, from.message_),
        reward_id_(arena, from.reward_id_),
        _cached_size_{0} {}

AllocateRewardResponse::AllocateRewardResponse(
    ::google::protobuf::Arena* arena,
    const AllocateRewardResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AllocateRewardResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:seigr.reward_distribution.AllocateRewardResponse)
}
inline PROTOBUF_NDEBUG_INLINE AllocateRewardResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_(arena),
        reward_id_(arena),
        _cached_size_{0} {}

inline void AllocateRewardResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
AllocateRewardResponse::~AllocateRewardResponse() {
  // @@protoc_insertion_point(destructor:seigr.reward_distribution.AllocateRewardResponse)
  SharedDtor(*this);
}
inline void AllocateRewardResponse::SharedDtor(MessageLite& self) {
  AllocateRewardResponse& this_ = static_cast<AllocateRewardResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  this_._impl_.reward_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* AllocateRewardResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AllocateRewardResponse(arena);
}
constexpr auto AllocateRewardResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AllocateRewardResponse),
                                            alignof(AllocateRewardResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AllocateRewardResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AllocateRewardResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AllocateRewardResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AllocateRewardResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AllocateRewardResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AllocateRewardResponse>(), &AllocateRewardResponse::ByteSizeLong,
            &AllocateRewardResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AllocateRewardResponse, _impl_._cached_size_),
        false,
    },
    &AllocateRewardResponse::kDescriptorMethods,
    &descriptor_table_reward_5fdistribution_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AllocateRewardResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 73, 2> AllocateRewardResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::reward_distribution::AllocateRewardResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AllocateRewardResponse, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AllocateRewardResponse, _impl_.success_)}},
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AllocateRewardResponse, _impl_.message_)}},
    // string reward_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(AllocateRewardResponse, _impl_.reward_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(AllocateRewardResponse, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(AllocateRewardResponse, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string reward_id = 3;
    {PROTOBUF_FIELD_OFFSET(AllocateRewardResponse, _impl_.reward_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\60\0\7\11\0\0\0\0"
    "seigr.reward_distribution.AllocateRewardResponse"
    "message"
    "reward_id"
  }},
};

PROTOBUF_NOINLINE void AllocateRewardResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.reward_distribution.AllocateRewardResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _impl_.reward_id_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AllocateRewardResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AllocateRewardResponse& this_ = static_cast<const AllocateRewardResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AllocateRewardResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AllocateRewardResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.reward_distribution.AllocateRewardResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool success = 1;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_success(), target);
          }

          // string message = 2;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.reward_distribution.AllocateRewardResponse.message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string reward_id = 3;
          if (!this_._internal_reward_id().empty()) {
            const std::string& _s = this_._internal_reward_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.reward_distribution.AllocateRewardResponse.reward_id");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.reward_distribution.AllocateRewardResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AllocateRewardResponse::ByteSizeLong(const MessageLite& base) {
          const AllocateRewardResponse& this_ = static_cast<const AllocateRewardResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AllocateRewardResponse::ByteSizeLong() const {
          const AllocateRewardResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.reward_distribution.AllocateRewardResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string message = 2;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
            // string reward_id = 3;
            if (!this_._internal_reward_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_reward_id());
            }
            // bool success = 1;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AllocateRewardResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AllocateRewardResponse*>(&to_msg);
  auto& from = static_cast<const AllocateRewardResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.reward_distribution.AllocateRewardResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (!from._internal_reward_id().empty()) {
    _this->_internal_set_reward_id(from._internal_reward_id());
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AllocateRewardResponse::CopyFrom(const AllocateRewardResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.reward_distribution.AllocateRewardResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AllocateRewardResponse::InternalSwap(AllocateRewardResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reward_id_, &other->_impl_.reward_id_, arena);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata AllocateRewardResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DistributePoolRequest::_Internal {
 public:
};

DistributePoolRequest::DistributePoolRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.reward_distribution.DistributePoolRequest)
}
DistributePoolRequest::DistributePoolRequest(
    ::google::protobuf::Arena* arena, const DistributePoolRequest& from)
    : DistributePoolRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE DistributePoolRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void DistributePoolRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, senary_threshold_),
           0,
           offsetof(Impl_, prioritize_eco_friendly_) -
               offsetof(Impl_, senary_threshold_) +
               sizeof(Impl_::prioritize_eco_friendly_));
}
DistributePoolRequest::~DistributePoolRequest() {
  // @@protoc_insertion_point(destructor:seigr.reward_distribution.DistributePoolRequest)
  SharedDtor(*this);
}
inline void DistributePoolRequest::SharedDtor(MessageLite& self) {
  DistributePoolRequest& this_ = static_cast<DistributePoolRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* DistributePoolRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DistributePoolRequest(arena);
}
constexpr auto DistributePoolRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(DistributePoolRequest),
                                            alignof(DistributePoolRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DistributePoolRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DistributePoolRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DistributePoolRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DistributePoolRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DistributePoolRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DistributePoolRequest>(), &DistributePoolRequest::ByteSizeLong,
            &DistributePoolRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DistributePoolRequest, _impl_._cached_size_),
        false,
    },
    &DistributePoolRequest::kDescriptorMethods,
    &descriptor_table_reward_5fdistribution_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DistributePoolRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> DistributePoolRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::reward_distribution::DistributePoolRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 senary_threshold = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DistributePoolRequest, _impl_.senary_threshold_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(DistributePoolRequest, _impl_.senary_threshold_)}},
    // bool override_inactive_status = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(DistributePoolRequest, _impl_.override_inactive_status_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(DistributePoolRequest, _impl_.override_inactive_status_)}},
    // bool prioritize_eco_friendly = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(DistributePoolRequest, _impl_.prioritize_eco_friendly_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(DistributePoolRequest, _impl_.prioritize_eco_friendly_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 senary_threshold = 1;
    {PROTOBUF_FIELD_OFFSET(DistributePoolRequest, _impl_.senary_threshold_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // bool override_inactive_status = 2;
    {PROTOBUF_FIELD_OFFSET(DistributePoolRequest, _impl_.override_inactive_status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool prioritize_eco_friendly = 3;
    {PROTOBUF_FIELD_OFFSET(DistributePoolRequest, _impl_.prioritize_eco_friendly_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void DistributePoolRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.reward_distribution.DistributePoolRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.senary_threshold_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.prioritize_eco_friendly_) -
      reinterpret_cast<char*>(&_impl_.senary_threshold_)) + sizeof(_impl_.prioritize_eco_friendly_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DistributePoolRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DistributePoolRequest& this_ = static_cast<const DistributePoolRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DistributePoolRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DistributePoolRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.reward_distribution.DistributePoolRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 senary_threshold = 1;
          if (this_._internal_senary_threshold() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_senary_threshold(), target);
          }

          // bool override_inactive_status = 2;
          if (this_._internal_override_inactive_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                2, this_._internal_override_inactive_status(), target);
          }

          // bool prioritize_eco_friendly = 3;
          if (this_._internal_prioritize_eco_friendly() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_prioritize_eco_friendly(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.reward_distribution.DistributePoolRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DistributePoolRequest::ByteSizeLong(const MessageLite& base) {
          const DistributePoolRequest& this_ = static_cast<const DistributePoolRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DistributePoolRequest::ByteSizeLong() const {
          const DistributePoolRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.reward_distribution.DistributePoolRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // uint64 senary_threshold = 1;
            if (this_._internal_senary_threshold() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_senary_threshold());
            }
            // bool override_inactive_status = 2;
            if (this_._internal_override_inactive_status() != 0) {
              total_size += 2;
            }
            // bool prioritize_eco_friendly = 3;
            if (this_._internal_prioritize_eco_friendly() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DistributePoolRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DistributePoolRequest*>(&to_msg);
  auto& from = static_cast<const DistributePoolRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.reward_distribution.DistributePoolRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_senary_threshold() != 0) {
    _this->_impl_.senary_threshold_ = from._impl_.senary_threshold_;
  }
  if (from._internal_override_inactive_status() != 0) {
    _this->_impl_.override_inactive_status_ = from._impl_.override_inactive_status_;
  }
  if (from._internal_prioritize_eco_friendly() != 0) {
    _this->_impl_.prioritize_eco_friendly_ = from._impl_.prioritize_eco_friendly_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DistributePoolRequest::CopyFrom(const DistributePoolRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.reward_distribution.DistributePoolRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DistributePoolRequest::InternalSwap(DistributePoolRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DistributePoolRequest, _impl_.prioritize_eco_friendly_)
      + sizeof(DistributePoolRequest::_impl_.prioritize_eco_friendly_)
      - PROTOBUF_FIELD_OFFSET(DistributePoolRequest, _impl_.senary_threshold_)>(
          reinterpret_cast<char*>(&_impl_.senary_threshold_),
          reinterpret_cast<char*>(&other->_impl_.senary_threshold_));
}

::google::protobuf::Metadata DistributePoolRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              DistributePoolResponse_RewardDistributionBreakdownEntry_DoNotUse::DistributePoolResponse_RewardDistributionBreakdownEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              DistributePoolResponse_RewardDistributionBreakdownEntry_DoNotUse::DistributePoolResponse_RewardDistributionBreakdownEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              DistributePoolResponse_RewardDistributionBreakdownEntry_DoNotUse::DistributePoolResponse_RewardDistributionBreakdownEntry_DoNotUse() : SuperType() {}
              DistributePoolResponse_RewardDistributionBreakdownEntry_DoNotUse::DistributePoolResponse_RewardDistributionBreakdownEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* DistributePoolResponse_RewardDistributionBreakdownEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) DistributePoolResponse_RewardDistributionBreakdownEntry_DoNotUse(arena);
              }
              constexpr auto DistributePoolResponse_RewardDistributionBreakdownEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(DistributePoolResponse_RewardDistributionBreakdownEntry_DoNotUse),
                                                          alignof(DistributePoolResponse_RewardDistributionBreakdownEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull DistributePoolResponse_RewardDistributionBreakdownEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_DistributePoolResponse_RewardDistributionBreakdownEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &DistributePoolResponse_RewardDistributionBreakdownEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<DistributePoolResponse_RewardDistributionBreakdownEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &DistributePoolResponse_RewardDistributionBreakdownEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &DistributePoolResponse_RewardDistributionBreakdownEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(DistributePoolResponse_RewardDistributionBreakdownEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &DistributePoolResponse_RewardDistributionBreakdownEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_reward_5fdistribution_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* DistributePoolResponse_RewardDistributionBreakdownEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 93, 2> DistributePoolResponse_RewardDistributionBreakdownEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DistributePoolResponse_RewardDistributionBreakdownEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::reward_distribution::DistributePoolResponse_RewardDistributionBreakdownEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 value = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DistributePoolResponse_RewardDistributionBreakdownEntry_DoNotUse, _impl_.value_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(DistributePoolResponse_RewardDistributionBreakdownEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DistributePoolResponse_RewardDistributionBreakdownEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(DistributePoolResponse_RewardDistributionBreakdownEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 value = 2;
    {PROTOBUF_FIELD_OFFSET(DistributePoolResponse_RewardDistributionBreakdownEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
    "\121\3\0\0\0\0\0\0"
    "seigr.reward_distribution.DistributePoolResponse.RewardDistributionBreakdownEntry"
    "key"
  }},
};

// ===================================================================

class DistributePoolResponse::_Internal {
 public:
};

DistributePoolResponse::DistributePoolResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.reward_distribution.DistributePoolResponse)
}
inline PROTOBUF_NDEBUG_INLINE DistributePoolResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::reward_distribution::DistributePoolResponse& from_msg)
      : reward_distribution_breakdown_{visibility, arena, from.reward_distribution_breakdown_},
        message_(arena, from.message_),
        _cached_size_{0} {}

DistributePoolResponse::DistributePoolResponse(
    ::google::protobuf::Arena* arena,
    const DistributePoolResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DistributePoolResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, distributed_amount_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, distributed_amount_),
           offsetof(Impl_, success_) -
               offsetof(Impl_, distributed_amount_) +
               sizeof(Impl_::success_));

  // @@protoc_insertion_point(copy_constructor:seigr.reward_distribution.DistributePoolResponse)
}
inline PROTOBUF_NDEBUG_INLINE DistributePoolResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : reward_distribution_breakdown_{visibility, arena},
        message_(arena),
        _cached_size_{0} {}

inline void DistributePoolResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, distributed_amount_),
           0,
           offsetof(Impl_, success_) -
               offsetof(Impl_, distributed_amount_) +
               sizeof(Impl_::success_));
}
DistributePoolResponse::~DistributePoolResponse() {
  // @@protoc_insertion_point(destructor:seigr.reward_distribution.DistributePoolResponse)
  SharedDtor(*this);
}
inline void DistributePoolResponse::SharedDtor(MessageLite& self) {
  DistributePoolResponse& this_ = static_cast<DistributePoolResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* DistributePoolResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DistributePoolResponse(arena);
}
constexpr auto DistributePoolResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(DistributePoolResponse, _impl_.reward_distribution_breakdown_) +
          decltype(DistributePoolResponse::_impl_.reward_distribution_breakdown_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(DistributePoolResponse, _impl_.reward_distribution_breakdown_) +
          decltype(DistributePoolResponse::_impl_.reward_distribution_breakdown_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(DistributePoolResponse), alignof(DistributePoolResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&DistributePoolResponse::PlacementNew_,
                                 sizeof(DistributePoolResponse),
                                 alignof(DistributePoolResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DistributePoolResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DistributePoolResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DistributePoolResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DistributePoolResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DistributePoolResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DistributePoolResponse>(), &DistributePoolResponse::ByteSizeLong,
            &DistributePoolResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DistributePoolResponse, _impl_._cached_size_),
        false,
    },
    &DistributePoolResponse::kDescriptorMethods,
    &descriptor_table_reward_5fdistribution_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DistributePoolResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 93, 2> DistributePoolResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::reward_distribution::DistributePoolResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(DistributePoolResponse, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(DistributePoolResponse, _impl_.success_)}},
    // uint64 distributed_amount = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DistributePoolResponse, _impl_.distributed_amount_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(DistributePoolResponse, _impl_.distributed_amount_)}},
    // string message = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(DistributePoolResponse, _impl_.message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(DistributePoolResponse, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // uint64 distributed_amount = 2;
    {PROTOBUF_FIELD_OFFSET(DistributePoolResponse, _impl_.distributed_amount_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string message = 3;
    {PROTOBUF_FIELD_OFFSET(DistributePoolResponse, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, uint64> reward_distribution_breakdown = 4;
    {PROTOBUF_FIELD_OFFSET(DistributePoolResponse, _impl_.reward_distribution_breakdown_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(DistributePoolResponse()._impl_.reward_distribution_breakdown_)>(
        1, 0, 0, 9,
        4)},
  }}, {{
    "\60\0\0\7\35\0\0\0"
    "seigr.reward_distribution.DistributePoolResponse"
    "message"
    "reward_distribution_breakdown"
  }},
};

PROTOBUF_NOINLINE void DistributePoolResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.reward_distribution.DistributePoolResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reward_distribution_breakdown_.Clear();
  _impl_.message_.ClearToEmpty();
  ::memset(&_impl_.distributed_amount_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.success_) -
      reinterpret_cast<char*>(&_impl_.distributed_amount_)) + sizeof(_impl_.success_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DistributePoolResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DistributePoolResponse& this_ = static_cast<const DistributePoolResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DistributePoolResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DistributePoolResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.reward_distribution.DistributePoolResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool success = 1;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_success(), target);
          }

          // uint64 distributed_amount = 2;
          if (this_._internal_distributed_amount() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_distributed_amount(), target);
          }

          // string message = 3;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.reward_distribution.DistributePoolResponse.message");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // map<string, uint64> reward_distribution_breakdown = 4;
          if (!this_._internal_reward_distribution_breakdown().empty()) {
            using MapType = ::google::protobuf::Map<std::string, ::uint64_t>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, ::uint64_t,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_UINT64>;
            const auto& field = this_._internal_reward_distribution_breakdown();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    4, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.reward_distribution.DistributePoolResponse.reward_distribution_breakdown");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    4, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.reward_distribution.DistributePoolResponse.reward_distribution_breakdown");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.reward_distribution.DistributePoolResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DistributePoolResponse::ByteSizeLong(const MessageLite& base) {
          const DistributePoolResponse& this_ = static_cast<const DistributePoolResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DistributePoolResponse::ByteSizeLong() const {
          const DistributePoolResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.reward_distribution.DistributePoolResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, uint64> reward_distribution_breakdown = 4;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_reward_distribution_breakdown_size());
              for (const auto& entry : this_._internal_reward_distribution_breakdown()) {
                total_size += _pbi::MapEntryFuncs<std::string, ::uint64_t,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_UINT64>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string message = 3;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
            // uint64 distributed_amount = 2;
            if (this_._internal_distributed_amount() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_distributed_amount());
            }
            // bool success = 1;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DistributePoolResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DistributePoolResponse*>(&to_msg);
  auto& from = static_cast<const DistributePoolResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.reward_distribution.DistributePoolResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.reward_distribution_breakdown_.MergeFrom(from._impl_.reward_distribution_breakdown_);
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_distributed_amount() != 0) {
    _this->_impl_.distributed_amount_ = from._impl_.distributed_amount_;
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DistributePoolResponse::CopyFrom(const DistributePoolResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.reward_distribution.DistributePoolResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DistributePoolResponse::InternalSwap(DistributePoolResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.reward_distribution_breakdown_.InternalSwap(&other->_impl_.reward_distribution_breakdown_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DistributePoolResponse, _impl_.success_)
      + sizeof(DistributePoolResponse::_impl_.success_)
      - PROTOBUF_FIELD_OFFSET(DistributePoolResponse, _impl_.distributed_amount_)>(
          reinterpret_cast<char*>(&_impl_.distributed_amount_),
          reinterpret_cast<char*>(&other->_impl_.distributed_amount_));
}

::google::protobuf::Metadata DistributePoolResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetRewardHistoryRequest::_Internal {
 public:
};

GetRewardHistoryRequest::GetRewardHistoryRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.reward_distribution.GetRewardHistoryRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetRewardHistoryRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::reward_distribution::GetRewardHistoryRequest& from_msg)
      : recipient_id_(arena, from.recipient_id_),
        _cached_size_{0} {}

GetRewardHistoryRequest::GetRewardHistoryRequest(
    ::google::protobuf::Arena* arena,
    const GetRewardHistoryRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetRewardHistoryRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, limit_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, limit_),
           offsetof(Impl_, only_eco_rewards_) -
               offsetof(Impl_, limit_) +
               sizeof(Impl_::only_eco_rewards_));

  // @@protoc_insertion_point(copy_constructor:seigr.reward_distribution.GetRewardHistoryRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetRewardHistoryRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : recipient_id_(arena),
        _cached_size_{0} {}

inline void GetRewardHistoryRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, limit_),
           0,
           offsetof(Impl_, only_eco_rewards_) -
               offsetof(Impl_, limit_) +
               sizeof(Impl_::only_eco_rewards_));
}
GetRewardHistoryRequest::~GetRewardHistoryRequest() {
  // @@protoc_insertion_point(destructor:seigr.reward_distribution.GetRewardHistoryRequest)
  SharedDtor(*this);
}
inline void GetRewardHistoryRequest::SharedDtor(MessageLite& self) {
  GetRewardHistoryRequest& this_ = static_cast<GetRewardHistoryRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.recipient_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* GetRewardHistoryRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetRewardHistoryRequest(arena);
}
constexpr auto GetRewardHistoryRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetRewardHistoryRequest),
                                            alignof(GetRewardHistoryRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetRewardHistoryRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetRewardHistoryRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetRewardHistoryRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetRewardHistoryRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetRewardHistoryRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetRewardHistoryRequest>(), &GetRewardHistoryRequest::ByteSizeLong,
            &GetRewardHistoryRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetRewardHistoryRequest, _impl_._cached_size_),
        false,
    },
    &GetRewardHistoryRequest::kDescriptorMethods,
    &descriptor_table_reward_5fdistribution_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetRewardHistoryRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 70, 2> GetRewardHistoryRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::reward_distribution::GetRewardHistoryRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool only_eco_rewards = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GetRewardHistoryRequest, _impl_.only_eco_rewards_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(GetRewardHistoryRequest, _impl_.only_eco_rewards_)}},
    // string recipient_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetRewardHistoryRequest, _impl_.recipient_id_)}},
    // uint32 limit = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetRewardHistoryRequest, _impl_.limit_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GetRewardHistoryRequest, _impl_.limit_)}},
    // bool include_expired = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GetRewardHistoryRequest, _impl_.include_expired_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(GetRewardHistoryRequest, _impl_.include_expired_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string recipient_id = 1;
    {PROTOBUF_FIELD_OFFSET(GetRewardHistoryRequest, _impl_.recipient_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 limit = 2;
    {PROTOBUF_FIELD_OFFSET(GetRewardHistoryRequest, _impl_.limit_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // bool include_expired = 3;
    {PROTOBUF_FIELD_OFFSET(GetRewardHistoryRequest, _impl_.include_expired_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool only_eco_rewards = 4;
    {PROTOBUF_FIELD_OFFSET(GetRewardHistoryRequest, _impl_.only_eco_rewards_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\61\14\0\0\0\0\0\0"
    "seigr.reward_distribution.GetRewardHistoryRequest"
    "recipient_id"
  }},
};

PROTOBUF_NOINLINE void GetRewardHistoryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.reward_distribution.GetRewardHistoryRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.recipient_id_.ClearToEmpty();
  ::memset(&_impl_.limit_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.only_eco_rewards_) -
      reinterpret_cast<char*>(&_impl_.limit_)) + sizeof(_impl_.only_eco_rewards_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetRewardHistoryRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetRewardHistoryRequest& this_ = static_cast<const GetRewardHistoryRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetRewardHistoryRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetRewardHistoryRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.reward_distribution.GetRewardHistoryRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string recipient_id = 1;
          if (!this_._internal_recipient_id().empty()) {
            const std::string& _s = this_._internal_recipient_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.reward_distribution.GetRewardHistoryRequest.recipient_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // uint32 limit = 2;
          if (this_._internal_limit() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_limit(), target);
          }

          // bool include_expired = 3;
          if (this_._internal_include_expired() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_include_expired(), target);
          }

          // bool only_eco_rewards = 4;
          if (this_._internal_only_eco_rewards() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_only_eco_rewards(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.reward_distribution.GetRewardHistoryRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetRewardHistoryRequest::ByteSizeLong(const MessageLite& base) {
          const GetRewardHistoryRequest& this_ = static_cast<const GetRewardHistoryRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetRewardHistoryRequest::ByteSizeLong() const {
          const GetRewardHistoryRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.reward_distribution.GetRewardHistoryRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string recipient_id = 1;
            if (!this_._internal_recipient_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_recipient_id());
            }
            // uint32 limit = 2;
            if (this_._internal_limit() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_limit());
            }
            // bool include_expired = 3;
            if (this_._internal_include_expired() != 0) {
              total_size += 2;
            }
            // bool only_eco_rewards = 4;
            if (this_._internal_only_eco_rewards() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetRewardHistoryRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetRewardHistoryRequest*>(&to_msg);
  auto& from = static_cast<const GetRewardHistoryRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.reward_distribution.GetRewardHistoryRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_recipient_id().empty()) {
    _this->_internal_set_recipient_id(from._internal_recipient_id());
  }
  if (from._internal_limit() != 0) {
    _this->_impl_.limit_ = from._impl_.limit_;
  }
  if (from._internal_include_expired() != 0) {
    _this->_impl_.include_expired_ = from._impl_.include_expired_;
  }
  if (from._internal_only_eco_rewards() != 0) {
    _this->_impl_.only_eco_rewards_ = from._impl_.only_eco_rewards_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetRewardHistoryRequest::CopyFrom(const GetRewardHistoryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.reward_distribution.GetRewardHistoryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetRewardHistoryRequest::InternalSwap(GetRewardHistoryRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.recipient_id_, &other->_impl_.recipient_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetRewardHistoryRequest, _impl_.only_eco_rewards_)
      + sizeof(GetRewardHistoryRequest::_impl_.only_eco_rewards_)
      - PROTOBUF_FIELD_OFFSET(GetRewardHistoryRequest, _impl_.limit_)>(
          reinterpret_cast<char*>(&_impl_.limit_),
          reinterpret_cast<char*>(&other->_impl_.limit_));
}

::google::protobuf::Metadata GetRewardHistoryRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetRewardHistoryResponse::_Internal {
 public:
};

GetRewardHistoryResponse::GetRewardHistoryResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.reward_distribution.GetRewardHistoryResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetRewardHistoryResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::reward_distribution::GetRewardHistoryResponse& from_msg)
      : rewards_{visibility, arena, from.rewards_},
        recipient_id_(arena, from.recipient_id_),
        _cached_size_{0} {}

GetRewardHistoryResponse::GetRewardHistoryResponse(
    ::google::protobuf::Arena* arena,
    const GetRewardHistoryResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetRewardHistoryResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:seigr.reward_distribution.GetRewardHistoryResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetRewardHistoryResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : rewards_{visibility, arena},
        recipient_id_(arena),
        _cached_size_{0} {}

inline void GetRewardHistoryResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetRewardHistoryResponse::~GetRewardHistoryResponse() {
  // @@protoc_insertion_point(destructor:seigr.reward_distribution.GetRewardHistoryResponse)
  SharedDtor(*this);
}
inline void GetRewardHistoryResponse::SharedDtor(MessageLite& self) {
  GetRewardHistoryResponse& this_ = static_cast<GetRewardHistoryResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.recipient_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* GetRewardHistoryResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetRewardHistoryResponse(arena);
}
constexpr auto GetRewardHistoryResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GetRewardHistoryResponse, _impl_.rewards_) +
          decltype(GetRewardHistoryResponse::_impl_.rewards_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(GetRewardHistoryResponse), alignof(GetRewardHistoryResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GetRewardHistoryResponse::PlacementNew_,
                                 sizeof(GetRewardHistoryResponse),
                                 alignof(GetRewardHistoryResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetRewardHistoryResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetRewardHistoryResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetRewardHistoryResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetRewardHistoryResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetRewardHistoryResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetRewardHistoryResponse>(), &GetRewardHistoryResponse::ByteSizeLong,
            &GetRewardHistoryResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetRewardHistoryResponse, _impl_._cached_size_),
        false,
    },
    &GetRewardHistoryResponse::kDescriptorMethods,
    &descriptor_table_reward_5fdistribution_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetRewardHistoryResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 71, 2> GetRewardHistoryResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::reward_distribution::GetRewardHistoryResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .seigr.reward_distribution.Reward rewards = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GetRewardHistoryResponse, _impl_.rewards_)}},
    // string recipient_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetRewardHistoryResponse, _impl_.recipient_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string recipient_id = 1;
    {PROTOBUF_FIELD_OFFSET(GetRewardHistoryResponse, _impl_.recipient_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .seigr.reward_distribution.Reward rewards = 2;
    {PROTOBUF_FIELD_OFFSET(GetRewardHistoryResponse, _impl_.rewards_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::seigr::reward_distribution::Reward>()},
  }}, {{
    "\62\14\0\0\0\0\0\0"
    "seigr.reward_distribution.GetRewardHistoryResponse"
    "recipient_id"
  }},
};

PROTOBUF_NOINLINE void GetRewardHistoryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.reward_distribution.GetRewardHistoryResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rewards_.Clear();
  _impl_.recipient_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetRewardHistoryResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetRewardHistoryResponse& this_ = static_cast<const GetRewardHistoryResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetRewardHistoryResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetRewardHistoryResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.reward_distribution.GetRewardHistoryResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string recipient_id = 1;
          if (!this_._internal_recipient_id().empty()) {
            const std::string& _s = this_._internal_recipient_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.reward_distribution.GetRewardHistoryResponse.recipient_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated .seigr.reward_distribution.Reward rewards = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_rewards_size());
               i < n; i++) {
            const auto& repfield = this_._internal_rewards().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.reward_distribution.GetRewardHistoryResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetRewardHistoryResponse::ByteSizeLong(const MessageLite& base) {
          const GetRewardHistoryResponse& this_ = static_cast<const GetRewardHistoryResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetRewardHistoryResponse::ByteSizeLong() const {
          const GetRewardHistoryResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.reward_distribution.GetRewardHistoryResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .seigr.reward_distribution.Reward rewards = 2;
            {
              total_size += 1UL * this_._internal_rewards_size();
              for (const auto& msg : this_._internal_rewards()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string recipient_id = 1;
            if (!this_._internal_recipient_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_recipient_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetRewardHistoryResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetRewardHistoryResponse*>(&to_msg);
  auto& from = static_cast<const GetRewardHistoryResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.reward_distribution.GetRewardHistoryResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_rewards()->MergeFrom(
      from._internal_rewards());
  if (!from._internal_recipient_id().empty()) {
    _this->_internal_set_recipient_id(from._internal_recipient_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetRewardHistoryResponse::CopyFrom(const GetRewardHistoryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.reward_distribution.GetRewardHistoryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetRewardHistoryResponse::InternalSwap(GetRewardHistoryResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.rewards_.InternalSwap(&other->_impl_.rewards_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.recipient_id_, &other->_impl_.recipient_id_, arena);
}

::google::protobuf::Metadata GetRewardHistoryResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateScalingConfigRequest::_Internal {
 public:
};

UpdateScalingConfigRequest::UpdateScalingConfigRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.reward_distribution.UpdateScalingConfigRequest)
}
UpdateScalingConfigRequest::UpdateScalingConfigRequest(
    ::google::protobuf::Arena* arena, const UpdateScalingConfigRequest& from)
    : UpdateScalingConfigRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE UpdateScalingConfigRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UpdateScalingConfigRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, new_scaling_factor_),
           0,
           offsetof(Impl_, eco_priority_weight_) -
               offsetof(Impl_, new_scaling_factor_) +
               sizeof(Impl_::eco_priority_weight_));
}
UpdateScalingConfigRequest::~UpdateScalingConfigRequest() {
  // @@protoc_insertion_point(destructor:seigr.reward_distribution.UpdateScalingConfigRequest)
  SharedDtor(*this);
}
inline void UpdateScalingConfigRequest::SharedDtor(MessageLite& self) {
  UpdateScalingConfigRequest& this_ = static_cast<UpdateScalingConfigRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* UpdateScalingConfigRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UpdateScalingConfigRequest(arena);
}
constexpr auto UpdateScalingConfigRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(UpdateScalingConfigRequest),
                                            alignof(UpdateScalingConfigRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UpdateScalingConfigRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UpdateScalingConfigRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UpdateScalingConfigRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UpdateScalingConfigRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UpdateScalingConfigRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UpdateScalingConfigRequest>(), &UpdateScalingConfigRequest::ByteSizeLong,
            &UpdateScalingConfigRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UpdateScalingConfigRequest, _impl_._cached_size_),
        false,
    },
    &UpdateScalingConfigRequest::kDescriptorMethods,
    &descriptor_table_reward_5fdistribution_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UpdateScalingConfigRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2> UpdateScalingConfigRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::reward_distribution::UpdateScalingConfigRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double new_scaling_factor = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateScalingConfigRequest, _impl_.new_scaling_factor_)}},
    // uint64 new_adjustment_interval = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(UpdateScalingConfigRequest, _impl_.new_adjustment_interval_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateScalingConfigRequest, _impl_.new_adjustment_interval_)}},
    // double min_scaling_factor = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateScalingConfigRequest, _impl_.min_scaling_factor_)}},
    // double max_scaling_factor = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateScalingConfigRequest, _impl_.max_scaling_factor_)}},
    // double eco_priority_weight = 5;
    {::_pbi::TcParser::FastF64S1,
     {41, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateScalingConfigRequest, _impl_.eco_priority_weight_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // double new_scaling_factor = 1;
    {PROTOBUF_FIELD_OFFSET(UpdateScalingConfigRequest, _impl_.new_scaling_factor_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // uint64 new_adjustment_interval = 2;
    {PROTOBUF_FIELD_OFFSET(UpdateScalingConfigRequest, _impl_.new_adjustment_interval_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // double min_scaling_factor = 3;
    {PROTOBUF_FIELD_OFFSET(UpdateScalingConfigRequest, _impl_.min_scaling_factor_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double max_scaling_factor = 4;
    {PROTOBUF_FIELD_OFFSET(UpdateScalingConfigRequest, _impl_.max_scaling_factor_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double eco_priority_weight = 5;
    {PROTOBUF_FIELD_OFFSET(UpdateScalingConfigRequest, _impl_.eco_priority_weight_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void UpdateScalingConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.reward_distribution.UpdateScalingConfigRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.new_scaling_factor_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.eco_priority_weight_) -
      reinterpret_cast<char*>(&_impl_.new_scaling_factor_)) + sizeof(_impl_.eco_priority_weight_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UpdateScalingConfigRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UpdateScalingConfigRequest& this_ = static_cast<const UpdateScalingConfigRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UpdateScalingConfigRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UpdateScalingConfigRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.reward_distribution.UpdateScalingConfigRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double new_scaling_factor = 1;
          if (::absl::bit_cast<::uint64_t>(this_._internal_new_scaling_factor()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_new_scaling_factor(), target);
          }

          // uint64 new_adjustment_interval = 2;
          if (this_._internal_new_adjustment_interval() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_new_adjustment_interval(), target);
          }

          // double min_scaling_factor = 3;
          if (::absl::bit_cast<::uint64_t>(this_._internal_min_scaling_factor()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                3, this_._internal_min_scaling_factor(), target);
          }

          // double max_scaling_factor = 4;
          if (::absl::bit_cast<::uint64_t>(this_._internal_max_scaling_factor()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                4, this_._internal_max_scaling_factor(), target);
          }

          // double eco_priority_weight = 5;
          if (::absl::bit_cast<::uint64_t>(this_._internal_eco_priority_weight()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                5, this_._internal_eco_priority_weight(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.reward_distribution.UpdateScalingConfigRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UpdateScalingConfigRequest::ByteSizeLong(const MessageLite& base) {
          const UpdateScalingConfigRequest& this_ = static_cast<const UpdateScalingConfigRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UpdateScalingConfigRequest::ByteSizeLong() const {
          const UpdateScalingConfigRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.reward_distribution.UpdateScalingConfigRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // double new_scaling_factor = 1;
            if (::absl::bit_cast<::uint64_t>(this_._internal_new_scaling_factor()) != 0) {
              total_size += 9;
            }
            // uint64 new_adjustment_interval = 2;
            if (this_._internal_new_adjustment_interval() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_new_adjustment_interval());
            }
            // double min_scaling_factor = 3;
            if (::absl::bit_cast<::uint64_t>(this_._internal_min_scaling_factor()) != 0) {
              total_size += 9;
            }
            // double max_scaling_factor = 4;
            if (::absl::bit_cast<::uint64_t>(this_._internal_max_scaling_factor()) != 0) {
              total_size += 9;
            }
            // double eco_priority_weight = 5;
            if (::absl::bit_cast<::uint64_t>(this_._internal_eco_priority_weight()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UpdateScalingConfigRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateScalingConfigRequest*>(&to_msg);
  auto& from = static_cast<const UpdateScalingConfigRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.reward_distribution.UpdateScalingConfigRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_new_scaling_factor()) != 0) {
    _this->_impl_.new_scaling_factor_ = from._impl_.new_scaling_factor_;
  }
  if (from._internal_new_adjustment_interval() != 0) {
    _this->_impl_.new_adjustment_interval_ = from._impl_.new_adjustment_interval_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_min_scaling_factor()) != 0) {
    _this->_impl_.min_scaling_factor_ = from._impl_.min_scaling_factor_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_max_scaling_factor()) != 0) {
    _this->_impl_.max_scaling_factor_ = from._impl_.max_scaling_factor_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_eco_priority_weight()) != 0) {
    _this->_impl_.eco_priority_weight_ = from._impl_.eco_priority_weight_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateScalingConfigRequest::CopyFrom(const UpdateScalingConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.reward_distribution.UpdateScalingConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateScalingConfigRequest::InternalSwap(UpdateScalingConfigRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateScalingConfigRequest, _impl_.eco_priority_weight_)
      + sizeof(UpdateScalingConfigRequest::_impl_.eco_priority_weight_)
      - PROTOBUF_FIELD_OFFSET(UpdateScalingConfigRequest, _impl_.new_scaling_factor_)>(
          reinterpret_cast<char*>(&_impl_.new_scaling_factor_),
          reinterpret_cast<char*>(&other->_impl_.new_scaling_factor_));
}

::google::protobuf::Metadata UpdateScalingConfigRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateScalingConfigResponse::_Internal {
 public:
};

UpdateScalingConfigResponse::UpdateScalingConfigResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.reward_distribution.UpdateScalingConfigResponse)
}
inline PROTOBUF_NDEBUG_INLINE UpdateScalingConfigResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::reward_distribution::UpdateScalingConfigResponse& from_msg)
      : message_(arena, from.message_),
        _cached_size_{0} {}

UpdateScalingConfigResponse::UpdateScalingConfigResponse(
    ::google::protobuf::Arena* arena,
    const UpdateScalingConfigResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateScalingConfigResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:seigr.reward_distribution.UpdateScalingConfigResponse)
}
inline PROTOBUF_NDEBUG_INLINE UpdateScalingConfigResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_(arena),
        _cached_size_{0} {}

inline void UpdateScalingConfigResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
UpdateScalingConfigResponse::~UpdateScalingConfigResponse() {
  // @@protoc_insertion_point(destructor:seigr.reward_distribution.UpdateScalingConfigResponse)
  SharedDtor(*this);
}
inline void UpdateScalingConfigResponse::SharedDtor(MessageLite& self) {
  UpdateScalingConfigResponse& this_ = static_cast<UpdateScalingConfigResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* UpdateScalingConfigResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UpdateScalingConfigResponse(arena);
}
constexpr auto UpdateScalingConfigResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(UpdateScalingConfigResponse),
                                            alignof(UpdateScalingConfigResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UpdateScalingConfigResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UpdateScalingConfigResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UpdateScalingConfigResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UpdateScalingConfigResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UpdateScalingConfigResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UpdateScalingConfigResponse>(), &UpdateScalingConfigResponse::ByteSizeLong,
            &UpdateScalingConfigResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UpdateScalingConfigResponse, _impl_._cached_size_),
        false,
    },
    &UpdateScalingConfigResponse::kDescriptorMethods,
    &descriptor_table_reward_5fdistribution_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UpdateScalingConfigResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 69, 2> UpdateScalingConfigResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::reward_distribution::UpdateScalingConfigResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateScalingConfigResponse, _impl_.message_)}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(UpdateScalingConfigResponse, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateScalingConfigResponse, _impl_.success_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(UpdateScalingConfigResponse, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(UpdateScalingConfigResponse, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\65\0\7\0\0\0\0\0"
    "seigr.reward_distribution.UpdateScalingConfigResponse"
    "message"
  }},
};

PROTOBUF_NOINLINE void UpdateScalingConfigResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.reward_distribution.UpdateScalingConfigResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UpdateScalingConfigResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UpdateScalingConfigResponse& this_ = static_cast<const UpdateScalingConfigResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UpdateScalingConfigResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UpdateScalingConfigResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.reward_distribution.UpdateScalingConfigResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool success = 1;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_success(), target);
          }

          // string message = 2;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.reward_distribution.UpdateScalingConfigResponse.message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.reward_distribution.UpdateScalingConfigResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UpdateScalingConfigResponse::ByteSizeLong(const MessageLite& base) {
          const UpdateScalingConfigResponse& this_ = static_cast<const UpdateScalingConfigResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UpdateScalingConfigResponse::ByteSizeLong() const {
          const UpdateScalingConfigResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.reward_distribution.UpdateScalingConfigResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string message = 2;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
            // bool success = 1;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UpdateScalingConfigResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateScalingConfigResponse*>(&to_msg);
  auto& from = static_cast<const UpdateScalingConfigResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.reward_distribution.UpdateScalingConfigResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateScalingConfigResponse::CopyFrom(const UpdateScalingConfigResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.reward_distribution.UpdateScalingConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateScalingConfigResponse::InternalSwap(UpdateScalingConfigResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata UpdateScalingConfigResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EcoReportRequest::_Internal {
 public:
};

EcoReportRequest::EcoReportRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.reward_distribution.EcoReportRequest)
}
inline PROTOBUF_NDEBUG_INLINE EcoReportRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::reward_distribution::EcoReportRequest& from_msg)
      : period_(arena, from.period_),
        _cached_size_{0} {}

EcoReportRequest::EcoReportRequest(
    ::google::protobuf::Arena* arena,
    const EcoReportRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EcoReportRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.include_detailed_breakdown_ = from._impl_.include_detailed_breakdown_;

  // @@protoc_insertion_point(copy_constructor:seigr.reward_distribution.EcoReportRequest)
}
inline PROTOBUF_NDEBUG_INLINE EcoReportRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : period_(arena),
        _cached_size_{0} {}

inline void EcoReportRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.include_detailed_breakdown_ = {};
}
EcoReportRequest::~EcoReportRequest() {
  // @@protoc_insertion_point(destructor:seigr.reward_distribution.EcoReportRequest)
  SharedDtor(*this);
}
inline void EcoReportRequest::SharedDtor(MessageLite& self) {
  EcoReportRequest& this_ = static_cast<EcoReportRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.period_.Destroy();
  this_._impl_.~Impl_();
}

inline void* EcoReportRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EcoReportRequest(arena);
}
constexpr auto EcoReportRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(EcoReportRequest),
                                            alignof(EcoReportRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EcoReportRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EcoReportRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EcoReportRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EcoReportRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EcoReportRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EcoReportRequest>(), &EcoReportRequest::ByteSizeLong,
            &EcoReportRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EcoReportRequest, _impl_._cached_size_),
        false,
    },
    &EcoReportRequest::kDescriptorMethods,
    &descriptor_table_reward_5fdistribution_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EcoReportRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 57, 2> EcoReportRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::reward_distribution::EcoReportRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool include_detailed_breakdown = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(EcoReportRequest, _impl_.include_detailed_breakdown_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(EcoReportRequest, _impl_.include_detailed_breakdown_)}},
    // string period = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EcoReportRequest, _impl_.period_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string period = 1;
    {PROTOBUF_FIELD_OFFSET(EcoReportRequest, _impl_.period_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool include_detailed_breakdown = 2;
    {PROTOBUF_FIELD_OFFSET(EcoReportRequest, _impl_.include_detailed_breakdown_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\52\6\0\0\0\0\0\0"
    "seigr.reward_distribution.EcoReportRequest"
    "period"
  }},
};

PROTOBUF_NOINLINE void EcoReportRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.reward_distribution.EcoReportRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.period_.ClearToEmpty();
  _impl_.include_detailed_breakdown_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EcoReportRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EcoReportRequest& this_ = static_cast<const EcoReportRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EcoReportRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EcoReportRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.reward_distribution.EcoReportRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string period = 1;
          if (!this_._internal_period().empty()) {
            const std::string& _s = this_._internal_period();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.reward_distribution.EcoReportRequest.period");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // bool include_detailed_breakdown = 2;
          if (this_._internal_include_detailed_breakdown() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                2, this_._internal_include_detailed_breakdown(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.reward_distribution.EcoReportRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EcoReportRequest::ByteSizeLong(const MessageLite& base) {
          const EcoReportRequest& this_ = static_cast<const EcoReportRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EcoReportRequest::ByteSizeLong() const {
          const EcoReportRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.reward_distribution.EcoReportRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string period = 1;
            if (!this_._internal_period().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_period());
            }
            // bool include_detailed_breakdown = 2;
            if (this_._internal_include_detailed_breakdown() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EcoReportRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EcoReportRequest*>(&to_msg);
  auto& from = static_cast<const EcoReportRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.reward_distribution.EcoReportRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_period().empty()) {
    _this->_internal_set_period(from._internal_period());
  }
  if (from._internal_include_detailed_breakdown() != 0) {
    _this->_impl_.include_detailed_breakdown_ = from._impl_.include_detailed_breakdown_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EcoReportRequest::CopyFrom(const EcoReportRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.reward_distribution.EcoReportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EcoReportRequest::InternalSwap(EcoReportRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.period_, &other->_impl_.period_, arena);
        swap(_impl_.include_detailed_breakdown_, other->_impl_.include_detailed_breakdown_);
}

::google::protobuf::Metadata EcoReportRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              EcoReportResponse_EcoIncentivesSummaryEntry_DoNotUse::EcoReportResponse_EcoIncentivesSummaryEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              EcoReportResponse_EcoIncentivesSummaryEntry_DoNotUse::EcoReportResponse_EcoIncentivesSummaryEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              EcoReportResponse_EcoIncentivesSummaryEntry_DoNotUse::EcoReportResponse_EcoIncentivesSummaryEntry_DoNotUse() : SuperType() {}
              EcoReportResponse_EcoIncentivesSummaryEntry_DoNotUse::EcoReportResponse_EcoIncentivesSummaryEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* EcoReportResponse_EcoIncentivesSummaryEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) EcoReportResponse_EcoIncentivesSummaryEntry_DoNotUse(arena);
              }
              constexpr auto EcoReportResponse_EcoIncentivesSummaryEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(EcoReportResponse_EcoIncentivesSummaryEntry_DoNotUse),
                                                          alignof(EcoReportResponse_EcoIncentivesSummaryEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull EcoReportResponse_EcoIncentivesSummaryEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_EcoReportResponse_EcoIncentivesSummaryEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &EcoReportResponse_EcoIncentivesSummaryEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<EcoReportResponse_EcoIncentivesSummaryEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &EcoReportResponse_EcoIncentivesSummaryEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &EcoReportResponse_EcoIncentivesSummaryEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(EcoReportResponse_EcoIncentivesSummaryEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &EcoReportResponse_EcoIncentivesSummaryEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_reward_5fdistribution_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* EcoReportResponse_EcoIncentivesSummaryEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 81, 2> EcoReportResponse_EcoIncentivesSummaryEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EcoReportResponse_EcoIncentivesSummaryEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::reward_distribution::EcoReportResponse_EcoIncentivesSummaryEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double value = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(EcoReportResponse_EcoIncentivesSummaryEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EcoReportResponse_EcoIncentivesSummaryEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(EcoReportResponse_EcoIncentivesSummaryEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double value = 2;
    {PROTOBUF_FIELD_OFFSET(EcoReportResponse_EcoIncentivesSummaryEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
    "\105\3\0\0\0\0\0\0"
    "seigr.reward_distribution.EcoReportResponse.EcoIncentivesSummaryEntry"
    "key"
  }},
};

// ===================================================================

class EcoReportResponse::_Internal {
 public:
};

EcoReportResponse::EcoReportResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.reward_distribution.EcoReportResponse)
}
inline PROTOBUF_NDEBUG_INLINE EcoReportResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::reward_distribution::EcoReportResponse& from_msg)
      : eco_incentives_summary_{visibility, arena, from.eco_incentives_summary_},
        message_(arena, from.message_),
        _cached_size_{0} {}

EcoReportResponse::EcoReportResponse(
    ::google::protobuf::Arena* arena,
    const EcoReportResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EcoReportResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_eco_funds_distributed_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, total_eco_funds_distributed_),
           offsetof(Impl_, success_) -
               offsetof(Impl_, total_eco_funds_distributed_) +
               sizeof(Impl_::success_));

  // @@protoc_insertion_point(copy_constructor:seigr.reward_distribution.EcoReportResponse)
}
inline PROTOBUF_NDEBUG_INLINE EcoReportResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : eco_incentives_summary_{visibility, arena},
        message_(arena),
        _cached_size_{0} {}

inline void EcoReportResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_eco_funds_distributed_),
           0,
           offsetof(Impl_, success_) -
               offsetof(Impl_, total_eco_funds_distributed_) +
               sizeof(Impl_::success_));
}
EcoReportResponse::~EcoReportResponse() {
  // @@protoc_insertion_point(destructor:seigr.reward_distribution.EcoReportResponse)
  SharedDtor(*this);
}
inline void EcoReportResponse::SharedDtor(MessageLite& self) {
  EcoReportResponse& this_ = static_cast<EcoReportResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* EcoReportResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EcoReportResponse(arena);
}
constexpr auto EcoReportResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(EcoReportResponse, _impl_.eco_incentives_summary_) +
          decltype(EcoReportResponse::_impl_.eco_incentives_summary_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(EcoReportResponse, _impl_.eco_incentives_summary_) +
          decltype(EcoReportResponse::_impl_.eco_incentives_summary_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(EcoReportResponse), alignof(EcoReportResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&EcoReportResponse::PlacementNew_,
                                 sizeof(EcoReportResponse),
                                 alignof(EcoReportResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EcoReportResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EcoReportResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EcoReportResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EcoReportResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EcoReportResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EcoReportResponse>(), &EcoReportResponse::ByteSizeLong,
            &EcoReportResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EcoReportResponse, _impl_._cached_size_),
        false,
    },
    &EcoReportResponse::kDescriptorMethods,
    &descriptor_table_reward_5fdistribution_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EcoReportResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 81, 2> EcoReportResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::reward_distribution::EcoReportResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(EcoReportResponse, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(EcoReportResponse, _impl_.success_)}},
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(EcoReportResponse, _impl_.message_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // double total_eco_funds_distributed = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(EcoReportResponse, _impl_.total_eco_funds_distributed_)}},
    // double network_sustainability_score = 5;
    {::_pbi::TcParser::FastF64S1,
     {41, 63, 0, PROTOBUF_FIELD_OFFSET(EcoReportResponse, _impl_.network_sustainability_score_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(EcoReportResponse, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(EcoReportResponse, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, double> eco_incentives_summary = 3;
    {PROTOBUF_FIELD_OFFSET(EcoReportResponse, _impl_.eco_incentives_summary_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // double total_eco_funds_distributed = 4;
    {PROTOBUF_FIELD_OFFSET(EcoReportResponse, _impl_.total_eco_funds_distributed_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double network_sustainability_score = 5;
    {PROTOBUF_FIELD_OFFSET(EcoReportResponse, _impl_.network_sustainability_score_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(EcoReportResponse()._impl_.eco_incentives_summary_)>(
        1, 0, 0, 9,
        1)},
  }}, {{
    "\53\0\7\26\0\0\0\0"
    "seigr.reward_distribution.EcoReportResponse"
    "message"
    "eco_incentives_summary"
  }},
};

PROTOBUF_NOINLINE void EcoReportResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.reward_distribution.EcoReportResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.eco_incentives_summary_.Clear();
  _impl_.message_.ClearToEmpty();
  ::memset(&_impl_.total_eco_funds_distributed_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.success_) -
      reinterpret_cast<char*>(&_impl_.total_eco_funds_distributed_)) + sizeof(_impl_.success_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EcoReportResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EcoReportResponse& this_ = static_cast<const EcoReportResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EcoReportResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EcoReportResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.reward_distribution.EcoReportResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool success = 1;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_success(), target);
          }

          // string message = 2;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.reward_distribution.EcoReportResponse.message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // map<string, double> eco_incentives_summary = 3;
          if (!this_._internal_eco_incentives_summary().empty()) {
            using MapType = ::google::protobuf::Map<std::string, double>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, double,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_DOUBLE>;
            const auto& field = this_._internal_eco_incentives_summary();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    3, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.reward_distribution.EcoReportResponse.eco_incentives_summary");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    3, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.reward_distribution.EcoReportResponse.eco_incentives_summary");
              }
            }
          }

          // double total_eco_funds_distributed = 4;
          if (::absl::bit_cast<::uint64_t>(this_._internal_total_eco_funds_distributed()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                4, this_._internal_total_eco_funds_distributed(), target);
          }

          // double network_sustainability_score = 5;
          if (::absl::bit_cast<::uint64_t>(this_._internal_network_sustainability_score()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                5, this_._internal_network_sustainability_score(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.reward_distribution.EcoReportResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EcoReportResponse::ByteSizeLong(const MessageLite& base) {
          const EcoReportResponse& this_ = static_cast<const EcoReportResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EcoReportResponse::ByteSizeLong() const {
          const EcoReportResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.reward_distribution.EcoReportResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, double> eco_incentives_summary = 3;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_eco_incentives_summary_size());
              for (const auto& entry : this_._internal_eco_incentives_summary()) {
                total_size += _pbi::MapEntryFuncs<std::string, double,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_DOUBLE>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string message = 2;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
            // double total_eco_funds_distributed = 4;
            if (::absl::bit_cast<::uint64_t>(this_._internal_total_eco_funds_distributed()) != 0) {
              total_size += 9;
            }
            // double network_sustainability_score = 5;
            if (::absl::bit_cast<::uint64_t>(this_._internal_network_sustainability_score()) != 0) {
              total_size += 9;
            }
            // bool success = 1;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EcoReportResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EcoReportResponse*>(&to_msg);
  auto& from = static_cast<const EcoReportResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.reward_distribution.EcoReportResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.eco_incentives_summary_.MergeFrom(from._impl_.eco_incentives_summary_);
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_total_eco_funds_distributed()) != 0) {
    _this->_impl_.total_eco_funds_distributed_ = from._impl_.total_eco_funds_distributed_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_network_sustainability_score()) != 0) {
    _this->_impl_.network_sustainability_score_ = from._impl_.network_sustainability_score_;
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EcoReportResponse::CopyFrom(const EcoReportResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.reward_distribution.EcoReportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EcoReportResponse::InternalSwap(EcoReportResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.eco_incentives_summary_.InternalSwap(&other->_impl_.eco_incentives_summary_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EcoReportResponse, _impl_.success_)
      + sizeof(EcoReportResponse::_impl_.success_)
      - PROTOBUF_FIELD_OFFSET(EcoReportResponse, _impl_.total_eco_funds_distributed_)>(
          reinterpret_cast<char*>(&_impl_.total_eco_funds_distributed_),
          reinterpret_cast<char*>(&other->_impl_.total_eco_funds_distributed_));
}

::google::protobuf::Metadata EcoReportResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace reward_distribution
}  // namespace seigr
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_reward_5fdistribution_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
