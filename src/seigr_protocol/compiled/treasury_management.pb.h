// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: treasury_management.proto
// Protobuf C++ Version: 5.29.2

#ifndef treasury_5fmanagement_2eproto_2epb_2eh
#define treasury_5fmanagement_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "mycelith_voting.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_treasury_5fmanagement_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_treasury_5fmanagement_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_treasury_5fmanagement_2eproto;
namespace seigr {
namespace treasury_management {
class FundingApprovalRequest;
struct FundingApprovalRequestDefaultTypeInternal;
extern FundingApprovalRequestDefaultTypeInternal _FundingApprovalRequest_default_instance_;
class FundingApprovalResponse;
struct FundingApprovalResponseDefaultTypeInternal;
extern FundingApprovalResponseDefaultTypeInternal _FundingApprovalResponse_default_instance_;
class FundingHistory;
struct FundingHistoryDefaultTypeInternal;
extern FundingHistoryDefaultTypeInternal _FundingHistory_default_instance_;
class FundingRequest;
struct FundingRequestDefaultTypeInternal;
extern FundingRequestDefaultTypeInternal _FundingRequest_default_instance_;
class FundingRequest_MetadataEntry_DoNotUse;
struct FundingRequest_MetadataEntry_DoNotUseDefaultTypeInternal;
extern FundingRequest_MetadataEntry_DoNotUseDefaultTypeInternal _FundingRequest_MetadataEntry_DoNotUse_default_instance_;
class FundingSubmissionRequest;
struct FundingSubmissionRequestDefaultTypeInternal;
extern FundingSubmissionRequestDefaultTypeInternal _FundingSubmissionRequest_default_instance_;
class FundingSubmissionResponse;
struct FundingSubmissionResponseDefaultTypeInternal;
extern FundingSubmissionResponseDefaultTypeInternal _FundingSubmissionResponse_default_instance_;
class GetFundingHistoryRequest;
struct GetFundingHistoryRequestDefaultTypeInternal;
extern GetFundingHistoryRequestDefaultTypeInternal _GetFundingHistoryRequest_default_instance_;
class GetFundingHistoryResponse;
struct GetFundingHistoryResponseDefaultTypeInternal;
extern GetFundingHistoryResponseDefaultTypeInternal _GetFundingHistoryResponse_default_instance_;
class TransferFundsRequest;
struct TransferFundsRequestDefaultTypeInternal;
extern TransferFundsRequestDefaultTypeInternal _TransferFundsRequest_default_instance_;
class TransferFundsResponse;
struct TransferFundsResponseDefaultTypeInternal;
extern TransferFundsResponseDefaultTypeInternal _TransferFundsResponse_default_instance_;
class TreasuryPool;
struct TreasuryPoolDefaultTypeInternal;
extern TreasuryPoolDefaultTypeInternal _TreasuryPool_default_instance_;
class TreasuryPool_MetadataEntry_DoNotUse;
struct TreasuryPool_MetadataEntry_DoNotUseDefaultTypeInternal;
extern TreasuryPool_MetadataEntry_DoNotUseDefaultTypeInternal _TreasuryPool_MetadataEntry_DoNotUse_default_instance_;
class UpdateDistributionPolicyRequest;
struct UpdateDistributionPolicyRequestDefaultTypeInternal;
extern UpdateDistributionPolicyRequestDefaultTypeInternal _UpdateDistributionPolicyRequest_default_instance_;
class UpdateDistributionPolicyResponse;
struct UpdateDistributionPolicyResponseDefaultTypeInternal;
extern UpdateDistributionPolicyResponseDefaultTypeInternal _UpdateDistributionPolicyResponse_default_instance_;
}  // namespace treasury_management
}  // namespace seigr
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace seigr {
namespace treasury_management {
enum DistributionPolicy : int {
  DISTRIBUTION_POLICY_UNDEFINED = 0,
  DISTRIBUTION_POLICY_FIXED_ALLOCATION = 1,
  DISTRIBUTION_POLICY_PERCENTAGE_BASED = 2,
  DISTRIBUTION_POLICY_VOTING_DETERMINED = 3,
  DistributionPolicy_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  DistributionPolicy_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool DistributionPolicy_IsValid(int value);
extern const uint32_t DistributionPolicy_internal_data_[];
constexpr DistributionPolicy DistributionPolicy_MIN = static_cast<DistributionPolicy>(0);
constexpr DistributionPolicy DistributionPolicy_MAX = static_cast<DistributionPolicy>(3);
constexpr int DistributionPolicy_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
DistributionPolicy_descriptor();
template <typename T>
const std::string& DistributionPolicy_Name(T value) {
  static_assert(std::is_same<T, DistributionPolicy>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to DistributionPolicy_Name().");
  return DistributionPolicy_Name(static_cast<DistributionPolicy>(value));
}
template <>
inline const std::string& DistributionPolicy_Name(DistributionPolicy value) {
  return ::google::protobuf::internal::NameOfDenseEnum<DistributionPolicy_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool DistributionPolicy_Parse(absl::string_view name, DistributionPolicy* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DistributionPolicy>(
      DistributionPolicy_descriptor(), name, value);
}
enum FundingStatus : int {
  FUNDING_STATUS_UNDEFINED = 0,
  FUNDING_STATUS_PENDING = 1,
  FUNDING_STATUS_APPROVED = 2,
  FUNDING_STATUS_DENIED = 3,
  FUNDING_STATUS_PARTIALLY_APPROVED = 4,
  FUNDING_STATUS_UNDER_REVIEW = 5,
  FundingStatus_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  FundingStatus_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool FundingStatus_IsValid(int value);
extern const uint32_t FundingStatus_internal_data_[];
constexpr FundingStatus FundingStatus_MIN = static_cast<FundingStatus>(0);
constexpr FundingStatus FundingStatus_MAX = static_cast<FundingStatus>(5);
constexpr int FundingStatus_ARRAYSIZE = 5 + 1;
const ::google::protobuf::EnumDescriptor*
FundingStatus_descriptor();
template <typename T>
const std::string& FundingStatus_Name(T value) {
  static_assert(std::is_same<T, FundingStatus>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to FundingStatus_Name().");
  return FundingStatus_Name(static_cast<FundingStatus>(value));
}
template <>
inline const std::string& FundingStatus_Name(FundingStatus value) {
  return ::google::protobuf::internal::NameOfDenseEnum<FundingStatus_descriptor,
                                                 0, 5>(
      static_cast<int>(value));
}
inline bool FundingStatus_Parse(absl::string_view name, FundingStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FundingStatus>(
      FundingStatus_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class UpdateDistributionPolicyResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.treasury_management.UpdateDistributionPolicyResponse) */ {
 public:
  inline UpdateDistributionPolicyResponse() : UpdateDistributionPolicyResponse(nullptr) {}
  ~UpdateDistributionPolicyResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateDistributionPolicyResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateDistributionPolicyResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateDistributionPolicyResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateDistributionPolicyResponse(const UpdateDistributionPolicyResponse& from) : UpdateDistributionPolicyResponse(nullptr, from) {}
  inline UpdateDistributionPolicyResponse(UpdateDistributionPolicyResponse&& from) noexcept
      : UpdateDistributionPolicyResponse(nullptr, std::move(from)) {}
  inline UpdateDistributionPolicyResponse& operator=(const UpdateDistributionPolicyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateDistributionPolicyResponse& operator=(UpdateDistributionPolicyResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateDistributionPolicyResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateDistributionPolicyResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateDistributionPolicyResponse*>(
        &_UpdateDistributionPolicyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(UpdateDistributionPolicyResponse& a, UpdateDistributionPolicyResponse& b) { a.Swap(&b); }
  inline void Swap(UpdateDistributionPolicyResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateDistributionPolicyResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateDistributionPolicyResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateDistributionPolicyResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateDistributionPolicyResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateDistributionPolicyResponse& from) { UpdateDistributionPolicyResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateDistributionPolicyResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.treasury_management.UpdateDistributionPolicyResponse"; }

 protected:
  explicit UpdateDistributionPolicyResponse(::google::protobuf::Arena* arena);
  UpdateDistributionPolicyResponse(::google::protobuf::Arena* arena, const UpdateDistributionPolicyResponse& from);
  UpdateDistributionPolicyResponse(::google::protobuf::Arena* arena, UpdateDistributionPolicyResponse&& from) noexcept
      : UpdateDistributionPolicyResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageFieldNumber = 2,
    kSuccessFieldNumber = 1,
    kAppliedPolicyFieldNumber = 3,
  };
  // string message = 2;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // .seigr.treasury_management.DistributionPolicy applied_policy = 3;
  void clear_applied_policy() ;
  ::seigr::treasury_management::DistributionPolicy applied_policy() const;
  void set_applied_policy(::seigr::treasury_management::DistributionPolicy value);

  private:
  ::seigr::treasury_management::DistributionPolicy _internal_applied_policy() const;
  void _internal_set_applied_policy(::seigr::treasury_management::DistributionPolicy value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.treasury_management.UpdateDistributionPolicyResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      74, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateDistributionPolicyResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr message_;
    bool success_;
    int applied_policy_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_treasury_5fmanagement_2eproto;
};
// -------------------------------------------------------------------

class UpdateDistributionPolicyRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.treasury_management.UpdateDistributionPolicyRequest) */ {
 public:
  inline UpdateDistributionPolicyRequest() : UpdateDistributionPolicyRequest(nullptr) {}
  ~UpdateDistributionPolicyRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateDistributionPolicyRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateDistributionPolicyRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateDistributionPolicyRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateDistributionPolicyRequest(const UpdateDistributionPolicyRequest& from) : UpdateDistributionPolicyRequest(nullptr, from) {}
  inline UpdateDistributionPolicyRequest(UpdateDistributionPolicyRequest&& from) noexcept
      : UpdateDistributionPolicyRequest(nullptr, std::move(from)) {}
  inline UpdateDistributionPolicyRequest& operator=(const UpdateDistributionPolicyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateDistributionPolicyRequest& operator=(UpdateDistributionPolicyRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateDistributionPolicyRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateDistributionPolicyRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateDistributionPolicyRequest*>(
        &_UpdateDistributionPolicyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(UpdateDistributionPolicyRequest& a, UpdateDistributionPolicyRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateDistributionPolicyRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateDistributionPolicyRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateDistributionPolicyRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateDistributionPolicyRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateDistributionPolicyRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateDistributionPolicyRequest& from) { UpdateDistributionPolicyRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateDistributionPolicyRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.treasury_management.UpdateDistributionPolicyRequest"; }

 protected:
  explicit UpdateDistributionPolicyRequest(::google::protobuf::Arena* arena);
  UpdateDistributionPolicyRequest(::google::protobuf::Arena* arena, const UpdateDistributionPolicyRequest& from);
  UpdateDistributionPolicyRequest(::google::protobuf::Arena* arena, UpdateDistributionPolicyRequest&& from) noexcept
      : UpdateDistributionPolicyRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPoolIdFieldNumber = 1,
    kUpdatedByFieldNumber = 3,
    kNewPolicyFieldNumber = 2,
  };
  // string pool_id = 1;
  void clear_pool_id() ;
  const std::string& pool_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pool_id(Arg_&& arg, Args_... args);
  std::string* mutable_pool_id();
  PROTOBUF_NODISCARD std::string* release_pool_id();
  void set_allocated_pool_id(std::string* value);

  private:
  const std::string& _internal_pool_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pool_id(
      const std::string& value);
  std::string* _internal_mutable_pool_id();

  public:
  // string updated_by = 3;
  void clear_updated_by() ;
  const std::string& updated_by() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_updated_by(Arg_&& arg, Args_... args);
  std::string* mutable_updated_by();
  PROTOBUF_NODISCARD std::string* release_updated_by();
  void set_allocated_updated_by(std::string* value);

  private:
  const std::string& _internal_updated_by() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_updated_by(
      const std::string& value);
  std::string* _internal_mutable_updated_by();

  public:
  // .seigr.treasury_management.DistributionPolicy new_policy = 2;
  void clear_new_policy() ;
  ::seigr::treasury_management::DistributionPolicy new_policy() const;
  void set_new_policy(::seigr::treasury_management::DistributionPolicy value);

  private:
  ::seigr::treasury_management::DistributionPolicy _internal_new_policy() const;
  void _internal_set_new_policy(::seigr::treasury_management::DistributionPolicy value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.treasury_management.UpdateDistributionPolicyRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      83, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateDistributionPolicyRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr pool_id_;
    ::google::protobuf::internal::ArenaStringPtr updated_by_;
    int new_policy_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_treasury_5fmanagement_2eproto;
};
// -------------------------------------------------------------------

class TreasuryPool_MetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  TreasuryPool_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TreasuryPool_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TreasuryPool_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const TreasuryPool_MetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TreasuryPool_MetadataEntry_DoNotUse*>(
        &_TreasuryPool_MetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_treasury_5fmanagement_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      69, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class TransferFundsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.treasury_management.TransferFundsResponse) */ {
 public:
  inline TransferFundsResponse() : TransferFundsResponse(nullptr) {}
  ~TransferFundsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TransferFundsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TransferFundsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TransferFundsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline TransferFundsResponse(const TransferFundsResponse& from) : TransferFundsResponse(nullptr, from) {}
  inline TransferFundsResponse(TransferFundsResponse&& from) noexcept
      : TransferFundsResponse(nullptr, std::move(from)) {}
  inline TransferFundsResponse& operator=(const TransferFundsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline TransferFundsResponse& operator=(TransferFundsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TransferFundsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const TransferFundsResponse* internal_default_instance() {
    return reinterpret_cast<const TransferFundsResponse*>(
        &_TransferFundsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(TransferFundsResponse& a, TransferFundsResponse& b) { a.Swap(&b); }
  inline void Swap(TransferFundsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TransferFundsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TransferFundsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TransferFundsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TransferFundsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TransferFundsResponse& from) { TransferFundsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TransferFundsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.treasury_management.TransferFundsResponse"; }

 protected:
  explicit TransferFundsResponse(::google::protobuf::Arena* arena);
  TransferFundsResponse(::google::protobuf::Arena* arena, const TransferFundsResponse& from);
  TransferFundsResponse(::google::protobuf::Arena* arena, TransferFundsResponse&& from) noexcept
      : TransferFundsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageFieldNumber = 2,
    kSuccessFieldNumber = 1,
  };
  // string message = 2;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.treasury_management.TransferFundsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      63, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TransferFundsResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr message_;
    bool success_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_treasury_5fmanagement_2eproto;
};
// -------------------------------------------------------------------

class TransferFundsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.treasury_management.TransferFundsRequest) */ {
 public:
  inline TransferFundsRequest() : TransferFundsRequest(nullptr) {}
  ~TransferFundsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TransferFundsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TransferFundsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TransferFundsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline TransferFundsRequest(const TransferFundsRequest& from) : TransferFundsRequest(nullptr, from) {}
  inline TransferFundsRequest(TransferFundsRequest&& from) noexcept
      : TransferFundsRequest(nullptr, std::move(from)) {}
  inline TransferFundsRequest& operator=(const TransferFundsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline TransferFundsRequest& operator=(TransferFundsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TransferFundsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const TransferFundsRequest* internal_default_instance() {
    return reinterpret_cast<const TransferFundsRequest*>(
        &_TransferFundsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(TransferFundsRequest& a, TransferFundsRequest& b) { a.Swap(&b); }
  inline void Swap(TransferFundsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TransferFundsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TransferFundsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TransferFundsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TransferFundsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TransferFundsRequest& from) { TransferFundsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TransferFundsRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.treasury_management.TransferFundsRequest"; }

 protected:
  explicit TransferFundsRequest(::google::protobuf::Arena* arena);
  TransferFundsRequest(::google::protobuf::Arena* arena, const TransferFundsRequest& from);
  TransferFundsRequest(::google::protobuf::Arena* arena, TransferFundsRequest&& from) noexcept
      : TransferFundsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPoolIdFieldNumber = 1,
    kRecipientAddressFieldNumber = 3,
    kTransferReasonFieldNumber = 4,
    kAmountFieldNumber = 2,
  };
  // string pool_id = 1;
  void clear_pool_id() ;
  const std::string& pool_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pool_id(Arg_&& arg, Args_... args);
  std::string* mutable_pool_id();
  PROTOBUF_NODISCARD std::string* release_pool_id();
  void set_allocated_pool_id(std::string* value);

  private:
  const std::string& _internal_pool_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pool_id(
      const std::string& value);
  std::string* _internal_mutable_pool_id();

  public:
  // string recipient_address = 3;
  void clear_recipient_address() ;
  const std::string& recipient_address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_recipient_address(Arg_&& arg, Args_... args);
  std::string* mutable_recipient_address();
  PROTOBUF_NODISCARD std::string* release_recipient_address();
  void set_allocated_recipient_address(std::string* value);

  private:
  const std::string& _internal_recipient_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_recipient_address(
      const std::string& value);
  std::string* _internal_mutable_recipient_address();

  public:
  // string transfer_reason = 4;
  void clear_transfer_reason() ;
  const std::string& transfer_reason() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_transfer_reason(Arg_&& arg, Args_... args);
  std::string* mutable_transfer_reason();
  PROTOBUF_NODISCARD std::string* release_transfer_reason();
  void set_allocated_transfer_reason(std::string* value);

  private:
  const std::string& _internal_transfer_reason() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_transfer_reason(
      const std::string& value);
  std::string* _internal_mutable_transfer_reason();

  public:
  // uint64 amount = 2;
  void clear_amount() ;
  ::uint64_t amount() const;
  void set_amount(::uint64_t value);

  private:
  ::uint64_t _internal_amount() const;
  void _internal_set_amount(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.treasury_management.TransferFundsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      94, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TransferFundsRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr pool_id_;
    ::google::protobuf::internal::ArenaStringPtr recipient_address_;
    ::google::protobuf::internal::ArenaStringPtr transfer_reason_;
    ::uint64_t amount_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_treasury_5fmanagement_2eproto;
};
// -------------------------------------------------------------------

class GetFundingHistoryRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.treasury_management.GetFundingHistoryRequest) */ {
 public:
  inline GetFundingHistoryRequest() : GetFundingHistoryRequest(nullptr) {}
  ~GetFundingHistoryRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetFundingHistoryRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetFundingHistoryRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetFundingHistoryRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetFundingHistoryRequest(const GetFundingHistoryRequest& from) : GetFundingHistoryRequest(nullptr, from) {}
  inline GetFundingHistoryRequest(GetFundingHistoryRequest&& from) noexcept
      : GetFundingHistoryRequest(nullptr, std::move(from)) {}
  inline GetFundingHistoryRequest& operator=(const GetFundingHistoryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetFundingHistoryRequest& operator=(GetFundingHistoryRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetFundingHistoryRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetFundingHistoryRequest* internal_default_instance() {
    return reinterpret_cast<const GetFundingHistoryRequest*>(
        &_GetFundingHistoryRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(GetFundingHistoryRequest& a, GetFundingHistoryRequest& b) { a.Swap(&b); }
  inline void Swap(GetFundingHistoryRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetFundingHistoryRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetFundingHistoryRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetFundingHistoryRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetFundingHistoryRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetFundingHistoryRequest& from) { GetFundingHistoryRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetFundingHistoryRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.treasury_management.GetFundingHistoryRequest"; }

 protected:
  explicit GetFundingHistoryRequest(::google::protobuf::Arena* arena);
  GetFundingHistoryRequest(::google::protobuf::Arena* arena, const GetFundingHistoryRequest& from);
  GetFundingHistoryRequest(::google::protobuf::Arena* arena, GetFundingHistoryRequest&& from) noexcept
      : GetFundingHistoryRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPoolIdFieldNumber = 1,
    kLimitFieldNumber = 2,
    kIncludeDeniedFieldNumber = 3,
  };
  // string pool_id = 1;
  void clear_pool_id() ;
  const std::string& pool_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pool_id(Arg_&& arg, Args_... args);
  std::string* mutable_pool_id();
  PROTOBUF_NODISCARD std::string* release_pool_id();
  void set_allocated_pool_id(std::string* value);

  private:
  const std::string& _internal_pool_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pool_id(
      const std::string& value);
  std::string* _internal_mutable_pool_id();

  public:
  // uint32 limit = 2;
  void clear_limit() ;
  ::uint32_t limit() const;
  void set_limit(::uint32_t value);

  private:
  ::uint32_t _internal_limit() const;
  void _internal_set_limit(::uint32_t value);

  public:
  // bool include_denied = 3;
  void clear_include_denied() ;
  bool include_denied() const;
  void set_include_denied(bool value);

  private:
  bool _internal_include_denied() const;
  void _internal_set_include_denied(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.treasury_management.GetFundingHistoryRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      66, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetFundingHistoryRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr pool_id_;
    ::uint32_t limit_;
    bool include_denied_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_treasury_5fmanagement_2eproto;
};
// -------------------------------------------------------------------

class FundingSubmissionResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.treasury_management.FundingSubmissionResponse) */ {
 public:
  inline FundingSubmissionResponse() : FundingSubmissionResponse(nullptr) {}
  ~FundingSubmissionResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FundingSubmissionResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FundingSubmissionResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FundingSubmissionResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline FundingSubmissionResponse(const FundingSubmissionResponse& from) : FundingSubmissionResponse(nullptr, from) {}
  inline FundingSubmissionResponse(FundingSubmissionResponse&& from) noexcept
      : FundingSubmissionResponse(nullptr, std::move(from)) {}
  inline FundingSubmissionResponse& operator=(const FundingSubmissionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline FundingSubmissionResponse& operator=(FundingSubmissionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FundingSubmissionResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const FundingSubmissionResponse* internal_default_instance() {
    return reinterpret_cast<const FundingSubmissionResponse*>(
        &_FundingSubmissionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(FundingSubmissionResponse& a, FundingSubmissionResponse& b) { a.Swap(&b); }
  inline void Swap(FundingSubmissionResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FundingSubmissionResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FundingSubmissionResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FundingSubmissionResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FundingSubmissionResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FundingSubmissionResponse& from) { FundingSubmissionResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FundingSubmissionResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.treasury_management.FundingSubmissionResponse"; }

 protected:
  explicit FundingSubmissionResponse(::google::protobuf::Arena* arena);
  FundingSubmissionResponse(::google::protobuf::Arena* arena, const FundingSubmissionResponse& from);
  FundingSubmissionResponse(::google::protobuf::Arena* arena, FundingSubmissionResponse&& from) noexcept
      : FundingSubmissionResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRequestIdFieldNumber = 1,
    kMessageFieldNumber = 3,
    kSuccessFieldNumber = 2,
  };
  // string request_id = 1;
  void clear_request_id() ;
  const std::string& request_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_request_id(Arg_&& arg, Args_... args);
  std::string* mutable_request_id();
  PROTOBUF_NODISCARD std::string* release_request_id();
  void set_allocated_request_id(std::string* value);

  private:
  const std::string& _internal_request_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_request_id(
      const std::string& value);
  std::string* _internal_mutable_request_id();

  public:
  // string message = 3;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // bool success = 2;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.treasury_management.FundingSubmissionResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      77, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FundingSubmissionResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr request_id_;
    ::google::protobuf::internal::ArenaStringPtr message_;
    bool success_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_treasury_5fmanagement_2eproto;
};
// -------------------------------------------------------------------

class FundingSubmissionRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.treasury_management.FundingSubmissionRequest) */ {
 public:
  inline FundingSubmissionRequest() : FundingSubmissionRequest(nullptr) {}
  ~FundingSubmissionRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FundingSubmissionRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FundingSubmissionRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FundingSubmissionRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline FundingSubmissionRequest(const FundingSubmissionRequest& from) : FundingSubmissionRequest(nullptr, from) {}
  inline FundingSubmissionRequest(FundingSubmissionRequest&& from) noexcept
      : FundingSubmissionRequest(nullptr, std::move(from)) {}
  inline FundingSubmissionRequest& operator=(const FundingSubmissionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline FundingSubmissionRequest& operator=(FundingSubmissionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FundingSubmissionRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const FundingSubmissionRequest* internal_default_instance() {
    return reinterpret_cast<const FundingSubmissionRequest*>(
        &_FundingSubmissionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(FundingSubmissionRequest& a, FundingSubmissionRequest& b) { a.Swap(&b); }
  inline void Swap(FundingSubmissionRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FundingSubmissionRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FundingSubmissionRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FundingSubmissionRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FundingSubmissionRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FundingSubmissionRequest& from) { FundingSubmissionRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FundingSubmissionRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.treasury_management.FundingSubmissionRequest"; }

 protected:
  explicit FundingSubmissionRequest(::google::protobuf::Arena* arena);
  FundingSubmissionRequest(::google::protobuf::Arena* arena, const FundingSubmissionRequest& from);
  FundingSubmissionRequest(::google::protobuf::Arena* arena, FundingSubmissionRequest&& from) noexcept
      : FundingSubmissionRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPurposeFieldNumber = 1,
    kRequesterIdFieldNumber = 3,
    kRequestedAmountFieldNumber = 2,
  };
  // string purpose = 1;
  void clear_purpose() ;
  const std::string& purpose() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_purpose(Arg_&& arg, Args_... args);
  std::string* mutable_purpose();
  PROTOBUF_NODISCARD std::string* release_purpose();
  void set_allocated_purpose(std::string* value);

  private:
  const std::string& _internal_purpose() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_purpose(
      const std::string& value);
  std::string* _internal_mutable_purpose();

  public:
  // string requester_id = 3;
  void clear_requester_id() ;
  const std::string& requester_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_requester_id(Arg_&& arg, Args_... args);
  std::string* mutable_requester_id();
  PROTOBUF_NODISCARD std::string* release_requester_id();
  void set_allocated_requester_id(std::string* value);

  private:
  const std::string& _internal_requester_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_requester_id(
      const std::string& value);
  std::string* _internal_mutable_requester_id();

  public:
  // uint64 requested_amount = 2;
  void clear_requested_amount() ;
  ::uint64_t requested_amount() const;
  void set_requested_amount(::uint64_t value);

  private:
  ::uint64_t _internal_requested_amount() const;
  void _internal_set_requested_amount(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.treasury_management.FundingSubmissionRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      78, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FundingSubmissionRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr purpose_;
    ::google::protobuf::internal::ArenaStringPtr requester_id_;
    ::uint64_t requested_amount_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_treasury_5fmanagement_2eproto;
};
// -------------------------------------------------------------------

class FundingRequest_MetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  FundingRequest_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FundingRequest_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit FundingRequest_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const FundingRequest_MetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const FundingRequest_MetadataEntry_DoNotUse*>(
        &_FundingRequest_MetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_treasury_5fmanagement_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      71, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class FundingApprovalResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.treasury_management.FundingApprovalResponse) */ {
 public:
  inline FundingApprovalResponse() : FundingApprovalResponse(nullptr) {}
  ~FundingApprovalResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FundingApprovalResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FundingApprovalResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FundingApprovalResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline FundingApprovalResponse(const FundingApprovalResponse& from) : FundingApprovalResponse(nullptr, from) {}
  inline FundingApprovalResponse(FundingApprovalResponse&& from) noexcept
      : FundingApprovalResponse(nullptr, std::move(from)) {}
  inline FundingApprovalResponse& operator=(const FundingApprovalResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline FundingApprovalResponse& operator=(FundingApprovalResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FundingApprovalResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const FundingApprovalResponse* internal_default_instance() {
    return reinterpret_cast<const FundingApprovalResponse*>(
        &_FundingApprovalResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(FundingApprovalResponse& a, FundingApprovalResponse& b) { a.Swap(&b); }
  inline void Swap(FundingApprovalResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FundingApprovalResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FundingApprovalResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FundingApprovalResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FundingApprovalResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FundingApprovalResponse& from) { FundingApprovalResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FundingApprovalResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.treasury_management.FundingApprovalResponse"; }

 protected:
  explicit FundingApprovalResponse(::google::protobuf::Arena* arena);
  FundingApprovalResponse(::google::protobuf::Arena* arena, const FundingApprovalResponse& from);
  FundingApprovalResponse(::google::protobuf::Arena* arena, FundingApprovalResponse&& from) noexcept
      : FundingApprovalResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageFieldNumber = 2,
    kSuccessFieldNumber = 1,
  };
  // string message = 2;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.treasury_management.FundingApprovalResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      65, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FundingApprovalResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr message_;
    bool success_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_treasury_5fmanagement_2eproto;
};
// -------------------------------------------------------------------

class FundingApprovalRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.treasury_management.FundingApprovalRequest) */ {
 public:
  inline FundingApprovalRequest() : FundingApprovalRequest(nullptr) {}
  ~FundingApprovalRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FundingApprovalRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FundingApprovalRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FundingApprovalRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline FundingApprovalRequest(const FundingApprovalRequest& from) : FundingApprovalRequest(nullptr, from) {}
  inline FundingApprovalRequest(FundingApprovalRequest&& from) noexcept
      : FundingApprovalRequest(nullptr, std::move(from)) {}
  inline FundingApprovalRequest& operator=(const FundingApprovalRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline FundingApprovalRequest& operator=(FundingApprovalRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FundingApprovalRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const FundingApprovalRequest* internal_default_instance() {
    return reinterpret_cast<const FundingApprovalRequest*>(
        &_FundingApprovalRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(FundingApprovalRequest& a, FundingApprovalRequest& b) { a.Swap(&b); }
  inline void Swap(FundingApprovalRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FundingApprovalRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FundingApprovalRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FundingApprovalRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FundingApprovalRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FundingApprovalRequest& from) { FundingApprovalRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FundingApprovalRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.treasury_management.FundingApprovalRequest"; }

 protected:
  explicit FundingApprovalRequest(::google::protobuf::Arena* arena);
  FundingApprovalRequest(::google::protobuf::Arena* arena, const FundingApprovalRequest& from);
  FundingApprovalRequest(::google::protobuf::Arena* arena, FundingApprovalRequest&& from) noexcept
      : FundingApprovalRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRequestIdFieldNumber = 1,
    kVoterIdFieldNumber = 2,
    kChoiceFieldNumber = 3,
  };
  // string request_id = 1;
  void clear_request_id() ;
  const std::string& request_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_request_id(Arg_&& arg, Args_... args);
  std::string* mutable_request_id();
  PROTOBUF_NODISCARD std::string* release_request_id();
  void set_allocated_request_id(std::string* value);

  private:
  const std::string& _internal_request_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_request_id(
      const std::string& value);
  std::string* _internal_mutable_request_id();

  public:
  // string voter_id = 2;
  void clear_voter_id() ;
  const std::string& voter_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_voter_id(Arg_&& arg, Args_... args);
  std::string* mutable_voter_id();
  PROTOBUF_NODISCARD std::string* release_voter_id();
  void set_allocated_voter_id(std::string* value);

  private:
  const std::string& _internal_voter_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_voter_id(
      const std::string& value);
  std::string* _internal_mutable_voter_id();

  public:
  // .seigr.voting.VoteChoice choice = 3;
  void clear_choice() ;
  ::seigr::voting::VoteChoice choice() const;
  void set_choice(::seigr::voting::VoteChoice value);

  private:
  ::seigr::voting::VoteChoice _internal_choice() const;
  void _internal_set_choice(::seigr::voting::VoteChoice value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.treasury_management.FundingApprovalRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      75, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FundingApprovalRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr request_id_;
    ::google::protobuf::internal::ArenaStringPtr voter_id_;
    int choice_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_treasury_5fmanagement_2eproto;
};
// -------------------------------------------------------------------

class TreasuryPool final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.treasury_management.TreasuryPool) */ {
 public:
  inline TreasuryPool() : TreasuryPool(nullptr) {}
  ~TreasuryPool() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TreasuryPool* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TreasuryPool));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TreasuryPool(
      ::google::protobuf::internal::ConstantInitialized);

  inline TreasuryPool(const TreasuryPool& from) : TreasuryPool(nullptr, from) {}
  inline TreasuryPool(TreasuryPool&& from) noexcept
      : TreasuryPool(nullptr, std::move(from)) {}
  inline TreasuryPool& operator=(const TreasuryPool& from) {
    CopyFrom(from);
    return *this;
  }
  inline TreasuryPool& operator=(TreasuryPool&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TreasuryPool& default_instance() {
    return *internal_default_instance();
  }
  static inline const TreasuryPool* internal_default_instance() {
    return reinterpret_cast<const TreasuryPool*>(
        &_TreasuryPool_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(TreasuryPool& a, TreasuryPool& b) { a.Swap(&b); }
  inline void Swap(TreasuryPool* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TreasuryPool* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TreasuryPool* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TreasuryPool>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TreasuryPool& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TreasuryPool& from) { TreasuryPool::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TreasuryPool* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.treasury_management.TreasuryPool"; }

 protected:
  explicit TreasuryPool(::google::protobuf::Arena* arena);
  TreasuryPool(::google::protobuf::Arena* arena, const TreasuryPool& from);
  TreasuryPool(::google::protobuf::Arena* arena, TreasuryPool&& from) noexcept
      : TreasuryPool(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMetadataFieldNumber = 6,
    kPoolIdFieldNumber = 1,
    kPurposeFieldNumber = 2,
    kCreatedAtFieldNumber = 5,
    kBalanceFieldNumber = 3,
    kAllocatedFundsFieldNumber = 7,
    kReservedFundsFieldNumber = 8,
    kDistributionPolicyFieldNumber = 4,
  };
  // map<string, string> metadata = 6;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // string pool_id = 1;
  void clear_pool_id() ;
  const std::string& pool_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pool_id(Arg_&& arg, Args_... args);
  std::string* mutable_pool_id();
  PROTOBUF_NODISCARD std::string* release_pool_id();
  void set_allocated_pool_id(std::string* value);

  private:
  const std::string& _internal_pool_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pool_id(
      const std::string& value);
  std::string* _internal_mutable_pool_id();

  public:
  // string purpose = 2;
  void clear_purpose() ;
  const std::string& purpose() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_purpose(Arg_&& arg, Args_... args);
  std::string* mutable_purpose();
  PROTOBUF_NODISCARD std::string* release_purpose();
  void set_allocated_purpose(std::string* value);

  private:
  const std::string& _internal_purpose() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_purpose(
      const std::string& value);
  std::string* _internal_mutable_purpose();

  public:
  // string created_at = 5;
  void clear_created_at() ;
  const std::string& created_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_created_at(Arg_&& arg, Args_... args);
  std::string* mutable_created_at();
  PROTOBUF_NODISCARD std::string* release_created_at();
  void set_allocated_created_at(std::string* value);

  private:
  const std::string& _internal_created_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_created_at(
      const std::string& value);
  std::string* _internal_mutable_created_at();

  public:
  // uint64 balance = 3;
  void clear_balance() ;
  ::uint64_t balance() const;
  void set_balance(::uint64_t value);

  private:
  ::uint64_t _internal_balance() const;
  void _internal_set_balance(::uint64_t value);

  public:
  // uint64 allocated_funds = 7;
  void clear_allocated_funds() ;
  ::uint64_t allocated_funds() const;
  void set_allocated_funds(::uint64_t value);

  private:
  ::uint64_t _internal_allocated_funds() const;
  void _internal_set_allocated_funds(::uint64_t value);

  public:
  // uint64 reserved_funds = 8;
  void clear_reserved_funds() ;
  ::uint64_t reserved_funds() const;
  void set_reserved_funds(::uint64_t value);

  private:
  ::uint64_t _internal_reserved_funds() const;
  void _internal_set_reserved_funds(::uint64_t value);

  public:
  // .seigr.treasury_management.DistributionPolicy distribution_policy = 4;
  void clear_distribution_policy() ;
  ::seigr::treasury_management::DistributionPolicy distribution_policy() const;
  void set_distribution_policy(::seigr::treasury_management::DistributionPolicy value);

  private:
  ::seigr::treasury_management::DistributionPolicy _internal_distribution_policy() const;
  void _internal_set_distribution_policy(::seigr::treasury_management::DistributionPolicy value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.treasury_management.TreasuryPool)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 1,
      87, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TreasuryPool& from_msg);
    ::google::protobuf::internal::MapField<TreasuryPool_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::internal::ArenaStringPtr pool_id_;
    ::google::protobuf::internal::ArenaStringPtr purpose_;
    ::google::protobuf::internal::ArenaStringPtr created_at_;
    ::uint64_t balance_;
    ::uint64_t allocated_funds_;
    ::uint64_t reserved_funds_;
    int distribution_policy_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_treasury_5fmanagement_2eproto;
};
// -------------------------------------------------------------------

class FundingRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.treasury_management.FundingRequest) */ {
 public:
  inline FundingRequest() : FundingRequest(nullptr) {}
  ~FundingRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FundingRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FundingRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FundingRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline FundingRequest(const FundingRequest& from) : FundingRequest(nullptr, from) {}
  inline FundingRequest(FundingRequest&& from) noexcept
      : FundingRequest(nullptr, std::move(from)) {}
  inline FundingRequest& operator=(const FundingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline FundingRequest& operator=(FundingRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FundingRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const FundingRequest* internal_default_instance() {
    return reinterpret_cast<const FundingRequest*>(
        &_FundingRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(FundingRequest& a, FundingRequest& b) { a.Swap(&b); }
  inline void Swap(FundingRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FundingRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FundingRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FundingRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FundingRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FundingRequest& from) { FundingRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FundingRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.treasury_management.FundingRequest"; }

 protected:
  explicit FundingRequest(::google::protobuf::Arena* arena);
  FundingRequest(::google::protobuf::Arena* arena, const FundingRequest& from);
  FundingRequest(::google::protobuf::Arena* arena, FundingRequest&& from) noexcept
      : FundingRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kVotingLayersFieldNumber = 5,
    kMetadataFieldNumber = 9,
    kRequestIdFieldNumber = 1,
    kPurposeFieldNumber = 2,
    kRequesterIdFieldNumber = 6,
    kTimestampFieldNumber = 7,
    kLastUpdatedFieldNumber = 8,
    kApprovalTimestampFieldNumber = 11,
    kRequestedAmountFieldNumber = 3,
    kApprovedAmountFieldNumber = 10,
    kFundingStatusFieldNumber = 4,
  };
  // repeated .seigr.voting.VotingLayer voting_layers = 5;
  int voting_layers_size() const;
  private:
  int _internal_voting_layers_size() const;

  public:
  void clear_voting_layers() ;
  ::seigr::voting::VotingLayer* mutable_voting_layers(int index);
  ::google::protobuf::RepeatedPtrField<::seigr::voting::VotingLayer>* mutable_voting_layers();

  private:
  const ::google::protobuf::RepeatedPtrField<::seigr::voting::VotingLayer>& _internal_voting_layers() const;
  ::google::protobuf::RepeatedPtrField<::seigr::voting::VotingLayer>* _internal_mutable_voting_layers();
  public:
  const ::seigr::voting::VotingLayer& voting_layers(int index) const;
  ::seigr::voting::VotingLayer* add_voting_layers();
  const ::google::protobuf::RepeatedPtrField<::seigr::voting::VotingLayer>& voting_layers() const;
  // map<string, string> metadata = 9;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // string request_id = 1;
  void clear_request_id() ;
  const std::string& request_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_request_id(Arg_&& arg, Args_... args);
  std::string* mutable_request_id();
  PROTOBUF_NODISCARD std::string* release_request_id();
  void set_allocated_request_id(std::string* value);

  private:
  const std::string& _internal_request_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_request_id(
      const std::string& value);
  std::string* _internal_mutable_request_id();

  public:
  // string purpose = 2;
  void clear_purpose() ;
  const std::string& purpose() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_purpose(Arg_&& arg, Args_... args);
  std::string* mutable_purpose();
  PROTOBUF_NODISCARD std::string* release_purpose();
  void set_allocated_purpose(std::string* value);

  private:
  const std::string& _internal_purpose() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_purpose(
      const std::string& value);
  std::string* _internal_mutable_purpose();

  public:
  // string requester_id = 6;
  void clear_requester_id() ;
  const std::string& requester_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_requester_id(Arg_&& arg, Args_... args);
  std::string* mutable_requester_id();
  PROTOBUF_NODISCARD std::string* release_requester_id();
  void set_allocated_requester_id(std::string* value);

  private:
  const std::string& _internal_requester_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_requester_id(
      const std::string& value);
  std::string* _internal_mutable_requester_id();

  public:
  // string timestamp = 7;
  void clear_timestamp() ;
  const std::string& timestamp() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_timestamp(Arg_&& arg, Args_... args);
  std::string* mutable_timestamp();
  PROTOBUF_NODISCARD std::string* release_timestamp();
  void set_allocated_timestamp(std::string* value);

  private:
  const std::string& _internal_timestamp() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_timestamp(
      const std::string& value);
  std::string* _internal_mutable_timestamp();

  public:
  // string last_updated = 8;
  void clear_last_updated() ;
  const std::string& last_updated() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_last_updated(Arg_&& arg, Args_... args);
  std::string* mutable_last_updated();
  PROTOBUF_NODISCARD std::string* release_last_updated();
  void set_allocated_last_updated(std::string* value);

  private:
  const std::string& _internal_last_updated() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_last_updated(
      const std::string& value);
  std::string* _internal_mutable_last_updated();

  public:
  // string approval_timestamp = 11;
  void clear_approval_timestamp() ;
  const std::string& approval_timestamp() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_approval_timestamp(Arg_&& arg, Args_... args);
  std::string* mutable_approval_timestamp();
  PROTOBUF_NODISCARD std::string* release_approval_timestamp();
  void set_allocated_approval_timestamp(std::string* value);

  private:
  const std::string& _internal_approval_timestamp() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_approval_timestamp(
      const std::string& value);
  std::string* _internal_mutable_approval_timestamp();

  public:
  // uint64 requested_amount = 3;
  void clear_requested_amount() ;
  ::uint64_t requested_amount() const;
  void set_requested_amount(::uint64_t value);

  private:
  ::uint64_t _internal_requested_amount() const;
  void _internal_set_requested_amount(::uint64_t value);

  public:
  // uint64 approved_amount = 10;
  void clear_approved_amount() ;
  ::uint64_t approved_amount() const;
  void set_approved_amount(::uint64_t value);

  private:
  ::uint64_t _internal_approved_amount() const;
  void _internal_set_approved_amount(::uint64_t value);

  public:
  // .seigr.treasury_management.FundingStatus funding_status = 4;
  void clear_funding_status() ;
  ::seigr::treasury_management::FundingStatus funding_status() const;
  void set_funding_status(::seigr::treasury_management::FundingStatus value);

  private:
  ::seigr::treasury_management::FundingStatus _internal_funding_status() const;
  void _internal_set_funding_status(::seigr::treasury_management::FundingStatus value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.treasury_management.FundingRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 11, 2,
      133, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FundingRequest& from_msg);
    ::google::protobuf::RepeatedPtrField< ::seigr::voting::VotingLayer > voting_layers_;
    ::google::protobuf::internal::MapField<FundingRequest_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::internal::ArenaStringPtr request_id_;
    ::google::protobuf::internal::ArenaStringPtr purpose_;
    ::google::protobuf::internal::ArenaStringPtr requester_id_;
    ::google::protobuf::internal::ArenaStringPtr timestamp_;
    ::google::protobuf::internal::ArenaStringPtr last_updated_;
    ::google::protobuf::internal::ArenaStringPtr approval_timestamp_;
    ::uint64_t requested_amount_;
    ::uint64_t approved_amount_;
    int funding_status_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_treasury_5fmanagement_2eproto;
};
// -------------------------------------------------------------------

class GetFundingHistoryResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.treasury_management.GetFundingHistoryResponse) */ {
 public:
  inline GetFundingHistoryResponse() : GetFundingHistoryResponse(nullptr) {}
  ~GetFundingHistoryResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetFundingHistoryResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetFundingHistoryResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetFundingHistoryResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetFundingHistoryResponse(const GetFundingHistoryResponse& from) : GetFundingHistoryResponse(nullptr, from) {}
  inline GetFundingHistoryResponse(GetFundingHistoryResponse&& from) noexcept
      : GetFundingHistoryResponse(nullptr, std::move(from)) {}
  inline GetFundingHistoryResponse& operator=(const GetFundingHistoryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetFundingHistoryResponse& operator=(GetFundingHistoryResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetFundingHistoryResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetFundingHistoryResponse* internal_default_instance() {
    return reinterpret_cast<const GetFundingHistoryResponse*>(
        &_GetFundingHistoryResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(GetFundingHistoryResponse& a, GetFundingHistoryResponse& b) { a.Swap(&b); }
  inline void Swap(GetFundingHistoryResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetFundingHistoryResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetFundingHistoryResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetFundingHistoryResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetFundingHistoryResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetFundingHistoryResponse& from) { GetFundingHistoryResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetFundingHistoryResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.treasury_management.GetFundingHistoryResponse"; }

 protected:
  explicit GetFundingHistoryResponse(::google::protobuf::Arena* arena);
  GetFundingHistoryResponse(::google::protobuf::Arena* arena, const GetFundingHistoryResponse& from);
  GetFundingHistoryResponse(::google::protobuf::Arena* arena, GetFundingHistoryResponse&& from) noexcept
      : GetFundingHistoryResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFundingRequestsFieldNumber = 2,
    kPoolIdFieldNumber = 1,
    kTotalRequestsFieldNumber = 3,
  };
  // repeated .seigr.treasury_management.FundingRequest funding_requests = 2;
  int funding_requests_size() const;
  private:
  int _internal_funding_requests_size() const;

  public:
  void clear_funding_requests() ;
  ::seigr::treasury_management::FundingRequest* mutable_funding_requests(int index);
  ::google::protobuf::RepeatedPtrField<::seigr::treasury_management::FundingRequest>* mutable_funding_requests();

  private:
  const ::google::protobuf::RepeatedPtrField<::seigr::treasury_management::FundingRequest>& _internal_funding_requests() const;
  ::google::protobuf::RepeatedPtrField<::seigr::treasury_management::FundingRequest>* _internal_mutable_funding_requests();
  public:
  const ::seigr::treasury_management::FundingRequest& funding_requests(int index) const;
  ::seigr::treasury_management::FundingRequest* add_funding_requests();
  const ::google::protobuf::RepeatedPtrField<::seigr::treasury_management::FundingRequest>& funding_requests() const;
  // string pool_id = 1;
  void clear_pool_id() ;
  const std::string& pool_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pool_id(Arg_&& arg, Args_... args);
  std::string* mutable_pool_id();
  PROTOBUF_NODISCARD std::string* release_pool_id();
  void set_allocated_pool_id(std::string* value);

  private:
  const std::string& _internal_pool_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pool_id(
      const std::string& value);
  std::string* _internal_mutable_pool_id();

  public:
  // uint32 total_requests = 3;
  void clear_total_requests() ;
  ::uint32_t total_requests() const;
  void set_total_requests(::uint32_t value);

  private:
  ::uint32_t _internal_total_requests() const;
  void _internal_set_total_requests(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.treasury_management.GetFundingHistoryResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      67, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetFundingHistoryResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::seigr::treasury_management::FundingRequest > funding_requests_;
    ::google::protobuf::internal::ArenaStringPtr pool_id_;
    ::uint32_t total_requests_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_treasury_5fmanagement_2eproto;
};
// -------------------------------------------------------------------

class FundingHistory final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.treasury_management.FundingHistory) */ {
 public:
  inline FundingHistory() : FundingHistory(nullptr) {}
  ~FundingHistory() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FundingHistory* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FundingHistory));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FundingHistory(
      ::google::protobuf::internal::ConstantInitialized);

  inline FundingHistory(const FundingHistory& from) : FundingHistory(nullptr, from) {}
  inline FundingHistory(FundingHistory&& from) noexcept
      : FundingHistory(nullptr, std::move(from)) {}
  inline FundingHistory& operator=(const FundingHistory& from) {
    CopyFrom(from);
    return *this;
  }
  inline FundingHistory& operator=(FundingHistory&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FundingHistory& default_instance() {
    return *internal_default_instance();
  }
  static inline const FundingHistory* internal_default_instance() {
    return reinterpret_cast<const FundingHistory*>(
        &_FundingHistory_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(FundingHistory& a, FundingHistory& b) { a.Swap(&b); }
  inline void Swap(FundingHistory* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FundingHistory* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FundingHistory* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FundingHistory>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FundingHistory& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FundingHistory& from) { FundingHistory::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FundingHistory* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.treasury_management.FundingHistory"; }

 protected:
  explicit FundingHistory(::google::protobuf::Arena* arena);
  FundingHistory(::google::protobuf::Arena* arena, const FundingHistory& from);
  FundingHistory(::google::protobuf::Arena* arena, FundingHistory&& from) noexcept
      : FundingHistory(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFundingRequestsFieldNumber = 2,
    kPoolIdFieldNumber = 1,
    kTotalRequestsFieldNumber = 3,
  };
  // repeated .seigr.treasury_management.FundingRequest funding_requests = 2;
  int funding_requests_size() const;
  private:
  int _internal_funding_requests_size() const;

  public:
  void clear_funding_requests() ;
  ::seigr::treasury_management::FundingRequest* mutable_funding_requests(int index);
  ::google::protobuf::RepeatedPtrField<::seigr::treasury_management::FundingRequest>* mutable_funding_requests();

  private:
  const ::google::protobuf::RepeatedPtrField<::seigr::treasury_management::FundingRequest>& _internal_funding_requests() const;
  ::google::protobuf::RepeatedPtrField<::seigr::treasury_management::FundingRequest>* _internal_mutable_funding_requests();
  public:
  const ::seigr::treasury_management::FundingRequest& funding_requests(int index) const;
  ::seigr::treasury_management::FundingRequest* add_funding_requests();
  const ::google::protobuf::RepeatedPtrField<::seigr::treasury_management::FundingRequest>& funding_requests() const;
  // string pool_id = 1;
  void clear_pool_id() ;
  const std::string& pool_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pool_id(Arg_&& arg, Args_... args);
  std::string* mutable_pool_id();
  PROTOBUF_NODISCARD std::string* release_pool_id();
  void set_allocated_pool_id(std::string* value);

  private:
  const std::string& _internal_pool_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pool_id(
      const std::string& value);
  std::string* _internal_mutable_pool_id();

  public:
  // uint32 total_requests = 3;
  void clear_total_requests() ;
  ::uint32_t total_requests() const;
  void set_total_requests(::uint32_t value);

  private:
  ::uint32_t _internal_total_requests() const;
  void _internal_set_total_requests(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.treasury_management.FundingHistory)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      56, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FundingHistory& from_msg);
    ::google::protobuf::RepeatedPtrField< ::seigr::treasury_management::FundingRequest > funding_requests_;
    ::google::protobuf::internal::ArenaStringPtr pool_id_;
    ::uint32_t total_requests_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_treasury_5fmanagement_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// TreasuryPool

// string pool_id = 1;
inline void TreasuryPool::clear_pool_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pool_id_.ClearToEmpty();
}
inline const std::string& TreasuryPool::pool_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.treasury_management.TreasuryPool.pool_id)
  return _internal_pool_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TreasuryPool::set_pool_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pool_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.treasury_management.TreasuryPool.pool_id)
}
inline std::string* TreasuryPool::mutable_pool_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pool_id();
  // @@protoc_insertion_point(field_mutable:seigr.treasury_management.TreasuryPool.pool_id)
  return _s;
}
inline const std::string& TreasuryPool::_internal_pool_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pool_id_.Get();
}
inline void TreasuryPool::_internal_set_pool_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pool_id_.Set(value, GetArena());
}
inline std::string* TreasuryPool::_internal_mutable_pool_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pool_id_.Mutable( GetArena());
}
inline std::string* TreasuryPool::release_pool_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.treasury_management.TreasuryPool.pool_id)
  return _impl_.pool_id_.Release();
}
inline void TreasuryPool::set_allocated_pool_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pool_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.pool_id_.IsDefault()) {
    _impl_.pool_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.treasury_management.TreasuryPool.pool_id)
}

// string purpose = 2;
inline void TreasuryPool::clear_purpose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.purpose_.ClearToEmpty();
}
inline const std::string& TreasuryPool::purpose() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.treasury_management.TreasuryPool.purpose)
  return _internal_purpose();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TreasuryPool::set_purpose(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.purpose_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.treasury_management.TreasuryPool.purpose)
}
inline std::string* TreasuryPool::mutable_purpose() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_purpose();
  // @@protoc_insertion_point(field_mutable:seigr.treasury_management.TreasuryPool.purpose)
  return _s;
}
inline const std::string& TreasuryPool::_internal_purpose() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.purpose_.Get();
}
inline void TreasuryPool::_internal_set_purpose(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.purpose_.Set(value, GetArena());
}
inline std::string* TreasuryPool::_internal_mutable_purpose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.purpose_.Mutable( GetArena());
}
inline std::string* TreasuryPool::release_purpose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.treasury_management.TreasuryPool.purpose)
  return _impl_.purpose_.Release();
}
inline void TreasuryPool::set_allocated_purpose(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.purpose_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.purpose_.IsDefault()) {
    _impl_.purpose_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.treasury_management.TreasuryPool.purpose)
}

// uint64 balance = 3;
inline void TreasuryPool::clear_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.balance_ = ::uint64_t{0u};
}
inline ::uint64_t TreasuryPool::balance() const {
  // @@protoc_insertion_point(field_get:seigr.treasury_management.TreasuryPool.balance)
  return _internal_balance();
}
inline void TreasuryPool::set_balance(::uint64_t value) {
  _internal_set_balance(value);
  // @@protoc_insertion_point(field_set:seigr.treasury_management.TreasuryPool.balance)
}
inline ::uint64_t TreasuryPool::_internal_balance() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.balance_;
}
inline void TreasuryPool::_internal_set_balance(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.balance_ = value;
}

// .seigr.treasury_management.DistributionPolicy distribution_policy = 4;
inline void TreasuryPool::clear_distribution_policy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.distribution_policy_ = 0;
}
inline ::seigr::treasury_management::DistributionPolicy TreasuryPool::distribution_policy() const {
  // @@protoc_insertion_point(field_get:seigr.treasury_management.TreasuryPool.distribution_policy)
  return _internal_distribution_policy();
}
inline void TreasuryPool::set_distribution_policy(::seigr::treasury_management::DistributionPolicy value) {
  _internal_set_distribution_policy(value);
  // @@protoc_insertion_point(field_set:seigr.treasury_management.TreasuryPool.distribution_policy)
}
inline ::seigr::treasury_management::DistributionPolicy TreasuryPool::_internal_distribution_policy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::treasury_management::DistributionPolicy>(_impl_.distribution_policy_);
}
inline void TreasuryPool::_internal_set_distribution_policy(::seigr::treasury_management::DistributionPolicy value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.distribution_policy_ = value;
}

// string created_at = 5;
inline void TreasuryPool::clear_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.ClearToEmpty();
}
inline const std::string& TreasuryPool::created_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.treasury_management.TreasuryPool.created_at)
  return _internal_created_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TreasuryPool::set_created_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.treasury_management.TreasuryPool.created_at)
}
inline std::string* TreasuryPool::mutable_created_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_created_at();
  // @@protoc_insertion_point(field_mutable:seigr.treasury_management.TreasuryPool.created_at)
  return _s;
}
inline const std::string& TreasuryPool::_internal_created_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_at_.Get();
}
inline void TreasuryPool::_internal_set_created_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.Set(value, GetArena());
}
inline std::string* TreasuryPool::_internal_mutable_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.created_at_.Mutable( GetArena());
}
inline std::string* TreasuryPool::release_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.treasury_management.TreasuryPool.created_at)
  return _impl_.created_at_.Release();
}
inline void TreasuryPool::set_allocated_created_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.created_at_.IsDefault()) {
    _impl_.created_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.treasury_management.TreasuryPool.created_at)
}

// map<string, string> metadata = 6;
inline int TreasuryPool::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int TreasuryPool::metadata_size() const {
  return _internal_metadata_size();
}
inline void TreasuryPool::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& TreasuryPool::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& TreasuryPool::metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.treasury_management.TreasuryPool.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* TreasuryPool::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* TreasuryPool::mutable_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.treasury_management.TreasuryPool.metadata)
  return _internal_mutable_metadata();
}

// uint64 allocated_funds = 7;
inline void TreasuryPool::clear_allocated_funds() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.allocated_funds_ = ::uint64_t{0u};
}
inline ::uint64_t TreasuryPool::allocated_funds() const {
  // @@protoc_insertion_point(field_get:seigr.treasury_management.TreasuryPool.allocated_funds)
  return _internal_allocated_funds();
}
inline void TreasuryPool::set_allocated_funds(::uint64_t value) {
  _internal_set_allocated_funds(value);
  // @@protoc_insertion_point(field_set:seigr.treasury_management.TreasuryPool.allocated_funds)
}
inline ::uint64_t TreasuryPool::_internal_allocated_funds() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.allocated_funds_;
}
inline void TreasuryPool::_internal_set_allocated_funds(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.allocated_funds_ = value;
}

// uint64 reserved_funds = 8;
inline void TreasuryPool::clear_reserved_funds() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reserved_funds_ = ::uint64_t{0u};
}
inline ::uint64_t TreasuryPool::reserved_funds() const {
  // @@protoc_insertion_point(field_get:seigr.treasury_management.TreasuryPool.reserved_funds)
  return _internal_reserved_funds();
}
inline void TreasuryPool::set_reserved_funds(::uint64_t value) {
  _internal_set_reserved_funds(value);
  // @@protoc_insertion_point(field_set:seigr.treasury_management.TreasuryPool.reserved_funds)
}
inline ::uint64_t TreasuryPool::_internal_reserved_funds() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reserved_funds_;
}
inline void TreasuryPool::_internal_set_reserved_funds(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reserved_funds_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// FundingRequest

// string request_id = 1;
inline void FundingRequest::clear_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_.ClearToEmpty();
}
inline const std::string& FundingRequest::request_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.treasury_management.FundingRequest.request_id)
  return _internal_request_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FundingRequest::set_request_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.treasury_management.FundingRequest.request_id)
}
inline std::string* FundingRequest::mutable_request_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_request_id();
  // @@protoc_insertion_point(field_mutable:seigr.treasury_management.FundingRequest.request_id)
  return _s;
}
inline const std::string& FundingRequest::_internal_request_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.request_id_.Get();
}
inline void FundingRequest::_internal_set_request_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_.Set(value, GetArena());
}
inline std::string* FundingRequest::_internal_mutable_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.request_id_.Mutable( GetArena());
}
inline std::string* FundingRequest::release_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.treasury_management.FundingRequest.request_id)
  return _impl_.request_id_.Release();
}
inline void FundingRequest::set_allocated_request_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.request_id_.IsDefault()) {
    _impl_.request_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.treasury_management.FundingRequest.request_id)
}

// string purpose = 2;
inline void FundingRequest::clear_purpose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.purpose_.ClearToEmpty();
}
inline const std::string& FundingRequest::purpose() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.treasury_management.FundingRequest.purpose)
  return _internal_purpose();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FundingRequest::set_purpose(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.purpose_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.treasury_management.FundingRequest.purpose)
}
inline std::string* FundingRequest::mutable_purpose() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_purpose();
  // @@protoc_insertion_point(field_mutable:seigr.treasury_management.FundingRequest.purpose)
  return _s;
}
inline const std::string& FundingRequest::_internal_purpose() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.purpose_.Get();
}
inline void FundingRequest::_internal_set_purpose(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.purpose_.Set(value, GetArena());
}
inline std::string* FundingRequest::_internal_mutable_purpose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.purpose_.Mutable( GetArena());
}
inline std::string* FundingRequest::release_purpose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.treasury_management.FundingRequest.purpose)
  return _impl_.purpose_.Release();
}
inline void FundingRequest::set_allocated_purpose(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.purpose_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.purpose_.IsDefault()) {
    _impl_.purpose_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.treasury_management.FundingRequest.purpose)
}

// uint64 requested_amount = 3;
inline void FundingRequest::clear_requested_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requested_amount_ = ::uint64_t{0u};
}
inline ::uint64_t FundingRequest::requested_amount() const {
  // @@protoc_insertion_point(field_get:seigr.treasury_management.FundingRequest.requested_amount)
  return _internal_requested_amount();
}
inline void FundingRequest::set_requested_amount(::uint64_t value) {
  _internal_set_requested_amount(value);
  // @@protoc_insertion_point(field_set:seigr.treasury_management.FundingRequest.requested_amount)
}
inline ::uint64_t FundingRequest::_internal_requested_amount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.requested_amount_;
}
inline void FundingRequest::_internal_set_requested_amount(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requested_amount_ = value;
}

// .seigr.treasury_management.FundingStatus funding_status = 4;
inline void FundingRequest::clear_funding_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.funding_status_ = 0;
}
inline ::seigr::treasury_management::FundingStatus FundingRequest::funding_status() const {
  // @@protoc_insertion_point(field_get:seigr.treasury_management.FundingRequest.funding_status)
  return _internal_funding_status();
}
inline void FundingRequest::set_funding_status(::seigr::treasury_management::FundingStatus value) {
  _internal_set_funding_status(value);
  // @@protoc_insertion_point(field_set:seigr.treasury_management.FundingRequest.funding_status)
}
inline ::seigr::treasury_management::FundingStatus FundingRequest::_internal_funding_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::treasury_management::FundingStatus>(_impl_.funding_status_);
}
inline void FundingRequest::_internal_set_funding_status(::seigr::treasury_management::FundingStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.funding_status_ = value;
}

// repeated .seigr.voting.VotingLayer voting_layers = 5;
inline int FundingRequest::_internal_voting_layers_size() const {
  return _internal_voting_layers().size();
}
inline int FundingRequest::voting_layers_size() const {
  return _internal_voting_layers_size();
}
inline ::seigr::voting::VotingLayer* FundingRequest::mutable_voting_layers(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.treasury_management.FundingRequest.voting_layers)
  return _internal_mutable_voting_layers()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seigr::voting::VotingLayer>* FundingRequest::mutable_voting_layers()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.treasury_management.FundingRequest.voting_layers)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_voting_layers();
}
inline const ::seigr::voting::VotingLayer& FundingRequest::voting_layers(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.treasury_management.FundingRequest.voting_layers)
  return _internal_voting_layers().Get(index);
}
inline ::seigr::voting::VotingLayer* FundingRequest::add_voting_layers() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seigr::voting::VotingLayer* _add = _internal_mutable_voting_layers()->Add();
  // @@protoc_insertion_point(field_add:seigr.treasury_management.FundingRequest.voting_layers)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seigr::voting::VotingLayer>& FundingRequest::voting_layers() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.treasury_management.FundingRequest.voting_layers)
  return _internal_voting_layers();
}
inline const ::google::protobuf::RepeatedPtrField<::seigr::voting::VotingLayer>&
FundingRequest::_internal_voting_layers() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.voting_layers_;
}
inline ::google::protobuf::RepeatedPtrField<::seigr::voting::VotingLayer>*
FundingRequest::_internal_mutable_voting_layers() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.voting_layers_;
}

// string requester_id = 6;
inline void FundingRequest::clear_requester_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requester_id_.ClearToEmpty();
}
inline const std::string& FundingRequest::requester_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.treasury_management.FundingRequest.requester_id)
  return _internal_requester_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FundingRequest::set_requester_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requester_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.treasury_management.FundingRequest.requester_id)
}
inline std::string* FundingRequest::mutable_requester_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_requester_id();
  // @@protoc_insertion_point(field_mutable:seigr.treasury_management.FundingRequest.requester_id)
  return _s;
}
inline const std::string& FundingRequest::_internal_requester_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.requester_id_.Get();
}
inline void FundingRequest::_internal_set_requester_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requester_id_.Set(value, GetArena());
}
inline std::string* FundingRequest::_internal_mutable_requester_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.requester_id_.Mutable( GetArena());
}
inline std::string* FundingRequest::release_requester_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.treasury_management.FundingRequest.requester_id)
  return _impl_.requester_id_.Release();
}
inline void FundingRequest::set_allocated_requester_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requester_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.requester_id_.IsDefault()) {
    _impl_.requester_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.treasury_management.FundingRequest.requester_id)
}

// string timestamp = 7;
inline void FundingRequest::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.ClearToEmpty();
}
inline const std::string& FundingRequest::timestamp() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.treasury_management.FundingRequest.timestamp)
  return _internal_timestamp();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FundingRequest::set_timestamp(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.treasury_management.FundingRequest.timestamp)
}
inline std::string* FundingRequest::mutable_timestamp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_timestamp();
  // @@protoc_insertion_point(field_mutable:seigr.treasury_management.FundingRequest.timestamp)
  return _s;
}
inline const std::string& FundingRequest::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_.Get();
}
inline void FundingRequest::_internal_set_timestamp(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.Set(value, GetArena());
}
inline std::string* FundingRequest::_internal_mutable_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.timestamp_.Mutable( GetArena());
}
inline std::string* FundingRequest::release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.treasury_management.FundingRequest.timestamp)
  return _impl_.timestamp_.Release();
}
inline void FundingRequest::set_allocated_timestamp(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.timestamp_.IsDefault()) {
    _impl_.timestamp_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.treasury_management.FundingRequest.timestamp)
}

// string last_updated = 8;
inline void FundingRequest::clear_last_updated() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_updated_.ClearToEmpty();
}
inline const std::string& FundingRequest::last_updated() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.treasury_management.FundingRequest.last_updated)
  return _internal_last_updated();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FundingRequest::set_last_updated(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_updated_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.treasury_management.FundingRequest.last_updated)
}
inline std::string* FundingRequest::mutable_last_updated() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_last_updated();
  // @@protoc_insertion_point(field_mutable:seigr.treasury_management.FundingRequest.last_updated)
  return _s;
}
inline const std::string& FundingRequest::_internal_last_updated() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_updated_.Get();
}
inline void FundingRequest::_internal_set_last_updated(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_updated_.Set(value, GetArena());
}
inline std::string* FundingRequest::_internal_mutable_last_updated() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.last_updated_.Mutable( GetArena());
}
inline std::string* FundingRequest::release_last_updated() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.treasury_management.FundingRequest.last_updated)
  return _impl_.last_updated_.Release();
}
inline void FundingRequest::set_allocated_last_updated(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_updated_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.last_updated_.IsDefault()) {
    _impl_.last_updated_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.treasury_management.FundingRequest.last_updated)
}

// map<string, string> metadata = 9;
inline int FundingRequest::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int FundingRequest::metadata_size() const {
  return _internal_metadata_size();
}
inline void FundingRequest::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& FundingRequest::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& FundingRequest::metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.treasury_management.FundingRequest.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* FundingRequest::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* FundingRequest::mutable_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.treasury_management.FundingRequest.metadata)
  return _internal_mutable_metadata();
}

// uint64 approved_amount = 10;
inline void FundingRequest::clear_approved_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.approved_amount_ = ::uint64_t{0u};
}
inline ::uint64_t FundingRequest::approved_amount() const {
  // @@protoc_insertion_point(field_get:seigr.treasury_management.FundingRequest.approved_amount)
  return _internal_approved_amount();
}
inline void FundingRequest::set_approved_amount(::uint64_t value) {
  _internal_set_approved_amount(value);
  // @@protoc_insertion_point(field_set:seigr.treasury_management.FundingRequest.approved_amount)
}
inline ::uint64_t FundingRequest::_internal_approved_amount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.approved_amount_;
}
inline void FundingRequest::_internal_set_approved_amount(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.approved_amount_ = value;
}

// string approval_timestamp = 11;
inline void FundingRequest::clear_approval_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.approval_timestamp_.ClearToEmpty();
}
inline const std::string& FundingRequest::approval_timestamp() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.treasury_management.FundingRequest.approval_timestamp)
  return _internal_approval_timestamp();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FundingRequest::set_approval_timestamp(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.approval_timestamp_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.treasury_management.FundingRequest.approval_timestamp)
}
inline std::string* FundingRequest::mutable_approval_timestamp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_approval_timestamp();
  // @@protoc_insertion_point(field_mutable:seigr.treasury_management.FundingRequest.approval_timestamp)
  return _s;
}
inline const std::string& FundingRequest::_internal_approval_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.approval_timestamp_.Get();
}
inline void FundingRequest::_internal_set_approval_timestamp(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.approval_timestamp_.Set(value, GetArena());
}
inline std::string* FundingRequest::_internal_mutable_approval_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.approval_timestamp_.Mutable( GetArena());
}
inline std::string* FundingRequest::release_approval_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.treasury_management.FundingRequest.approval_timestamp)
  return _impl_.approval_timestamp_.Release();
}
inline void FundingRequest::set_allocated_approval_timestamp(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.approval_timestamp_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.approval_timestamp_.IsDefault()) {
    _impl_.approval_timestamp_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.treasury_management.FundingRequest.approval_timestamp)
}

// -------------------------------------------------------------------

// FundingHistory

// string pool_id = 1;
inline void FundingHistory::clear_pool_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pool_id_.ClearToEmpty();
}
inline const std::string& FundingHistory::pool_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.treasury_management.FundingHistory.pool_id)
  return _internal_pool_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FundingHistory::set_pool_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pool_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.treasury_management.FundingHistory.pool_id)
}
inline std::string* FundingHistory::mutable_pool_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pool_id();
  // @@protoc_insertion_point(field_mutable:seigr.treasury_management.FundingHistory.pool_id)
  return _s;
}
inline const std::string& FundingHistory::_internal_pool_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pool_id_.Get();
}
inline void FundingHistory::_internal_set_pool_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pool_id_.Set(value, GetArena());
}
inline std::string* FundingHistory::_internal_mutable_pool_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pool_id_.Mutable( GetArena());
}
inline std::string* FundingHistory::release_pool_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.treasury_management.FundingHistory.pool_id)
  return _impl_.pool_id_.Release();
}
inline void FundingHistory::set_allocated_pool_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pool_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.pool_id_.IsDefault()) {
    _impl_.pool_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.treasury_management.FundingHistory.pool_id)
}

// repeated .seigr.treasury_management.FundingRequest funding_requests = 2;
inline int FundingHistory::_internal_funding_requests_size() const {
  return _internal_funding_requests().size();
}
inline int FundingHistory::funding_requests_size() const {
  return _internal_funding_requests_size();
}
inline void FundingHistory::clear_funding_requests() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.funding_requests_.Clear();
}
inline ::seigr::treasury_management::FundingRequest* FundingHistory::mutable_funding_requests(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.treasury_management.FundingHistory.funding_requests)
  return _internal_mutable_funding_requests()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seigr::treasury_management::FundingRequest>* FundingHistory::mutable_funding_requests()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.treasury_management.FundingHistory.funding_requests)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_funding_requests();
}
inline const ::seigr::treasury_management::FundingRequest& FundingHistory::funding_requests(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.treasury_management.FundingHistory.funding_requests)
  return _internal_funding_requests().Get(index);
}
inline ::seigr::treasury_management::FundingRequest* FundingHistory::add_funding_requests() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seigr::treasury_management::FundingRequest* _add = _internal_mutable_funding_requests()->Add();
  // @@protoc_insertion_point(field_add:seigr.treasury_management.FundingHistory.funding_requests)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seigr::treasury_management::FundingRequest>& FundingHistory::funding_requests() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.treasury_management.FundingHistory.funding_requests)
  return _internal_funding_requests();
}
inline const ::google::protobuf::RepeatedPtrField<::seigr::treasury_management::FundingRequest>&
FundingHistory::_internal_funding_requests() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.funding_requests_;
}
inline ::google::protobuf::RepeatedPtrField<::seigr::treasury_management::FundingRequest>*
FundingHistory::_internal_mutable_funding_requests() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.funding_requests_;
}

// uint32 total_requests = 3;
inline void FundingHistory::clear_total_requests() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_requests_ = 0u;
}
inline ::uint32_t FundingHistory::total_requests() const {
  // @@protoc_insertion_point(field_get:seigr.treasury_management.FundingHistory.total_requests)
  return _internal_total_requests();
}
inline void FundingHistory::set_total_requests(::uint32_t value) {
  _internal_set_total_requests(value);
  // @@protoc_insertion_point(field_set:seigr.treasury_management.FundingHistory.total_requests)
}
inline ::uint32_t FundingHistory::_internal_total_requests() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_requests_;
}
inline void FundingHistory::_internal_set_total_requests(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_requests_ = value;
}

// -------------------------------------------------------------------

// FundingSubmissionRequest

// string purpose = 1;
inline void FundingSubmissionRequest::clear_purpose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.purpose_.ClearToEmpty();
}
inline const std::string& FundingSubmissionRequest::purpose() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.treasury_management.FundingSubmissionRequest.purpose)
  return _internal_purpose();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FundingSubmissionRequest::set_purpose(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.purpose_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.treasury_management.FundingSubmissionRequest.purpose)
}
inline std::string* FundingSubmissionRequest::mutable_purpose() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_purpose();
  // @@protoc_insertion_point(field_mutable:seigr.treasury_management.FundingSubmissionRequest.purpose)
  return _s;
}
inline const std::string& FundingSubmissionRequest::_internal_purpose() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.purpose_.Get();
}
inline void FundingSubmissionRequest::_internal_set_purpose(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.purpose_.Set(value, GetArena());
}
inline std::string* FundingSubmissionRequest::_internal_mutable_purpose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.purpose_.Mutable( GetArena());
}
inline std::string* FundingSubmissionRequest::release_purpose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.treasury_management.FundingSubmissionRequest.purpose)
  return _impl_.purpose_.Release();
}
inline void FundingSubmissionRequest::set_allocated_purpose(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.purpose_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.purpose_.IsDefault()) {
    _impl_.purpose_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.treasury_management.FundingSubmissionRequest.purpose)
}

// uint64 requested_amount = 2;
inline void FundingSubmissionRequest::clear_requested_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requested_amount_ = ::uint64_t{0u};
}
inline ::uint64_t FundingSubmissionRequest::requested_amount() const {
  // @@protoc_insertion_point(field_get:seigr.treasury_management.FundingSubmissionRequest.requested_amount)
  return _internal_requested_amount();
}
inline void FundingSubmissionRequest::set_requested_amount(::uint64_t value) {
  _internal_set_requested_amount(value);
  // @@protoc_insertion_point(field_set:seigr.treasury_management.FundingSubmissionRequest.requested_amount)
}
inline ::uint64_t FundingSubmissionRequest::_internal_requested_amount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.requested_amount_;
}
inline void FundingSubmissionRequest::_internal_set_requested_amount(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requested_amount_ = value;
}

// string requester_id = 3;
inline void FundingSubmissionRequest::clear_requester_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requester_id_.ClearToEmpty();
}
inline const std::string& FundingSubmissionRequest::requester_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.treasury_management.FundingSubmissionRequest.requester_id)
  return _internal_requester_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FundingSubmissionRequest::set_requester_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requester_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.treasury_management.FundingSubmissionRequest.requester_id)
}
inline std::string* FundingSubmissionRequest::mutable_requester_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_requester_id();
  // @@protoc_insertion_point(field_mutable:seigr.treasury_management.FundingSubmissionRequest.requester_id)
  return _s;
}
inline const std::string& FundingSubmissionRequest::_internal_requester_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.requester_id_.Get();
}
inline void FundingSubmissionRequest::_internal_set_requester_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requester_id_.Set(value, GetArena());
}
inline std::string* FundingSubmissionRequest::_internal_mutable_requester_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.requester_id_.Mutable( GetArena());
}
inline std::string* FundingSubmissionRequest::release_requester_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.treasury_management.FundingSubmissionRequest.requester_id)
  return _impl_.requester_id_.Release();
}
inline void FundingSubmissionRequest::set_allocated_requester_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requester_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.requester_id_.IsDefault()) {
    _impl_.requester_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.treasury_management.FundingSubmissionRequest.requester_id)
}

// -------------------------------------------------------------------

// FundingSubmissionResponse

// string request_id = 1;
inline void FundingSubmissionResponse::clear_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_.ClearToEmpty();
}
inline const std::string& FundingSubmissionResponse::request_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.treasury_management.FundingSubmissionResponse.request_id)
  return _internal_request_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FundingSubmissionResponse::set_request_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.treasury_management.FundingSubmissionResponse.request_id)
}
inline std::string* FundingSubmissionResponse::mutable_request_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_request_id();
  // @@protoc_insertion_point(field_mutable:seigr.treasury_management.FundingSubmissionResponse.request_id)
  return _s;
}
inline const std::string& FundingSubmissionResponse::_internal_request_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.request_id_.Get();
}
inline void FundingSubmissionResponse::_internal_set_request_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_.Set(value, GetArena());
}
inline std::string* FundingSubmissionResponse::_internal_mutable_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.request_id_.Mutable( GetArena());
}
inline std::string* FundingSubmissionResponse::release_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.treasury_management.FundingSubmissionResponse.request_id)
  return _impl_.request_id_.Release();
}
inline void FundingSubmissionResponse::set_allocated_request_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.request_id_.IsDefault()) {
    _impl_.request_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.treasury_management.FundingSubmissionResponse.request_id)
}

// bool success = 2;
inline void FundingSubmissionResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool FundingSubmissionResponse::success() const {
  // @@protoc_insertion_point(field_get:seigr.treasury_management.FundingSubmissionResponse.success)
  return _internal_success();
}
inline void FundingSubmissionResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:seigr.treasury_management.FundingSubmissionResponse.success)
}
inline bool FundingSubmissionResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void FundingSubmissionResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// string message = 3;
inline void FundingSubmissionResponse::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& FundingSubmissionResponse::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.treasury_management.FundingSubmissionResponse.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FundingSubmissionResponse::set_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.treasury_management.FundingSubmissionResponse.message)
}
inline std::string* FundingSubmissionResponse::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:seigr.treasury_management.FundingSubmissionResponse.message)
  return _s;
}
inline const std::string& FundingSubmissionResponse::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void FundingSubmissionResponse::_internal_set_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(value, GetArena());
}
inline std::string* FundingSubmissionResponse::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* FundingSubmissionResponse::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.treasury_management.FundingSubmissionResponse.message)
  return _impl_.message_.Release();
}
inline void FundingSubmissionResponse::set_allocated_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.treasury_management.FundingSubmissionResponse.message)
}

// -------------------------------------------------------------------

// FundingApprovalRequest

// string request_id = 1;
inline void FundingApprovalRequest::clear_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_.ClearToEmpty();
}
inline const std::string& FundingApprovalRequest::request_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.treasury_management.FundingApprovalRequest.request_id)
  return _internal_request_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FundingApprovalRequest::set_request_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.treasury_management.FundingApprovalRequest.request_id)
}
inline std::string* FundingApprovalRequest::mutable_request_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_request_id();
  // @@protoc_insertion_point(field_mutable:seigr.treasury_management.FundingApprovalRequest.request_id)
  return _s;
}
inline const std::string& FundingApprovalRequest::_internal_request_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.request_id_.Get();
}
inline void FundingApprovalRequest::_internal_set_request_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_.Set(value, GetArena());
}
inline std::string* FundingApprovalRequest::_internal_mutable_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.request_id_.Mutable( GetArena());
}
inline std::string* FundingApprovalRequest::release_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.treasury_management.FundingApprovalRequest.request_id)
  return _impl_.request_id_.Release();
}
inline void FundingApprovalRequest::set_allocated_request_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.request_id_.IsDefault()) {
    _impl_.request_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.treasury_management.FundingApprovalRequest.request_id)
}

// string voter_id = 2;
inline void FundingApprovalRequest::clear_voter_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.voter_id_.ClearToEmpty();
}
inline const std::string& FundingApprovalRequest::voter_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.treasury_management.FundingApprovalRequest.voter_id)
  return _internal_voter_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FundingApprovalRequest::set_voter_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.voter_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.treasury_management.FundingApprovalRequest.voter_id)
}
inline std::string* FundingApprovalRequest::mutable_voter_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_voter_id();
  // @@protoc_insertion_point(field_mutable:seigr.treasury_management.FundingApprovalRequest.voter_id)
  return _s;
}
inline const std::string& FundingApprovalRequest::_internal_voter_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.voter_id_.Get();
}
inline void FundingApprovalRequest::_internal_set_voter_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.voter_id_.Set(value, GetArena());
}
inline std::string* FundingApprovalRequest::_internal_mutable_voter_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.voter_id_.Mutable( GetArena());
}
inline std::string* FundingApprovalRequest::release_voter_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.treasury_management.FundingApprovalRequest.voter_id)
  return _impl_.voter_id_.Release();
}
inline void FundingApprovalRequest::set_allocated_voter_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.voter_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.voter_id_.IsDefault()) {
    _impl_.voter_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.treasury_management.FundingApprovalRequest.voter_id)
}

// .seigr.voting.VoteChoice choice = 3;
inline void FundingApprovalRequest::clear_choice() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.choice_ = 0;
}
inline ::seigr::voting::VoteChoice FundingApprovalRequest::choice() const {
  // @@protoc_insertion_point(field_get:seigr.treasury_management.FundingApprovalRequest.choice)
  return _internal_choice();
}
inline void FundingApprovalRequest::set_choice(::seigr::voting::VoteChoice value) {
  _internal_set_choice(value);
  // @@protoc_insertion_point(field_set:seigr.treasury_management.FundingApprovalRequest.choice)
}
inline ::seigr::voting::VoteChoice FundingApprovalRequest::_internal_choice() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::voting::VoteChoice>(_impl_.choice_);
}
inline void FundingApprovalRequest::_internal_set_choice(::seigr::voting::VoteChoice value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.choice_ = value;
}

// -------------------------------------------------------------------

// FundingApprovalResponse

// bool success = 1;
inline void FundingApprovalResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool FundingApprovalResponse::success() const {
  // @@protoc_insertion_point(field_get:seigr.treasury_management.FundingApprovalResponse.success)
  return _internal_success();
}
inline void FundingApprovalResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:seigr.treasury_management.FundingApprovalResponse.success)
}
inline bool FundingApprovalResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void FundingApprovalResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// string message = 2;
inline void FundingApprovalResponse::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& FundingApprovalResponse::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.treasury_management.FundingApprovalResponse.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FundingApprovalResponse::set_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.treasury_management.FundingApprovalResponse.message)
}
inline std::string* FundingApprovalResponse::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:seigr.treasury_management.FundingApprovalResponse.message)
  return _s;
}
inline const std::string& FundingApprovalResponse::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void FundingApprovalResponse::_internal_set_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(value, GetArena());
}
inline std::string* FundingApprovalResponse::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* FundingApprovalResponse::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.treasury_management.FundingApprovalResponse.message)
  return _impl_.message_.Release();
}
inline void FundingApprovalResponse::set_allocated_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.treasury_management.FundingApprovalResponse.message)
}

// -------------------------------------------------------------------

// TransferFundsRequest

// string pool_id = 1;
inline void TransferFundsRequest::clear_pool_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pool_id_.ClearToEmpty();
}
inline const std::string& TransferFundsRequest::pool_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.treasury_management.TransferFundsRequest.pool_id)
  return _internal_pool_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TransferFundsRequest::set_pool_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pool_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.treasury_management.TransferFundsRequest.pool_id)
}
inline std::string* TransferFundsRequest::mutable_pool_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pool_id();
  // @@protoc_insertion_point(field_mutable:seigr.treasury_management.TransferFundsRequest.pool_id)
  return _s;
}
inline const std::string& TransferFundsRequest::_internal_pool_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pool_id_.Get();
}
inline void TransferFundsRequest::_internal_set_pool_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pool_id_.Set(value, GetArena());
}
inline std::string* TransferFundsRequest::_internal_mutable_pool_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pool_id_.Mutable( GetArena());
}
inline std::string* TransferFundsRequest::release_pool_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.treasury_management.TransferFundsRequest.pool_id)
  return _impl_.pool_id_.Release();
}
inline void TransferFundsRequest::set_allocated_pool_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pool_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.pool_id_.IsDefault()) {
    _impl_.pool_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.treasury_management.TransferFundsRequest.pool_id)
}

// uint64 amount = 2;
inline void TransferFundsRequest::clear_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amount_ = ::uint64_t{0u};
}
inline ::uint64_t TransferFundsRequest::amount() const {
  // @@protoc_insertion_point(field_get:seigr.treasury_management.TransferFundsRequest.amount)
  return _internal_amount();
}
inline void TransferFundsRequest::set_amount(::uint64_t value) {
  _internal_set_amount(value);
  // @@protoc_insertion_point(field_set:seigr.treasury_management.TransferFundsRequest.amount)
}
inline ::uint64_t TransferFundsRequest::_internal_amount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.amount_;
}
inline void TransferFundsRequest::_internal_set_amount(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amount_ = value;
}

// string recipient_address = 3;
inline void TransferFundsRequest::clear_recipient_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recipient_address_.ClearToEmpty();
}
inline const std::string& TransferFundsRequest::recipient_address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.treasury_management.TransferFundsRequest.recipient_address)
  return _internal_recipient_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TransferFundsRequest::set_recipient_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recipient_address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.treasury_management.TransferFundsRequest.recipient_address)
}
inline std::string* TransferFundsRequest::mutable_recipient_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_recipient_address();
  // @@protoc_insertion_point(field_mutable:seigr.treasury_management.TransferFundsRequest.recipient_address)
  return _s;
}
inline const std::string& TransferFundsRequest::_internal_recipient_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.recipient_address_.Get();
}
inline void TransferFundsRequest::_internal_set_recipient_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recipient_address_.Set(value, GetArena());
}
inline std::string* TransferFundsRequest::_internal_mutable_recipient_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.recipient_address_.Mutable( GetArena());
}
inline std::string* TransferFundsRequest::release_recipient_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.treasury_management.TransferFundsRequest.recipient_address)
  return _impl_.recipient_address_.Release();
}
inline void TransferFundsRequest::set_allocated_recipient_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recipient_address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.recipient_address_.IsDefault()) {
    _impl_.recipient_address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.treasury_management.TransferFundsRequest.recipient_address)
}

// string transfer_reason = 4;
inline void TransferFundsRequest::clear_transfer_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transfer_reason_.ClearToEmpty();
}
inline const std::string& TransferFundsRequest::transfer_reason() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.treasury_management.TransferFundsRequest.transfer_reason)
  return _internal_transfer_reason();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TransferFundsRequest::set_transfer_reason(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transfer_reason_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.treasury_management.TransferFundsRequest.transfer_reason)
}
inline std::string* TransferFundsRequest::mutable_transfer_reason() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_transfer_reason();
  // @@protoc_insertion_point(field_mutable:seigr.treasury_management.TransferFundsRequest.transfer_reason)
  return _s;
}
inline const std::string& TransferFundsRequest::_internal_transfer_reason() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.transfer_reason_.Get();
}
inline void TransferFundsRequest::_internal_set_transfer_reason(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transfer_reason_.Set(value, GetArena());
}
inline std::string* TransferFundsRequest::_internal_mutable_transfer_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.transfer_reason_.Mutable( GetArena());
}
inline std::string* TransferFundsRequest::release_transfer_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.treasury_management.TransferFundsRequest.transfer_reason)
  return _impl_.transfer_reason_.Release();
}
inline void TransferFundsRequest::set_allocated_transfer_reason(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transfer_reason_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.transfer_reason_.IsDefault()) {
    _impl_.transfer_reason_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.treasury_management.TransferFundsRequest.transfer_reason)
}

// -------------------------------------------------------------------

// TransferFundsResponse

// bool success = 1;
inline void TransferFundsResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool TransferFundsResponse::success() const {
  // @@protoc_insertion_point(field_get:seigr.treasury_management.TransferFundsResponse.success)
  return _internal_success();
}
inline void TransferFundsResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:seigr.treasury_management.TransferFundsResponse.success)
}
inline bool TransferFundsResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void TransferFundsResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// string message = 2;
inline void TransferFundsResponse::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& TransferFundsResponse::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.treasury_management.TransferFundsResponse.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TransferFundsResponse::set_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.treasury_management.TransferFundsResponse.message)
}
inline std::string* TransferFundsResponse::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:seigr.treasury_management.TransferFundsResponse.message)
  return _s;
}
inline const std::string& TransferFundsResponse::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void TransferFundsResponse::_internal_set_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(value, GetArena());
}
inline std::string* TransferFundsResponse::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* TransferFundsResponse::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.treasury_management.TransferFundsResponse.message)
  return _impl_.message_.Release();
}
inline void TransferFundsResponse::set_allocated_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.treasury_management.TransferFundsResponse.message)
}

// -------------------------------------------------------------------

// GetFundingHistoryRequest

// string pool_id = 1;
inline void GetFundingHistoryRequest::clear_pool_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pool_id_.ClearToEmpty();
}
inline const std::string& GetFundingHistoryRequest::pool_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.treasury_management.GetFundingHistoryRequest.pool_id)
  return _internal_pool_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetFundingHistoryRequest::set_pool_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pool_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.treasury_management.GetFundingHistoryRequest.pool_id)
}
inline std::string* GetFundingHistoryRequest::mutable_pool_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pool_id();
  // @@protoc_insertion_point(field_mutable:seigr.treasury_management.GetFundingHistoryRequest.pool_id)
  return _s;
}
inline const std::string& GetFundingHistoryRequest::_internal_pool_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pool_id_.Get();
}
inline void GetFundingHistoryRequest::_internal_set_pool_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pool_id_.Set(value, GetArena());
}
inline std::string* GetFundingHistoryRequest::_internal_mutable_pool_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pool_id_.Mutable( GetArena());
}
inline std::string* GetFundingHistoryRequest::release_pool_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.treasury_management.GetFundingHistoryRequest.pool_id)
  return _impl_.pool_id_.Release();
}
inline void GetFundingHistoryRequest::set_allocated_pool_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pool_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.pool_id_.IsDefault()) {
    _impl_.pool_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.treasury_management.GetFundingHistoryRequest.pool_id)
}

// uint32 limit = 2;
inline void GetFundingHistoryRequest::clear_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limit_ = 0u;
}
inline ::uint32_t GetFundingHistoryRequest::limit() const {
  // @@protoc_insertion_point(field_get:seigr.treasury_management.GetFundingHistoryRequest.limit)
  return _internal_limit();
}
inline void GetFundingHistoryRequest::set_limit(::uint32_t value) {
  _internal_set_limit(value);
  // @@protoc_insertion_point(field_set:seigr.treasury_management.GetFundingHistoryRequest.limit)
}
inline ::uint32_t GetFundingHistoryRequest::_internal_limit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.limit_;
}
inline void GetFundingHistoryRequest::_internal_set_limit(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limit_ = value;
}

// bool include_denied = 3;
inline void GetFundingHistoryRequest::clear_include_denied() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_denied_ = false;
}
inline bool GetFundingHistoryRequest::include_denied() const {
  // @@protoc_insertion_point(field_get:seigr.treasury_management.GetFundingHistoryRequest.include_denied)
  return _internal_include_denied();
}
inline void GetFundingHistoryRequest::set_include_denied(bool value) {
  _internal_set_include_denied(value);
  // @@protoc_insertion_point(field_set:seigr.treasury_management.GetFundingHistoryRequest.include_denied)
}
inline bool GetFundingHistoryRequest::_internal_include_denied() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.include_denied_;
}
inline void GetFundingHistoryRequest::_internal_set_include_denied(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_denied_ = value;
}

// -------------------------------------------------------------------

// GetFundingHistoryResponse

// string pool_id = 1;
inline void GetFundingHistoryResponse::clear_pool_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pool_id_.ClearToEmpty();
}
inline const std::string& GetFundingHistoryResponse::pool_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.treasury_management.GetFundingHistoryResponse.pool_id)
  return _internal_pool_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetFundingHistoryResponse::set_pool_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pool_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.treasury_management.GetFundingHistoryResponse.pool_id)
}
inline std::string* GetFundingHistoryResponse::mutable_pool_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pool_id();
  // @@protoc_insertion_point(field_mutable:seigr.treasury_management.GetFundingHistoryResponse.pool_id)
  return _s;
}
inline const std::string& GetFundingHistoryResponse::_internal_pool_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pool_id_.Get();
}
inline void GetFundingHistoryResponse::_internal_set_pool_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pool_id_.Set(value, GetArena());
}
inline std::string* GetFundingHistoryResponse::_internal_mutable_pool_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pool_id_.Mutable( GetArena());
}
inline std::string* GetFundingHistoryResponse::release_pool_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.treasury_management.GetFundingHistoryResponse.pool_id)
  return _impl_.pool_id_.Release();
}
inline void GetFundingHistoryResponse::set_allocated_pool_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pool_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.pool_id_.IsDefault()) {
    _impl_.pool_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.treasury_management.GetFundingHistoryResponse.pool_id)
}

// repeated .seigr.treasury_management.FundingRequest funding_requests = 2;
inline int GetFundingHistoryResponse::_internal_funding_requests_size() const {
  return _internal_funding_requests().size();
}
inline int GetFundingHistoryResponse::funding_requests_size() const {
  return _internal_funding_requests_size();
}
inline void GetFundingHistoryResponse::clear_funding_requests() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.funding_requests_.Clear();
}
inline ::seigr::treasury_management::FundingRequest* GetFundingHistoryResponse::mutable_funding_requests(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.treasury_management.GetFundingHistoryResponse.funding_requests)
  return _internal_mutable_funding_requests()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seigr::treasury_management::FundingRequest>* GetFundingHistoryResponse::mutable_funding_requests()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.treasury_management.GetFundingHistoryResponse.funding_requests)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_funding_requests();
}
inline const ::seigr::treasury_management::FundingRequest& GetFundingHistoryResponse::funding_requests(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.treasury_management.GetFundingHistoryResponse.funding_requests)
  return _internal_funding_requests().Get(index);
}
inline ::seigr::treasury_management::FundingRequest* GetFundingHistoryResponse::add_funding_requests() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seigr::treasury_management::FundingRequest* _add = _internal_mutable_funding_requests()->Add();
  // @@protoc_insertion_point(field_add:seigr.treasury_management.GetFundingHistoryResponse.funding_requests)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seigr::treasury_management::FundingRequest>& GetFundingHistoryResponse::funding_requests() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.treasury_management.GetFundingHistoryResponse.funding_requests)
  return _internal_funding_requests();
}
inline const ::google::protobuf::RepeatedPtrField<::seigr::treasury_management::FundingRequest>&
GetFundingHistoryResponse::_internal_funding_requests() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.funding_requests_;
}
inline ::google::protobuf::RepeatedPtrField<::seigr::treasury_management::FundingRequest>*
GetFundingHistoryResponse::_internal_mutable_funding_requests() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.funding_requests_;
}

// uint32 total_requests = 3;
inline void GetFundingHistoryResponse::clear_total_requests() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_requests_ = 0u;
}
inline ::uint32_t GetFundingHistoryResponse::total_requests() const {
  // @@protoc_insertion_point(field_get:seigr.treasury_management.GetFundingHistoryResponse.total_requests)
  return _internal_total_requests();
}
inline void GetFundingHistoryResponse::set_total_requests(::uint32_t value) {
  _internal_set_total_requests(value);
  // @@protoc_insertion_point(field_set:seigr.treasury_management.GetFundingHistoryResponse.total_requests)
}
inline ::uint32_t GetFundingHistoryResponse::_internal_total_requests() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_requests_;
}
inline void GetFundingHistoryResponse::_internal_set_total_requests(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_requests_ = value;
}

// -------------------------------------------------------------------

// UpdateDistributionPolicyRequest

// string pool_id = 1;
inline void UpdateDistributionPolicyRequest::clear_pool_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pool_id_.ClearToEmpty();
}
inline const std::string& UpdateDistributionPolicyRequest::pool_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.treasury_management.UpdateDistributionPolicyRequest.pool_id)
  return _internal_pool_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpdateDistributionPolicyRequest::set_pool_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pool_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.treasury_management.UpdateDistributionPolicyRequest.pool_id)
}
inline std::string* UpdateDistributionPolicyRequest::mutable_pool_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pool_id();
  // @@protoc_insertion_point(field_mutable:seigr.treasury_management.UpdateDistributionPolicyRequest.pool_id)
  return _s;
}
inline const std::string& UpdateDistributionPolicyRequest::_internal_pool_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pool_id_.Get();
}
inline void UpdateDistributionPolicyRequest::_internal_set_pool_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pool_id_.Set(value, GetArena());
}
inline std::string* UpdateDistributionPolicyRequest::_internal_mutable_pool_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pool_id_.Mutable( GetArena());
}
inline std::string* UpdateDistributionPolicyRequest::release_pool_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.treasury_management.UpdateDistributionPolicyRequest.pool_id)
  return _impl_.pool_id_.Release();
}
inline void UpdateDistributionPolicyRequest::set_allocated_pool_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pool_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.pool_id_.IsDefault()) {
    _impl_.pool_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.treasury_management.UpdateDistributionPolicyRequest.pool_id)
}

// .seigr.treasury_management.DistributionPolicy new_policy = 2;
inline void UpdateDistributionPolicyRequest::clear_new_policy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.new_policy_ = 0;
}
inline ::seigr::treasury_management::DistributionPolicy UpdateDistributionPolicyRequest::new_policy() const {
  // @@protoc_insertion_point(field_get:seigr.treasury_management.UpdateDistributionPolicyRequest.new_policy)
  return _internal_new_policy();
}
inline void UpdateDistributionPolicyRequest::set_new_policy(::seigr::treasury_management::DistributionPolicy value) {
  _internal_set_new_policy(value);
  // @@protoc_insertion_point(field_set:seigr.treasury_management.UpdateDistributionPolicyRequest.new_policy)
}
inline ::seigr::treasury_management::DistributionPolicy UpdateDistributionPolicyRequest::_internal_new_policy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::treasury_management::DistributionPolicy>(_impl_.new_policy_);
}
inline void UpdateDistributionPolicyRequest::_internal_set_new_policy(::seigr::treasury_management::DistributionPolicy value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.new_policy_ = value;
}

// string updated_by = 3;
inline void UpdateDistributionPolicyRequest::clear_updated_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_by_.ClearToEmpty();
}
inline const std::string& UpdateDistributionPolicyRequest::updated_by() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.treasury_management.UpdateDistributionPolicyRequest.updated_by)
  return _internal_updated_by();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpdateDistributionPolicyRequest::set_updated_by(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_by_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.treasury_management.UpdateDistributionPolicyRequest.updated_by)
}
inline std::string* UpdateDistributionPolicyRequest::mutable_updated_by() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_updated_by();
  // @@protoc_insertion_point(field_mutable:seigr.treasury_management.UpdateDistributionPolicyRequest.updated_by)
  return _s;
}
inline const std::string& UpdateDistributionPolicyRequest::_internal_updated_by() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updated_by_.Get();
}
inline void UpdateDistributionPolicyRequest::_internal_set_updated_by(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_by_.Set(value, GetArena());
}
inline std::string* UpdateDistributionPolicyRequest::_internal_mutable_updated_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.updated_by_.Mutable( GetArena());
}
inline std::string* UpdateDistributionPolicyRequest::release_updated_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.treasury_management.UpdateDistributionPolicyRequest.updated_by)
  return _impl_.updated_by_.Release();
}
inline void UpdateDistributionPolicyRequest::set_allocated_updated_by(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_by_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.updated_by_.IsDefault()) {
    _impl_.updated_by_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.treasury_management.UpdateDistributionPolicyRequest.updated_by)
}

// -------------------------------------------------------------------

// UpdateDistributionPolicyResponse

// bool success = 1;
inline void UpdateDistributionPolicyResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool UpdateDistributionPolicyResponse::success() const {
  // @@protoc_insertion_point(field_get:seigr.treasury_management.UpdateDistributionPolicyResponse.success)
  return _internal_success();
}
inline void UpdateDistributionPolicyResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:seigr.treasury_management.UpdateDistributionPolicyResponse.success)
}
inline bool UpdateDistributionPolicyResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void UpdateDistributionPolicyResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// string message = 2;
inline void UpdateDistributionPolicyResponse::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& UpdateDistributionPolicyResponse::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.treasury_management.UpdateDistributionPolicyResponse.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpdateDistributionPolicyResponse::set_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.treasury_management.UpdateDistributionPolicyResponse.message)
}
inline std::string* UpdateDistributionPolicyResponse::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:seigr.treasury_management.UpdateDistributionPolicyResponse.message)
  return _s;
}
inline const std::string& UpdateDistributionPolicyResponse::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void UpdateDistributionPolicyResponse::_internal_set_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(value, GetArena());
}
inline std::string* UpdateDistributionPolicyResponse::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* UpdateDistributionPolicyResponse::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.treasury_management.UpdateDistributionPolicyResponse.message)
  return _impl_.message_.Release();
}
inline void UpdateDistributionPolicyResponse::set_allocated_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.treasury_management.UpdateDistributionPolicyResponse.message)
}

// .seigr.treasury_management.DistributionPolicy applied_policy = 3;
inline void UpdateDistributionPolicyResponse::clear_applied_policy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.applied_policy_ = 0;
}
inline ::seigr::treasury_management::DistributionPolicy UpdateDistributionPolicyResponse::applied_policy() const {
  // @@protoc_insertion_point(field_get:seigr.treasury_management.UpdateDistributionPolicyResponse.applied_policy)
  return _internal_applied_policy();
}
inline void UpdateDistributionPolicyResponse::set_applied_policy(::seigr::treasury_management::DistributionPolicy value) {
  _internal_set_applied_policy(value);
  // @@protoc_insertion_point(field_set:seigr.treasury_management.UpdateDistributionPolicyResponse.applied_policy)
}
inline ::seigr::treasury_management::DistributionPolicy UpdateDistributionPolicyResponse::_internal_applied_policy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::treasury_management::DistributionPolicy>(_impl_.applied_policy_);
}
inline void UpdateDistributionPolicyResponse::_internal_set_applied_policy(::seigr::treasury_management::DistributionPolicy value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.applied_policy_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace treasury_management
}  // namespace seigr


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::seigr::treasury_management::DistributionPolicy> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::seigr::treasury_management::DistributionPolicy>() {
  return ::seigr::treasury_management::DistributionPolicy_descriptor();
}
template <>
struct is_proto_enum<::seigr::treasury_management::FundingStatus> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::seigr::treasury_management::FundingStatus>() {
  return ::seigr::treasury_management::FundingStatus_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // treasury_5fmanagement_2eproto_2epb_2eh
