// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: inter_cluster.proto
// Protobuf C++ Version: 5.29.2

#include "inter_cluster.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace seigr {
namespace intercluster {

inline constexpr TransferStatusRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : transfer_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TransferStatusRequest::TransferStatusRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TransferStatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransferStatusRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransferStatusRequestDefaultTypeInternal() {}
  union {
    TransferStatusRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransferStatusRequestDefaultTypeInternal _TransferStatusRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR TransferStatus_StatusMetadataEntry_DoNotUse::TransferStatus_StatusMetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : TransferStatus_StatusMetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : TransferStatus_StatusMetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct TransferStatus_StatusMetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransferStatus_StatusMetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransferStatus_StatusMetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TransferStatus_StatusMetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransferStatus_StatusMetadataEntry_DoNotUseDefaultTypeInternal _TransferStatus_StatusMetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR DataTransfer_TransferMetadataEntry_DoNotUse::DataTransfer_TransferMetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : DataTransfer_TransferMetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : DataTransfer_TransferMetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct DataTransfer_TransferMetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DataTransfer_TransferMetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DataTransfer_TransferMetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    DataTransfer_TransferMetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DataTransfer_TransferMetadataEntry_DoNotUseDefaultTypeInternal _DataTransfer_TransferMetadataEntry_DoNotUse_default_instance_;

inline constexpr CommunicationErrorResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CommunicationErrorResponse::CommunicationErrorResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CommunicationErrorResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CommunicationErrorResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CommunicationErrorResponseDefaultTypeInternal() {}
  union {
    CommunicationErrorResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CommunicationErrorResponseDefaultTypeInternal _CommunicationErrorResponse_default_instance_;

inline constexpr ClusterResponseAck::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        response_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ClusterResponseAck::ClusterResponseAck(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ClusterResponseAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClusterResponseAckDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClusterResponseAckDefaultTypeInternal() {}
  union {
    ClusterResponseAck _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClusterResponseAckDefaultTypeInternal _ClusterResponseAck_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR ClusterResponse_ResponseMetadataEntry_DoNotUse::ClusterResponse_ResponseMetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ClusterResponse_ResponseMetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ClusterResponse_ResponseMetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ClusterResponse_ResponseMetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClusterResponse_ResponseMetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClusterResponse_ResponseMetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ClusterResponse_ResponseMetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClusterResponse_ResponseMetadataEntry_DoNotUseDefaultTypeInternal _ClusterResponse_ResponseMetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR ClusterResponse_PayloadEntry_DoNotUse::ClusterResponse_PayloadEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ClusterResponse_PayloadEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ClusterResponse_PayloadEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ClusterResponse_PayloadEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClusterResponse_PayloadEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClusterResponse_PayloadEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ClusterResponse_PayloadEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClusterResponse_PayloadEntry_DoNotUseDefaultTypeInternal _ClusterResponse_PayloadEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR ClusterRequest_SecurityContextEntry_DoNotUse::ClusterRequest_SecurityContextEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ClusterRequest_SecurityContextEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ClusterRequest_SecurityContextEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ClusterRequest_SecurityContextEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClusterRequest_SecurityContextEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClusterRequest_SecurityContextEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ClusterRequest_SecurityContextEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClusterRequest_SecurityContextEntry_DoNotUseDefaultTypeInternal _ClusterRequest_SecurityContextEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR ClusterRequest_RequestParametersEntry_DoNotUse::ClusterRequest_RequestParametersEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ClusterRequest_RequestParametersEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ClusterRequest_RequestParametersEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ClusterRequest_RequestParametersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClusterRequest_RequestParametersEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClusterRequest_RequestParametersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ClusterRequest_RequestParametersEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClusterRequest_RequestParametersEntry_DoNotUseDefaultTypeInternal _ClusterRequest_RequestParametersEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR ClusterRequest_RequestMetadataEntry_DoNotUse::ClusterRequest_RequestMetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ClusterRequest_RequestMetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ClusterRequest_RequestMetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ClusterRequest_RequestMetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClusterRequest_RequestMetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClusterRequest_RequestMetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ClusterRequest_RequestMetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClusterRequest_RequestMetadataEntry_DoNotUseDefaultTypeInternal _ClusterRequest_RequestMetadataEntry_DoNotUse_default_instance_;

inline constexpr ClusterEventSubscriptionResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : subscription_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ClusterEventSubscriptionResponse::ClusterEventSubscriptionResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ClusterEventSubscriptionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClusterEventSubscriptionResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClusterEventSubscriptionResponseDefaultTypeInternal() {}
  union {
    ClusterEventSubscriptionResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClusterEventSubscriptionResponseDefaultTypeInternal _ClusterEventSubscriptionResponse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUse::ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUseDefaultTypeInternal _ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUse::ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUseDefaultTypeInternal _ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUse_default_instance_;

inline constexpr TransferStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : status_metadata_{},
        transfer_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        current_status_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        last_updated_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        source_cluster_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        destination_cluster_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        progress_percentage_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TransferStatus::TransferStatus(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TransferStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransferStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransferStatusDefaultTypeInternal() {}
  union {
    TransferStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransferStatusDefaultTypeInternal _TransferStatus_default_instance_;

inline constexpr DataTransfer::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : transfer_metadata_{},
        transfer_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        source_cluster_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        destination_cluster_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        data_payload_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        data_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        encryption_scheme_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        compression_method_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        transfer_format_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        data_size_bytes_{::int64_t{0}},
        validate_integrity_{false},
        transfer_timeout_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DataTransfer::DataTransfer(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DataTransferDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DataTransferDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DataTransferDefaultTypeInternal() {}
  union {
    DataTransfer _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DataTransferDefaultTypeInternal _DataTransfer_default_instance_;

inline constexpr ClusterResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : response_metadata_{},
        payload_{},
        response_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        request_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        origin_cluster_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        target_cluster_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        response_timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        response_type_{static_cast< ::seigr::intercluster::ClusterResponseType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ClusterResponse::ClusterResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ClusterResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClusterResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClusterResponseDefaultTypeInternal() {}
  union {
    ClusterResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClusterResponseDefaultTypeInternal _ClusterResponse_default_instance_;

inline constexpr ClusterRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : request_parameters_{},
        security_context_{},
        request_metadata_{},
        request_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        origin_cluster_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        target_cluster_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        initiated_at_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        request_type_{static_cast< ::seigr::intercluster::ClusterRequestType >(0)},
        require_acknowledgment_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ClusterRequest::ClusterRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ClusterRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClusterRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClusterRequestDefaultTypeInternal() {}
  union {
    ClusterRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClusterRequestDefaultTypeInternal _ClusterRequest_default_instance_;

inline constexpr ClusterEventSubscription::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : subscribed_events_{},
        _subscribed_events_cached_byte_size_{0},
        subscription_metadata_{},
        subscription_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        subscriber_cluster_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        created_at_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        receive_async_notifications_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ClusterEventSubscription::ClusterEventSubscription(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ClusterEventSubscriptionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClusterEventSubscriptionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClusterEventSubscriptionDefaultTypeInternal() {}
  union {
    ClusterEventSubscription _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClusterEventSubscriptionDefaultTypeInternal _ClusterEventSubscription_default_instance_;

inline constexpr ClusterCommunicationErrorLog::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : error_metadata_{},
        error_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        affected_cluster_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        error_message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        request_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        response_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ClusterCommunicationErrorLog::ClusterCommunicationErrorLog(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ClusterCommunicationErrorLogDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClusterCommunicationErrorLogDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClusterCommunicationErrorLogDefaultTypeInternal() {}
  union {
    ClusterCommunicationErrorLog _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClusterCommunicationErrorLogDefaultTypeInternal _ClusterCommunicationErrorLog_default_instance_;

inline constexpr CommunicationErrorRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        error_log_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CommunicationErrorRequest::CommunicationErrorRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CommunicationErrorRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CommunicationErrorRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CommunicationErrorRequestDefaultTypeInternal() {}
  union {
    CommunicationErrorRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CommunicationErrorRequestDefaultTypeInternal _CommunicationErrorRequest_default_instance_;
}  // namespace intercluster
}  // namespace seigr
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_inter_5fcluster_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_inter_5fcluster_2eproto = nullptr;
const ::uint32_t
    TableStruct_inter_5fcluster_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterRequest_RequestParametersEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterRequest_RequestParametersEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterRequest_RequestParametersEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterRequest_RequestParametersEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterRequest_SecurityContextEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterRequest_SecurityContextEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterRequest_SecurityContextEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterRequest_SecurityContextEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterRequest_RequestMetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterRequest_RequestMetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterRequest_RequestMetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterRequest_RequestMetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterRequest, _impl_.request_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterRequest, _impl_.request_type_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterRequest, _impl_.origin_cluster_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterRequest, _impl_.target_cluster_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterRequest, _impl_.request_parameters_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterRequest, _impl_.initiated_at_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterRequest, _impl_.security_context_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterRequest, _impl_.require_acknowledgment_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterRequest, _impl_.request_metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterResponse_ResponseMetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterResponse_ResponseMetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterResponse_ResponseMetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterResponse_ResponseMetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterResponse_PayloadEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterResponse_PayloadEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterResponse_PayloadEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterResponse_PayloadEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterResponse, _impl_.response_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterResponse, _impl_.request_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterResponse, _impl_.response_type_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterResponse, _impl_.origin_cluster_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterResponse, _impl_.target_cluster_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterResponse, _impl_.response_timestamp_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterResponse, _impl_.response_metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterResponse, _impl_.status_message_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterResponse, _impl_.payload_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::DataTransfer_TransferMetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::DataTransfer_TransferMetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::DataTransfer_TransferMetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::DataTransfer_TransferMetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::DataTransfer, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::DataTransfer, _impl_.transfer_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::DataTransfer, _impl_.source_cluster_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::DataTransfer, _impl_.destination_cluster_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::DataTransfer, _impl_.data_payload_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::DataTransfer, _impl_.data_type_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::DataTransfer, _impl_.encryption_scheme_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::DataTransfer, _impl_.compression_method_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::DataTransfer, _impl_.transfer_format_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::DataTransfer, _impl_.data_size_bytes_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::DataTransfer, _impl_.validate_integrity_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::DataTransfer, _impl_.transfer_timeout_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::DataTransfer, _impl_.transfer_metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterEventSubscription, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterEventSubscription, _impl_.subscription_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterEventSubscription, _impl_.subscriber_cluster_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterEventSubscription, _impl_.subscribed_events_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterEventSubscription, _impl_.receive_async_notifications_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterEventSubscription, _impl_.subscription_metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterEventSubscription, _impl_.created_at_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::TransferStatus_StatusMetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::TransferStatus_StatusMetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::TransferStatus_StatusMetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::TransferStatus_StatusMetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::TransferStatus, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::TransferStatus, _impl_.transfer_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::TransferStatus, _impl_.current_status_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::TransferStatus, _impl_.last_updated_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::TransferStatus, _impl_.progress_percentage_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::TransferStatus, _impl_.source_cluster_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::TransferStatus, _impl_.destination_cluster_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::TransferStatus, _impl_.status_metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterCommunicationErrorLog, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterCommunicationErrorLog, _impl_.error_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterCommunicationErrorLog, _impl_.affected_cluster_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterCommunicationErrorLog, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterCommunicationErrorLog, _impl_.error_message_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterCommunicationErrorLog, _impl_.request_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterCommunicationErrorLog, _impl_.response_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterCommunicationErrorLog, _impl_.error_metadata_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterResponseAck, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterResponseAck, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterResponseAck, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterResponseAck, _impl_.response_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::TransferStatusRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::TransferStatusRequest, _impl_.transfer_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::CommunicationErrorRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::CommunicationErrorRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::CommunicationErrorRequest, _impl_.error_log_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::CommunicationErrorResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::CommunicationErrorResponse, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::CommunicationErrorResponse, _impl_.message_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterEventSubscriptionResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterEventSubscriptionResponse, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterEventSubscriptionResponse, _impl_.subscription_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::intercluster::ClusterEventSubscriptionResponse, _impl_.message_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::seigr::intercluster::ClusterRequest_RequestParametersEntry_DoNotUse)},
        {12, 22, -1, sizeof(::seigr::intercluster::ClusterRequest_SecurityContextEntry_DoNotUse)},
        {24, 34, -1, sizeof(::seigr::intercluster::ClusterRequest_RequestMetadataEntry_DoNotUse)},
        {36, -1, -1, sizeof(::seigr::intercluster::ClusterRequest)},
        {53, 63, -1, sizeof(::seigr::intercluster::ClusterResponse_ResponseMetadataEntry_DoNotUse)},
        {65, 75, -1, sizeof(::seigr::intercluster::ClusterResponse_PayloadEntry_DoNotUse)},
        {77, -1, -1, sizeof(::seigr::intercluster::ClusterResponse)},
        {94, 104, -1, sizeof(::seigr::intercluster::DataTransfer_TransferMetadataEntry_DoNotUse)},
        {106, -1, -1, sizeof(::seigr::intercluster::DataTransfer)},
        {126, 136, -1, sizeof(::seigr::intercluster::ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUse)},
        {138, -1, -1, sizeof(::seigr::intercluster::ClusterEventSubscription)},
        {152, 162, -1, sizeof(::seigr::intercluster::TransferStatus_StatusMetadataEntry_DoNotUse)},
        {164, -1, -1, sizeof(::seigr::intercluster::TransferStatus)},
        {179, 189, -1, sizeof(::seigr::intercluster::ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUse)},
        {191, -1, -1, sizeof(::seigr::intercluster::ClusterCommunicationErrorLog)},
        {206, -1, -1, sizeof(::seigr::intercluster::ClusterResponseAck)},
        {217, -1, -1, sizeof(::seigr::intercluster::TransferStatusRequest)},
        {226, 235, -1, sizeof(::seigr::intercluster::CommunicationErrorRequest)},
        {236, -1, -1, sizeof(::seigr::intercluster::CommunicationErrorResponse)},
        {246, -1, -1, sizeof(::seigr::intercluster::ClusterEventSubscriptionResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::seigr::intercluster::_ClusterRequest_RequestParametersEntry_DoNotUse_default_instance_._instance,
    &::seigr::intercluster::_ClusterRequest_SecurityContextEntry_DoNotUse_default_instance_._instance,
    &::seigr::intercluster::_ClusterRequest_RequestMetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::intercluster::_ClusterRequest_default_instance_._instance,
    &::seigr::intercluster::_ClusterResponse_ResponseMetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::intercluster::_ClusterResponse_PayloadEntry_DoNotUse_default_instance_._instance,
    &::seigr::intercluster::_ClusterResponse_default_instance_._instance,
    &::seigr::intercluster::_DataTransfer_TransferMetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::intercluster::_DataTransfer_default_instance_._instance,
    &::seigr::intercluster::_ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::intercluster::_ClusterEventSubscription_default_instance_._instance,
    &::seigr::intercluster::_TransferStatus_StatusMetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::intercluster::_TransferStatus_default_instance_._instance,
    &::seigr::intercluster::_ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::intercluster::_ClusterCommunicationErrorLog_default_instance_._instance,
    &::seigr::intercluster::_ClusterResponseAck_default_instance_._instance,
    &::seigr::intercluster::_TransferStatusRequest_default_instance_._instance,
    &::seigr::intercluster::_CommunicationErrorRequest_default_instance_._instance,
    &::seigr::intercluster::_CommunicationErrorResponse_default_instance_._instance,
    &::seigr::intercluster::_ClusterEventSubscriptionResponse_default_instance_._instance,
};
const char descriptor_table_protodef_inter_5fcluster_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\023inter_cluster.proto\022\022seigr.intercluste"
    "r\"\365\004\n\016ClusterRequest\022\022\n\nrequest_id\030\001 \001(\t"
    "\022<\n\014request_type\030\002 \001(\0162&.seigr.interclus"
    "ter.ClusterRequestType\022\031\n\021origin_cluster"
    "_id\030\003 \001(\t\022\031\n\021target_cluster_id\030\004 \001(\t\022U\n\022"
    "request_parameters\030\005 \003(\01329.seigr.intercl"
    "uster.ClusterRequest.RequestParametersEn"
    "try\022\024\n\014initiated_at\030\006 \001(\t\022Q\n\020security_co"
    "ntext\030\007 \003(\01327.seigr.intercluster.Cluster"
    "Request.SecurityContextEntry\022\036\n\026require_"
    "acknowledgment\030\010 \001(\010\022Q\n\020request_metadata"
    "\030\t \003(\01327.seigr.intercluster.ClusterReque"
    "st.RequestMetadataEntry\0328\n\026RequestParame"
    "tersEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028"
    "\001\0326\n\024SecurityContextEntry\022\013\n\003key\030\001 \001(\t\022\r"
    "\n\005value\030\002 \001(\t:\0028\001\0326\n\024RequestMetadataEntr"
    "y\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\346\003\n\017Cl"
    "usterResponse\022\023\n\013response_id\030\001 \001(\t\022\022\n\nre"
    "quest_id\030\002 \001(\t\022>\n\rresponse_type\030\003 \001(\0162\'."
    "seigr.intercluster.ClusterResponseType\022\031"
    "\n\021origin_cluster_id\030\004 \001(\t\022\031\n\021target_clus"
    "ter_id\030\005 \001(\t\022\032\n\022response_timestamp\030\006 \001(\t"
    "\022T\n\021response_metadata\030\007 \003(\01329.seigr.inte"
    "rcluster.ClusterResponse.ResponseMetadat"
    "aEntry\022\026\n\016status_message\030\010 \001(\t\022A\n\007payloa"
    "d\030\t \003(\01320.seigr.intercluster.ClusterResp"
    "onse.PayloadEntry\0327\n\025ResponseMetadataEnt"
    "ry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\032.\n\014Pa"
    "yloadEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\014:\002"
    "8\001\"\262\003\n\014DataTransfer\022\023\n\013transfer_id\030\001 \001(\t"
    "\022\031\n\021source_cluster_id\030\002 \001(\t\022\036\n\026destinati"
    "on_cluster_id\030\003 \001(\t\022\024\n\014data_payload\030\004 \001("
    "\014\022\021\n\tdata_type\030\005 \001(\t\022\031\n\021encryption_schem"
    "e\030\006 \001(\t\022\032\n\022compression_method\030\007 \001(\t\022\027\n\017t"
    "ransfer_format\030\010 \001(\t\022\027\n\017data_size_bytes\030"
    "\t \001(\003\022\032\n\022validate_integrity\030\n \001(\010\022\030\n\020tra"
    "nsfer_timeout\030\013 \001(\005\022Q\n\021transfer_metadata"
    "\030\014 \003(\01326.seigr.intercluster.DataTransfer"
    ".TransferMetadataEntry\0327\n\025TransferMetada"
    "taEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\""
    "\362\002\n\030ClusterEventSubscription\022\027\n\017subscrip"
    "tion_id\030\001 \001(\t\022\035\n\025subscriber_cluster_id\030\002"
    " \001(\t\022A\n\021subscribed_events\030\003 \003(\0162&.seigr."
    "intercluster.ClusterRequestType\022#\n\033recei"
    "ve_async_notifications\030\004 \001(\010\022e\n\025subscrip"
    "tion_metadata\030\005 \003(\0132F.seigr.intercluster"
    ".ClusterEventSubscription.SubscriptionMe"
    "tadataEntry\022\022\n\ncreated_at\030\006 \001(\t\032;\n\031Subsc"
    "riptionMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005val"
    "ue\030\002 \001(\t:\0028\001\"\263\002\n\016TransferStatus\022\023\n\013trans"
    "fer_id\030\001 \001(\t\022\026\n\016current_status\030\002 \001(\t\022\024\n\014"
    "last_updated\030\003 \001(\t\022\033\n\023progress_percentag"
    "e\030\004 \001(\001\022\031\n\021source_cluster_id\030\005 \001(\t\022\036\n\026de"
    "stination_cluster_id\030\006 \001(\t\022O\n\017status_met"
    "adata\030\007 \003(\01326.seigr.intercluster.Transfe"
    "rStatus.StatusMetadataEntry\0325\n\023StatusMet"
    "adataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\002"
    "8\001\"\263\002\n\034ClusterCommunicationErrorLog\022\020\n\010e"
    "rror_id\030\001 \001(\t\022\033\n\023affected_cluster_id\030\002 \001"
    "(\t\022\021\n\ttimestamp\030\003 \001(\t\022\025\n\rerror_message\030\004"
    " \001(\t\022\022\n\nrequest_id\030\005 \001(\t\022\023\n\013response_id\030"
    "\006 \001(\t\022[\n\016error_metadata\030\007 \003(\0132C.seigr.in"
    "tercluster.ClusterCommunicationErrorLog."
    "ErrorMetadataEntry\0324\n\022ErrorMetadataEntry"
    "\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"K\n\022Clus"
    "terResponseAck\022\017\n\007success\030\001 \001(\010\022\017\n\007messa"
    "ge\030\002 \001(\t\022\023\n\013response_id\030\003 \001(\t\",\n\025Transfe"
    "rStatusRequest\022\023\n\013transfer_id\030\001 \001(\t\"`\n\031C"
    "ommunicationErrorRequest\022C\n\terror_log\030\001 "
    "\001(\01320.seigr.intercluster.ClusterCommunic"
    "ationErrorLog\">\n\032CommunicationErrorRespo"
    "nse\022\017\n\007success\030\001 \001(\010\022\017\n\007message\030\002 \001(\t\"]\n"
    " ClusterEventSubscriptionResponse\022\017\n\007suc"
    "cess\030\001 \001(\010\022\027\n\017subscription_id\030\002 \001(\t\022\017\n\007m"
    "essage\030\003 \001(\t*\236\001\n\022ClusterRequestType\022\032\n\026R"
    "EQUEST_TYPE_UNDEFINED\020\000\022\024\n\020REQUEST_RESOU"
    "RCE\020\001\022\020\n\014REQUEST_DATA\020\002\022\034\n\030REQUEST_WORKL"
    "OAD_BALANCE\020\003\022\022\n\016REQUEST_STATUS\020\004\022\022\n\016REQ"
    "UEST_CUSTOM\020\005*\303\001\n\023ClusterResponseType\022\033\n"
    "\027RESPONSE_TYPE_UNDEFINED\020\000\022\031\n\025RESPONSE_A"
    "CKNOWLEDGED\020\001\022\033\n\027RESPONSE_DATA_DELIVERED"
    "\020\002\022\025\n\021RESPONSE_ACCEPTED\020\003\022\025\n\021RESPONSE_DE"
    "CLINED\020\004\022\024\n\020RESPONSE_PENDING\020\005\022\023\n\017RESPON"
    "SE_FAILED\020\0062\252\005\n InterClusterCommunicatio"
    "nService\022]\n\022SendClusterRequest\022\".seigr.i"
    "ntercluster.ClusterRequest\032#.seigr.inter"
    "cluster.ClusterResponse\022i\n\032AcknowledgeCl"
    "usterResponse\022#.seigr.intercluster.Clust"
    "erResponse\032&.seigr.intercluster.ClusterR"
    "esponseAck\022\\\n\024InitiateDataTransfer\022 .sei"
    "gr.intercluster.DataTransfer\032\".seigr.int"
    "ercluster.TransferStatus\022f\n\025MonitorTrans"
    "ferStatus\022).seigr.intercluster.TransferS"
    "tatusRequest\032\".seigr.intercluster.Transf"
    "erStatus\022v\n\025LogCommunicationError\022-.seig"
    "r.intercluster.CommunicationErrorRequest"
    "\032..seigr.intercluster.CommunicationError"
    "Response\022~\n\030SubscribeToClusterEvents\022,.s"
    "eigr.intercluster.ClusterEventSubscripti"
    "on\0324.seigr.intercluster.ClusterEventSubs"
    "criptionResponseb\006proto3"
};
static ::absl::once_flag descriptor_table_inter_5fcluster_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_inter_5fcluster_2eproto = {
    false,
    false,
    4024,
    descriptor_table_protodef_inter_5fcluster_2eproto,
    "inter_cluster.proto",
    &descriptor_table_inter_5fcluster_2eproto_once,
    nullptr,
    0,
    20,
    schemas,
    file_default_instances,
    TableStruct_inter_5fcluster_2eproto::offsets,
    file_level_enum_descriptors_inter_5fcluster_2eproto,
    file_level_service_descriptors_inter_5fcluster_2eproto,
};
namespace seigr {
namespace intercluster {
const ::google::protobuf::EnumDescriptor* ClusterRequestType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_inter_5fcluster_2eproto);
  return file_level_enum_descriptors_inter_5fcluster_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t ClusterRequestType_internal_data_[] = {
    393216u, 0u, };
bool ClusterRequestType_IsValid(int value) {
  return 0 <= value && value <= 5;
}
const ::google::protobuf::EnumDescriptor* ClusterResponseType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_inter_5fcluster_2eproto);
  return file_level_enum_descriptors_inter_5fcluster_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t ClusterResponseType_internal_data_[] = {
    458752u, 0u, };
bool ClusterResponseType_IsValid(int value) {
  return 0 <= value && value <= 6;
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              ClusterRequest_RequestParametersEntry_DoNotUse::ClusterRequest_RequestParametersEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              ClusterRequest_RequestParametersEntry_DoNotUse::ClusterRequest_RequestParametersEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              ClusterRequest_RequestParametersEntry_DoNotUse::ClusterRequest_RequestParametersEntry_DoNotUse() : SuperType() {}
              ClusterRequest_RequestParametersEntry_DoNotUse::ClusterRequest_RequestParametersEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* ClusterRequest_RequestParametersEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) ClusterRequest_RequestParametersEntry_DoNotUse(arena);
              }
              constexpr auto ClusterRequest_RequestParametersEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ClusterRequest_RequestParametersEntry_DoNotUse),
                                                          alignof(ClusterRequest_RequestParametersEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull ClusterRequest_RequestParametersEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_ClusterRequest_RequestParametersEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &ClusterRequest_RequestParametersEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<ClusterRequest_RequestParametersEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &ClusterRequest_RequestParametersEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &ClusterRequest_RequestParametersEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(ClusterRequest_RequestParametersEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &ClusterRequest_RequestParametersEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_inter_5fcluster_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* ClusterRequest_RequestParametersEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 73, 2> ClusterRequest_RequestParametersEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ClusterRequest_RequestParametersEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::intercluster::ClusterRequest_RequestParametersEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ClusterRequest_RequestParametersEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ClusterRequest_RequestParametersEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(ClusterRequest_RequestParametersEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(ClusterRequest_RequestParametersEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\70\3\5\0\0\0\0\0"
    "seigr.intercluster.ClusterRequest.RequestParametersEntry"
    "key"
    "value"
  }},
};

// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              ClusterRequest_SecurityContextEntry_DoNotUse::ClusterRequest_SecurityContextEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              ClusterRequest_SecurityContextEntry_DoNotUse::ClusterRequest_SecurityContextEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              ClusterRequest_SecurityContextEntry_DoNotUse::ClusterRequest_SecurityContextEntry_DoNotUse() : SuperType() {}
              ClusterRequest_SecurityContextEntry_DoNotUse::ClusterRequest_SecurityContextEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* ClusterRequest_SecurityContextEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) ClusterRequest_SecurityContextEntry_DoNotUse(arena);
              }
              constexpr auto ClusterRequest_SecurityContextEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ClusterRequest_SecurityContextEntry_DoNotUse),
                                                          alignof(ClusterRequest_SecurityContextEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull ClusterRequest_SecurityContextEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_ClusterRequest_SecurityContextEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &ClusterRequest_SecurityContextEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<ClusterRequest_SecurityContextEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &ClusterRequest_SecurityContextEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &ClusterRequest_SecurityContextEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(ClusterRequest_SecurityContextEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &ClusterRequest_SecurityContextEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_inter_5fcluster_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* ClusterRequest_SecurityContextEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 71, 2> ClusterRequest_SecurityContextEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ClusterRequest_SecurityContextEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::intercluster::ClusterRequest_SecurityContextEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ClusterRequest_SecurityContextEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ClusterRequest_SecurityContextEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(ClusterRequest_SecurityContextEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(ClusterRequest_SecurityContextEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\66\3\5\0\0\0\0\0"
    "seigr.intercluster.ClusterRequest.SecurityContextEntry"
    "key"
    "value"
  }},
};

// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              ClusterRequest_RequestMetadataEntry_DoNotUse::ClusterRequest_RequestMetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              ClusterRequest_RequestMetadataEntry_DoNotUse::ClusterRequest_RequestMetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              ClusterRequest_RequestMetadataEntry_DoNotUse::ClusterRequest_RequestMetadataEntry_DoNotUse() : SuperType() {}
              ClusterRequest_RequestMetadataEntry_DoNotUse::ClusterRequest_RequestMetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* ClusterRequest_RequestMetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) ClusterRequest_RequestMetadataEntry_DoNotUse(arena);
              }
              constexpr auto ClusterRequest_RequestMetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ClusterRequest_RequestMetadataEntry_DoNotUse),
                                                          alignof(ClusterRequest_RequestMetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull ClusterRequest_RequestMetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_ClusterRequest_RequestMetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &ClusterRequest_RequestMetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<ClusterRequest_RequestMetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &ClusterRequest_RequestMetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &ClusterRequest_RequestMetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(ClusterRequest_RequestMetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &ClusterRequest_RequestMetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_inter_5fcluster_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* ClusterRequest_RequestMetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 71, 2> ClusterRequest_RequestMetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ClusterRequest_RequestMetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::intercluster::ClusterRequest_RequestMetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ClusterRequest_RequestMetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ClusterRequest_RequestMetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(ClusterRequest_RequestMetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(ClusterRequest_RequestMetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\66\3\5\0\0\0\0\0"
    "seigr.intercluster.ClusterRequest.RequestMetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class ClusterRequest::_Internal {
 public:
};

ClusterRequest::ClusterRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.intercluster.ClusterRequest)
}
inline PROTOBUF_NDEBUG_INLINE ClusterRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::intercluster::ClusterRequest& from_msg)
      : request_parameters_{visibility, arena, from.request_parameters_},
        security_context_{visibility, arena, from.security_context_},
        request_metadata_{visibility, arena, from.request_metadata_},
        request_id_(arena, from.request_id_),
        origin_cluster_id_(arena, from.origin_cluster_id_),
        target_cluster_id_(arena, from.target_cluster_id_),
        initiated_at_(arena, from.initiated_at_),
        _cached_size_{0} {}

ClusterRequest::ClusterRequest(
    ::google::protobuf::Arena* arena,
    const ClusterRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ClusterRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, request_type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, request_type_),
           offsetof(Impl_, require_acknowledgment_) -
               offsetof(Impl_, request_type_) +
               sizeof(Impl_::require_acknowledgment_));

  // @@protoc_insertion_point(copy_constructor:seigr.intercluster.ClusterRequest)
}
inline PROTOBUF_NDEBUG_INLINE ClusterRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : request_parameters_{visibility, arena},
        security_context_{visibility, arena},
        request_metadata_{visibility, arena},
        request_id_(arena),
        origin_cluster_id_(arena),
        target_cluster_id_(arena),
        initiated_at_(arena),
        _cached_size_{0} {}

inline void ClusterRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, request_type_),
           0,
           offsetof(Impl_, require_acknowledgment_) -
               offsetof(Impl_, request_type_) +
               sizeof(Impl_::require_acknowledgment_));
}
ClusterRequest::~ClusterRequest() {
  // @@protoc_insertion_point(destructor:seigr.intercluster.ClusterRequest)
  SharedDtor(*this);
}
inline void ClusterRequest::SharedDtor(MessageLite& self) {
  ClusterRequest& this_ = static_cast<ClusterRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.request_id_.Destroy();
  this_._impl_.origin_cluster_id_.Destroy();
  this_._impl_.target_cluster_id_.Destroy();
  this_._impl_.initiated_at_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ClusterRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ClusterRequest(arena);
}
constexpr auto ClusterRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ClusterRequest, _impl_.request_parameters_) +
          decltype(ClusterRequest::_impl_.request_parameters_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ClusterRequest, _impl_.request_parameters_) +
          decltype(ClusterRequest::_impl_.request_parameters_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ClusterRequest, _impl_.security_context_) +
          decltype(ClusterRequest::_impl_.security_context_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ClusterRequest, _impl_.security_context_) +
          decltype(ClusterRequest::_impl_.security_context_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ClusterRequest, _impl_.request_metadata_) +
          decltype(ClusterRequest::_impl_.request_metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ClusterRequest, _impl_.request_metadata_) +
          decltype(ClusterRequest::_impl_.request_metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ClusterRequest), alignof(ClusterRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ClusterRequest::PlacementNew_,
                                 sizeof(ClusterRequest),
                                 alignof(ClusterRequest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ClusterRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ClusterRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ClusterRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ClusterRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ClusterRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ClusterRequest>(), &ClusterRequest::ByteSizeLong,
            &ClusterRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ClusterRequest, _impl_._cached_size_),
        false,
    },
    &ClusterRequest::kDescriptorMethods,
    &descriptor_table_inter_5fcluster_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ClusterRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 9, 3, 156, 2> ClusterRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    9, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::intercluster::ClusterRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool require_acknowledgment = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ClusterRequest, _impl_.require_acknowledgment_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(ClusterRequest, _impl_.require_acknowledgment_)}},
    // string request_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ClusterRequest, _impl_.request_id_)}},
    // .seigr.intercluster.ClusterRequestType request_type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ClusterRequest, _impl_.request_type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ClusterRequest, _impl_.request_type_)}},
    // string origin_cluster_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ClusterRequest, _impl_.origin_cluster_id_)}},
    // string target_cluster_id = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ClusterRequest, _impl_.target_cluster_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string initiated_at = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(ClusterRequest, _impl_.initiated_at_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string request_id = 1;
    {PROTOBUF_FIELD_OFFSET(ClusterRequest, _impl_.request_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.intercluster.ClusterRequestType request_type = 2;
    {PROTOBUF_FIELD_OFFSET(ClusterRequest, _impl_.request_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string origin_cluster_id = 3;
    {PROTOBUF_FIELD_OFFSET(ClusterRequest, _impl_.origin_cluster_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string target_cluster_id = 4;
    {PROTOBUF_FIELD_OFFSET(ClusterRequest, _impl_.target_cluster_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> request_parameters = 5;
    {PROTOBUF_FIELD_OFFSET(ClusterRequest, _impl_.request_parameters_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string initiated_at = 6;
    {PROTOBUF_FIELD_OFFSET(ClusterRequest, _impl_.initiated_at_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> security_context = 7;
    {PROTOBUF_FIELD_OFFSET(ClusterRequest, _impl_.security_context_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // bool require_acknowledgment = 8;
    {PROTOBUF_FIELD_OFFSET(ClusterRequest, _impl_.require_acknowledgment_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // map<string, string> request_metadata = 9;
    {PROTOBUF_FIELD_OFFSET(ClusterRequest, _impl_.request_metadata_), 0, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(ClusterRequest()._impl_.request_parameters_)>(
        1, 0, 0, 9,
        9)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(ClusterRequest()._impl_.security_context_)>(
        1, 0, 0, 9,
        9)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(ClusterRequest()._impl_.request_metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\41\12\0\21\21\22\14\20\0\20\0\0\0\0\0\0"
    "seigr.intercluster.ClusterRequest"
    "request_id"
    "origin_cluster_id"
    "target_cluster_id"
    "request_parameters"
    "initiated_at"
    "security_context"
    "request_metadata"
  }},
};

PROTOBUF_NOINLINE void ClusterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.intercluster.ClusterRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.request_parameters_.Clear();
  _impl_.security_context_.Clear();
  _impl_.request_metadata_.Clear();
  _impl_.request_id_.ClearToEmpty();
  _impl_.origin_cluster_id_.ClearToEmpty();
  _impl_.target_cluster_id_.ClearToEmpty();
  _impl_.initiated_at_.ClearToEmpty();
  ::memset(&_impl_.request_type_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.require_acknowledgment_) -
      reinterpret_cast<char*>(&_impl_.request_type_)) + sizeof(_impl_.require_acknowledgment_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ClusterRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ClusterRequest& this_ = static_cast<const ClusterRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ClusterRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ClusterRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.intercluster.ClusterRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string request_id = 1;
          if (!this_._internal_request_id().empty()) {
            const std::string& _s = this_._internal_request_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.ClusterRequest.request_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // .seigr.intercluster.ClusterRequestType request_type = 2;
          if (this_._internal_request_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_request_type(), target);
          }

          // string origin_cluster_id = 3;
          if (!this_._internal_origin_cluster_id().empty()) {
            const std::string& _s = this_._internal_origin_cluster_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.ClusterRequest.origin_cluster_id");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string target_cluster_id = 4;
          if (!this_._internal_target_cluster_id().empty()) {
            const std::string& _s = this_._internal_target_cluster_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.ClusterRequest.target_cluster_id");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // map<string, string> request_parameters = 5;
          if (!this_._internal_request_parameters().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_request_parameters();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    5, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.ClusterRequest.request_parameters");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.ClusterRequest.request_parameters");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    5, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.ClusterRequest.request_parameters");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.ClusterRequest.request_parameters");
              }
            }
          }

          // string initiated_at = 6;
          if (!this_._internal_initiated_at().empty()) {
            const std::string& _s = this_._internal_initiated_at();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.ClusterRequest.initiated_at");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // map<string, string> security_context = 7;
          if (!this_._internal_security_context().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_security_context();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.ClusterRequest.security_context");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.ClusterRequest.security_context");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.ClusterRequest.security_context");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.ClusterRequest.security_context");
              }
            }
          }

          // bool require_acknowledgment = 8;
          if (this_._internal_require_acknowledgment() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                8, this_._internal_require_acknowledgment(), target);
          }

          // map<string, string> request_metadata = 9;
          if (!this_._internal_request_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_request_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    9, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.ClusterRequest.request_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.ClusterRequest.request_metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    9, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.ClusterRequest.request_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.ClusterRequest.request_metadata");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.intercluster.ClusterRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ClusterRequest::ByteSizeLong(const MessageLite& base) {
          const ClusterRequest& this_ = static_cast<const ClusterRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ClusterRequest::ByteSizeLong() const {
          const ClusterRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.intercluster.ClusterRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> request_parameters = 5;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_request_parameters_size());
              for (const auto& entry : this_._internal_request_parameters()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // map<string, string> security_context = 7;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_security_context_size());
              for (const auto& entry : this_._internal_security_context()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // map<string, string> request_metadata = 9;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_request_metadata_size());
              for (const auto& entry : this_._internal_request_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string request_id = 1;
            if (!this_._internal_request_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_request_id());
            }
            // string origin_cluster_id = 3;
            if (!this_._internal_origin_cluster_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_origin_cluster_id());
            }
            // string target_cluster_id = 4;
            if (!this_._internal_target_cluster_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_target_cluster_id());
            }
            // string initiated_at = 6;
            if (!this_._internal_initiated_at().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_initiated_at());
            }
            // .seigr.intercluster.ClusterRequestType request_type = 2;
            if (this_._internal_request_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_request_type());
            }
            // bool require_acknowledgment = 8;
            if (this_._internal_require_acknowledgment() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ClusterRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ClusterRequest*>(&to_msg);
  auto& from = static_cast<const ClusterRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.intercluster.ClusterRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.request_parameters_.MergeFrom(from._impl_.request_parameters_);
  _this->_impl_.security_context_.MergeFrom(from._impl_.security_context_);
  _this->_impl_.request_metadata_.MergeFrom(from._impl_.request_metadata_);
  if (!from._internal_request_id().empty()) {
    _this->_internal_set_request_id(from._internal_request_id());
  }
  if (!from._internal_origin_cluster_id().empty()) {
    _this->_internal_set_origin_cluster_id(from._internal_origin_cluster_id());
  }
  if (!from._internal_target_cluster_id().empty()) {
    _this->_internal_set_target_cluster_id(from._internal_target_cluster_id());
  }
  if (!from._internal_initiated_at().empty()) {
    _this->_internal_set_initiated_at(from._internal_initiated_at());
  }
  if (from._internal_request_type() != 0) {
    _this->_impl_.request_type_ = from._impl_.request_type_;
  }
  if (from._internal_require_acknowledgment() != 0) {
    _this->_impl_.require_acknowledgment_ = from._impl_.require_acknowledgment_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ClusterRequest::CopyFrom(const ClusterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.intercluster.ClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ClusterRequest::InternalSwap(ClusterRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.request_parameters_.InternalSwap(&other->_impl_.request_parameters_);
  _impl_.security_context_.InternalSwap(&other->_impl_.security_context_);
  _impl_.request_metadata_.InternalSwap(&other->_impl_.request_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.request_id_, &other->_impl_.request_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.origin_cluster_id_, &other->_impl_.origin_cluster_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.target_cluster_id_, &other->_impl_.target_cluster_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.initiated_at_, &other->_impl_.initiated_at_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ClusterRequest, _impl_.require_acknowledgment_)
      + sizeof(ClusterRequest::_impl_.require_acknowledgment_)
      - PROTOBUF_FIELD_OFFSET(ClusterRequest, _impl_.request_type_)>(
          reinterpret_cast<char*>(&_impl_.request_type_),
          reinterpret_cast<char*>(&other->_impl_.request_type_));
}

::google::protobuf::Metadata ClusterRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              ClusterResponse_ResponseMetadataEntry_DoNotUse::ClusterResponse_ResponseMetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              ClusterResponse_ResponseMetadataEntry_DoNotUse::ClusterResponse_ResponseMetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              ClusterResponse_ResponseMetadataEntry_DoNotUse::ClusterResponse_ResponseMetadataEntry_DoNotUse() : SuperType() {}
              ClusterResponse_ResponseMetadataEntry_DoNotUse::ClusterResponse_ResponseMetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* ClusterResponse_ResponseMetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) ClusterResponse_ResponseMetadataEntry_DoNotUse(arena);
              }
              constexpr auto ClusterResponse_ResponseMetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ClusterResponse_ResponseMetadataEntry_DoNotUse),
                                                          alignof(ClusterResponse_ResponseMetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull ClusterResponse_ResponseMetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_ClusterResponse_ResponseMetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &ClusterResponse_ResponseMetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<ClusterResponse_ResponseMetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &ClusterResponse_ResponseMetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &ClusterResponse_ResponseMetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(ClusterResponse_ResponseMetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &ClusterResponse_ResponseMetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_inter_5fcluster_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* ClusterResponse_ResponseMetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 73, 2> ClusterResponse_ResponseMetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ClusterResponse_ResponseMetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::intercluster::ClusterResponse_ResponseMetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ClusterResponse_ResponseMetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ClusterResponse_ResponseMetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(ClusterResponse_ResponseMetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(ClusterResponse_ResponseMetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\70\3\5\0\0\0\0\0"
    "seigr.intercluster.ClusterResponse.ResponseMetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              ClusterResponse_PayloadEntry_DoNotUse::ClusterResponse_PayloadEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              ClusterResponse_PayloadEntry_DoNotUse::ClusterResponse_PayloadEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              ClusterResponse_PayloadEntry_DoNotUse::ClusterResponse_PayloadEntry_DoNotUse() : SuperType() {}
              ClusterResponse_PayloadEntry_DoNotUse::ClusterResponse_PayloadEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* ClusterResponse_PayloadEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) ClusterResponse_PayloadEntry_DoNotUse(arena);
              }
              constexpr auto ClusterResponse_PayloadEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ClusterResponse_PayloadEntry_DoNotUse),
                                                          alignof(ClusterResponse_PayloadEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull ClusterResponse_PayloadEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_ClusterResponse_PayloadEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &ClusterResponse_PayloadEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<ClusterResponse_PayloadEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &ClusterResponse_PayloadEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &ClusterResponse_PayloadEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(ClusterResponse_PayloadEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &ClusterResponse_PayloadEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_inter_5fcluster_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* ClusterResponse_PayloadEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 59, 2> ClusterResponse_PayloadEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ClusterResponse_PayloadEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::intercluster::ClusterResponse_PayloadEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes value = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ClusterResponse_PayloadEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ClusterResponse_PayloadEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(ClusterResponse_PayloadEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes value = 2;
    {PROTOBUF_FIELD_OFFSET(ClusterResponse_PayloadEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\57\3\0\0\0\0\0\0"
    "seigr.intercluster.ClusterResponse.PayloadEntry"
    "key"
  }},
};

// ===================================================================

class ClusterResponse::_Internal {
 public:
};

ClusterResponse::ClusterResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.intercluster.ClusterResponse)
}
inline PROTOBUF_NDEBUG_INLINE ClusterResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::intercluster::ClusterResponse& from_msg)
      : response_metadata_{visibility, arena, from.response_metadata_},
        payload_{visibility, arena, from.payload_},
        response_id_(arena, from.response_id_),
        request_id_(arena, from.request_id_),
        origin_cluster_id_(arena, from.origin_cluster_id_),
        target_cluster_id_(arena, from.target_cluster_id_),
        response_timestamp_(arena, from.response_timestamp_),
        status_message_(arena, from.status_message_),
        _cached_size_{0} {}

ClusterResponse::ClusterResponse(
    ::google::protobuf::Arena* arena,
    const ClusterResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ClusterResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.response_type_ = from._impl_.response_type_;

  // @@protoc_insertion_point(copy_constructor:seigr.intercluster.ClusterResponse)
}
inline PROTOBUF_NDEBUG_INLINE ClusterResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : response_metadata_{visibility, arena},
        payload_{visibility, arena},
        response_id_(arena),
        request_id_(arena),
        origin_cluster_id_(arena),
        target_cluster_id_(arena),
        response_timestamp_(arena),
        status_message_(arena),
        _cached_size_{0} {}

inline void ClusterResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.response_type_ = {};
}
ClusterResponse::~ClusterResponse() {
  // @@protoc_insertion_point(destructor:seigr.intercluster.ClusterResponse)
  SharedDtor(*this);
}
inline void ClusterResponse::SharedDtor(MessageLite& self) {
  ClusterResponse& this_ = static_cast<ClusterResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.response_id_.Destroy();
  this_._impl_.request_id_.Destroy();
  this_._impl_.origin_cluster_id_.Destroy();
  this_._impl_.target_cluster_id_.Destroy();
  this_._impl_.response_timestamp_.Destroy();
  this_._impl_.status_message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ClusterResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ClusterResponse(arena);
}
constexpr auto ClusterResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ClusterResponse, _impl_.response_metadata_) +
          decltype(ClusterResponse::_impl_.response_metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ClusterResponse, _impl_.response_metadata_) +
          decltype(ClusterResponse::_impl_.response_metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ClusterResponse, _impl_.payload_) +
          decltype(ClusterResponse::_impl_.payload_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ClusterResponse, _impl_.payload_) +
          decltype(ClusterResponse::_impl_.payload_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ClusterResponse), alignof(ClusterResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ClusterResponse::PlacementNew_,
                                 sizeof(ClusterResponse),
                                 alignof(ClusterResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ClusterResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ClusterResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ClusterResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ClusterResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ClusterResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ClusterResponse>(), &ClusterResponse::ByteSizeLong,
            &ClusterResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ClusterResponse, _impl_._cached_size_),
        false,
    },
    &ClusterResponse::kDescriptorMethods,
    &descriptor_table_inter_5fcluster_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ClusterResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 9, 2, 162, 2> ClusterResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    9, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::intercluster::ClusterResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string status_message = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(ClusterResponse, _impl_.status_message_)}},
    // string response_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ClusterResponse, _impl_.response_id_)}},
    // string request_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ClusterResponse, _impl_.request_id_)}},
    // .seigr.intercluster.ClusterResponseType response_type = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ClusterResponse, _impl_.response_type_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(ClusterResponse, _impl_.response_type_)}},
    // string origin_cluster_id = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ClusterResponse, _impl_.origin_cluster_id_)}},
    // string target_cluster_id = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(ClusterResponse, _impl_.target_cluster_id_)}},
    // string response_timestamp = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(ClusterResponse, _impl_.response_timestamp_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string response_id = 1;
    {PROTOBUF_FIELD_OFFSET(ClusterResponse, _impl_.response_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string request_id = 2;
    {PROTOBUF_FIELD_OFFSET(ClusterResponse, _impl_.request_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.intercluster.ClusterResponseType response_type = 3;
    {PROTOBUF_FIELD_OFFSET(ClusterResponse, _impl_.response_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string origin_cluster_id = 4;
    {PROTOBUF_FIELD_OFFSET(ClusterResponse, _impl_.origin_cluster_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string target_cluster_id = 5;
    {PROTOBUF_FIELD_OFFSET(ClusterResponse, _impl_.target_cluster_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string response_timestamp = 6;
    {PROTOBUF_FIELD_OFFSET(ClusterResponse, _impl_.response_timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> response_metadata = 7;
    {PROTOBUF_FIELD_OFFSET(ClusterResponse, _impl_.response_metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string status_message = 8;
    {PROTOBUF_FIELD_OFFSET(ClusterResponse, _impl_.status_message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, bytes> payload = 9;
    {PROTOBUF_FIELD_OFFSET(ClusterResponse, _impl_.payload_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(ClusterResponse()._impl_.response_metadata_)>(
        1, 0, 0, 9,
        9)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(ClusterResponse()._impl_.payload_)>(
        1, 0, 0, 9,
        12)},
  }}, {{
    "\42\13\12\0\21\21\22\21\16\7\0\0\0\0\0\0"
    "seigr.intercluster.ClusterResponse"
    "response_id"
    "request_id"
    "origin_cluster_id"
    "target_cluster_id"
    "response_timestamp"
    "response_metadata"
    "status_message"
    "payload"
  }},
};

PROTOBUF_NOINLINE void ClusterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.intercluster.ClusterResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.response_metadata_.Clear();
  _impl_.payload_.Clear();
  _impl_.response_id_.ClearToEmpty();
  _impl_.request_id_.ClearToEmpty();
  _impl_.origin_cluster_id_.ClearToEmpty();
  _impl_.target_cluster_id_.ClearToEmpty();
  _impl_.response_timestamp_.ClearToEmpty();
  _impl_.status_message_.ClearToEmpty();
  _impl_.response_type_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ClusterResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ClusterResponse& this_ = static_cast<const ClusterResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ClusterResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ClusterResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.intercluster.ClusterResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string response_id = 1;
          if (!this_._internal_response_id().empty()) {
            const std::string& _s = this_._internal_response_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.ClusterResponse.response_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string request_id = 2;
          if (!this_._internal_request_id().empty()) {
            const std::string& _s = this_._internal_request_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.ClusterResponse.request_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // .seigr.intercluster.ClusterResponseType response_type = 3;
          if (this_._internal_response_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_response_type(), target);
          }

          // string origin_cluster_id = 4;
          if (!this_._internal_origin_cluster_id().empty()) {
            const std::string& _s = this_._internal_origin_cluster_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.ClusterResponse.origin_cluster_id");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string target_cluster_id = 5;
          if (!this_._internal_target_cluster_id().empty()) {
            const std::string& _s = this_._internal_target_cluster_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.ClusterResponse.target_cluster_id");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string response_timestamp = 6;
          if (!this_._internal_response_timestamp().empty()) {
            const std::string& _s = this_._internal_response_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.ClusterResponse.response_timestamp");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // map<string, string> response_metadata = 7;
          if (!this_._internal_response_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_response_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.ClusterResponse.response_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.ClusterResponse.response_metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.ClusterResponse.response_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.ClusterResponse.response_metadata");
              }
            }
          }

          // string status_message = 8;
          if (!this_._internal_status_message().empty()) {
            const std::string& _s = this_._internal_status_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.ClusterResponse.status_message");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          // map<string, bytes> payload = 9;
          if (!this_._internal_payload().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_BYTES>;
            const auto& field = this_._internal_payload();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    9, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.ClusterResponse.payload");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    9, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.ClusterResponse.payload");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.intercluster.ClusterResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ClusterResponse::ByteSizeLong(const MessageLite& base) {
          const ClusterResponse& this_ = static_cast<const ClusterResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ClusterResponse::ByteSizeLong() const {
          const ClusterResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.intercluster.ClusterResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> response_metadata = 7;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_response_metadata_size());
              for (const auto& entry : this_._internal_response_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // map<string, bytes> payload = 9;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_payload_size());
              for (const auto& entry : this_._internal_payload()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_BYTES>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string response_id = 1;
            if (!this_._internal_response_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_response_id());
            }
            // string request_id = 2;
            if (!this_._internal_request_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_request_id());
            }
            // string origin_cluster_id = 4;
            if (!this_._internal_origin_cluster_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_origin_cluster_id());
            }
            // string target_cluster_id = 5;
            if (!this_._internal_target_cluster_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_target_cluster_id());
            }
            // string response_timestamp = 6;
            if (!this_._internal_response_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_response_timestamp());
            }
            // string status_message = 8;
            if (!this_._internal_status_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_status_message());
            }
            // .seigr.intercluster.ClusterResponseType response_type = 3;
            if (this_._internal_response_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_response_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ClusterResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ClusterResponse*>(&to_msg);
  auto& from = static_cast<const ClusterResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.intercluster.ClusterResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.response_metadata_.MergeFrom(from._impl_.response_metadata_);
  _this->_impl_.payload_.MergeFrom(from._impl_.payload_);
  if (!from._internal_response_id().empty()) {
    _this->_internal_set_response_id(from._internal_response_id());
  }
  if (!from._internal_request_id().empty()) {
    _this->_internal_set_request_id(from._internal_request_id());
  }
  if (!from._internal_origin_cluster_id().empty()) {
    _this->_internal_set_origin_cluster_id(from._internal_origin_cluster_id());
  }
  if (!from._internal_target_cluster_id().empty()) {
    _this->_internal_set_target_cluster_id(from._internal_target_cluster_id());
  }
  if (!from._internal_response_timestamp().empty()) {
    _this->_internal_set_response_timestamp(from._internal_response_timestamp());
  }
  if (!from._internal_status_message().empty()) {
    _this->_internal_set_status_message(from._internal_status_message());
  }
  if (from._internal_response_type() != 0) {
    _this->_impl_.response_type_ = from._impl_.response_type_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ClusterResponse::CopyFrom(const ClusterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.intercluster.ClusterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ClusterResponse::InternalSwap(ClusterResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.response_metadata_.InternalSwap(&other->_impl_.response_metadata_);
  _impl_.payload_.InternalSwap(&other->_impl_.payload_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.response_id_, &other->_impl_.response_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.request_id_, &other->_impl_.request_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.origin_cluster_id_, &other->_impl_.origin_cluster_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.target_cluster_id_, &other->_impl_.target_cluster_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.response_timestamp_, &other->_impl_.response_timestamp_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.status_message_, &other->_impl_.status_message_, arena);
  swap(_impl_.response_type_, other->_impl_.response_type_);
}

::google::protobuf::Metadata ClusterResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              DataTransfer_TransferMetadataEntry_DoNotUse::DataTransfer_TransferMetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              DataTransfer_TransferMetadataEntry_DoNotUse::DataTransfer_TransferMetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              DataTransfer_TransferMetadataEntry_DoNotUse::DataTransfer_TransferMetadataEntry_DoNotUse() : SuperType() {}
              DataTransfer_TransferMetadataEntry_DoNotUse::DataTransfer_TransferMetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* DataTransfer_TransferMetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) DataTransfer_TransferMetadataEntry_DoNotUse(arena);
              }
              constexpr auto DataTransfer_TransferMetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(DataTransfer_TransferMetadataEntry_DoNotUse),
                                                          alignof(DataTransfer_TransferMetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull DataTransfer_TransferMetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_DataTransfer_TransferMetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &DataTransfer_TransferMetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<DataTransfer_TransferMetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &DataTransfer_TransferMetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &DataTransfer_TransferMetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(DataTransfer_TransferMetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &DataTransfer_TransferMetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_inter_5fcluster_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* DataTransfer_TransferMetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 70, 2> DataTransfer_TransferMetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DataTransfer_TransferMetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::intercluster::DataTransfer_TransferMetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DataTransfer_TransferMetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DataTransfer_TransferMetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(DataTransfer_TransferMetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(DataTransfer_TransferMetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\65\3\5\0\0\0\0\0"
    "seigr.intercluster.DataTransfer.TransferMetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class DataTransfer::_Internal {
 public:
};

DataTransfer::DataTransfer(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.intercluster.DataTransfer)
}
inline PROTOBUF_NDEBUG_INLINE DataTransfer::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::intercluster::DataTransfer& from_msg)
      : transfer_metadata_{visibility, arena, from.transfer_metadata_},
        transfer_id_(arena, from.transfer_id_),
        source_cluster_id_(arena, from.source_cluster_id_),
        destination_cluster_id_(arena, from.destination_cluster_id_),
        data_payload_(arena, from.data_payload_),
        data_type_(arena, from.data_type_),
        encryption_scheme_(arena, from.encryption_scheme_),
        compression_method_(arena, from.compression_method_),
        transfer_format_(arena, from.transfer_format_),
        _cached_size_{0} {}

DataTransfer::DataTransfer(
    ::google::protobuf::Arena* arena,
    const DataTransfer& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DataTransfer* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, data_size_bytes_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, data_size_bytes_),
           offsetof(Impl_, transfer_timeout_) -
               offsetof(Impl_, data_size_bytes_) +
               sizeof(Impl_::transfer_timeout_));

  // @@protoc_insertion_point(copy_constructor:seigr.intercluster.DataTransfer)
}
inline PROTOBUF_NDEBUG_INLINE DataTransfer::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : transfer_metadata_{visibility, arena},
        transfer_id_(arena),
        source_cluster_id_(arena),
        destination_cluster_id_(arena),
        data_payload_(arena),
        data_type_(arena),
        encryption_scheme_(arena),
        compression_method_(arena),
        transfer_format_(arena),
        _cached_size_{0} {}

inline void DataTransfer::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, data_size_bytes_),
           0,
           offsetof(Impl_, transfer_timeout_) -
               offsetof(Impl_, data_size_bytes_) +
               sizeof(Impl_::transfer_timeout_));
}
DataTransfer::~DataTransfer() {
  // @@protoc_insertion_point(destructor:seigr.intercluster.DataTransfer)
  SharedDtor(*this);
}
inline void DataTransfer::SharedDtor(MessageLite& self) {
  DataTransfer& this_ = static_cast<DataTransfer&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.transfer_id_.Destroy();
  this_._impl_.source_cluster_id_.Destroy();
  this_._impl_.destination_cluster_id_.Destroy();
  this_._impl_.data_payload_.Destroy();
  this_._impl_.data_type_.Destroy();
  this_._impl_.encryption_scheme_.Destroy();
  this_._impl_.compression_method_.Destroy();
  this_._impl_.transfer_format_.Destroy();
  this_._impl_.~Impl_();
}

inline void* DataTransfer::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DataTransfer(arena);
}
constexpr auto DataTransfer::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(DataTransfer, _impl_.transfer_metadata_) +
          decltype(DataTransfer::_impl_.transfer_metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(DataTransfer, _impl_.transfer_metadata_) +
          decltype(DataTransfer::_impl_.transfer_metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(DataTransfer), alignof(DataTransfer), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&DataTransfer::PlacementNew_,
                                 sizeof(DataTransfer),
                                 alignof(DataTransfer));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DataTransfer::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DataTransfer_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DataTransfer::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DataTransfer>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DataTransfer::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DataTransfer>(), &DataTransfer::ByteSizeLong,
            &DataTransfer::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DataTransfer, _impl_._cached_size_),
        false,
    },
    &DataTransfer::kDescriptorMethods,
    &descriptor_table_inter_5fcluster_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DataTransfer::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 12, 1, 174, 2> DataTransfer::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    12, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963200,  // skipmap
    offsetof(decltype(_table_), field_entries),
    12,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::intercluster::DataTransfer>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string transfer_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DataTransfer, _impl_.transfer_id_)}},
    // string source_cluster_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DataTransfer, _impl_.source_cluster_id_)}},
    // string destination_cluster_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(DataTransfer, _impl_.destination_cluster_id_)}},
    // bytes data_payload = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(DataTransfer, _impl_.data_payload_)}},
    // string data_type = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(DataTransfer, _impl_.data_type_)}},
    // string encryption_scheme = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(DataTransfer, _impl_.encryption_scheme_)}},
    // string compression_method = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(DataTransfer, _impl_.compression_method_)}},
    // string transfer_format = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(DataTransfer, _impl_.transfer_format_)}},
    // int64 data_size_bytes = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DataTransfer, _impl_.data_size_bytes_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(DataTransfer, _impl_.data_size_bytes_)}},
    // bool validate_integrity = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(DataTransfer, _impl_.validate_integrity_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(DataTransfer, _impl_.validate_integrity_)}},
    // int32 transfer_timeout = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DataTransfer, _impl_.transfer_timeout_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(DataTransfer, _impl_.transfer_timeout_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string transfer_id = 1;
    {PROTOBUF_FIELD_OFFSET(DataTransfer, _impl_.transfer_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string source_cluster_id = 2;
    {PROTOBUF_FIELD_OFFSET(DataTransfer, _impl_.source_cluster_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string destination_cluster_id = 3;
    {PROTOBUF_FIELD_OFFSET(DataTransfer, _impl_.destination_cluster_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes data_payload = 4;
    {PROTOBUF_FIELD_OFFSET(DataTransfer, _impl_.data_payload_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // string data_type = 5;
    {PROTOBUF_FIELD_OFFSET(DataTransfer, _impl_.data_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string encryption_scheme = 6;
    {PROTOBUF_FIELD_OFFSET(DataTransfer, _impl_.encryption_scheme_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string compression_method = 7;
    {PROTOBUF_FIELD_OFFSET(DataTransfer, _impl_.compression_method_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string transfer_format = 8;
    {PROTOBUF_FIELD_OFFSET(DataTransfer, _impl_.transfer_format_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 data_size_bytes = 9;
    {PROTOBUF_FIELD_OFFSET(DataTransfer, _impl_.data_size_bytes_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // bool validate_integrity = 10;
    {PROTOBUF_FIELD_OFFSET(DataTransfer, _impl_.validate_integrity_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int32 transfer_timeout = 11;
    {PROTOBUF_FIELD_OFFSET(DataTransfer, _impl_.transfer_timeout_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // map<string, string> transfer_metadata = 12;
    {PROTOBUF_FIELD_OFFSET(DataTransfer, _impl_.transfer_metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(DataTransfer()._impl_.transfer_metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\37\13\21\26\0\11\21\22\17\0\0\0\21\0\0\0"
    "seigr.intercluster.DataTransfer"
    "transfer_id"
    "source_cluster_id"
    "destination_cluster_id"
    "data_type"
    "encryption_scheme"
    "compression_method"
    "transfer_format"
    "transfer_metadata"
  }},
};

PROTOBUF_NOINLINE void DataTransfer::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.intercluster.DataTransfer)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.transfer_metadata_.Clear();
  _impl_.transfer_id_.ClearToEmpty();
  _impl_.source_cluster_id_.ClearToEmpty();
  _impl_.destination_cluster_id_.ClearToEmpty();
  _impl_.data_payload_.ClearToEmpty();
  _impl_.data_type_.ClearToEmpty();
  _impl_.encryption_scheme_.ClearToEmpty();
  _impl_.compression_method_.ClearToEmpty();
  _impl_.transfer_format_.ClearToEmpty();
  ::memset(&_impl_.data_size_bytes_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.transfer_timeout_) -
      reinterpret_cast<char*>(&_impl_.data_size_bytes_)) + sizeof(_impl_.transfer_timeout_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DataTransfer::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DataTransfer& this_ = static_cast<const DataTransfer&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DataTransfer::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DataTransfer& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.intercluster.DataTransfer)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string transfer_id = 1;
          if (!this_._internal_transfer_id().empty()) {
            const std::string& _s = this_._internal_transfer_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.DataTransfer.transfer_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string source_cluster_id = 2;
          if (!this_._internal_source_cluster_id().empty()) {
            const std::string& _s = this_._internal_source_cluster_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.DataTransfer.source_cluster_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string destination_cluster_id = 3;
          if (!this_._internal_destination_cluster_id().empty()) {
            const std::string& _s = this_._internal_destination_cluster_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.DataTransfer.destination_cluster_id");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // bytes data_payload = 4;
          if (!this_._internal_data_payload().empty()) {
            const std::string& _s = this_._internal_data_payload();
            target = stream->WriteBytesMaybeAliased(4, _s, target);
          }

          // string data_type = 5;
          if (!this_._internal_data_type().empty()) {
            const std::string& _s = this_._internal_data_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.DataTransfer.data_type");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string encryption_scheme = 6;
          if (!this_._internal_encryption_scheme().empty()) {
            const std::string& _s = this_._internal_encryption_scheme();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.DataTransfer.encryption_scheme");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // string compression_method = 7;
          if (!this_._internal_compression_method().empty()) {
            const std::string& _s = this_._internal_compression_method();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.DataTransfer.compression_method");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // string transfer_format = 8;
          if (!this_._internal_transfer_format().empty()) {
            const std::string& _s = this_._internal_transfer_format();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.DataTransfer.transfer_format");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          // int64 data_size_bytes = 9;
          if (this_._internal_data_size_bytes() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<9>(
                    stream, this_._internal_data_size_bytes(), target);
          }

          // bool validate_integrity = 10;
          if (this_._internal_validate_integrity() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                10, this_._internal_validate_integrity(), target);
          }

          // int32 transfer_timeout = 11;
          if (this_._internal_transfer_timeout() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<11>(
                    stream, this_._internal_transfer_timeout(), target);
          }

          // map<string, string> transfer_metadata = 12;
          if (!this_._internal_transfer_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_transfer_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    12, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.DataTransfer.transfer_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.DataTransfer.transfer_metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    12, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.DataTransfer.transfer_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.DataTransfer.transfer_metadata");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.intercluster.DataTransfer)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DataTransfer::ByteSizeLong(const MessageLite& base) {
          const DataTransfer& this_ = static_cast<const DataTransfer&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DataTransfer::ByteSizeLong() const {
          const DataTransfer& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.intercluster.DataTransfer)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> transfer_metadata = 12;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_transfer_metadata_size());
              for (const auto& entry : this_._internal_transfer_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string transfer_id = 1;
            if (!this_._internal_transfer_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_transfer_id());
            }
            // string source_cluster_id = 2;
            if (!this_._internal_source_cluster_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_source_cluster_id());
            }
            // string destination_cluster_id = 3;
            if (!this_._internal_destination_cluster_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_destination_cluster_id());
            }
            // bytes data_payload = 4;
            if (!this_._internal_data_payload().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_data_payload());
            }
            // string data_type = 5;
            if (!this_._internal_data_type().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_data_type());
            }
            // string encryption_scheme = 6;
            if (!this_._internal_encryption_scheme().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_encryption_scheme());
            }
            // string compression_method = 7;
            if (!this_._internal_compression_method().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_compression_method());
            }
            // string transfer_format = 8;
            if (!this_._internal_transfer_format().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_transfer_format());
            }
            // int64 data_size_bytes = 9;
            if (this_._internal_data_size_bytes() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_data_size_bytes());
            }
            // bool validate_integrity = 10;
            if (this_._internal_validate_integrity() != 0) {
              total_size += 2;
            }
            // int32 transfer_timeout = 11;
            if (this_._internal_transfer_timeout() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_transfer_timeout());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DataTransfer::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DataTransfer*>(&to_msg);
  auto& from = static_cast<const DataTransfer&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.intercluster.DataTransfer)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.transfer_metadata_.MergeFrom(from._impl_.transfer_metadata_);
  if (!from._internal_transfer_id().empty()) {
    _this->_internal_set_transfer_id(from._internal_transfer_id());
  }
  if (!from._internal_source_cluster_id().empty()) {
    _this->_internal_set_source_cluster_id(from._internal_source_cluster_id());
  }
  if (!from._internal_destination_cluster_id().empty()) {
    _this->_internal_set_destination_cluster_id(from._internal_destination_cluster_id());
  }
  if (!from._internal_data_payload().empty()) {
    _this->_internal_set_data_payload(from._internal_data_payload());
  }
  if (!from._internal_data_type().empty()) {
    _this->_internal_set_data_type(from._internal_data_type());
  }
  if (!from._internal_encryption_scheme().empty()) {
    _this->_internal_set_encryption_scheme(from._internal_encryption_scheme());
  }
  if (!from._internal_compression_method().empty()) {
    _this->_internal_set_compression_method(from._internal_compression_method());
  }
  if (!from._internal_transfer_format().empty()) {
    _this->_internal_set_transfer_format(from._internal_transfer_format());
  }
  if (from._internal_data_size_bytes() != 0) {
    _this->_impl_.data_size_bytes_ = from._impl_.data_size_bytes_;
  }
  if (from._internal_validate_integrity() != 0) {
    _this->_impl_.validate_integrity_ = from._impl_.validate_integrity_;
  }
  if (from._internal_transfer_timeout() != 0) {
    _this->_impl_.transfer_timeout_ = from._impl_.transfer_timeout_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DataTransfer::CopyFrom(const DataTransfer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.intercluster.DataTransfer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DataTransfer::InternalSwap(DataTransfer* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.transfer_metadata_.InternalSwap(&other->_impl_.transfer_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.transfer_id_, &other->_impl_.transfer_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.source_cluster_id_, &other->_impl_.source_cluster_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.destination_cluster_id_, &other->_impl_.destination_cluster_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_payload_, &other->_impl_.data_payload_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_type_, &other->_impl_.data_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.encryption_scheme_, &other->_impl_.encryption_scheme_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.compression_method_, &other->_impl_.compression_method_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.transfer_format_, &other->_impl_.transfer_format_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DataTransfer, _impl_.transfer_timeout_)
      + sizeof(DataTransfer::_impl_.transfer_timeout_)
      - PROTOBUF_FIELD_OFFSET(DataTransfer, _impl_.data_size_bytes_)>(
          reinterpret_cast<char*>(&_impl_.data_size_bytes_),
          reinterpret_cast<char*>(&other->_impl_.data_size_bytes_));
}

::google::protobuf::Metadata DataTransfer::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUse::ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUse::ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUse::ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUse() : SuperType() {}
              ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUse::ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUse(arena);
              }
              constexpr auto ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUse),
                                                          alignof(ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_inter_5fcluster_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 86, 2> ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::intercluster::ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(ClusterEventSubscription_SubscriptionMetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\105\3\5\0\0\0\0\0"
    "seigr.intercluster.ClusterEventSubscription.SubscriptionMetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class ClusterEventSubscription::_Internal {
 public:
};

ClusterEventSubscription::ClusterEventSubscription(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.intercluster.ClusterEventSubscription)
}
inline PROTOBUF_NDEBUG_INLINE ClusterEventSubscription::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::intercluster::ClusterEventSubscription& from_msg)
      : subscribed_events_{visibility, arena, from.subscribed_events_},
        _subscribed_events_cached_byte_size_{0},
        subscription_metadata_{visibility, arena, from.subscription_metadata_},
        subscription_id_(arena, from.subscription_id_),
        subscriber_cluster_id_(arena, from.subscriber_cluster_id_),
        created_at_(arena, from.created_at_),
        _cached_size_{0} {}

ClusterEventSubscription::ClusterEventSubscription(
    ::google::protobuf::Arena* arena,
    const ClusterEventSubscription& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ClusterEventSubscription* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.receive_async_notifications_ = from._impl_.receive_async_notifications_;

  // @@protoc_insertion_point(copy_constructor:seigr.intercluster.ClusterEventSubscription)
}
inline PROTOBUF_NDEBUG_INLINE ClusterEventSubscription::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : subscribed_events_{visibility, arena},
        _subscribed_events_cached_byte_size_{0},
        subscription_metadata_{visibility, arena},
        subscription_id_(arena),
        subscriber_cluster_id_(arena),
        created_at_(arena),
        _cached_size_{0} {}

inline void ClusterEventSubscription::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.receive_async_notifications_ = {};
}
ClusterEventSubscription::~ClusterEventSubscription() {
  // @@protoc_insertion_point(destructor:seigr.intercluster.ClusterEventSubscription)
  SharedDtor(*this);
}
inline void ClusterEventSubscription::SharedDtor(MessageLite& self) {
  ClusterEventSubscription& this_ = static_cast<ClusterEventSubscription&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.subscription_id_.Destroy();
  this_._impl_.subscriber_cluster_id_.Destroy();
  this_._impl_.created_at_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ClusterEventSubscription::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ClusterEventSubscription(arena);
}
constexpr auto ClusterEventSubscription::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ClusterEventSubscription, _impl_.subscribed_events_) +
          decltype(ClusterEventSubscription::_impl_.subscribed_events_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ClusterEventSubscription, _impl_.subscription_metadata_) +
          decltype(ClusterEventSubscription::_impl_.subscription_metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ClusterEventSubscription, _impl_.subscription_metadata_) +
          decltype(ClusterEventSubscription::_impl_.subscription_metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ClusterEventSubscription), alignof(ClusterEventSubscription), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ClusterEventSubscription::PlacementNew_,
                                 sizeof(ClusterEventSubscription),
                                 alignof(ClusterEventSubscription));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ClusterEventSubscription::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ClusterEventSubscription_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ClusterEventSubscription::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ClusterEventSubscription>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ClusterEventSubscription::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ClusterEventSubscription>(), &ClusterEventSubscription::ByteSizeLong,
            &ClusterEventSubscription::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ClusterEventSubscription, _impl_._cached_size_),
        false,
    },
    &ClusterEventSubscription::kDescriptorMethods,
    &descriptor_table_inter_5fcluster_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ClusterEventSubscription::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 119, 2> ClusterEventSubscription::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::intercluster::ClusterEventSubscription>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string subscription_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ClusterEventSubscription, _impl_.subscription_id_)}},
    // string subscriber_cluster_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ClusterEventSubscription, _impl_.subscriber_cluster_id_)}},
    // repeated .seigr.intercluster.ClusterRequestType subscribed_events = 3;
    {::_pbi::TcParser::FastV32P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ClusterEventSubscription, _impl_.subscribed_events_)}},
    // bool receive_async_notifications = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ClusterEventSubscription, _impl_.receive_async_notifications_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(ClusterEventSubscription, _impl_.receive_async_notifications_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string created_at = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(ClusterEventSubscription, _impl_.created_at_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string subscription_id = 1;
    {PROTOBUF_FIELD_OFFSET(ClusterEventSubscription, _impl_.subscription_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string subscriber_cluster_id = 2;
    {PROTOBUF_FIELD_OFFSET(ClusterEventSubscription, _impl_.subscriber_cluster_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .seigr.intercluster.ClusterRequestType subscribed_events = 3;
    {PROTOBUF_FIELD_OFFSET(ClusterEventSubscription, _impl_.subscribed_events_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // bool receive_async_notifications = 4;
    {PROTOBUF_FIELD_OFFSET(ClusterEventSubscription, _impl_.receive_async_notifications_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // map<string, string> subscription_metadata = 5;
    {PROTOBUF_FIELD_OFFSET(ClusterEventSubscription, _impl_.subscription_metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string created_at = 6;
    {PROTOBUF_FIELD_OFFSET(ClusterEventSubscription, _impl_.created_at_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(ClusterEventSubscription()._impl_.subscription_metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\53\17\25\0\0\25\12\0"
    "seigr.intercluster.ClusterEventSubscription"
    "subscription_id"
    "subscriber_cluster_id"
    "subscription_metadata"
    "created_at"
  }},
};

PROTOBUF_NOINLINE void ClusterEventSubscription::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.intercluster.ClusterEventSubscription)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.subscribed_events_.Clear();
  _impl_.subscription_metadata_.Clear();
  _impl_.subscription_id_.ClearToEmpty();
  _impl_.subscriber_cluster_id_.ClearToEmpty();
  _impl_.created_at_.ClearToEmpty();
  _impl_.receive_async_notifications_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ClusterEventSubscription::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ClusterEventSubscription& this_ = static_cast<const ClusterEventSubscription&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ClusterEventSubscription::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ClusterEventSubscription& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.intercluster.ClusterEventSubscription)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string subscription_id = 1;
          if (!this_._internal_subscription_id().empty()) {
            const std::string& _s = this_._internal_subscription_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.ClusterEventSubscription.subscription_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string subscriber_cluster_id = 2;
          if (!this_._internal_subscriber_cluster_id().empty()) {
            const std::string& _s = this_._internal_subscriber_cluster_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.ClusterEventSubscription.subscriber_cluster_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // repeated .seigr.intercluster.ClusterRequestType subscribed_events = 3;
          {
            std::size_t byte_size =
                                              this_._impl_._subscribed_events_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteEnumPacked(
                  3, this_._internal_subscribed_events(), byte_size, target);
            }
          }

          // bool receive_async_notifications = 4;
          if (this_._internal_receive_async_notifications() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_receive_async_notifications(), target);
          }

          // map<string, string> subscription_metadata = 5;
          if (!this_._internal_subscription_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_subscription_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    5, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.ClusterEventSubscription.subscription_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.ClusterEventSubscription.subscription_metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    5, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.ClusterEventSubscription.subscription_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.ClusterEventSubscription.subscription_metadata");
              }
            }
          }

          // string created_at = 6;
          if (!this_._internal_created_at().empty()) {
            const std::string& _s = this_._internal_created_at();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.ClusterEventSubscription.created_at");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.intercluster.ClusterEventSubscription)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ClusterEventSubscription::ByteSizeLong(const MessageLite& base) {
          const ClusterEventSubscription& this_ = static_cast<const ClusterEventSubscription&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ClusterEventSubscription::ByteSizeLong() const {
          const ClusterEventSubscription& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.intercluster.ClusterEventSubscription)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .seigr.intercluster.ClusterRequestType subscribed_events = 3;
            {
              total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
                  this_._internal_subscribed_events(), 1, this_._impl_._subscribed_events_cached_byte_size_);
            }
            // map<string, string> subscription_metadata = 5;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_subscription_metadata_size());
              for (const auto& entry : this_._internal_subscription_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string subscription_id = 1;
            if (!this_._internal_subscription_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_subscription_id());
            }
            // string subscriber_cluster_id = 2;
            if (!this_._internal_subscriber_cluster_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_subscriber_cluster_id());
            }
            // string created_at = 6;
            if (!this_._internal_created_at().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_created_at());
            }
            // bool receive_async_notifications = 4;
            if (this_._internal_receive_async_notifications() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ClusterEventSubscription::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ClusterEventSubscription*>(&to_msg);
  auto& from = static_cast<const ClusterEventSubscription&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.intercluster.ClusterEventSubscription)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_subscribed_events()->MergeFrom(from._internal_subscribed_events());
  _this->_impl_.subscription_metadata_.MergeFrom(from._impl_.subscription_metadata_);
  if (!from._internal_subscription_id().empty()) {
    _this->_internal_set_subscription_id(from._internal_subscription_id());
  }
  if (!from._internal_subscriber_cluster_id().empty()) {
    _this->_internal_set_subscriber_cluster_id(from._internal_subscriber_cluster_id());
  }
  if (!from._internal_created_at().empty()) {
    _this->_internal_set_created_at(from._internal_created_at());
  }
  if (from._internal_receive_async_notifications() != 0) {
    _this->_impl_.receive_async_notifications_ = from._impl_.receive_async_notifications_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ClusterEventSubscription::CopyFrom(const ClusterEventSubscription& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.intercluster.ClusterEventSubscription)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ClusterEventSubscription::InternalSwap(ClusterEventSubscription* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.subscribed_events_.InternalSwap(&other->_impl_.subscribed_events_);
  _impl_.subscription_metadata_.InternalSwap(&other->_impl_.subscription_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.subscription_id_, &other->_impl_.subscription_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.subscriber_cluster_id_, &other->_impl_.subscriber_cluster_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.created_at_, &other->_impl_.created_at_, arena);
        swap(_impl_.receive_async_notifications_, other->_impl_.receive_async_notifications_);
}

::google::protobuf::Metadata ClusterEventSubscription::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              TransferStatus_StatusMetadataEntry_DoNotUse::TransferStatus_StatusMetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              TransferStatus_StatusMetadataEntry_DoNotUse::TransferStatus_StatusMetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              TransferStatus_StatusMetadataEntry_DoNotUse::TransferStatus_StatusMetadataEntry_DoNotUse() : SuperType() {}
              TransferStatus_StatusMetadataEntry_DoNotUse::TransferStatus_StatusMetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* TransferStatus_StatusMetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) TransferStatus_StatusMetadataEntry_DoNotUse(arena);
              }
              constexpr auto TransferStatus_StatusMetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TransferStatus_StatusMetadataEntry_DoNotUse),
                                                          alignof(TransferStatus_StatusMetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull TransferStatus_StatusMetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_TransferStatus_StatusMetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &TransferStatus_StatusMetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<TransferStatus_StatusMetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &TransferStatus_StatusMetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &TransferStatus_StatusMetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(TransferStatus_StatusMetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &TransferStatus_StatusMetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_inter_5fcluster_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* TransferStatus_StatusMetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 70, 2> TransferStatus_StatusMetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TransferStatus_StatusMetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::intercluster::TransferStatus_StatusMetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(TransferStatus_StatusMetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TransferStatus_StatusMetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(TransferStatus_StatusMetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(TransferStatus_StatusMetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\65\3\5\0\0\0\0\0"
    "seigr.intercluster.TransferStatus.StatusMetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class TransferStatus::_Internal {
 public:
};

TransferStatus::TransferStatus(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.intercluster.TransferStatus)
}
inline PROTOBUF_NDEBUG_INLINE TransferStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::intercluster::TransferStatus& from_msg)
      : status_metadata_{visibility, arena, from.status_metadata_},
        transfer_id_(arena, from.transfer_id_),
        current_status_(arena, from.current_status_),
        last_updated_(arena, from.last_updated_),
        source_cluster_id_(arena, from.source_cluster_id_),
        destination_cluster_id_(arena, from.destination_cluster_id_),
        _cached_size_{0} {}

TransferStatus::TransferStatus(
    ::google::protobuf::Arena* arena,
    const TransferStatus& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TransferStatus* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.progress_percentage_ = from._impl_.progress_percentage_;

  // @@protoc_insertion_point(copy_constructor:seigr.intercluster.TransferStatus)
}
inline PROTOBUF_NDEBUG_INLINE TransferStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : status_metadata_{visibility, arena},
        transfer_id_(arena),
        current_status_(arena),
        last_updated_(arena),
        source_cluster_id_(arena),
        destination_cluster_id_(arena),
        _cached_size_{0} {}

inline void TransferStatus::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.progress_percentage_ = {};
}
TransferStatus::~TransferStatus() {
  // @@protoc_insertion_point(destructor:seigr.intercluster.TransferStatus)
  SharedDtor(*this);
}
inline void TransferStatus::SharedDtor(MessageLite& self) {
  TransferStatus& this_ = static_cast<TransferStatus&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.transfer_id_.Destroy();
  this_._impl_.current_status_.Destroy();
  this_._impl_.last_updated_.Destroy();
  this_._impl_.source_cluster_id_.Destroy();
  this_._impl_.destination_cluster_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* TransferStatus::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TransferStatus(arena);
}
constexpr auto TransferStatus::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(TransferStatus, _impl_.status_metadata_) +
          decltype(TransferStatus::_impl_.status_metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TransferStatus, _impl_.status_metadata_) +
          decltype(TransferStatus::_impl_.status_metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(TransferStatus), alignof(TransferStatus), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&TransferStatus::PlacementNew_,
                                 sizeof(TransferStatus),
                                 alignof(TransferStatus));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TransferStatus::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TransferStatus_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TransferStatus::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TransferStatus>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TransferStatus::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TransferStatus>(), &TransferStatus::ByteSizeLong,
            &TransferStatus::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TransferStatus, _impl_._cached_size_),
        false,
    },
    &TransferStatus::kDescriptorMethods,
    &descriptor_table_inter_5fcluster_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TransferStatus::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 1, 133, 2> TransferStatus::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::intercluster::TransferStatus>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string transfer_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TransferStatus, _impl_.transfer_id_)}},
    // string current_status = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(TransferStatus, _impl_.current_status_)}},
    // string last_updated = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(TransferStatus, _impl_.last_updated_)}},
    // double progress_percentage = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(TransferStatus, _impl_.progress_percentage_)}},
    // string source_cluster_id = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(TransferStatus, _impl_.source_cluster_id_)}},
    // string destination_cluster_id = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(TransferStatus, _impl_.destination_cluster_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string transfer_id = 1;
    {PROTOBUF_FIELD_OFFSET(TransferStatus, _impl_.transfer_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string current_status = 2;
    {PROTOBUF_FIELD_OFFSET(TransferStatus, _impl_.current_status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string last_updated = 3;
    {PROTOBUF_FIELD_OFFSET(TransferStatus, _impl_.last_updated_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double progress_percentage = 4;
    {PROTOBUF_FIELD_OFFSET(TransferStatus, _impl_.progress_percentage_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // string source_cluster_id = 5;
    {PROTOBUF_FIELD_OFFSET(TransferStatus, _impl_.source_cluster_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string destination_cluster_id = 6;
    {PROTOBUF_FIELD_OFFSET(TransferStatus, _impl_.destination_cluster_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> status_metadata = 7;
    {PROTOBUF_FIELD_OFFSET(TransferStatus, _impl_.status_metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(TransferStatus()._impl_.status_metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\41\13\16\14\0\21\26\17"
    "seigr.intercluster.TransferStatus"
    "transfer_id"
    "current_status"
    "last_updated"
    "source_cluster_id"
    "destination_cluster_id"
    "status_metadata"
  }},
};

PROTOBUF_NOINLINE void TransferStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.intercluster.TransferStatus)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.status_metadata_.Clear();
  _impl_.transfer_id_.ClearToEmpty();
  _impl_.current_status_.ClearToEmpty();
  _impl_.last_updated_.ClearToEmpty();
  _impl_.source_cluster_id_.ClearToEmpty();
  _impl_.destination_cluster_id_.ClearToEmpty();
  _impl_.progress_percentage_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TransferStatus::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TransferStatus& this_ = static_cast<const TransferStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TransferStatus::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TransferStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.intercluster.TransferStatus)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string transfer_id = 1;
          if (!this_._internal_transfer_id().empty()) {
            const std::string& _s = this_._internal_transfer_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.TransferStatus.transfer_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string current_status = 2;
          if (!this_._internal_current_status().empty()) {
            const std::string& _s = this_._internal_current_status();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.TransferStatus.current_status");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string last_updated = 3;
          if (!this_._internal_last_updated().empty()) {
            const std::string& _s = this_._internal_last_updated();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.TransferStatus.last_updated");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // double progress_percentage = 4;
          if (::absl::bit_cast<::uint64_t>(this_._internal_progress_percentage()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                4, this_._internal_progress_percentage(), target);
          }

          // string source_cluster_id = 5;
          if (!this_._internal_source_cluster_id().empty()) {
            const std::string& _s = this_._internal_source_cluster_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.TransferStatus.source_cluster_id");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string destination_cluster_id = 6;
          if (!this_._internal_destination_cluster_id().empty()) {
            const std::string& _s = this_._internal_destination_cluster_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.TransferStatus.destination_cluster_id");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // map<string, string> status_metadata = 7;
          if (!this_._internal_status_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_status_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.TransferStatus.status_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.TransferStatus.status_metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.TransferStatus.status_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.TransferStatus.status_metadata");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.intercluster.TransferStatus)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TransferStatus::ByteSizeLong(const MessageLite& base) {
          const TransferStatus& this_ = static_cast<const TransferStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TransferStatus::ByteSizeLong() const {
          const TransferStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.intercluster.TransferStatus)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> status_metadata = 7;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_status_metadata_size());
              for (const auto& entry : this_._internal_status_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string transfer_id = 1;
            if (!this_._internal_transfer_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_transfer_id());
            }
            // string current_status = 2;
            if (!this_._internal_current_status().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_current_status());
            }
            // string last_updated = 3;
            if (!this_._internal_last_updated().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_last_updated());
            }
            // string source_cluster_id = 5;
            if (!this_._internal_source_cluster_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_source_cluster_id());
            }
            // string destination_cluster_id = 6;
            if (!this_._internal_destination_cluster_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_destination_cluster_id());
            }
            // double progress_percentage = 4;
            if (::absl::bit_cast<::uint64_t>(this_._internal_progress_percentage()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TransferStatus::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TransferStatus*>(&to_msg);
  auto& from = static_cast<const TransferStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.intercluster.TransferStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.status_metadata_.MergeFrom(from._impl_.status_metadata_);
  if (!from._internal_transfer_id().empty()) {
    _this->_internal_set_transfer_id(from._internal_transfer_id());
  }
  if (!from._internal_current_status().empty()) {
    _this->_internal_set_current_status(from._internal_current_status());
  }
  if (!from._internal_last_updated().empty()) {
    _this->_internal_set_last_updated(from._internal_last_updated());
  }
  if (!from._internal_source_cluster_id().empty()) {
    _this->_internal_set_source_cluster_id(from._internal_source_cluster_id());
  }
  if (!from._internal_destination_cluster_id().empty()) {
    _this->_internal_set_destination_cluster_id(from._internal_destination_cluster_id());
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_progress_percentage()) != 0) {
    _this->_impl_.progress_percentage_ = from._impl_.progress_percentage_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TransferStatus::CopyFrom(const TransferStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.intercluster.TransferStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TransferStatus::InternalSwap(TransferStatus* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.status_metadata_.InternalSwap(&other->_impl_.status_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.transfer_id_, &other->_impl_.transfer_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.current_status_, &other->_impl_.current_status_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.last_updated_, &other->_impl_.last_updated_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.source_cluster_id_, &other->_impl_.source_cluster_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.destination_cluster_id_, &other->_impl_.destination_cluster_id_, arena);
        swap(_impl_.progress_percentage_, other->_impl_.progress_percentage_);
}

::google::protobuf::Metadata TransferStatus::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUse::ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUse::ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUse::ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUse() : SuperType() {}
              ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUse::ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUse(arena);
              }
              constexpr auto ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUse),
                                                          alignof(ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_inter_5fcluster_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 83, 2> ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::intercluster::ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(ClusterCommunicationErrorLog_ErrorMetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\102\3\5\0\0\0\0\0"
    "seigr.intercluster.ClusterCommunicationErrorLog.ErrorMetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class ClusterCommunicationErrorLog::_Internal {
 public:
};

ClusterCommunicationErrorLog::ClusterCommunicationErrorLog(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.intercluster.ClusterCommunicationErrorLog)
}
inline PROTOBUF_NDEBUG_INLINE ClusterCommunicationErrorLog::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::intercluster::ClusterCommunicationErrorLog& from_msg)
      : error_metadata_{visibility, arena, from.error_metadata_},
        error_id_(arena, from.error_id_),
        affected_cluster_id_(arena, from.affected_cluster_id_),
        timestamp_(arena, from.timestamp_),
        error_message_(arena, from.error_message_),
        request_id_(arena, from.request_id_),
        response_id_(arena, from.response_id_),
        _cached_size_{0} {}

ClusterCommunicationErrorLog::ClusterCommunicationErrorLog(
    ::google::protobuf::Arena* arena,
    const ClusterCommunicationErrorLog& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ClusterCommunicationErrorLog* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:seigr.intercluster.ClusterCommunicationErrorLog)
}
inline PROTOBUF_NDEBUG_INLINE ClusterCommunicationErrorLog::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : error_metadata_{visibility, arena},
        error_id_(arena),
        affected_cluster_id_(arena),
        timestamp_(arena),
        error_message_(arena),
        request_id_(arena),
        response_id_(arena),
        _cached_size_{0} {}

inline void ClusterCommunicationErrorLog::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ClusterCommunicationErrorLog::~ClusterCommunicationErrorLog() {
  // @@protoc_insertion_point(destructor:seigr.intercluster.ClusterCommunicationErrorLog)
  SharedDtor(*this);
}
inline void ClusterCommunicationErrorLog::SharedDtor(MessageLite& self) {
  ClusterCommunicationErrorLog& this_ = static_cast<ClusterCommunicationErrorLog&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.error_id_.Destroy();
  this_._impl_.affected_cluster_id_.Destroy();
  this_._impl_.timestamp_.Destroy();
  this_._impl_.error_message_.Destroy();
  this_._impl_.request_id_.Destroy();
  this_._impl_.response_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ClusterCommunicationErrorLog::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ClusterCommunicationErrorLog(arena);
}
constexpr auto ClusterCommunicationErrorLog::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ClusterCommunicationErrorLog, _impl_.error_metadata_) +
          decltype(ClusterCommunicationErrorLog::_impl_.error_metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ClusterCommunicationErrorLog, _impl_.error_metadata_) +
          decltype(ClusterCommunicationErrorLog::_impl_.error_metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ClusterCommunicationErrorLog), alignof(ClusterCommunicationErrorLog), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ClusterCommunicationErrorLog::PlacementNew_,
                                 sizeof(ClusterCommunicationErrorLog),
                                 alignof(ClusterCommunicationErrorLog));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ClusterCommunicationErrorLog::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ClusterCommunicationErrorLog_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ClusterCommunicationErrorLog::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ClusterCommunicationErrorLog>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ClusterCommunicationErrorLog::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ClusterCommunicationErrorLog>(), &ClusterCommunicationErrorLog::ByteSizeLong,
            &ClusterCommunicationErrorLog::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ClusterCommunicationErrorLog, _impl_._cached_size_),
        false,
    },
    &ClusterCommunicationErrorLog::kDescriptorMethods,
    &descriptor_table_inter_5fcluster_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ClusterCommunicationErrorLog::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 1, 140, 2> ClusterCommunicationErrorLog::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::intercluster::ClusterCommunicationErrorLog>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string error_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ClusterCommunicationErrorLog, _impl_.error_id_)}},
    // string affected_cluster_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ClusterCommunicationErrorLog, _impl_.affected_cluster_id_)}},
    // string timestamp = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ClusterCommunicationErrorLog, _impl_.timestamp_)}},
    // string error_message = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ClusterCommunicationErrorLog, _impl_.error_message_)}},
    // string request_id = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(ClusterCommunicationErrorLog, _impl_.request_id_)}},
    // string response_id = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(ClusterCommunicationErrorLog, _impl_.response_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string error_id = 1;
    {PROTOBUF_FIELD_OFFSET(ClusterCommunicationErrorLog, _impl_.error_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string affected_cluster_id = 2;
    {PROTOBUF_FIELD_OFFSET(ClusterCommunicationErrorLog, _impl_.affected_cluster_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string timestamp = 3;
    {PROTOBUF_FIELD_OFFSET(ClusterCommunicationErrorLog, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string error_message = 4;
    {PROTOBUF_FIELD_OFFSET(ClusterCommunicationErrorLog, _impl_.error_message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string request_id = 5;
    {PROTOBUF_FIELD_OFFSET(ClusterCommunicationErrorLog, _impl_.request_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string response_id = 6;
    {PROTOBUF_FIELD_OFFSET(ClusterCommunicationErrorLog, _impl_.response_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> error_metadata = 7;
    {PROTOBUF_FIELD_OFFSET(ClusterCommunicationErrorLog, _impl_.error_metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(ClusterCommunicationErrorLog()._impl_.error_metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\57\10\23\11\15\12\13\16"
    "seigr.intercluster.ClusterCommunicationErrorLog"
    "error_id"
    "affected_cluster_id"
    "timestamp"
    "error_message"
    "request_id"
    "response_id"
    "error_metadata"
  }},
};

PROTOBUF_NOINLINE void ClusterCommunicationErrorLog::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.intercluster.ClusterCommunicationErrorLog)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_metadata_.Clear();
  _impl_.error_id_.ClearToEmpty();
  _impl_.affected_cluster_id_.ClearToEmpty();
  _impl_.timestamp_.ClearToEmpty();
  _impl_.error_message_.ClearToEmpty();
  _impl_.request_id_.ClearToEmpty();
  _impl_.response_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ClusterCommunicationErrorLog::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ClusterCommunicationErrorLog& this_ = static_cast<const ClusterCommunicationErrorLog&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ClusterCommunicationErrorLog::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ClusterCommunicationErrorLog& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.intercluster.ClusterCommunicationErrorLog)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string error_id = 1;
          if (!this_._internal_error_id().empty()) {
            const std::string& _s = this_._internal_error_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.ClusterCommunicationErrorLog.error_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string affected_cluster_id = 2;
          if (!this_._internal_affected_cluster_id().empty()) {
            const std::string& _s = this_._internal_affected_cluster_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.ClusterCommunicationErrorLog.affected_cluster_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string timestamp = 3;
          if (!this_._internal_timestamp().empty()) {
            const std::string& _s = this_._internal_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.ClusterCommunicationErrorLog.timestamp");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string error_message = 4;
          if (!this_._internal_error_message().empty()) {
            const std::string& _s = this_._internal_error_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.ClusterCommunicationErrorLog.error_message");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string request_id = 5;
          if (!this_._internal_request_id().empty()) {
            const std::string& _s = this_._internal_request_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.ClusterCommunicationErrorLog.request_id");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string response_id = 6;
          if (!this_._internal_response_id().empty()) {
            const std::string& _s = this_._internal_response_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.ClusterCommunicationErrorLog.response_id");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // map<string, string> error_metadata = 7;
          if (!this_._internal_error_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_error_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.ClusterCommunicationErrorLog.error_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.ClusterCommunicationErrorLog.error_metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.ClusterCommunicationErrorLog.error_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.ClusterCommunicationErrorLog.error_metadata");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.intercluster.ClusterCommunicationErrorLog)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ClusterCommunicationErrorLog::ByteSizeLong(const MessageLite& base) {
          const ClusterCommunicationErrorLog& this_ = static_cast<const ClusterCommunicationErrorLog&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ClusterCommunicationErrorLog::ByteSizeLong() const {
          const ClusterCommunicationErrorLog& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.intercluster.ClusterCommunicationErrorLog)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> error_metadata = 7;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_error_metadata_size());
              for (const auto& entry : this_._internal_error_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string error_id = 1;
            if (!this_._internal_error_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_error_id());
            }
            // string affected_cluster_id = 2;
            if (!this_._internal_affected_cluster_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_affected_cluster_id());
            }
            // string timestamp = 3;
            if (!this_._internal_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_timestamp());
            }
            // string error_message = 4;
            if (!this_._internal_error_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_error_message());
            }
            // string request_id = 5;
            if (!this_._internal_request_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_request_id());
            }
            // string response_id = 6;
            if (!this_._internal_response_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_response_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ClusterCommunicationErrorLog::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ClusterCommunicationErrorLog*>(&to_msg);
  auto& from = static_cast<const ClusterCommunicationErrorLog&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.intercluster.ClusterCommunicationErrorLog)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.error_metadata_.MergeFrom(from._impl_.error_metadata_);
  if (!from._internal_error_id().empty()) {
    _this->_internal_set_error_id(from._internal_error_id());
  }
  if (!from._internal_affected_cluster_id().empty()) {
    _this->_internal_set_affected_cluster_id(from._internal_affected_cluster_id());
  }
  if (!from._internal_timestamp().empty()) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (!from._internal_error_message().empty()) {
    _this->_internal_set_error_message(from._internal_error_message());
  }
  if (!from._internal_request_id().empty()) {
    _this->_internal_set_request_id(from._internal_request_id());
  }
  if (!from._internal_response_id().empty()) {
    _this->_internal_set_response_id(from._internal_response_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ClusterCommunicationErrorLog::CopyFrom(const ClusterCommunicationErrorLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.intercluster.ClusterCommunicationErrorLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ClusterCommunicationErrorLog::InternalSwap(ClusterCommunicationErrorLog* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.error_metadata_.InternalSwap(&other->_impl_.error_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_id_, &other->_impl_.error_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.affected_cluster_id_, &other->_impl_.affected_cluster_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.timestamp_, &other->_impl_.timestamp_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_message_, &other->_impl_.error_message_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.request_id_, &other->_impl_.request_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.response_id_, &other->_impl_.response_id_, arena);
}

::google::protobuf::Metadata ClusterCommunicationErrorLog::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ClusterResponseAck::_Internal {
 public:
};

ClusterResponseAck::ClusterResponseAck(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.intercluster.ClusterResponseAck)
}
inline PROTOBUF_NDEBUG_INLINE ClusterResponseAck::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::intercluster::ClusterResponseAck& from_msg)
      : message_(arena, from.message_),
        response_id_(arena, from.response_id_),
        _cached_size_{0} {}

ClusterResponseAck::ClusterResponseAck(
    ::google::protobuf::Arena* arena,
    const ClusterResponseAck& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ClusterResponseAck* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:seigr.intercluster.ClusterResponseAck)
}
inline PROTOBUF_NDEBUG_INLINE ClusterResponseAck::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_(arena),
        response_id_(arena),
        _cached_size_{0} {}

inline void ClusterResponseAck::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
ClusterResponseAck::~ClusterResponseAck() {
  // @@protoc_insertion_point(destructor:seigr.intercluster.ClusterResponseAck)
  SharedDtor(*this);
}
inline void ClusterResponseAck::SharedDtor(MessageLite& self) {
  ClusterResponseAck& this_ = static_cast<ClusterResponseAck&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  this_._impl_.response_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ClusterResponseAck::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ClusterResponseAck(arena);
}
constexpr auto ClusterResponseAck::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ClusterResponseAck),
                                            alignof(ClusterResponseAck));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ClusterResponseAck::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ClusterResponseAck_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ClusterResponseAck::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ClusterResponseAck>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ClusterResponseAck::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ClusterResponseAck>(), &ClusterResponseAck::ByteSizeLong,
            &ClusterResponseAck::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ClusterResponseAck, _impl_._cached_size_),
        false,
    },
    &ClusterResponseAck::kDescriptorMethods,
    &descriptor_table_inter_5fcluster_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ClusterResponseAck::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 64, 2> ClusterResponseAck::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::intercluster::ClusterResponseAck>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ClusterResponseAck, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ClusterResponseAck, _impl_.success_)}},
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ClusterResponseAck, _impl_.message_)}},
    // string response_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ClusterResponseAck, _impl_.response_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(ClusterResponseAck, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(ClusterResponseAck, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string response_id = 3;
    {PROTOBUF_FIELD_OFFSET(ClusterResponseAck, _impl_.response_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\45\0\7\13\0\0\0\0"
    "seigr.intercluster.ClusterResponseAck"
    "message"
    "response_id"
  }},
};

PROTOBUF_NOINLINE void ClusterResponseAck::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.intercluster.ClusterResponseAck)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _impl_.response_id_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ClusterResponseAck::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ClusterResponseAck& this_ = static_cast<const ClusterResponseAck&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ClusterResponseAck::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ClusterResponseAck& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.intercluster.ClusterResponseAck)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool success = 1;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_success(), target);
          }

          // string message = 2;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.ClusterResponseAck.message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string response_id = 3;
          if (!this_._internal_response_id().empty()) {
            const std::string& _s = this_._internal_response_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.ClusterResponseAck.response_id");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.intercluster.ClusterResponseAck)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ClusterResponseAck::ByteSizeLong(const MessageLite& base) {
          const ClusterResponseAck& this_ = static_cast<const ClusterResponseAck&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ClusterResponseAck::ByteSizeLong() const {
          const ClusterResponseAck& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.intercluster.ClusterResponseAck)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string message = 2;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
            // string response_id = 3;
            if (!this_._internal_response_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_response_id());
            }
            // bool success = 1;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ClusterResponseAck::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ClusterResponseAck*>(&to_msg);
  auto& from = static_cast<const ClusterResponseAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.intercluster.ClusterResponseAck)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (!from._internal_response_id().empty()) {
    _this->_internal_set_response_id(from._internal_response_id());
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ClusterResponseAck::CopyFrom(const ClusterResponseAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.intercluster.ClusterResponseAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ClusterResponseAck::InternalSwap(ClusterResponseAck* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.response_id_, &other->_impl_.response_id_, arena);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata ClusterResponseAck::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TransferStatusRequest::_Internal {
 public:
};

TransferStatusRequest::TransferStatusRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.intercluster.TransferStatusRequest)
}
inline PROTOBUF_NDEBUG_INLINE TransferStatusRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::intercluster::TransferStatusRequest& from_msg)
      : transfer_id_(arena, from.transfer_id_),
        _cached_size_{0} {}

TransferStatusRequest::TransferStatusRequest(
    ::google::protobuf::Arena* arena,
    const TransferStatusRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TransferStatusRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:seigr.intercluster.TransferStatusRequest)
}
inline PROTOBUF_NDEBUG_INLINE TransferStatusRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : transfer_id_(arena),
        _cached_size_{0} {}

inline void TransferStatusRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TransferStatusRequest::~TransferStatusRequest() {
  // @@protoc_insertion_point(destructor:seigr.intercluster.TransferStatusRequest)
  SharedDtor(*this);
}
inline void TransferStatusRequest::SharedDtor(MessageLite& self) {
  TransferStatusRequest& this_ = static_cast<TransferStatusRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.transfer_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* TransferStatusRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TransferStatusRequest(arena);
}
constexpr auto TransferStatusRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TransferStatusRequest),
                                            alignof(TransferStatusRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TransferStatusRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TransferStatusRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TransferStatusRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TransferStatusRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TransferStatusRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TransferStatusRequest>(), &TransferStatusRequest::ByteSizeLong,
            &TransferStatusRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TransferStatusRequest, _impl_._cached_size_),
        false,
    },
    &TransferStatusRequest::kDescriptorMethods,
    &descriptor_table_inter_5fcluster_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TransferStatusRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 60, 2> TransferStatusRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::intercluster::TransferStatusRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string transfer_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TransferStatusRequest, _impl_.transfer_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string transfer_id = 1;
    {PROTOBUF_FIELD_OFFSET(TransferStatusRequest, _impl_.transfer_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\50\13\0\0\0\0\0\0"
    "seigr.intercluster.TransferStatusRequest"
    "transfer_id"
  }},
};

PROTOBUF_NOINLINE void TransferStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.intercluster.TransferStatusRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.transfer_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TransferStatusRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TransferStatusRequest& this_ = static_cast<const TransferStatusRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TransferStatusRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TransferStatusRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.intercluster.TransferStatusRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string transfer_id = 1;
          if (!this_._internal_transfer_id().empty()) {
            const std::string& _s = this_._internal_transfer_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.TransferStatusRequest.transfer_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.intercluster.TransferStatusRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TransferStatusRequest::ByteSizeLong(const MessageLite& base) {
          const TransferStatusRequest& this_ = static_cast<const TransferStatusRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TransferStatusRequest::ByteSizeLong() const {
          const TransferStatusRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.intercluster.TransferStatusRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string transfer_id = 1;
            if (!this_._internal_transfer_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_transfer_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TransferStatusRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TransferStatusRequest*>(&to_msg);
  auto& from = static_cast<const TransferStatusRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.intercluster.TransferStatusRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_transfer_id().empty()) {
    _this->_internal_set_transfer_id(from._internal_transfer_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TransferStatusRequest::CopyFrom(const TransferStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.intercluster.TransferStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TransferStatusRequest::InternalSwap(TransferStatusRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.transfer_id_, &other->_impl_.transfer_id_, arena);
}

::google::protobuf::Metadata TransferStatusRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CommunicationErrorRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CommunicationErrorRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CommunicationErrorRequest, _impl_._has_bits_);
};

CommunicationErrorRequest::CommunicationErrorRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.intercluster.CommunicationErrorRequest)
}
inline PROTOBUF_NDEBUG_INLINE CommunicationErrorRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::intercluster::CommunicationErrorRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CommunicationErrorRequest::CommunicationErrorRequest(
    ::google::protobuf::Arena* arena,
    const CommunicationErrorRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CommunicationErrorRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.error_log_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::seigr::intercluster::ClusterCommunicationErrorLog>(
                              arena, *from._impl_.error_log_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:seigr.intercluster.CommunicationErrorRequest)
}
inline PROTOBUF_NDEBUG_INLINE CommunicationErrorRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CommunicationErrorRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.error_log_ = {};
}
CommunicationErrorRequest::~CommunicationErrorRequest() {
  // @@protoc_insertion_point(destructor:seigr.intercluster.CommunicationErrorRequest)
  SharedDtor(*this);
}
inline void CommunicationErrorRequest::SharedDtor(MessageLite& self) {
  CommunicationErrorRequest& this_ = static_cast<CommunicationErrorRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.error_log_;
  this_._impl_.~Impl_();
}

inline void* CommunicationErrorRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CommunicationErrorRequest(arena);
}
constexpr auto CommunicationErrorRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CommunicationErrorRequest),
                                            alignof(CommunicationErrorRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CommunicationErrorRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CommunicationErrorRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CommunicationErrorRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CommunicationErrorRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CommunicationErrorRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CommunicationErrorRequest>(), &CommunicationErrorRequest::ByteSizeLong,
            &CommunicationErrorRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CommunicationErrorRequest, _impl_._cached_size_),
        false,
    },
    &CommunicationErrorRequest::kDescriptorMethods,
    &descriptor_table_inter_5fcluster_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CommunicationErrorRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CommunicationErrorRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CommunicationErrorRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::intercluster::CommunicationErrorRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .seigr.intercluster.ClusterCommunicationErrorLog error_log = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CommunicationErrorRequest, _impl_.error_log_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .seigr.intercluster.ClusterCommunicationErrorLog error_log = 1;
    {PROTOBUF_FIELD_OFFSET(CommunicationErrorRequest, _impl_.error_log_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::seigr::intercluster::ClusterCommunicationErrorLog>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CommunicationErrorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.intercluster.CommunicationErrorRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.error_log_ != nullptr);
    _impl_.error_log_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CommunicationErrorRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CommunicationErrorRequest& this_ = static_cast<const CommunicationErrorRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CommunicationErrorRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CommunicationErrorRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.intercluster.CommunicationErrorRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .seigr.intercluster.ClusterCommunicationErrorLog error_log = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.error_log_, this_._impl_.error_log_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.intercluster.CommunicationErrorRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CommunicationErrorRequest::ByteSizeLong(const MessageLite& base) {
          const CommunicationErrorRequest& this_ = static_cast<const CommunicationErrorRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CommunicationErrorRequest::ByteSizeLong() const {
          const CommunicationErrorRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.intercluster.CommunicationErrorRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .seigr.intercluster.ClusterCommunicationErrorLog error_log = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.error_log_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CommunicationErrorRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CommunicationErrorRequest*>(&to_msg);
  auto& from = static_cast<const CommunicationErrorRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.intercluster.CommunicationErrorRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.error_log_ != nullptr);
    if (_this->_impl_.error_log_ == nullptr) {
      _this->_impl_.error_log_ =
          ::google::protobuf::Message::CopyConstruct<::seigr::intercluster::ClusterCommunicationErrorLog>(arena, *from._impl_.error_log_);
    } else {
      _this->_impl_.error_log_->MergeFrom(*from._impl_.error_log_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CommunicationErrorRequest::CopyFrom(const CommunicationErrorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.intercluster.CommunicationErrorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CommunicationErrorRequest::InternalSwap(CommunicationErrorRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.error_log_, other->_impl_.error_log_);
}

::google::protobuf::Metadata CommunicationErrorRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CommunicationErrorResponse::_Internal {
 public:
};

CommunicationErrorResponse::CommunicationErrorResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.intercluster.CommunicationErrorResponse)
}
inline PROTOBUF_NDEBUG_INLINE CommunicationErrorResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::intercluster::CommunicationErrorResponse& from_msg)
      : message_(arena, from.message_),
        _cached_size_{0} {}

CommunicationErrorResponse::CommunicationErrorResponse(
    ::google::protobuf::Arena* arena,
    const CommunicationErrorResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CommunicationErrorResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:seigr.intercluster.CommunicationErrorResponse)
}
inline PROTOBUF_NDEBUG_INLINE CommunicationErrorResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_(arena),
        _cached_size_{0} {}

inline void CommunicationErrorResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
CommunicationErrorResponse::~CommunicationErrorResponse() {
  // @@protoc_insertion_point(destructor:seigr.intercluster.CommunicationErrorResponse)
  SharedDtor(*this);
}
inline void CommunicationErrorResponse::SharedDtor(MessageLite& self) {
  CommunicationErrorResponse& this_ = static_cast<CommunicationErrorResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* CommunicationErrorResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CommunicationErrorResponse(arena);
}
constexpr auto CommunicationErrorResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CommunicationErrorResponse),
                                            alignof(CommunicationErrorResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CommunicationErrorResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CommunicationErrorResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CommunicationErrorResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CommunicationErrorResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CommunicationErrorResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CommunicationErrorResponse>(), &CommunicationErrorResponse::ByteSizeLong,
            &CommunicationErrorResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CommunicationErrorResponse, _impl_._cached_size_),
        false,
    },
    &CommunicationErrorResponse::kDescriptorMethods,
    &descriptor_table_inter_5fcluster_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CommunicationErrorResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 61, 2> CommunicationErrorResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::intercluster::CommunicationErrorResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CommunicationErrorResponse, _impl_.message_)}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CommunicationErrorResponse, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CommunicationErrorResponse, _impl_.success_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(CommunicationErrorResponse, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(CommunicationErrorResponse, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\55\0\7\0\0\0\0\0"
    "seigr.intercluster.CommunicationErrorResponse"
    "message"
  }},
};

PROTOBUF_NOINLINE void CommunicationErrorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.intercluster.CommunicationErrorResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CommunicationErrorResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CommunicationErrorResponse& this_ = static_cast<const CommunicationErrorResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CommunicationErrorResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CommunicationErrorResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.intercluster.CommunicationErrorResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool success = 1;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_success(), target);
          }

          // string message = 2;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.CommunicationErrorResponse.message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.intercluster.CommunicationErrorResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CommunicationErrorResponse::ByteSizeLong(const MessageLite& base) {
          const CommunicationErrorResponse& this_ = static_cast<const CommunicationErrorResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CommunicationErrorResponse::ByteSizeLong() const {
          const CommunicationErrorResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.intercluster.CommunicationErrorResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string message = 2;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
            // bool success = 1;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CommunicationErrorResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CommunicationErrorResponse*>(&to_msg);
  auto& from = static_cast<const CommunicationErrorResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.intercluster.CommunicationErrorResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CommunicationErrorResponse::CopyFrom(const CommunicationErrorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.intercluster.CommunicationErrorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CommunicationErrorResponse::InternalSwap(CommunicationErrorResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata CommunicationErrorResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ClusterEventSubscriptionResponse::_Internal {
 public:
};

ClusterEventSubscriptionResponse::ClusterEventSubscriptionResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.intercluster.ClusterEventSubscriptionResponse)
}
inline PROTOBUF_NDEBUG_INLINE ClusterEventSubscriptionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::intercluster::ClusterEventSubscriptionResponse& from_msg)
      : subscription_id_(arena, from.subscription_id_),
        message_(arena, from.message_),
        _cached_size_{0} {}

ClusterEventSubscriptionResponse::ClusterEventSubscriptionResponse(
    ::google::protobuf::Arena* arena,
    const ClusterEventSubscriptionResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ClusterEventSubscriptionResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:seigr.intercluster.ClusterEventSubscriptionResponse)
}
inline PROTOBUF_NDEBUG_INLINE ClusterEventSubscriptionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : subscription_id_(arena),
        message_(arena),
        _cached_size_{0} {}

inline void ClusterEventSubscriptionResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
ClusterEventSubscriptionResponse::~ClusterEventSubscriptionResponse() {
  // @@protoc_insertion_point(destructor:seigr.intercluster.ClusterEventSubscriptionResponse)
  SharedDtor(*this);
}
inline void ClusterEventSubscriptionResponse::SharedDtor(MessageLite& self) {
  ClusterEventSubscriptionResponse& this_ = static_cast<ClusterEventSubscriptionResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.subscription_id_.Destroy();
  this_._impl_.message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ClusterEventSubscriptionResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ClusterEventSubscriptionResponse(arena);
}
constexpr auto ClusterEventSubscriptionResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ClusterEventSubscriptionResponse),
                                            alignof(ClusterEventSubscriptionResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ClusterEventSubscriptionResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ClusterEventSubscriptionResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ClusterEventSubscriptionResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ClusterEventSubscriptionResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ClusterEventSubscriptionResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ClusterEventSubscriptionResponse>(), &ClusterEventSubscriptionResponse::ByteSizeLong,
            &ClusterEventSubscriptionResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ClusterEventSubscriptionResponse, _impl_._cached_size_),
        false,
    },
    &ClusterEventSubscriptionResponse::kDescriptorMethods,
    &descriptor_table_inter_5fcluster_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ClusterEventSubscriptionResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 82, 2> ClusterEventSubscriptionResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::intercluster::ClusterEventSubscriptionResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ClusterEventSubscriptionResponse, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ClusterEventSubscriptionResponse, _impl_.success_)}},
    // string subscription_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ClusterEventSubscriptionResponse, _impl_.subscription_id_)}},
    // string message = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ClusterEventSubscriptionResponse, _impl_.message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(ClusterEventSubscriptionResponse, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string subscription_id = 2;
    {PROTOBUF_FIELD_OFFSET(ClusterEventSubscriptionResponse, _impl_.subscription_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string message = 3;
    {PROTOBUF_FIELD_OFFSET(ClusterEventSubscriptionResponse, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\63\0\17\7\0\0\0\0"
    "seigr.intercluster.ClusterEventSubscriptionResponse"
    "subscription_id"
    "message"
  }},
};

PROTOBUF_NOINLINE void ClusterEventSubscriptionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.intercluster.ClusterEventSubscriptionResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.subscription_id_.ClearToEmpty();
  _impl_.message_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ClusterEventSubscriptionResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ClusterEventSubscriptionResponse& this_ = static_cast<const ClusterEventSubscriptionResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ClusterEventSubscriptionResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ClusterEventSubscriptionResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.intercluster.ClusterEventSubscriptionResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool success = 1;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_success(), target);
          }

          // string subscription_id = 2;
          if (!this_._internal_subscription_id().empty()) {
            const std::string& _s = this_._internal_subscription_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.ClusterEventSubscriptionResponse.subscription_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string message = 3;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.intercluster.ClusterEventSubscriptionResponse.message");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.intercluster.ClusterEventSubscriptionResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ClusterEventSubscriptionResponse::ByteSizeLong(const MessageLite& base) {
          const ClusterEventSubscriptionResponse& this_ = static_cast<const ClusterEventSubscriptionResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ClusterEventSubscriptionResponse::ByteSizeLong() const {
          const ClusterEventSubscriptionResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.intercluster.ClusterEventSubscriptionResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string subscription_id = 2;
            if (!this_._internal_subscription_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_subscription_id());
            }
            // string message = 3;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
            // bool success = 1;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ClusterEventSubscriptionResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ClusterEventSubscriptionResponse*>(&to_msg);
  auto& from = static_cast<const ClusterEventSubscriptionResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.intercluster.ClusterEventSubscriptionResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_subscription_id().empty()) {
    _this->_internal_set_subscription_id(from._internal_subscription_id());
  }
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ClusterEventSubscriptionResponse::CopyFrom(const ClusterEventSubscriptionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.intercluster.ClusterEventSubscriptionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ClusterEventSubscriptionResponse::InternalSwap(ClusterEventSubscriptionResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.subscription_id_, &other->_impl_.subscription_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata ClusterEventSubscriptionResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace intercluster
}  // namespace seigr
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_inter_5fcluster_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
