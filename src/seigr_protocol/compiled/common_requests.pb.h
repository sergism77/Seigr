// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: common_requests.proto
// Protobuf C++ Version: 5.29.2

#ifndef common_5frequests_2eproto_2epb_2eh
#define common_5frequests_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "common.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_common_5frequests_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_common_5frequests_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_common_5frequests_2eproto;
namespace seigr {
namespace common_requests {
class ReplicationQuery;
struct ReplicationQueryDefaultTypeInternal;
extern ReplicationQueryDefaultTypeInternal _ReplicationQuery_default_instance_;
class ReplicationQuery_AdditionalFiltersEntry_DoNotUse;
struct ReplicationQuery_AdditionalFiltersEntry_DoNotUseDefaultTypeInternal;
extern ReplicationQuery_AdditionalFiltersEntry_DoNotUseDefaultTypeInternal _ReplicationQuery_AdditionalFiltersEntry_DoNotUse_default_instance_;
class ReplicationRequest;
struct ReplicationRequestDefaultTypeInternal;
extern ReplicationRequestDefaultTypeInternal _ReplicationRequest_default_instance_;
class ReplicationRequest_MetadataEntry_DoNotUse;
struct ReplicationRequest_MetadataEntry_DoNotUseDefaultTypeInternal;
extern ReplicationRequest_MetadataEntry_DoNotUseDefaultTypeInternal _ReplicationRequest_MetadataEntry_DoNotUse_default_instance_;
class ReplicationRequest_ParametersEntry_DoNotUse;
struct ReplicationRequest_ParametersEntry_DoNotUseDefaultTypeInternal;
extern ReplicationRequest_ParametersEntry_DoNotUseDefaultTypeInternal _ReplicationRequest_ParametersEntry_DoNotUse_default_instance_;
class ReplicationResponse;
struct ReplicationResponseDefaultTypeInternal;
extern ReplicationResponseDefaultTypeInternal _ReplicationResponse_default_instance_;
class ReplicationResponse_ResponseMetadataEntry_DoNotUse;
struct ReplicationResponse_ResponseMetadataEntry_DoNotUseDefaultTypeInternal;
extern ReplicationResponse_ResponseMetadataEntry_DoNotUseDefaultTypeInternal _ReplicationResponse_ResponseMetadataEntry_DoNotUse_default_instance_;
class ReplicationStats;
struct ReplicationStatsDefaultTypeInternal;
extern ReplicationStatsDefaultTypeInternal _ReplicationStats_default_instance_;
class ReplicationStats_PriorityCountsEntry_DoNotUse;
struct ReplicationStats_PriorityCountsEntry_DoNotUseDefaultTypeInternal;
extern ReplicationStats_PriorityCountsEntry_DoNotUseDefaultTypeInternal _ReplicationStats_PriorityCountsEntry_DoNotUse_default_instance_;
class ReplicationStats_TriggerCountsEntry_DoNotUse;
struct ReplicationStats_TriggerCountsEntry_DoNotUseDefaultTypeInternal;
extern ReplicationStats_TriggerCountsEntry_DoNotUseDefaultTypeInternal _ReplicationStats_TriggerCountsEntry_DoNotUse_default_instance_;
}  // namespace common_requests
}  // namespace seigr
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace seigr {
namespace common_requests {
enum ReplicationPriority : int {
  PRIORITY_UNDEFINED = 0,
  PRIORITY_LOW = 1,
  PRIORITY_MEDIUM = 2,
  PRIORITY_HIGH = 3,
  PRIORITY_CRITICAL = 4,
  PRIORITY_EMERGENCY = 5,
  ReplicationPriority_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ReplicationPriority_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool ReplicationPriority_IsValid(int value);
extern const uint32_t ReplicationPriority_internal_data_[];
constexpr ReplicationPriority ReplicationPriority_MIN = static_cast<ReplicationPriority>(0);
constexpr ReplicationPriority ReplicationPriority_MAX = static_cast<ReplicationPriority>(5);
constexpr int ReplicationPriority_ARRAYSIZE = 5 + 1;
const ::google::protobuf::EnumDescriptor*
ReplicationPriority_descriptor();
template <typename T>
const std::string& ReplicationPriority_Name(T value) {
  static_assert(std::is_same<T, ReplicationPriority>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ReplicationPriority_Name().");
  return ReplicationPriority_Name(static_cast<ReplicationPriority>(value));
}
template <>
inline const std::string& ReplicationPriority_Name(ReplicationPriority value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ReplicationPriority_descriptor,
                                                 0, 5>(
      static_cast<int>(value));
}
inline bool ReplicationPriority_Parse(absl::string_view name, ReplicationPriority* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ReplicationPriority>(
      ReplicationPriority_descriptor(), name, value);
}
enum ReplicationTrigger : int {
  REPLICATION_TRIGGER_UNDEFINED = 0,
  REPLICATION_TRIGGER_MANUAL_REQUEST = 1,
  REPLICATION_TRIGGER_DEMAND_BASED = 2,
  REPLICATION_TRIGGER_IMMUNE_SYSTEM_ALERT = 3,
  REPLICATION_TRIGGER_PERIODIC_CHECK = 4,
  REPLICATION_TRIGGER_NETWORK_EXPANSION = 5,
  REPLICATION_TRIGGER_REGULATORY_COMPLIANCE = 6,
  REPLICATION_TRIGGER_DATA_ACCESS_SPIKE = 7,
  ReplicationTrigger_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ReplicationTrigger_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool ReplicationTrigger_IsValid(int value);
extern const uint32_t ReplicationTrigger_internal_data_[];
constexpr ReplicationTrigger ReplicationTrigger_MIN = static_cast<ReplicationTrigger>(0);
constexpr ReplicationTrigger ReplicationTrigger_MAX = static_cast<ReplicationTrigger>(7);
constexpr int ReplicationTrigger_ARRAYSIZE = 7 + 1;
const ::google::protobuf::EnumDescriptor*
ReplicationTrigger_descriptor();
template <typename T>
const std::string& ReplicationTrigger_Name(T value) {
  static_assert(std::is_same<T, ReplicationTrigger>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ReplicationTrigger_Name().");
  return ReplicationTrigger_Name(static_cast<ReplicationTrigger>(value));
}
template <>
inline const std::string& ReplicationTrigger_Name(ReplicationTrigger value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ReplicationTrigger_descriptor,
                                                 0, 7>(
      static_cast<int>(value));
}
inline bool ReplicationTrigger_Parse(absl::string_view name, ReplicationTrigger* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ReplicationTrigger>(
      ReplicationTrigger_descriptor(), name, value);
}
enum ReplicationStrategy : int {
  REPLICATION_STRATEGY_UNDEFINED = 0,
  REPLICATION_STRATEGY_DEMAND_BASED = 1,
  REPLICATION_STRATEGY_PERIODIC = 2,
  REPLICATION_STRATEGY_FULL = 3,
  REPLICATION_STRATEGY_ADAPTIVE = 4,
  REPLICATION_STRATEGY_GEOGRAPHICALLY_AWARE = 5,
  REPLICATION_STRATEGY_LOAD_BALANCED = 6,
  ReplicationStrategy_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ReplicationStrategy_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool ReplicationStrategy_IsValid(int value);
extern const uint32_t ReplicationStrategy_internal_data_[];
constexpr ReplicationStrategy ReplicationStrategy_MIN = static_cast<ReplicationStrategy>(0);
constexpr ReplicationStrategy ReplicationStrategy_MAX = static_cast<ReplicationStrategy>(6);
constexpr int ReplicationStrategy_ARRAYSIZE = 6 + 1;
const ::google::protobuf::EnumDescriptor*
ReplicationStrategy_descriptor();
template <typename T>
const std::string& ReplicationStrategy_Name(T value) {
  static_assert(std::is_same<T, ReplicationStrategy>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ReplicationStrategy_Name().");
  return ReplicationStrategy_Name(static_cast<ReplicationStrategy>(value));
}
template <>
inline const std::string& ReplicationStrategy_Name(ReplicationStrategy value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ReplicationStrategy_descriptor,
                                                 0, 6>(
      static_cast<int>(value));
}
inline bool ReplicationStrategy_Parse(absl::string_view name, ReplicationStrategy* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ReplicationStrategy>(
      ReplicationStrategy_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class ReplicationStats_TriggerCountsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, ::int32_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT32> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, ::int32_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32>;
  ReplicationStats_TriggerCountsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ReplicationStats_TriggerCountsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit ReplicationStats_TriggerCountsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const ReplicationStats_TriggerCountsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const ReplicationStats_TriggerCountsEntry_DoNotUse*>(
        &_ReplicationStats_TriggerCountsEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_common_5frequests_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      69, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class ReplicationStats_PriorityCountsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, ::int32_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT32> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, ::int32_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32>;
  ReplicationStats_PriorityCountsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ReplicationStats_PriorityCountsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit ReplicationStats_PriorityCountsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const ReplicationStats_PriorityCountsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const ReplicationStats_PriorityCountsEntry_DoNotUse*>(
        &_ReplicationStats_PriorityCountsEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_common_5frequests_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      70, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class ReplicationResponse_ResponseMetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  ReplicationResponse_ResponseMetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ReplicationResponse_ResponseMetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit ReplicationResponse_ResponseMetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const ReplicationResponse_ResponseMetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const ReplicationResponse_ResponseMetadataEntry_DoNotUse*>(
        &_ReplicationResponse_ResponseMetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_common_5frequests_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      80, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class ReplicationRequest_ParametersEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  ReplicationRequest_ParametersEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ReplicationRequest_ParametersEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit ReplicationRequest_ParametersEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const ReplicationRequest_ParametersEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const ReplicationRequest_ParametersEntry_DoNotUse*>(
        &_ReplicationRequest_ParametersEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_common_5frequests_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      73, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class ReplicationRequest_MetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  ReplicationRequest_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ReplicationRequest_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit ReplicationRequest_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const ReplicationRequest_MetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const ReplicationRequest_MetadataEntry_DoNotUse*>(
        &_ReplicationRequest_MetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_common_5frequests_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      71, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class ReplicationQuery_AdditionalFiltersEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  ReplicationQuery_AdditionalFiltersEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ReplicationQuery_AdditionalFiltersEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit ReplicationQuery_AdditionalFiltersEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const ReplicationQuery_AdditionalFiltersEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const ReplicationQuery_AdditionalFiltersEntry_DoNotUse*>(
        &_ReplicationQuery_AdditionalFiltersEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_common_5frequests_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      78, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class ReplicationStats final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.common_requests.ReplicationStats) */ {
 public:
  inline ReplicationStats() : ReplicationStats(nullptr) {}
  ~ReplicationStats() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ReplicationStats* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ReplicationStats));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ReplicationStats(
      ::google::protobuf::internal::ConstantInitialized);

  inline ReplicationStats(const ReplicationStats& from) : ReplicationStats(nullptr, from) {}
  inline ReplicationStats(ReplicationStats&& from) noexcept
      : ReplicationStats(nullptr, std::move(from)) {}
  inline ReplicationStats& operator=(const ReplicationStats& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReplicationStats& operator=(ReplicationStats&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReplicationStats& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReplicationStats* internal_default_instance() {
    return reinterpret_cast<const ReplicationStats*>(
        &_ReplicationStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(ReplicationStats& a, ReplicationStats& b) { a.Swap(&b); }
  inline void Swap(ReplicationStats* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReplicationStats* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReplicationStats* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ReplicationStats>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReplicationStats& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ReplicationStats& from) { ReplicationStats::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ReplicationStats* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.common_requests.ReplicationStats"; }

 protected:
  explicit ReplicationStats(::google::protobuf::Arena* arena);
  ReplicationStats(::google::protobuf::Arena* arena, const ReplicationStats& from);
  ReplicationStats(::google::protobuf::Arena* arena, ReplicationStats&& from) noexcept
      : ReplicationStats(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTriggerCountsFieldNumber = 4,
    kPriorityCountsFieldNumber = 5,
    kTotalRequestsFieldNumber = 1,
    kSuccessfulRequestsFieldNumber = 2,
    kFailedRequestsFieldNumber = 3,
    kEscalatedRequestsFieldNumber = 7,
    kAverageCompletionTimeFieldNumber = 6,
  };
  // map<string, int32> trigger_counts = 4;
  int trigger_counts_size() const;
  private:
  int _internal_trigger_counts_size() const;

  public:
  void clear_trigger_counts() ;
  const ::google::protobuf::Map<std::string, ::int32_t>& trigger_counts() const;
  ::google::protobuf::Map<std::string, ::int32_t>* mutable_trigger_counts();

  private:
  const ::google::protobuf::Map<std::string, ::int32_t>& _internal_trigger_counts() const;
  ::google::protobuf::Map<std::string, ::int32_t>* _internal_mutable_trigger_counts();

  public:
  // map<string, int32> priority_counts = 5;
  int priority_counts_size() const;
  private:
  int _internal_priority_counts_size() const;

  public:
  void clear_priority_counts() ;
  const ::google::protobuf::Map<std::string, ::int32_t>& priority_counts() const;
  ::google::protobuf::Map<std::string, ::int32_t>* mutable_priority_counts();

  private:
  const ::google::protobuf::Map<std::string, ::int32_t>& _internal_priority_counts() const;
  ::google::protobuf::Map<std::string, ::int32_t>* _internal_mutable_priority_counts();

  public:
  // int32 total_requests = 1;
  void clear_total_requests() ;
  ::int32_t total_requests() const;
  void set_total_requests(::int32_t value);

  private:
  ::int32_t _internal_total_requests() const;
  void _internal_set_total_requests(::int32_t value);

  public:
  // int32 successful_requests = 2;
  void clear_successful_requests() ;
  ::int32_t successful_requests() const;
  void set_successful_requests(::int32_t value);

  private:
  ::int32_t _internal_successful_requests() const;
  void _internal_set_successful_requests(::int32_t value);

  public:
  // int32 failed_requests = 3;
  void clear_failed_requests() ;
  ::int32_t failed_requests() const;
  void set_failed_requests(::int32_t value);

  private:
  ::int32_t _internal_failed_requests() const;
  void _internal_set_failed_requests(::int32_t value);

  public:
  // int32 escalated_requests = 7;
  void clear_escalated_requests() ;
  ::int32_t escalated_requests() const;
  void set_escalated_requests(::int32_t value);

  private:
  ::int32_t _internal_escalated_requests() const;
  void _internal_set_escalated_requests(::int32_t value);

  public:
  // double average_completion_time = 6;
  void clear_average_completion_time() ;
  double average_completion_time() const;
  void set_average_completion_time(double value);

  private:
  double _internal_average_completion_time() const;
  void _internal_set_average_completion_time(double value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.common_requests.ReplicationStats)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 2,
      76, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ReplicationStats& from_msg);
    ::google::protobuf::internal::MapField<ReplicationStats_TriggerCountsEntry_DoNotUse, std::string, ::int32_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT32>
        trigger_counts_;
    ::google::protobuf::internal::MapField<ReplicationStats_PriorityCountsEntry_DoNotUse, std::string, ::int32_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT32>
        priority_counts_;
    ::int32_t total_requests_;
    ::int32_t successful_requests_;
    ::int32_t failed_requests_;
    ::int32_t escalated_requests_;
    double average_completion_time_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_5frequests_2eproto;
};
// -------------------------------------------------------------------

class ReplicationResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.common_requests.ReplicationResponse) */ {
 public:
  inline ReplicationResponse() : ReplicationResponse(nullptr) {}
  ~ReplicationResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ReplicationResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ReplicationResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ReplicationResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ReplicationResponse(const ReplicationResponse& from) : ReplicationResponse(nullptr, from) {}
  inline ReplicationResponse(ReplicationResponse&& from) noexcept
      : ReplicationResponse(nullptr, std::move(from)) {}
  inline ReplicationResponse& operator=(const ReplicationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReplicationResponse& operator=(ReplicationResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReplicationResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReplicationResponse* internal_default_instance() {
    return reinterpret_cast<const ReplicationResponse*>(
        &_ReplicationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(ReplicationResponse& a, ReplicationResponse& b) { a.Swap(&b); }
  inline void Swap(ReplicationResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReplicationResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReplicationResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ReplicationResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReplicationResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ReplicationResponse& from) { ReplicationResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ReplicationResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.common_requests.ReplicationResponse"; }

 protected:
  explicit ReplicationResponse(::google::protobuf::Arena* arena);
  ReplicationResponse(::google::protobuf::Arena* arena, const ReplicationResponse& from);
  ReplicationResponse(::google::protobuf::Arena* arena, ReplicationResponse&& from) noexcept
      : ReplicationResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResponseMetadataFieldNumber = 5,
    kRequestIdFieldNumber = 1,
    kStatusMessageFieldNumber = 3,
    kCompletionTimestampFieldNumber = 4,
    kErrorCodeFieldNumber = 6,
    kEscalationStatusFieldNumber = 10,
    kSuccessFieldNumber = 2,
    kRetryAttemptedFieldNumber = 8,
    kTotalRetriesFieldNumber = 9,
    kResourceUtilizationPercentageFieldNumber = 7,
  };
  // map<string, string> response_metadata = 5;
  int response_metadata_size() const;
  private:
  int _internal_response_metadata_size() const;

  public:
  void clear_response_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& response_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_response_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_response_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_response_metadata();

  public:
  // string request_id = 1;
  void clear_request_id() ;
  const std::string& request_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_request_id(Arg_&& arg, Args_... args);
  std::string* mutable_request_id();
  PROTOBUF_NODISCARD std::string* release_request_id();
  void set_allocated_request_id(std::string* value);

  private:
  const std::string& _internal_request_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_request_id(
      const std::string& value);
  std::string* _internal_mutable_request_id();

  public:
  // string status_message = 3;
  void clear_status_message() ;
  const std::string& status_message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_status_message(Arg_&& arg, Args_... args);
  std::string* mutable_status_message();
  PROTOBUF_NODISCARD std::string* release_status_message();
  void set_allocated_status_message(std::string* value);

  private:
  const std::string& _internal_status_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_status_message(
      const std::string& value);
  std::string* _internal_mutable_status_message();

  public:
  // string completion_timestamp = 4;
  void clear_completion_timestamp() ;
  const std::string& completion_timestamp() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_completion_timestamp(Arg_&& arg, Args_... args);
  std::string* mutable_completion_timestamp();
  PROTOBUF_NODISCARD std::string* release_completion_timestamp();
  void set_allocated_completion_timestamp(std::string* value);

  private:
  const std::string& _internal_completion_timestamp() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_completion_timestamp(
      const std::string& value);
  std::string* _internal_mutable_completion_timestamp();

  public:
  // string error_code = 6;
  void clear_error_code() ;
  const std::string& error_code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_error_code(Arg_&& arg, Args_... args);
  std::string* mutable_error_code();
  PROTOBUF_NODISCARD std::string* release_error_code();
  void set_allocated_error_code(std::string* value);

  private:
  const std::string& _internal_error_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_error_code(
      const std::string& value);
  std::string* _internal_mutable_error_code();

  public:
  // string escalation_status = 10;
  void clear_escalation_status() ;
  const std::string& escalation_status() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_escalation_status(Arg_&& arg, Args_... args);
  std::string* mutable_escalation_status();
  PROTOBUF_NODISCARD std::string* release_escalation_status();
  void set_allocated_escalation_status(std::string* value);

  private:
  const std::string& _internal_escalation_status() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_escalation_status(
      const std::string& value);
  std::string* _internal_mutable_escalation_status();

  public:
  // bool success = 2;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // bool retry_attempted = 8;
  void clear_retry_attempted() ;
  bool retry_attempted() const;
  void set_retry_attempted(bool value);

  private:
  bool _internal_retry_attempted() const;
  void _internal_set_retry_attempted(bool value);

  public:
  // int32 total_retries = 9;
  void clear_total_retries() ;
  ::int32_t total_retries() const;
  void set_total_retries(::int32_t value);

  private:
  ::int32_t _internal_total_retries() const;
  void _internal_set_total_retries(::int32_t value);

  public:
  // double resource_utilization_percentage = 7;
  void clear_resource_utilization_percentage() ;
  double resource_utilization_percentage() const;
  void set_resource_utilization_percentage(double value);

  private:
  double _internal_resource_utilization_percentage() const;
  void _internal_set_resource_utilization_percentage(double value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.common_requests.ReplicationResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 10, 1,
      146, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ReplicationResponse& from_msg);
    ::google::protobuf::internal::MapField<ReplicationResponse_ResponseMetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        response_metadata_;
    ::google::protobuf::internal::ArenaStringPtr request_id_;
    ::google::protobuf::internal::ArenaStringPtr status_message_;
    ::google::protobuf::internal::ArenaStringPtr completion_timestamp_;
    ::google::protobuf::internal::ArenaStringPtr error_code_;
    ::google::protobuf::internal::ArenaStringPtr escalation_status_;
    bool success_;
    bool retry_attempted_;
    ::int32_t total_retries_;
    double resource_utilization_percentage_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_5frequests_2eproto;
};
// -------------------------------------------------------------------

class ReplicationRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.common_requests.ReplicationRequest) */ {
 public:
  inline ReplicationRequest() : ReplicationRequest(nullptr) {}
  ~ReplicationRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ReplicationRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ReplicationRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ReplicationRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ReplicationRequest(const ReplicationRequest& from) : ReplicationRequest(nullptr, from) {}
  inline ReplicationRequest(ReplicationRequest&& from) noexcept
      : ReplicationRequest(nullptr, std::move(from)) {}
  inline ReplicationRequest& operator=(const ReplicationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReplicationRequest& operator=(ReplicationRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReplicationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReplicationRequest* internal_default_instance() {
    return reinterpret_cast<const ReplicationRequest*>(
        &_ReplicationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(ReplicationRequest& a, ReplicationRequest& b) { a.Swap(&b); }
  inline void Swap(ReplicationRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReplicationRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReplicationRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ReplicationRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReplicationRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ReplicationRequest& from) { ReplicationRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ReplicationRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.common_requests.ReplicationRequest"; }

 protected:
  explicit ReplicationRequest(::google::protobuf::Arena* arena);
  ReplicationRequest(::google::protobuf::Arena* arena, const ReplicationRequest& from);
  ReplicationRequest(::google::protobuf::Arena* arena, ReplicationRequest&& from) noexcept
      : ReplicationRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kParametersFieldNumber = 10,
    kMetadataFieldNumber = 22,
    kRequestIdFieldNumber = 1,
    kSegmentIdFieldNumber = 2,
    kRequestedByFieldNumber = 8,
    kRequestTimestampFieldNumber = 9,
    kReasonFieldNumber = 11,
    kTimeToLiveFieldNumber = 14,
    kComplianceLevelFieldNumber = 15,
    kEncryptionRequirementFieldNumber = 16,
    kAccessControlLevelFieldNumber = 17,
    kGeoLocationFieldNumber = 18,
    kErrorThresholdPolicyFieldNumber = 21,
    kRollbackPolicyFieldNumber = 24,
    kEscalationContactFieldNumber = 25,
    kThreatLevelFieldNumber = 3,
    kPriorityFieldNumber = 4,
    kTriggerFieldNumber = 5,
    kStrategyFieldNumber = 6,
    kMaxRetriesFieldNumber = 12,
    kRetryIntervalSecondsFieldNumber = 13,
    kReplicationDensityFieldNumber = 20,
    kCriticalReplicationFieldNumber = 7,
    kDynamicScalingFieldNumber = 19,
    kEnableIntegrityCheckFieldNumber = 23,
    kEnableAuditLoggingFieldNumber = 26,
  };
  // map<string, string> parameters = 10;
  int parameters_size() const;
  private:
  int _internal_parameters_size() const;

  public:
  void clear_parameters() ;
  const ::google::protobuf::Map<std::string, std::string>& parameters() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_parameters();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_parameters() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_parameters();

  public:
  // map<string, string> metadata = 22;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // string request_id = 1;
  void clear_request_id() ;
  const std::string& request_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_request_id(Arg_&& arg, Args_... args);
  std::string* mutable_request_id();
  PROTOBUF_NODISCARD std::string* release_request_id();
  void set_allocated_request_id(std::string* value);

  private:
  const std::string& _internal_request_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_request_id(
      const std::string& value);
  std::string* _internal_mutable_request_id();

  public:
  // string segment_id = 2;
  void clear_segment_id() ;
  const std::string& segment_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_segment_id(Arg_&& arg, Args_... args);
  std::string* mutable_segment_id();
  PROTOBUF_NODISCARD std::string* release_segment_id();
  void set_allocated_segment_id(std::string* value);

  private:
  const std::string& _internal_segment_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_segment_id(
      const std::string& value);
  std::string* _internal_mutable_segment_id();

  public:
  // string requested_by = 8;
  void clear_requested_by() ;
  const std::string& requested_by() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_requested_by(Arg_&& arg, Args_... args);
  std::string* mutable_requested_by();
  PROTOBUF_NODISCARD std::string* release_requested_by();
  void set_allocated_requested_by(std::string* value);

  private:
  const std::string& _internal_requested_by() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_requested_by(
      const std::string& value);
  std::string* _internal_mutable_requested_by();

  public:
  // string request_timestamp = 9;
  void clear_request_timestamp() ;
  const std::string& request_timestamp() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_request_timestamp(Arg_&& arg, Args_... args);
  std::string* mutable_request_timestamp();
  PROTOBUF_NODISCARD std::string* release_request_timestamp();
  void set_allocated_request_timestamp(std::string* value);

  private:
  const std::string& _internal_request_timestamp() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_request_timestamp(
      const std::string& value);
  std::string* _internal_mutable_request_timestamp();

  public:
  // string reason = 11;
  void clear_reason() ;
  const std::string& reason() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_reason(Arg_&& arg, Args_... args);
  std::string* mutable_reason();
  PROTOBUF_NODISCARD std::string* release_reason();
  void set_allocated_reason(std::string* value);

  private:
  const std::string& _internal_reason() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_reason(
      const std::string& value);
  std::string* _internal_mutable_reason();

  public:
  // string time_to_live = 14;
  void clear_time_to_live() ;
  const std::string& time_to_live() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_time_to_live(Arg_&& arg, Args_... args);
  std::string* mutable_time_to_live();
  PROTOBUF_NODISCARD std::string* release_time_to_live();
  void set_allocated_time_to_live(std::string* value);

  private:
  const std::string& _internal_time_to_live() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_time_to_live(
      const std::string& value);
  std::string* _internal_mutable_time_to_live();

  public:
  // string compliance_level = 15;
  void clear_compliance_level() ;
  const std::string& compliance_level() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_compliance_level(Arg_&& arg, Args_... args);
  std::string* mutable_compliance_level();
  PROTOBUF_NODISCARD std::string* release_compliance_level();
  void set_allocated_compliance_level(std::string* value);

  private:
  const std::string& _internal_compliance_level() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_compliance_level(
      const std::string& value);
  std::string* _internal_mutable_compliance_level();

  public:
  // string encryption_requirement = 16;
  void clear_encryption_requirement() ;
  const std::string& encryption_requirement() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_encryption_requirement(Arg_&& arg, Args_... args);
  std::string* mutable_encryption_requirement();
  PROTOBUF_NODISCARD std::string* release_encryption_requirement();
  void set_allocated_encryption_requirement(std::string* value);

  private:
  const std::string& _internal_encryption_requirement() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_encryption_requirement(
      const std::string& value);
  std::string* _internal_mutable_encryption_requirement();

  public:
  // string access_control_level = 17;
  void clear_access_control_level() ;
  const std::string& access_control_level() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_access_control_level(Arg_&& arg, Args_... args);
  std::string* mutable_access_control_level();
  PROTOBUF_NODISCARD std::string* release_access_control_level();
  void set_allocated_access_control_level(std::string* value);

  private:
  const std::string& _internal_access_control_level() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_access_control_level(
      const std::string& value);
  std::string* _internal_mutable_access_control_level();

  public:
  // string geo_location = 18;
  void clear_geo_location() ;
  const std::string& geo_location() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_geo_location(Arg_&& arg, Args_... args);
  std::string* mutable_geo_location();
  PROTOBUF_NODISCARD std::string* release_geo_location();
  void set_allocated_geo_location(std::string* value);

  private:
  const std::string& _internal_geo_location() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_geo_location(
      const std::string& value);
  std::string* _internal_mutable_geo_location();

  public:
  // string error_threshold_policy = 21;
  void clear_error_threshold_policy() ;
  const std::string& error_threshold_policy() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_error_threshold_policy(Arg_&& arg, Args_... args);
  std::string* mutable_error_threshold_policy();
  PROTOBUF_NODISCARD std::string* release_error_threshold_policy();
  void set_allocated_error_threshold_policy(std::string* value);

  private:
  const std::string& _internal_error_threshold_policy() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_error_threshold_policy(
      const std::string& value);
  std::string* _internal_mutable_error_threshold_policy();

  public:
  // string rollback_policy = 24;
  void clear_rollback_policy() ;
  const std::string& rollback_policy() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_rollback_policy(Arg_&& arg, Args_... args);
  std::string* mutable_rollback_policy();
  PROTOBUF_NODISCARD std::string* release_rollback_policy();
  void set_allocated_rollback_policy(std::string* value);

  private:
  const std::string& _internal_rollback_policy() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_rollback_policy(
      const std::string& value);
  std::string* _internal_mutable_rollback_policy();

  public:
  // string escalation_contact = 25;
  void clear_escalation_contact() ;
  const std::string& escalation_contact() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_escalation_contact(Arg_&& arg, Args_... args);
  std::string* mutable_escalation_contact();
  PROTOBUF_NODISCARD std::string* release_escalation_contact();
  void set_allocated_escalation_contact(std::string* value);

  private:
  const std::string& _internal_escalation_contact() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_escalation_contact(
      const std::string& value);
  std::string* _internal_mutable_escalation_contact();

  public:
  // .seigr.common.ThreatLevel threat_level = 3;
  void clear_threat_level() ;
  ::seigr::common::ThreatLevel threat_level() const;
  void set_threat_level(::seigr::common::ThreatLevel value);

  private:
  ::seigr::common::ThreatLevel _internal_threat_level() const;
  void _internal_set_threat_level(::seigr::common::ThreatLevel value);

  public:
  // .seigr.common_requests.ReplicationPriority priority = 4;
  void clear_priority() ;
  ::seigr::common_requests::ReplicationPriority priority() const;
  void set_priority(::seigr::common_requests::ReplicationPriority value);

  private:
  ::seigr::common_requests::ReplicationPriority _internal_priority() const;
  void _internal_set_priority(::seigr::common_requests::ReplicationPriority value);

  public:
  // .seigr.common_requests.ReplicationTrigger trigger = 5;
  void clear_trigger() ;
  ::seigr::common_requests::ReplicationTrigger trigger() const;
  void set_trigger(::seigr::common_requests::ReplicationTrigger value);

  private:
  ::seigr::common_requests::ReplicationTrigger _internal_trigger() const;
  void _internal_set_trigger(::seigr::common_requests::ReplicationTrigger value);

  public:
  // .seigr.common_requests.ReplicationStrategy strategy = 6;
  void clear_strategy() ;
  ::seigr::common_requests::ReplicationStrategy strategy() const;
  void set_strategy(::seigr::common_requests::ReplicationStrategy value);

  private:
  ::seigr::common_requests::ReplicationStrategy _internal_strategy() const;
  void _internal_set_strategy(::seigr::common_requests::ReplicationStrategy value);

  public:
  // int32 max_retries = 12;
  void clear_max_retries() ;
  ::int32_t max_retries() const;
  void set_max_retries(::int32_t value);

  private:
  ::int32_t _internal_max_retries() const;
  void _internal_set_max_retries(::int32_t value);

  public:
  // int32 retry_interval_seconds = 13;
  void clear_retry_interval_seconds() ;
  ::int32_t retry_interval_seconds() const;
  void set_retry_interval_seconds(::int32_t value);

  private:
  ::int32_t _internal_retry_interval_seconds() const;
  void _internal_set_retry_interval_seconds(::int32_t value);

  public:
  // double replication_density = 20;
  void clear_replication_density() ;
  double replication_density() const;
  void set_replication_density(double value);

  private:
  double _internal_replication_density() const;
  void _internal_set_replication_density(double value);

  public:
  // bool critical_replication = 7;
  void clear_critical_replication() ;
  bool critical_replication() const;
  void set_critical_replication(bool value);

  private:
  bool _internal_critical_replication() const;
  void _internal_set_critical_replication(bool value);

  public:
  // bool dynamic_scaling = 19;
  void clear_dynamic_scaling() ;
  bool dynamic_scaling() const;
  void set_dynamic_scaling(bool value);

  private:
  bool _internal_dynamic_scaling() const;
  void _internal_set_dynamic_scaling(bool value);

  public:
  // bool enable_integrity_check = 23;
  void clear_enable_integrity_check() ;
  bool enable_integrity_check() const;
  void set_enable_integrity_check(bool value);

  private:
  bool _internal_enable_integrity_check() const;
  void _internal_set_enable_integrity_check(bool value);

  public:
  // bool enable_audit_logging = 26;
  void clear_enable_audit_logging() ;
  bool enable_audit_logging() const;
  void set_enable_audit_logging(bool value);

  private:
  bool _internal_enable_audit_logging() const;
  void _internal_set_enable_audit_logging(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.common_requests.ReplicationRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 26, 2,
      283, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ReplicationRequest& from_msg);
    ::google::protobuf::internal::MapField<ReplicationRequest_ParametersEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        parameters_;
    ::google::protobuf::internal::MapField<ReplicationRequest_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::internal::ArenaStringPtr request_id_;
    ::google::protobuf::internal::ArenaStringPtr segment_id_;
    ::google::protobuf::internal::ArenaStringPtr requested_by_;
    ::google::protobuf::internal::ArenaStringPtr request_timestamp_;
    ::google::protobuf::internal::ArenaStringPtr reason_;
    ::google::protobuf::internal::ArenaStringPtr time_to_live_;
    ::google::protobuf::internal::ArenaStringPtr compliance_level_;
    ::google::protobuf::internal::ArenaStringPtr encryption_requirement_;
    ::google::protobuf::internal::ArenaStringPtr access_control_level_;
    ::google::protobuf::internal::ArenaStringPtr geo_location_;
    ::google::protobuf::internal::ArenaStringPtr error_threshold_policy_;
    ::google::protobuf::internal::ArenaStringPtr rollback_policy_;
    ::google::protobuf::internal::ArenaStringPtr escalation_contact_;
    int threat_level_;
    int priority_;
    int trigger_;
    int strategy_;
    ::int32_t max_retries_;
    ::int32_t retry_interval_seconds_;
    double replication_density_;
    bool critical_replication_;
    bool dynamic_scaling_;
    bool enable_integrity_check_;
    bool enable_audit_logging_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_5frequests_2eproto;
};
// -------------------------------------------------------------------

class ReplicationQuery final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.common_requests.ReplicationQuery) */ {
 public:
  inline ReplicationQuery() : ReplicationQuery(nullptr) {}
  ~ReplicationQuery() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ReplicationQuery* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ReplicationQuery));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ReplicationQuery(
      ::google::protobuf::internal::ConstantInitialized);

  inline ReplicationQuery(const ReplicationQuery& from) : ReplicationQuery(nullptr, from) {}
  inline ReplicationQuery(ReplicationQuery&& from) noexcept
      : ReplicationQuery(nullptr, std::move(from)) {}
  inline ReplicationQuery& operator=(const ReplicationQuery& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReplicationQuery& operator=(ReplicationQuery&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReplicationQuery& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReplicationQuery* internal_default_instance() {
    return reinterpret_cast<const ReplicationQuery*>(
        &_ReplicationQuery_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(ReplicationQuery& a, ReplicationQuery& b) { a.Swap(&b); }
  inline void Swap(ReplicationQuery* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReplicationQuery* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReplicationQuery* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ReplicationQuery>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReplicationQuery& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ReplicationQuery& from) { ReplicationQuery::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ReplicationQuery* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.common_requests.ReplicationQuery"; }

 protected:
  explicit ReplicationQuery(::google::protobuf::Arena* arena);
  ReplicationQuery(::google::protobuf::Arena* arena, const ReplicationQuery& from);
  ReplicationQuery(::google::protobuf::Arena* arena, ReplicationQuery&& from) noexcept
      : ReplicationQuery(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRequestIdsFieldNumber = 1,
    kPrioritiesFieldNumber = 2,
    kTriggersFieldNumber = 3,
    kStrategiesFieldNumber = 4,
    kAdditionalFiltersFieldNumber = 8,
    kDateRangeStartFieldNumber = 5,
    kDateRangeEndFieldNumber = 6,
    kRequestedByFieldNumber = 7,
  };
  // repeated string request_ids = 1;
  int request_ids_size() const;
  private:
  int _internal_request_ids_size() const;

  public:
  void clear_request_ids() ;
  const std::string& request_ids(int index) const;
  std::string* mutable_request_ids(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_request_ids(int index, Arg_&& value, Args_... args);
  std::string* add_request_ids();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_request_ids(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& request_ids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_request_ids();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_request_ids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_request_ids();

  public:
  // repeated .seigr.common_requests.ReplicationPriority priorities = 2;
  int priorities_size() const;
  private:
  int _internal_priorities_size() const;

  public:
  void clear_priorities() ;
  public:
  ::seigr::common_requests::ReplicationPriority priorities(int index) const;
  void set_priorities(int index, ::seigr::common_requests::ReplicationPriority value);
  void add_priorities(::seigr::common_requests::ReplicationPriority value);
  const ::google::protobuf::RepeatedField<int>& priorities() const;
  ::google::protobuf::RepeatedField<int>* mutable_priorities();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_priorities() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_priorities();

  public:
  // repeated .seigr.common_requests.ReplicationTrigger triggers = 3;
  int triggers_size() const;
  private:
  int _internal_triggers_size() const;

  public:
  void clear_triggers() ;
  public:
  ::seigr::common_requests::ReplicationTrigger triggers(int index) const;
  void set_triggers(int index, ::seigr::common_requests::ReplicationTrigger value);
  void add_triggers(::seigr::common_requests::ReplicationTrigger value);
  const ::google::protobuf::RepeatedField<int>& triggers() const;
  ::google::protobuf::RepeatedField<int>* mutable_triggers();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_triggers() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_triggers();

  public:
  // repeated .seigr.common_requests.ReplicationStrategy strategies = 4;
  int strategies_size() const;
  private:
  int _internal_strategies_size() const;

  public:
  void clear_strategies() ;
  public:
  ::seigr::common_requests::ReplicationStrategy strategies(int index) const;
  void set_strategies(int index, ::seigr::common_requests::ReplicationStrategy value);
  void add_strategies(::seigr::common_requests::ReplicationStrategy value);
  const ::google::protobuf::RepeatedField<int>& strategies() const;
  ::google::protobuf::RepeatedField<int>* mutable_strategies();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_strategies() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_strategies();

  public:
  // map<string, string> additional_filters = 8;
  int additional_filters_size() const;
  private:
  int _internal_additional_filters_size() const;

  public:
  void clear_additional_filters() ;
  const ::google::protobuf::Map<std::string, std::string>& additional_filters() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_additional_filters();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_additional_filters() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_additional_filters();

  public:
  // string date_range_start = 5;
  void clear_date_range_start() ;
  const std::string& date_range_start() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_date_range_start(Arg_&& arg, Args_... args);
  std::string* mutable_date_range_start();
  PROTOBUF_NODISCARD std::string* release_date_range_start();
  void set_allocated_date_range_start(std::string* value);

  private:
  const std::string& _internal_date_range_start() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_date_range_start(
      const std::string& value);
  std::string* _internal_mutable_date_range_start();

  public:
  // string date_range_end = 6;
  void clear_date_range_end() ;
  const std::string& date_range_end() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_date_range_end(Arg_&& arg, Args_... args);
  std::string* mutable_date_range_end();
  PROTOBUF_NODISCARD std::string* release_date_range_end();
  void set_allocated_date_range_end(std::string* value);

  private:
  const std::string& _internal_date_range_end() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_date_range_end(
      const std::string& value);
  std::string* _internal_mutable_date_range_end();

  public:
  // string requested_by = 7;
  void clear_requested_by() ;
  const std::string& requested_by() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_requested_by(Arg_&& arg, Args_... args);
  std::string* mutable_requested_by();
  PROTOBUF_NODISCARD std::string* release_requested_by();
  void set_allocated_requested_by(std::string* value);

  private:
  const std::string& _internal_requested_by() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_requested_by(
      const std::string& value);
  std::string* _internal_mutable_requested_by();

  public:
  // @@protoc_insertion_point(class_scope:seigr.common_requests.ReplicationQuery)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 1,
      126, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ReplicationQuery& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> request_ids_;
    ::google::protobuf::RepeatedField<int> priorities_;
    ::google::protobuf::internal::CachedSize _priorities_cached_byte_size_;
    ::google::protobuf::RepeatedField<int> triggers_;
    ::google::protobuf::internal::CachedSize _triggers_cached_byte_size_;
    ::google::protobuf::RepeatedField<int> strategies_;
    ::google::protobuf::internal::CachedSize _strategies_cached_byte_size_;
    ::google::protobuf::internal::MapField<ReplicationQuery_AdditionalFiltersEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        additional_filters_;
    ::google::protobuf::internal::ArenaStringPtr date_range_start_;
    ::google::protobuf::internal::ArenaStringPtr date_range_end_;
    ::google::protobuf::internal::ArenaStringPtr requested_by_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_5frequests_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ReplicationRequest

// string request_id = 1;
inline void ReplicationRequest::clear_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_.ClearToEmpty();
}
inline const std::string& ReplicationRequest::request_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.common_requests.ReplicationRequest.request_id)
  return _internal_request_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ReplicationRequest::set_request_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.common_requests.ReplicationRequest.request_id)
}
inline std::string* ReplicationRequest::mutable_request_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_request_id();
  // @@protoc_insertion_point(field_mutable:seigr.common_requests.ReplicationRequest.request_id)
  return _s;
}
inline const std::string& ReplicationRequest::_internal_request_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.request_id_.Get();
}
inline void ReplicationRequest::_internal_set_request_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_.Set(value, GetArena());
}
inline std::string* ReplicationRequest::_internal_mutable_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.request_id_.Mutable( GetArena());
}
inline std::string* ReplicationRequest::release_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.common_requests.ReplicationRequest.request_id)
  return _impl_.request_id_.Release();
}
inline void ReplicationRequest::set_allocated_request_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.request_id_.IsDefault()) {
    _impl_.request_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.common_requests.ReplicationRequest.request_id)
}

// string segment_id = 2;
inline void ReplicationRequest::clear_segment_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.segment_id_.ClearToEmpty();
}
inline const std::string& ReplicationRequest::segment_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.common_requests.ReplicationRequest.segment_id)
  return _internal_segment_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ReplicationRequest::set_segment_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.segment_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.common_requests.ReplicationRequest.segment_id)
}
inline std::string* ReplicationRequest::mutable_segment_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_segment_id();
  // @@protoc_insertion_point(field_mutable:seigr.common_requests.ReplicationRequest.segment_id)
  return _s;
}
inline const std::string& ReplicationRequest::_internal_segment_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.segment_id_.Get();
}
inline void ReplicationRequest::_internal_set_segment_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.segment_id_.Set(value, GetArena());
}
inline std::string* ReplicationRequest::_internal_mutable_segment_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.segment_id_.Mutable( GetArena());
}
inline std::string* ReplicationRequest::release_segment_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.common_requests.ReplicationRequest.segment_id)
  return _impl_.segment_id_.Release();
}
inline void ReplicationRequest::set_allocated_segment_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.segment_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.segment_id_.IsDefault()) {
    _impl_.segment_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.common_requests.ReplicationRequest.segment_id)
}

// .seigr.common.ThreatLevel threat_level = 3;
inline void ReplicationRequest::clear_threat_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.threat_level_ = 0;
}
inline ::seigr::common::ThreatLevel ReplicationRequest::threat_level() const {
  // @@protoc_insertion_point(field_get:seigr.common_requests.ReplicationRequest.threat_level)
  return _internal_threat_level();
}
inline void ReplicationRequest::set_threat_level(::seigr::common::ThreatLevel value) {
  _internal_set_threat_level(value);
  // @@protoc_insertion_point(field_set:seigr.common_requests.ReplicationRequest.threat_level)
}
inline ::seigr::common::ThreatLevel ReplicationRequest::_internal_threat_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::common::ThreatLevel>(_impl_.threat_level_);
}
inline void ReplicationRequest::_internal_set_threat_level(::seigr::common::ThreatLevel value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.threat_level_ = value;
}

// .seigr.common_requests.ReplicationPriority priority = 4;
inline void ReplicationRequest::clear_priority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.priority_ = 0;
}
inline ::seigr::common_requests::ReplicationPriority ReplicationRequest::priority() const {
  // @@protoc_insertion_point(field_get:seigr.common_requests.ReplicationRequest.priority)
  return _internal_priority();
}
inline void ReplicationRequest::set_priority(::seigr::common_requests::ReplicationPriority value) {
  _internal_set_priority(value);
  // @@protoc_insertion_point(field_set:seigr.common_requests.ReplicationRequest.priority)
}
inline ::seigr::common_requests::ReplicationPriority ReplicationRequest::_internal_priority() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::common_requests::ReplicationPriority>(_impl_.priority_);
}
inline void ReplicationRequest::_internal_set_priority(::seigr::common_requests::ReplicationPriority value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.priority_ = value;
}

// .seigr.common_requests.ReplicationTrigger trigger = 5;
inline void ReplicationRequest::clear_trigger() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trigger_ = 0;
}
inline ::seigr::common_requests::ReplicationTrigger ReplicationRequest::trigger() const {
  // @@protoc_insertion_point(field_get:seigr.common_requests.ReplicationRequest.trigger)
  return _internal_trigger();
}
inline void ReplicationRequest::set_trigger(::seigr::common_requests::ReplicationTrigger value) {
  _internal_set_trigger(value);
  // @@protoc_insertion_point(field_set:seigr.common_requests.ReplicationRequest.trigger)
}
inline ::seigr::common_requests::ReplicationTrigger ReplicationRequest::_internal_trigger() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::common_requests::ReplicationTrigger>(_impl_.trigger_);
}
inline void ReplicationRequest::_internal_set_trigger(::seigr::common_requests::ReplicationTrigger value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trigger_ = value;
}

// .seigr.common_requests.ReplicationStrategy strategy = 6;
inline void ReplicationRequest::clear_strategy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.strategy_ = 0;
}
inline ::seigr::common_requests::ReplicationStrategy ReplicationRequest::strategy() const {
  // @@protoc_insertion_point(field_get:seigr.common_requests.ReplicationRequest.strategy)
  return _internal_strategy();
}
inline void ReplicationRequest::set_strategy(::seigr::common_requests::ReplicationStrategy value) {
  _internal_set_strategy(value);
  // @@protoc_insertion_point(field_set:seigr.common_requests.ReplicationRequest.strategy)
}
inline ::seigr::common_requests::ReplicationStrategy ReplicationRequest::_internal_strategy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::common_requests::ReplicationStrategy>(_impl_.strategy_);
}
inline void ReplicationRequest::_internal_set_strategy(::seigr::common_requests::ReplicationStrategy value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.strategy_ = value;
}

// bool critical_replication = 7;
inline void ReplicationRequest::clear_critical_replication() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.critical_replication_ = false;
}
inline bool ReplicationRequest::critical_replication() const {
  // @@protoc_insertion_point(field_get:seigr.common_requests.ReplicationRequest.critical_replication)
  return _internal_critical_replication();
}
inline void ReplicationRequest::set_critical_replication(bool value) {
  _internal_set_critical_replication(value);
  // @@protoc_insertion_point(field_set:seigr.common_requests.ReplicationRequest.critical_replication)
}
inline bool ReplicationRequest::_internal_critical_replication() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.critical_replication_;
}
inline void ReplicationRequest::_internal_set_critical_replication(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.critical_replication_ = value;
}

// string requested_by = 8;
inline void ReplicationRequest::clear_requested_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requested_by_.ClearToEmpty();
}
inline const std::string& ReplicationRequest::requested_by() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.common_requests.ReplicationRequest.requested_by)
  return _internal_requested_by();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ReplicationRequest::set_requested_by(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requested_by_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.common_requests.ReplicationRequest.requested_by)
}
inline std::string* ReplicationRequest::mutable_requested_by() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_requested_by();
  // @@protoc_insertion_point(field_mutable:seigr.common_requests.ReplicationRequest.requested_by)
  return _s;
}
inline const std::string& ReplicationRequest::_internal_requested_by() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.requested_by_.Get();
}
inline void ReplicationRequest::_internal_set_requested_by(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requested_by_.Set(value, GetArena());
}
inline std::string* ReplicationRequest::_internal_mutable_requested_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.requested_by_.Mutable( GetArena());
}
inline std::string* ReplicationRequest::release_requested_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.common_requests.ReplicationRequest.requested_by)
  return _impl_.requested_by_.Release();
}
inline void ReplicationRequest::set_allocated_requested_by(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requested_by_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.requested_by_.IsDefault()) {
    _impl_.requested_by_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.common_requests.ReplicationRequest.requested_by)
}

// string request_timestamp = 9;
inline void ReplicationRequest::clear_request_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_timestamp_.ClearToEmpty();
}
inline const std::string& ReplicationRequest::request_timestamp() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.common_requests.ReplicationRequest.request_timestamp)
  return _internal_request_timestamp();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ReplicationRequest::set_request_timestamp(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_timestamp_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.common_requests.ReplicationRequest.request_timestamp)
}
inline std::string* ReplicationRequest::mutable_request_timestamp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_request_timestamp();
  // @@protoc_insertion_point(field_mutable:seigr.common_requests.ReplicationRequest.request_timestamp)
  return _s;
}
inline const std::string& ReplicationRequest::_internal_request_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.request_timestamp_.Get();
}
inline void ReplicationRequest::_internal_set_request_timestamp(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_timestamp_.Set(value, GetArena());
}
inline std::string* ReplicationRequest::_internal_mutable_request_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.request_timestamp_.Mutable( GetArena());
}
inline std::string* ReplicationRequest::release_request_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.common_requests.ReplicationRequest.request_timestamp)
  return _impl_.request_timestamp_.Release();
}
inline void ReplicationRequest::set_allocated_request_timestamp(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_timestamp_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.request_timestamp_.IsDefault()) {
    _impl_.request_timestamp_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.common_requests.ReplicationRequest.request_timestamp)
}

// map<string, string> parameters = 10;
inline int ReplicationRequest::_internal_parameters_size() const {
  return _internal_parameters().size();
}
inline int ReplicationRequest::parameters_size() const {
  return _internal_parameters_size();
}
inline void ReplicationRequest::clear_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parameters_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& ReplicationRequest::_internal_parameters() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.parameters_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& ReplicationRequest::parameters() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.common_requests.ReplicationRequest.parameters)
  return _internal_parameters();
}
inline ::google::protobuf::Map<std::string, std::string>* ReplicationRequest::_internal_mutable_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.parameters_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* ReplicationRequest::mutable_parameters() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.common_requests.ReplicationRequest.parameters)
  return _internal_mutable_parameters();
}

// string reason = 11;
inline void ReplicationRequest::clear_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.ClearToEmpty();
}
inline const std::string& ReplicationRequest::reason() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.common_requests.ReplicationRequest.reason)
  return _internal_reason();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ReplicationRequest::set_reason(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.common_requests.ReplicationRequest.reason)
}
inline std::string* ReplicationRequest::mutable_reason() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_reason();
  // @@protoc_insertion_point(field_mutable:seigr.common_requests.ReplicationRequest.reason)
  return _s;
}
inline const std::string& ReplicationRequest::_internal_reason() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reason_.Get();
}
inline void ReplicationRequest::_internal_set_reason(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.Set(value, GetArena());
}
inline std::string* ReplicationRequest::_internal_mutable_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.reason_.Mutable( GetArena());
}
inline std::string* ReplicationRequest::release_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.common_requests.ReplicationRequest.reason)
  return _impl_.reason_.Release();
}
inline void ReplicationRequest::set_allocated_reason(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.reason_.IsDefault()) {
    _impl_.reason_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.common_requests.ReplicationRequest.reason)
}

// int32 max_retries = 12;
inline void ReplicationRequest::clear_max_retries() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_retries_ = 0;
}
inline ::int32_t ReplicationRequest::max_retries() const {
  // @@protoc_insertion_point(field_get:seigr.common_requests.ReplicationRequest.max_retries)
  return _internal_max_retries();
}
inline void ReplicationRequest::set_max_retries(::int32_t value) {
  _internal_set_max_retries(value);
  // @@protoc_insertion_point(field_set:seigr.common_requests.ReplicationRequest.max_retries)
}
inline ::int32_t ReplicationRequest::_internal_max_retries() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_retries_;
}
inline void ReplicationRequest::_internal_set_max_retries(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_retries_ = value;
}

// int32 retry_interval_seconds = 13;
inline void ReplicationRequest::clear_retry_interval_seconds() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.retry_interval_seconds_ = 0;
}
inline ::int32_t ReplicationRequest::retry_interval_seconds() const {
  // @@protoc_insertion_point(field_get:seigr.common_requests.ReplicationRequest.retry_interval_seconds)
  return _internal_retry_interval_seconds();
}
inline void ReplicationRequest::set_retry_interval_seconds(::int32_t value) {
  _internal_set_retry_interval_seconds(value);
  // @@protoc_insertion_point(field_set:seigr.common_requests.ReplicationRequest.retry_interval_seconds)
}
inline ::int32_t ReplicationRequest::_internal_retry_interval_seconds() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.retry_interval_seconds_;
}
inline void ReplicationRequest::_internal_set_retry_interval_seconds(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.retry_interval_seconds_ = value;
}

// string time_to_live = 14;
inline void ReplicationRequest::clear_time_to_live() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_to_live_.ClearToEmpty();
}
inline const std::string& ReplicationRequest::time_to_live() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.common_requests.ReplicationRequest.time_to_live)
  return _internal_time_to_live();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ReplicationRequest::set_time_to_live(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_to_live_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.common_requests.ReplicationRequest.time_to_live)
}
inline std::string* ReplicationRequest::mutable_time_to_live() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_time_to_live();
  // @@protoc_insertion_point(field_mutable:seigr.common_requests.ReplicationRequest.time_to_live)
  return _s;
}
inline const std::string& ReplicationRequest::_internal_time_to_live() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.time_to_live_.Get();
}
inline void ReplicationRequest::_internal_set_time_to_live(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_to_live_.Set(value, GetArena());
}
inline std::string* ReplicationRequest::_internal_mutable_time_to_live() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.time_to_live_.Mutable( GetArena());
}
inline std::string* ReplicationRequest::release_time_to_live() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.common_requests.ReplicationRequest.time_to_live)
  return _impl_.time_to_live_.Release();
}
inline void ReplicationRequest::set_allocated_time_to_live(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_to_live_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.time_to_live_.IsDefault()) {
    _impl_.time_to_live_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.common_requests.ReplicationRequest.time_to_live)
}

// string compliance_level = 15;
inline void ReplicationRequest::clear_compliance_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.compliance_level_.ClearToEmpty();
}
inline const std::string& ReplicationRequest::compliance_level() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.common_requests.ReplicationRequest.compliance_level)
  return _internal_compliance_level();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ReplicationRequest::set_compliance_level(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.compliance_level_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.common_requests.ReplicationRequest.compliance_level)
}
inline std::string* ReplicationRequest::mutable_compliance_level() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_compliance_level();
  // @@protoc_insertion_point(field_mutable:seigr.common_requests.ReplicationRequest.compliance_level)
  return _s;
}
inline const std::string& ReplicationRequest::_internal_compliance_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.compliance_level_.Get();
}
inline void ReplicationRequest::_internal_set_compliance_level(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.compliance_level_.Set(value, GetArena());
}
inline std::string* ReplicationRequest::_internal_mutable_compliance_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.compliance_level_.Mutable( GetArena());
}
inline std::string* ReplicationRequest::release_compliance_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.common_requests.ReplicationRequest.compliance_level)
  return _impl_.compliance_level_.Release();
}
inline void ReplicationRequest::set_allocated_compliance_level(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.compliance_level_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.compliance_level_.IsDefault()) {
    _impl_.compliance_level_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.common_requests.ReplicationRequest.compliance_level)
}

// string encryption_requirement = 16;
inline void ReplicationRequest::clear_encryption_requirement() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.encryption_requirement_.ClearToEmpty();
}
inline const std::string& ReplicationRequest::encryption_requirement() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.common_requests.ReplicationRequest.encryption_requirement)
  return _internal_encryption_requirement();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ReplicationRequest::set_encryption_requirement(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.encryption_requirement_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.common_requests.ReplicationRequest.encryption_requirement)
}
inline std::string* ReplicationRequest::mutable_encryption_requirement() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_encryption_requirement();
  // @@protoc_insertion_point(field_mutable:seigr.common_requests.ReplicationRequest.encryption_requirement)
  return _s;
}
inline const std::string& ReplicationRequest::_internal_encryption_requirement() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.encryption_requirement_.Get();
}
inline void ReplicationRequest::_internal_set_encryption_requirement(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.encryption_requirement_.Set(value, GetArena());
}
inline std::string* ReplicationRequest::_internal_mutable_encryption_requirement() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.encryption_requirement_.Mutable( GetArena());
}
inline std::string* ReplicationRequest::release_encryption_requirement() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.common_requests.ReplicationRequest.encryption_requirement)
  return _impl_.encryption_requirement_.Release();
}
inline void ReplicationRequest::set_allocated_encryption_requirement(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.encryption_requirement_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.encryption_requirement_.IsDefault()) {
    _impl_.encryption_requirement_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.common_requests.ReplicationRequest.encryption_requirement)
}

// string access_control_level = 17;
inline void ReplicationRequest::clear_access_control_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.access_control_level_.ClearToEmpty();
}
inline const std::string& ReplicationRequest::access_control_level() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.common_requests.ReplicationRequest.access_control_level)
  return _internal_access_control_level();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ReplicationRequest::set_access_control_level(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.access_control_level_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.common_requests.ReplicationRequest.access_control_level)
}
inline std::string* ReplicationRequest::mutable_access_control_level() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_access_control_level();
  // @@protoc_insertion_point(field_mutable:seigr.common_requests.ReplicationRequest.access_control_level)
  return _s;
}
inline const std::string& ReplicationRequest::_internal_access_control_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.access_control_level_.Get();
}
inline void ReplicationRequest::_internal_set_access_control_level(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.access_control_level_.Set(value, GetArena());
}
inline std::string* ReplicationRequest::_internal_mutable_access_control_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.access_control_level_.Mutable( GetArena());
}
inline std::string* ReplicationRequest::release_access_control_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.common_requests.ReplicationRequest.access_control_level)
  return _impl_.access_control_level_.Release();
}
inline void ReplicationRequest::set_allocated_access_control_level(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.access_control_level_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.access_control_level_.IsDefault()) {
    _impl_.access_control_level_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.common_requests.ReplicationRequest.access_control_level)
}

// string geo_location = 18;
inline void ReplicationRequest::clear_geo_location() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.geo_location_.ClearToEmpty();
}
inline const std::string& ReplicationRequest::geo_location() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.common_requests.ReplicationRequest.geo_location)
  return _internal_geo_location();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ReplicationRequest::set_geo_location(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.geo_location_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.common_requests.ReplicationRequest.geo_location)
}
inline std::string* ReplicationRequest::mutable_geo_location() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_geo_location();
  // @@protoc_insertion_point(field_mutable:seigr.common_requests.ReplicationRequest.geo_location)
  return _s;
}
inline const std::string& ReplicationRequest::_internal_geo_location() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.geo_location_.Get();
}
inline void ReplicationRequest::_internal_set_geo_location(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.geo_location_.Set(value, GetArena());
}
inline std::string* ReplicationRequest::_internal_mutable_geo_location() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.geo_location_.Mutable( GetArena());
}
inline std::string* ReplicationRequest::release_geo_location() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.common_requests.ReplicationRequest.geo_location)
  return _impl_.geo_location_.Release();
}
inline void ReplicationRequest::set_allocated_geo_location(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.geo_location_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.geo_location_.IsDefault()) {
    _impl_.geo_location_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.common_requests.ReplicationRequest.geo_location)
}

// bool dynamic_scaling = 19;
inline void ReplicationRequest::clear_dynamic_scaling() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dynamic_scaling_ = false;
}
inline bool ReplicationRequest::dynamic_scaling() const {
  // @@protoc_insertion_point(field_get:seigr.common_requests.ReplicationRequest.dynamic_scaling)
  return _internal_dynamic_scaling();
}
inline void ReplicationRequest::set_dynamic_scaling(bool value) {
  _internal_set_dynamic_scaling(value);
  // @@protoc_insertion_point(field_set:seigr.common_requests.ReplicationRequest.dynamic_scaling)
}
inline bool ReplicationRequest::_internal_dynamic_scaling() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dynamic_scaling_;
}
inline void ReplicationRequest::_internal_set_dynamic_scaling(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dynamic_scaling_ = value;
}

// double replication_density = 20;
inline void ReplicationRequest::clear_replication_density() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.replication_density_ = 0;
}
inline double ReplicationRequest::replication_density() const {
  // @@protoc_insertion_point(field_get:seigr.common_requests.ReplicationRequest.replication_density)
  return _internal_replication_density();
}
inline void ReplicationRequest::set_replication_density(double value) {
  _internal_set_replication_density(value);
  // @@protoc_insertion_point(field_set:seigr.common_requests.ReplicationRequest.replication_density)
}
inline double ReplicationRequest::_internal_replication_density() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.replication_density_;
}
inline void ReplicationRequest::_internal_set_replication_density(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.replication_density_ = value;
}

// string error_threshold_policy = 21;
inline void ReplicationRequest::clear_error_threshold_policy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_threshold_policy_.ClearToEmpty();
}
inline const std::string& ReplicationRequest::error_threshold_policy() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.common_requests.ReplicationRequest.error_threshold_policy)
  return _internal_error_threshold_policy();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ReplicationRequest::set_error_threshold_policy(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_threshold_policy_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.common_requests.ReplicationRequest.error_threshold_policy)
}
inline std::string* ReplicationRequest::mutable_error_threshold_policy() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_error_threshold_policy();
  // @@protoc_insertion_point(field_mutable:seigr.common_requests.ReplicationRequest.error_threshold_policy)
  return _s;
}
inline const std::string& ReplicationRequest::_internal_error_threshold_policy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.error_threshold_policy_.Get();
}
inline void ReplicationRequest::_internal_set_error_threshold_policy(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_threshold_policy_.Set(value, GetArena());
}
inline std::string* ReplicationRequest::_internal_mutable_error_threshold_policy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.error_threshold_policy_.Mutable( GetArena());
}
inline std::string* ReplicationRequest::release_error_threshold_policy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.common_requests.ReplicationRequest.error_threshold_policy)
  return _impl_.error_threshold_policy_.Release();
}
inline void ReplicationRequest::set_allocated_error_threshold_policy(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_threshold_policy_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.error_threshold_policy_.IsDefault()) {
    _impl_.error_threshold_policy_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.common_requests.ReplicationRequest.error_threshold_policy)
}

// map<string, string> metadata = 22;
inline int ReplicationRequest::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int ReplicationRequest::metadata_size() const {
  return _internal_metadata_size();
}
inline void ReplicationRequest::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& ReplicationRequest::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& ReplicationRequest::metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.common_requests.ReplicationRequest.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* ReplicationRequest::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* ReplicationRequest::mutable_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.common_requests.ReplicationRequest.metadata)
  return _internal_mutable_metadata();
}

// bool enable_integrity_check = 23;
inline void ReplicationRequest::clear_enable_integrity_check() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_integrity_check_ = false;
}
inline bool ReplicationRequest::enable_integrity_check() const {
  // @@protoc_insertion_point(field_get:seigr.common_requests.ReplicationRequest.enable_integrity_check)
  return _internal_enable_integrity_check();
}
inline void ReplicationRequest::set_enable_integrity_check(bool value) {
  _internal_set_enable_integrity_check(value);
  // @@protoc_insertion_point(field_set:seigr.common_requests.ReplicationRequest.enable_integrity_check)
}
inline bool ReplicationRequest::_internal_enable_integrity_check() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enable_integrity_check_;
}
inline void ReplicationRequest::_internal_set_enable_integrity_check(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_integrity_check_ = value;
}

// string rollback_policy = 24;
inline void ReplicationRequest::clear_rollback_policy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rollback_policy_.ClearToEmpty();
}
inline const std::string& ReplicationRequest::rollback_policy() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.common_requests.ReplicationRequest.rollback_policy)
  return _internal_rollback_policy();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ReplicationRequest::set_rollback_policy(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rollback_policy_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.common_requests.ReplicationRequest.rollback_policy)
}
inline std::string* ReplicationRequest::mutable_rollback_policy() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_rollback_policy();
  // @@protoc_insertion_point(field_mutable:seigr.common_requests.ReplicationRequest.rollback_policy)
  return _s;
}
inline const std::string& ReplicationRequest::_internal_rollback_policy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rollback_policy_.Get();
}
inline void ReplicationRequest::_internal_set_rollback_policy(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rollback_policy_.Set(value, GetArena());
}
inline std::string* ReplicationRequest::_internal_mutable_rollback_policy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.rollback_policy_.Mutable( GetArena());
}
inline std::string* ReplicationRequest::release_rollback_policy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.common_requests.ReplicationRequest.rollback_policy)
  return _impl_.rollback_policy_.Release();
}
inline void ReplicationRequest::set_allocated_rollback_policy(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rollback_policy_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.rollback_policy_.IsDefault()) {
    _impl_.rollback_policy_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.common_requests.ReplicationRequest.rollback_policy)
}

// string escalation_contact = 25;
inline void ReplicationRequest::clear_escalation_contact() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.escalation_contact_.ClearToEmpty();
}
inline const std::string& ReplicationRequest::escalation_contact() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.common_requests.ReplicationRequest.escalation_contact)
  return _internal_escalation_contact();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ReplicationRequest::set_escalation_contact(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.escalation_contact_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.common_requests.ReplicationRequest.escalation_contact)
}
inline std::string* ReplicationRequest::mutable_escalation_contact() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_escalation_contact();
  // @@protoc_insertion_point(field_mutable:seigr.common_requests.ReplicationRequest.escalation_contact)
  return _s;
}
inline const std::string& ReplicationRequest::_internal_escalation_contact() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.escalation_contact_.Get();
}
inline void ReplicationRequest::_internal_set_escalation_contact(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.escalation_contact_.Set(value, GetArena());
}
inline std::string* ReplicationRequest::_internal_mutable_escalation_contact() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.escalation_contact_.Mutable( GetArena());
}
inline std::string* ReplicationRequest::release_escalation_contact() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.common_requests.ReplicationRequest.escalation_contact)
  return _impl_.escalation_contact_.Release();
}
inline void ReplicationRequest::set_allocated_escalation_contact(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.escalation_contact_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.escalation_contact_.IsDefault()) {
    _impl_.escalation_contact_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.common_requests.ReplicationRequest.escalation_contact)
}

// bool enable_audit_logging = 26;
inline void ReplicationRequest::clear_enable_audit_logging() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_audit_logging_ = false;
}
inline bool ReplicationRequest::enable_audit_logging() const {
  // @@protoc_insertion_point(field_get:seigr.common_requests.ReplicationRequest.enable_audit_logging)
  return _internal_enable_audit_logging();
}
inline void ReplicationRequest::set_enable_audit_logging(bool value) {
  _internal_set_enable_audit_logging(value);
  // @@protoc_insertion_point(field_set:seigr.common_requests.ReplicationRequest.enable_audit_logging)
}
inline bool ReplicationRequest::_internal_enable_audit_logging() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enable_audit_logging_;
}
inline void ReplicationRequest::_internal_set_enable_audit_logging(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_audit_logging_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ReplicationResponse

// string request_id = 1;
inline void ReplicationResponse::clear_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_.ClearToEmpty();
}
inline const std::string& ReplicationResponse::request_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.common_requests.ReplicationResponse.request_id)
  return _internal_request_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ReplicationResponse::set_request_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.common_requests.ReplicationResponse.request_id)
}
inline std::string* ReplicationResponse::mutable_request_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_request_id();
  // @@protoc_insertion_point(field_mutable:seigr.common_requests.ReplicationResponse.request_id)
  return _s;
}
inline const std::string& ReplicationResponse::_internal_request_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.request_id_.Get();
}
inline void ReplicationResponse::_internal_set_request_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_.Set(value, GetArena());
}
inline std::string* ReplicationResponse::_internal_mutable_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.request_id_.Mutable( GetArena());
}
inline std::string* ReplicationResponse::release_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.common_requests.ReplicationResponse.request_id)
  return _impl_.request_id_.Release();
}
inline void ReplicationResponse::set_allocated_request_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.request_id_.IsDefault()) {
    _impl_.request_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.common_requests.ReplicationResponse.request_id)
}

// bool success = 2;
inline void ReplicationResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool ReplicationResponse::success() const {
  // @@protoc_insertion_point(field_get:seigr.common_requests.ReplicationResponse.success)
  return _internal_success();
}
inline void ReplicationResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:seigr.common_requests.ReplicationResponse.success)
}
inline bool ReplicationResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void ReplicationResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// string status_message = 3;
inline void ReplicationResponse::clear_status_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_message_.ClearToEmpty();
}
inline const std::string& ReplicationResponse::status_message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.common_requests.ReplicationResponse.status_message)
  return _internal_status_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ReplicationResponse::set_status_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.common_requests.ReplicationResponse.status_message)
}
inline std::string* ReplicationResponse::mutable_status_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_status_message();
  // @@protoc_insertion_point(field_mutable:seigr.common_requests.ReplicationResponse.status_message)
  return _s;
}
inline const std::string& ReplicationResponse::_internal_status_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_message_.Get();
}
inline void ReplicationResponse::_internal_set_status_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_message_.Set(value, GetArena());
}
inline std::string* ReplicationResponse::_internal_mutable_status_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.status_message_.Mutable( GetArena());
}
inline std::string* ReplicationResponse::release_status_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.common_requests.ReplicationResponse.status_message)
  return _impl_.status_message_.Release();
}
inline void ReplicationResponse::set_allocated_status_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.status_message_.IsDefault()) {
    _impl_.status_message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.common_requests.ReplicationResponse.status_message)
}

// string completion_timestamp = 4;
inline void ReplicationResponse::clear_completion_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.completion_timestamp_.ClearToEmpty();
}
inline const std::string& ReplicationResponse::completion_timestamp() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.common_requests.ReplicationResponse.completion_timestamp)
  return _internal_completion_timestamp();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ReplicationResponse::set_completion_timestamp(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.completion_timestamp_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.common_requests.ReplicationResponse.completion_timestamp)
}
inline std::string* ReplicationResponse::mutable_completion_timestamp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_completion_timestamp();
  // @@protoc_insertion_point(field_mutable:seigr.common_requests.ReplicationResponse.completion_timestamp)
  return _s;
}
inline const std::string& ReplicationResponse::_internal_completion_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.completion_timestamp_.Get();
}
inline void ReplicationResponse::_internal_set_completion_timestamp(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.completion_timestamp_.Set(value, GetArena());
}
inline std::string* ReplicationResponse::_internal_mutable_completion_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.completion_timestamp_.Mutable( GetArena());
}
inline std::string* ReplicationResponse::release_completion_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.common_requests.ReplicationResponse.completion_timestamp)
  return _impl_.completion_timestamp_.Release();
}
inline void ReplicationResponse::set_allocated_completion_timestamp(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.completion_timestamp_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.completion_timestamp_.IsDefault()) {
    _impl_.completion_timestamp_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.common_requests.ReplicationResponse.completion_timestamp)
}

// map<string, string> response_metadata = 5;
inline int ReplicationResponse::_internal_response_metadata_size() const {
  return _internal_response_metadata().size();
}
inline int ReplicationResponse::response_metadata_size() const {
  return _internal_response_metadata_size();
}
inline void ReplicationResponse::clear_response_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.response_metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& ReplicationResponse::_internal_response_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.response_metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& ReplicationResponse::response_metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.common_requests.ReplicationResponse.response_metadata)
  return _internal_response_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* ReplicationResponse::_internal_mutable_response_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.response_metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* ReplicationResponse::mutable_response_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.common_requests.ReplicationResponse.response_metadata)
  return _internal_mutable_response_metadata();
}

// string error_code = 6;
inline void ReplicationResponse::clear_error_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_code_.ClearToEmpty();
}
inline const std::string& ReplicationResponse::error_code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.common_requests.ReplicationResponse.error_code)
  return _internal_error_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ReplicationResponse::set_error_code(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.common_requests.ReplicationResponse.error_code)
}
inline std::string* ReplicationResponse::mutable_error_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_error_code();
  // @@protoc_insertion_point(field_mutable:seigr.common_requests.ReplicationResponse.error_code)
  return _s;
}
inline const std::string& ReplicationResponse::_internal_error_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.error_code_.Get();
}
inline void ReplicationResponse::_internal_set_error_code(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_code_.Set(value, GetArena());
}
inline std::string* ReplicationResponse::_internal_mutable_error_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.error_code_.Mutable( GetArena());
}
inline std::string* ReplicationResponse::release_error_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.common_requests.ReplicationResponse.error_code)
  return _impl_.error_code_.Release();
}
inline void ReplicationResponse::set_allocated_error_code(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_code_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.error_code_.IsDefault()) {
    _impl_.error_code_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.common_requests.ReplicationResponse.error_code)
}

// double resource_utilization_percentage = 7;
inline void ReplicationResponse::clear_resource_utilization_percentage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resource_utilization_percentage_ = 0;
}
inline double ReplicationResponse::resource_utilization_percentage() const {
  // @@protoc_insertion_point(field_get:seigr.common_requests.ReplicationResponse.resource_utilization_percentage)
  return _internal_resource_utilization_percentage();
}
inline void ReplicationResponse::set_resource_utilization_percentage(double value) {
  _internal_set_resource_utilization_percentage(value);
  // @@protoc_insertion_point(field_set:seigr.common_requests.ReplicationResponse.resource_utilization_percentage)
}
inline double ReplicationResponse::_internal_resource_utilization_percentage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.resource_utilization_percentage_;
}
inline void ReplicationResponse::_internal_set_resource_utilization_percentage(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resource_utilization_percentage_ = value;
}

// bool retry_attempted = 8;
inline void ReplicationResponse::clear_retry_attempted() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.retry_attempted_ = false;
}
inline bool ReplicationResponse::retry_attempted() const {
  // @@protoc_insertion_point(field_get:seigr.common_requests.ReplicationResponse.retry_attempted)
  return _internal_retry_attempted();
}
inline void ReplicationResponse::set_retry_attempted(bool value) {
  _internal_set_retry_attempted(value);
  // @@protoc_insertion_point(field_set:seigr.common_requests.ReplicationResponse.retry_attempted)
}
inline bool ReplicationResponse::_internal_retry_attempted() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.retry_attempted_;
}
inline void ReplicationResponse::_internal_set_retry_attempted(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.retry_attempted_ = value;
}

// int32 total_retries = 9;
inline void ReplicationResponse::clear_total_retries() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_retries_ = 0;
}
inline ::int32_t ReplicationResponse::total_retries() const {
  // @@protoc_insertion_point(field_get:seigr.common_requests.ReplicationResponse.total_retries)
  return _internal_total_retries();
}
inline void ReplicationResponse::set_total_retries(::int32_t value) {
  _internal_set_total_retries(value);
  // @@protoc_insertion_point(field_set:seigr.common_requests.ReplicationResponse.total_retries)
}
inline ::int32_t ReplicationResponse::_internal_total_retries() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_retries_;
}
inline void ReplicationResponse::_internal_set_total_retries(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_retries_ = value;
}

// string escalation_status = 10;
inline void ReplicationResponse::clear_escalation_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.escalation_status_.ClearToEmpty();
}
inline const std::string& ReplicationResponse::escalation_status() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.common_requests.ReplicationResponse.escalation_status)
  return _internal_escalation_status();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ReplicationResponse::set_escalation_status(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.escalation_status_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.common_requests.ReplicationResponse.escalation_status)
}
inline std::string* ReplicationResponse::mutable_escalation_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_escalation_status();
  // @@protoc_insertion_point(field_mutable:seigr.common_requests.ReplicationResponse.escalation_status)
  return _s;
}
inline const std::string& ReplicationResponse::_internal_escalation_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.escalation_status_.Get();
}
inline void ReplicationResponse::_internal_set_escalation_status(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.escalation_status_.Set(value, GetArena());
}
inline std::string* ReplicationResponse::_internal_mutable_escalation_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.escalation_status_.Mutable( GetArena());
}
inline std::string* ReplicationResponse::release_escalation_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.common_requests.ReplicationResponse.escalation_status)
  return _impl_.escalation_status_.Release();
}
inline void ReplicationResponse::set_allocated_escalation_status(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.escalation_status_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.escalation_status_.IsDefault()) {
    _impl_.escalation_status_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.common_requests.ReplicationResponse.escalation_status)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ReplicationQuery

// repeated string request_ids = 1;
inline int ReplicationQuery::_internal_request_ids_size() const {
  return _internal_request_ids().size();
}
inline int ReplicationQuery::request_ids_size() const {
  return _internal_request_ids_size();
}
inline void ReplicationQuery::clear_request_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_ids_.Clear();
}
inline std::string* ReplicationQuery::add_request_ids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_request_ids()->Add();
  // @@protoc_insertion_point(field_add_mutable:seigr.common_requests.ReplicationQuery.request_ids)
  return _s;
}
inline const std::string& ReplicationQuery::request_ids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.common_requests.ReplicationQuery.request_ids)
  return _internal_request_ids().Get(index);
}
inline std::string* ReplicationQuery::mutable_request_ids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.common_requests.ReplicationQuery.request_ids)
  return _internal_mutable_request_ids()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void ReplicationQuery::set_request_ids(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_request_ids()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:seigr.common_requests.ReplicationQuery.request_ids)
}
template <typename Arg_, typename... Args_>
inline void ReplicationQuery::add_request_ids(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_request_ids(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seigr.common_requests.ReplicationQuery.request_ids)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ReplicationQuery::request_ids() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.common_requests.ReplicationQuery.request_ids)
  return _internal_request_ids();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ReplicationQuery::mutable_request_ids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.common_requests.ReplicationQuery.request_ids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_request_ids();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ReplicationQuery::_internal_request_ids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.request_ids_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ReplicationQuery::_internal_mutable_request_ids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.request_ids_;
}

// repeated .seigr.common_requests.ReplicationPriority priorities = 2;
inline int ReplicationQuery::_internal_priorities_size() const {
  return _internal_priorities().size();
}
inline int ReplicationQuery::priorities_size() const {
  return _internal_priorities_size();
}
inline void ReplicationQuery::clear_priorities() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.priorities_.Clear();
}
inline ::seigr::common_requests::ReplicationPriority ReplicationQuery::priorities(int index) const {
  // @@protoc_insertion_point(field_get:seigr.common_requests.ReplicationQuery.priorities)
  return static_cast<::seigr::common_requests::ReplicationPriority>(_internal_priorities().Get(index));
}
inline void ReplicationQuery::set_priorities(int index, ::seigr::common_requests::ReplicationPriority value) {
  _internal_mutable_priorities()->Set(index, value);
  // @@protoc_insertion_point(field_set:seigr.common_requests.ReplicationQuery.priorities)
}
inline void ReplicationQuery::add_priorities(::seigr::common_requests::ReplicationPriority value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_priorities()->Add(value);
  // @@protoc_insertion_point(field_add:seigr.common_requests.ReplicationQuery.priorities)
}
inline const ::google::protobuf::RepeatedField<int>& ReplicationQuery::priorities() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.common_requests.ReplicationQuery.priorities)
  return _internal_priorities();
}
inline ::google::protobuf::RepeatedField<int>* ReplicationQuery::mutable_priorities()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.common_requests.ReplicationQuery.priorities)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_priorities();
}
inline const ::google::protobuf::RepeatedField<int>& ReplicationQuery::_internal_priorities()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.priorities_;
}
inline ::google::protobuf::RepeatedField<int>* ReplicationQuery::_internal_mutable_priorities() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.priorities_;
}

// repeated .seigr.common_requests.ReplicationTrigger triggers = 3;
inline int ReplicationQuery::_internal_triggers_size() const {
  return _internal_triggers().size();
}
inline int ReplicationQuery::triggers_size() const {
  return _internal_triggers_size();
}
inline void ReplicationQuery::clear_triggers() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.triggers_.Clear();
}
inline ::seigr::common_requests::ReplicationTrigger ReplicationQuery::triggers(int index) const {
  // @@protoc_insertion_point(field_get:seigr.common_requests.ReplicationQuery.triggers)
  return static_cast<::seigr::common_requests::ReplicationTrigger>(_internal_triggers().Get(index));
}
inline void ReplicationQuery::set_triggers(int index, ::seigr::common_requests::ReplicationTrigger value) {
  _internal_mutable_triggers()->Set(index, value);
  // @@protoc_insertion_point(field_set:seigr.common_requests.ReplicationQuery.triggers)
}
inline void ReplicationQuery::add_triggers(::seigr::common_requests::ReplicationTrigger value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_triggers()->Add(value);
  // @@protoc_insertion_point(field_add:seigr.common_requests.ReplicationQuery.triggers)
}
inline const ::google::protobuf::RepeatedField<int>& ReplicationQuery::triggers() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.common_requests.ReplicationQuery.triggers)
  return _internal_triggers();
}
inline ::google::protobuf::RepeatedField<int>* ReplicationQuery::mutable_triggers()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.common_requests.ReplicationQuery.triggers)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_triggers();
}
inline const ::google::protobuf::RepeatedField<int>& ReplicationQuery::_internal_triggers()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.triggers_;
}
inline ::google::protobuf::RepeatedField<int>* ReplicationQuery::_internal_mutable_triggers() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.triggers_;
}

// repeated .seigr.common_requests.ReplicationStrategy strategies = 4;
inline int ReplicationQuery::_internal_strategies_size() const {
  return _internal_strategies().size();
}
inline int ReplicationQuery::strategies_size() const {
  return _internal_strategies_size();
}
inline void ReplicationQuery::clear_strategies() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.strategies_.Clear();
}
inline ::seigr::common_requests::ReplicationStrategy ReplicationQuery::strategies(int index) const {
  // @@protoc_insertion_point(field_get:seigr.common_requests.ReplicationQuery.strategies)
  return static_cast<::seigr::common_requests::ReplicationStrategy>(_internal_strategies().Get(index));
}
inline void ReplicationQuery::set_strategies(int index, ::seigr::common_requests::ReplicationStrategy value) {
  _internal_mutable_strategies()->Set(index, value);
  // @@protoc_insertion_point(field_set:seigr.common_requests.ReplicationQuery.strategies)
}
inline void ReplicationQuery::add_strategies(::seigr::common_requests::ReplicationStrategy value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_strategies()->Add(value);
  // @@protoc_insertion_point(field_add:seigr.common_requests.ReplicationQuery.strategies)
}
inline const ::google::protobuf::RepeatedField<int>& ReplicationQuery::strategies() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.common_requests.ReplicationQuery.strategies)
  return _internal_strategies();
}
inline ::google::protobuf::RepeatedField<int>* ReplicationQuery::mutable_strategies()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.common_requests.ReplicationQuery.strategies)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_strategies();
}
inline const ::google::protobuf::RepeatedField<int>& ReplicationQuery::_internal_strategies()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.strategies_;
}
inline ::google::protobuf::RepeatedField<int>* ReplicationQuery::_internal_mutable_strategies() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.strategies_;
}

// string date_range_start = 5;
inline void ReplicationQuery::clear_date_range_start() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.date_range_start_.ClearToEmpty();
}
inline const std::string& ReplicationQuery::date_range_start() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.common_requests.ReplicationQuery.date_range_start)
  return _internal_date_range_start();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ReplicationQuery::set_date_range_start(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.date_range_start_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.common_requests.ReplicationQuery.date_range_start)
}
inline std::string* ReplicationQuery::mutable_date_range_start() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_date_range_start();
  // @@protoc_insertion_point(field_mutable:seigr.common_requests.ReplicationQuery.date_range_start)
  return _s;
}
inline const std::string& ReplicationQuery::_internal_date_range_start() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.date_range_start_.Get();
}
inline void ReplicationQuery::_internal_set_date_range_start(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.date_range_start_.Set(value, GetArena());
}
inline std::string* ReplicationQuery::_internal_mutable_date_range_start() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.date_range_start_.Mutable( GetArena());
}
inline std::string* ReplicationQuery::release_date_range_start() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.common_requests.ReplicationQuery.date_range_start)
  return _impl_.date_range_start_.Release();
}
inline void ReplicationQuery::set_allocated_date_range_start(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.date_range_start_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.date_range_start_.IsDefault()) {
    _impl_.date_range_start_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.common_requests.ReplicationQuery.date_range_start)
}

// string date_range_end = 6;
inline void ReplicationQuery::clear_date_range_end() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.date_range_end_.ClearToEmpty();
}
inline const std::string& ReplicationQuery::date_range_end() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.common_requests.ReplicationQuery.date_range_end)
  return _internal_date_range_end();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ReplicationQuery::set_date_range_end(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.date_range_end_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.common_requests.ReplicationQuery.date_range_end)
}
inline std::string* ReplicationQuery::mutable_date_range_end() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_date_range_end();
  // @@protoc_insertion_point(field_mutable:seigr.common_requests.ReplicationQuery.date_range_end)
  return _s;
}
inline const std::string& ReplicationQuery::_internal_date_range_end() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.date_range_end_.Get();
}
inline void ReplicationQuery::_internal_set_date_range_end(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.date_range_end_.Set(value, GetArena());
}
inline std::string* ReplicationQuery::_internal_mutable_date_range_end() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.date_range_end_.Mutable( GetArena());
}
inline std::string* ReplicationQuery::release_date_range_end() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.common_requests.ReplicationQuery.date_range_end)
  return _impl_.date_range_end_.Release();
}
inline void ReplicationQuery::set_allocated_date_range_end(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.date_range_end_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.date_range_end_.IsDefault()) {
    _impl_.date_range_end_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.common_requests.ReplicationQuery.date_range_end)
}

// string requested_by = 7;
inline void ReplicationQuery::clear_requested_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requested_by_.ClearToEmpty();
}
inline const std::string& ReplicationQuery::requested_by() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.common_requests.ReplicationQuery.requested_by)
  return _internal_requested_by();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ReplicationQuery::set_requested_by(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requested_by_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.common_requests.ReplicationQuery.requested_by)
}
inline std::string* ReplicationQuery::mutable_requested_by() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_requested_by();
  // @@protoc_insertion_point(field_mutable:seigr.common_requests.ReplicationQuery.requested_by)
  return _s;
}
inline const std::string& ReplicationQuery::_internal_requested_by() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.requested_by_.Get();
}
inline void ReplicationQuery::_internal_set_requested_by(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requested_by_.Set(value, GetArena());
}
inline std::string* ReplicationQuery::_internal_mutable_requested_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.requested_by_.Mutable( GetArena());
}
inline std::string* ReplicationQuery::release_requested_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.common_requests.ReplicationQuery.requested_by)
  return _impl_.requested_by_.Release();
}
inline void ReplicationQuery::set_allocated_requested_by(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requested_by_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.requested_by_.IsDefault()) {
    _impl_.requested_by_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.common_requests.ReplicationQuery.requested_by)
}

// map<string, string> additional_filters = 8;
inline int ReplicationQuery::_internal_additional_filters_size() const {
  return _internal_additional_filters().size();
}
inline int ReplicationQuery::additional_filters_size() const {
  return _internal_additional_filters_size();
}
inline void ReplicationQuery::clear_additional_filters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.additional_filters_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& ReplicationQuery::_internal_additional_filters() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.additional_filters_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& ReplicationQuery::additional_filters() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.common_requests.ReplicationQuery.additional_filters)
  return _internal_additional_filters();
}
inline ::google::protobuf::Map<std::string, std::string>* ReplicationQuery::_internal_mutable_additional_filters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.additional_filters_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* ReplicationQuery::mutable_additional_filters() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.common_requests.ReplicationQuery.additional_filters)
  return _internal_mutable_additional_filters();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ReplicationStats

// int32 total_requests = 1;
inline void ReplicationStats::clear_total_requests() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_requests_ = 0;
}
inline ::int32_t ReplicationStats::total_requests() const {
  // @@protoc_insertion_point(field_get:seigr.common_requests.ReplicationStats.total_requests)
  return _internal_total_requests();
}
inline void ReplicationStats::set_total_requests(::int32_t value) {
  _internal_set_total_requests(value);
  // @@protoc_insertion_point(field_set:seigr.common_requests.ReplicationStats.total_requests)
}
inline ::int32_t ReplicationStats::_internal_total_requests() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_requests_;
}
inline void ReplicationStats::_internal_set_total_requests(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_requests_ = value;
}

// int32 successful_requests = 2;
inline void ReplicationStats::clear_successful_requests() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.successful_requests_ = 0;
}
inline ::int32_t ReplicationStats::successful_requests() const {
  // @@protoc_insertion_point(field_get:seigr.common_requests.ReplicationStats.successful_requests)
  return _internal_successful_requests();
}
inline void ReplicationStats::set_successful_requests(::int32_t value) {
  _internal_set_successful_requests(value);
  // @@protoc_insertion_point(field_set:seigr.common_requests.ReplicationStats.successful_requests)
}
inline ::int32_t ReplicationStats::_internal_successful_requests() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.successful_requests_;
}
inline void ReplicationStats::_internal_set_successful_requests(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.successful_requests_ = value;
}

// int32 failed_requests = 3;
inline void ReplicationStats::clear_failed_requests() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.failed_requests_ = 0;
}
inline ::int32_t ReplicationStats::failed_requests() const {
  // @@protoc_insertion_point(field_get:seigr.common_requests.ReplicationStats.failed_requests)
  return _internal_failed_requests();
}
inline void ReplicationStats::set_failed_requests(::int32_t value) {
  _internal_set_failed_requests(value);
  // @@protoc_insertion_point(field_set:seigr.common_requests.ReplicationStats.failed_requests)
}
inline ::int32_t ReplicationStats::_internal_failed_requests() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.failed_requests_;
}
inline void ReplicationStats::_internal_set_failed_requests(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.failed_requests_ = value;
}

// map<string, int32> trigger_counts = 4;
inline int ReplicationStats::_internal_trigger_counts_size() const {
  return _internal_trigger_counts().size();
}
inline int ReplicationStats::trigger_counts_size() const {
  return _internal_trigger_counts_size();
}
inline void ReplicationStats::clear_trigger_counts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trigger_counts_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::int32_t>& ReplicationStats::_internal_trigger_counts() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.trigger_counts_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::int32_t>& ReplicationStats::trigger_counts() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.common_requests.ReplicationStats.trigger_counts)
  return _internal_trigger_counts();
}
inline ::google::protobuf::Map<std::string, ::int32_t>* ReplicationStats::_internal_mutable_trigger_counts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.trigger_counts_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::int32_t>* ReplicationStats::mutable_trigger_counts() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.common_requests.ReplicationStats.trigger_counts)
  return _internal_mutable_trigger_counts();
}

// map<string, int32> priority_counts = 5;
inline int ReplicationStats::_internal_priority_counts_size() const {
  return _internal_priority_counts().size();
}
inline int ReplicationStats::priority_counts_size() const {
  return _internal_priority_counts_size();
}
inline void ReplicationStats::clear_priority_counts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.priority_counts_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::int32_t>& ReplicationStats::_internal_priority_counts() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.priority_counts_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::int32_t>& ReplicationStats::priority_counts() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.common_requests.ReplicationStats.priority_counts)
  return _internal_priority_counts();
}
inline ::google::protobuf::Map<std::string, ::int32_t>* ReplicationStats::_internal_mutable_priority_counts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.priority_counts_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::int32_t>* ReplicationStats::mutable_priority_counts() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.common_requests.ReplicationStats.priority_counts)
  return _internal_mutable_priority_counts();
}

// double average_completion_time = 6;
inline void ReplicationStats::clear_average_completion_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.average_completion_time_ = 0;
}
inline double ReplicationStats::average_completion_time() const {
  // @@protoc_insertion_point(field_get:seigr.common_requests.ReplicationStats.average_completion_time)
  return _internal_average_completion_time();
}
inline void ReplicationStats::set_average_completion_time(double value) {
  _internal_set_average_completion_time(value);
  // @@protoc_insertion_point(field_set:seigr.common_requests.ReplicationStats.average_completion_time)
}
inline double ReplicationStats::_internal_average_completion_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.average_completion_time_;
}
inline void ReplicationStats::_internal_set_average_completion_time(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.average_completion_time_ = value;
}

// int32 escalated_requests = 7;
inline void ReplicationStats::clear_escalated_requests() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.escalated_requests_ = 0;
}
inline ::int32_t ReplicationStats::escalated_requests() const {
  // @@protoc_insertion_point(field_get:seigr.common_requests.ReplicationStats.escalated_requests)
  return _internal_escalated_requests();
}
inline void ReplicationStats::set_escalated_requests(::int32_t value) {
  _internal_set_escalated_requests(value);
  // @@protoc_insertion_point(field_set:seigr.common_requests.ReplicationStats.escalated_requests)
}
inline ::int32_t ReplicationStats::_internal_escalated_requests() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.escalated_requests_;
}
inline void ReplicationStats::_internal_set_escalated_requests(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.escalated_requests_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace common_requests
}  // namespace seigr


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::seigr::common_requests::ReplicationPriority> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::seigr::common_requests::ReplicationPriority>() {
  return ::seigr::common_requests::ReplicationPriority_descriptor();
}
template <>
struct is_proto_enum<::seigr::common_requests::ReplicationTrigger> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::seigr::common_requests::ReplicationTrigger>() {
  return ::seigr::common_requests::ReplicationTrigger_descriptor();
}
template <>
struct is_proto_enum<::seigr::common_requests::ReplicationStrategy> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::seigr::common_requests::ReplicationStrategy>() {
  return ::seigr::common_requests::ReplicationStrategy_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // common_5frequests_2eproto_2epb_2eh
