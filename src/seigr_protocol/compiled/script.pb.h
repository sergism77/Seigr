// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: script.proto
// Protobuf C++ Version: 5.29.2

#ifndef script_2eproto_2epb_2eh
#define script_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "error_handling.pb.h"
#include "pipeline.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_script_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_script_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_script_2eproto;
namespace seigr {
namespace script {
class DependencyManager;
struct DependencyManagerDefaultTypeInternal;
extern DependencyManagerDefaultTypeInternal _DependencyManager_default_instance_;
class DependencyManager_DependencyMetadataEntry_DoNotUse;
struct DependencyManager_DependencyMetadataEntry_DoNotUseDefaultTypeInternal;
extern DependencyManager_DependencyMetadataEntry_DoNotUseDefaultTypeInternal _DependencyManager_DependencyMetadataEntry_DoNotUse_default_instance_;
class Script;
struct ScriptDefaultTypeInternal;
extern ScriptDefaultTypeInternal _Script_default_instance_;
class ScriptConfig;
struct ScriptConfigDefaultTypeInternal;
extern ScriptConfigDefaultTypeInternal _ScriptConfig_default_instance_;
class ScriptConfig_EnvironmentVarsEntry_DoNotUse;
struct ScriptConfig_EnvironmentVarsEntry_DoNotUseDefaultTypeInternal;
extern ScriptConfig_EnvironmentVarsEntry_DoNotUseDefaultTypeInternal _ScriptConfig_EnvironmentVarsEntry_DoNotUse_default_instance_;
class ScriptConfig_ErrorHandlingOverridesEntry_DoNotUse;
struct ScriptConfig_ErrorHandlingOverridesEntry_DoNotUseDefaultTypeInternal;
extern ScriptConfig_ErrorHandlingOverridesEntry_DoNotUseDefaultTypeInternal _ScriptConfig_ErrorHandlingOverridesEntry_DoNotUse_default_instance_;
class ScriptExecutionHistory;
struct ScriptExecutionHistoryDefaultTypeInternal;
extern ScriptExecutionHistoryDefaultTypeInternal _ScriptExecutionHistory_default_instance_;
class ScriptExecutionHistory_HistoryMetadataEntry_DoNotUse;
struct ScriptExecutionHistory_HistoryMetadataEntry_DoNotUseDefaultTypeInternal;
extern ScriptExecutionHistory_HistoryMetadataEntry_DoNotUseDefaultTypeInternal _ScriptExecutionHistory_HistoryMetadataEntry_DoNotUse_default_instance_;
class ScriptExecutionRecord;
struct ScriptExecutionRecordDefaultTypeInternal;
extern ScriptExecutionRecordDefaultTypeInternal _ScriptExecutionRecord_default_instance_;
class ScriptExecutionRecord_ExecutionDetailsEntry_DoNotUse;
struct ScriptExecutionRecord_ExecutionDetailsEntry_DoNotUseDefaultTypeInternal;
extern ScriptExecutionRecord_ExecutionDetailsEntry_DoNotUseDefaultTypeInternal _ScriptExecutionRecord_ExecutionDetailsEntry_DoNotUse_default_instance_;
class ScriptExecutionRequest;
struct ScriptExecutionRequestDefaultTypeInternal;
extern ScriptExecutionRequestDefaultTypeInternal _ScriptExecutionRequest_default_instance_;
class ScriptExecutionRequest_InputParametersEntry_DoNotUse;
struct ScriptExecutionRequest_InputParametersEntry_DoNotUseDefaultTypeInternal;
extern ScriptExecutionRequest_InputParametersEntry_DoNotUseDefaultTypeInternal _ScriptExecutionRequest_InputParametersEntry_DoNotUse_default_instance_;
class ScriptExecutionResult;
struct ScriptExecutionResultDefaultTypeInternal;
extern ScriptExecutionResultDefaultTypeInternal _ScriptExecutionResult_default_instance_;
class ScriptExecutionResult_ExecutionMetadataEntry_DoNotUse;
struct ScriptExecutionResult_ExecutionMetadataEntry_DoNotUseDefaultTypeInternal;
extern ScriptExecutionResult_ExecutionMetadataEntry_DoNotUseDefaultTypeInternal _ScriptExecutionResult_ExecutionMetadataEntry_DoNotUse_default_instance_;
class ScriptMonitoring;
struct ScriptMonitoringDefaultTypeInternal;
extern ScriptMonitoringDefaultTypeInternal _ScriptMonitoring_default_instance_;
class ScriptMonitoring_MonitoringMetadataEntry_DoNotUse;
struct ScriptMonitoring_MonitoringMetadataEntry_DoNotUseDefaultTypeInternal;
extern ScriptMonitoring_MonitoringMetadataEntry_DoNotUseDefaultTypeInternal _ScriptMonitoring_MonitoringMetadataEntry_DoNotUse_default_instance_;
class Script_EnvironmentEntry_DoNotUse;
struct Script_EnvironmentEntry_DoNotUseDefaultTypeInternal;
extern Script_EnvironmentEntry_DoNotUseDefaultTypeInternal _Script_EnvironmentEntry_DoNotUse_default_instance_;
class Script_MetadataEntry_DoNotUse;
struct Script_MetadataEntry_DoNotUseDefaultTypeInternal;
extern Script_MetadataEntry_DoNotUseDefaultTypeInternal _Script_MetadataEntry_DoNotUse_default_instance_;
}  // namespace script
}  // namespace seigr
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace seigr {
namespace script {
enum AllowedAction : int {
  SCRIPT_ACTION_UNDEFINED = 0,
  READ = 1,
  WRITE = 2,
  EXECUTE = 3,
  DELETE = 4,
  NETWORK_ACCESS = 5,
  SYSTEM_CALL = 6,
  LOGGING = 7,
  ADAPTIVE_RESOURCE_MANAGEMENT = 8,
  AllowedAction_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  AllowedAction_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool AllowedAction_IsValid(int value);
extern const uint32_t AllowedAction_internal_data_[];
constexpr AllowedAction AllowedAction_MIN = static_cast<AllowedAction>(0);
constexpr AllowedAction AllowedAction_MAX = static_cast<AllowedAction>(8);
constexpr int AllowedAction_ARRAYSIZE = 8 + 1;
const ::google::protobuf::EnumDescriptor*
AllowedAction_descriptor();
template <typename T>
const std::string& AllowedAction_Name(T value) {
  static_assert(std::is_same<T, AllowedAction>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to AllowedAction_Name().");
  return AllowedAction_Name(static_cast<AllowedAction>(value));
}
template <>
inline const std::string& AllowedAction_Name(AllowedAction value) {
  return ::google::protobuf::internal::NameOfDenseEnum<AllowedAction_descriptor,
                                                 0, 8>(
      static_cast<int>(value));
}
inline bool AllowedAction_Parse(absl::string_view name, AllowedAction* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AllowedAction>(
      AllowedAction_descriptor(), name, value);
}
enum LogLevel : int {
  LOG_LEVEL_UNDEFINED = 0,
  LOG_LEVEL_DEBUG = 1,
  LOG_LEVEL_INFO = 2,
  LOG_LEVEL_WARNING = 3,
  LOG_LEVEL_ERROR = 4,
  LOG_LEVEL_CRITICAL = 5,
  LogLevel_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  LogLevel_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool LogLevel_IsValid(int value);
extern const uint32_t LogLevel_internal_data_[];
constexpr LogLevel LogLevel_MIN = static_cast<LogLevel>(0);
constexpr LogLevel LogLevel_MAX = static_cast<LogLevel>(5);
constexpr int LogLevel_ARRAYSIZE = 5 + 1;
const ::google::protobuf::EnumDescriptor*
LogLevel_descriptor();
template <typename T>
const std::string& LogLevel_Name(T value) {
  static_assert(std::is_same<T, LogLevel>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to LogLevel_Name().");
  return LogLevel_Name(static_cast<LogLevel>(value));
}
template <>
inline const std::string& LogLevel_Name(LogLevel value) {
  return ::google::protobuf::internal::NameOfDenseEnum<LogLevel_descriptor,
                                                 0, 5>(
      static_cast<int>(value));
}
inline bool LogLevel_Parse(absl::string_view name, LogLevel* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LogLevel>(
      LogLevel_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class ScriptMonitoring_MonitoringMetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  ScriptMonitoring_MonitoringMetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ScriptMonitoring_MonitoringMetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit ScriptMonitoring_MonitoringMetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const ScriptMonitoring_MonitoringMetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const ScriptMonitoring_MonitoringMetadataEntry_DoNotUse*>(
        &_ScriptMonitoring_MonitoringMetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_script_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      70, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class ScriptExecutionResult_ExecutionMetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  ScriptExecutionResult_ExecutionMetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ScriptExecutionResult_ExecutionMetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit ScriptExecutionResult_ExecutionMetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const ScriptExecutionResult_ExecutionMetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const ScriptExecutionResult_ExecutionMetadataEntry_DoNotUse*>(
        &_ScriptExecutionResult_ExecutionMetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_script_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      74, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class ScriptExecutionRequest_InputParametersEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  ScriptExecutionRequest_InputParametersEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ScriptExecutionRequest_InputParametersEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit ScriptExecutionRequest_InputParametersEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const ScriptExecutionRequest_InputParametersEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const ScriptExecutionRequest_InputParametersEntry_DoNotUse*>(
        &_ScriptExecutionRequest_InputParametersEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_script_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      73, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class ScriptExecutionRecord_ExecutionDetailsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  ScriptExecutionRecord_ExecutionDetailsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ScriptExecutionRecord_ExecutionDetailsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit ScriptExecutionRecord_ExecutionDetailsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const ScriptExecutionRecord_ExecutionDetailsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const ScriptExecutionRecord_ExecutionDetailsEntry_DoNotUse*>(
        &_ScriptExecutionRecord_ExecutionDetailsEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_script_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      73, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class ScriptExecutionHistory_HistoryMetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  ScriptExecutionHistory_HistoryMetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ScriptExecutionHistory_HistoryMetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit ScriptExecutionHistory_HistoryMetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const ScriptExecutionHistory_HistoryMetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const ScriptExecutionHistory_HistoryMetadataEntry_DoNotUse*>(
        &_ScriptExecutionHistory_HistoryMetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_script_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      73, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class ScriptConfig_ErrorHandlingOverridesEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  ScriptConfig_ErrorHandlingOverridesEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ScriptConfig_ErrorHandlingOverridesEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit ScriptConfig_ErrorHandlingOverridesEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const ScriptConfig_ErrorHandlingOverridesEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const ScriptConfig_ErrorHandlingOverridesEntry_DoNotUse*>(
        &_ScriptConfig_ErrorHandlingOverridesEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_script_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      70, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class ScriptConfig_EnvironmentVarsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  ScriptConfig_EnvironmentVarsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ScriptConfig_EnvironmentVarsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit ScriptConfig_EnvironmentVarsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const ScriptConfig_EnvironmentVarsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const ScriptConfig_EnvironmentVarsEntry_DoNotUse*>(
        &_ScriptConfig_EnvironmentVarsEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_script_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      63, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class Script_MetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  Script_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Script_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit Script_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const Script_MetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const Script_MetadataEntry_DoNotUse*>(
        &_Script_MetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_script_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      50, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class Script_EnvironmentEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  Script_EnvironmentEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Script_EnvironmentEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit Script_EnvironmentEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const Script_EnvironmentEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const Script_EnvironmentEntry_DoNotUse*>(
        &_Script_EnvironmentEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_script_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      53, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class DependencyManager_DependencyMetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  DependencyManager_DependencyMetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DependencyManager_DependencyMetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit DependencyManager_DependencyMetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const DependencyManager_DependencyMetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const DependencyManager_DependencyMetadataEntry_DoNotUse*>(
        &_DependencyManager_DependencyMetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_script_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      71, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class ScriptMonitoring final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.script.ScriptMonitoring) */ {
 public:
  inline ScriptMonitoring() : ScriptMonitoring(nullptr) {}
  ~ScriptMonitoring() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ScriptMonitoring* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ScriptMonitoring));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ScriptMonitoring(
      ::google::protobuf::internal::ConstantInitialized);

  inline ScriptMonitoring(const ScriptMonitoring& from) : ScriptMonitoring(nullptr, from) {}
  inline ScriptMonitoring(ScriptMonitoring&& from) noexcept
      : ScriptMonitoring(nullptr, std::move(from)) {}
  inline ScriptMonitoring& operator=(const ScriptMonitoring& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScriptMonitoring& operator=(ScriptMonitoring&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ScriptMonitoring& default_instance() {
    return *internal_default_instance();
  }
  static inline const ScriptMonitoring* internal_default_instance() {
    return reinterpret_cast<const ScriptMonitoring*>(
        &_ScriptMonitoring_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(ScriptMonitoring& a, ScriptMonitoring& b) { a.Swap(&b); }
  inline void Swap(ScriptMonitoring* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ScriptMonitoring* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ScriptMonitoring* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ScriptMonitoring>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ScriptMonitoring& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ScriptMonitoring& from) { ScriptMonitoring::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ScriptMonitoring* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.script.ScriptMonitoring"; }

 protected:
  explicit ScriptMonitoring(::google::protobuf::Arena* arena);
  ScriptMonitoring(::google::protobuf::Arena* arena, const ScriptMonitoring& from);
  ScriptMonitoring(::google::protobuf::Arena* arena, ScriptMonitoring&& from) noexcept
      : ScriptMonitoring(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMonitoringMetadataFieldNumber = 8,
    kScriptIdFieldNumber = 1,
    kExecutionIdFieldNumber = 2,
    kLastCheckedAtFieldNumber = 6,
    kStatusMessageFieldNumber = 7,
    kProgressPercentageFieldNumber = 10,
    kCpuUsageFieldNumber = 3,
    kMemoryUsageFieldNumber = 4,
    kDiskUsageFieldNumber = 5,
    kCurrentStepFieldNumber = 9,
    kFlaggedForManualReviewFieldNumber = 11,
    kEstimatedEnergyUsageKwhFieldNumber = 12,
  };
  // map<string, string> monitoring_metadata = 8;
  int monitoring_metadata_size() const;
  private:
  int _internal_monitoring_metadata_size() const;

  public:
  void clear_monitoring_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& monitoring_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_monitoring_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_monitoring_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_monitoring_metadata();

  public:
  // string script_id = 1;
  void clear_script_id() ;
  const std::string& script_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_script_id(Arg_&& arg, Args_... args);
  std::string* mutable_script_id();
  PROTOBUF_NODISCARD std::string* release_script_id();
  void set_allocated_script_id(std::string* value);

  private:
  const std::string& _internal_script_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_script_id(
      const std::string& value);
  std::string* _internal_mutable_script_id();

  public:
  // string execution_id = 2;
  void clear_execution_id() ;
  const std::string& execution_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_execution_id(Arg_&& arg, Args_... args);
  std::string* mutable_execution_id();
  PROTOBUF_NODISCARD std::string* release_execution_id();
  void set_allocated_execution_id(std::string* value);

  private:
  const std::string& _internal_execution_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_execution_id(
      const std::string& value);
  std::string* _internal_mutable_execution_id();

  public:
  // string last_checked_at = 6;
  void clear_last_checked_at() ;
  const std::string& last_checked_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_last_checked_at(Arg_&& arg, Args_... args);
  std::string* mutable_last_checked_at();
  PROTOBUF_NODISCARD std::string* release_last_checked_at();
  void set_allocated_last_checked_at(std::string* value);

  private:
  const std::string& _internal_last_checked_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_last_checked_at(
      const std::string& value);
  std::string* _internal_mutable_last_checked_at();

  public:
  // string status_message = 7;
  void clear_status_message() ;
  const std::string& status_message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_status_message(Arg_&& arg, Args_... args);
  std::string* mutable_status_message();
  PROTOBUF_NODISCARD std::string* release_status_message();
  void set_allocated_status_message(std::string* value);

  private:
  const std::string& _internal_status_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_status_message(
      const std::string& value);
  std::string* _internal_mutable_status_message();

  public:
  // string progress_percentage = 10;
  void clear_progress_percentage() ;
  const std::string& progress_percentage() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_progress_percentage(Arg_&& arg, Args_... args);
  std::string* mutable_progress_percentage();
  PROTOBUF_NODISCARD std::string* release_progress_percentage();
  void set_allocated_progress_percentage(std::string* value);

  private:
  const std::string& _internal_progress_percentage() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_progress_percentage(
      const std::string& value);
  std::string* _internal_mutable_progress_percentage();

  public:
  // float cpu_usage = 3;
  void clear_cpu_usage() ;
  float cpu_usage() const;
  void set_cpu_usage(float value);

  private:
  float _internal_cpu_usage() const;
  void _internal_set_cpu_usage(float value);

  public:
  // float memory_usage = 4;
  void clear_memory_usage() ;
  float memory_usage() const;
  void set_memory_usage(float value);

  private:
  float _internal_memory_usage() const;
  void _internal_set_memory_usage(float value);

  public:
  // float disk_usage = 5;
  void clear_disk_usage() ;
  float disk_usage() const;
  void set_disk_usage(float value);

  private:
  float _internal_disk_usage() const;
  void _internal_set_disk_usage(float value);

  public:
  // int32 current_step = 9;
  void clear_current_step() ;
  ::int32_t current_step() const;
  void set_current_step(::int32_t value);

  private:
  ::int32_t _internal_current_step() const;
  void _internal_set_current_step(::int32_t value);

  public:
  // bool flagged_for_manual_review = 11;
  void clear_flagged_for_manual_review() ;
  bool flagged_for_manual_review() const;
  void set_flagged_for_manual_review(bool value);

  private:
  bool _internal_flagged_for_manual_review() const;
  void _internal_set_flagged_for_manual_review(bool value);

  public:
  // float estimated_energy_usage_kwh = 12;
  void clear_estimated_energy_usage_kwh() ;
  float estimated_energy_usage_kwh() const;
  void set_estimated_energy_usage_kwh(float value);

  private:
  float _internal_estimated_energy_usage_kwh() const;
  void _internal_set_estimated_energy_usage_kwh(float value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.script.ScriptMonitoring)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 12, 1,
      134, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ScriptMonitoring& from_msg);
    ::google::protobuf::internal::MapField<ScriptMonitoring_MonitoringMetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        monitoring_metadata_;
    ::google::protobuf::internal::ArenaStringPtr script_id_;
    ::google::protobuf::internal::ArenaStringPtr execution_id_;
    ::google::protobuf::internal::ArenaStringPtr last_checked_at_;
    ::google::protobuf::internal::ArenaStringPtr status_message_;
    ::google::protobuf::internal::ArenaStringPtr progress_percentage_;
    float cpu_usage_;
    float memory_usage_;
    float disk_usage_;
    ::int32_t current_step_;
    bool flagged_for_manual_review_;
    float estimated_energy_usage_kwh_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_script_2eproto;
};
// -------------------------------------------------------------------

class ScriptExecutionResult final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.script.ScriptExecutionResult) */ {
 public:
  inline ScriptExecutionResult() : ScriptExecutionResult(nullptr) {}
  ~ScriptExecutionResult() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ScriptExecutionResult* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ScriptExecutionResult));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ScriptExecutionResult(
      ::google::protobuf::internal::ConstantInitialized);

  inline ScriptExecutionResult(const ScriptExecutionResult& from) : ScriptExecutionResult(nullptr, from) {}
  inline ScriptExecutionResult(ScriptExecutionResult&& from) noexcept
      : ScriptExecutionResult(nullptr, std::move(from)) {}
  inline ScriptExecutionResult& operator=(const ScriptExecutionResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScriptExecutionResult& operator=(ScriptExecutionResult&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ScriptExecutionResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const ScriptExecutionResult* internal_default_instance() {
    return reinterpret_cast<const ScriptExecutionResult*>(
        &_ScriptExecutionResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(ScriptExecutionResult& a, ScriptExecutionResult& b) { a.Swap(&b); }
  inline void Swap(ScriptExecutionResult* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ScriptExecutionResult* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ScriptExecutionResult* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ScriptExecutionResult>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ScriptExecutionResult& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ScriptExecutionResult& from) { ScriptExecutionResult::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ScriptExecutionResult* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.script.ScriptExecutionResult"; }

 protected:
  explicit ScriptExecutionResult(::google::protobuf::Arena* arena);
  ScriptExecutionResult(::google::protobuf::Arena* arena, const ScriptExecutionResult& from);
  ScriptExecutionResult(::google::protobuf::Arena* arena, ScriptExecutionResult&& from) noexcept
      : ScriptExecutionResult(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kExecutionMetadataFieldNumber = 7,
    kWarningsFieldNumber = 8,
    kRequestIdFieldNumber = 1,
    kScriptIdFieldNumber = 2,
    kResultDataFieldNumber = 4,
    kErrorMessageFieldNumber = 5,
    kCompletedAtFieldNumber = 6,
    kSuccessFieldNumber = 3,
    kExecutionDurationMsFieldNumber = 9,
    kMemoryUsedBytesFieldNumber = 10,
    kDiskUsageBytesFieldNumber = 11,
  };
  // map<string, string> execution_metadata = 7;
  int execution_metadata_size() const;
  private:
  int _internal_execution_metadata_size() const;

  public:
  void clear_execution_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& execution_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_execution_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_execution_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_execution_metadata();

  public:
  // repeated string warnings = 8;
  int warnings_size() const;
  private:
  int _internal_warnings_size() const;

  public:
  void clear_warnings() ;
  const std::string& warnings(int index) const;
  std::string* mutable_warnings(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_warnings(int index, Arg_&& value, Args_... args);
  std::string* add_warnings();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_warnings(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& warnings() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_warnings();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_warnings() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_warnings();

  public:
  // string request_id = 1;
  void clear_request_id() ;
  const std::string& request_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_request_id(Arg_&& arg, Args_... args);
  std::string* mutable_request_id();
  PROTOBUF_NODISCARD std::string* release_request_id();
  void set_allocated_request_id(std::string* value);

  private:
  const std::string& _internal_request_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_request_id(
      const std::string& value);
  std::string* _internal_mutable_request_id();

  public:
  // string script_id = 2;
  void clear_script_id() ;
  const std::string& script_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_script_id(Arg_&& arg, Args_... args);
  std::string* mutable_script_id();
  PROTOBUF_NODISCARD std::string* release_script_id();
  void set_allocated_script_id(std::string* value);

  private:
  const std::string& _internal_script_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_script_id(
      const std::string& value);
  std::string* _internal_mutable_script_id();

  public:
  // string result_data = 4;
  void clear_result_data() ;
  const std::string& result_data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_result_data(Arg_&& arg, Args_... args);
  std::string* mutable_result_data();
  PROTOBUF_NODISCARD std::string* release_result_data();
  void set_allocated_result_data(std::string* value);

  private:
  const std::string& _internal_result_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_result_data(
      const std::string& value);
  std::string* _internal_mutable_result_data();

  public:
  // string error_message = 5;
  void clear_error_message() ;
  const std::string& error_message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_error_message(Arg_&& arg, Args_... args);
  std::string* mutable_error_message();
  PROTOBUF_NODISCARD std::string* release_error_message();
  void set_allocated_error_message(std::string* value);

  private:
  const std::string& _internal_error_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_error_message(
      const std::string& value);
  std::string* _internal_mutable_error_message();

  public:
  // string completed_at = 6;
  void clear_completed_at() ;
  const std::string& completed_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_completed_at(Arg_&& arg, Args_... args);
  std::string* mutable_completed_at();
  PROTOBUF_NODISCARD std::string* release_completed_at();
  void set_allocated_completed_at(std::string* value);

  private:
  const std::string& _internal_completed_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_completed_at(
      const std::string& value);
  std::string* _internal_mutable_completed_at();

  public:
  // bool success = 3;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // float execution_duration_ms = 9;
  void clear_execution_duration_ms() ;
  float execution_duration_ms() const;
  void set_execution_duration_ms(float value);

  private:
  float _internal_execution_duration_ms() const;
  void _internal_set_execution_duration_ms(float value);

  public:
  // int64 memory_used_bytes = 10;
  void clear_memory_used_bytes() ;
  ::int64_t memory_used_bytes() const;
  void set_memory_used_bytes(::int64_t value);

  private:
  ::int64_t _internal_memory_used_bytes() const;
  void _internal_set_memory_used_bytes(::int64_t value);

  public:
  // int64 disk_usage_bytes = 11;
  void clear_disk_usage_bytes() ;
  ::int64_t disk_usage_bytes() const;
  void set_disk_usage_bytes(::int64_t value);

  private:
  ::int64_t _internal_disk_usage_bytes() const;
  void _internal_set_disk_usage_bytes(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.script.ScriptExecutionResult)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 11, 1,
      132, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ScriptExecutionResult& from_msg);
    ::google::protobuf::internal::MapField<ScriptExecutionResult_ExecutionMetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        execution_metadata_;
    ::google::protobuf::RepeatedPtrField<std::string> warnings_;
    ::google::protobuf::internal::ArenaStringPtr request_id_;
    ::google::protobuf::internal::ArenaStringPtr script_id_;
    ::google::protobuf::internal::ArenaStringPtr result_data_;
    ::google::protobuf::internal::ArenaStringPtr error_message_;
    ::google::protobuf::internal::ArenaStringPtr completed_at_;
    bool success_;
    float execution_duration_ms_;
    ::int64_t memory_used_bytes_;
    ::int64_t disk_usage_bytes_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_script_2eproto;
};
// -------------------------------------------------------------------

class ScriptExecutionRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.script.ScriptExecutionRequest) */ {
 public:
  inline ScriptExecutionRequest() : ScriptExecutionRequest(nullptr) {}
  ~ScriptExecutionRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ScriptExecutionRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ScriptExecutionRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ScriptExecutionRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ScriptExecutionRequest(const ScriptExecutionRequest& from) : ScriptExecutionRequest(nullptr, from) {}
  inline ScriptExecutionRequest(ScriptExecutionRequest&& from) noexcept
      : ScriptExecutionRequest(nullptr, std::move(from)) {}
  inline ScriptExecutionRequest& operator=(const ScriptExecutionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScriptExecutionRequest& operator=(ScriptExecutionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ScriptExecutionRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ScriptExecutionRequest* internal_default_instance() {
    return reinterpret_cast<const ScriptExecutionRequest*>(
        &_ScriptExecutionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(ScriptExecutionRequest& a, ScriptExecutionRequest& b) { a.Swap(&b); }
  inline void Swap(ScriptExecutionRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ScriptExecutionRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ScriptExecutionRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ScriptExecutionRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ScriptExecutionRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ScriptExecutionRequest& from) { ScriptExecutionRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ScriptExecutionRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.script.ScriptExecutionRequest"; }

 protected:
  explicit ScriptExecutionRequest(::google::protobuf::Arena* arena);
  ScriptExecutionRequest(::google::protobuf::Arena* arena, const ScriptExecutionRequest& from);
  ScriptExecutionRequest(::google::protobuf::Arena* arena, ScriptExecutionRequest&& from) noexcept
      : ScriptExecutionRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInputParametersFieldNumber = 3,
    kRequestIdFieldNumber = 1,
    kScriptIdFieldNumber = 2,
    kInitiatedByFieldNumber = 4,
    kRequestedAtFieldNumber = 5,
    kPriorityLevelFieldNumber = 8,
    kTimeoutLimitMsFieldNumber = 7,
    kAsyncExecutionFieldNumber = 6,
    kEcoModeEnabledFieldNumber = 9,
  };
  // map<string, string> input_parameters = 3;
  int input_parameters_size() const;
  private:
  int _internal_input_parameters_size() const;

  public:
  void clear_input_parameters() ;
  const ::google::protobuf::Map<std::string, std::string>& input_parameters() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_input_parameters();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_input_parameters() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_input_parameters();

  public:
  // string request_id = 1;
  void clear_request_id() ;
  const std::string& request_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_request_id(Arg_&& arg, Args_... args);
  std::string* mutable_request_id();
  PROTOBUF_NODISCARD std::string* release_request_id();
  void set_allocated_request_id(std::string* value);

  private:
  const std::string& _internal_request_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_request_id(
      const std::string& value);
  std::string* _internal_mutable_request_id();

  public:
  // string script_id = 2;
  void clear_script_id() ;
  const std::string& script_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_script_id(Arg_&& arg, Args_... args);
  std::string* mutable_script_id();
  PROTOBUF_NODISCARD std::string* release_script_id();
  void set_allocated_script_id(std::string* value);

  private:
  const std::string& _internal_script_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_script_id(
      const std::string& value);
  std::string* _internal_mutable_script_id();

  public:
  // string initiated_by = 4;
  void clear_initiated_by() ;
  const std::string& initiated_by() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_initiated_by(Arg_&& arg, Args_... args);
  std::string* mutable_initiated_by();
  PROTOBUF_NODISCARD std::string* release_initiated_by();
  void set_allocated_initiated_by(std::string* value);

  private:
  const std::string& _internal_initiated_by() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_initiated_by(
      const std::string& value);
  std::string* _internal_mutable_initiated_by();

  public:
  // string requested_at = 5;
  void clear_requested_at() ;
  const std::string& requested_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_requested_at(Arg_&& arg, Args_... args);
  std::string* mutable_requested_at();
  PROTOBUF_NODISCARD std::string* release_requested_at();
  void set_allocated_requested_at(std::string* value);

  private:
  const std::string& _internal_requested_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_requested_at(
      const std::string& value);
  std::string* _internal_mutable_requested_at();

  public:
  // string priority_level = 8;
  void clear_priority_level() ;
  const std::string& priority_level() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_priority_level(Arg_&& arg, Args_... args);
  std::string* mutable_priority_level();
  PROTOBUF_NODISCARD std::string* release_priority_level();
  void set_allocated_priority_level(std::string* value);

  private:
  const std::string& _internal_priority_level() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_priority_level(
      const std::string& value);
  std::string* _internal_mutable_priority_level();

  public:
  // int32 timeout_limit_ms = 7;
  void clear_timeout_limit_ms() ;
  ::int32_t timeout_limit_ms() const;
  void set_timeout_limit_ms(::int32_t value);

  private:
  ::int32_t _internal_timeout_limit_ms() const;
  void _internal_set_timeout_limit_ms(::int32_t value);

  public:
  // bool async_execution = 6;
  void clear_async_execution() ;
  bool async_execution() const;
  void set_async_execution(bool value);

  private:
  bool _internal_async_execution() const;
  void _internal_set_async_execution(bool value);

  public:
  // bool eco_mode_enabled = 9;
  void clear_eco_mode_enabled() ;
  bool eco_mode_enabled() const;
  void set_eco_mode_enabled(bool value);

  private:
  bool _internal_eco_mode_enabled() const;
  void _internal_set_eco_mode_enabled(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.script.ScriptExecutionRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 1,
      125, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ScriptExecutionRequest& from_msg);
    ::google::protobuf::internal::MapField<ScriptExecutionRequest_InputParametersEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        input_parameters_;
    ::google::protobuf::internal::ArenaStringPtr request_id_;
    ::google::protobuf::internal::ArenaStringPtr script_id_;
    ::google::protobuf::internal::ArenaStringPtr initiated_by_;
    ::google::protobuf::internal::ArenaStringPtr requested_at_;
    ::google::protobuf::internal::ArenaStringPtr priority_level_;
    ::int32_t timeout_limit_ms_;
    bool async_execution_;
    bool eco_mode_enabled_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_script_2eproto;
};
// -------------------------------------------------------------------

class ScriptExecutionRecord final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.script.ScriptExecutionRecord) */ {
 public:
  inline ScriptExecutionRecord() : ScriptExecutionRecord(nullptr) {}
  ~ScriptExecutionRecord() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ScriptExecutionRecord* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ScriptExecutionRecord));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ScriptExecutionRecord(
      ::google::protobuf::internal::ConstantInitialized);

  inline ScriptExecutionRecord(const ScriptExecutionRecord& from) : ScriptExecutionRecord(nullptr, from) {}
  inline ScriptExecutionRecord(ScriptExecutionRecord&& from) noexcept
      : ScriptExecutionRecord(nullptr, std::move(from)) {}
  inline ScriptExecutionRecord& operator=(const ScriptExecutionRecord& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScriptExecutionRecord& operator=(ScriptExecutionRecord&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ScriptExecutionRecord& default_instance() {
    return *internal_default_instance();
  }
  static inline const ScriptExecutionRecord* internal_default_instance() {
    return reinterpret_cast<const ScriptExecutionRecord*>(
        &_ScriptExecutionRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(ScriptExecutionRecord& a, ScriptExecutionRecord& b) { a.Swap(&b); }
  inline void Swap(ScriptExecutionRecord* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ScriptExecutionRecord* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ScriptExecutionRecord* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ScriptExecutionRecord>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ScriptExecutionRecord& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ScriptExecutionRecord& from) { ScriptExecutionRecord::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ScriptExecutionRecord* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.script.ScriptExecutionRecord"; }

 protected:
  explicit ScriptExecutionRecord(::google::protobuf::Arena* arena);
  ScriptExecutionRecord(::google::protobuf::Arena* arena, const ScriptExecutionRecord& from);
  ScriptExecutionRecord(::google::protobuf::Arena* arena, ScriptExecutionRecord&& from) noexcept
      : ScriptExecutionRecord(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kExecutionDetailsFieldNumber = 5,
    kAlertsFieldNumber = 7,
    kExecutionIdFieldNumber = 1,
    kExecutedAtFieldNumber = 2,
    kFinishedAtFieldNumber = 3,
    kExecutionSummaryFieldNumber = 6,
    kResultStatusFieldNumber = 4,
    kEcoExecutionFlagFieldNumber = 8,
  };
  // map<string, string> execution_details = 5;
  int execution_details_size() const;
  private:
  int _internal_execution_details_size() const;

  public:
  void clear_execution_details() ;
  const ::google::protobuf::Map<std::string, std::string>& execution_details() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_execution_details();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_execution_details() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_execution_details();

  public:
  // repeated string alerts = 7;
  int alerts_size() const;
  private:
  int _internal_alerts_size() const;

  public:
  void clear_alerts() ;
  const std::string& alerts(int index) const;
  std::string* mutable_alerts(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_alerts(int index, Arg_&& value, Args_... args);
  std::string* add_alerts();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_alerts(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& alerts() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_alerts();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_alerts() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_alerts();

  public:
  // string execution_id = 1;
  void clear_execution_id() ;
  const std::string& execution_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_execution_id(Arg_&& arg, Args_... args);
  std::string* mutable_execution_id();
  PROTOBUF_NODISCARD std::string* release_execution_id();
  void set_allocated_execution_id(std::string* value);

  private:
  const std::string& _internal_execution_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_execution_id(
      const std::string& value);
  std::string* _internal_mutable_execution_id();

  public:
  // string executed_at = 2;
  void clear_executed_at() ;
  const std::string& executed_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_executed_at(Arg_&& arg, Args_... args);
  std::string* mutable_executed_at();
  PROTOBUF_NODISCARD std::string* release_executed_at();
  void set_allocated_executed_at(std::string* value);

  private:
  const std::string& _internal_executed_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_executed_at(
      const std::string& value);
  std::string* _internal_mutable_executed_at();

  public:
  // string finished_at = 3;
  void clear_finished_at() ;
  const std::string& finished_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_finished_at(Arg_&& arg, Args_... args);
  std::string* mutable_finished_at();
  PROTOBUF_NODISCARD std::string* release_finished_at();
  void set_allocated_finished_at(std::string* value);

  private:
  const std::string& _internal_finished_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_finished_at(
      const std::string& value);
  std::string* _internal_mutable_finished_at();

  public:
  // string execution_summary = 6;
  void clear_execution_summary() ;
  const std::string& execution_summary() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_execution_summary(Arg_&& arg, Args_... args);
  std::string* mutable_execution_summary();
  PROTOBUF_NODISCARD std::string* release_execution_summary();
  void set_allocated_execution_summary(std::string* value);

  private:
  const std::string& _internal_execution_summary() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_execution_summary(
      const std::string& value);
  std::string* _internal_mutable_execution_summary();

  public:
  // .seigr.pipeline.OperationStatus result_status = 4;
  void clear_result_status() ;
  ::seigr::pipeline::OperationStatus result_status() const;
  void set_result_status(::seigr::pipeline::OperationStatus value);

  private:
  ::seigr::pipeline::OperationStatus _internal_result_status() const;
  void _internal_set_result_status(::seigr::pipeline::OperationStatus value);

  public:
  // bool eco_execution_flag = 8;
  void clear_eco_execution_flag() ;
  bool eco_execution_flag() const;
  void set_eco_execution_flag(bool value);

  private:
  bool _internal_eco_execution_flag() const;
  void _internal_set_eco_execution_flag(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.script.ScriptExecutionRecord)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 1,
      125, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ScriptExecutionRecord& from_msg);
    ::google::protobuf::internal::MapField<ScriptExecutionRecord_ExecutionDetailsEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        execution_details_;
    ::google::protobuf::RepeatedPtrField<std::string> alerts_;
    ::google::protobuf::internal::ArenaStringPtr execution_id_;
    ::google::protobuf::internal::ArenaStringPtr executed_at_;
    ::google::protobuf::internal::ArenaStringPtr finished_at_;
    ::google::protobuf::internal::ArenaStringPtr execution_summary_;
    int result_status_;
    bool eco_execution_flag_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_script_2eproto;
};
// -------------------------------------------------------------------

class ScriptConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.script.ScriptConfig) */ {
 public:
  inline ScriptConfig() : ScriptConfig(nullptr) {}
  ~ScriptConfig() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ScriptConfig* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ScriptConfig));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ScriptConfig(
      ::google::protobuf::internal::ConstantInitialized);

  inline ScriptConfig(const ScriptConfig& from) : ScriptConfig(nullptr, from) {}
  inline ScriptConfig(ScriptConfig&& from) noexcept
      : ScriptConfig(nullptr, std::move(from)) {}
  inline ScriptConfig& operator=(const ScriptConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScriptConfig& operator=(ScriptConfig&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ScriptConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const ScriptConfig* internal_default_instance() {
    return reinterpret_cast<const ScriptConfig*>(
        &_ScriptConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(ScriptConfig& a, ScriptConfig& b) { a.Swap(&b); }
  inline void Swap(ScriptConfig* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ScriptConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ScriptConfig* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ScriptConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ScriptConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ScriptConfig& from) { ScriptConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ScriptConfig* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.script.ScriptConfig"; }

 protected:
  explicit ScriptConfig(::google::protobuf::Arena* arena);
  ScriptConfig(::google::protobuf::Arena* arena, const ScriptConfig& from);
  ScriptConfig(::google::protobuf::Arena* arena, ScriptConfig&& from) noexcept
      : ScriptConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEnvironmentVarsFieldNumber = 4,
    kGlobalAllowedActionsFieldNumber = 5,
    kErrorHandlingOverridesFieldNumber = 8,
    kFallbackScriptIdFieldNumber = 6,
    kGlobalMaxRuntimeMsFieldNumber = 1,
    kGlobalMemoryLimitMbFieldNumber = 2,
    kEnforceSandboxingFieldNumber = 3,
    kEnableExecutionLogsFieldNumber = 7,
    kEcoModeDefaultFieldNumber = 10,
    kMaxRetriesOnFailureFieldNumber = 9,
  };
  // map<string, string> environment_vars = 4;
  int environment_vars_size() const;
  private:
  int _internal_environment_vars_size() const;

  public:
  void clear_environment_vars() ;
  const ::google::protobuf::Map<std::string, std::string>& environment_vars() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_environment_vars();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_environment_vars() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_environment_vars();

  public:
  // repeated .seigr.script.AllowedAction global_allowed_actions = 5;
  int global_allowed_actions_size() const;
  private:
  int _internal_global_allowed_actions_size() const;

  public:
  void clear_global_allowed_actions() ;
  public:
  ::seigr::script::AllowedAction global_allowed_actions(int index) const;
  void set_global_allowed_actions(int index, ::seigr::script::AllowedAction value);
  void add_global_allowed_actions(::seigr::script::AllowedAction value);
  const ::google::protobuf::RepeatedField<int>& global_allowed_actions() const;
  ::google::protobuf::RepeatedField<int>* mutable_global_allowed_actions();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_global_allowed_actions() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_global_allowed_actions();

  public:
  // map<string, string> error_handling_overrides = 8;
  int error_handling_overrides_size() const;
  private:
  int _internal_error_handling_overrides_size() const;

  public:
  void clear_error_handling_overrides() ;
  const ::google::protobuf::Map<std::string, std::string>& error_handling_overrides() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_error_handling_overrides();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_error_handling_overrides() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_error_handling_overrides();

  public:
  // string fallback_script_id = 6;
  void clear_fallback_script_id() ;
  const std::string& fallback_script_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_fallback_script_id(Arg_&& arg, Args_... args);
  std::string* mutable_fallback_script_id();
  PROTOBUF_NODISCARD std::string* release_fallback_script_id();
  void set_allocated_fallback_script_id(std::string* value);

  private:
  const std::string& _internal_fallback_script_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_fallback_script_id(
      const std::string& value);
  std::string* _internal_mutable_fallback_script_id();

  public:
  // int32 global_max_runtime_ms = 1;
  void clear_global_max_runtime_ms() ;
  ::int32_t global_max_runtime_ms() const;
  void set_global_max_runtime_ms(::int32_t value);

  private:
  ::int32_t _internal_global_max_runtime_ms() const;
  void _internal_set_global_max_runtime_ms(::int32_t value);

  public:
  // int32 global_memory_limit_mb = 2;
  void clear_global_memory_limit_mb() ;
  ::int32_t global_memory_limit_mb() const;
  void set_global_memory_limit_mb(::int32_t value);

  private:
  ::int32_t _internal_global_memory_limit_mb() const;
  void _internal_set_global_memory_limit_mb(::int32_t value);

  public:
  // bool enforce_sandboxing = 3;
  void clear_enforce_sandboxing() ;
  bool enforce_sandboxing() const;
  void set_enforce_sandboxing(bool value);

  private:
  bool _internal_enforce_sandboxing() const;
  void _internal_set_enforce_sandboxing(bool value);

  public:
  // bool enable_execution_logs = 7;
  void clear_enable_execution_logs() ;
  bool enable_execution_logs() const;
  void set_enable_execution_logs(bool value);

  private:
  bool _internal_enable_execution_logs() const;
  void _internal_set_enable_execution_logs(bool value);

  public:
  // bool eco_mode_default = 10;
  void clear_eco_mode_default() ;
  bool eco_mode_default() const;
  void set_eco_mode_default(bool value);

  private:
  bool _internal_eco_mode_default() const;
  void _internal_set_eco_mode_default(bool value);

  public:
  // int32 max_retries_on_failure = 9;
  void clear_max_retries_on_failure() ;
  ::int32_t max_retries_on_failure() const;
  void set_max_retries_on_failure(::int32_t value);

  private:
  ::int32_t _internal_max_retries_on_failure() const;
  void _internal_set_max_retries_on_failure(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.script.ScriptConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 10, 2,
      100, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ScriptConfig& from_msg);
    ::google::protobuf::internal::MapField<ScriptConfig_EnvironmentVarsEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        environment_vars_;
    ::google::protobuf::RepeatedField<int> global_allowed_actions_;
    ::google::protobuf::internal::CachedSize _global_allowed_actions_cached_byte_size_;
    ::google::protobuf::internal::MapField<ScriptConfig_ErrorHandlingOverridesEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        error_handling_overrides_;
    ::google::protobuf::internal::ArenaStringPtr fallback_script_id_;
    ::int32_t global_max_runtime_ms_;
    ::int32_t global_memory_limit_mb_;
    bool enforce_sandboxing_;
    bool enable_execution_logs_;
    bool eco_mode_default_;
    ::int32_t max_retries_on_failure_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_script_2eproto;
};
// -------------------------------------------------------------------

class Script final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.script.Script) */ {
 public:
  inline Script() : Script(nullptr) {}
  ~Script() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Script* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Script));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Script(
      ::google::protobuf::internal::ConstantInitialized);

  inline Script(const Script& from) : Script(nullptr, from) {}
  inline Script(Script&& from) noexcept
      : Script(nullptr, std::move(from)) {}
  inline Script& operator=(const Script& from) {
    CopyFrom(from);
    return *this;
  }
  inline Script& operator=(Script&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Script& default_instance() {
    return *internal_default_instance();
  }
  static inline const Script* internal_default_instance() {
    return reinterpret_cast<const Script*>(
        &_Script_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(Script& a, Script& b) { a.Swap(&b); }
  inline void Swap(Script* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Script* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Script* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Script>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Script& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Script& from) { Script::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Script* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.script.Script"; }

 protected:
  explicit Script(::google::protobuf::Arena* arena);
  Script(::google::protobuf::Arena* arena, const Script& from);
  Script(::google::protobuf::Arena* arena, Script&& from) noexcept
      : Script(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEnvironmentFieldNumber = 4,
    kAllowedActionsFieldNumber = 13,
    kDependenciesFieldNumber = 14,
    kMetadataFieldNumber = 17,
    kScriptIdFieldNumber = 1,
    kLanguageFieldNumber = 2,
    kCodeFieldNumber = 3,
    kVersionFieldNumber = 6,
    kCodeHashFieldNumber = 7,
    kMaxRuntimeMsFieldNumber = 8,
    kMaxMemoryMbFieldNumber = 9,
    kMaxCpuUsagePercentFieldNumber = 10,
    kMaxDiskUsageMbFieldNumber = 11,
    kIsSandboxedFieldNumber = 5,
    kAllowExternalNetworkFieldNumber = 12,
    kEnableTracingFieldNumber = 18,
    kEnableProfilingFieldNumber = 19,
    kErrorHandlingFieldNumber = 15,
    kLogLevelFieldNumber = 16,
    kRequiresUserInputFieldNumber = 20,
    kEcoModeFieldNumber = 21,
  };
  // map<string, string> environment = 4;
  int environment_size() const;
  private:
  int _internal_environment_size() const;

  public:
  void clear_environment() ;
  const ::google::protobuf::Map<std::string, std::string>& environment() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_environment();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_environment() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_environment();

  public:
  // repeated .seigr.script.AllowedAction allowed_actions = 13;
  int allowed_actions_size() const;
  private:
  int _internal_allowed_actions_size() const;

  public:
  void clear_allowed_actions() ;
  public:
  ::seigr::script::AllowedAction allowed_actions(int index) const;
  void set_allowed_actions(int index, ::seigr::script::AllowedAction value);
  void add_allowed_actions(::seigr::script::AllowedAction value);
  const ::google::protobuf::RepeatedField<int>& allowed_actions() const;
  ::google::protobuf::RepeatedField<int>* mutable_allowed_actions();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_allowed_actions() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_allowed_actions();

  public:
  // repeated string dependencies = 14;
  int dependencies_size() const;
  private:
  int _internal_dependencies_size() const;

  public:
  void clear_dependencies() ;
  const std::string& dependencies(int index) const;
  std::string* mutable_dependencies(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_dependencies(int index, Arg_&& value, Args_... args);
  std::string* add_dependencies();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_dependencies(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& dependencies() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_dependencies();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_dependencies() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_dependencies();

  public:
  // map<string, string> metadata = 17;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // string script_id = 1;
  void clear_script_id() ;
  const std::string& script_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_script_id(Arg_&& arg, Args_... args);
  std::string* mutable_script_id();
  PROTOBUF_NODISCARD std::string* release_script_id();
  void set_allocated_script_id(std::string* value);

  private:
  const std::string& _internal_script_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_script_id(
      const std::string& value);
  std::string* _internal_mutable_script_id();

  public:
  // string language = 2;
  void clear_language() ;
  const std::string& language() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_language(Arg_&& arg, Args_... args);
  std::string* mutable_language();
  PROTOBUF_NODISCARD std::string* release_language();
  void set_allocated_language(std::string* value);

  private:
  const std::string& _internal_language() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_language(
      const std::string& value);
  std::string* _internal_mutable_language();

  public:
  // bytes code = 3;
  void clear_code() ;
  const std::string& code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_code(Arg_&& arg, Args_... args);
  std::string* mutable_code();
  PROTOBUF_NODISCARD std::string* release_code();
  void set_allocated_code(std::string* value);

  private:
  const std::string& _internal_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_code(
      const std::string& value);
  std::string* _internal_mutable_code();

  public:
  // string version = 6;
  void clear_version() ;
  const std::string& version() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_version(Arg_&& arg, Args_... args);
  std::string* mutable_version();
  PROTOBUF_NODISCARD std::string* release_version();
  void set_allocated_version(std::string* value);

  private:
  const std::string& _internal_version() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_version(
      const std::string& value);
  std::string* _internal_mutable_version();

  public:
  // bytes code_hash = 7;
  void clear_code_hash() ;
  const std::string& code_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_code_hash(Arg_&& arg, Args_... args);
  std::string* mutable_code_hash();
  PROTOBUF_NODISCARD std::string* release_code_hash();
  void set_allocated_code_hash(std::string* value);

  private:
  const std::string& _internal_code_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_code_hash(
      const std::string& value);
  std::string* _internal_mutable_code_hash();

  public:
  // int32 max_runtime_ms = 8;
  void clear_max_runtime_ms() ;
  ::int32_t max_runtime_ms() const;
  void set_max_runtime_ms(::int32_t value);

  private:
  ::int32_t _internal_max_runtime_ms() const;
  void _internal_set_max_runtime_ms(::int32_t value);

  public:
  // int32 max_memory_mb = 9;
  void clear_max_memory_mb() ;
  ::int32_t max_memory_mb() const;
  void set_max_memory_mb(::int32_t value);

  private:
  ::int32_t _internal_max_memory_mb() const;
  void _internal_set_max_memory_mb(::int32_t value);

  public:
  // int32 max_cpu_usage_percent = 10;
  void clear_max_cpu_usage_percent() ;
  ::int32_t max_cpu_usage_percent() const;
  void set_max_cpu_usage_percent(::int32_t value);

  private:
  ::int32_t _internal_max_cpu_usage_percent() const;
  void _internal_set_max_cpu_usage_percent(::int32_t value);

  public:
  // int32 max_disk_usage_mb = 11;
  void clear_max_disk_usage_mb() ;
  ::int32_t max_disk_usage_mb() const;
  void set_max_disk_usage_mb(::int32_t value);

  private:
  ::int32_t _internal_max_disk_usage_mb() const;
  void _internal_set_max_disk_usage_mb(::int32_t value);

  public:
  // bool is_sandboxed = 5;
  void clear_is_sandboxed() ;
  bool is_sandboxed() const;
  void set_is_sandboxed(bool value);

  private:
  bool _internal_is_sandboxed() const;
  void _internal_set_is_sandboxed(bool value);

  public:
  // bool allow_external_network = 12;
  void clear_allow_external_network() ;
  bool allow_external_network() const;
  void set_allow_external_network(bool value);

  private:
  bool _internal_allow_external_network() const;
  void _internal_set_allow_external_network(bool value);

  public:
  // bool enable_tracing = 18;
  void clear_enable_tracing() ;
  bool enable_tracing() const;
  void set_enable_tracing(bool value);

  private:
  bool _internal_enable_tracing() const;
  void _internal_set_enable_tracing(bool value);

  public:
  // bool enable_profiling = 19;
  void clear_enable_profiling() ;
  bool enable_profiling() const;
  void set_enable_profiling(bool value);

  private:
  bool _internal_enable_profiling() const;
  void _internal_set_enable_profiling(bool value);

  public:
  // .seigr.error_handling.ErrorResolutionStrategy error_handling = 15;
  void clear_error_handling() ;
  ::seigr::error_handling::ErrorResolutionStrategy error_handling() const;
  void set_error_handling(::seigr::error_handling::ErrorResolutionStrategy value);

  private:
  ::seigr::error_handling::ErrorResolutionStrategy _internal_error_handling() const;
  void _internal_set_error_handling(::seigr::error_handling::ErrorResolutionStrategy value);

  public:
  // .seigr.script.LogLevel log_level = 16;
  void clear_log_level() ;
  ::seigr::script::LogLevel log_level() const;
  void set_log_level(::seigr::script::LogLevel value);

  private:
  ::seigr::script::LogLevel _internal_log_level() const;
  void _internal_set_log_level(::seigr::script::LogLevel value);

  public:
  // bool requires_user_input = 20;
  void clear_requires_user_input() ;
  bool requires_user_input() const;
  void set_requires_user_input(bool value);

  private:
  bool _internal_requires_user_input() const;
  void _internal_set_requires_user_input(bool value);

  public:
  // bool eco_mode = 21;
  void clear_eco_mode() ;
  bool eco_mode() const;
  void set_eco_mode(bool value);

  private:
  bool _internal_eco_mode() const;
  void _internal_set_eco_mode(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.script.Script)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 21, 2,
      99, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Script& from_msg);
    ::google::protobuf::internal::MapField<Script_EnvironmentEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        environment_;
    ::google::protobuf::RepeatedField<int> allowed_actions_;
    ::google::protobuf::internal::CachedSize _allowed_actions_cached_byte_size_;
    ::google::protobuf::RepeatedPtrField<std::string> dependencies_;
    ::google::protobuf::internal::MapField<Script_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::internal::ArenaStringPtr script_id_;
    ::google::protobuf::internal::ArenaStringPtr language_;
    ::google::protobuf::internal::ArenaStringPtr code_;
    ::google::protobuf::internal::ArenaStringPtr version_;
    ::google::protobuf::internal::ArenaStringPtr code_hash_;
    ::int32_t max_runtime_ms_;
    ::int32_t max_memory_mb_;
    ::int32_t max_cpu_usage_percent_;
    ::int32_t max_disk_usage_mb_;
    bool is_sandboxed_;
    bool allow_external_network_;
    bool enable_tracing_;
    bool enable_profiling_;
    int error_handling_;
    int log_level_;
    bool requires_user_input_;
    bool eco_mode_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_script_2eproto;
};
// -------------------------------------------------------------------

class DependencyManager final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.script.DependencyManager) */ {
 public:
  inline DependencyManager() : DependencyManager(nullptr) {}
  ~DependencyManager() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DependencyManager* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DependencyManager));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DependencyManager(
      ::google::protobuf::internal::ConstantInitialized);

  inline DependencyManager(const DependencyManager& from) : DependencyManager(nullptr, from) {}
  inline DependencyManager(DependencyManager&& from) noexcept
      : DependencyManager(nullptr, std::move(from)) {}
  inline DependencyManager& operator=(const DependencyManager& from) {
    CopyFrom(from);
    return *this;
  }
  inline DependencyManager& operator=(DependencyManager&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DependencyManager& default_instance() {
    return *internal_default_instance();
  }
  static inline const DependencyManager* internal_default_instance() {
    return reinterpret_cast<const DependencyManager*>(
        &_DependencyManager_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(DependencyManager& a, DependencyManager& b) { a.Swap(&b); }
  inline void Swap(DependencyManager* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DependencyManager* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DependencyManager* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DependencyManager>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DependencyManager& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DependencyManager& from) { DependencyManager::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DependencyManager* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.script.DependencyManager"; }

 protected:
  explicit DependencyManager(::google::protobuf::Arena* arena);
  DependencyManager(::google::protobuf::Arena* arena, const DependencyManager& from);
  DependencyManager(::google::protobuf::Arena* arena, DependencyManager&& from) noexcept
      : DependencyManager(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLocalDependenciesFieldNumber = 1,
    kRemoteDependenciesFieldNumber = 2,
    kDependencyMetadataFieldNumber = 3,
    kDependencyChecksumFieldNumber = 4,
    kDependencySourceTypeFieldNumber = 7,
    kAutoResolveConflictsFieldNumber = 5,
    kCacheDependenciesFieldNumber = 6,
    kMaxDependencySizeMbFieldNumber = 8,
  };
  // repeated string local_dependencies = 1;
  int local_dependencies_size() const;
  private:
  int _internal_local_dependencies_size() const;

  public:
  void clear_local_dependencies() ;
  const std::string& local_dependencies(int index) const;
  std::string* mutable_local_dependencies(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_local_dependencies(int index, Arg_&& value, Args_... args);
  std::string* add_local_dependencies();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_local_dependencies(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& local_dependencies() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_local_dependencies();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_local_dependencies() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_local_dependencies();

  public:
  // repeated string remote_dependencies = 2;
  int remote_dependencies_size() const;
  private:
  int _internal_remote_dependencies_size() const;

  public:
  void clear_remote_dependencies() ;
  const std::string& remote_dependencies(int index) const;
  std::string* mutable_remote_dependencies(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_remote_dependencies(int index, Arg_&& value, Args_... args);
  std::string* add_remote_dependencies();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_remote_dependencies(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& remote_dependencies() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_remote_dependencies();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_remote_dependencies() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_remote_dependencies();

  public:
  // map<string, string> dependency_metadata = 3;
  int dependency_metadata_size() const;
  private:
  int _internal_dependency_metadata_size() const;

  public:
  void clear_dependency_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& dependency_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_dependency_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_dependency_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_dependency_metadata();

  public:
  // string dependency_checksum = 4;
  void clear_dependency_checksum() ;
  const std::string& dependency_checksum() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_dependency_checksum(Arg_&& arg, Args_... args);
  std::string* mutable_dependency_checksum();
  PROTOBUF_NODISCARD std::string* release_dependency_checksum();
  void set_allocated_dependency_checksum(std::string* value);

  private:
  const std::string& _internal_dependency_checksum() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_dependency_checksum(
      const std::string& value);
  std::string* _internal_mutable_dependency_checksum();

  public:
  // string dependency_source_type = 7;
  void clear_dependency_source_type() ;
  const std::string& dependency_source_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_dependency_source_type(Arg_&& arg, Args_... args);
  std::string* mutable_dependency_source_type();
  PROTOBUF_NODISCARD std::string* release_dependency_source_type();
  void set_allocated_dependency_source_type(std::string* value);

  private:
  const std::string& _internal_dependency_source_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_dependency_source_type(
      const std::string& value);
  std::string* _internal_mutable_dependency_source_type();

  public:
  // bool auto_resolve_conflicts = 5;
  void clear_auto_resolve_conflicts() ;
  bool auto_resolve_conflicts() const;
  void set_auto_resolve_conflicts(bool value);

  private:
  bool _internal_auto_resolve_conflicts() const;
  void _internal_set_auto_resolve_conflicts(bool value);

  public:
  // bool cache_dependencies = 6;
  void clear_cache_dependencies() ;
  bool cache_dependencies() const;
  void set_cache_dependencies(bool value);

  private:
  bool _internal_cache_dependencies() const;
  void _internal_set_cache_dependencies(bool value);

  public:
  // int32 max_dependency_size_mb = 8;
  void clear_max_dependency_size_mb() ;
  ::int32_t max_dependency_size_mb() const;
  void set_max_dependency_size_mb(::int32_t value);

  private:
  ::int32_t _internal_max_dependency_size_mb() const;
  void _internal_set_max_dependency_size_mb(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.script.DependencyManager)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 1,
      144, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DependencyManager& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> local_dependencies_;
    ::google::protobuf::RepeatedPtrField<std::string> remote_dependencies_;
    ::google::protobuf::internal::MapField<DependencyManager_DependencyMetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        dependency_metadata_;
    ::google::protobuf::internal::ArenaStringPtr dependency_checksum_;
    ::google::protobuf::internal::ArenaStringPtr dependency_source_type_;
    bool auto_resolve_conflicts_;
    bool cache_dependencies_;
    ::int32_t max_dependency_size_mb_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_script_2eproto;
};
// -------------------------------------------------------------------

class ScriptExecutionHistory final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.script.ScriptExecutionHistory) */ {
 public:
  inline ScriptExecutionHistory() : ScriptExecutionHistory(nullptr) {}
  ~ScriptExecutionHistory() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ScriptExecutionHistory* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ScriptExecutionHistory));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ScriptExecutionHistory(
      ::google::protobuf::internal::ConstantInitialized);

  inline ScriptExecutionHistory(const ScriptExecutionHistory& from) : ScriptExecutionHistory(nullptr, from) {}
  inline ScriptExecutionHistory(ScriptExecutionHistory&& from) noexcept
      : ScriptExecutionHistory(nullptr, std::move(from)) {}
  inline ScriptExecutionHistory& operator=(const ScriptExecutionHistory& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScriptExecutionHistory& operator=(ScriptExecutionHistory&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ScriptExecutionHistory& default_instance() {
    return *internal_default_instance();
  }
  static inline const ScriptExecutionHistory* internal_default_instance() {
    return reinterpret_cast<const ScriptExecutionHistory*>(
        &_ScriptExecutionHistory_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(ScriptExecutionHistory& a, ScriptExecutionHistory& b) { a.Swap(&b); }
  inline void Swap(ScriptExecutionHistory* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ScriptExecutionHistory* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ScriptExecutionHistory* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ScriptExecutionHistory>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ScriptExecutionHistory& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ScriptExecutionHistory& from) { ScriptExecutionHistory::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ScriptExecutionHistory* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.script.ScriptExecutionHistory"; }

 protected:
  explicit ScriptExecutionHistory(::google::protobuf::Arena* arena);
  ScriptExecutionHistory(::google::protobuf::Arena* arena, const ScriptExecutionHistory& from);
  ScriptExecutionHistory(::google::protobuf::Arena* arena, ScriptExecutionHistory&& from) noexcept
      : ScriptExecutionHistory(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kExecutionsFieldNumber = 2,
    kHistoryMetadataFieldNumber = 6,
    kScriptIdFieldNumber = 1,
    kTotalExecutionsFieldNumber = 3,
    kSuccessfulExecutionsFieldNumber = 4,
    kFailedExecutionsFieldNumber = 5,
  };
  // repeated .seigr.script.ScriptExecutionRecord executions = 2;
  int executions_size() const;
  private:
  int _internal_executions_size() const;

  public:
  void clear_executions() ;
  ::seigr::script::ScriptExecutionRecord* mutable_executions(int index);
  ::google::protobuf::RepeatedPtrField<::seigr::script::ScriptExecutionRecord>* mutable_executions();

  private:
  const ::google::protobuf::RepeatedPtrField<::seigr::script::ScriptExecutionRecord>& _internal_executions() const;
  ::google::protobuf::RepeatedPtrField<::seigr::script::ScriptExecutionRecord>* _internal_mutable_executions();
  public:
  const ::seigr::script::ScriptExecutionRecord& executions(int index) const;
  ::seigr::script::ScriptExecutionRecord* add_executions();
  const ::google::protobuf::RepeatedPtrField<::seigr::script::ScriptExecutionRecord>& executions() const;
  // map<string, string> history_metadata = 6;
  int history_metadata_size() const;
  private:
  int _internal_history_metadata_size() const;

  public:
  void clear_history_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& history_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_history_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_history_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_history_metadata();

  public:
  // string script_id = 1;
  void clear_script_id() ;
  const std::string& script_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_script_id(Arg_&& arg, Args_... args);
  std::string* mutable_script_id();
  PROTOBUF_NODISCARD std::string* release_script_id();
  void set_allocated_script_id(std::string* value);

  private:
  const std::string& _internal_script_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_script_id(
      const std::string& value);
  std::string* _internal_mutable_script_id();

  public:
  // int32 total_executions = 3;
  void clear_total_executions() ;
  ::int32_t total_executions() const;
  void set_total_executions(::int32_t value);

  private:
  ::int32_t _internal_total_executions() const;
  void _internal_set_total_executions(::int32_t value);

  public:
  // int32 successful_executions = 4;
  void clear_successful_executions() ;
  ::int32_t successful_executions() const;
  void set_successful_executions(::int32_t value);

  private:
  ::int32_t _internal_successful_executions() const;
  void _internal_set_successful_executions(::int32_t value);

  public:
  // int32 failed_executions = 5;
  void clear_failed_executions() ;
  ::int32_t failed_executions() const;
  void set_failed_executions(::int32_t value);

  private:
  ::int32_t _internal_failed_executions() const;
  void _internal_set_failed_executions(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.script.ScriptExecutionHistory)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 2,
      69, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ScriptExecutionHistory& from_msg);
    ::google::protobuf::RepeatedPtrField< ::seigr::script::ScriptExecutionRecord > executions_;
    ::google::protobuf::internal::MapField<ScriptExecutionHistory_HistoryMetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        history_metadata_;
    ::google::protobuf::internal::ArenaStringPtr script_id_;
    ::int32_t total_executions_;
    ::int32_t successful_executions_;
    ::int32_t failed_executions_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_script_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Script

// string script_id = 1;
inline void Script::clear_script_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.script_id_.ClearToEmpty();
}
inline const std::string& Script::script_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.script.Script.script_id)
  return _internal_script_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Script::set_script_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.script_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.script.Script.script_id)
}
inline std::string* Script::mutable_script_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_script_id();
  // @@protoc_insertion_point(field_mutable:seigr.script.Script.script_id)
  return _s;
}
inline const std::string& Script::_internal_script_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.script_id_.Get();
}
inline void Script::_internal_set_script_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.script_id_.Set(value, GetArena());
}
inline std::string* Script::_internal_mutable_script_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.script_id_.Mutable( GetArena());
}
inline std::string* Script::release_script_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.script.Script.script_id)
  return _impl_.script_id_.Release();
}
inline void Script::set_allocated_script_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.script_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.script_id_.IsDefault()) {
    _impl_.script_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.script.Script.script_id)
}

// string language = 2;
inline void Script::clear_language() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.language_.ClearToEmpty();
}
inline const std::string& Script::language() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.script.Script.language)
  return _internal_language();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Script::set_language(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.language_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.script.Script.language)
}
inline std::string* Script::mutable_language() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_language();
  // @@protoc_insertion_point(field_mutable:seigr.script.Script.language)
  return _s;
}
inline const std::string& Script::_internal_language() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.language_.Get();
}
inline void Script::_internal_set_language(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.language_.Set(value, GetArena());
}
inline std::string* Script::_internal_mutable_language() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.language_.Mutable( GetArena());
}
inline std::string* Script::release_language() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.script.Script.language)
  return _impl_.language_.Release();
}
inline void Script::set_allocated_language(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.language_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.language_.IsDefault()) {
    _impl_.language_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.script.Script.language)
}

// bytes code = 3;
inline void Script::clear_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_.ClearToEmpty();
}
inline const std::string& Script::code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.script.Script.code)
  return _internal_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Script::set_code(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.script.Script.code)
}
inline std::string* Script::mutable_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_code();
  // @@protoc_insertion_point(field_mutable:seigr.script.Script.code)
  return _s;
}
inline const std::string& Script::_internal_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.code_.Get();
}
inline void Script::_internal_set_code(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_.Set(value, GetArena());
}
inline std::string* Script::_internal_mutable_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.code_.Mutable( GetArena());
}
inline std::string* Script::release_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.script.Script.code)
  return _impl_.code_.Release();
}
inline void Script::set_allocated_code(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.code_.IsDefault()) {
    _impl_.code_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.script.Script.code)
}

// map<string, string> environment = 4;
inline int Script::_internal_environment_size() const {
  return _internal_environment().size();
}
inline int Script::environment_size() const {
  return _internal_environment_size();
}
inline void Script::clear_environment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.environment_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& Script::_internal_environment() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.environment_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& Script::environment() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.script.Script.environment)
  return _internal_environment();
}
inline ::google::protobuf::Map<std::string, std::string>* Script::_internal_mutable_environment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.environment_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* Script::mutable_environment() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.script.Script.environment)
  return _internal_mutable_environment();
}

// bool is_sandboxed = 5;
inline void Script::clear_is_sandboxed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_sandboxed_ = false;
}
inline bool Script::is_sandboxed() const {
  // @@protoc_insertion_point(field_get:seigr.script.Script.is_sandboxed)
  return _internal_is_sandboxed();
}
inline void Script::set_is_sandboxed(bool value) {
  _internal_set_is_sandboxed(value);
  // @@protoc_insertion_point(field_set:seigr.script.Script.is_sandboxed)
}
inline bool Script::_internal_is_sandboxed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_sandboxed_;
}
inline void Script::_internal_set_is_sandboxed(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_sandboxed_ = value;
}

// string version = 6;
inline void Script::clear_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.ClearToEmpty();
}
inline const std::string& Script::version() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.script.Script.version)
  return _internal_version();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Script::set_version(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.script.Script.version)
}
inline std::string* Script::mutable_version() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_version();
  // @@protoc_insertion_point(field_mutable:seigr.script.Script.version)
  return _s;
}
inline const std::string& Script::_internal_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.version_.Get();
}
inline void Script::_internal_set_version(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.Set(value, GetArena());
}
inline std::string* Script::_internal_mutable_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.version_.Mutable( GetArena());
}
inline std::string* Script::release_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.script.Script.version)
  return _impl_.version_.Release();
}
inline void Script::set_allocated_version(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.version_.IsDefault()) {
    _impl_.version_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.script.Script.version)
}

// bytes code_hash = 7;
inline void Script::clear_code_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_hash_.ClearToEmpty();
}
inline const std::string& Script::code_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.script.Script.code_hash)
  return _internal_code_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Script::set_code_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_hash_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.script.Script.code_hash)
}
inline std::string* Script::mutable_code_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_code_hash();
  // @@protoc_insertion_point(field_mutable:seigr.script.Script.code_hash)
  return _s;
}
inline const std::string& Script::_internal_code_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.code_hash_.Get();
}
inline void Script::_internal_set_code_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_hash_.Set(value, GetArena());
}
inline std::string* Script::_internal_mutable_code_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.code_hash_.Mutable( GetArena());
}
inline std::string* Script::release_code_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.script.Script.code_hash)
  return _impl_.code_hash_.Release();
}
inline void Script::set_allocated_code_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_hash_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.code_hash_.IsDefault()) {
    _impl_.code_hash_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.script.Script.code_hash)
}

// int32 max_runtime_ms = 8;
inline void Script::clear_max_runtime_ms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_runtime_ms_ = 0;
}
inline ::int32_t Script::max_runtime_ms() const {
  // @@protoc_insertion_point(field_get:seigr.script.Script.max_runtime_ms)
  return _internal_max_runtime_ms();
}
inline void Script::set_max_runtime_ms(::int32_t value) {
  _internal_set_max_runtime_ms(value);
  // @@protoc_insertion_point(field_set:seigr.script.Script.max_runtime_ms)
}
inline ::int32_t Script::_internal_max_runtime_ms() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_runtime_ms_;
}
inline void Script::_internal_set_max_runtime_ms(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_runtime_ms_ = value;
}

// int32 max_memory_mb = 9;
inline void Script::clear_max_memory_mb() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_memory_mb_ = 0;
}
inline ::int32_t Script::max_memory_mb() const {
  // @@protoc_insertion_point(field_get:seigr.script.Script.max_memory_mb)
  return _internal_max_memory_mb();
}
inline void Script::set_max_memory_mb(::int32_t value) {
  _internal_set_max_memory_mb(value);
  // @@protoc_insertion_point(field_set:seigr.script.Script.max_memory_mb)
}
inline ::int32_t Script::_internal_max_memory_mb() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_memory_mb_;
}
inline void Script::_internal_set_max_memory_mb(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_memory_mb_ = value;
}

// int32 max_cpu_usage_percent = 10;
inline void Script::clear_max_cpu_usage_percent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_cpu_usage_percent_ = 0;
}
inline ::int32_t Script::max_cpu_usage_percent() const {
  // @@protoc_insertion_point(field_get:seigr.script.Script.max_cpu_usage_percent)
  return _internal_max_cpu_usage_percent();
}
inline void Script::set_max_cpu_usage_percent(::int32_t value) {
  _internal_set_max_cpu_usage_percent(value);
  // @@protoc_insertion_point(field_set:seigr.script.Script.max_cpu_usage_percent)
}
inline ::int32_t Script::_internal_max_cpu_usage_percent() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_cpu_usage_percent_;
}
inline void Script::_internal_set_max_cpu_usage_percent(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_cpu_usage_percent_ = value;
}

// int32 max_disk_usage_mb = 11;
inline void Script::clear_max_disk_usage_mb() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_disk_usage_mb_ = 0;
}
inline ::int32_t Script::max_disk_usage_mb() const {
  // @@protoc_insertion_point(field_get:seigr.script.Script.max_disk_usage_mb)
  return _internal_max_disk_usage_mb();
}
inline void Script::set_max_disk_usage_mb(::int32_t value) {
  _internal_set_max_disk_usage_mb(value);
  // @@protoc_insertion_point(field_set:seigr.script.Script.max_disk_usage_mb)
}
inline ::int32_t Script::_internal_max_disk_usage_mb() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_disk_usage_mb_;
}
inline void Script::_internal_set_max_disk_usage_mb(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_disk_usage_mb_ = value;
}

// bool allow_external_network = 12;
inline void Script::clear_allow_external_network() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.allow_external_network_ = false;
}
inline bool Script::allow_external_network() const {
  // @@protoc_insertion_point(field_get:seigr.script.Script.allow_external_network)
  return _internal_allow_external_network();
}
inline void Script::set_allow_external_network(bool value) {
  _internal_set_allow_external_network(value);
  // @@protoc_insertion_point(field_set:seigr.script.Script.allow_external_network)
}
inline bool Script::_internal_allow_external_network() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.allow_external_network_;
}
inline void Script::_internal_set_allow_external_network(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.allow_external_network_ = value;
}

// repeated .seigr.script.AllowedAction allowed_actions = 13;
inline int Script::_internal_allowed_actions_size() const {
  return _internal_allowed_actions().size();
}
inline int Script::allowed_actions_size() const {
  return _internal_allowed_actions_size();
}
inline void Script::clear_allowed_actions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.allowed_actions_.Clear();
}
inline ::seigr::script::AllowedAction Script::allowed_actions(int index) const {
  // @@protoc_insertion_point(field_get:seigr.script.Script.allowed_actions)
  return static_cast<::seigr::script::AllowedAction>(_internal_allowed_actions().Get(index));
}
inline void Script::set_allowed_actions(int index, ::seigr::script::AllowedAction value) {
  _internal_mutable_allowed_actions()->Set(index, value);
  // @@protoc_insertion_point(field_set:seigr.script.Script.allowed_actions)
}
inline void Script::add_allowed_actions(::seigr::script::AllowedAction value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_allowed_actions()->Add(value);
  // @@protoc_insertion_point(field_add:seigr.script.Script.allowed_actions)
}
inline const ::google::protobuf::RepeatedField<int>& Script::allowed_actions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.script.Script.allowed_actions)
  return _internal_allowed_actions();
}
inline ::google::protobuf::RepeatedField<int>* Script::mutable_allowed_actions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.script.Script.allowed_actions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_allowed_actions();
}
inline const ::google::protobuf::RepeatedField<int>& Script::_internal_allowed_actions()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.allowed_actions_;
}
inline ::google::protobuf::RepeatedField<int>* Script::_internal_mutable_allowed_actions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.allowed_actions_;
}

// repeated string dependencies = 14;
inline int Script::_internal_dependencies_size() const {
  return _internal_dependencies().size();
}
inline int Script::dependencies_size() const {
  return _internal_dependencies_size();
}
inline void Script::clear_dependencies() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dependencies_.Clear();
}
inline std::string* Script::add_dependencies() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_dependencies()->Add();
  // @@protoc_insertion_point(field_add_mutable:seigr.script.Script.dependencies)
  return _s;
}
inline const std::string& Script::dependencies(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.script.Script.dependencies)
  return _internal_dependencies().Get(index);
}
inline std::string* Script::mutable_dependencies(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.script.Script.dependencies)
  return _internal_mutable_dependencies()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void Script::set_dependencies(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_dependencies()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:seigr.script.Script.dependencies)
}
template <typename Arg_, typename... Args_>
inline void Script::add_dependencies(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_dependencies(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seigr.script.Script.dependencies)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Script::dependencies() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.script.Script.dependencies)
  return _internal_dependencies();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Script::mutable_dependencies() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.script.Script.dependencies)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_dependencies();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Script::_internal_dependencies() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dependencies_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Script::_internal_mutable_dependencies() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.dependencies_;
}

// .seigr.error_handling.ErrorResolutionStrategy error_handling = 15;
inline void Script::clear_error_handling() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_handling_ = 0;
}
inline ::seigr::error_handling::ErrorResolutionStrategy Script::error_handling() const {
  // @@protoc_insertion_point(field_get:seigr.script.Script.error_handling)
  return _internal_error_handling();
}
inline void Script::set_error_handling(::seigr::error_handling::ErrorResolutionStrategy value) {
  _internal_set_error_handling(value);
  // @@protoc_insertion_point(field_set:seigr.script.Script.error_handling)
}
inline ::seigr::error_handling::ErrorResolutionStrategy Script::_internal_error_handling() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::error_handling::ErrorResolutionStrategy>(_impl_.error_handling_);
}
inline void Script::_internal_set_error_handling(::seigr::error_handling::ErrorResolutionStrategy value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_handling_ = value;
}

// .seigr.script.LogLevel log_level = 16;
inline void Script::clear_log_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.log_level_ = 0;
}
inline ::seigr::script::LogLevel Script::log_level() const {
  // @@protoc_insertion_point(field_get:seigr.script.Script.log_level)
  return _internal_log_level();
}
inline void Script::set_log_level(::seigr::script::LogLevel value) {
  _internal_set_log_level(value);
  // @@protoc_insertion_point(field_set:seigr.script.Script.log_level)
}
inline ::seigr::script::LogLevel Script::_internal_log_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::script::LogLevel>(_impl_.log_level_);
}
inline void Script::_internal_set_log_level(::seigr::script::LogLevel value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.log_level_ = value;
}

// map<string, string> metadata = 17;
inline int Script::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int Script::metadata_size() const {
  return _internal_metadata_size();
}
inline void Script::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& Script::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& Script::metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.script.Script.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* Script::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* Script::mutable_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.script.Script.metadata)
  return _internal_mutable_metadata();
}

// bool enable_tracing = 18;
inline void Script::clear_enable_tracing() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_tracing_ = false;
}
inline bool Script::enable_tracing() const {
  // @@protoc_insertion_point(field_get:seigr.script.Script.enable_tracing)
  return _internal_enable_tracing();
}
inline void Script::set_enable_tracing(bool value) {
  _internal_set_enable_tracing(value);
  // @@protoc_insertion_point(field_set:seigr.script.Script.enable_tracing)
}
inline bool Script::_internal_enable_tracing() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enable_tracing_;
}
inline void Script::_internal_set_enable_tracing(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_tracing_ = value;
}

// bool enable_profiling = 19;
inline void Script::clear_enable_profiling() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_profiling_ = false;
}
inline bool Script::enable_profiling() const {
  // @@protoc_insertion_point(field_get:seigr.script.Script.enable_profiling)
  return _internal_enable_profiling();
}
inline void Script::set_enable_profiling(bool value) {
  _internal_set_enable_profiling(value);
  // @@protoc_insertion_point(field_set:seigr.script.Script.enable_profiling)
}
inline bool Script::_internal_enable_profiling() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enable_profiling_;
}
inline void Script::_internal_set_enable_profiling(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_profiling_ = value;
}

// bool requires_user_input = 20;
inline void Script::clear_requires_user_input() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requires_user_input_ = false;
}
inline bool Script::requires_user_input() const {
  // @@protoc_insertion_point(field_get:seigr.script.Script.requires_user_input)
  return _internal_requires_user_input();
}
inline void Script::set_requires_user_input(bool value) {
  _internal_set_requires_user_input(value);
  // @@protoc_insertion_point(field_set:seigr.script.Script.requires_user_input)
}
inline bool Script::_internal_requires_user_input() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.requires_user_input_;
}
inline void Script::_internal_set_requires_user_input(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requires_user_input_ = value;
}

// bool eco_mode = 21;
inline void Script::clear_eco_mode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.eco_mode_ = false;
}
inline bool Script::eco_mode() const {
  // @@protoc_insertion_point(field_get:seigr.script.Script.eco_mode)
  return _internal_eco_mode();
}
inline void Script::set_eco_mode(bool value) {
  _internal_set_eco_mode(value);
  // @@protoc_insertion_point(field_set:seigr.script.Script.eco_mode)
}
inline bool Script::_internal_eco_mode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.eco_mode_;
}
inline void Script::_internal_set_eco_mode(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.eco_mode_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ScriptExecutionRequest

// string request_id = 1;
inline void ScriptExecutionRequest::clear_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_.ClearToEmpty();
}
inline const std::string& ScriptExecutionRequest::request_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.script.ScriptExecutionRequest.request_id)
  return _internal_request_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ScriptExecutionRequest::set_request_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.script.ScriptExecutionRequest.request_id)
}
inline std::string* ScriptExecutionRequest::mutable_request_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_request_id();
  // @@protoc_insertion_point(field_mutable:seigr.script.ScriptExecutionRequest.request_id)
  return _s;
}
inline const std::string& ScriptExecutionRequest::_internal_request_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.request_id_.Get();
}
inline void ScriptExecutionRequest::_internal_set_request_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_.Set(value, GetArena());
}
inline std::string* ScriptExecutionRequest::_internal_mutable_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.request_id_.Mutable( GetArena());
}
inline std::string* ScriptExecutionRequest::release_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.script.ScriptExecutionRequest.request_id)
  return _impl_.request_id_.Release();
}
inline void ScriptExecutionRequest::set_allocated_request_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.request_id_.IsDefault()) {
    _impl_.request_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.script.ScriptExecutionRequest.request_id)
}

// string script_id = 2;
inline void ScriptExecutionRequest::clear_script_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.script_id_.ClearToEmpty();
}
inline const std::string& ScriptExecutionRequest::script_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.script.ScriptExecutionRequest.script_id)
  return _internal_script_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ScriptExecutionRequest::set_script_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.script_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.script.ScriptExecutionRequest.script_id)
}
inline std::string* ScriptExecutionRequest::mutable_script_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_script_id();
  // @@protoc_insertion_point(field_mutable:seigr.script.ScriptExecutionRequest.script_id)
  return _s;
}
inline const std::string& ScriptExecutionRequest::_internal_script_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.script_id_.Get();
}
inline void ScriptExecutionRequest::_internal_set_script_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.script_id_.Set(value, GetArena());
}
inline std::string* ScriptExecutionRequest::_internal_mutable_script_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.script_id_.Mutable( GetArena());
}
inline std::string* ScriptExecutionRequest::release_script_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.script.ScriptExecutionRequest.script_id)
  return _impl_.script_id_.Release();
}
inline void ScriptExecutionRequest::set_allocated_script_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.script_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.script_id_.IsDefault()) {
    _impl_.script_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.script.ScriptExecutionRequest.script_id)
}

// map<string, string> input_parameters = 3;
inline int ScriptExecutionRequest::_internal_input_parameters_size() const {
  return _internal_input_parameters().size();
}
inline int ScriptExecutionRequest::input_parameters_size() const {
  return _internal_input_parameters_size();
}
inline void ScriptExecutionRequest::clear_input_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.input_parameters_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& ScriptExecutionRequest::_internal_input_parameters() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.input_parameters_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& ScriptExecutionRequest::input_parameters() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.script.ScriptExecutionRequest.input_parameters)
  return _internal_input_parameters();
}
inline ::google::protobuf::Map<std::string, std::string>* ScriptExecutionRequest::_internal_mutable_input_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.input_parameters_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* ScriptExecutionRequest::mutable_input_parameters() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.script.ScriptExecutionRequest.input_parameters)
  return _internal_mutable_input_parameters();
}

// string initiated_by = 4;
inline void ScriptExecutionRequest::clear_initiated_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initiated_by_.ClearToEmpty();
}
inline const std::string& ScriptExecutionRequest::initiated_by() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.script.ScriptExecutionRequest.initiated_by)
  return _internal_initiated_by();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ScriptExecutionRequest::set_initiated_by(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initiated_by_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.script.ScriptExecutionRequest.initiated_by)
}
inline std::string* ScriptExecutionRequest::mutable_initiated_by() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_initiated_by();
  // @@protoc_insertion_point(field_mutable:seigr.script.ScriptExecutionRequest.initiated_by)
  return _s;
}
inline const std::string& ScriptExecutionRequest::_internal_initiated_by() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.initiated_by_.Get();
}
inline void ScriptExecutionRequest::_internal_set_initiated_by(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initiated_by_.Set(value, GetArena());
}
inline std::string* ScriptExecutionRequest::_internal_mutable_initiated_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.initiated_by_.Mutable( GetArena());
}
inline std::string* ScriptExecutionRequest::release_initiated_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.script.ScriptExecutionRequest.initiated_by)
  return _impl_.initiated_by_.Release();
}
inline void ScriptExecutionRequest::set_allocated_initiated_by(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initiated_by_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.initiated_by_.IsDefault()) {
    _impl_.initiated_by_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.script.ScriptExecutionRequest.initiated_by)
}

// string requested_at = 5;
inline void ScriptExecutionRequest::clear_requested_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requested_at_.ClearToEmpty();
}
inline const std::string& ScriptExecutionRequest::requested_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.script.ScriptExecutionRequest.requested_at)
  return _internal_requested_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ScriptExecutionRequest::set_requested_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requested_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.script.ScriptExecutionRequest.requested_at)
}
inline std::string* ScriptExecutionRequest::mutable_requested_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_requested_at();
  // @@protoc_insertion_point(field_mutable:seigr.script.ScriptExecutionRequest.requested_at)
  return _s;
}
inline const std::string& ScriptExecutionRequest::_internal_requested_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.requested_at_.Get();
}
inline void ScriptExecutionRequest::_internal_set_requested_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requested_at_.Set(value, GetArena());
}
inline std::string* ScriptExecutionRequest::_internal_mutable_requested_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.requested_at_.Mutable( GetArena());
}
inline std::string* ScriptExecutionRequest::release_requested_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.script.ScriptExecutionRequest.requested_at)
  return _impl_.requested_at_.Release();
}
inline void ScriptExecutionRequest::set_allocated_requested_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requested_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.requested_at_.IsDefault()) {
    _impl_.requested_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.script.ScriptExecutionRequest.requested_at)
}

// bool async_execution = 6;
inline void ScriptExecutionRequest::clear_async_execution() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.async_execution_ = false;
}
inline bool ScriptExecutionRequest::async_execution() const {
  // @@protoc_insertion_point(field_get:seigr.script.ScriptExecutionRequest.async_execution)
  return _internal_async_execution();
}
inline void ScriptExecutionRequest::set_async_execution(bool value) {
  _internal_set_async_execution(value);
  // @@protoc_insertion_point(field_set:seigr.script.ScriptExecutionRequest.async_execution)
}
inline bool ScriptExecutionRequest::_internal_async_execution() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.async_execution_;
}
inline void ScriptExecutionRequest::_internal_set_async_execution(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.async_execution_ = value;
}

// int32 timeout_limit_ms = 7;
inline void ScriptExecutionRequest::clear_timeout_limit_ms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timeout_limit_ms_ = 0;
}
inline ::int32_t ScriptExecutionRequest::timeout_limit_ms() const {
  // @@protoc_insertion_point(field_get:seigr.script.ScriptExecutionRequest.timeout_limit_ms)
  return _internal_timeout_limit_ms();
}
inline void ScriptExecutionRequest::set_timeout_limit_ms(::int32_t value) {
  _internal_set_timeout_limit_ms(value);
  // @@protoc_insertion_point(field_set:seigr.script.ScriptExecutionRequest.timeout_limit_ms)
}
inline ::int32_t ScriptExecutionRequest::_internal_timeout_limit_ms() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timeout_limit_ms_;
}
inline void ScriptExecutionRequest::_internal_set_timeout_limit_ms(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timeout_limit_ms_ = value;
}

// string priority_level = 8;
inline void ScriptExecutionRequest::clear_priority_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.priority_level_.ClearToEmpty();
}
inline const std::string& ScriptExecutionRequest::priority_level() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.script.ScriptExecutionRequest.priority_level)
  return _internal_priority_level();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ScriptExecutionRequest::set_priority_level(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.priority_level_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.script.ScriptExecutionRequest.priority_level)
}
inline std::string* ScriptExecutionRequest::mutable_priority_level() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_priority_level();
  // @@protoc_insertion_point(field_mutable:seigr.script.ScriptExecutionRequest.priority_level)
  return _s;
}
inline const std::string& ScriptExecutionRequest::_internal_priority_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.priority_level_.Get();
}
inline void ScriptExecutionRequest::_internal_set_priority_level(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.priority_level_.Set(value, GetArena());
}
inline std::string* ScriptExecutionRequest::_internal_mutable_priority_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.priority_level_.Mutable( GetArena());
}
inline std::string* ScriptExecutionRequest::release_priority_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.script.ScriptExecutionRequest.priority_level)
  return _impl_.priority_level_.Release();
}
inline void ScriptExecutionRequest::set_allocated_priority_level(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.priority_level_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.priority_level_.IsDefault()) {
    _impl_.priority_level_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.script.ScriptExecutionRequest.priority_level)
}

// bool eco_mode_enabled = 9;
inline void ScriptExecutionRequest::clear_eco_mode_enabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.eco_mode_enabled_ = false;
}
inline bool ScriptExecutionRequest::eco_mode_enabled() const {
  // @@protoc_insertion_point(field_get:seigr.script.ScriptExecutionRequest.eco_mode_enabled)
  return _internal_eco_mode_enabled();
}
inline void ScriptExecutionRequest::set_eco_mode_enabled(bool value) {
  _internal_set_eco_mode_enabled(value);
  // @@protoc_insertion_point(field_set:seigr.script.ScriptExecutionRequest.eco_mode_enabled)
}
inline bool ScriptExecutionRequest::_internal_eco_mode_enabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.eco_mode_enabled_;
}
inline void ScriptExecutionRequest::_internal_set_eco_mode_enabled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.eco_mode_enabled_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ScriptExecutionResult

// string request_id = 1;
inline void ScriptExecutionResult::clear_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_.ClearToEmpty();
}
inline const std::string& ScriptExecutionResult::request_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.script.ScriptExecutionResult.request_id)
  return _internal_request_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ScriptExecutionResult::set_request_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.script.ScriptExecutionResult.request_id)
}
inline std::string* ScriptExecutionResult::mutable_request_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_request_id();
  // @@protoc_insertion_point(field_mutable:seigr.script.ScriptExecutionResult.request_id)
  return _s;
}
inline const std::string& ScriptExecutionResult::_internal_request_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.request_id_.Get();
}
inline void ScriptExecutionResult::_internal_set_request_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_.Set(value, GetArena());
}
inline std::string* ScriptExecutionResult::_internal_mutable_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.request_id_.Mutable( GetArena());
}
inline std::string* ScriptExecutionResult::release_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.script.ScriptExecutionResult.request_id)
  return _impl_.request_id_.Release();
}
inline void ScriptExecutionResult::set_allocated_request_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.request_id_.IsDefault()) {
    _impl_.request_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.script.ScriptExecutionResult.request_id)
}

// string script_id = 2;
inline void ScriptExecutionResult::clear_script_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.script_id_.ClearToEmpty();
}
inline const std::string& ScriptExecutionResult::script_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.script.ScriptExecutionResult.script_id)
  return _internal_script_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ScriptExecutionResult::set_script_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.script_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.script.ScriptExecutionResult.script_id)
}
inline std::string* ScriptExecutionResult::mutable_script_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_script_id();
  // @@protoc_insertion_point(field_mutable:seigr.script.ScriptExecutionResult.script_id)
  return _s;
}
inline const std::string& ScriptExecutionResult::_internal_script_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.script_id_.Get();
}
inline void ScriptExecutionResult::_internal_set_script_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.script_id_.Set(value, GetArena());
}
inline std::string* ScriptExecutionResult::_internal_mutable_script_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.script_id_.Mutable( GetArena());
}
inline std::string* ScriptExecutionResult::release_script_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.script.ScriptExecutionResult.script_id)
  return _impl_.script_id_.Release();
}
inline void ScriptExecutionResult::set_allocated_script_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.script_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.script_id_.IsDefault()) {
    _impl_.script_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.script.ScriptExecutionResult.script_id)
}

// bool success = 3;
inline void ScriptExecutionResult::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool ScriptExecutionResult::success() const {
  // @@protoc_insertion_point(field_get:seigr.script.ScriptExecutionResult.success)
  return _internal_success();
}
inline void ScriptExecutionResult::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:seigr.script.ScriptExecutionResult.success)
}
inline bool ScriptExecutionResult::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void ScriptExecutionResult::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// string result_data = 4;
inline void ScriptExecutionResult::clear_result_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_data_.ClearToEmpty();
}
inline const std::string& ScriptExecutionResult::result_data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.script.ScriptExecutionResult.result_data)
  return _internal_result_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ScriptExecutionResult::set_result_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_data_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.script.ScriptExecutionResult.result_data)
}
inline std::string* ScriptExecutionResult::mutable_result_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_result_data();
  // @@protoc_insertion_point(field_mutable:seigr.script.ScriptExecutionResult.result_data)
  return _s;
}
inline const std::string& ScriptExecutionResult::_internal_result_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_data_.Get();
}
inline void ScriptExecutionResult::_internal_set_result_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_data_.Set(value, GetArena());
}
inline std::string* ScriptExecutionResult::_internal_mutable_result_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.result_data_.Mutable( GetArena());
}
inline std::string* ScriptExecutionResult::release_result_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.script.ScriptExecutionResult.result_data)
  return _impl_.result_data_.Release();
}
inline void ScriptExecutionResult::set_allocated_result_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.result_data_.IsDefault()) {
    _impl_.result_data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.script.ScriptExecutionResult.result_data)
}

// string error_message = 5;
inline void ScriptExecutionResult::clear_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.ClearToEmpty();
}
inline const std::string& ScriptExecutionResult::error_message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.script.ScriptExecutionResult.error_message)
  return _internal_error_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ScriptExecutionResult::set_error_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.script.ScriptExecutionResult.error_message)
}
inline std::string* ScriptExecutionResult::mutable_error_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_error_message();
  // @@protoc_insertion_point(field_mutable:seigr.script.ScriptExecutionResult.error_message)
  return _s;
}
inline const std::string& ScriptExecutionResult::_internal_error_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.error_message_.Get();
}
inline void ScriptExecutionResult::_internal_set_error_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.Set(value, GetArena());
}
inline std::string* ScriptExecutionResult::_internal_mutable_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.error_message_.Mutable( GetArena());
}
inline std::string* ScriptExecutionResult::release_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.script.ScriptExecutionResult.error_message)
  return _impl_.error_message_.Release();
}
inline void ScriptExecutionResult::set_allocated_error_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.error_message_.IsDefault()) {
    _impl_.error_message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.script.ScriptExecutionResult.error_message)
}

// string completed_at = 6;
inline void ScriptExecutionResult::clear_completed_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.completed_at_.ClearToEmpty();
}
inline const std::string& ScriptExecutionResult::completed_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.script.ScriptExecutionResult.completed_at)
  return _internal_completed_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ScriptExecutionResult::set_completed_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.completed_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.script.ScriptExecutionResult.completed_at)
}
inline std::string* ScriptExecutionResult::mutable_completed_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_completed_at();
  // @@protoc_insertion_point(field_mutable:seigr.script.ScriptExecutionResult.completed_at)
  return _s;
}
inline const std::string& ScriptExecutionResult::_internal_completed_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.completed_at_.Get();
}
inline void ScriptExecutionResult::_internal_set_completed_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.completed_at_.Set(value, GetArena());
}
inline std::string* ScriptExecutionResult::_internal_mutable_completed_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.completed_at_.Mutable( GetArena());
}
inline std::string* ScriptExecutionResult::release_completed_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.script.ScriptExecutionResult.completed_at)
  return _impl_.completed_at_.Release();
}
inline void ScriptExecutionResult::set_allocated_completed_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.completed_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.completed_at_.IsDefault()) {
    _impl_.completed_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.script.ScriptExecutionResult.completed_at)
}

// map<string, string> execution_metadata = 7;
inline int ScriptExecutionResult::_internal_execution_metadata_size() const {
  return _internal_execution_metadata().size();
}
inline int ScriptExecutionResult::execution_metadata_size() const {
  return _internal_execution_metadata_size();
}
inline void ScriptExecutionResult::clear_execution_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.execution_metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& ScriptExecutionResult::_internal_execution_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.execution_metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& ScriptExecutionResult::execution_metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.script.ScriptExecutionResult.execution_metadata)
  return _internal_execution_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* ScriptExecutionResult::_internal_mutable_execution_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.execution_metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* ScriptExecutionResult::mutable_execution_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.script.ScriptExecutionResult.execution_metadata)
  return _internal_mutable_execution_metadata();
}

// repeated string warnings = 8;
inline int ScriptExecutionResult::_internal_warnings_size() const {
  return _internal_warnings().size();
}
inline int ScriptExecutionResult::warnings_size() const {
  return _internal_warnings_size();
}
inline void ScriptExecutionResult::clear_warnings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.warnings_.Clear();
}
inline std::string* ScriptExecutionResult::add_warnings() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_warnings()->Add();
  // @@protoc_insertion_point(field_add_mutable:seigr.script.ScriptExecutionResult.warnings)
  return _s;
}
inline const std::string& ScriptExecutionResult::warnings(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.script.ScriptExecutionResult.warnings)
  return _internal_warnings().Get(index);
}
inline std::string* ScriptExecutionResult::mutable_warnings(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.script.ScriptExecutionResult.warnings)
  return _internal_mutable_warnings()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void ScriptExecutionResult::set_warnings(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_warnings()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:seigr.script.ScriptExecutionResult.warnings)
}
template <typename Arg_, typename... Args_>
inline void ScriptExecutionResult::add_warnings(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_warnings(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seigr.script.ScriptExecutionResult.warnings)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ScriptExecutionResult::warnings() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.script.ScriptExecutionResult.warnings)
  return _internal_warnings();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ScriptExecutionResult::mutable_warnings() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.script.ScriptExecutionResult.warnings)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_warnings();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ScriptExecutionResult::_internal_warnings() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.warnings_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ScriptExecutionResult::_internal_mutable_warnings() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.warnings_;
}

// float execution_duration_ms = 9;
inline void ScriptExecutionResult::clear_execution_duration_ms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.execution_duration_ms_ = 0;
}
inline float ScriptExecutionResult::execution_duration_ms() const {
  // @@protoc_insertion_point(field_get:seigr.script.ScriptExecutionResult.execution_duration_ms)
  return _internal_execution_duration_ms();
}
inline void ScriptExecutionResult::set_execution_duration_ms(float value) {
  _internal_set_execution_duration_ms(value);
  // @@protoc_insertion_point(field_set:seigr.script.ScriptExecutionResult.execution_duration_ms)
}
inline float ScriptExecutionResult::_internal_execution_duration_ms() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.execution_duration_ms_;
}
inline void ScriptExecutionResult::_internal_set_execution_duration_ms(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.execution_duration_ms_ = value;
}

// int64 memory_used_bytes = 10;
inline void ScriptExecutionResult::clear_memory_used_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memory_used_bytes_ = ::int64_t{0};
}
inline ::int64_t ScriptExecutionResult::memory_used_bytes() const {
  // @@protoc_insertion_point(field_get:seigr.script.ScriptExecutionResult.memory_used_bytes)
  return _internal_memory_used_bytes();
}
inline void ScriptExecutionResult::set_memory_used_bytes(::int64_t value) {
  _internal_set_memory_used_bytes(value);
  // @@protoc_insertion_point(field_set:seigr.script.ScriptExecutionResult.memory_used_bytes)
}
inline ::int64_t ScriptExecutionResult::_internal_memory_used_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.memory_used_bytes_;
}
inline void ScriptExecutionResult::_internal_set_memory_used_bytes(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memory_used_bytes_ = value;
}

// int64 disk_usage_bytes = 11;
inline void ScriptExecutionResult::clear_disk_usage_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.disk_usage_bytes_ = ::int64_t{0};
}
inline ::int64_t ScriptExecutionResult::disk_usage_bytes() const {
  // @@protoc_insertion_point(field_get:seigr.script.ScriptExecutionResult.disk_usage_bytes)
  return _internal_disk_usage_bytes();
}
inline void ScriptExecutionResult::set_disk_usage_bytes(::int64_t value) {
  _internal_set_disk_usage_bytes(value);
  // @@protoc_insertion_point(field_set:seigr.script.ScriptExecutionResult.disk_usage_bytes)
}
inline ::int64_t ScriptExecutionResult::_internal_disk_usage_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.disk_usage_bytes_;
}
inline void ScriptExecutionResult::_internal_set_disk_usage_bytes(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.disk_usage_bytes_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// DependencyManager

// repeated string local_dependencies = 1;
inline int DependencyManager::_internal_local_dependencies_size() const {
  return _internal_local_dependencies().size();
}
inline int DependencyManager::local_dependencies_size() const {
  return _internal_local_dependencies_size();
}
inline void DependencyManager::clear_local_dependencies() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.local_dependencies_.Clear();
}
inline std::string* DependencyManager::add_local_dependencies() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_local_dependencies()->Add();
  // @@protoc_insertion_point(field_add_mutable:seigr.script.DependencyManager.local_dependencies)
  return _s;
}
inline const std::string& DependencyManager::local_dependencies(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.script.DependencyManager.local_dependencies)
  return _internal_local_dependencies().Get(index);
}
inline std::string* DependencyManager::mutable_local_dependencies(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.script.DependencyManager.local_dependencies)
  return _internal_mutable_local_dependencies()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void DependencyManager::set_local_dependencies(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_local_dependencies()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:seigr.script.DependencyManager.local_dependencies)
}
template <typename Arg_, typename... Args_>
inline void DependencyManager::add_local_dependencies(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_local_dependencies(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seigr.script.DependencyManager.local_dependencies)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
DependencyManager::local_dependencies() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.script.DependencyManager.local_dependencies)
  return _internal_local_dependencies();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
DependencyManager::mutable_local_dependencies() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.script.DependencyManager.local_dependencies)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_local_dependencies();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
DependencyManager::_internal_local_dependencies() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.local_dependencies_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
DependencyManager::_internal_mutable_local_dependencies() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.local_dependencies_;
}

// repeated string remote_dependencies = 2;
inline int DependencyManager::_internal_remote_dependencies_size() const {
  return _internal_remote_dependencies().size();
}
inline int DependencyManager::remote_dependencies_size() const {
  return _internal_remote_dependencies_size();
}
inline void DependencyManager::clear_remote_dependencies() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_dependencies_.Clear();
}
inline std::string* DependencyManager::add_remote_dependencies() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_remote_dependencies()->Add();
  // @@protoc_insertion_point(field_add_mutable:seigr.script.DependencyManager.remote_dependencies)
  return _s;
}
inline const std::string& DependencyManager::remote_dependencies(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.script.DependencyManager.remote_dependencies)
  return _internal_remote_dependencies().Get(index);
}
inline std::string* DependencyManager::mutable_remote_dependencies(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.script.DependencyManager.remote_dependencies)
  return _internal_mutable_remote_dependencies()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void DependencyManager::set_remote_dependencies(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_remote_dependencies()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:seigr.script.DependencyManager.remote_dependencies)
}
template <typename Arg_, typename... Args_>
inline void DependencyManager::add_remote_dependencies(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_remote_dependencies(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seigr.script.DependencyManager.remote_dependencies)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
DependencyManager::remote_dependencies() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.script.DependencyManager.remote_dependencies)
  return _internal_remote_dependencies();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
DependencyManager::mutable_remote_dependencies() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.script.DependencyManager.remote_dependencies)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_remote_dependencies();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
DependencyManager::_internal_remote_dependencies() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.remote_dependencies_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
DependencyManager::_internal_mutable_remote_dependencies() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.remote_dependencies_;
}

// map<string, string> dependency_metadata = 3;
inline int DependencyManager::_internal_dependency_metadata_size() const {
  return _internal_dependency_metadata().size();
}
inline int DependencyManager::dependency_metadata_size() const {
  return _internal_dependency_metadata_size();
}
inline void DependencyManager::clear_dependency_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dependency_metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& DependencyManager::_internal_dependency_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dependency_metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& DependencyManager::dependency_metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.script.DependencyManager.dependency_metadata)
  return _internal_dependency_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* DependencyManager::_internal_mutable_dependency_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.dependency_metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* DependencyManager::mutable_dependency_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.script.DependencyManager.dependency_metadata)
  return _internal_mutable_dependency_metadata();
}

// string dependency_checksum = 4;
inline void DependencyManager::clear_dependency_checksum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dependency_checksum_.ClearToEmpty();
}
inline const std::string& DependencyManager::dependency_checksum() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.script.DependencyManager.dependency_checksum)
  return _internal_dependency_checksum();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DependencyManager::set_dependency_checksum(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dependency_checksum_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.script.DependencyManager.dependency_checksum)
}
inline std::string* DependencyManager::mutable_dependency_checksum() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_dependency_checksum();
  // @@protoc_insertion_point(field_mutable:seigr.script.DependencyManager.dependency_checksum)
  return _s;
}
inline const std::string& DependencyManager::_internal_dependency_checksum() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dependency_checksum_.Get();
}
inline void DependencyManager::_internal_set_dependency_checksum(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dependency_checksum_.Set(value, GetArena());
}
inline std::string* DependencyManager::_internal_mutable_dependency_checksum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.dependency_checksum_.Mutable( GetArena());
}
inline std::string* DependencyManager::release_dependency_checksum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.script.DependencyManager.dependency_checksum)
  return _impl_.dependency_checksum_.Release();
}
inline void DependencyManager::set_allocated_dependency_checksum(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dependency_checksum_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.dependency_checksum_.IsDefault()) {
    _impl_.dependency_checksum_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.script.DependencyManager.dependency_checksum)
}

// bool auto_resolve_conflicts = 5;
inline void DependencyManager::clear_auto_resolve_conflicts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.auto_resolve_conflicts_ = false;
}
inline bool DependencyManager::auto_resolve_conflicts() const {
  // @@protoc_insertion_point(field_get:seigr.script.DependencyManager.auto_resolve_conflicts)
  return _internal_auto_resolve_conflicts();
}
inline void DependencyManager::set_auto_resolve_conflicts(bool value) {
  _internal_set_auto_resolve_conflicts(value);
  // @@protoc_insertion_point(field_set:seigr.script.DependencyManager.auto_resolve_conflicts)
}
inline bool DependencyManager::_internal_auto_resolve_conflicts() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.auto_resolve_conflicts_;
}
inline void DependencyManager::_internal_set_auto_resolve_conflicts(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.auto_resolve_conflicts_ = value;
}

// bool cache_dependencies = 6;
inline void DependencyManager::clear_cache_dependencies() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cache_dependencies_ = false;
}
inline bool DependencyManager::cache_dependencies() const {
  // @@protoc_insertion_point(field_get:seigr.script.DependencyManager.cache_dependencies)
  return _internal_cache_dependencies();
}
inline void DependencyManager::set_cache_dependencies(bool value) {
  _internal_set_cache_dependencies(value);
  // @@protoc_insertion_point(field_set:seigr.script.DependencyManager.cache_dependencies)
}
inline bool DependencyManager::_internal_cache_dependencies() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cache_dependencies_;
}
inline void DependencyManager::_internal_set_cache_dependencies(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cache_dependencies_ = value;
}

// string dependency_source_type = 7;
inline void DependencyManager::clear_dependency_source_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dependency_source_type_.ClearToEmpty();
}
inline const std::string& DependencyManager::dependency_source_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.script.DependencyManager.dependency_source_type)
  return _internal_dependency_source_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DependencyManager::set_dependency_source_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dependency_source_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.script.DependencyManager.dependency_source_type)
}
inline std::string* DependencyManager::mutable_dependency_source_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_dependency_source_type();
  // @@protoc_insertion_point(field_mutable:seigr.script.DependencyManager.dependency_source_type)
  return _s;
}
inline const std::string& DependencyManager::_internal_dependency_source_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dependency_source_type_.Get();
}
inline void DependencyManager::_internal_set_dependency_source_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dependency_source_type_.Set(value, GetArena());
}
inline std::string* DependencyManager::_internal_mutable_dependency_source_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.dependency_source_type_.Mutable( GetArena());
}
inline std::string* DependencyManager::release_dependency_source_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.script.DependencyManager.dependency_source_type)
  return _impl_.dependency_source_type_.Release();
}
inline void DependencyManager::set_allocated_dependency_source_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dependency_source_type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.dependency_source_type_.IsDefault()) {
    _impl_.dependency_source_type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.script.DependencyManager.dependency_source_type)
}

// int32 max_dependency_size_mb = 8;
inline void DependencyManager::clear_max_dependency_size_mb() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_dependency_size_mb_ = 0;
}
inline ::int32_t DependencyManager::max_dependency_size_mb() const {
  // @@protoc_insertion_point(field_get:seigr.script.DependencyManager.max_dependency_size_mb)
  return _internal_max_dependency_size_mb();
}
inline void DependencyManager::set_max_dependency_size_mb(::int32_t value) {
  _internal_set_max_dependency_size_mb(value);
  // @@protoc_insertion_point(field_set:seigr.script.DependencyManager.max_dependency_size_mb)
}
inline ::int32_t DependencyManager::_internal_max_dependency_size_mb() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_dependency_size_mb_;
}
inline void DependencyManager::_internal_set_max_dependency_size_mb(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_dependency_size_mb_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ScriptMonitoring

// string script_id = 1;
inline void ScriptMonitoring::clear_script_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.script_id_.ClearToEmpty();
}
inline const std::string& ScriptMonitoring::script_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.script.ScriptMonitoring.script_id)
  return _internal_script_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ScriptMonitoring::set_script_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.script_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.script.ScriptMonitoring.script_id)
}
inline std::string* ScriptMonitoring::mutable_script_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_script_id();
  // @@protoc_insertion_point(field_mutable:seigr.script.ScriptMonitoring.script_id)
  return _s;
}
inline const std::string& ScriptMonitoring::_internal_script_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.script_id_.Get();
}
inline void ScriptMonitoring::_internal_set_script_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.script_id_.Set(value, GetArena());
}
inline std::string* ScriptMonitoring::_internal_mutable_script_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.script_id_.Mutable( GetArena());
}
inline std::string* ScriptMonitoring::release_script_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.script.ScriptMonitoring.script_id)
  return _impl_.script_id_.Release();
}
inline void ScriptMonitoring::set_allocated_script_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.script_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.script_id_.IsDefault()) {
    _impl_.script_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.script.ScriptMonitoring.script_id)
}

// string execution_id = 2;
inline void ScriptMonitoring::clear_execution_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.execution_id_.ClearToEmpty();
}
inline const std::string& ScriptMonitoring::execution_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.script.ScriptMonitoring.execution_id)
  return _internal_execution_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ScriptMonitoring::set_execution_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.execution_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.script.ScriptMonitoring.execution_id)
}
inline std::string* ScriptMonitoring::mutable_execution_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_execution_id();
  // @@protoc_insertion_point(field_mutable:seigr.script.ScriptMonitoring.execution_id)
  return _s;
}
inline const std::string& ScriptMonitoring::_internal_execution_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.execution_id_.Get();
}
inline void ScriptMonitoring::_internal_set_execution_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.execution_id_.Set(value, GetArena());
}
inline std::string* ScriptMonitoring::_internal_mutable_execution_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.execution_id_.Mutable( GetArena());
}
inline std::string* ScriptMonitoring::release_execution_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.script.ScriptMonitoring.execution_id)
  return _impl_.execution_id_.Release();
}
inline void ScriptMonitoring::set_allocated_execution_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.execution_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.execution_id_.IsDefault()) {
    _impl_.execution_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.script.ScriptMonitoring.execution_id)
}

// float cpu_usage = 3;
inline void ScriptMonitoring::clear_cpu_usage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cpu_usage_ = 0;
}
inline float ScriptMonitoring::cpu_usage() const {
  // @@protoc_insertion_point(field_get:seigr.script.ScriptMonitoring.cpu_usage)
  return _internal_cpu_usage();
}
inline void ScriptMonitoring::set_cpu_usage(float value) {
  _internal_set_cpu_usage(value);
  // @@protoc_insertion_point(field_set:seigr.script.ScriptMonitoring.cpu_usage)
}
inline float ScriptMonitoring::_internal_cpu_usage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cpu_usage_;
}
inline void ScriptMonitoring::_internal_set_cpu_usage(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cpu_usage_ = value;
}

// float memory_usage = 4;
inline void ScriptMonitoring::clear_memory_usage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memory_usage_ = 0;
}
inline float ScriptMonitoring::memory_usage() const {
  // @@protoc_insertion_point(field_get:seigr.script.ScriptMonitoring.memory_usage)
  return _internal_memory_usage();
}
inline void ScriptMonitoring::set_memory_usage(float value) {
  _internal_set_memory_usage(value);
  // @@protoc_insertion_point(field_set:seigr.script.ScriptMonitoring.memory_usage)
}
inline float ScriptMonitoring::_internal_memory_usage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.memory_usage_;
}
inline void ScriptMonitoring::_internal_set_memory_usage(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memory_usage_ = value;
}

// float disk_usage = 5;
inline void ScriptMonitoring::clear_disk_usage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.disk_usage_ = 0;
}
inline float ScriptMonitoring::disk_usage() const {
  // @@protoc_insertion_point(field_get:seigr.script.ScriptMonitoring.disk_usage)
  return _internal_disk_usage();
}
inline void ScriptMonitoring::set_disk_usage(float value) {
  _internal_set_disk_usage(value);
  // @@protoc_insertion_point(field_set:seigr.script.ScriptMonitoring.disk_usage)
}
inline float ScriptMonitoring::_internal_disk_usage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.disk_usage_;
}
inline void ScriptMonitoring::_internal_set_disk_usage(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.disk_usage_ = value;
}

// string last_checked_at = 6;
inline void ScriptMonitoring::clear_last_checked_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_checked_at_.ClearToEmpty();
}
inline const std::string& ScriptMonitoring::last_checked_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.script.ScriptMonitoring.last_checked_at)
  return _internal_last_checked_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ScriptMonitoring::set_last_checked_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_checked_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.script.ScriptMonitoring.last_checked_at)
}
inline std::string* ScriptMonitoring::mutable_last_checked_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_last_checked_at();
  // @@protoc_insertion_point(field_mutable:seigr.script.ScriptMonitoring.last_checked_at)
  return _s;
}
inline const std::string& ScriptMonitoring::_internal_last_checked_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_checked_at_.Get();
}
inline void ScriptMonitoring::_internal_set_last_checked_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_checked_at_.Set(value, GetArena());
}
inline std::string* ScriptMonitoring::_internal_mutable_last_checked_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.last_checked_at_.Mutable( GetArena());
}
inline std::string* ScriptMonitoring::release_last_checked_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.script.ScriptMonitoring.last_checked_at)
  return _impl_.last_checked_at_.Release();
}
inline void ScriptMonitoring::set_allocated_last_checked_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_checked_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.last_checked_at_.IsDefault()) {
    _impl_.last_checked_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.script.ScriptMonitoring.last_checked_at)
}

// string status_message = 7;
inline void ScriptMonitoring::clear_status_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_message_.ClearToEmpty();
}
inline const std::string& ScriptMonitoring::status_message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.script.ScriptMonitoring.status_message)
  return _internal_status_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ScriptMonitoring::set_status_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.script.ScriptMonitoring.status_message)
}
inline std::string* ScriptMonitoring::mutable_status_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_status_message();
  // @@protoc_insertion_point(field_mutable:seigr.script.ScriptMonitoring.status_message)
  return _s;
}
inline const std::string& ScriptMonitoring::_internal_status_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_message_.Get();
}
inline void ScriptMonitoring::_internal_set_status_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_message_.Set(value, GetArena());
}
inline std::string* ScriptMonitoring::_internal_mutable_status_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.status_message_.Mutable( GetArena());
}
inline std::string* ScriptMonitoring::release_status_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.script.ScriptMonitoring.status_message)
  return _impl_.status_message_.Release();
}
inline void ScriptMonitoring::set_allocated_status_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.status_message_.IsDefault()) {
    _impl_.status_message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.script.ScriptMonitoring.status_message)
}

// map<string, string> monitoring_metadata = 8;
inline int ScriptMonitoring::_internal_monitoring_metadata_size() const {
  return _internal_monitoring_metadata().size();
}
inline int ScriptMonitoring::monitoring_metadata_size() const {
  return _internal_monitoring_metadata_size();
}
inline void ScriptMonitoring::clear_monitoring_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.monitoring_metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& ScriptMonitoring::_internal_monitoring_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.monitoring_metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& ScriptMonitoring::monitoring_metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.script.ScriptMonitoring.monitoring_metadata)
  return _internal_monitoring_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* ScriptMonitoring::_internal_mutable_monitoring_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.monitoring_metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* ScriptMonitoring::mutable_monitoring_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.script.ScriptMonitoring.monitoring_metadata)
  return _internal_mutable_monitoring_metadata();
}

// int32 current_step = 9;
inline void ScriptMonitoring::clear_current_step() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.current_step_ = 0;
}
inline ::int32_t ScriptMonitoring::current_step() const {
  // @@protoc_insertion_point(field_get:seigr.script.ScriptMonitoring.current_step)
  return _internal_current_step();
}
inline void ScriptMonitoring::set_current_step(::int32_t value) {
  _internal_set_current_step(value);
  // @@protoc_insertion_point(field_set:seigr.script.ScriptMonitoring.current_step)
}
inline ::int32_t ScriptMonitoring::_internal_current_step() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.current_step_;
}
inline void ScriptMonitoring::_internal_set_current_step(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.current_step_ = value;
}

// string progress_percentage = 10;
inline void ScriptMonitoring::clear_progress_percentage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.progress_percentage_.ClearToEmpty();
}
inline const std::string& ScriptMonitoring::progress_percentage() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.script.ScriptMonitoring.progress_percentage)
  return _internal_progress_percentage();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ScriptMonitoring::set_progress_percentage(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.progress_percentage_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.script.ScriptMonitoring.progress_percentage)
}
inline std::string* ScriptMonitoring::mutable_progress_percentage() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_progress_percentage();
  // @@protoc_insertion_point(field_mutable:seigr.script.ScriptMonitoring.progress_percentage)
  return _s;
}
inline const std::string& ScriptMonitoring::_internal_progress_percentage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.progress_percentage_.Get();
}
inline void ScriptMonitoring::_internal_set_progress_percentage(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.progress_percentage_.Set(value, GetArena());
}
inline std::string* ScriptMonitoring::_internal_mutable_progress_percentage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.progress_percentage_.Mutable( GetArena());
}
inline std::string* ScriptMonitoring::release_progress_percentage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.script.ScriptMonitoring.progress_percentage)
  return _impl_.progress_percentage_.Release();
}
inline void ScriptMonitoring::set_allocated_progress_percentage(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.progress_percentage_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.progress_percentage_.IsDefault()) {
    _impl_.progress_percentage_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.script.ScriptMonitoring.progress_percentage)
}

// bool flagged_for_manual_review = 11;
inline void ScriptMonitoring::clear_flagged_for_manual_review() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flagged_for_manual_review_ = false;
}
inline bool ScriptMonitoring::flagged_for_manual_review() const {
  // @@protoc_insertion_point(field_get:seigr.script.ScriptMonitoring.flagged_for_manual_review)
  return _internal_flagged_for_manual_review();
}
inline void ScriptMonitoring::set_flagged_for_manual_review(bool value) {
  _internal_set_flagged_for_manual_review(value);
  // @@protoc_insertion_point(field_set:seigr.script.ScriptMonitoring.flagged_for_manual_review)
}
inline bool ScriptMonitoring::_internal_flagged_for_manual_review() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.flagged_for_manual_review_;
}
inline void ScriptMonitoring::_internal_set_flagged_for_manual_review(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flagged_for_manual_review_ = value;
}

// float estimated_energy_usage_kwh = 12;
inline void ScriptMonitoring::clear_estimated_energy_usage_kwh() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.estimated_energy_usage_kwh_ = 0;
}
inline float ScriptMonitoring::estimated_energy_usage_kwh() const {
  // @@protoc_insertion_point(field_get:seigr.script.ScriptMonitoring.estimated_energy_usage_kwh)
  return _internal_estimated_energy_usage_kwh();
}
inline void ScriptMonitoring::set_estimated_energy_usage_kwh(float value) {
  _internal_set_estimated_energy_usage_kwh(value);
  // @@protoc_insertion_point(field_set:seigr.script.ScriptMonitoring.estimated_energy_usage_kwh)
}
inline float ScriptMonitoring::_internal_estimated_energy_usage_kwh() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.estimated_energy_usage_kwh_;
}
inline void ScriptMonitoring::_internal_set_estimated_energy_usage_kwh(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.estimated_energy_usage_kwh_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ScriptConfig

// int32 global_max_runtime_ms = 1;
inline void ScriptConfig::clear_global_max_runtime_ms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.global_max_runtime_ms_ = 0;
}
inline ::int32_t ScriptConfig::global_max_runtime_ms() const {
  // @@protoc_insertion_point(field_get:seigr.script.ScriptConfig.global_max_runtime_ms)
  return _internal_global_max_runtime_ms();
}
inline void ScriptConfig::set_global_max_runtime_ms(::int32_t value) {
  _internal_set_global_max_runtime_ms(value);
  // @@protoc_insertion_point(field_set:seigr.script.ScriptConfig.global_max_runtime_ms)
}
inline ::int32_t ScriptConfig::_internal_global_max_runtime_ms() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.global_max_runtime_ms_;
}
inline void ScriptConfig::_internal_set_global_max_runtime_ms(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.global_max_runtime_ms_ = value;
}

// int32 global_memory_limit_mb = 2;
inline void ScriptConfig::clear_global_memory_limit_mb() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.global_memory_limit_mb_ = 0;
}
inline ::int32_t ScriptConfig::global_memory_limit_mb() const {
  // @@protoc_insertion_point(field_get:seigr.script.ScriptConfig.global_memory_limit_mb)
  return _internal_global_memory_limit_mb();
}
inline void ScriptConfig::set_global_memory_limit_mb(::int32_t value) {
  _internal_set_global_memory_limit_mb(value);
  // @@protoc_insertion_point(field_set:seigr.script.ScriptConfig.global_memory_limit_mb)
}
inline ::int32_t ScriptConfig::_internal_global_memory_limit_mb() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.global_memory_limit_mb_;
}
inline void ScriptConfig::_internal_set_global_memory_limit_mb(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.global_memory_limit_mb_ = value;
}

// bool enforce_sandboxing = 3;
inline void ScriptConfig::clear_enforce_sandboxing() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enforce_sandboxing_ = false;
}
inline bool ScriptConfig::enforce_sandboxing() const {
  // @@protoc_insertion_point(field_get:seigr.script.ScriptConfig.enforce_sandboxing)
  return _internal_enforce_sandboxing();
}
inline void ScriptConfig::set_enforce_sandboxing(bool value) {
  _internal_set_enforce_sandboxing(value);
  // @@protoc_insertion_point(field_set:seigr.script.ScriptConfig.enforce_sandboxing)
}
inline bool ScriptConfig::_internal_enforce_sandboxing() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enforce_sandboxing_;
}
inline void ScriptConfig::_internal_set_enforce_sandboxing(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enforce_sandboxing_ = value;
}

// map<string, string> environment_vars = 4;
inline int ScriptConfig::_internal_environment_vars_size() const {
  return _internal_environment_vars().size();
}
inline int ScriptConfig::environment_vars_size() const {
  return _internal_environment_vars_size();
}
inline void ScriptConfig::clear_environment_vars() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.environment_vars_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& ScriptConfig::_internal_environment_vars() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.environment_vars_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& ScriptConfig::environment_vars() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.script.ScriptConfig.environment_vars)
  return _internal_environment_vars();
}
inline ::google::protobuf::Map<std::string, std::string>* ScriptConfig::_internal_mutable_environment_vars() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.environment_vars_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* ScriptConfig::mutable_environment_vars() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.script.ScriptConfig.environment_vars)
  return _internal_mutable_environment_vars();
}

// repeated .seigr.script.AllowedAction global_allowed_actions = 5;
inline int ScriptConfig::_internal_global_allowed_actions_size() const {
  return _internal_global_allowed_actions().size();
}
inline int ScriptConfig::global_allowed_actions_size() const {
  return _internal_global_allowed_actions_size();
}
inline void ScriptConfig::clear_global_allowed_actions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.global_allowed_actions_.Clear();
}
inline ::seigr::script::AllowedAction ScriptConfig::global_allowed_actions(int index) const {
  // @@protoc_insertion_point(field_get:seigr.script.ScriptConfig.global_allowed_actions)
  return static_cast<::seigr::script::AllowedAction>(_internal_global_allowed_actions().Get(index));
}
inline void ScriptConfig::set_global_allowed_actions(int index, ::seigr::script::AllowedAction value) {
  _internal_mutable_global_allowed_actions()->Set(index, value);
  // @@protoc_insertion_point(field_set:seigr.script.ScriptConfig.global_allowed_actions)
}
inline void ScriptConfig::add_global_allowed_actions(::seigr::script::AllowedAction value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_global_allowed_actions()->Add(value);
  // @@protoc_insertion_point(field_add:seigr.script.ScriptConfig.global_allowed_actions)
}
inline const ::google::protobuf::RepeatedField<int>& ScriptConfig::global_allowed_actions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.script.ScriptConfig.global_allowed_actions)
  return _internal_global_allowed_actions();
}
inline ::google::protobuf::RepeatedField<int>* ScriptConfig::mutable_global_allowed_actions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.script.ScriptConfig.global_allowed_actions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_global_allowed_actions();
}
inline const ::google::protobuf::RepeatedField<int>& ScriptConfig::_internal_global_allowed_actions()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.global_allowed_actions_;
}
inline ::google::protobuf::RepeatedField<int>* ScriptConfig::_internal_mutable_global_allowed_actions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.global_allowed_actions_;
}

// string fallback_script_id = 6;
inline void ScriptConfig::clear_fallback_script_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fallback_script_id_.ClearToEmpty();
}
inline const std::string& ScriptConfig::fallback_script_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.script.ScriptConfig.fallback_script_id)
  return _internal_fallback_script_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ScriptConfig::set_fallback_script_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fallback_script_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.script.ScriptConfig.fallback_script_id)
}
inline std::string* ScriptConfig::mutable_fallback_script_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_fallback_script_id();
  // @@protoc_insertion_point(field_mutable:seigr.script.ScriptConfig.fallback_script_id)
  return _s;
}
inline const std::string& ScriptConfig::_internal_fallback_script_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fallback_script_id_.Get();
}
inline void ScriptConfig::_internal_set_fallback_script_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fallback_script_id_.Set(value, GetArena());
}
inline std::string* ScriptConfig::_internal_mutable_fallback_script_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.fallback_script_id_.Mutable( GetArena());
}
inline std::string* ScriptConfig::release_fallback_script_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.script.ScriptConfig.fallback_script_id)
  return _impl_.fallback_script_id_.Release();
}
inline void ScriptConfig::set_allocated_fallback_script_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fallback_script_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.fallback_script_id_.IsDefault()) {
    _impl_.fallback_script_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.script.ScriptConfig.fallback_script_id)
}

// bool enable_execution_logs = 7;
inline void ScriptConfig::clear_enable_execution_logs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_execution_logs_ = false;
}
inline bool ScriptConfig::enable_execution_logs() const {
  // @@protoc_insertion_point(field_get:seigr.script.ScriptConfig.enable_execution_logs)
  return _internal_enable_execution_logs();
}
inline void ScriptConfig::set_enable_execution_logs(bool value) {
  _internal_set_enable_execution_logs(value);
  // @@protoc_insertion_point(field_set:seigr.script.ScriptConfig.enable_execution_logs)
}
inline bool ScriptConfig::_internal_enable_execution_logs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enable_execution_logs_;
}
inline void ScriptConfig::_internal_set_enable_execution_logs(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_execution_logs_ = value;
}

// map<string, string> error_handling_overrides = 8;
inline int ScriptConfig::_internal_error_handling_overrides_size() const {
  return _internal_error_handling_overrides().size();
}
inline int ScriptConfig::error_handling_overrides_size() const {
  return _internal_error_handling_overrides_size();
}
inline void ScriptConfig::clear_error_handling_overrides() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_handling_overrides_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& ScriptConfig::_internal_error_handling_overrides() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.error_handling_overrides_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& ScriptConfig::error_handling_overrides() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.script.ScriptConfig.error_handling_overrides)
  return _internal_error_handling_overrides();
}
inline ::google::protobuf::Map<std::string, std::string>* ScriptConfig::_internal_mutable_error_handling_overrides() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.error_handling_overrides_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* ScriptConfig::mutable_error_handling_overrides() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.script.ScriptConfig.error_handling_overrides)
  return _internal_mutable_error_handling_overrides();
}

// int32 max_retries_on_failure = 9;
inline void ScriptConfig::clear_max_retries_on_failure() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_retries_on_failure_ = 0;
}
inline ::int32_t ScriptConfig::max_retries_on_failure() const {
  // @@protoc_insertion_point(field_get:seigr.script.ScriptConfig.max_retries_on_failure)
  return _internal_max_retries_on_failure();
}
inline void ScriptConfig::set_max_retries_on_failure(::int32_t value) {
  _internal_set_max_retries_on_failure(value);
  // @@protoc_insertion_point(field_set:seigr.script.ScriptConfig.max_retries_on_failure)
}
inline ::int32_t ScriptConfig::_internal_max_retries_on_failure() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_retries_on_failure_;
}
inline void ScriptConfig::_internal_set_max_retries_on_failure(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_retries_on_failure_ = value;
}

// bool eco_mode_default = 10;
inline void ScriptConfig::clear_eco_mode_default() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.eco_mode_default_ = false;
}
inline bool ScriptConfig::eco_mode_default() const {
  // @@protoc_insertion_point(field_get:seigr.script.ScriptConfig.eco_mode_default)
  return _internal_eco_mode_default();
}
inline void ScriptConfig::set_eco_mode_default(bool value) {
  _internal_set_eco_mode_default(value);
  // @@protoc_insertion_point(field_set:seigr.script.ScriptConfig.eco_mode_default)
}
inline bool ScriptConfig::_internal_eco_mode_default() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.eco_mode_default_;
}
inline void ScriptConfig::_internal_set_eco_mode_default(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.eco_mode_default_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ScriptExecutionHistory

// string script_id = 1;
inline void ScriptExecutionHistory::clear_script_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.script_id_.ClearToEmpty();
}
inline const std::string& ScriptExecutionHistory::script_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.script.ScriptExecutionHistory.script_id)
  return _internal_script_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ScriptExecutionHistory::set_script_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.script_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.script.ScriptExecutionHistory.script_id)
}
inline std::string* ScriptExecutionHistory::mutable_script_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_script_id();
  // @@protoc_insertion_point(field_mutable:seigr.script.ScriptExecutionHistory.script_id)
  return _s;
}
inline const std::string& ScriptExecutionHistory::_internal_script_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.script_id_.Get();
}
inline void ScriptExecutionHistory::_internal_set_script_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.script_id_.Set(value, GetArena());
}
inline std::string* ScriptExecutionHistory::_internal_mutable_script_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.script_id_.Mutable( GetArena());
}
inline std::string* ScriptExecutionHistory::release_script_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.script.ScriptExecutionHistory.script_id)
  return _impl_.script_id_.Release();
}
inline void ScriptExecutionHistory::set_allocated_script_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.script_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.script_id_.IsDefault()) {
    _impl_.script_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.script.ScriptExecutionHistory.script_id)
}

// repeated .seigr.script.ScriptExecutionRecord executions = 2;
inline int ScriptExecutionHistory::_internal_executions_size() const {
  return _internal_executions().size();
}
inline int ScriptExecutionHistory::executions_size() const {
  return _internal_executions_size();
}
inline void ScriptExecutionHistory::clear_executions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.executions_.Clear();
}
inline ::seigr::script::ScriptExecutionRecord* ScriptExecutionHistory::mutable_executions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.script.ScriptExecutionHistory.executions)
  return _internal_mutable_executions()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seigr::script::ScriptExecutionRecord>* ScriptExecutionHistory::mutable_executions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.script.ScriptExecutionHistory.executions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_executions();
}
inline const ::seigr::script::ScriptExecutionRecord& ScriptExecutionHistory::executions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.script.ScriptExecutionHistory.executions)
  return _internal_executions().Get(index);
}
inline ::seigr::script::ScriptExecutionRecord* ScriptExecutionHistory::add_executions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seigr::script::ScriptExecutionRecord* _add = _internal_mutable_executions()->Add();
  // @@protoc_insertion_point(field_add:seigr.script.ScriptExecutionHistory.executions)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seigr::script::ScriptExecutionRecord>& ScriptExecutionHistory::executions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.script.ScriptExecutionHistory.executions)
  return _internal_executions();
}
inline const ::google::protobuf::RepeatedPtrField<::seigr::script::ScriptExecutionRecord>&
ScriptExecutionHistory::_internal_executions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.executions_;
}
inline ::google::protobuf::RepeatedPtrField<::seigr::script::ScriptExecutionRecord>*
ScriptExecutionHistory::_internal_mutable_executions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.executions_;
}

// int32 total_executions = 3;
inline void ScriptExecutionHistory::clear_total_executions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_executions_ = 0;
}
inline ::int32_t ScriptExecutionHistory::total_executions() const {
  // @@protoc_insertion_point(field_get:seigr.script.ScriptExecutionHistory.total_executions)
  return _internal_total_executions();
}
inline void ScriptExecutionHistory::set_total_executions(::int32_t value) {
  _internal_set_total_executions(value);
  // @@protoc_insertion_point(field_set:seigr.script.ScriptExecutionHistory.total_executions)
}
inline ::int32_t ScriptExecutionHistory::_internal_total_executions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_executions_;
}
inline void ScriptExecutionHistory::_internal_set_total_executions(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_executions_ = value;
}

// int32 successful_executions = 4;
inline void ScriptExecutionHistory::clear_successful_executions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.successful_executions_ = 0;
}
inline ::int32_t ScriptExecutionHistory::successful_executions() const {
  // @@protoc_insertion_point(field_get:seigr.script.ScriptExecutionHistory.successful_executions)
  return _internal_successful_executions();
}
inline void ScriptExecutionHistory::set_successful_executions(::int32_t value) {
  _internal_set_successful_executions(value);
  // @@protoc_insertion_point(field_set:seigr.script.ScriptExecutionHistory.successful_executions)
}
inline ::int32_t ScriptExecutionHistory::_internal_successful_executions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.successful_executions_;
}
inline void ScriptExecutionHistory::_internal_set_successful_executions(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.successful_executions_ = value;
}

// int32 failed_executions = 5;
inline void ScriptExecutionHistory::clear_failed_executions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.failed_executions_ = 0;
}
inline ::int32_t ScriptExecutionHistory::failed_executions() const {
  // @@protoc_insertion_point(field_get:seigr.script.ScriptExecutionHistory.failed_executions)
  return _internal_failed_executions();
}
inline void ScriptExecutionHistory::set_failed_executions(::int32_t value) {
  _internal_set_failed_executions(value);
  // @@protoc_insertion_point(field_set:seigr.script.ScriptExecutionHistory.failed_executions)
}
inline ::int32_t ScriptExecutionHistory::_internal_failed_executions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.failed_executions_;
}
inline void ScriptExecutionHistory::_internal_set_failed_executions(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.failed_executions_ = value;
}

// map<string, string> history_metadata = 6;
inline int ScriptExecutionHistory::_internal_history_metadata_size() const {
  return _internal_history_metadata().size();
}
inline int ScriptExecutionHistory::history_metadata_size() const {
  return _internal_history_metadata_size();
}
inline void ScriptExecutionHistory::clear_history_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.history_metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& ScriptExecutionHistory::_internal_history_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.history_metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& ScriptExecutionHistory::history_metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.script.ScriptExecutionHistory.history_metadata)
  return _internal_history_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* ScriptExecutionHistory::_internal_mutable_history_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.history_metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* ScriptExecutionHistory::mutable_history_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.script.ScriptExecutionHistory.history_metadata)
  return _internal_mutable_history_metadata();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ScriptExecutionRecord

// string execution_id = 1;
inline void ScriptExecutionRecord::clear_execution_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.execution_id_.ClearToEmpty();
}
inline const std::string& ScriptExecutionRecord::execution_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.script.ScriptExecutionRecord.execution_id)
  return _internal_execution_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ScriptExecutionRecord::set_execution_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.execution_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.script.ScriptExecutionRecord.execution_id)
}
inline std::string* ScriptExecutionRecord::mutable_execution_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_execution_id();
  // @@protoc_insertion_point(field_mutable:seigr.script.ScriptExecutionRecord.execution_id)
  return _s;
}
inline const std::string& ScriptExecutionRecord::_internal_execution_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.execution_id_.Get();
}
inline void ScriptExecutionRecord::_internal_set_execution_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.execution_id_.Set(value, GetArena());
}
inline std::string* ScriptExecutionRecord::_internal_mutable_execution_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.execution_id_.Mutable( GetArena());
}
inline std::string* ScriptExecutionRecord::release_execution_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.script.ScriptExecutionRecord.execution_id)
  return _impl_.execution_id_.Release();
}
inline void ScriptExecutionRecord::set_allocated_execution_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.execution_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.execution_id_.IsDefault()) {
    _impl_.execution_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.script.ScriptExecutionRecord.execution_id)
}

// string executed_at = 2;
inline void ScriptExecutionRecord::clear_executed_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.executed_at_.ClearToEmpty();
}
inline const std::string& ScriptExecutionRecord::executed_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.script.ScriptExecutionRecord.executed_at)
  return _internal_executed_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ScriptExecutionRecord::set_executed_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.executed_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.script.ScriptExecutionRecord.executed_at)
}
inline std::string* ScriptExecutionRecord::mutable_executed_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_executed_at();
  // @@protoc_insertion_point(field_mutable:seigr.script.ScriptExecutionRecord.executed_at)
  return _s;
}
inline const std::string& ScriptExecutionRecord::_internal_executed_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.executed_at_.Get();
}
inline void ScriptExecutionRecord::_internal_set_executed_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.executed_at_.Set(value, GetArena());
}
inline std::string* ScriptExecutionRecord::_internal_mutable_executed_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.executed_at_.Mutable( GetArena());
}
inline std::string* ScriptExecutionRecord::release_executed_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.script.ScriptExecutionRecord.executed_at)
  return _impl_.executed_at_.Release();
}
inline void ScriptExecutionRecord::set_allocated_executed_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.executed_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.executed_at_.IsDefault()) {
    _impl_.executed_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.script.ScriptExecutionRecord.executed_at)
}

// string finished_at = 3;
inline void ScriptExecutionRecord::clear_finished_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.finished_at_.ClearToEmpty();
}
inline const std::string& ScriptExecutionRecord::finished_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.script.ScriptExecutionRecord.finished_at)
  return _internal_finished_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ScriptExecutionRecord::set_finished_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.finished_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.script.ScriptExecutionRecord.finished_at)
}
inline std::string* ScriptExecutionRecord::mutable_finished_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_finished_at();
  // @@protoc_insertion_point(field_mutable:seigr.script.ScriptExecutionRecord.finished_at)
  return _s;
}
inline const std::string& ScriptExecutionRecord::_internal_finished_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.finished_at_.Get();
}
inline void ScriptExecutionRecord::_internal_set_finished_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.finished_at_.Set(value, GetArena());
}
inline std::string* ScriptExecutionRecord::_internal_mutable_finished_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.finished_at_.Mutable( GetArena());
}
inline std::string* ScriptExecutionRecord::release_finished_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.script.ScriptExecutionRecord.finished_at)
  return _impl_.finished_at_.Release();
}
inline void ScriptExecutionRecord::set_allocated_finished_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.finished_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.finished_at_.IsDefault()) {
    _impl_.finished_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.script.ScriptExecutionRecord.finished_at)
}

// .seigr.pipeline.OperationStatus result_status = 4;
inline void ScriptExecutionRecord::clear_result_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_status_ = 0;
}
inline ::seigr::pipeline::OperationStatus ScriptExecutionRecord::result_status() const {
  // @@protoc_insertion_point(field_get:seigr.script.ScriptExecutionRecord.result_status)
  return _internal_result_status();
}
inline void ScriptExecutionRecord::set_result_status(::seigr::pipeline::OperationStatus value) {
  _internal_set_result_status(value);
  // @@protoc_insertion_point(field_set:seigr.script.ScriptExecutionRecord.result_status)
}
inline ::seigr::pipeline::OperationStatus ScriptExecutionRecord::_internal_result_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::pipeline::OperationStatus>(_impl_.result_status_);
}
inline void ScriptExecutionRecord::_internal_set_result_status(::seigr::pipeline::OperationStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_status_ = value;
}

// map<string, string> execution_details = 5;
inline int ScriptExecutionRecord::_internal_execution_details_size() const {
  return _internal_execution_details().size();
}
inline int ScriptExecutionRecord::execution_details_size() const {
  return _internal_execution_details_size();
}
inline void ScriptExecutionRecord::clear_execution_details() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.execution_details_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& ScriptExecutionRecord::_internal_execution_details() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.execution_details_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& ScriptExecutionRecord::execution_details() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.script.ScriptExecutionRecord.execution_details)
  return _internal_execution_details();
}
inline ::google::protobuf::Map<std::string, std::string>* ScriptExecutionRecord::_internal_mutable_execution_details() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.execution_details_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* ScriptExecutionRecord::mutable_execution_details() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.script.ScriptExecutionRecord.execution_details)
  return _internal_mutable_execution_details();
}

// string execution_summary = 6;
inline void ScriptExecutionRecord::clear_execution_summary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.execution_summary_.ClearToEmpty();
}
inline const std::string& ScriptExecutionRecord::execution_summary() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.script.ScriptExecutionRecord.execution_summary)
  return _internal_execution_summary();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ScriptExecutionRecord::set_execution_summary(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.execution_summary_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.script.ScriptExecutionRecord.execution_summary)
}
inline std::string* ScriptExecutionRecord::mutable_execution_summary() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_execution_summary();
  // @@protoc_insertion_point(field_mutable:seigr.script.ScriptExecutionRecord.execution_summary)
  return _s;
}
inline const std::string& ScriptExecutionRecord::_internal_execution_summary() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.execution_summary_.Get();
}
inline void ScriptExecutionRecord::_internal_set_execution_summary(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.execution_summary_.Set(value, GetArena());
}
inline std::string* ScriptExecutionRecord::_internal_mutable_execution_summary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.execution_summary_.Mutable( GetArena());
}
inline std::string* ScriptExecutionRecord::release_execution_summary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.script.ScriptExecutionRecord.execution_summary)
  return _impl_.execution_summary_.Release();
}
inline void ScriptExecutionRecord::set_allocated_execution_summary(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.execution_summary_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.execution_summary_.IsDefault()) {
    _impl_.execution_summary_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.script.ScriptExecutionRecord.execution_summary)
}

// repeated string alerts = 7;
inline int ScriptExecutionRecord::_internal_alerts_size() const {
  return _internal_alerts().size();
}
inline int ScriptExecutionRecord::alerts_size() const {
  return _internal_alerts_size();
}
inline void ScriptExecutionRecord::clear_alerts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alerts_.Clear();
}
inline std::string* ScriptExecutionRecord::add_alerts() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_alerts()->Add();
  // @@protoc_insertion_point(field_add_mutable:seigr.script.ScriptExecutionRecord.alerts)
  return _s;
}
inline const std::string& ScriptExecutionRecord::alerts(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.script.ScriptExecutionRecord.alerts)
  return _internal_alerts().Get(index);
}
inline std::string* ScriptExecutionRecord::mutable_alerts(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.script.ScriptExecutionRecord.alerts)
  return _internal_mutable_alerts()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void ScriptExecutionRecord::set_alerts(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_alerts()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:seigr.script.ScriptExecutionRecord.alerts)
}
template <typename Arg_, typename... Args_>
inline void ScriptExecutionRecord::add_alerts(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_alerts(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seigr.script.ScriptExecutionRecord.alerts)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ScriptExecutionRecord::alerts() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.script.ScriptExecutionRecord.alerts)
  return _internal_alerts();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ScriptExecutionRecord::mutable_alerts() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.script.ScriptExecutionRecord.alerts)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_alerts();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ScriptExecutionRecord::_internal_alerts() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.alerts_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ScriptExecutionRecord::_internal_mutable_alerts() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.alerts_;
}

// bool eco_execution_flag = 8;
inline void ScriptExecutionRecord::clear_eco_execution_flag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.eco_execution_flag_ = false;
}
inline bool ScriptExecutionRecord::eco_execution_flag() const {
  // @@protoc_insertion_point(field_get:seigr.script.ScriptExecutionRecord.eco_execution_flag)
  return _internal_eco_execution_flag();
}
inline void ScriptExecutionRecord::set_eco_execution_flag(bool value) {
  _internal_set_eco_execution_flag(value);
  // @@protoc_insertion_point(field_set:seigr.script.ScriptExecutionRecord.eco_execution_flag)
}
inline bool ScriptExecutionRecord::_internal_eco_execution_flag() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.eco_execution_flag_;
}
inline void ScriptExecutionRecord::_internal_set_eco_execution_flag(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.eco_execution_flag_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace script
}  // namespace seigr


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::seigr::script::AllowedAction> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::seigr::script::AllowedAction>() {
  return ::seigr::script::AllowedAction_descriptor();
}
template <>
struct is_proto_enum<::seigr::script::LogLevel> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::seigr::script::LogLevel>() {
  return ::seigr::script::LogLevel_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // script_2eproto_2epb_2eh
