// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: pipeline.proto
// Protobuf C++ Version: 5.29.2

#include "pipeline.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace seigr {
namespace pipeline {
              template <typename>
PROTOBUF_CONSTEXPR PipelineStage_ResourceAllocationEntry_DoNotUse::PipelineStage_ResourceAllocationEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : PipelineStage_ResourceAllocationEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : PipelineStage_ResourceAllocationEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct PipelineStage_ResourceAllocationEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PipelineStage_ResourceAllocationEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PipelineStage_ResourceAllocationEntry_DoNotUseDefaultTypeInternal() {}
  union {
    PipelineStage_ResourceAllocationEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PipelineStage_ResourceAllocationEntry_DoNotUseDefaultTypeInternal _PipelineStage_ResourceAllocationEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR PipelineStage_ParametersEntry_DoNotUse::PipelineStage_ParametersEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : PipelineStage_ParametersEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : PipelineStage_ParametersEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct PipelineStage_ParametersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PipelineStage_ParametersEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PipelineStage_ParametersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    PipelineStage_ParametersEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PipelineStage_ParametersEntry_DoNotUseDefaultTypeInternal _PipelineStage_ParametersEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR PipelineStage_ExecutionContextEntry_DoNotUse::PipelineStage_ExecutionContextEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : PipelineStage_ExecutionContextEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : PipelineStage_ExecutionContextEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct PipelineStage_ExecutionContextEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PipelineStage_ExecutionContextEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PipelineStage_ExecutionContextEntry_DoNotUseDefaultTypeInternal() {}
  union {
    PipelineStage_ExecutionContextEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PipelineStage_ExecutionContextEntry_DoNotUseDefaultTypeInternal _PipelineStage_ExecutionContextEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR PipelineMonitoring_MonitoringMetadataEntry_DoNotUse::PipelineMonitoring_MonitoringMetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : PipelineMonitoring_MonitoringMetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : PipelineMonitoring_MonitoringMetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct PipelineMonitoring_MonitoringMetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PipelineMonitoring_MonitoringMetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PipelineMonitoring_MonitoringMetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    PipelineMonitoring_MonitoringMetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PipelineMonitoring_MonitoringMetadataEntry_DoNotUseDefaultTypeInternal _PipelineMonitoring_MonitoringMetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR PipelineExecutionRecord_ExecutionMetadataEntry_DoNotUse::PipelineExecutionRecord_ExecutionMetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : PipelineExecutionRecord_ExecutionMetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : PipelineExecutionRecord_ExecutionMetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct PipelineExecutionRecord_ExecutionMetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PipelineExecutionRecord_ExecutionMetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PipelineExecutionRecord_ExecutionMetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    PipelineExecutionRecord_ExecutionMetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PipelineExecutionRecord_ExecutionMetadataEntry_DoNotUseDefaultTypeInternal _PipelineExecutionRecord_ExecutionMetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR PipelineConfig_ConfigMetadataEntry_DoNotUse::PipelineConfig_ConfigMetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : PipelineConfig_ConfigMetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : PipelineConfig_ConfigMetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct PipelineConfig_ConfigMetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PipelineConfig_ConfigMetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PipelineConfig_ConfigMetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    PipelineConfig_ConfigMetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PipelineConfig_ConfigMetadataEntry_DoNotUseDefaultTypeInternal _PipelineConfig_ConfigMetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR PipelineAnalytics_StageFailureCountsEntry_DoNotUse::PipelineAnalytics_StageFailureCountsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : PipelineAnalytics_StageFailureCountsEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : PipelineAnalytics_StageFailureCountsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct PipelineAnalytics_StageFailureCountsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PipelineAnalytics_StageFailureCountsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PipelineAnalytics_StageFailureCountsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    PipelineAnalytics_StageFailureCountsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PipelineAnalytics_StageFailureCountsEntry_DoNotUseDefaultTypeInternal _PipelineAnalytics_StageFailureCountsEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR PipelineAnalytics_FailurePatternsEntry_DoNotUse::PipelineAnalytics_FailurePatternsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : PipelineAnalytics_FailurePatternsEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : PipelineAnalytics_FailurePatternsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct PipelineAnalytics_FailurePatternsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PipelineAnalytics_FailurePatternsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PipelineAnalytics_FailurePatternsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    PipelineAnalytics_FailurePatternsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PipelineAnalytics_FailurePatternsEntry_DoNotUseDefaultTypeInternal _PipelineAnalytics_FailurePatternsEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR Pipeline_MetadataEntry_DoNotUse::Pipeline_MetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : Pipeline_MetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : Pipeline_MetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct Pipeline_MetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Pipeline_MetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Pipeline_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Pipeline_MetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Pipeline_MetadataEntry_DoNotUseDefaultTypeInternal _Pipeline_MetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR OperationLog_MetadataEntry_DoNotUse::OperationLog_MetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : OperationLog_MetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : OperationLog_MetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct OperationLog_MetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OperationLog_MetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OperationLog_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    OperationLog_MetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OperationLog_MetadataEntry_DoNotUseDefaultTypeInternal _OperationLog_MetadataEntry_DoNotUse_default_instance_;

inline constexpr PipelineStage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : dependencies_{},
        conditional_dependencies_{},
        parameters_{},
        execution_context_{},
        resource_allocation_{},
        stage_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        stage_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        operation_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        assigned_hyphen_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        start_time_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        end_time_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        failure_reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        condition_expression_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        adaptive_retry_policy_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        trigger_event_{static_cast< ::seigr::pipeline::TriggerEvent >(0)},
        stage_status_{static_cast< ::seigr::pipeline::PipelineStageStatus >(0)},
        recovery_strategy_{static_cast< ::seigr::pipeline::ErrorRecoveryStrategy >(0)},
        retry_attempts_{0},
        memory_usage_bytes_{::int64_t{0}},
        duration_seconds_{0},
        cpu_load_percentage_{0},
        is_checkpoint_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PipelineStage::PipelineStage(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PipelineStageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PipelineStageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PipelineStageDefaultTypeInternal() {}
  union {
    PipelineStage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PipelineStageDefaultTypeInternal _PipelineStage_default_instance_;

inline constexpr PipelineExecutionRecord::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : execution_metadata_{},
        execution_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        started_at_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ended_at_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        failure_summary_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        adaptive_adjustments_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        result_{static_cast< ::seigr::pipeline::OperationStatus >(0)},
        stages_completed_{0},
        stages_failed_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PipelineExecutionRecord::PipelineExecutionRecord(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PipelineExecutionRecordDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PipelineExecutionRecordDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PipelineExecutionRecordDefaultTypeInternal() {}
  union {
    PipelineExecutionRecord _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PipelineExecutionRecordDefaultTypeInternal _PipelineExecutionRecord_default_instance_;

inline constexpr PipelineConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : config_metadata_{},
        global_error_strategy_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        max_concurrent_stages_{0},
        default_retry_limit_{0},
        timeout_seconds_{0},
        enable_error_notifications_{false},
        auto_resume_on_error_{false},
        dynamic_stage_insertion_{false},
        enable_real_time_scaling_{false},
        max_resource_utilization_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PipelineConfig::PipelineConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PipelineConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PipelineConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PipelineConfigDefaultTypeInternal() {}
  union {
    PipelineConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PipelineConfigDefaultTypeInternal _PipelineConfig_default_instance_;

inline constexpr PipelineAnalytics::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : stage_failure_counts_{},
        failure_patterns_{},
        pipeline_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        average_duration_seconds_{0},
        average_success_rate_{0},
        average_adaptive_retries_per_run_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PipelineAnalytics::PipelineAnalytics(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PipelineAnalyticsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PipelineAnalyticsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PipelineAnalyticsDefaultTypeInternal() {}
  union {
    PipelineAnalytics _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PipelineAnalyticsDefaultTypeInternal _PipelineAnalytics_default_instance_;

inline constexpr OperationLog::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : metadata_{},
        log_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        stage_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        operation_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        executed_by_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        error_details_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        resolution_action_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        execution_duration_{0},
        requires_attention_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR OperationLog::OperationLog(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OperationLogDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OperationLogDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OperationLogDefaultTypeInternal() {}
  union {
    OperationLog _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OperationLogDefaultTypeInternal _OperationLog_default_instance_;

inline constexpr PipelineMonitoring::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : stages_{},
        monitoring_metadata_{},
        pipeline_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        current_stage_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        overall_status_{static_cast< ::seigr::pipeline::OperationStatus >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PipelineMonitoring::PipelineMonitoring(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PipelineMonitoringDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PipelineMonitoringDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PipelineMonitoringDefaultTypeInternal() {}
  union {
    PipelineMonitoring _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PipelineMonitoringDefaultTypeInternal _PipelineMonitoring_default_instance_;

inline constexpr PipelineExecutionHistory::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : executions_{},
        pipeline_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        total_runs_{0},
        successful_runs_{0},
        failed_runs_{0},
        adaptive_retries_count_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PipelineExecutionHistory::PipelineExecutionHistory(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PipelineExecutionHistoryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PipelineExecutionHistoryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PipelineExecutionHistoryDefaultTypeInternal() {}
  union {
    PipelineExecutionHistory _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PipelineExecutionHistoryDefaultTypeInternal _PipelineExecutionHistory_default_instance_;

inline constexpr Pipeline::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : stages_{},
        metadata_{},
        pipeline_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        created_by_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        created_at_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        completed_at_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        overall_status_{static_cast< ::seigr::pipeline::OperationStatus >(0)},
        total_stages_{0},
        successful_stages_{0},
        failed_stages_{0},
        adaptive_error_handling_enabled_{false},
        checkpoint_based_rollback_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Pipeline::Pipeline(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PipelineDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PipelineDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PipelineDefaultTypeInternal() {}
  union {
    Pipeline _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PipelineDefaultTypeInternal _Pipeline_default_instance_;
}  // namespace pipeline
}  // namespace seigr
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_pipeline_2eproto[4];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_pipeline_2eproto = nullptr;
const ::uint32_t
    TableStruct_pipeline_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineStage_ParametersEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineStage_ParametersEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineStage_ParametersEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineStage_ParametersEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineStage_ExecutionContextEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineStage_ExecutionContextEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineStage_ExecutionContextEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineStage_ExecutionContextEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineStage_ResourceAllocationEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineStage_ResourceAllocationEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineStage_ResourceAllocationEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineStage_ResourceAllocationEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineStage, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineStage, _impl_.stage_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineStage, _impl_.stage_name_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineStage, _impl_.operation_type_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineStage, _impl_.dependencies_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineStage, _impl_.conditional_dependencies_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineStage, _impl_.trigger_event_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineStage, _impl_.parameters_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineStage, _impl_.stage_status_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineStage, _impl_.assigned_hyphen_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineStage, _impl_.start_time_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineStage, _impl_.end_time_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineStage, _impl_.failure_reason_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineStage, _impl_.recovery_strategy_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineStage, _impl_.retry_attempts_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineStage, _impl_.execution_context_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineStage, _impl_.condition_expression_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineStage, _impl_.duration_seconds_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineStage, _impl_.memory_usage_bytes_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineStage, _impl_.cpu_load_percentage_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineStage, _impl_.adaptive_retry_policy_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineStage, _impl_.is_checkpoint_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineStage, _impl_.resource_allocation_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::Pipeline_MetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::Pipeline_MetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::Pipeline_MetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::Pipeline_MetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::Pipeline, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::Pipeline, _impl_.pipeline_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::Pipeline, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::Pipeline, _impl_.stages_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::Pipeline, _impl_.overall_status_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::Pipeline, _impl_.created_by_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::Pipeline, _impl_.created_at_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::Pipeline, _impl_.completed_at_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::Pipeline, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::Pipeline, _impl_.total_stages_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::Pipeline, _impl_.successful_stages_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::Pipeline, _impl_.failed_stages_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::Pipeline, _impl_.adaptive_error_handling_enabled_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::Pipeline, _impl_.checkpoint_based_rollback_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineConfig_ConfigMetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineConfig_ConfigMetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineConfig_ConfigMetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineConfig_ConfigMetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineConfig, _impl_.max_concurrent_stages_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineConfig, _impl_.default_retry_limit_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineConfig, _impl_.timeout_seconds_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineConfig, _impl_.enable_error_notifications_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineConfig, _impl_.config_metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineConfig, _impl_.global_error_strategy_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineConfig, _impl_.auto_resume_on_error_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineConfig, _impl_.dynamic_stage_insertion_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineConfig, _impl_.max_resource_utilization_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineConfig, _impl_.enable_real_time_scaling_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineExecutionHistory, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineExecutionHistory, _impl_.pipeline_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineExecutionHistory, _impl_.executions_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineExecutionHistory, _impl_.total_runs_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineExecutionHistory, _impl_.successful_runs_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineExecutionHistory, _impl_.failed_runs_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineExecutionHistory, _impl_.adaptive_retries_count_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineExecutionRecord_ExecutionMetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineExecutionRecord_ExecutionMetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineExecutionRecord_ExecutionMetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineExecutionRecord_ExecutionMetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineExecutionRecord, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineExecutionRecord, _impl_.execution_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineExecutionRecord, _impl_.started_at_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineExecutionRecord, _impl_.ended_at_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineExecutionRecord, _impl_.result_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineExecutionRecord, _impl_.execution_metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineExecutionRecord, _impl_.stages_completed_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineExecutionRecord, _impl_.stages_failed_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineExecutionRecord, _impl_.failure_summary_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineExecutionRecord, _impl_.adaptive_adjustments_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineMonitoring_MonitoringMetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineMonitoring_MonitoringMetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineMonitoring_MonitoringMetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineMonitoring_MonitoringMetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineMonitoring, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineMonitoring, _impl_.pipeline_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineMonitoring, _impl_.stages_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineMonitoring, _impl_.current_stage_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineMonitoring, _impl_.overall_status_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineMonitoring, _impl_.monitoring_metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineAnalytics_StageFailureCountsEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineAnalytics_StageFailureCountsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineAnalytics_StageFailureCountsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineAnalytics_StageFailureCountsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineAnalytics_FailurePatternsEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineAnalytics_FailurePatternsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineAnalytics_FailurePatternsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineAnalytics_FailurePatternsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineAnalytics, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineAnalytics, _impl_.pipeline_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineAnalytics, _impl_.average_duration_seconds_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineAnalytics, _impl_.average_success_rate_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineAnalytics, _impl_.stage_failure_counts_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineAnalytics, _impl_.average_adaptive_retries_per_run_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::PipelineAnalytics, _impl_.failure_patterns_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::OperationLog_MetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::OperationLog_MetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::OperationLog_MetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::OperationLog_MetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::OperationLog, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::OperationLog, _impl_.log_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::OperationLog, _impl_.stage_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::OperationLog, _impl_.operation_name_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::OperationLog, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::OperationLog, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::OperationLog, _impl_.executed_by_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::OperationLog, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::OperationLog, _impl_.error_details_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::OperationLog, _impl_.resolution_action_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::OperationLog, _impl_.execution_duration_),
        PROTOBUF_FIELD_OFFSET(::seigr::pipeline::OperationLog, _impl_.requires_attention_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::seigr::pipeline::PipelineStage_ParametersEntry_DoNotUse)},
        {12, 22, -1, sizeof(::seigr::pipeline::PipelineStage_ExecutionContextEntry_DoNotUse)},
        {24, 34, -1, sizeof(::seigr::pipeline::PipelineStage_ResourceAllocationEntry_DoNotUse)},
        {36, -1, -1, sizeof(::seigr::pipeline::PipelineStage)},
        {66, 76, -1, sizeof(::seigr::pipeline::Pipeline_MetadataEntry_DoNotUse)},
        {78, -1, -1, sizeof(::seigr::pipeline::Pipeline)},
        {99, 109, -1, sizeof(::seigr::pipeline::PipelineConfig_ConfigMetadataEntry_DoNotUse)},
        {111, -1, -1, sizeof(::seigr::pipeline::PipelineConfig)},
        {129, -1, -1, sizeof(::seigr::pipeline::PipelineExecutionHistory)},
        {143, 153, -1, sizeof(::seigr::pipeline::PipelineExecutionRecord_ExecutionMetadataEntry_DoNotUse)},
        {155, -1, -1, sizeof(::seigr::pipeline::PipelineExecutionRecord)},
        {172, 182, -1, sizeof(::seigr::pipeline::PipelineMonitoring_MonitoringMetadataEntry_DoNotUse)},
        {184, -1, -1, sizeof(::seigr::pipeline::PipelineMonitoring)},
        {197, 207, -1, sizeof(::seigr::pipeline::PipelineAnalytics_StageFailureCountsEntry_DoNotUse)},
        {209, 219, -1, sizeof(::seigr::pipeline::PipelineAnalytics_FailurePatternsEntry_DoNotUse)},
        {221, -1, -1, sizeof(::seigr::pipeline::PipelineAnalytics)},
        {235, 245, -1, sizeof(::seigr::pipeline::OperationLog_MetadataEntry_DoNotUse)},
        {247, -1, -1, sizeof(::seigr::pipeline::OperationLog)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::seigr::pipeline::_PipelineStage_ParametersEntry_DoNotUse_default_instance_._instance,
    &::seigr::pipeline::_PipelineStage_ExecutionContextEntry_DoNotUse_default_instance_._instance,
    &::seigr::pipeline::_PipelineStage_ResourceAllocationEntry_DoNotUse_default_instance_._instance,
    &::seigr::pipeline::_PipelineStage_default_instance_._instance,
    &::seigr::pipeline::_Pipeline_MetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::pipeline::_Pipeline_default_instance_._instance,
    &::seigr::pipeline::_PipelineConfig_ConfigMetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::pipeline::_PipelineConfig_default_instance_._instance,
    &::seigr::pipeline::_PipelineExecutionHistory_default_instance_._instance,
    &::seigr::pipeline::_PipelineExecutionRecord_ExecutionMetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::pipeline::_PipelineExecutionRecord_default_instance_._instance,
    &::seigr::pipeline::_PipelineMonitoring_MonitoringMetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::pipeline::_PipelineMonitoring_default_instance_._instance,
    &::seigr::pipeline::_PipelineAnalytics_StageFailureCountsEntry_DoNotUse_default_instance_._instance,
    &::seigr::pipeline::_PipelineAnalytics_FailurePatternsEntry_DoNotUse_default_instance_._instance,
    &::seigr::pipeline::_PipelineAnalytics_default_instance_._instance,
    &::seigr::pipeline::_OperationLog_MetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::pipeline::_OperationLog_default_instance_._instance,
};
const char descriptor_table_protodef_pipeline_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\016pipeline.proto\022\016seigr.pipeline\"\333\007\n\rPip"
    "elineStage\022\020\n\010stage_id\030\001 \001(\t\022\022\n\nstage_na"
    "me\030\002 \001(\t\022\026\n\016operation_type\030\003 \001(\t\022\024\n\014depe"
    "ndencies\030\004 \003(\t\022 \n\030conditional_dependenci"
    "es\030\005 \003(\t\0223\n\rtrigger_event\030\006 \001(\0162\034.seigr."
    "pipeline.TriggerEvent\022A\n\nparameters\030\007 \003("
    "\0132-.seigr.pipeline.PipelineStage.Paramet"
    "ersEntry\0229\n\014stage_status\030\010 \001(\0162#.seigr.p"
    "ipeline.PipelineStageStatus\022\027\n\017assigned_"
    "hyphen\030\t \001(\t\022\022\n\nstart_time\030\n \001(\t\022\020\n\010end_"
    "time\030\013 \001(\t\022\026\n\016failure_reason\030\014 \001(\t\022@\n\021re"
    "covery_strategy\030\r \001(\0162%.seigr.pipeline.E"
    "rrorRecoveryStrategy\022\026\n\016retry_attempts\030\016"
    " \001(\005\022N\n\021execution_context\030\017 \003(\01323.seigr."
    "pipeline.PipelineStage.ExecutionContextE"
    "ntry\022\034\n\024condition_expression\030\020 \001(\t\022\030\n\020du"
    "ration_seconds\030\021 \001(\005\022\032\n\022memory_usage_byt"
    "es\030\022 \001(\003\022\033\n\023cpu_load_percentage\030\023 \001(\002\022\035\n"
    "\025adaptive_retry_policy\030\024 \001(\t\022\025\n\ris_check"
    "point\030\025 \001(\010\022R\n\023resource_allocation\030\026 \003(\013"
    "25.seigr.pipeline.PipelineStage.Resource"
    "AllocationEntry\0321\n\017ParametersEntry\022\013\n\003ke"
    "y\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\0327\n\025ExecutionC"
    "ontextEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:"
    "\0028\001\0329\n\027ResourceAllocationEntry\022\013\n\003key\030\001 "
    "\001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\322\003\n\010Pipeline\022\023\n\013p"
    "ipeline_id\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022-\n\006stages"
    "\030\003 \003(\0132\035.seigr.pipeline.PipelineStage\0227\n"
    "\016overall_status\030\004 \001(\0162\037.seigr.pipeline.O"
    "perationStatus\022\022\n\ncreated_by\030\005 \001(\t\022\022\n\ncr"
    "eated_at\030\006 \001(\t\022\024\n\014completed_at\030\007 \001(\t\0228\n\010"
    "metadata\030\010 \003(\0132&.seigr.pipeline.Pipeline"
    ".MetadataEntry\022\024\n\014total_stages\030\t \001(\005\022\031\n\021"
    "successful_stages\030\n \001(\005\022\025\n\rfailed_stages"
    "\030\013 \001(\005\022\'\n\037adaptive_error_handling_enable"
    "d\030\014 \001(\010\022!\n\031checkpoint_based_rollback\030\r \001"
    "(\010\032/\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005valu"
    "e\030\002 \001(\t:\0028\001\"\257\003\n\016PipelineConfig\022\035\n\025max_co"
    "ncurrent_stages\030\001 \001(\005\022\033\n\023default_retry_l"
    "imit\030\002 \001(\005\022\027\n\017timeout_seconds\030\003 \001(\005\022\"\n\032e"
    "nable_error_notifications\030\004 \001(\010\022K\n\017confi"
    "g_metadata\030\005 \003(\01322.seigr.pipeline.Pipeli"
    "neConfig.ConfigMetadataEntry\022\035\n\025global_e"
    "rror_strategy\030\006 \001(\t\022\034\n\024auto_resume_on_er"
    "ror\030\007 \001(\010\022\037\n\027dynamic_stage_insertion\030\010 \001"
    "(\010\022 \n\030max_resource_utilization\030\t \001(\005\022 \n\030"
    "enable_real_time_scaling\030\n \001(\010\0325\n\023Config"
    "MetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001("
    "\t:\0028\001\"\316\001\n\030PipelineExecutionHistory\022\023\n\013pi"
    "peline_id\030\001 \001(\t\022;\n\nexecutions\030\002 \003(\0132\'.se"
    "igr.pipeline.PipelineExecutionRecord\022\022\n\n"
    "total_runs\030\003 \001(\005\022\027\n\017successful_runs\030\004 \001("
    "\005\022\023\n\013failed_runs\030\005 \001(\005\022\036\n\026adaptive_retri"
    "es_count\030\006 \001(\005\"\204\003\n\027PipelineExecutionReco"
    "rd\022\024\n\014execution_id\030\001 \001(\t\022\022\n\nstarted_at\030\002"
    " \001(\t\022\020\n\010ended_at\030\003 \001(\t\022/\n\006result\030\004 \001(\0162\037"
    ".seigr.pipeline.OperationStatus\022Z\n\022execu"
    "tion_metadata\030\005 \003(\0132>.seigr.pipeline.Pip"
    "elineExecutionRecord.ExecutionMetadataEn"
    "try\022\030\n\020stages_completed\030\006 \001(\005\022\025\n\rstages_"
    "failed\030\007 \001(\005\022\027\n\017failure_summary\030\010 \001(\t\022\034\n"
    "\024adaptive_adjustments\030\t \001(\t\0328\n\026Execution"
    "MetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001("
    "\t:\0028\001\"\274\002\n\022PipelineMonitoring\022\023\n\013pipeline"
    "_id\030\001 \001(\t\022-\n\006stages\030\002 \003(\0132\035.seigr.pipeli"
    "ne.PipelineStage\022\025\n\rcurrent_stage\030\003 \001(\t\022"
    "7\n\016overall_status\030\004 \001(\0162\037.seigr.pipeline"
    ".OperationStatus\022W\n\023monitoring_metadata\030"
    "\005 \003(\0132:.seigr.pipeline.PipelineMonitorin"
    "g.MonitoringMetadataEntry\0329\n\027MonitoringM"
    "etadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t"
    ":\0028\001\"\260\003\n\021PipelineAnalytics\022\023\n\013pipeline_i"
    "d\030\001 \001(\t\022 \n\030average_duration_seconds\030\002 \001("
    "\002\022\034\n\024average_success_rate\030\003 \001(\002\022W\n\024stage"
    "_failure_counts\030\004 \003(\01329.seigr.pipeline.P"
    "ipelineAnalytics.StageFailureCountsEntry"
    "\022(\n average_adaptive_retries_per_run\030\005 \001"
    "(\002\022P\n\020failure_patterns\030\006 \003(\01326.seigr.pip"
    "eline.PipelineAnalytics.FailurePatternsE"
    "ntry\0329\n\027StageFailureCountsEntry\022\013\n\003key\030\001"
    " \001(\t\022\r\n\005value\030\002 \001(\005:\0028\001\0326\n\024FailurePatter"
    "nsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\""
    "\331\002\n\014OperationLog\022\016\n\006log_id\030\001 \001(\t\022\020\n\010stag"
    "e_id\030\002 \001(\t\022\026\n\016operation_name\030\003 \001(\t\022\021\n\tti"
    "mestamp\030\004 \001(\t\022\016\n\006status\030\005 \001(\t\022\023\n\013execute"
    "d_by\030\006 \001(\t\022<\n\010metadata\030\007 \003(\0132*.seigr.pip"
    "eline.OperationLog.MetadataEntry\022\025\n\rerro"
    "r_details\030\010 \001(\t\022\031\n\021resolution_action\030\t \001"
    "(\t\022\032\n\022execution_duration\030\n \001(\002\022\032\n\022requir"
    "es_attention\030\013 \001(\010\032/\n\rMetadataEntry\022\013\n\003k"
    "ey\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001*\243\001\n\017Operatio"
    "nStatus\022\036\n\032OPERATION_STATUS_UNDEFINED\020\000\022"
    "\025\n\021OPERATION_SUCCESS\020\001\022\025\n\021OPERATION_FAIL"
    "URE\020\002\022\025\n\021OPERATION_PENDING\020\003\022\025\n\021OPERATIO"
    "N_RUNNING\020\004\022\024\n\020OPERATION_PAUSED\020\005*\220\001\n\014Tr"
    "iggerEvent\022\022\n\016ON_DATA_CHANGE\020\000\022\r\n\tON_ACC"
    "ESS\020\001\022\030\n\024ON_INTEGRITY_FAILURE\020\002\022\025\n\021ON_CU"
    "STOM_TRIGGER\020\003\022\025\n\021ON_MANUAL_REQUEST\020\004\022\025\n"
    "\021ON_EXTERNAL_EVENT\020\005*\254\002\n\023PipelineStageSt"
    "atus\022#\n\037PIPELINE_STAGE_STATUS_UNDEFINED\020"
    "\000\022\036\n\032PIPELINE_STAGE_INITIALIZED\020\001\022\032\n\026PIP"
    "ELINE_STAGE_RUNNING\020\002\022\034\n\030PIPELINE_STAGE_"
    "COMPLETED\020\003\022\031\n\025PIPELINE_STAGE_FAILED\020\004\022\032"
    "\n\026PIPELINE_STAGE_SKIPPED\020\005\022\033\n\027PIPELINE_S"
    "TAGE_RETRYING\020\006\022\033\n\027PIPELINE_STAGE_CANCEL"
    "ED\020\007\022%\n!PIPELINE_STAGE_ADAPTIVE_RESOLVIN"
    "G\020\010*\317\001\n\025ErrorRecoveryStrategy\022\026\n\022RECOVER"
    "Y_UNDEFINED\020\000\022\022\n\016RECOVERY_RETRY\020\001\022\021\n\rREC"
    "OVERY_SKIP\020\002\022\037\n\033RECOVERY_TERMINATE_PIPEL"
    "INE\020\003\022\034\n\030RECOVERY_ALERT_AND_PAUSE\020\004\022\033\n\027R"
    "ECOVERY_ADAPTIVE_RETRY\020\005\022\033\n\027RECOVERY_RED"
    "IRECT_STAGE\020\006b\006proto3"
};
static ::absl::once_flag descriptor_table_pipeline_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_pipeline_2eproto = {
    false,
    false,
    4461,
    descriptor_table_protodef_pipeline_2eproto,
    "pipeline.proto",
    &descriptor_table_pipeline_2eproto_once,
    nullptr,
    0,
    18,
    schemas,
    file_default_instances,
    TableStruct_pipeline_2eproto::offsets,
    file_level_enum_descriptors_pipeline_2eproto,
    file_level_service_descriptors_pipeline_2eproto,
};
namespace seigr {
namespace pipeline {
const ::google::protobuf::EnumDescriptor* OperationStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_pipeline_2eproto);
  return file_level_enum_descriptors_pipeline_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t OperationStatus_internal_data_[] = {
    393216u, 0u, };
bool OperationStatus_IsValid(int value) {
  return 0 <= value && value <= 5;
}
const ::google::protobuf::EnumDescriptor* TriggerEvent_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_pipeline_2eproto);
  return file_level_enum_descriptors_pipeline_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t TriggerEvent_internal_data_[] = {
    393216u, 0u, };
bool TriggerEvent_IsValid(int value) {
  return 0 <= value && value <= 5;
}
const ::google::protobuf::EnumDescriptor* PipelineStageStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_pipeline_2eproto);
  return file_level_enum_descriptors_pipeline_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t PipelineStageStatus_internal_data_[] = {
    589824u, 0u, };
bool PipelineStageStatus_IsValid(int value) {
  return 0 <= value && value <= 8;
}
const ::google::protobuf::EnumDescriptor* ErrorRecoveryStrategy_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_pipeline_2eproto);
  return file_level_enum_descriptors_pipeline_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t ErrorRecoveryStrategy_internal_data_[] = {
    458752u, 0u, };
bool ErrorRecoveryStrategy_IsValid(int value) {
  return 0 <= value && value <= 6;
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              PipelineStage_ParametersEntry_DoNotUse::PipelineStage_ParametersEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              PipelineStage_ParametersEntry_DoNotUse::PipelineStage_ParametersEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              PipelineStage_ParametersEntry_DoNotUse::PipelineStage_ParametersEntry_DoNotUse() : SuperType() {}
              PipelineStage_ParametersEntry_DoNotUse::PipelineStage_ParametersEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* PipelineStage_ParametersEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) PipelineStage_ParametersEntry_DoNotUse(arena);
              }
              constexpr auto PipelineStage_ParametersEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PipelineStage_ParametersEntry_DoNotUse),
                                                          alignof(PipelineStage_ParametersEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull PipelineStage_ParametersEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_PipelineStage_ParametersEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &PipelineStage_ParametersEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<PipelineStage_ParametersEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &PipelineStage_ParametersEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &PipelineStage_ParametersEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(PipelineStage_ParametersEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &PipelineStage_ParametersEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_pipeline_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* PipelineStage_ParametersEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 61, 2> PipelineStage_ParametersEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PipelineStage_ParametersEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::pipeline::PipelineStage_ParametersEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineStage_ParametersEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineStage_ParametersEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(PipelineStage_ParametersEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(PipelineStage_ParametersEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\54\3\5\0\0\0\0\0"
    "seigr.pipeline.PipelineStage.ParametersEntry"
    "key"
    "value"
  }},
};

// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              PipelineStage_ExecutionContextEntry_DoNotUse::PipelineStage_ExecutionContextEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              PipelineStage_ExecutionContextEntry_DoNotUse::PipelineStage_ExecutionContextEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              PipelineStage_ExecutionContextEntry_DoNotUse::PipelineStage_ExecutionContextEntry_DoNotUse() : SuperType() {}
              PipelineStage_ExecutionContextEntry_DoNotUse::PipelineStage_ExecutionContextEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* PipelineStage_ExecutionContextEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) PipelineStage_ExecutionContextEntry_DoNotUse(arena);
              }
              constexpr auto PipelineStage_ExecutionContextEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PipelineStage_ExecutionContextEntry_DoNotUse),
                                                          alignof(PipelineStage_ExecutionContextEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull PipelineStage_ExecutionContextEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_PipelineStage_ExecutionContextEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &PipelineStage_ExecutionContextEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<PipelineStage_ExecutionContextEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &PipelineStage_ExecutionContextEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &PipelineStage_ExecutionContextEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(PipelineStage_ExecutionContextEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &PipelineStage_ExecutionContextEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_pipeline_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* PipelineStage_ExecutionContextEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 67, 2> PipelineStage_ExecutionContextEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PipelineStage_ExecutionContextEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::pipeline::PipelineStage_ExecutionContextEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineStage_ExecutionContextEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineStage_ExecutionContextEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(PipelineStage_ExecutionContextEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(PipelineStage_ExecutionContextEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\62\3\5\0\0\0\0\0"
    "seigr.pipeline.PipelineStage.ExecutionContextEntry"
    "key"
    "value"
  }},
};

// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              PipelineStage_ResourceAllocationEntry_DoNotUse::PipelineStage_ResourceAllocationEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              PipelineStage_ResourceAllocationEntry_DoNotUse::PipelineStage_ResourceAllocationEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              PipelineStage_ResourceAllocationEntry_DoNotUse::PipelineStage_ResourceAllocationEntry_DoNotUse() : SuperType() {}
              PipelineStage_ResourceAllocationEntry_DoNotUse::PipelineStage_ResourceAllocationEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* PipelineStage_ResourceAllocationEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) PipelineStage_ResourceAllocationEntry_DoNotUse(arena);
              }
              constexpr auto PipelineStage_ResourceAllocationEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PipelineStage_ResourceAllocationEntry_DoNotUse),
                                                          alignof(PipelineStage_ResourceAllocationEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull PipelineStage_ResourceAllocationEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_PipelineStage_ResourceAllocationEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &PipelineStage_ResourceAllocationEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<PipelineStage_ResourceAllocationEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &PipelineStage_ResourceAllocationEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &PipelineStage_ResourceAllocationEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(PipelineStage_ResourceAllocationEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &PipelineStage_ResourceAllocationEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_pipeline_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* PipelineStage_ResourceAllocationEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 69, 2> PipelineStage_ResourceAllocationEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PipelineStage_ResourceAllocationEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::pipeline::PipelineStage_ResourceAllocationEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineStage_ResourceAllocationEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineStage_ResourceAllocationEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(PipelineStage_ResourceAllocationEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(PipelineStage_ResourceAllocationEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\64\3\5\0\0\0\0\0"
    "seigr.pipeline.PipelineStage.ResourceAllocationEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class PipelineStage::_Internal {
 public:
};

PipelineStage::PipelineStage(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.pipeline.PipelineStage)
}
inline PROTOBUF_NDEBUG_INLINE PipelineStage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::pipeline::PipelineStage& from_msg)
      : dependencies_{visibility, arena, from.dependencies_},
        conditional_dependencies_{visibility, arena, from.conditional_dependencies_},
        parameters_{visibility, arena, from.parameters_},
        execution_context_{visibility, arena, from.execution_context_},
        resource_allocation_{visibility, arena, from.resource_allocation_},
        stage_id_(arena, from.stage_id_),
        stage_name_(arena, from.stage_name_),
        operation_type_(arena, from.operation_type_),
        assigned_hyphen_(arena, from.assigned_hyphen_),
        start_time_(arena, from.start_time_),
        end_time_(arena, from.end_time_),
        failure_reason_(arena, from.failure_reason_),
        condition_expression_(arena, from.condition_expression_),
        adaptive_retry_policy_(arena, from.adaptive_retry_policy_),
        _cached_size_{0} {}

PipelineStage::PipelineStage(
    ::google::protobuf::Arena* arena,
    const PipelineStage& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PipelineStage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, trigger_event_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, trigger_event_),
           offsetof(Impl_, is_checkpoint_) -
               offsetof(Impl_, trigger_event_) +
               sizeof(Impl_::is_checkpoint_));

  // @@protoc_insertion_point(copy_constructor:seigr.pipeline.PipelineStage)
}
inline PROTOBUF_NDEBUG_INLINE PipelineStage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : dependencies_{visibility, arena},
        conditional_dependencies_{visibility, arena},
        parameters_{visibility, arena},
        execution_context_{visibility, arena},
        resource_allocation_{visibility, arena},
        stage_id_(arena),
        stage_name_(arena),
        operation_type_(arena),
        assigned_hyphen_(arena),
        start_time_(arena),
        end_time_(arena),
        failure_reason_(arena),
        condition_expression_(arena),
        adaptive_retry_policy_(arena),
        _cached_size_{0} {}

inline void PipelineStage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, trigger_event_),
           0,
           offsetof(Impl_, is_checkpoint_) -
               offsetof(Impl_, trigger_event_) +
               sizeof(Impl_::is_checkpoint_));
}
PipelineStage::~PipelineStage() {
  // @@protoc_insertion_point(destructor:seigr.pipeline.PipelineStage)
  SharedDtor(*this);
}
inline void PipelineStage::SharedDtor(MessageLite& self) {
  PipelineStage& this_ = static_cast<PipelineStage&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.stage_id_.Destroy();
  this_._impl_.stage_name_.Destroy();
  this_._impl_.operation_type_.Destroy();
  this_._impl_.assigned_hyphen_.Destroy();
  this_._impl_.start_time_.Destroy();
  this_._impl_.end_time_.Destroy();
  this_._impl_.failure_reason_.Destroy();
  this_._impl_.condition_expression_.Destroy();
  this_._impl_.adaptive_retry_policy_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PipelineStage::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PipelineStage(arena);
}
constexpr auto PipelineStage::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(PipelineStage, _impl_.dependencies_) +
          decltype(PipelineStage::_impl_.dependencies_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(PipelineStage, _impl_.conditional_dependencies_) +
          decltype(PipelineStage::_impl_.conditional_dependencies_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(PipelineStage, _impl_.parameters_) +
          decltype(PipelineStage::_impl_.parameters_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(PipelineStage, _impl_.parameters_) +
          decltype(PipelineStage::_impl_.parameters_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(PipelineStage, _impl_.execution_context_) +
          decltype(PipelineStage::_impl_.execution_context_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(PipelineStage, _impl_.execution_context_) +
          decltype(PipelineStage::_impl_.execution_context_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(PipelineStage, _impl_.resource_allocation_) +
          decltype(PipelineStage::_impl_.resource_allocation_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(PipelineStage, _impl_.resource_allocation_) +
          decltype(PipelineStage::_impl_.resource_allocation_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(PipelineStage), alignof(PipelineStage), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&PipelineStage::PlacementNew_,
                                 sizeof(PipelineStage),
                                 alignof(PipelineStage));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PipelineStage::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PipelineStage_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PipelineStage::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PipelineStage>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PipelineStage::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PipelineStage>(), &PipelineStage::ByteSizeLong,
            &PipelineStage::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PipelineStage, _impl_._cached_size_),
        false,
    },
    &PipelineStage::kDescriptorMethods,
    &descriptor_table_pipeline_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PipelineStage::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 22, 3, 255, 2> PipelineStage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    22, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4290772992,  // skipmap
    offsetof(decltype(_table_), field_entries),
    22,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::pipeline::PipelineStage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string stage_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineStage, _impl_.stage_id_)}},
    // string stage_name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineStage, _impl_.stage_name_)}},
    // string operation_type = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineStage, _impl_.operation_type_)}},
    // repeated string dependencies = 4;
    {::_pbi::TcParser::FastUR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineStage, _impl_.dependencies_)}},
    // repeated string conditional_dependencies = 5;
    {::_pbi::TcParser::FastUR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineStage, _impl_.conditional_dependencies_)}},
    // .seigr.pipeline.TriggerEvent trigger_event = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PipelineStage, _impl_.trigger_event_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineStage, _impl_.trigger_event_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .seigr.pipeline.PipelineStageStatus stage_status = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PipelineStage, _impl_.stage_status_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineStage, _impl_.stage_status_)}},
    // string assigned_hyphen = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineStage, _impl_.assigned_hyphen_)}},
    // string start_time = 10;
    {::_pbi::TcParser::FastUS1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineStage, _impl_.start_time_)}},
    // string end_time = 11;
    {::_pbi::TcParser::FastUS1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineStage, _impl_.end_time_)}},
    // string failure_reason = 12;
    {::_pbi::TcParser::FastUS1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineStage, _impl_.failure_reason_)}},
    // .seigr.pipeline.ErrorRecoveryStrategy recovery_strategy = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PipelineStage, _impl_.recovery_strategy_), 63>(),
     {104, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineStage, _impl_.recovery_strategy_)}},
    // int32 retry_attempts = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PipelineStage, _impl_.retry_attempts_), 63>(),
     {112, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineStage, _impl_.retry_attempts_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string condition_expression = 16;
    {::_pbi::TcParser::FastUS2,
     {386, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineStage, _impl_.condition_expression_)}},
    // int32 duration_seconds = 17;
    {::_pbi::TcParser::FastV32S2,
     {392, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineStage, _impl_.duration_seconds_)}},
    // int64 memory_usage_bytes = 18;
    {::_pbi::TcParser::FastV64S2,
     {400, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineStage, _impl_.memory_usage_bytes_)}},
    // float cpu_load_percentage = 19;
    {::_pbi::TcParser::FastF32S2,
     {413, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineStage, _impl_.cpu_load_percentage_)}},
    // string adaptive_retry_policy = 20;
    {::_pbi::TcParser::FastUS2,
     {418, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineStage, _impl_.adaptive_retry_policy_)}},
    // bool is_checkpoint = 21;
    {::_pbi::TcParser::FastV8S2,
     {424, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineStage, _impl_.is_checkpoint_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string stage_id = 1;
    {PROTOBUF_FIELD_OFFSET(PipelineStage, _impl_.stage_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string stage_name = 2;
    {PROTOBUF_FIELD_OFFSET(PipelineStage, _impl_.stage_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string operation_type = 3;
    {PROTOBUF_FIELD_OFFSET(PipelineStage, _impl_.operation_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string dependencies = 4;
    {PROTOBUF_FIELD_OFFSET(PipelineStage, _impl_.dependencies_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string conditional_dependencies = 5;
    {PROTOBUF_FIELD_OFFSET(PipelineStage, _impl_.conditional_dependencies_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // .seigr.pipeline.TriggerEvent trigger_event = 6;
    {PROTOBUF_FIELD_OFFSET(PipelineStage, _impl_.trigger_event_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // map<string, string> parameters = 7;
    {PROTOBUF_FIELD_OFFSET(PipelineStage, _impl_.parameters_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // .seigr.pipeline.PipelineStageStatus stage_status = 8;
    {PROTOBUF_FIELD_OFFSET(PipelineStage, _impl_.stage_status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string assigned_hyphen = 9;
    {PROTOBUF_FIELD_OFFSET(PipelineStage, _impl_.assigned_hyphen_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string start_time = 10;
    {PROTOBUF_FIELD_OFFSET(PipelineStage, _impl_.start_time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string end_time = 11;
    {PROTOBUF_FIELD_OFFSET(PipelineStage, _impl_.end_time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string failure_reason = 12;
    {PROTOBUF_FIELD_OFFSET(PipelineStage, _impl_.failure_reason_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.pipeline.ErrorRecoveryStrategy recovery_strategy = 13;
    {PROTOBUF_FIELD_OFFSET(PipelineStage, _impl_.recovery_strategy_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // int32 retry_attempts = 14;
    {PROTOBUF_FIELD_OFFSET(PipelineStage, _impl_.retry_attempts_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // map<string, string> execution_context = 15;
    {PROTOBUF_FIELD_OFFSET(PipelineStage, _impl_.execution_context_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string condition_expression = 16;
    {PROTOBUF_FIELD_OFFSET(PipelineStage, _impl_.condition_expression_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 duration_seconds = 17;
    {PROTOBUF_FIELD_OFFSET(PipelineStage, _impl_.duration_seconds_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int64 memory_usage_bytes = 18;
    {PROTOBUF_FIELD_OFFSET(PipelineStage, _impl_.memory_usage_bytes_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // float cpu_load_percentage = 19;
    {PROTOBUF_FIELD_OFFSET(PipelineStage, _impl_.cpu_load_percentage_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // string adaptive_retry_policy = 20;
    {PROTOBUF_FIELD_OFFSET(PipelineStage, _impl_.adaptive_retry_policy_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool is_checkpoint = 21;
    {PROTOBUF_FIELD_OFFSET(PipelineStage, _impl_.is_checkpoint_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // map<string, string> resource_allocation = 22;
    {PROTOBUF_FIELD_OFFSET(PipelineStage, _impl_.resource_allocation_), 0, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(PipelineStage()._impl_.parameters_)>(
        1, 0, 0, 9,
        9)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(PipelineStage()._impl_.execution_context_)>(
        1, 0, 0, 9,
        9)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(PipelineStage()._impl_.resource_allocation_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\34\10\12\16\14\30\0\12\0\17\12\10\16\0\0\21\24\0\0\0\25\0\23\0"
    "seigr.pipeline.PipelineStage"
    "stage_id"
    "stage_name"
    "operation_type"
    "dependencies"
    "conditional_dependencies"
    "parameters"
    "assigned_hyphen"
    "start_time"
    "end_time"
    "failure_reason"
    "execution_context"
    "condition_expression"
    "adaptive_retry_policy"
    "resource_allocation"
  }},
};

PROTOBUF_NOINLINE void PipelineStage::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.pipeline.PipelineStage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dependencies_.Clear();
  _impl_.conditional_dependencies_.Clear();
  _impl_.parameters_.Clear();
  _impl_.execution_context_.Clear();
  _impl_.resource_allocation_.Clear();
  _impl_.stage_id_.ClearToEmpty();
  _impl_.stage_name_.ClearToEmpty();
  _impl_.operation_type_.ClearToEmpty();
  _impl_.assigned_hyphen_.ClearToEmpty();
  _impl_.start_time_.ClearToEmpty();
  _impl_.end_time_.ClearToEmpty();
  _impl_.failure_reason_.ClearToEmpty();
  _impl_.condition_expression_.ClearToEmpty();
  _impl_.adaptive_retry_policy_.ClearToEmpty();
  ::memset(&_impl_.trigger_event_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.is_checkpoint_) -
      reinterpret_cast<char*>(&_impl_.trigger_event_)) + sizeof(_impl_.is_checkpoint_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PipelineStage::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PipelineStage& this_ = static_cast<const PipelineStage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PipelineStage::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PipelineStage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.pipeline.PipelineStage)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string stage_id = 1;
          if (!this_._internal_stage_id().empty()) {
            const std::string& _s = this_._internal_stage_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.PipelineStage.stage_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string stage_name = 2;
          if (!this_._internal_stage_name().empty()) {
            const std::string& _s = this_._internal_stage_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.PipelineStage.stage_name");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string operation_type = 3;
          if (!this_._internal_operation_type().empty()) {
            const std::string& _s = this_._internal_operation_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.PipelineStage.operation_type");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // repeated string dependencies = 4;
          for (int i = 0, n = this_._internal_dependencies_size(); i < n; ++i) {
            const auto& s = this_._internal_dependencies().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.PipelineStage.dependencies");
            target = stream->WriteString(4, s, target);
          }

          // repeated string conditional_dependencies = 5;
          for (int i = 0, n = this_._internal_conditional_dependencies_size(); i < n; ++i) {
            const auto& s = this_._internal_conditional_dependencies().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.PipelineStage.conditional_dependencies");
            target = stream->WriteString(5, s, target);
          }

          // .seigr.pipeline.TriggerEvent trigger_event = 6;
          if (this_._internal_trigger_event() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                6, this_._internal_trigger_event(), target);
          }

          // map<string, string> parameters = 7;
          if (!this_._internal_parameters().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_parameters();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.PipelineStage.parameters");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.PipelineStage.parameters");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.PipelineStage.parameters");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.PipelineStage.parameters");
              }
            }
          }

          // .seigr.pipeline.PipelineStageStatus stage_status = 8;
          if (this_._internal_stage_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                8, this_._internal_stage_status(), target);
          }

          // string assigned_hyphen = 9;
          if (!this_._internal_assigned_hyphen().empty()) {
            const std::string& _s = this_._internal_assigned_hyphen();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.PipelineStage.assigned_hyphen");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          // string start_time = 10;
          if (!this_._internal_start_time().empty()) {
            const std::string& _s = this_._internal_start_time();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.PipelineStage.start_time");
            target = stream->WriteStringMaybeAliased(10, _s, target);
          }

          // string end_time = 11;
          if (!this_._internal_end_time().empty()) {
            const std::string& _s = this_._internal_end_time();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.PipelineStage.end_time");
            target = stream->WriteStringMaybeAliased(11, _s, target);
          }

          // string failure_reason = 12;
          if (!this_._internal_failure_reason().empty()) {
            const std::string& _s = this_._internal_failure_reason();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.PipelineStage.failure_reason");
            target = stream->WriteStringMaybeAliased(12, _s, target);
          }

          // .seigr.pipeline.ErrorRecoveryStrategy recovery_strategy = 13;
          if (this_._internal_recovery_strategy() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                13, this_._internal_recovery_strategy(), target);
          }

          // int32 retry_attempts = 14;
          if (this_._internal_retry_attempts() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<14>(
                    stream, this_._internal_retry_attempts(), target);
          }

          // map<string, string> execution_context = 15;
          if (!this_._internal_execution_context().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_execution_context();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    15, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.PipelineStage.execution_context");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.PipelineStage.execution_context");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    15, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.PipelineStage.execution_context");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.PipelineStage.execution_context");
              }
            }
          }

          // string condition_expression = 16;
          if (!this_._internal_condition_expression().empty()) {
            const std::string& _s = this_._internal_condition_expression();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.PipelineStage.condition_expression");
            target = stream->WriteStringMaybeAliased(16, _s, target);
          }

          // int32 duration_seconds = 17;
          if (this_._internal_duration_seconds() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(
                17, this_._internal_duration_seconds(), target);
          }

          // int64 memory_usage_bytes = 18;
          if (this_._internal_memory_usage_bytes() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt64ToArray(
                18, this_._internal_memory_usage_bytes(), target);
          }

          // float cpu_load_percentage = 19;
          if (::absl::bit_cast<::uint32_t>(this_._internal_cpu_load_percentage()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                19, this_._internal_cpu_load_percentage(), target);
          }

          // string adaptive_retry_policy = 20;
          if (!this_._internal_adaptive_retry_policy().empty()) {
            const std::string& _s = this_._internal_adaptive_retry_policy();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.PipelineStage.adaptive_retry_policy");
            target = stream->WriteStringMaybeAliased(20, _s, target);
          }

          // bool is_checkpoint = 21;
          if (this_._internal_is_checkpoint() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                21, this_._internal_is_checkpoint(), target);
          }

          // map<string, string> resource_allocation = 22;
          if (!this_._internal_resource_allocation().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_resource_allocation();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    22, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.PipelineStage.resource_allocation");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.PipelineStage.resource_allocation");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    22, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.PipelineStage.resource_allocation");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.PipelineStage.resource_allocation");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.pipeline.PipelineStage)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PipelineStage::ByteSizeLong(const MessageLite& base) {
          const PipelineStage& this_ = static_cast<const PipelineStage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PipelineStage::ByteSizeLong() const {
          const PipelineStage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.pipeline.PipelineStage)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string dependencies = 4;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_dependencies().size());
              for (int i = 0, n = this_._internal_dependencies().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_dependencies().Get(i));
              }
            }
            // repeated string conditional_dependencies = 5;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_conditional_dependencies().size());
              for (int i = 0, n = this_._internal_conditional_dependencies().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_conditional_dependencies().Get(i));
              }
            }
            // map<string, string> parameters = 7;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_parameters_size());
              for (const auto& entry : this_._internal_parameters()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // map<string, string> execution_context = 15;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_execution_context_size());
              for (const auto& entry : this_._internal_execution_context()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // map<string, string> resource_allocation = 22;
            {
              total_size +=
                  2 * ::google::protobuf::internal::FromIntSize(this_._internal_resource_allocation_size());
              for (const auto& entry : this_._internal_resource_allocation()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string stage_id = 1;
            if (!this_._internal_stage_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_stage_id());
            }
            // string stage_name = 2;
            if (!this_._internal_stage_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_stage_name());
            }
            // string operation_type = 3;
            if (!this_._internal_operation_type().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_operation_type());
            }
            // string assigned_hyphen = 9;
            if (!this_._internal_assigned_hyphen().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_assigned_hyphen());
            }
            // string start_time = 10;
            if (!this_._internal_start_time().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_start_time());
            }
            // string end_time = 11;
            if (!this_._internal_end_time().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_end_time());
            }
            // string failure_reason = 12;
            if (!this_._internal_failure_reason().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_failure_reason());
            }
            // string condition_expression = 16;
            if (!this_._internal_condition_expression().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_condition_expression());
            }
            // string adaptive_retry_policy = 20;
            if (!this_._internal_adaptive_retry_policy().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_adaptive_retry_policy());
            }
            // .seigr.pipeline.TriggerEvent trigger_event = 6;
            if (this_._internal_trigger_event() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_trigger_event());
            }
            // .seigr.pipeline.PipelineStageStatus stage_status = 8;
            if (this_._internal_stage_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_stage_status());
            }
            // .seigr.pipeline.ErrorRecoveryStrategy recovery_strategy = 13;
            if (this_._internal_recovery_strategy() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_recovery_strategy());
            }
            // int32 retry_attempts = 14;
            if (this_._internal_retry_attempts() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_retry_attempts());
            }
            // int64 memory_usage_bytes = 18;
            if (this_._internal_memory_usage_bytes() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                              this_._internal_memory_usage_bytes());
            }
            // int32 duration_seconds = 17;
            if (this_._internal_duration_seconds() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                              this_._internal_duration_seconds());
            }
            // float cpu_load_percentage = 19;
            if (::absl::bit_cast<::uint32_t>(this_._internal_cpu_load_percentage()) != 0) {
              total_size += 6;
            }
            // bool is_checkpoint = 21;
            if (this_._internal_is_checkpoint() != 0) {
              total_size += 3;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PipelineStage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PipelineStage*>(&to_msg);
  auto& from = static_cast<const PipelineStage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.pipeline.PipelineStage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_dependencies()->MergeFrom(from._internal_dependencies());
  _this->_internal_mutable_conditional_dependencies()->MergeFrom(from._internal_conditional_dependencies());
  _this->_impl_.parameters_.MergeFrom(from._impl_.parameters_);
  _this->_impl_.execution_context_.MergeFrom(from._impl_.execution_context_);
  _this->_impl_.resource_allocation_.MergeFrom(from._impl_.resource_allocation_);
  if (!from._internal_stage_id().empty()) {
    _this->_internal_set_stage_id(from._internal_stage_id());
  }
  if (!from._internal_stage_name().empty()) {
    _this->_internal_set_stage_name(from._internal_stage_name());
  }
  if (!from._internal_operation_type().empty()) {
    _this->_internal_set_operation_type(from._internal_operation_type());
  }
  if (!from._internal_assigned_hyphen().empty()) {
    _this->_internal_set_assigned_hyphen(from._internal_assigned_hyphen());
  }
  if (!from._internal_start_time().empty()) {
    _this->_internal_set_start_time(from._internal_start_time());
  }
  if (!from._internal_end_time().empty()) {
    _this->_internal_set_end_time(from._internal_end_time());
  }
  if (!from._internal_failure_reason().empty()) {
    _this->_internal_set_failure_reason(from._internal_failure_reason());
  }
  if (!from._internal_condition_expression().empty()) {
    _this->_internal_set_condition_expression(from._internal_condition_expression());
  }
  if (!from._internal_adaptive_retry_policy().empty()) {
    _this->_internal_set_adaptive_retry_policy(from._internal_adaptive_retry_policy());
  }
  if (from._internal_trigger_event() != 0) {
    _this->_impl_.trigger_event_ = from._impl_.trigger_event_;
  }
  if (from._internal_stage_status() != 0) {
    _this->_impl_.stage_status_ = from._impl_.stage_status_;
  }
  if (from._internal_recovery_strategy() != 0) {
    _this->_impl_.recovery_strategy_ = from._impl_.recovery_strategy_;
  }
  if (from._internal_retry_attempts() != 0) {
    _this->_impl_.retry_attempts_ = from._impl_.retry_attempts_;
  }
  if (from._internal_memory_usage_bytes() != 0) {
    _this->_impl_.memory_usage_bytes_ = from._impl_.memory_usage_bytes_;
  }
  if (from._internal_duration_seconds() != 0) {
    _this->_impl_.duration_seconds_ = from._impl_.duration_seconds_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_cpu_load_percentage()) != 0) {
    _this->_impl_.cpu_load_percentage_ = from._impl_.cpu_load_percentage_;
  }
  if (from._internal_is_checkpoint() != 0) {
    _this->_impl_.is_checkpoint_ = from._impl_.is_checkpoint_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PipelineStage::CopyFrom(const PipelineStage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.pipeline.PipelineStage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PipelineStage::InternalSwap(PipelineStage* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.dependencies_.InternalSwap(&other->_impl_.dependencies_);
  _impl_.conditional_dependencies_.InternalSwap(&other->_impl_.conditional_dependencies_);
  _impl_.parameters_.InternalSwap(&other->_impl_.parameters_);
  _impl_.execution_context_.InternalSwap(&other->_impl_.execution_context_);
  _impl_.resource_allocation_.InternalSwap(&other->_impl_.resource_allocation_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.stage_id_, &other->_impl_.stage_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.stage_name_, &other->_impl_.stage_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.operation_type_, &other->_impl_.operation_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.assigned_hyphen_, &other->_impl_.assigned_hyphen_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.start_time_, &other->_impl_.start_time_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.end_time_, &other->_impl_.end_time_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.failure_reason_, &other->_impl_.failure_reason_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.condition_expression_, &other->_impl_.condition_expression_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.adaptive_retry_policy_, &other->_impl_.adaptive_retry_policy_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PipelineStage, _impl_.is_checkpoint_)
      + sizeof(PipelineStage::_impl_.is_checkpoint_)
      - PROTOBUF_FIELD_OFFSET(PipelineStage, _impl_.trigger_event_)>(
          reinterpret_cast<char*>(&_impl_.trigger_event_),
          reinterpret_cast<char*>(&other->_impl_.trigger_event_));
}

::google::protobuf::Metadata PipelineStage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              Pipeline_MetadataEntry_DoNotUse::Pipeline_MetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              Pipeline_MetadataEntry_DoNotUse::Pipeline_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              Pipeline_MetadataEntry_DoNotUse::Pipeline_MetadataEntry_DoNotUse() : SuperType() {}
              Pipeline_MetadataEntry_DoNotUse::Pipeline_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* Pipeline_MetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) Pipeline_MetadataEntry_DoNotUse(arena);
              }
              constexpr auto Pipeline_MetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Pipeline_MetadataEntry_DoNotUse),
                                                          alignof(Pipeline_MetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull Pipeline_MetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_Pipeline_MetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &Pipeline_MetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<Pipeline_MetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &Pipeline_MetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &Pipeline_MetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(Pipeline_MetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &Pipeline_MetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_pipeline_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* Pipeline_MetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 54, 2> Pipeline_MetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Pipeline_MetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::pipeline::Pipeline_MetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Pipeline_MetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Pipeline_MetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(Pipeline_MetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(Pipeline_MetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\45\3\5\0\0\0\0\0"
    "seigr.pipeline.Pipeline.MetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class Pipeline::_Internal {
 public:
};

Pipeline::Pipeline(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.pipeline.Pipeline)
}
inline PROTOBUF_NDEBUG_INLINE Pipeline::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::pipeline::Pipeline& from_msg)
      : stages_{visibility, arena, from.stages_},
        metadata_{visibility, arena, from.metadata_},
        pipeline_id_(arena, from.pipeline_id_),
        name_(arena, from.name_),
        created_by_(arena, from.created_by_),
        created_at_(arena, from.created_at_),
        completed_at_(arena, from.completed_at_),
        _cached_size_{0} {}

Pipeline::Pipeline(
    ::google::protobuf::Arena* arena,
    const Pipeline& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Pipeline* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, overall_status_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, overall_status_),
           offsetof(Impl_, checkpoint_based_rollback_) -
               offsetof(Impl_, overall_status_) +
               sizeof(Impl_::checkpoint_based_rollback_));

  // @@protoc_insertion_point(copy_constructor:seigr.pipeline.Pipeline)
}
inline PROTOBUF_NDEBUG_INLINE Pipeline::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : stages_{visibility, arena},
        metadata_{visibility, arena},
        pipeline_id_(arena),
        name_(arena),
        created_by_(arena),
        created_at_(arena),
        completed_at_(arena),
        _cached_size_{0} {}

inline void Pipeline::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, overall_status_),
           0,
           offsetof(Impl_, checkpoint_based_rollback_) -
               offsetof(Impl_, overall_status_) +
               sizeof(Impl_::checkpoint_based_rollback_));
}
Pipeline::~Pipeline() {
  // @@protoc_insertion_point(destructor:seigr.pipeline.Pipeline)
  SharedDtor(*this);
}
inline void Pipeline::SharedDtor(MessageLite& self) {
  Pipeline& this_ = static_cast<Pipeline&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.pipeline_id_.Destroy();
  this_._impl_.name_.Destroy();
  this_._impl_.created_by_.Destroy();
  this_._impl_.created_at_.Destroy();
  this_._impl_.completed_at_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Pipeline::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Pipeline(arena);
}
constexpr auto Pipeline::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Pipeline, _impl_.stages_) +
          decltype(Pipeline::_impl_.stages_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Pipeline, _impl_.metadata_) +
          decltype(Pipeline::_impl_.metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Pipeline, _impl_.metadata_) +
          decltype(Pipeline::_impl_.metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Pipeline), alignof(Pipeline), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Pipeline::PlacementNew_,
                                 sizeof(Pipeline),
                                 alignof(Pipeline));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Pipeline::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Pipeline_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Pipeline::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Pipeline>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Pipeline::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Pipeline>(), &Pipeline::ByteSizeLong,
            &Pipeline::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Pipeline, _impl_._cached_size_),
        false,
    },
    &Pipeline::kDescriptorMethods,
    &descriptor_table_pipeline_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Pipeline::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 13, 2, 95, 2> Pipeline::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    13, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294959104,  // skipmap
    offsetof(decltype(_table_), field_entries),
    13,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::pipeline::Pipeline>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string pipeline_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Pipeline, _impl_.pipeline_id_)}},
    // string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Pipeline, _impl_.name_)}},
    // repeated .seigr.pipeline.PipelineStage stages = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Pipeline, _impl_.stages_)}},
    // .seigr.pipeline.OperationStatus overall_status = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Pipeline, _impl_.overall_status_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Pipeline, _impl_.overall_status_)}},
    // string created_by = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Pipeline, _impl_.created_by_)}},
    // string created_at = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Pipeline, _impl_.created_at_)}},
    // string completed_at = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(Pipeline, _impl_.completed_at_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // int32 total_stages = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Pipeline, _impl_.total_stages_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(Pipeline, _impl_.total_stages_)}},
    // int32 successful_stages = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Pipeline, _impl_.successful_stages_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(Pipeline, _impl_.successful_stages_)}},
    // int32 failed_stages = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Pipeline, _impl_.failed_stages_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(Pipeline, _impl_.failed_stages_)}},
    // bool adaptive_error_handling_enabled = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Pipeline, _impl_.adaptive_error_handling_enabled_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(Pipeline, _impl_.adaptive_error_handling_enabled_)}},
    // bool checkpoint_based_rollback = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Pipeline, _impl_.checkpoint_based_rollback_), 63>(),
     {104, 63, 0, PROTOBUF_FIELD_OFFSET(Pipeline, _impl_.checkpoint_based_rollback_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string pipeline_id = 1;
    {PROTOBUF_FIELD_OFFSET(Pipeline, _impl_.pipeline_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 2;
    {PROTOBUF_FIELD_OFFSET(Pipeline, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .seigr.pipeline.PipelineStage stages = 3;
    {PROTOBUF_FIELD_OFFSET(Pipeline, _impl_.stages_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .seigr.pipeline.OperationStatus overall_status = 4;
    {PROTOBUF_FIELD_OFFSET(Pipeline, _impl_.overall_status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string created_by = 5;
    {PROTOBUF_FIELD_OFFSET(Pipeline, _impl_.created_by_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string created_at = 6;
    {PROTOBUF_FIELD_OFFSET(Pipeline, _impl_.created_at_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string completed_at = 7;
    {PROTOBUF_FIELD_OFFSET(Pipeline, _impl_.completed_at_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> metadata = 8;
    {PROTOBUF_FIELD_OFFSET(Pipeline, _impl_.metadata_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // int32 total_stages = 9;
    {PROTOBUF_FIELD_OFFSET(Pipeline, _impl_.total_stages_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 successful_stages = 10;
    {PROTOBUF_FIELD_OFFSET(Pipeline, _impl_.successful_stages_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 failed_stages = 11;
    {PROTOBUF_FIELD_OFFSET(Pipeline, _impl_.failed_stages_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool adaptive_error_handling_enabled = 12;
    {PROTOBUF_FIELD_OFFSET(Pipeline, _impl_.adaptive_error_handling_enabled_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool checkpoint_based_rollback = 13;
    {PROTOBUF_FIELD_OFFSET(Pipeline, _impl_.checkpoint_based_rollback_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::seigr::pipeline::PipelineStage>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(Pipeline()._impl_.metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\27\13\4\0\0\12\12\14\10\0\0\0\0\0\0\0"
    "seigr.pipeline.Pipeline"
    "pipeline_id"
    "name"
    "created_by"
    "created_at"
    "completed_at"
    "metadata"
  }},
};

PROTOBUF_NOINLINE void Pipeline::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.pipeline.Pipeline)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.stages_.Clear();
  _impl_.metadata_.Clear();
  _impl_.pipeline_id_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.created_by_.ClearToEmpty();
  _impl_.created_at_.ClearToEmpty();
  _impl_.completed_at_.ClearToEmpty();
  ::memset(&_impl_.overall_status_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.checkpoint_based_rollback_) -
      reinterpret_cast<char*>(&_impl_.overall_status_)) + sizeof(_impl_.checkpoint_based_rollback_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Pipeline::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Pipeline& this_ = static_cast<const Pipeline&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Pipeline::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Pipeline& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.pipeline.Pipeline)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string pipeline_id = 1;
          if (!this_._internal_pipeline_id().empty()) {
            const std::string& _s = this_._internal_pipeline_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.Pipeline.pipeline_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string name = 2;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.Pipeline.name");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // repeated .seigr.pipeline.PipelineStage stages = 3;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_stages_size());
               i < n; i++) {
            const auto& repfield = this_._internal_stages().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // .seigr.pipeline.OperationStatus overall_status = 4;
          if (this_._internal_overall_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                4, this_._internal_overall_status(), target);
          }

          // string created_by = 5;
          if (!this_._internal_created_by().empty()) {
            const std::string& _s = this_._internal_created_by();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.Pipeline.created_by");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string created_at = 6;
          if (!this_._internal_created_at().empty()) {
            const std::string& _s = this_._internal_created_at();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.Pipeline.created_at");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // string completed_at = 7;
          if (!this_._internal_completed_at().empty()) {
            const std::string& _s = this_._internal_completed_at();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.Pipeline.completed_at");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // map<string, string> metadata = 8;
          if (!this_._internal_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    8, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.Pipeline.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.Pipeline.metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    8, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.Pipeline.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.Pipeline.metadata");
              }
            }
          }

          // int32 total_stages = 9;
          if (this_._internal_total_stages() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<9>(
                    stream, this_._internal_total_stages(), target);
          }

          // int32 successful_stages = 10;
          if (this_._internal_successful_stages() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<10>(
                    stream, this_._internal_successful_stages(), target);
          }

          // int32 failed_stages = 11;
          if (this_._internal_failed_stages() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<11>(
                    stream, this_._internal_failed_stages(), target);
          }

          // bool adaptive_error_handling_enabled = 12;
          if (this_._internal_adaptive_error_handling_enabled() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                12, this_._internal_adaptive_error_handling_enabled(), target);
          }

          // bool checkpoint_based_rollback = 13;
          if (this_._internal_checkpoint_based_rollback() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                13, this_._internal_checkpoint_based_rollback(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.pipeline.Pipeline)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Pipeline::ByteSizeLong(const MessageLite& base) {
          const Pipeline& this_ = static_cast<const Pipeline&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Pipeline::ByteSizeLong() const {
          const Pipeline& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.pipeline.Pipeline)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .seigr.pipeline.PipelineStage stages = 3;
            {
              total_size += 1UL * this_._internal_stages_size();
              for (const auto& msg : this_._internal_stages()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // map<string, string> metadata = 8;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_metadata_size());
              for (const auto& entry : this_._internal_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string pipeline_id = 1;
            if (!this_._internal_pipeline_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_pipeline_id());
            }
            // string name = 2;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string created_by = 5;
            if (!this_._internal_created_by().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_created_by());
            }
            // string created_at = 6;
            if (!this_._internal_created_at().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_created_at());
            }
            // string completed_at = 7;
            if (!this_._internal_completed_at().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_completed_at());
            }
            // .seigr.pipeline.OperationStatus overall_status = 4;
            if (this_._internal_overall_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_overall_status());
            }
            // int32 total_stages = 9;
            if (this_._internal_total_stages() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_total_stages());
            }
            // int32 successful_stages = 10;
            if (this_._internal_successful_stages() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_successful_stages());
            }
            // int32 failed_stages = 11;
            if (this_._internal_failed_stages() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_failed_stages());
            }
            // bool adaptive_error_handling_enabled = 12;
            if (this_._internal_adaptive_error_handling_enabled() != 0) {
              total_size += 2;
            }
            // bool checkpoint_based_rollback = 13;
            if (this_._internal_checkpoint_based_rollback() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Pipeline::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Pipeline*>(&to_msg);
  auto& from = static_cast<const Pipeline&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.pipeline.Pipeline)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_stages()->MergeFrom(
      from._internal_stages());
  _this->_impl_.metadata_.MergeFrom(from._impl_.metadata_);
  if (!from._internal_pipeline_id().empty()) {
    _this->_internal_set_pipeline_id(from._internal_pipeline_id());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_created_by().empty()) {
    _this->_internal_set_created_by(from._internal_created_by());
  }
  if (!from._internal_created_at().empty()) {
    _this->_internal_set_created_at(from._internal_created_at());
  }
  if (!from._internal_completed_at().empty()) {
    _this->_internal_set_completed_at(from._internal_completed_at());
  }
  if (from._internal_overall_status() != 0) {
    _this->_impl_.overall_status_ = from._impl_.overall_status_;
  }
  if (from._internal_total_stages() != 0) {
    _this->_impl_.total_stages_ = from._impl_.total_stages_;
  }
  if (from._internal_successful_stages() != 0) {
    _this->_impl_.successful_stages_ = from._impl_.successful_stages_;
  }
  if (from._internal_failed_stages() != 0) {
    _this->_impl_.failed_stages_ = from._impl_.failed_stages_;
  }
  if (from._internal_adaptive_error_handling_enabled() != 0) {
    _this->_impl_.adaptive_error_handling_enabled_ = from._impl_.adaptive_error_handling_enabled_;
  }
  if (from._internal_checkpoint_based_rollback() != 0) {
    _this->_impl_.checkpoint_based_rollback_ = from._impl_.checkpoint_based_rollback_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Pipeline::CopyFrom(const Pipeline& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.pipeline.Pipeline)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Pipeline::InternalSwap(Pipeline* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.stages_.InternalSwap(&other->_impl_.stages_);
  _impl_.metadata_.InternalSwap(&other->_impl_.metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.pipeline_id_, &other->_impl_.pipeline_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.created_by_, &other->_impl_.created_by_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.created_at_, &other->_impl_.created_at_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.completed_at_, &other->_impl_.completed_at_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Pipeline, _impl_.checkpoint_based_rollback_)
      + sizeof(Pipeline::_impl_.checkpoint_based_rollback_)
      - PROTOBUF_FIELD_OFFSET(Pipeline, _impl_.overall_status_)>(
          reinterpret_cast<char*>(&_impl_.overall_status_),
          reinterpret_cast<char*>(&other->_impl_.overall_status_));
}

::google::protobuf::Metadata Pipeline::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              PipelineConfig_ConfigMetadataEntry_DoNotUse::PipelineConfig_ConfigMetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              PipelineConfig_ConfigMetadataEntry_DoNotUse::PipelineConfig_ConfigMetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              PipelineConfig_ConfigMetadataEntry_DoNotUse::PipelineConfig_ConfigMetadataEntry_DoNotUse() : SuperType() {}
              PipelineConfig_ConfigMetadataEntry_DoNotUse::PipelineConfig_ConfigMetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* PipelineConfig_ConfigMetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) PipelineConfig_ConfigMetadataEntry_DoNotUse(arena);
              }
              constexpr auto PipelineConfig_ConfigMetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PipelineConfig_ConfigMetadataEntry_DoNotUse),
                                                          alignof(PipelineConfig_ConfigMetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull PipelineConfig_ConfigMetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_PipelineConfig_ConfigMetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &PipelineConfig_ConfigMetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<PipelineConfig_ConfigMetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &PipelineConfig_ConfigMetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &PipelineConfig_ConfigMetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(PipelineConfig_ConfigMetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &PipelineConfig_ConfigMetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_pipeline_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* PipelineConfig_ConfigMetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 66, 2> PipelineConfig_ConfigMetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PipelineConfig_ConfigMetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::pipeline::PipelineConfig_ConfigMetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineConfig_ConfigMetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineConfig_ConfigMetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(PipelineConfig_ConfigMetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(PipelineConfig_ConfigMetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\61\3\5\0\0\0\0\0"
    "seigr.pipeline.PipelineConfig.ConfigMetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class PipelineConfig::_Internal {
 public:
};

PipelineConfig::PipelineConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.pipeline.PipelineConfig)
}
inline PROTOBUF_NDEBUG_INLINE PipelineConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::pipeline::PipelineConfig& from_msg)
      : config_metadata_{visibility, arena, from.config_metadata_},
        global_error_strategy_(arena, from.global_error_strategy_),
        _cached_size_{0} {}

PipelineConfig::PipelineConfig(
    ::google::protobuf::Arena* arena,
    const PipelineConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PipelineConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, max_concurrent_stages_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, max_concurrent_stages_),
           offsetof(Impl_, max_resource_utilization_) -
               offsetof(Impl_, max_concurrent_stages_) +
               sizeof(Impl_::max_resource_utilization_));

  // @@protoc_insertion_point(copy_constructor:seigr.pipeline.PipelineConfig)
}
inline PROTOBUF_NDEBUG_INLINE PipelineConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : config_metadata_{visibility, arena},
        global_error_strategy_(arena),
        _cached_size_{0} {}

inline void PipelineConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, max_concurrent_stages_),
           0,
           offsetof(Impl_, max_resource_utilization_) -
               offsetof(Impl_, max_concurrent_stages_) +
               sizeof(Impl_::max_resource_utilization_));
}
PipelineConfig::~PipelineConfig() {
  // @@protoc_insertion_point(destructor:seigr.pipeline.PipelineConfig)
  SharedDtor(*this);
}
inline void PipelineConfig::SharedDtor(MessageLite& self) {
  PipelineConfig& this_ = static_cast<PipelineConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.global_error_strategy_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PipelineConfig::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PipelineConfig(arena);
}
constexpr auto PipelineConfig::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(PipelineConfig, _impl_.config_metadata_) +
          decltype(PipelineConfig::_impl_.config_metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(PipelineConfig, _impl_.config_metadata_) +
          decltype(PipelineConfig::_impl_.config_metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(PipelineConfig), alignof(PipelineConfig), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&PipelineConfig::PlacementNew_,
                                 sizeof(PipelineConfig),
                                 alignof(PipelineConfig));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PipelineConfig::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PipelineConfig_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PipelineConfig::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PipelineConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PipelineConfig::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PipelineConfig>(), &PipelineConfig::ByteSizeLong,
            &PipelineConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PipelineConfig, _impl_._cached_size_),
        false,
    },
    &PipelineConfig::kDescriptorMethods,
    &descriptor_table_pipeline_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PipelineConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 1, 82, 2> PipelineConfig::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::pipeline::PipelineConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 max_concurrent_stages = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PipelineConfig, _impl_.max_concurrent_stages_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineConfig, _impl_.max_concurrent_stages_)}},
    // int32 default_retry_limit = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PipelineConfig, _impl_.default_retry_limit_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineConfig, _impl_.default_retry_limit_)}},
    // int32 timeout_seconds = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PipelineConfig, _impl_.timeout_seconds_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineConfig, _impl_.timeout_seconds_)}},
    // bool enable_error_notifications = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PipelineConfig, _impl_.enable_error_notifications_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineConfig, _impl_.enable_error_notifications_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string global_error_strategy = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineConfig, _impl_.global_error_strategy_)}},
    // bool auto_resume_on_error = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PipelineConfig, _impl_.auto_resume_on_error_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineConfig, _impl_.auto_resume_on_error_)}},
    // bool dynamic_stage_insertion = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PipelineConfig, _impl_.dynamic_stage_insertion_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineConfig, _impl_.dynamic_stage_insertion_)}},
    // int32 max_resource_utilization = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PipelineConfig, _impl_.max_resource_utilization_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineConfig, _impl_.max_resource_utilization_)}},
    // bool enable_real_time_scaling = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PipelineConfig, _impl_.enable_real_time_scaling_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineConfig, _impl_.enable_real_time_scaling_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 max_concurrent_stages = 1;
    {PROTOBUF_FIELD_OFFSET(PipelineConfig, _impl_.max_concurrent_stages_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 default_retry_limit = 2;
    {PROTOBUF_FIELD_OFFSET(PipelineConfig, _impl_.default_retry_limit_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 timeout_seconds = 3;
    {PROTOBUF_FIELD_OFFSET(PipelineConfig, _impl_.timeout_seconds_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool enable_error_notifications = 4;
    {PROTOBUF_FIELD_OFFSET(PipelineConfig, _impl_.enable_error_notifications_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // map<string, string> config_metadata = 5;
    {PROTOBUF_FIELD_OFFSET(PipelineConfig, _impl_.config_metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string global_error_strategy = 6;
    {PROTOBUF_FIELD_OFFSET(PipelineConfig, _impl_.global_error_strategy_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool auto_resume_on_error = 7;
    {PROTOBUF_FIELD_OFFSET(PipelineConfig, _impl_.auto_resume_on_error_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool dynamic_stage_insertion = 8;
    {PROTOBUF_FIELD_OFFSET(PipelineConfig, _impl_.dynamic_stage_insertion_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int32 max_resource_utilization = 9;
    {PROTOBUF_FIELD_OFFSET(PipelineConfig, _impl_.max_resource_utilization_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool enable_real_time_scaling = 10;
    {PROTOBUF_FIELD_OFFSET(PipelineConfig, _impl_.enable_real_time_scaling_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(PipelineConfig()._impl_.config_metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\35\0\0\0\0\17\25\0\0\0\0\0\0\0\0\0"
    "seigr.pipeline.PipelineConfig"
    "config_metadata"
    "global_error_strategy"
  }},
};

PROTOBUF_NOINLINE void PipelineConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.pipeline.PipelineConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.config_metadata_.Clear();
  _impl_.global_error_strategy_.ClearToEmpty();
  ::memset(&_impl_.max_concurrent_stages_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.max_resource_utilization_) -
      reinterpret_cast<char*>(&_impl_.max_concurrent_stages_)) + sizeof(_impl_.max_resource_utilization_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PipelineConfig::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PipelineConfig& this_ = static_cast<const PipelineConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PipelineConfig::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PipelineConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.pipeline.PipelineConfig)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 max_concurrent_stages = 1;
          if (this_._internal_max_concurrent_stages() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_max_concurrent_stages(), target);
          }

          // int32 default_retry_limit = 2;
          if (this_._internal_default_retry_limit() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_default_retry_limit(), target);
          }

          // int32 timeout_seconds = 3;
          if (this_._internal_timeout_seconds() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_timeout_seconds(), target);
          }

          // bool enable_error_notifications = 4;
          if (this_._internal_enable_error_notifications() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_enable_error_notifications(), target);
          }

          // map<string, string> config_metadata = 5;
          if (!this_._internal_config_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_config_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    5, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.PipelineConfig.config_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.PipelineConfig.config_metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    5, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.PipelineConfig.config_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.PipelineConfig.config_metadata");
              }
            }
          }

          // string global_error_strategy = 6;
          if (!this_._internal_global_error_strategy().empty()) {
            const std::string& _s = this_._internal_global_error_strategy();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.PipelineConfig.global_error_strategy");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // bool auto_resume_on_error = 7;
          if (this_._internal_auto_resume_on_error() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                7, this_._internal_auto_resume_on_error(), target);
          }

          // bool dynamic_stage_insertion = 8;
          if (this_._internal_dynamic_stage_insertion() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                8, this_._internal_dynamic_stage_insertion(), target);
          }

          // int32 max_resource_utilization = 9;
          if (this_._internal_max_resource_utilization() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<9>(
                    stream, this_._internal_max_resource_utilization(), target);
          }

          // bool enable_real_time_scaling = 10;
          if (this_._internal_enable_real_time_scaling() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                10, this_._internal_enable_real_time_scaling(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.pipeline.PipelineConfig)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PipelineConfig::ByteSizeLong(const MessageLite& base) {
          const PipelineConfig& this_ = static_cast<const PipelineConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PipelineConfig::ByteSizeLong() const {
          const PipelineConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.pipeline.PipelineConfig)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> config_metadata = 5;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_config_metadata_size());
              for (const auto& entry : this_._internal_config_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string global_error_strategy = 6;
            if (!this_._internal_global_error_strategy().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_global_error_strategy());
            }
            // int32 max_concurrent_stages = 1;
            if (this_._internal_max_concurrent_stages() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_max_concurrent_stages());
            }
            // int32 default_retry_limit = 2;
            if (this_._internal_default_retry_limit() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_default_retry_limit());
            }
            // int32 timeout_seconds = 3;
            if (this_._internal_timeout_seconds() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_timeout_seconds());
            }
            // bool enable_error_notifications = 4;
            if (this_._internal_enable_error_notifications() != 0) {
              total_size += 2;
            }
            // bool auto_resume_on_error = 7;
            if (this_._internal_auto_resume_on_error() != 0) {
              total_size += 2;
            }
            // bool dynamic_stage_insertion = 8;
            if (this_._internal_dynamic_stage_insertion() != 0) {
              total_size += 2;
            }
            // bool enable_real_time_scaling = 10;
            if (this_._internal_enable_real_time_scaling() != 0) {
              total_size += 2;
            }
            // int32 max_resource_utilization = 9;
            if (this_._internal_max_resource_utilization() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_max_resource_utilization());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PipelineConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PipelineConfig*>(&to_msg);
  auto& from = static_cast<const PipelineConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.pipeline.PipelineConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.config_metadata_.MergeFrom(from._impl_.config_metadata_);
  if (!from._internal_global_error_strategy().empty()) {
    _this->_internal_set_global_error_strategy(from._internal_global_error_strategy());
  }
  if (from._internal_max_concurrent_stages() != 0) {
    _this->_impl_.max_concurrent_stages_ = from._impl_.max_concurrent_stages_;
  }
  if (from._internal_default_retry_limit() != 0) {
    _this->_impl_.default_retry_limit_ = from._impl_.default_retry_limit_;
  }
  if (from._internal_timeout_seconds() != 0) {
    _this->_impl_.timeout_seconds_ = from._impl_.timeout_seconds_;
  }
  if (from._internal_enable_error_notifications() != 0) {
    _this->_impl_.enable_error_notifications_ = from._impl_.enable_error_notifications_;
  }
  if (from._internal_auto_resume_on_error() != 0) {
    _this->_impl_.auto_resume_on_error_ = from._impl_.auto_resume_on_error_;
  }
  if (from._internal_dynamic_stage_insertion() != 0) {
    _this->_impl_.dynamic_stage_insertion_ = from._impl_.dynamic_stage_insertion_;
  }
  if (from._internal_enable_real_time_scaling() != 0) {
    _this->_impl_.enable_real_time_scaling_ = from._impl_.enable_real_time_scaling_;
  }
  if (from._internal_max_resource_utilization() != 0) {
    _this->_impl_.max_resource_utilization_ = from._impl_.max_resource_utilization_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PipelineConfig::CopyFrom(const PipelineConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.pipeline.PipelineConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PipelineConfig::InternalSwap(PipelineConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.config_metadata_.InternalSwap(&other->_impl_.config_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.global_error_strategy_, &other->_impl_.global_error_strategy_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PipelineConfig, _impl_.max_resource_utilization_)
      + sizeof(PipelineConfig::_impl_.max_resource_utilization_)
      - PROTOBUF_FIELD_OFFSET(PipelineConfig, _impl_.max_concurrent_stages_)>(
          reinterpret_cast<char*>(&_impl_.max_concurrent_stages_),
          reinterpret_cast<char*>(&other->_impl_.max_concurrent_stages_));
}

::google::protobuf::Metadata PipelineConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PipelineExecutionHistory::_Internal {
 public:
};

PipelineExecutionHistory::PipelineExecutionHistory(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.pipeline.PipelineExecutionHistory)
}
inline PROTOBUF_NDEBUG_INLINE PipelineExecutionHistory::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::pipeline::PipelineExecutionHistory& from_msg)
      : executions_{visibility, arena, from.executions_},
        pipeline_id_(arena, from.pipeline_id_),
        _cached_size_{0} {}

PipelineExecutionHistory::PipelineExecutionHistory(
    ::google::protobuf::Arena* arena,
    const PipelineExecutionHistory& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PipelineExecutionHistory* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_runs_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, total_runs_),
           offsetof(Impl_, adaptive_retries_count_) -
               offsetof(Impl_, total_runs_) +
               sizeof(Impl_::adaptive_retries_count_));

  // @@protoc_insertion_point(copy_constructor:seigr.pipeline.PipelineExecutionHistory)
}
inline PROTOBUF_NDEBUG_INLINE PipelineExecutionHistory::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : executions_{visibility, arena},
        pipeline_id_(arena),
        _cached_size_{0} {}

inline void PipelineExecutionHistory::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_runs_),
           0,
           offsetof(Impl_, adaptive_retries_count_) -
               offsetof(Impl_, total_runs_) +
               sizeof(Impl_::adaptive_retries_count_));
}
PipelineExecutionHistory::~PipelineExecutionHistory() {
  // @@protoc_insertion_point(destructor:seigr.pipeline.PipelineExecutionHistory)
  SharedDtor(*this);
}
inline void PipelineExecutionHistory::SharedDtor(MessageLite& self) {
  PipelineExecutionHistory& this_ = static_cast<PipelineExecutionHistory&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.pipeline_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PipelineExecutionHistory::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PipelineExecutionHistory(arena);
}
constexpr auto PipelineExecutionHistory::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(PipelineExecutionHistory, _impl_.executions_) +
          decltype(PipelineExecutionHistory::_impl_.executions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(PipelineExecutionHistory), alignof(PipelineExecutionHistory), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&PipelineExecutionHistory::PlacementNew_,
                                 sizeof(PipelineExecutionHistory),
                                 alignof(PipelineExecutionHistory));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PipelineExecutionHistory::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PipelineExecutionHistory_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PipelineExecutionHistory::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PipelineExecutionHistory>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PipelineExecutionHistory::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PipelineExecutionHistory>(), &PipelineExecutionHistory::ByteSizeLong,
            &PipelineExecutionHistory::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PipelineExecutionHistory, _impl_._cached_size_),
        false,
    },
    &PipelineExecutionHistory::kDescriptorMethods,
    &descriptor_table_pipeline_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PipelineExecutionHistory::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 59, 2> PipelineExecutionHistory::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::pipeline::PipelineExecutionHistory>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string pipeline_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineExecutionHistory, _impl_.pipeline_id_)}},
    // repeated .seigr.pipeline.PipelineExecutionRecord executions = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineExecutionHistory, _impl_.executions_)}},
    // int32 total_runs = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PipelineExecutionHistory, _impl_.total_runs_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineExecutionHistory, _impl_.total_runs_)}},
    // int32 successful_runs = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PipelineExecutionHistory, _impl_.successful_runs_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineExecutionHistory, _impl_.successful_runs_)}},
    // int32 failed_runs = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PipelineExecutionHistory, _impl_.failed_runs_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineExecutionHistory, _impl_.failed_runs_)}},
    // int32 adaptive_retries_count = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PipelineExecutionHistory, _impl_.adaptive_retries_count_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineExecutionHistory, _impl_.adaptive_retries_count_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string pipeline_id = 1;
    {PROTOBUF_FIELD_OFFSET(PipelineExecutionHistory, _impl_.pipeline_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .seigr.pipeline.PipelineExecutionRecord executions = 2;
    {PROTOBUF_FIELD_OFFSET(PipelineExecutionHistory, _impl_.executions_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 total_runs = 3;
    {PROTOBUF_FIELD_OFFSET(PipelineExecutionHistory, _impl_.total_runs_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 successful_runs = 4;
    {PROTOBUF_FIELD_OFFSET(PipelineExecutionHistory, _impl_.successful_runs_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 failed_runs = 5;
    {PROTOBUF_FIELD_OFFSET(PipelineExecutionHistory, _impl_.failed_runs_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 adaptive_retries_count = 6;
    {PROTOBUF_FIELD_OFFSET(PipelineExecutionHistory, _impl_.adaptive_retries_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::seigr::pipeline::PipelineExecutionRecord>()},
  }}, {{
    "\47\13\0\0\0\0\0\0"
    "seigr.pipeline.PipelineExecutionHistory"
    "pipeline_id"
  }},
};

PROTOBUF_NOINLINE void PipelineExecutionHistory::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.pipeline.PipelineExecutionHistory)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.executions_.Clear();
  _impl_.pipeline_id_.ClearToEmpty();
  ::memset(&_impl_.total_runs_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.adaptive_retries_count_) -
      reinterpret_cast<char*>(&_impl_.total_runs_)) + sizeof(_impl_.adaptive_retries_count_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PipelineExecutionHistory::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PipelineExecutionHistory& this_ = static_cast<const PipelineExecutionHistory&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PipelineExecutionHistory::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PipelineExecutionHistory& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.pipeline.PipelineExecutionHistory)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string pipeline_id = 1;
          if (!this_._internal_pipeline_id().empty()) {
            const std::string& _s = this_._internal_pipeline_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.PipelineExecutionHistory.pipeline_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated .seigr.pipeline.PipelineExecutionRecord executions = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_executions_size());
               i < n; i++) {
            const auto& repfield = this_._internal_executions().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // int32 total_runs = 3;
          if (this_._internal_total_runs() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_total_runs(), target);
          }

          // int32 successful_runs = 4;
          if (this_._internal_successful_runs() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<4>(
                    stream, this_._internal_successful_runs(), target);
          }

          // int32 failed_runs = 5;
          if (this_._internal_failed_runs() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<5>(
                    stream, this_._internal_failed_runs(), target);
          }

          // int32 adaptive_retries_count = 6;
          if (this_._internal_adaptive_retries_count() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<6>(
                    stream, this_._internal_adaptive_retries_count(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.pipeline.PipelineExecutionHistory)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PipelineExecutionHistory::ByteSizeLong(const MessageLite& base) {
          const PipelineExecutionHistory& this_ = static_cast<const PipelineExecutionHistory&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PipelineExecutionHistory::ByteSizeLong() const {
          const PipelineExecutionHistory& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.pipeline.PipelineExecutionHistory)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .seigr.pipeline.PipelineExecutionRecord executions = 2;
            {
              total_size += 1UL * this_._internal_executions_size();
              for (const auto& msg : this_._internal_executions()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string pipeline_id = 1;
            if (!this_._internal_pipeline_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_pipeline_id());
            }
            // int32 total_runs = 3;
            if (this_._internal_total_runs() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_total_runs());
            }
            // int32 successful_runs = 4;
            if (this_._internal_successful_runs() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_successful_runs());
            }
            // int32 failed_runs = 5;
            if (this_._internal_failed_runs() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_failed_runs());
            }
            // int32 adaptive_retries_count = 6;
            if (this_._internal_adaptive_retries_count() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_adaptive_retries_count());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PipelineExecutionHistory::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PipelineExecutionHistory*>(&to_msg);
  auto& from = static_cast<const PipelineExecutionHistory&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.pipeline.PipelineExecutionHistory)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_executions()->MergeFrom(
      from._internal_executions());
  if (!from._internal_pipeline_id().empty()) {
    _this->_internal_set_pipeline_id(from._internal_pipeline_id());
  }
  if (from._internal_total_runs() != 0) {
    _this->_impl_.total_runs_ = from._impl_.total_runs_;
  }
  if (from._internal_successful_runs() != 0) {
    _this->_impl_.successful_runs_ = from._impl_.successful_runs_;
  }
  if (from._internal_failed_runs() != 0) {
    _this->_impl_.failed_runs_ = from._impl_.failed_runs_;
  }
  if (from._internal_adaptive_retries_count() != 0) {
    _this->_impl_.adaptive_retries_count_ = from._impl_.adaptive_retries_count_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PipelineExecutionHistory::CopyFrom(const PipelineExecutionHistory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.pipeline.PipelineExecutionHistory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PipelineExecutionHistory::InternalSwap(PipelineExecutionHistory* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.executions_.InternalSwap(&other->_impl_.executions_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.pipeline_id_, &other->_impl_.pipeline_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PipelineExecutionHistory, _impl_.adaptive_retries_count_)
      + sizeof(PipelineExecutionHistory::_impl_.adaptive_retries_count_)
      - PROTOBUF_FIELD_OFFSET(PipelineExecutionHistory, _impl_.total_runs_)>(
          reinterpret_cast<char*>(&_impl_.total_runs_),
          reinterpret_cast<char*>(&other->_impl_.total_runs_));
}

::google::protobuf::Metadata PipelineExecutionHistory::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              PipelineExecutionRecord_ExecutionMetadataEntry_DoNotUse::PipelineExecutionRecord_ExecutionMetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              PipelineExecutionRecord_ExecutionMetadataEntry_DoNotUse::PipelineExecutionRecord_ExecutionMetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              PipelineExecutionRecord_ExecutionMetadataEntry_DoNotUse::PipelineExecutionRecord_ExecutionMetadataEntry_DoNotUse() : SuperType() {}
              PipelineExecutionRecord_ExecutionMetadataEntry_DoNotUse::PipelineExecutionRecord_ExecutionMetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* PipelineExecutionRecord_ExecutionMetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) PipelineExecutionRecord_ExecutionMetadataEntry_DoNotUse(arena);
              }
              constexpr auto PipelineExecutionRecord_ExecutionMetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PipelineExecutionRecord_ExecutionMetadataEntry_DoNotUse),
                                                          alignof(PipelineExecutionRecord_ExecutionMetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull PipelineExecutionRecord_ExecutionMetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_PipelineExecutionRecord_ExecutionMetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &PipelineExecutionRecord_ExecutionMetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<PipelineExecutionRecord_ExecutionMetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &PipelineExecutionRecord_ExecutionMetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &PipelineExecutionRecord_ExecutionMetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(PipelineExecutionRecord_ExecutionMetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &PipelineExecutionRecord_ExecutionMetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_pipeline_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* PipelineExecutionRecord_ExecutionMetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 78, 2> PipelineExecutionRecord_ExecutionMetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PipelineExecutionRecord_ExecutionMetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::pipeline::PipelineExecutionRecord_ExecutionMetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineExecutionRecord_ExecutionMetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineExecutionRecord_ExecutionMetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(PipelineExecutionRecord_ExecutionMetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(PipelineExecutionRecord_ExecutionMetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\75\3\5\0\0\0\0\0"
    "seigr.pipeline.PipelineExecutionRecord.ExecutionMetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class PipelineExecutionRecord::_Internal {
 public:
};

PipelineExecutionRecord::PipelineExecutionRecord(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.pipeline.PipelineExecutionRecord)
}
inline PROTOBUF_NDEBUG_INLINE PipelineExecutionRecord::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::pipeline::PipelineExecutionRecord& from_msg)
      : execution_metadata_{visibility, arena, from.execution_metadata_},
        execution_id_(arena, from.execution_id_),
        started_at_(arena, from.started_at_),
        ended_at_(arena, from.ended_at_),
        failure_summary_(arena, from.failure_summary_),
        adaptive_adjustments_(arena, from.adaptive_adjustments_),
        _cached_size_{0} {}

PipelineExecutionRecord::PipelineExecutionRecord(
    ::google::protobuf::Arena* arena,
    const PipelineExecutionRecord& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PipelineExecutionRecord* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, result_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, result_),
           offsetof(Impl_, stages_failed_) -
               offsetof(Impl_, result_) +
               sizeof(Impl_::stages_failed_));

  // @@protoc_insertion_point(copy_constructor:seigr.pipeline.PipelineExecutionRecord)
}
inline PROTOBUF_NDEBUG_INLINE PipelineExecutionRecord::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : execution_metadata_{visibility, arena},
        execution_id_(arena),
        started_at_(arena),
        ended_at_(arena),
        failure_summary_(arena),
        adaptive_adjustments_(arena),
        _cached_size_{0} {}

inline void PipelineExecutionRecord::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, result_),
           0,
           offsetof(Impl_, stages_failed_) -
               offsetof(Impl_, result_) +
               sizeof(Impl_::stages_failed_));
}
PipelineExecutionRecord::~PipelineExecutionRecord() {
  // @@protoc_insertion_point(destructor:seigr.pipeline.PipelineExecutionRecord)
  SharedDtor(*this);
}
inline void PipelineExecutionRecord::SharedDtor(MessageLite& self) {
  PipelineExecutionRecord& this_ = static_cast<PipelineExecutionRecord&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.execution_id_.Destroy();
  this_._impl_.started_at_.Destroy();
  this_._impl_.ended_at_.Destroy();
  this_._impl_.failure_summary_.Destroy();
  this_._impl_.adaptive_adjustments_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PipelineExecutionRecord::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PipelineExecutionRecord(arena);
}
constexpr auto PipelineExecutionRecord::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(PipelineExecutionRecord, _impl_.execution_metadata_) +
          decltype(PipelineExecutionRecord::_impl_.execution_metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(PipelineExecutionRecord, _impl_.execution_metadata_) +
          decltype(PipelineExecutionRecord::_impl_.execution_metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(PipelineExecutionRecord), alignof(PipelineExecutionRecord), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&PipelineExecutionRecord::PlacementNew_,
                                 sizeof(PipelineExecutionRecord),
                                 alignof(PipelineExecutionRecord));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PipelineExecutionRecord::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PipelineExecutionRecord_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PipelineExecutionRecord::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PipelineExecutionRecord>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PipelineExecutionRecord::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PipelineExecutionRecord>(), &PipelineExecutionRecord::ByteSizeLong,
            &PipelineExecutionRecord::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PipelineExecutionRecord, _impl_._cached_size_),
        false,
    },
    &PipelineExecutionRecord::kDescriptorMethods,
    &descriptor_table_pipeline_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PipelineExecutionRecord::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 1, 138, 2> PipelineExecutionRecord::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::pipeline::PipelineExecutionRecord>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string execution_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineExecutionRecord, _impl_.execution_id_)}},
    // string started_at = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineExecutionRecord, _impl_.started_at_)}},
    // string ended_at = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineExecutionRecord, _impl_.ended_at_)}},
    // .seigr.pipeline.OperationStatus result = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PipelineExecutionRecord, _impl_.result_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineExecutionRecord, _impl_.result_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // int32 stages_completed = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PipelineExecutionRecord, _impl_.stages_completed_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineExecutionRecord, _impl_.stages_completed_)}},
    // int32 stages_failed = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PipelineExecutionRecord, _impl_.stages_failed_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineExecutionRecord, _impl_.stages_failed_)}},
    // string failure_summary = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineExecutionRecord, _impl_.failure_summary_)}},
    // string adaptive_adjustments = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineExecutionRecord, _impl_.adaptive_adjustments_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string execution_id = 1;
    {PROTOBUF_FIELD_OFFSET(PipelineExecutionRecord, _impl_.execution_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string started_at = 2;
    {PROTOBUF_FIELD_OFFSET(PipelineExecutionRecord, _impl_.started_at_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string ended_at = 3;
    {PROTOBUF_FIELD_OFFSET(PipelineExecutionRecord, _impl_.ended_at_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.pipeline.OperationStatus result = 4;
    {PROTOBUF_FIELD_OFFSET(PipelineExecutionRecord, _impl_.result_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // map<string, string> execution_metadata = 5;
    {PROTOBUF_FIELD_OFFSET(PipelineExecutionRecord, _impl_.execution_metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // int32 stages_completed = 6;
    {PROTOBUF_FIELD_OFFSET(PipelineExecutionRecord, _impl_.stages_completed_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 stages_failed = 7;
    {PROTOBUF_FIELD_OFFSET(PipelineExecutionRecord, _impl_.stages_failed_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string failure_summary = 8;
    {PROTOBUF_FIELD_OFFSET(PipelineExecutionRecord, _impl_.failure_summary_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string adaptive_adjustments = 9;
    {PROTOBUF_FIELD_OFFSET(PipelineExecutionRecord, _impl_.adaptive_adjustments_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(PipelineExecutionRecord()._impl_.execution_metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\46\14\12\10\0\22\0\0\17\24\0\0\0\0\0\0"
    "seigr.pipeline.PipelineExecutionRecord"
    "execution_id"
    "started_at"
    "ended_at"
    "execution_metadata"
    "failure_summary"
    "adaptive_adjustments"
  }},
};

PROTOBUF_NOINLINE void PipelineExecutionRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.pipeline.PipelineExecutionRecord)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.execution_metadata_.Clear();
  _impl_.execution_id_.ClearToEmpty();
  _impl_.started_at_.ClearToEmpty();
  _impl_.ended_at_.ClearToEmpty();
  _impl_.failure_summary_.ClearToEmpty();
  _impl_.adaptive_adjustments_.ClearToEmpty();
  ::memset(&_impl_.result_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.stages_failed_) -
      reinterpret_cast<char*>(&_impl_.result_)) + sizeof(_impl_.stages_failed_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PipelineExecutionRecord::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PipelineExecutionRecord& this_ = static_cast<const PipelineExecutionRecord&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PipelineExecutionRecord::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PipelineExecutionRecord& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.pipeline.PipelineExecutionRecord)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string execution_id = 1;
          if (!this_._internal_execution_id().empty()) {
            const std::string& _s = this_._internal_execution_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.PipelineExecutionRecord.execution_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string started_at = 2;
          if (!this_._internal_started_at().empty()) {
            const std::string& _s = this_._internal_started_at();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.PipelineExecutionRecord.started_at");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string ended_at = 3;
          if (!this_._internal_ended_at().empty()) {
            const std::string& _s = this_._internal_ended_at();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.PipelineExecutionRecord.ended_at");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // .seigr.pipeline.OperationStatus result = 4;
          if (this_._internal_result() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                4, this_._internal_result(), target);
          }

          // map<string, string> execution_metadata = 5;
          if (!this_._internal_execution_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_execution_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    5, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.PipelineExecutionRecord.execution_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.PipelineExecutionRecord.execution_metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    5, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.PipelineExecutionRecord.execution_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.PipelineExecutionRecord.execution_metadata");
              }
            }
          }

          // int32 stages_completed = 6;
          if (this_._internal_stages_completed() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<6>(
                    stream, this_._internal_stages_completed(), target);
          }

          // int32 stages_failed = 7;
          if (this_._internal_stages_failed() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<7>(
                    stream, this_._internal_stages_failed(), target);
          }

          // string failure_summary = 8;
          if (!this_._internal_failure_summary().empty()) {
            const std::string& _s = this_._internal_failure_summary();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.PipelineExecutionRecord.failure_summary");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          // string adaptive_adjustments = 9;
          if (!this_._internal_adaptive_adjustments().empty()) {
            const std::string& _s = this_._internal_adaptive_adjustments();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.PipelineExecutionRecord.adaptive_adjustments");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.pipeline.PipelineExecutionRecord)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PipelineExecutionRecord::ByteSizeLong(const MessageLite& base) {
          const PipelineExecutionRecord& this_ = static_cast<const PipelineExecutionRecord&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PipelineExecutionRecord::ByteSizeLong() const {
          const PipelineExecutionRecord& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.pipeline.PipelineExecutionRecord)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> execution_metadata = 5;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_execution_metadata_size());
              for (const auto& entry : this_._internal_execution_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string execution_id = 1;
            if (!this_._internal_execution_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_execution_id());
            }
            // string started_at = 2;
            if (!this_._internal_started_at().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_started_at());
            }
            // string ended_at = 3;
            if (!this_._internal_ended_at().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_ended_at());
            }
            // string failure_summary = 8;
            if (!this_._internal_failure_summary().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_failure_summary());
            }
            // string adaptive_adjustments = 9;
            if (!this_._internal_adaptive_adjustments().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_adaptive_adjustments());
            }
            // .seigr.pipeline.OperationStatus result = 4;
            if (this_._internal_result() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_result());
            }
            // int32 stages_completed = 6;
            if (this_._internal_stages_completed() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_stages_completed());
            }
            // int32 stages_failed = 7;
            if (this_._internal_stages_failed() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_stages_failed());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PipelineExecutionRecord::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PipelineExecutionRecord*>(&to_msg);
  auto& from = static_cast<const PipelineExecutionRecord&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.pipeline.PipelineExecutionRecord)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.execution_metadata_.MergeFrom(from._impl_.execution_metadata_);
  if (!from._internal_execution_id().empty()) {
    _this->_internal_set_execution_id(from._internal_execution_id());
  }
  if (!from._internal_started_at().empty()) {
    _this->_internal_set_started_at(from._internal_started_at());
  }
  if (!from._internal_ended_at().empty()) {
    _this->_internal_set_ended_at(from._internal_ended_at());
  }
  if (!from._internal_failure_summary().empty()) {
    _this->_internal_set_failure_summary(from._internal_failure_summary());
  }
  if (!from._internal_adaptive_adjustments().empty()) {
    _this->_internal_set_adaptive_adjustments(from._internal_adaptive_adjustments());
  }
  if (from._internal_result() != 0) {
    _this->_impl_.result_ = from._impl_.result_;
  }
  if (from._internal_stages_completed() != 0) {
    _this->_impl_.stages_completed_ = from._impl_.stages_completed_;
  }
  if (from._internal_stages_failed() != 0) {
    _this->_impl_.stages_failed_ = from._impl_.stages_failed_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PipelineExecutionRecord::CopyFrom(const PipelineExecutionRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.pipeline.PipelineExecutionRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PipelineExecutionRecord::InternalSwap(PipelineExecutionRecord* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.execution_metadata_.InternalSwap(&other->_impl_.execution_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.execution_id_, &other->_impl_.execution_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.started_at_, &other->_impl_.started_at_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ended_at_, &other->_impl_.ended_at_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.failure_summary_, &other->_impl_.failure_summary_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.adaptive_adjustments_, &other->_impl_.adaptive_adjustments_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PipelineExecutionRecord, _impl_.stages_failed_)
      + sizeof(PipelineExecutionRecord::_impl_.stages_failed_)
      - PROTOBUF_FIELD_OFFSET(PipelineExecutionRecord, _impl_.result_)>(
          reinterpret_cast<char*>(&_impl_.result_),
          reinterpret_cast<char*>(&other->_impl_.result_));
}

::google::protobuf::Metadata PipelineExecutionRecord::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              PipelineMonitoring_MonitoringMetadataEntry_DoNotUse::PipelineMonitoring_MonitoringMetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              PipelineMonitoring_MonitoringMetadataEntry_DoNotUse::PipelineMonitoring_MonitoringMetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              PipelineMonitoring_MonitoringMetadataEntry_DoNotUse::PipelineMonitoring_MonitoringMetadataEntry_DoNotUse() : SuperType() {}
              PipelineMonitoring_MonitoringMetadataEntry_DoNotUse::PipelineMonitoring_MonitoringMetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* PipelineMonitoring_MonitoringMetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) PipelineMonitoring_MonitoringMetadataEntry_DoNotUse(arena);
              }
              constexpr auto PipelineMonitoring_MonitoringMetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PipelineMonitoring_MonitoringMetadataEntry_DoNotUse),
                                                          alignof(PipelineMonitoring_MonitoringMetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull PipelineMonitoring_MonitoringMetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_PipelineMonitoring_MonitoringMetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &PipelineMonitoring_MonitoringMetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<PipelineMonitoring_MonitoringMetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &PipelineMonitoring_MonitoringMetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &PipelineMonitoring_MonitoringMetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(PipelineMonitoring_MonitoringMetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &PipelineMonitoring_MonitoringMetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_pipeline_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* PipelineMonitoring_MonitoringMetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 74, 2> PipelineMonitoring_MonitoringMetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PipelineMonitoring_MonitoringMetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::pipeline::PipelineMonitoring_MonitoringMetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineMonitoring_MonitoringMetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineMonitoring_MonitoringMetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(PipelineMonitoring_MonitoringMetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(PipelineMonitoring_MonitoringMetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\71\3\5\0\0\0\0\0"
    "seigr.pipeline.PipelineMonitoring.MonitoringMetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class PipelineMonitoring::_Internal {
 public:
};

PipelineMonitoring::PipelineMonitoring(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.pipeline.PipelineMonitoring)
}
inline PROTOBUF_NDEBUG_INLINE PipelineMonitoring::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::pipeline::PipelineMonitoring& from_msg)
      : stages_{visibility, arena, from.stages_},
        monitoring_metadata_{visibility, arena, from.monitoring_metadata_},
        pipeline_id_(arena, from.pipeline_id_),
        current_stage_(arena, from.current_stage_),
        _cached_size_{0} {}

PipelineMonitoring::PipelineMonitoring(
    ::google::protobuf::Arena* arena,
    const PipelineMonitoring& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PipelineMonitoring* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.overall_status_ = from._impl_.overall_status_;

  // @@protoc_insertion_point(copy_constructor:seigr.pipeline.PipelineMonitoring)
}
inline PROTOBUF_NDEBUG_INLINE PipelineMonitoring::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : stages_{visibility, arena},
        monitoring_metadata_{visibility, arena},
        pipeline_id_(arena),
        current_stage_(arena),
        _cached_size_{0} {}

inline void PipelineMonitoring::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.overall_status_ = {};
}
PipelineMonitoring::~PipelineMonitoring() {
  // @@protoc_insertion_point(destructor:seigr.pipeline.PipelineMonitoring)
  SharedDtor(*this);
}
inline void PipelineMonitoring::SharedDtor(MessageLite& self) {
  PipelineMonitoring& this_ = static_cast<PipelineMonitoring&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.pipeline_id_.Destroy();
  this_._impl_.current_stage_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PipelineMonitoring::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PipelineMonitoring(arena);
}
constexpr auto PipelineMonitoring::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(PipelineMonitoring, _impl_.stages_) +
          decltype(PipelineMonitoring::_impl_.stages_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(PipelineMonitoring, _impl_.monitoring_metadata_) +
          decltype(PipelineMonitoring::_impl_.monitoring_metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(PipelineMonitoring, _impl_.monitoring_metadata_) +
          decltype(PipelineMonitoring::_impl_.monitoring_metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(PipelineMonitoring), alignof(PipelineMonitoring), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&PipelineMonitoring::PlacementNew_,
                                 sizeof(PipelineMonitoring),
                                 alignof(PipelineMonitoring));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PipelineMonitoring::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PipelineMonitoring_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PipelineMonitoring::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PipelineMonitoring>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PipelineMonitoring::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PipelineMonitoring>(), &PipelineMonitoring::ByteSizeLong,
            &PipelineMonitoring::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PipelineMonitoring, _impl_._cached_size_),
        false,
    },
    &PipelineMonitoring::kDescriptorMethods,
    &descriptor_table_pipeline_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PipelineMonitoring::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 5, 2, 85, 2> PipelineMonitoring::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::pipeline::PipelineMonitoring>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .seigr.pipeline.OperationStatus overall_status = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PipelineMonitoring, _impl_.overall_status_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineMonitoring, _impl_.overall_status_)}},
    // string pipeline_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineMonitoring, _impl_.pipeline_id_)}},
    // repeated .seigr.pipeline.PipelineStage stages = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineMonitoring, _impl_.stages_)}},
    // string current_stage = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineMonitoring, _impl_.current_stage_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string pipeline_id = 1;
    {PROTOBUF_FIELD_OFFSET(PipelineMonitoring, _impl_.pipeline_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .seigr.pipeline.PipelineStage stages = 2;
    {PROTOBUF_FIELD_OFFSET(PipelineMonitoring, _impl_.stages_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string current_stage = 3;
    {PROTOBUF_FIELD_OFFSET(PipelineMonitoring, _impl_.current_stage_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.pipeline.OperationStatus overall_status = 4;
    {PROTOBUF_FIELD_OFFSET(PipelineMonitoring, _impl_.overall_status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // map<string, string> monitoring_metadata = 5;
    {PROTOBUF_FIELD_OFFSET(PipelineMonitoring, _impl_.monitoring_metadata_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetTable<::seigr::pipeline::PipelineStage>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(PipelineMonitoring()._impl_.monitoring_metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\41\13\0\15\0\23\0\0"
    "seigr.pipeline.PipelineMonitoring"
    "pipeline_id"
    "current_stage"
    "monitoring_metadata"
  }},
};

PROTOBUF_NOINLINE void PipelineMonitoring::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.pipeline.PipelineMonitoring)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.stages_.Clear();
  _impl_.monitoring_metadata_.Clear();
  _impl_.pipeline_id_.ClearToEmpty();
  _impl_.current_stage_.ClearToEmpty();
  _impl_.overall_status_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PipelineMonitoring::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PipelineMonitoring& this_ = static_cast<const PipelineMonitoring&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PipelineMonitoring::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PipelineMonitoring& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.pipeline.PipelineMonitoring)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string pipeline_id = 1;
          if (!this_._internal_pipeline_id().empty()) {
            const std::string& _s = this_._internal_pipeline_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.PipelineMonitoring.pipeline_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated .seigr.pipeline.PipelineStage stages = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_stages_size());
               i < n; i++) {
            const auto& repfield = this_._internal_stages().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // string current_stage = 3;
          if (!this_._internal_current_stage().empty()) {
            const std::string& _s = this_._internal_current_stage();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.PipelineMonitoring.current_stage");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // .seigr.pipeline.OperationStatus overall_status = 4;
          if (this_._internal_overall_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                4, this_._internal_overall_status(), target);
          }

          // map<string, string> monitoring_metadata = 5;
          if (!this_._internal_monitoring_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_monitoring_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    5, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.PipelineMonitoring.monitoring_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.PipelineMonitoring.monitoring_metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    5, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.PipelineMonitoring.monitoring_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.PipelineMonitoring.monitoring_metadata");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.pipeline.PipelineMonitoring)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PipelineMonitoring::ByteSizeLong(const MessageLite& base) {
          const PipelineMonitoring& this_ = static_cast<const PipelineMonitoring&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PipelineMonitoring::ByteSizeLong() const {
          const PipelineMonitoring& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.pipeline.PipelineMonitoring)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .seigr.pipeline.PipelineStage stages = 2;
            {
              total_size += 1UL * this_._internal_stages_size();
              for (const auto& msg : this_._internal_stages()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // map<string, string> monitoring_metadata = 5;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_monitoring_metadata_size());
              for (const auto& entry : this_._internal_monitoring_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string pipeline_id = 1;
            if (!this_._internal_pipeline_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_pipeline_id());
            }
            // string current_stage = 3;
            if (!this_._internal_current_stage().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_current_stage());
            }
            // .seigr.pipeline.OperationStatus overall_status = 4;
            if (this_._internal_overall_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_overall_status());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PipelineMonitoring::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PipelineMonitoring*>(&to_msg);
  auto& from = static_cast<const PipelineMonitoring&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.pipeline.PipelineMonitoring)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_stages()->MergeFrom(
      from._internal_stages());
  _this->_impl_.monitoring_metadata_.MergeFrom(from._impl_.monitoring_metadata_);
  if (!from._internal_pipeline_id().empty()) {
    _this->_internal_set_pipeline_id(from._internal_pipeline_id());
  }
  if (!from._internal_current_stage().empty()) {
    _this->_internal_set_current_stage(from._internal_current_stage());
  }
  if (from._internal_overall_status() != 0) {
    _this->_impl_.overall_status_ = from._impl_.overall_status_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PipelineMonitoring::CopyFrom(const PipelineMonitoring& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.pipeline.PipelineMonitoring)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PipelineMonitoring::InternalSwap(PipelineMonitoring* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.stages_.InternalSwap(&other->_impl_.stages_);
  _impl_.monitoring_metadata_.InternalSwap(&other->_impl_.monitoring_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.pipeline_id_, &other->_impl_.pipeline_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.current_stage_, &other->_impl_.current_stage_, arena);
  swap(_impl_.overall_status_, other->_impl_.overall_status_);
}

::google::protobuf::Metadata PipelineMonitoring::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              PipelineAnalytics_StageFailureCountsEntry_DoNotUse::PipelineAnalytics_StageFailureCountsEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              PipelineAnalytics_StageFailureCountsEntry_DoNotUse::PipelineAnalytics_StageFailureCountsEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              PipelineAnalytics_StageFailureCountsEntry_DoNotUse::PipelineAnalytics_StageFailureCountsEntry_DoNotUse() : SuperType() {}
              PipelineAnalytics_StageFailureCountsEntry_DoNotUse::PipelineAnalytics_StageFailureCountsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* PipelineAnalytics_StageFailureCountsEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) PipelineAnalytics_StageFailureCountsEntry_DoNotUse(arena);
              }
              constexpr auto PipelineAnalytics_StageFailureCountsEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PipelineAnalytics_StageFailureCountsEntry_DoNotUse),
                                                          alignof(PipelineAnalytics_StageFailureCountsEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull PipelineAnalytics_StageFailureCountsEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_PipelineAnalytics_StageFailureCountsEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &PipelineAnalytics_StageFailureCountsEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<PipelineAnalytics_StageFailureCountsEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &PipelineAnalytics_StageFailureCountsEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &PipelineAnalytics_StageFailureCountsEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(PipelineAnalytics_StageFailureCountsEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &PipelineAnalytics_StageFailureCountsEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_pipeline_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* PipelineAnalytics_StageFailureCountsEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 68, 2> PipelineAnalytics_StageFailureCountsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PipelineAnalytics_StageFailureCountsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::pipeline::PipelineAnalytics_StageFailureCountsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 value = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PipelineAnalytics_StageFailureCountsEntry_DoNotUse, _impl_.value_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineAnalytics_StageFailureCountsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineAnalytics_StageFailureCountsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(PipelineAnalytics_StageFailureCountsEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 value = 2;
    {PROTOBUF_FIELD_OFFSET(PipelineAnalytics_StageFailureCountsEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\70\3\0\0\0\0\0\0"
    "seigr.pipeline.PipelineAnalytics.StageFailureCountsEntry"
    "key"
  }},
};

// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              PipelineAnalytics_FailurePatternsEntry_DoNotUse::PipelineAnalytics_FailurePatternsEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              PipelineAnalytics_FailurePatternsEntry_DoNotUse::PipelineAnalytics_FailurePatternsEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              PipelineAnalytics_FailurePatternsEntry_DoNotUse::PipelineAnalytics_FailurePatternsEntry_DoNotUse() : SuperType() {}
              PipelineAnalytics_FailurePatternsEntry_DoNotUse::PipelineAnalytics_FailurePatternsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* PipelineAnalytics_FailurePatternsEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) PipelineAnalytics_FailurePatternsEntry_DoNotUse(arena);
              }
              constexpr auto PipelineAnalytics_FailurePatternsEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PipelineAnalytics_FailurePatternsEntry_DoNotUse),
                                                          alignof(PipelineAnalytics_FailurePatternsEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull PipelineAnalytics_FailurePatternsEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_PipelineAnalytics_FailurePatternsEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &PipelineAnalytics_FailurePatternsEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<PipelineAnalytics_FailurePatternsEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &PipelineAnalytics_FailurePatternsEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &PipelineAnalytics_FailurePatternsEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(PipelineAnalytics_FailurePatternsEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &PipelineAnalytics_FailurePatternsEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_pipeline_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* PipelineAnalytics_FailurePatternsEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 70, 2> PipelineAnalytics_FailurePatternsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PipelineAnalytics_FailurePatternsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::pipeline::PipelineAnalytics_FailurePatternsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineAnalytics_FailurePatternsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineAnalytics_FailurePatternsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(PipelineAnalytics_FailurePatternsEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(PipelineAnalytics_FailurePatternsEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\65\3\5\0\0\0\0\0"
    "seigr.pipeline.PipelineAnalytics.FailurePatternsEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class PipelineAnalytics::_Internal {
 public:
};

PipelineAnalytics::PipelineAnalytics(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.pipeline.PipelineAnalytics)
}
inline PROTOBUF_NDEBUG_INLINE PipelineAnalytics::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::pipeline::PipelineAnalytics& from_msg)
      : stage_failure_counts_{visibility, arena, from.stage_failure_counts_},
        failure_patterns_{visibility, arena, from.failure_patterns_},
        pipeline_id_(arena, from.pipeline_id_),
        _cached_size_{0} {}

PipelineAnalytics::PipelineAnalytics(
    ::google::protobuf::Arena* arena,
    const PipelineAnalytics& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PipelineAnalytics* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, average_duration_seconds_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, average_duration_seconds_),
           offsetof(Impl_, average_adaptive_retries_per_run_) -
               offsetof(Impl_, average_duration_seconds_) +
               sizeof(Impl_::average_adaptive_retries_per_run_));

  // @@protoc_insertion_point(copy_constructor:seigr.pipeline.PipelineAnalytics)
}
inline PROTOBUF_NDEBUG_INLINE PipelineAnalytics::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : stage_failure_counts_{visibility, arena},
        failure_patterns_{visibility, arena},
        pipeline_id_(arena),
        _cached_size_{0} {}

inline void PipelineAnalytics::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, average_duration_seconds_),
           0,
           offsetof(Impl_, average_adaptive_retries_per_run_) -
               offsetof(Impl_, average_duration_seconds_) +
               sizeof(Impl_::average_adaptive_retries_per_run_));
}
PipelineAnalytics::~PipelineAnalytics() {
  // @@protoc_insertion_point(destructor:seigr.pipeline.PipelineAnalytics)
  SharedDtor(*this);
}
inline void PipelineAnalytics::SharedDtor(MessageLite& self) {
  PipelineAnalytics& this_ = static_cast<PipelineAnalytics&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.pipeline_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PipelineAnalytics::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PipelineAnalytics(arena);
}
constexpr auto PipelineAnalytics::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(PipelineAnalytics, _impl_.stage_failure_counts_) +
          decltype(PipelineAnalytics::_impl_.stage_failure_counts_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(PipelineAnalytics, _impl_.stage_failure_counts_) +
          decltype(PipelineAnalytics::_impl_.stage_failure_counts_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(PipelineAnalytics, _impl_.failure_patterns_) +
          decltype(PipelineAnalytics::_impl_.failure_patterns_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(PipelineAnalytics, _impl_.failure_patterns_) +
          decltype(PipelineAnalytics::_impl_.failure_patterns_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(PipelineAnalytics), alignof(PipelineAnalytics), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&PipelineAnalytics::PlacementNew_,
                                 sizeof(PipelineAnalytics),
                                 alignof(PipelineAnalytics));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PipelineAnalytics::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PipelineAnalytics_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PipelineAnalytics::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PipelineAnalytics>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PipelineAnalytics::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PipelineAnalytics>(), &PipelineAnalytics::ByteSizeLong,
            &PipelineAnalytics::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PipelineAnalytics, _impl_._cached_size_),
        false,
    },
    &PipelineAnalytics::kDescriptorMethods,
    &descriptor_table_pipeline_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PipelineAnalytics::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 2, 88, 2> PipelineAnalytics::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::pipeline::PipelineAnalytics>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string pipeline_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineAnalytics, _impl_.pipeline_id_)}},
    // float average_duration_seconds = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineAnalytics, _impl_.average_duration_seconds_)}},
    // float average_success_rate = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineAnalytics, _impl_.average_success_rate_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // float average_adaptive_retries_per_run = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 63, 0, PROTOBUF_FIELD_OFFSET(PipelineAnalytics, _impl_.average_adaptive_retries_per_run_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string pipeline_id = 1;
    {PROTOBUF_FIELD_OFFSET(PipelineAnalytics, _impl_.pipeline_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // float average_duration_seconds = 2;
    {PROTOBUF_FIELD_OFFSET(PipelineAnalytics, _impl_.average_duration_seconds_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float average_success_rate = 3;
    {PROTOBUF_FIELD_OFFSET(PipelineAnalytics, _impl_.average_success_rate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // map<string, int32> stage_failure_counts = 4;
    {PROTOBUF_FIELD_OFFSET(PipelineAnalytics, _impl_.stage_failure_counts_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // float average_adaptive_retries_per_run = 5;
    {PROTOBUF_FIELD_OFFSET(PipelineAnalytics, _impl_.average_adaptive_retries_per_run_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // map<string, string> failure_patterns = 6;
    {PROTOBUF_FIELD_OFFSET(PipelineAnalytics, _impl_.failure_patterns_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(PipelineAnalytics()._impl_.stage_failure_counts_)>(
        1, 0, 0, 9,
        5)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(PipelineAnalytics()._impl_.failure_patterns_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\40\13\0\0\24\0\20\0"
    "seigr.pipeline.PipelineAnalytics"
    "pipeline_id"
    "stage_failure_counts"
    "failure_patterns"
  }},
};

PROTOBUF_NOINLINE void PipelineAnalytics::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.pipeline.PipelineAnalytics)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.stage_failure_counts_.Clear();
  _impl_.failure_patterns_.Clear();
  _impl_.pipeline_id_.ClearToEmpty();
  ::memset(&_impl_.average_duration_seconds_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.average_adaptive_retries_per_run_) -
      reinterpret_cast<char*>(&_impl_.average_duration_seconds_)) + sizeof(_impl_.average_adaptive_retries_per_run_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PipelineAnalytics::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PipelineAnalytics& this_ = static_cast<const PipelineAnalytics&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PipelineAnalytics::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PipelineAnalytics& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.pipeline.PipelineAnalytics)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string pipeline_id = 1;
          if (!this_._internal_pipeline_id().empty()) {
            const std::string& _s = this_._internal_pipeline_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.PipelineAnalytics.pipeline_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // float average_duration_seconds = 2;
          if (::absl::bit_cast<::uint32_t>(this_._internal_average_duration_seconds()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_average_duration_seconds(), target);
          }

          // float average_success_rate = 3;
          if (::absl::bit_cast<::uint32_t>(this_._internal_average_success_rate()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_average_success_rate(), target);
          }

          // map<string, int32> stage_failure_counts = 4;
          if (!this_._internal_stage_failure_counts().empty()) {
            using MapType = ::google::protobuf::Map<std::string, ::int32_t>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, ::int32_t,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_INT32>;
            const auto& field = this_._internal_stage_failure_counts();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    4, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.PipelineAnalytics.stage_failure_counts");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    4, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.PipelineAnalytics.stage_failure_counts");
              }
            }
          }

          // float average_adaptive_retries_per_run = 5;
          if (::absl::bit_cast<::uint32_t>(this_._internal_average_adaptive_retries_per_run()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                5, this_._internal_average_adaptive_retries_per_run(), target);
          }

          // map<string, string> failure_patterns = 6;
          if (!this_._internal_failure_patterns().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_failure_patterns();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.PipelineAnalytics.failure_patterns");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.PipelineAnalytics.failure_patterns");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.PipelineAnalytics.failure_patterns");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.PipelineAnalytics.failure_patterns");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.pipeline.PipelineAnalytics)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PipelineAnalytics::ByteSizeLong(const MessageLite& base) {
          const PipelineAnalytics& this_ = static_cast<const PipelineAnalytics&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PipelineAnalytics::ByteSizeLong() const {
          const PipelineAnalytics& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.pipeline.PipelineAnalytics)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, int32> stage_failure_counts = 4;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_stage_failure_counts_size());
              for (const auto& entry : this_._internal_stage_failure_counts()) {
                total_size += _pbi::MapEntryFuncs<std::string, ::int32_t,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_INT32>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // map<string, string> failure_patterns = 6;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_failure_patterns_size());
              for (const auto& entry : this_._internal_failure_patterns()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string pipeline_id = 1;
            if (!this_._internal_pipeline_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_pipeline_id());
            }
            // float average_duration_seconds = 2;
            if (::absl::bit_cast<::uint32_t>(this_._internal_average_duration_seconds()) != 0) {
              total_size += 5;
            }
            // float average_success_rate = 3;
            if (::absl::bit_cast<::uint32_t>(this_._internal_average_success_rate()) != 0) {
              total_size += 5;
            }
            // float average_adaptive_retries_per_run = 5;
            if (::absl::bit_cast<::uint32_t>(this_._internal_average_adaptive_retries_per_run()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PipelineAnalytics::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PipelineAnalytics*>(&to_msg);
  auto& from = static_cast<const PipelineAnalytics&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.pipeline.PipelineAnalytics)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.stage_failure_counts_.MergeFrom(from._impl_.stage_failure_counts_);
  _this->_impl_.failure_patterns_.MergeFrom(from._impl_.failure_patterns_);
  if (!from._internal_pipeline_id().empty()) {
    _this->_internal_set_pipeline_id(from._internal_pipeline_id());
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_average_duration_seconds()) != 0) {
    _this->_impl_.average_duration_seconds_ = from._impl_.average_duration_seconds_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_average_success_rate()) != 0) {
    _this->_impl_.average_success_rate_ = from._impl_.average_success_rate_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_average_adaptive_retries_per_run()) != 0) {
    _this->_impl_.average_adaptive_retries_per_run_ = from._impl_.average_adaptive_retries_per_run_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PipelineAnalytics::CopyFrom(const PipelineAnalytics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.pipeline.PipelineAnalytics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PipelineAnalytics::InternalSwap(PipelineAnalytics* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.stage_failure_counts_.InternalSwap(&other->_impl_.stage_failure_counts_);
  _impl_.failure_patterns_.InternalSwap(&other->_impl_.failure_patterns_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.pipeline_id_, &other->_impl_.pipeline_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PipelineAnalytics, _impl_.average_adaptive_retries_per_run_)
      + sizeof(PipelineAnalytics::_impl_.average_adaptive_retries_per_run_)
      - PROTOBUF_FIELD_OFFSET(PipelineAnalytics, _impl_.average_duration_seconds_)>(
          reinterpret_cast<char*>(&_impl_.average_duration_seconds_),
          reinterpret_cast<char*>(&other->_impl_.average_duration_seconds_));
}

::google::protobuf::Metadata PipelineAnalytics::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              OperationLog_MetadataEntry_DoNotUse::OperationLog_MetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              OperationLog_MetadataEntry_DoNotUse::OperationLog_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              OperationLog_MetadataEntry_DoNotUse::OperationLog_MetadataEntry_DoNotUse() : SuperType() {}
              OperationLog_MetadataEntry_DoNotUse::OperationLog_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* OperationLog_MetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) OperationLog_MetadataEntry_DoNotUse(arena);
              }
              constexpr auto OperationLog_MetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(OperationLog_MetadataEntry_DoNotUse),
                                                          alignof(OperationLog_MetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull OperationLog_MetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_OperationLog_MetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &OperationLog_MetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<OperationLog_MetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &OperationLog_MetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &OperationLog_MetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(OperationLog_MetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &OperationLog_MetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_pipeline_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* OperationLog_MetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 58, 2> OperationLog_MetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OperationLog_MetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::pipeline::OperationLog_MetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(OperationLog_MetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(OperationLog_MetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(OperationLog_MetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(OperationLog_MetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\51\3\5\0\0\0\0\0"
    "seigr.pipeline.OperationLog.MetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class OperationLog::_Internal {
 public:
};

OperationLog::OperationLog(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.pipeline.OperationLog)
}
inline PROTOBUF_NDEBUG_INLINE OperationLog::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::pipeline::OperationLog& from_msg)
      : metadata_{visibility, arena, from.metadata_},
        log_id_(arena, from.log_id_),
        stage_id_(arena, from.stage_id_),
        operation_name_(arena, from.operation_name_),
        timestamp_(arena, from.timestamp_),
        status_(arena, from.status_),
        executed_by_(arena, from.executed_by_),
        error_details_(arena, from.error_details_),
        resolution_action_(arena, from.resolution_action_),
        _cached_size_{0} {}

OperationLog::OperationLog(
    ::google::protobuf::Arena* arena,
    const OperationLog& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OperationLog* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, execution_duration_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, execution_duration_),
           offsetof(Impl_, requires_attention_) -
               offsetof(Impl_, execution_duration_) +
               sizeof(Impl_::requires_attention_));

  // @@protoc_insertion_point(copy_constructor:seigr.pipeline.OperationLog)
}
inline PROTOBUF_NDEBUG_INLINE OperationLog::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : metadata_{visibility, arena},
        log_id_(arena),
        stage_id_(arena),
        operation_name_(arena),
        timestamp_(arena),
        status_(arena),
        executed_by_(arena),
        error_details_(arena),
        resolution_action_(arena),
        _cached_size_{0} {}

inline void OperationLog::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, execution_duration_),
           0,
           offsetof(Impl_, requires_attention_) -
               offsetof(Impl_, execution_duration_) +
               sizeof(Impl_::requires_attention_));
}
OperationLog::~OperationLog() {
  // @@protoc_insertion_point(destructor:seigr.pipeline.OperationLog)
  SharedDtor(*this);
}
inline void OperationLog::SharedDtor(MessageLite& self) {
  OperationLog& this_ = static_cast<OperationLog&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.log_id_.Destroy();
  this_._impl_.stage_id_.Destroy();
  this_._impl_.operation_name_.Destroy();
  this_._impl_.timestamp_.Destroy();
  this_._impl_.status_.Destroy();
  this_._impl_.executed_by_.Destroy();
  this_._impl_.error_details_.Destroy();
  this_._impl_.resolution_action_.Destroy();
  this_._impl_.~Impl_();
}

inline void* OperationLog::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) OperationLog(arena);
}
constexpr auto OperationLog::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(OperationLog, _impl_.metadata_) +
          decltype(OperationLog::_impl_.metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(OperationLog, _impl_.metadata_) +
          decltype(OperationLog::_impl_.metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(OperationLog), alignof(OperationLog), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&OperationLog::PlacementNew_,
                                 sizeof(OperationLog),
                                 alignof(OperationLog));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull OperationLog::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_OperationLog_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &OperationLog::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<OperationLog>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &OperationLog::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<OperationLog>(), &OperationLog::ByteSizeLong,
            &OperationLog::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(OperationLog, _impl_._cached_size_),
        false,
    },
    &OperationLog::kDescriptorMethods,
    &descriptor_table_pipeline_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* OperationLog::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 1, 136, 2> OperationLog::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::pipeline::OperationLog>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string log_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(OperationLog, _impl_.log_id_)}},
    // string stage_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(OperationLog, _impl_.stage_id_)}},
    // string operation_name = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(OperationLog, _impl_.operation_name_)}},
    // string timestamp = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(OperationLog, _impl_.timestamp_)}},
    // string status = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(OperationLog, _impl_.status_)}},
    // string executed_by = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(OperationLog, _impl_.executed_by_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string error_details = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(OperationLog, _impl_.error_details_)}},
    // string resolution_action = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(OperationLog, _impl_.resolution_action_)}},
    // float execution_duration = 10;
    {::_pbi::TcParser::FastF32S1,
     {85, 63, 0, PROTOBUF_FIELD_OFFSET(OperationLog, _impl_.execution_duration_)}},
    // bool requires_attention = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(OperationLog, _impl_.requires_attention_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(OperationLog, _impl_.requires_attention_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string log_id = 1;
    {PROTOBUF_FIELD_OFFSET(OperationLog, _impl_.log_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string stage_id = 2;
    {PROTOBUF_FIELD_OFFSET(OperationLog, _impl_.stage_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string operation_name = 3;
    {PROTOBUF_FIELD_OFFSET(OperationLog, _impl_.operation_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string timestamp = 4;
    {PROTOBUF_FIELD_OFFSET(OperationLog, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string status = 5;
    {PROTOBUF_FIELD_OFFSET(OperationLog, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string executed_by = 6;
    {PROTOBUF_FIELD_OFFSET(OperationLog, _impl_.executed_by_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> metadata = 7;
    {PROTOBUF_FIELD_OFFSET(OperationLog, _impl_.metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string error_details = 8;
    {PROTOBUF_FIELD_OFFSET(OperationLog, _impl_.error_details_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string resolution_action = 9;
    {PROTOBUF_FIELD_OFFSET(OperationLog, _impl_.resolution_action_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // float execution_duration = 10;
    {PROTOBUF_FIELD_OFFSET(OperationLog, _impl_.execution_duration_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // bool requires_attention = 11;
    {PROTOBUF_FIELD_OFFSET(OperationLog, _impl_.requires_attention_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(OperationLog()._impl_.metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\33\6\10\16\11\6\13\10\15\21\0\0\0\0\0\0"
    "seigr.pipeline.OperationLog"
    "log_id"
    "stage_id"
    "operation_name"
    "timestamp"
    "status"
    "executed_by"
    "metadata"
    "error_details"
    "resolution_action"
  }},
};

PROTOBUF_NOINLINE void OperationLog::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.pipeline.OperationLog)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.metadata_.Clear();
  _impl_.log_id_.ClearToEmpty();
  _impl_.stage_id_.ClearToEmpty();
  _impl_.operation_name_.ClearToEmpty();
  _impl_.timestamp_.ClearToEmpty();
  _impl_.status_.ClearToEmpty();
  _impl_.executed_by_.ClearToEmpty();
  _impl_.error_details_.ClearToEmpty();
  _impl_.resolution_action_.ClearToEmpty();
  ::memset(&_impl_.execution_duration_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.requires_attention_) -
      reinterpret_cast<char*>(&_impl_.execution_duration_)) + sizeof(_impl_.requires_attention_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* OperationLog::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const OperationLog& this_ = static_cast<const OperationLog&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* OperationLog::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const OperationLog& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.pipeline.OperationLog)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string log_id = 1;
          if (!this_._internal_log_id().empty()) {
            const std::string& _s = this_._internal_log_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.OperationLog.log_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string stage_id = 2;
          if (!this_._internal_stage_id().empty()) {
            const std::string& _s = this_._internal_stage_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.OperationLog.stage_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string operation_name = 3;
          if (!this_._internal_operation_name().empty()) {
            const std::string& _s = this_._internal_operation_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.OperationLog.operation_name");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string timestamp = 4;
          if (!this_._internal_timestamp().empty()) {
            const std::string& _s = this_._internal_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.OperationLog.timestamp");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string status = 5;
          if (!this_._internal_status().empty()) {
            const std::string& _s = this_._internal_status();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.OperationLog.status");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string executed_by = 6;
          if (!this_._internal_executed_by().empty()) {
            const std::string& _s = this_._internal_executed_by();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.OperationLog.executed_by");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // map<string, string> metadata = 7;
          if (!this_._internal_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.OperationLog.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.OperationLog.metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.OperationLog.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.OperationLog.metadata");
              }
            }
          }

          // string error_details = 8;
          if (!this_._internal_error_details().empty()) {
            const std::string& _s = this_._internal_error_details();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.OperationLog.error_details");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          // string resolution_action = 9;
          if (!this_._internal_resolution_action().empty()) {
            const std::string& _s = this_._internal_resolution_action();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.pipeline.OperationLog.resolution_action");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          // float execution_duration = 10;
          if (::absl::bit_cast<::uint32_t>(this_._internal_execution_duration()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                10, this_._internal_execution_duration(), target);
          }

          // bool requires_attention = 11;
          if (this_._internal_requires_attention() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                11, this_._internal_requires_attention(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.pipeline.OperationLog)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t OperationLog::ByteSizeLong(const MessageLite& base) {
          const OperationLog& this_ = static_cast<const OperationLog&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t OperationLog::ByteSizeLong() const {
          const OperationLog& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.pipeline.OperationLog)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> metadata = 7;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_metadata_size());
              for (const auto& entry : this_._internal_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string log_id = 1;
            if (!this_._internal_log_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_log_id());
            }
            // string stage_id = 2;
            if (!this_._internal_stage_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_stage_id());
            }
            // string operation_name = 3;
            if (!this_._internal_operation_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_operation_name());
            }
            // string timestamp = 4;
            if (!this_._internal_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_timestamp());
            }
            // string status = 5;
            if (!this_._internal_status().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_status());
            }
            // string executed_by = 6;
            if (!this_._internal_executed_by().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_executed_by());
            }
            // string error_details = 8;
            if (!this_._internal_error_details().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_error_details());
            }
            // string resolution_action = 9;
            if (!this_._internal_resolution_action().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_resolution_action());
            }
            // float execution_duration = 10;
            if (::absl::bit_cast<::uint32_t>(this_._internal_execution_duration()) != 0) {
              total_size += 5;
            }
            // bool requires_attention = 11;
            if (this_._internal_requires_attention() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void OperationLog::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OperationLog*>(&to_msg);
  auto& from = static_cast<const OperationLog&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.pipeline.OperationLog)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.metadata_.MergeFrom(from._impl_.metadata_);
  if (!from._internal_log_id().empty()) {
    _this->_internal_set_log_id(from._internal_log_id());
  }
  if (!from._internal_stage_id().empty()) {
    _this->_internal_set_stage_id(from._internal_stage_id());
  }
  if (!from._internal_operation_name().empty()) {
    _this->_internal_set_operation_name(from._internal_operation_name());
  }
  if (!from._internal_timestamp().empty()) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (!from._internal_status().empty()) {
    _this->_internal_set_status(from._internal_status());
  }
  if (!from._internal_executed_by().empty()) {
    _this->_internal_set_executed_by(from._internal_executed_by());
  }
  if (!from._internal_error_details().empty()) {
    _this->_internal_set_error_details(from._internal_error_details());
  }
  if (!from._internal_resolution_action().empty()) {
    _this->_internal_set_resolution_action(from._internal_resolution_action());
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_execution_duration()) != 0) {
    _this->_impl_.execution_duration_ = from._impl_.execution_duration_;
  }
  if (from._internal_requires_attention() != 0) {
    _this->_impl_.requires_attention_ = from._impl_.requires_attention_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OperationLog::CopyFrom(const OperationLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.pipeline.OperationLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OperationLog::InternalSwap(OperationLog* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.metadata_.InternalSwap(&other->_impl_.metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.log_id_, &other->_impl_.log_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.stage_id_, &other->_impl_.stage_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.operation_name_, &other->_impl_.operation_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.timestamp_, &other->_impl_.timestamp_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.status_, &other->_impl_.status_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.executed_by_, &other->_impl_.executed_by_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_details_, &other->_impl_.error_details_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.resolution_action_, &other->_impl_.resolution_action_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OperationLog, _impl_.requires_attention_)
      + sizeof(OperationLog::_impl_.requires_attention_)
      - PROTOBUF_FIELD_OFFSET(OperationLog, _impl_.execution_duration_)>(
          reinterpret_cast<char*>(&_impl_.execution_duration_),
          reinterpret_cast<char*>(&other->_impl_.execution_duration_));
}

::google::protobuf::Metadata OperationLog::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace pipeline
}  // namespace seigr
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_pipeline_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
