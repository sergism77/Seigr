// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: network_management.proto
// Protobuf C++ Version: 5.29.2

#include "network_management.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace seigr {
namespace network_management {
              template <typename>
PROTOBUF_CONSTEXPR NetworkAnomalyAlert_MetadataEntry_DoNotUse::NetworkAnomalyAlert_MetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : NetworkAnomalyAlert_MetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : NetworkAnomalyAlert_MetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct NetworkAnomalyAlert_MetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetworkAnomalyAlert_MetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetworkAnomalyAlert_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    NetworkAnomalyAlert_MetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetworkAnomalyAlert_MetadataEntry_DoNotUseDefaultTypeInternal _NetworkAnomalyAlert_MetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR HyphenInfo_MetadataEntry_DoNotUse::HyphenInfo_MetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : HyphenInfo_MetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : HyphenInfo_MetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct HyphenInfo_MetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HyphenInfo_MetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HyphenInfo_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    HyphenInfo_MetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HyphenInfo_MetadataEntry_DoNotUseDefaultTypeInternal _HyphenInfo_MetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR DataSyncEvent_MetadataEntry_DoNotUse::DataSyncEvent_MetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : DataSyncEvent_MetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : DataSyncEvent_MetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct DataSyncEvent_MetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DataSyncEvent_MetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DataSyncEvent_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    DataSyncEvent_MetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DataSyncEvent_MetadataEntry_DoNotUseDefaultTypeInternal _DataSyncEvent_MetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR ConnectivityStatus_ConnectionMetadataEntry_DoNotUse::ConnectivityStatus_ConnectionMetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ConnectivityStatus_ConnectionMetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ConnectivityStatus_ConnectionMetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ConnectivityStatus_ConnectionMetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConnectivityStatus_ConnectionMetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConnectivityStatus_ConnectionMetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ConnectivityStatus_ConnectionMetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConnectivityStatus_ConnectionMetadataEntry_DoNotUseDefaultTypeInternal _ConnectivityStatus_ConnectionMetadataEntry_DoNotUse_default_instance_;

inline constexpr NetworkAnomalyAlert::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : metadata_{},
        alert_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        detected_by_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        threat_level_{static_cast< ::seigr::common::ThreatLevel >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NetworkAnomalyAlert::NetworkAnomalyAlert(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NetworkAnomalyAlertDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetworkAnomalyAlertDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetworkAnomalyAlertDefaultTypeInternal() {}
  union {
    NetworkAnomalyAlert _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetworkAnomalyAlertDefaultTypeInternal _NetworkAnomalyAlert_default_instance_;

inline constexpr HyphenInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : metadata_{},
        supported_protocols_{},
        _supported_protocols_cached_byte_size_{0},
        hyphen_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        last_seen_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        last_updated_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        self_healing_status_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        role_{static_cast< ::seigr::network_management::HyphenRole >(0)},
        primary_protocol_{static_cast< ::seigr::network::NetworkProtocol >(0)},
        status_{static_cast< ::seigr::network::HyphenStatus >(0)},
        available_cpu_percent_{0},
        current_load_{::int64_t{0}},
        available_memory_mb_{0},
        available_bandwidth_mbps_{0},
        supports_self_healing_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HyphenInfo::HyphenInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HyphenInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HyphenInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HyphenInfoDefaultTypeInternal() {}
  union {
    HyphenInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HyphenInfoDefaultTypeInternal _HyphenInfo_default_instance_;

inline constexpr DataSyncEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : metadata_{},
        sync_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        source_hyphen_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        target_hyphen_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        data_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        adaptive_bandwidth_used_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        redundancy_applied_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        protocol_{static_cast< ::seigr::network::NetworkProtocol >(0)},
        sync_type_{static_cast< ::seigr::network_management::SyncType >(0)},
        success_{false},
        retries_{0},
        data_size_bytes_{::int64_t{0}},
        network_load_factor_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DataSyncEvent::DataSyncEvent(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DataSyncEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DataSyncEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DataSyncEventDefaultTypeInternal() {}
  union {
    DataSyncEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DataSyncEventDefaultTypeInternal _DataSyncEvent_default_instance_;

inline constexpr ConnectivityStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : connection_metadata_{},
        source_hyphen_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        target_hyphen_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        protocol_specific_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        error_message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        re_route_path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        alternative_protocol_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        protocol_{static_cast< ::seigr::network::NetworkProtocol >(0)},
        connection_status_{static_cast< ::seigr::network::HyphenStatus >(0)},
        latency_ms_{0},
        packet_loss_rate_{0},
        auto_re_routed_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ConnectivityStatus::ConnectivityStatus(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ConnectivityStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConnectivityStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConnectivityStatusDefaultTypeInternal() {}
  union {
    ConnectivityStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConnectivityStatusDefaultTypeInternal _ConnectivityStatus_default_instance_;
}  // namespace network_management
}  // namespace seigr
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_network_5fmanagement_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_network_5fmanagement_2eproto = nullptr;
const ::uint32_t
    TableStruct_network_5fmanagement_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::HyphenInfo_MetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::HyphenInfo_MetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::HyphenInfo_MetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::HyphenInfo_MetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::HyphenInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::HyphenInfo, _impl_.hyphen_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::HyphenInfo, _impl_.role_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::HyphenInfo, _impl_.primary_protocol_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::HyphenInfo, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::HyphenInfo, _impl_.last_seen_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::HyphenInfo, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::HyphenInfo, _impl_.supported_protocols_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::HyphenInfo, _impl_.current_load_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::HyphenInfo, _impl_.last_updated_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::HyphenInfo, _impl_.available_cpu_percent_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::HyphenInfo, _impl_.available_memory_mb_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::HyphenInfo, _impl_.available_bandwidth_mbps_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::HyphenInfo, _impl_.supports_self_healing_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::HyphenInfo, _impl_.self_healing_status_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::ConnectivityStatus_ConnectionMetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::ConnectivityStatus_ConnectionMetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::ConnectivityStatus_ConnectionMetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::ConnectivityStatus_ConnectionMetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::ConnectivityStatus, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::ConnectivityStatus, _impl_.source_hyphen_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::ConnectivityStatus, _impl_.target_hyphen_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::ConnectivityStatus, _impl_.protocol_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::ConnectivityStatus, _impl_.connection_status_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::ConnectivityStatus, _impl_.protocol_specific_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::ConnectivityStatus, _impl_.latency_ms_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::ConnectivityStatus, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::ConnectivityStatus, _impl_.error_message_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::ConnectivityStatus, _impl_.connection_metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::ConnectivityStatus, _impl_.packet_loss_rate_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::ConnectivityStatus, _impl_.auto_re_routed_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::ConnectivityStatus, _impl_.re_route_path_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::ConnectivityStatus, _impl_.alternative_protocol_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::DataSyncEvent_MetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::DataSyncEvent_MetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::DataSyncEvent_MetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::DataSyncEvent_MetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::DataSyncEvent, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::DataSyncEvent, _impl_.sync_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::DataSyncEvent, _impl_.source_hyphen_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::DataSyncEvent, _impl_.target_hyphen_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::DataSyncEvent, _impl_.protocol_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::DataSyncEvent, _impl_.data_hash_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::DataSyncEvent, _impl_.sync_type_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::DataSyncEvent, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::DataSyncEvent, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::DataSyncEvent, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::DataSyncEvent, _impl_.data_size_bytes_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::DataSyncEvent, _impl_.retries_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::DataSyncEvent, _impl_.adaptive_bandwidth_used_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::DataSyncEvent, _impl_.redundancy_applied_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::DataSyncEvent, _impl_.network_load_factor_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::NetworkAnomalyAlert_MetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::NetworkAnomalyAlert_MetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::NetworkAnomalyAlert_MetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::NetworkAnomalyAlert_MetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::NetworkAnomalyAlert, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::NetworkAnomalyAlert, _impl_.alert_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::NetworkAnomalyAlert, _impl_.detected_by_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::NetworkAnomalyAlert, _impl_.threat_level_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::NetworkAnomalyAlert, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::NetworkAnomalyAlert, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::seigr::network_management::NetworkAnomalyAlert, _impl_.metadata_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::seigr::network_management::HyphenInfo_MetadataEntry_DoNotUse)},
        {12, -1, -1, sizeof(::seigr::network_management::HyphenInfo)},
        {34, 44, -1, sizeof(::seigr::network_management::ConnectivityStatus_ConnectionMetadataEntry_DoNotUse)},
        {46, -1, -1, sizeof(::seigr::network_management::ConnectivityStatus)},
        {67, 77, -1, sizeof(::seigr::network_management::DataSyncEvent_MetadataEntry_DoNotUse)},
        {79, -1, -1, sizeof(::seigr::network_management::DataSyncEvent)},
        {101, 111, -1, sizeof(::seigr::network_management::NetworkAnomalyAlert_MetadataEntry_DoNotUse)},
        {113, -1, -1, sizeof(::seigr::network_management::NetworkAnomalyAlert)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::seigr::network_management::_HyphenInfo_MetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::network_management::_HyphenInfo_default_instance_._instance,
    &::seigr::network_management::_ConnectivityStatus_ConnectionMetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::network_management::_ConnectivityStatus_default_instance_._instance,
    &::seigr::network_management::_DataSyncEvent_MetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::network_management::_DataSyncEvent_default_instance_._instance,
    &::seigr::network_management::_NetworkAnomalyAlert_MetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::network_management::_NetworkAnomalyAlert_default_instance_._instance,
};
const char descriptor_table_protodef_network_5fmanagement_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\030network_management.proto\022\030seigr.networ"
    "k_management\032\014common.proto\032\rnetwork.prot"
    "o\"\307\004\n\nHyphenInfo\022\021\n\thyphen_id\030\001 \001(\t\0222\n\004r"
    "ole\030\002 \001(\0162$.seigr.network_management.Hyp"
    "henRole\0228\n\020primary_protocol\030\003 \001(\0162\036.seig"
    "r.network.NetworkProtocol\022+\n\006status\030\004 \001("
    "\0162\033.seigr.network.HyphenStatus\022\021\n\tlast_s"
    "een\030\005 \001(\t\022D\n\010metadata\030\006 \003(\01322.seigr.netw"
    "ork_management.HyphenInfo.MetadataEntry\022"
    ";\n\023supported_protocols\030\007 \003(\0162\036.seigr.net"
    "work.NetworkProtocol\022\024\n\014current_load\030\010 \001"
    "(\003\022\024\n\014last_updated\030\t \001(\t\022\035\n\025available_cp"
    "u_percent\030\n \001(\005\022\033\n\023available_memory_mb\030\013"
    " \001(\005\022 \n\030available_bandwidth_mbps\030\014 \001(\005\022\035"
    "\n\025supports_self_healing\030\r \001(\010\022\033\n\023self_he"
    "aling_status\030\016 \001(\t\032/\n\rMetadataEntry\022\013\n\003k"
    "ey\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\223\004\n\022Connecti"
    "vityStatus\022\030\n\020source_hyphen_id\030\001 \001(\t\022\030\n\020"
    "target_hyphen_id\030\002 \001(\t\0220\n\010protocol\030\003 \001(\016"
    "2\036.seigr.network.NetworkProtocol\0226\n\021conn"
    "ection_status\030\004 \001(\0162\033.seigr.network.Hyph"
    "enStatus\022\034\n\024protocol_specific_id\030\005 \001(\t\022\022"
    "\n\nlatency_ms\030\006 \001(\005\022\021\n\ttimestamp\030\007 \001(\t\022\025\n"
    "\rerror_message\030\010 \001(\t\022a\n\023connection_metad"
    "ata\030\t \003(\0132D.seigr.network_management.Con"
    "nectivityStatus.ConnectionMetadataEntry\022"
    "\030\n\020packet_loss_rate\030\n \001(\002\022\026\n\016auto_re_rou"
    "ted\030\013 \001(\010\022\025\n\rre_route_path\030\014 \001(\t\022\034\n\024alte"
    "rnative_protocol\030\r \001(\t\0329\n\027ConnectionMeta"
    "dataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028"
    "\001\"\362\003\n\rDataSyncEvent\022\017\n\007sync_id\030\001 \001(\t\022\030\n\020"
    "source_hyphen_id\030\002 \001(\t\022\030\n\020target_hyphen_"
    "id\030\003 \001(\t\0220\n\010protocol\030\004 \001(\0162\036.seigr.netwo"
    "rk.NetworkProtocol\022\021\n\tdata_hash\030\005 \001(\t\0225\n"
    "\tsync_type\030\006 \001(\0162\".seigr.network_managem"
    "ent.SyncType\022\017\n\007success\030\007 \001(\010\022\021\n\ttimesta"
    "mp\030\010 \001(\t\022G\n\010metadata\030\t \003(\01325.seigr.netwo"
    "rk_management.DataSyncEvent.MetadataEntr"
    "y\022\027\n\017data_size_bytes\030\n \001(\003\022\017\n\007retries\030\013 "
    "\001(\005\022\037\n\027adaptive_bandwidth_used\030\014 \001(\t\022\032\n\022"
    "redundancy_applied\030\r \001(\t\022\033\n\023network_load"
    "_factor\030\016 \001(\002\032/\n\rMetadataEntry\022\013\n\003key\030\001 "
    "\001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\225\002\n\023NetworkAnomal"
    "yAlert\022\020\n\010alert_id\030\001 \001(\t\022\023\n\013detected_by\030"
    "\002 \001(\t\022/\n\014threat_level\030\003 \001(\0162\031.seigr.comm"
    "on.ThreatLevel\022\023\n\013description\030\004 \001(\t\022\021\n\tt"
    "imestamp\030\005 \001(\t\022M\n\010metadata\030\006 \003(\0132;.seigr"
    ".network_management.NetworkAnomalyAlert."
    "MetadataEntry\032/\n\rMetadataEntry\022\013\n\003key\030\001 "
    "\001(\t\022\r\n\005value\030\002 \001(\t:\0028\001*\227\001\n\nHyphenRole\022\022\n"
    "\016ROLE_UNDEFINED\020\000\022\024\n\020ROLE_USER_HYPHEN\020\001\022"
    "\030\n\024ROLE_NON_USER_HYPHEN\020\002\022\017\n\013ROLE_MASTER"
    "\020\003\022\017\n\013ROLE_WORKER\020\004\022\020\n\014ROLE_GATEWAY\020\005\022\021\n"
    "\rROLE_ADAPTIVE\020\006*k\n\010SyncType\022\027\n\023SYNC_TYP"
    "E_UNDEFINED\020\000\022\022\n\016SYNC_TYPE_FULL\020\001\022\031\n\025SYN"
    "C_TYPE_INCREMENTAL\020\002\022\027\n\023SYNC_TYPE_REAL_T"
    "IME\020\0032\235\004\n\030NetworkManagementService\022`\n\023Mo"
    "nitorConnectivity\022#.seigr.network.Networ"
    "kStatusRequest\032$.seigr.network.NetworkSt"
    "atusResponse\022^\n\017PerformDataSync\022\'.seigr."
    "network_management.DataSyncEvent\032\".seigr"
    ".network.NetworkOperationLog\022b\n\rReportAn"
    "omaly\022-.seigr.network_management.Network"
    "AnomalyAlert\032\".seigr.network.NetworkOper"
    "ationLog\022n\n\032CheckProtocolCompatibility\022\'"
    ".seigr.network.ProtocolCompatibilityLog\032"
    "\'.seigr.network.ProtocolCompatibilityLog"
    "\022k\n\032RetrieveNetworkPerformance\022#.seigr.n"
    "etwork.NetworkStatusRequest\032(.seigr.netw"
    "ork.NetworkPerformanceSummaryb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_network_5fmanagement_2eproto_deps[2] =
    {
        &::descriptor_table_common_2eproto,
        &::descriptor_table_network_2eproto,
};
static ::absl::once_flag descriptor_table_network_5fmanagement_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_network_5fmanagement_2eproto = {
    false,
    false,
    2797,
    descriptor_table_protodef_network_5fmanagement_2eproto,
    "network_management.proto",
    &descriptor_table_network_5fmanagement_2eproto_once,
    descriptor_table_network_5fmanagement_2eproto_deps,
    2,
    8,
    schemas,
    file_default_instances,
    TableStruct_network_5fmanagement_2eproto::offsets,
    file_level_enum_descriptors_network_5fmanagement_2eproto,
    file_level_service_descriptors_network_5fmanagement_2eproto,
};
namespace seigr {
namespace network_management {
const ::google::protobuf::EnumDescriptor* HyphenRole_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_network_5fmanagement_2eproto);
  return file_level_enum_descriptors_network_5fmanagement_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t HyphenRole_internal_data_[] = {
    458752u, 0u, };
bool HyphenRole_IsValid(int value) {
  return 0 <= value && value <= 6;
}
const ::google::protobuf::EnumDescriptor* SyncType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_network_5fmanagement_2eproto);
  return file_level_enum_descriptors_network_5fmanagement_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t SyncType_internal_data_[] = {
    262144u, 0u, };
bool SyncType_IsValid(int value) {
  return 0 <= value && value <= 3;
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              HyphenInfo_MetadataEntry_DoNotUse::HyphenInfo_MetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              HyphenInfo_MetadataEntry_DoNotUse::HyphenInfo_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              HyphenInfo_MetadataEntry_DoNotUse::HyphenInfo_MetadataEntry_DoNotUse() : SuperType() {}
              HyphenInfo_MetadataEntry_DoNotUse::HyphenInfo_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* HyphenInfo_MetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) HyphenInfo_MetadataEntry_DoNotUse(arena);
              }
              constexpr auto HyphenInfo_MetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(HyphenInfo_MetadataEntry_DoNotUse),
                                                          alignof(HyphenInfo_MetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull HyphenInfo_MetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_HyphenInfo_MetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &HyphenInfo_MetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<HyphenInfo_MetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &HyphenInfo_MetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &HyphenInfo_MetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(HyphenInfo_MetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &HyphenInfo_MetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_network_5fmanagement_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* HyphenInfo_MetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 66, 2> HyphenInfo_MetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(HyphenInfo_MetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::network_management::HyphenInfo_MetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(HyphenInfo_MetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(HyphenInfo_MetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(HyphenInfo_MetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(HyphenInfo_MetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\61\3\5\0\0\0\0\0"
    "seigr.network_management.HyphenInfo.MetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class HyphenInfo::_Internal {
 public:
};

HyphenInfo::HyphenInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.network_management.HyphenInfo)
}
inline PROTOBUF_NDEBUG_INLINE HyphenInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::network_management::HyphenInfo& from_msg)
      : metadata_{visibility, arena, from.metadata_},
        supported_protocols_{visibility, arena, from.supported_protocols_},
        _supported_protocols_cached_byte_size_{0},
        hyphen_id_(arena, from.hyphen_id_),
        last_seen_(arena, from.last_seen_),
        last_updated_(arena, from.last_updated_),
        self_healing_status_(arena, from.self_healing_status_),
        _cached_size_{0} {}

HyphenInfo::HyphenInfo(
    ::google::protobuf::Arena* arena,
    const HyphenInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HyphenInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, role_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, role_),
           offsetof(Impl_, supports_self_healing_) -
               offsetof(Impl_, role_) +
               sizeof(Impl_::supports_self_healing_));

  // @@protoc_insertion_point(copy_constructor:seigr.network_management.HyphenInfo)
}
inline PROTOBUF_NDEBUG_INLINE HyphenInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : metadata_{visibility, arena},
        supported_protocols_{visibility, arena},
        _supported_protocols_cached_byte_size_{0},
        hyphen_id_(arena),
        last_seen_(arena),
        last_updated_(arena),
        self_healing_status_(arena),
        _cached_size_{0} {}

inline void HyphenInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, role_),
           0,
           offsetof(Impl_, supports_self_healing_) -
               offsetof(Impl_, role_) +
               sizeof(Impl_::supports_self_healing_));
}
HyphenInfo::~HyphenInfo() {
  // @@protoc_insertion_point(destructor:seigr.network_management.HyphenInfo)
  SharedDtor(*this);
}
inline void HyphenInfo::SharedDtor(MessageLite& self) {
  HyphenInfo& this_ = static_cast<HyphenInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.hyphen_id_.Destroy();
  this_._impl_.last_seen_.Destroy();
  this_._impl_.last_updated_.Destroy();
  this_._impl_.self_healing_status_.Destroy();
  this_._impl_.~Impl_();
}

inline void* HyphenInfo::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) HyphenInfo(arena);
}
constexpr auto HyphenInfo::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(HyphenInfo, _impl_.metadata_) +
          decltype(HyphenInfo::_impl_.metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(HyphenInfo, _impl_.metadata_) +
          decltype(HyphenInfo::_impl_.metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(HyphenInfo, _impl_.supported_protocols_) +
          decltype(HyphenInfo::_impl_.supported_protocols_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(HyphenInfo), alignof(HyphenInfo), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&HyphenInfo::PlacementNew_,
                                 sizeof(HyphenInfo),
                                 alignof(HyphenInfo));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull HyphenInfo::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_HyphenInfo_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &HyphenInfo::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<HyphenInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &HyphenInfo::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<HyphenInfo>(), &HyphenInfo::ByteSizeLong,
            &HyphenInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(HyphenInfo, _impl_._cached_size_),
        false,
    },
    &HyphenInfo::kDescriptorMethods,
    &descriptor_table_network_5fmanagement_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* HyphenInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 14, 1, 109, 2> HyphenInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    14, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294950912,  // skipmap
    offsetof(decltype(_table_), field_entries),
    14,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::network_management::HyphenInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string hyphen_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(HyphenInfo, _impl_.hyphen_id_)}},
    // .seigr.network_management.HyphenRole role = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(HyphenInfo, _impl_.role_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(HyphenInfo, _impl_.role_)}},
    // .seigr.network.NetworkProtocol primary_protocol = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(HyphenInfo, _impl_.primary_protocol_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(HyphenInfo, _impl_.primary_protocol_)}},
    // .seigr.network.HyphenStatus status = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(HyphenInfo, _impl_.status_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(HyphenInfo, _impl_.status_)}},
    // string last_seen = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(HyphenInfo, _impl_.last_seen_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .seigr.network.NetworkProtocol supported_protocols = 7;
    {::_pbi::TcParser::FastV32P1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(HyphenInfo, _impl_.supported_protocols_)}},
    // int64 current_load = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(HyphenInfo, _impl_.current_load_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(HyphenInfo, _impl_.current_load_)}},
    // string last_updated = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(HyphenInfo, _impl_.last_updated_)}},
    // int32 available_cpu_percent = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(HyphenInfo, _impl_.available_cpu_percent_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(HyphenInfo, _impl_.available_cpu_percent_)}},
    // int32 available_memory_mb = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(HyphenInfo, _impl_.available_memory_mb_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(HyphenInfo, _impl_.available_memory_mb_)}},
    // int32 available_bandwidth_mbps = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(HyphenInfo, _impl_.available_bandwidth_mbps_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(HyphenInfo, _impl_.available_bandwidth_mbps_)}},
    // bool supports_self_healing = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(HyphenInfo, _impl_.supports_self_healing_), 63>(),
     {104, 63, 0, PROTOBUF_FIELD_OFFSET(HyphenInfo, _impl_.supports_self_healing_)}},
    // string self_healing_status = 14;
    {::_pbi::TcParser::FastUS1,
     {114, 63, 0, PROTOBUF_FIELD_OFFSET(HyphenInfo, _impl_.self_healing_status_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string hyphen_id = 1;
    {PROTOBUF_FIELD_OFFSET(HyphenInfo, _impl_.hyphen_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.network_management.HyphenRole role = 2;
    {PROTOBUF_FIELD_OFFSET(HyphenInfo, _impl_.role_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .seigr.network.NetworkProtocol primary_protocol = 3;
    {PROTOBUF_FIELD_OFFSET(HyphenInfo, _impl_.primary_protocol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .seigr.network.HyphenStatus status = 4;
    {PROTOBUF_FIELD_OFFSET(HyphenInfo, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string last_seen = 5;
    {PROTOBUF_FIELD_OFFSET(HyphenInfo, _impl_.last_seen_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> metadata = 6;
    {PROTOBUF_FIELD_OFFSET(HyphenInfo, _impl_.metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // repeated .seigr.network.NetworkProtocol supported_protocols = 7;
    {PROTOBUF_FIELD_OFFSET(HyphenInfo, _impl_.supported_protocols_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // int64 current_load = 8;
    {PROTOBUF_FIELD_OFFSET(HyphenInfo, _impl_.current_load_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string last_updated = 9;
    {PROTOBUF_FIELD_OFFSET(HyphenInfo, _impl_.last_updated_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 available_cpu_percent = 10;
    {PROTOBUF_FIELD_OFFSET(HyphenInfo, _impl_.available_cpu_percent_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 available_memory_mb = 11;
    {PROTOBUF_FIELD_OFFSET(HyphenInfo, _impl_.available_memory_mb_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 available_bandwidth_mbps = 12;
    {PROTOBUF_FIELD_OFFSET(HyphenInfo, _impl_.available_bandwidth_mbps_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool supports_self_healing = 13;
    {PROTOBUF_FIELD_OFFSET(HyphenInfo, _impl_.supports_self_healing_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string self_healing_status = 14;
    {PROTOBUF_FIELD_OFFSET(HyphenInfo, _impl_.self_healing_status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(HyphenInfo()._impl_.metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\43\11\0\0\0\11\10\0\0\14\0\0\0\0\23\0"
    "seigr.network_management.HyphenInfo"
    "hyphen_id"
    "last_seen"
    "metadata"
    "last_updated"
    "self_healing_status"
  }},
};

PROTOBUF_NOINLINE void HyphenInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.network_management.HyphenInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.metadata_.Clear();
  _impl_.supported_protocols_.Clear();
  _impl_.hyphen_id_.ClearToEmpty();
  _impl_.last_seen_.ClearToEmpty();
  _impl_.last_updated_.ClearToEmpty();
  _impl_.self_healing_status_.ClearToEmpty();
  ::memset(&_impl_.role_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.supports_self_healing_) -
      reinterpret_cast<char*>(&_impl_.role_)) + sizeof(_impl_.supports_self_healing_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* HyphenInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const HyphenInfo& this_ = static_cast<const HyphenInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* HyphenInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const HyphenInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.network_management.HyphenInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string hyphen_id = 1;
          if (!this_._internal_hyphen_id().empty()) {
            const std::string& _s = this_._internal_hyphen_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network_management.HyphenInfo.hyphen_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // .seigr.network_management.HyphenRole role = 2;
          if (this_._internal_role() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_role(), target);
          }

          // .seigr.network.NetworkProtocol primary_protocol = 3;
          if (this_._internal_primary_protocol() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_primary_protocol(), target);
          }

          // .seigr.network.HyphenStatus status = 4;
          if (this_._internal_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                4, this_._internal_status(), target);
          }

          // string last_seen = 5;
          if (!this_._internal_last_seen().empty()) {
            const std::string& _s = this_._internal_last_seen();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network_management.HyphenInfo.last_seen");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // map<string, string> metadata = 6;
          if (!this_._internal_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network_management.HyphenInfo.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network_management.HyphenInfo.metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network_management.HyphenInfo.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network_management.HyphenInfo.metadata");
              }
            }
          }

          // repeated .seigr.network.NetworkProtocol supported_protocols = 7;
          {
            std::size_t byte_size =
                                              this_._impl_._supported_protocols_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteEnumPacked(
                  7, this_._internal_supported_protocols(), byte_size, target);
            }
          }

          // int64 current_load = 8;
          if (this_._internal_current_load() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<8>(
                    stream, this_._internal_current_load(), target);
          }

          // string last_updated = 9;
          if (!this_._internal_last_updated().empty()) {
            const std::string& _s = this_._internal_last_updated();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network_management.HyphenInfo.last_updated");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          // int32 available_cpu_percent = 10;
          if (this_._internal_available_cpu_percent() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<10>(
                    stream, this_._internal_available_cpu_percent(), target);
          }

          // int32 available_memory_mb = 11;
          if (this_._internal_available_memory_mb() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<11>(
                    stream, this_._internal_available_memory_mb(), target);
          }

          // int32 available_bandwidth_mbps = 12;
          if (this_._internal_available_bandwidth_mbps() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<12>(
                    stream, this_._internal_available_bandwidth_mbps(), target);
          }

          // bool supports_self_healing = 13;
          if (this_._internal_supports_self_healing() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                13, this_._internal_supports_self_healing(), target);
          }

          // string self_healing_status = 14;
          if (!this_._internal_self_healing_status().empty()) {
            const std::string& _s = this_._internal_self_healing_status();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network_management.HyphenInfo.self_healing_status");
            target = stream->WriteStringMaybeAliased(14, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.network_management.HyphenInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t HyphenInfo::ByteSizeLong(const MessageLite& base) {
          const HyphenInfo& this_ = static_cast<const HyphenInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t HyphenInfo::ByteSizeLong() const {
          const HyphenInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.network_management.HyphenInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> metadata = 6;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_metadata_size());
              for (const auto& entry : this_._internal_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // repeated .seigr.network.NetworkProtocol supported_protocols = 7;
            {
              total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
                  this_._internal_supported_protocols(), 1, this_._impl_._supported_protocols_cached_byte_size_);
            }
          }
           {
            // string hyphen_id = 1;
            if (!this_._internal_hyphen_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_hyphen_id());
            }
            // string last_seen = 5;
            if (!this_._internal_last_seen().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_last_seen());
            }
            // string last_updated = 9;
            if (!this_._internal_last_updated().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_last_updated());
            }
            // string self_healing_status = 14;
            if (!this_._internal_self_healing_status().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_self_healing_status());
            }
            // .seigr.network_management.HyphenRole role = 2;
            if (this_._internal_role() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_role());
            }
            // .seigr.network.NetworkProtocol primary_protocol = 3;
            if (this_._internal_primary_protocol() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_primary_protocol());
            }
            // .seigr.network.HyphenStatus status = 4;
            if (this_._internal_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
            }
            // int32 available_cpu_percent = 10;
            if (this_._internal_available_cpu_percent() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_available_cpu_percent());
            }
            // int64 current_load = 8;
            if (this_._internal_current_load() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_current_load());
            }
            // int32 available_memory_mb = 11;
            if (this_._internal_available_memory_mb() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_available_memory_mb());
            }
            // int32 available_bandwidth_mbps = 12;
            if (this_._internal_available_bandwidth_mbps() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_available_bandwidth_mbps());
            }
            // bool supports_self_healing = 13;
            if (this_._internal_supports_self_healing() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void HyphenInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HyphenInfo*>(&to_msg);
  auto& from = static_cast<const HyphenInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.network_management.HyphenInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.metadata_.MergeFrom(from._impl_.metadata_);
  _this->_internal_mutable_supported_protocols()->MergeFrom(from._internal_supported_protocols());
  if (!from._internal_hyphen_id().empty()) {
    _this->_internal_set_hyphen_id(from._internal_hyphen_id());
  }
  if (!from._internal_last_seen().empty()) {
    _this->_internal_set_last_seen(from._internal_last_seen());
  }
  if (!from._internal_last_updated().empty()) {
    _this->_internal_set_last_updated(from._internal_last_updated());
  }
  if (!from._internal_self_healing_status().empty()) {
    _this->_internal_set_self_healing_status(from._internal_self_healing_status());
  }
  if (from._internal_role() != 0) {
    _this->_impl_.role_ = from._impl_.role_;
  }
  if (from._internal_primary_protocol() != 0) {
    _this->_impl_.primary_protocol_ = from._impl_.primary_protocol_;
  }
  if (from._internal_status() != 0) {
    _this->_impl_.status_ = from._impl_.status_;
  }
  if (from._internal_available_cpu_percent() != 0) {
    _this->_impl_.available_cpu_percent_ = from._impl_.available_cpu_percent_;
  }
  if (from._internal_current_load() != 0) {
    _this->_impl_.current_load_ = from._impl_.current_load_;
  }
  if (from._internal_available_memory_mb() != 0) {
    _this->_impl_.available_memory_mb_ = from._impl_.available_memory_mb_;
  }
  if (from._internal_available_bandwidth_mbps() != 0) {
    _this->_impl_.available_bandwidth_mbps_ = from._impl_.available_bandwidth_mbps_;
  }
  if (from._internal_supports_self_healing() != 0) {
    _this->_impl_.supports_self_healing_ = from._impl_.supports_self_healing_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HyphenInfo::CopyFrom(const HyphenInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.network_management.HyphenInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HyphenInfo::InternalSwap(HyphenInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.metadata_.InternalSwap(&other->_impl_.metadata_);
  _impl_.supported_protocols_.InternalSwap(&other->_impl_.supported_protocols_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hyphen_id_, &other->_impl_.hyphen_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.last_seen_, &other->_impl_.last_seen_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.last_updated_, &other->_impl_.last_updated_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.self_healing_status_, &other->_impl_.self_healing_status_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HyphenInfo, _impl_.supports_self_healing_)
      + sizeof(HyphenInfo::_impl_.supports_self_healing_)
      - PROTOBUF_FIELD_OFFSET(HyphenInfo, _impl_.role_)>(
          reinterpret_cast<char*>(&_impl_.role_),
          reinterpret_cast<char*>(&other->_impl_.role_));
}

::google::protobuf::Metadata HyphenInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              ConnectivityStatus_ConnectionMetadataEntry_DoNotUse::ConnectivityStatus_ConnectionMetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              ConnectivityStatus_ConnectionMetadataEntry_DoNotUse::ConnectivityStatus_ConnectionMetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              ConnectivityStatus_ConnectionMetadataEntry_DoNotUse::ConnectivityStatus_ConnectionMetadataEntry_DoNotUse() : SuperType() {}
              ConnectivityStatus_ConnectionMetadataEntry_DoNotUse::ConnectivityStatus_ConnectionMetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* ConnectivityStatus_ConnectionMetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) ConnectivityStatus_ConnectionMetadataEntry_DoNotUse(arena);
              }
              constexpr auto ConnectivityStatus_ConnectionMetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ConnectivityStatus_ConnectionMetadataEntry_DoNotUse),
                                                          alignof(ConnectivityStatus_ConnectionMetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull ConnectivityStatus_ConnectionMetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_ConnectivityStatus_ConnectionMetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &ConnectivityStatus_ConnectionMetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<ConnectivityStatus_ConnectionMetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &ConnectivityStatus_ConnectionMetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &ConnectivityStatus_ConnectionMetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(ConnectivityStatus_ConnectionMetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &ConnectivityStatus_ConnectionMetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_network_5fmanagement_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* ConnectivityStatus_ConnectionMetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 84, 2> ConnectivityStatus_ConnectionMetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ConnectivityStatus_ConnectionMetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::network_management::ConnectivityStatus_ConnectionMetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ConnectivityStatus_ConnectionMetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ConnectivityStatus_ConnectionMetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(ConnectivityStatus_ConnectionMetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(ConnectivityStatus_ConnectionMetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\103\3\5\0\0\0\0\0"
    "seigr.network_management.ConnectivityStatus.ConnectionMetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class ConnectivityStatus::_Internal {
 public:
};

ConnectivityStatus::ConnectivityStatus(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.network_management.ConnectivityStatus)
}
inline PROTOBUF_NDEBUG_INLINE ConnectivityStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::network_management::ConnectivityStatus& from_msg)
      : connection_metadata_{visibility, arena, from.connection_metadata_},
        source_hyphen_id_(arena, from.source_hyphen_id_),
        target_hyphen_id_(arena, from.target_hyphen_id_),
        protocol_specific_id_(arena, from.protocol_specific_id_),
        timestamp_(arena, from.timestamp_),
        error_message_(arena, from.error_message_),
        re_route_path_(arena, from.re_route_path_),
        alternative_protocol_(arena, from.alternative_protocol_),
        _cached_size_{0} {}

ConnectivityStatus::ConnectivityStatus(
    ::google::protobuf::Arena* arena,
    const ConnectivityStatus& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ConnectivityStatus* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, protocol_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, protocol_),
           offsetof(Impl_, auto_re_routed_) -
               offsetof(Impl_, protocol_) +
               sizeof(Impl_::auto_re_routed_));

  // @@protoc_insertion_point(copy_constructor:seigr.network_management.ConnectivityStatus)
}
inline PROTOBUF_NDEBUG_INLINE ConnectivityStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : connection_metadata_{visibility, arena},
        source_hyphen_id_(arena),
        target_hyphen_id_(arena),
        protocol_specific_id_(arena),
        timestamp_(arena),
        error_message_(arena),
        re_route_path_(arena),
        alternative_protocol_(arena),
        _cached_size_{0} {}

inline void ConnectivityStatus::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, protocol_),
           0,
           offsetof(Impl_, auto_re_routed_) -
               offsetof(Impl_, protocol_) +
               sizeof(Impl_::auto_re_routed_));
}
ConnectivityStatus::~ConnectivityStatus() {
  // @@protoc_insertion_point(destructor:seigr.network_management.ConnectivityStatus)
  SharedDtor(*this);
}
inline void ConnectivityStatus::SharedDtor(MessageLite& self) {
  ConnectivityStatus& this_ = static_cast<ConnectivityStatus&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.source_hyphen_id_.Destroy();
  this_._impl_.target_hyphen_id_.Destroy();
  this_._impl_.protocol_specific_id_.Destroy();
  this_._impl_.timestamp_.Destroy();
  this_._impl_.error_message_.Destroy();
  this_._impl_.re_route_path_.Destroy();
  this_._impl_.alternative_protocol_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ConnectivityStatus::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ConnectivityStatus(arena);
}
constexpr auto ConnectivityStatus::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ConnectivityStatus, _impl_.connection_metadata_) +
          decltype(ConnectivityStatus::_impl_.connection_metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ConnectivityStatus, _impl_.connection_metadata_) +
          decltype(ConnectivityStatus::_impl_.connection_metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ConnectivityStatus), alignof(ConnectivityStatus), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ConnectivityStatus::PlacementNew_,
                                 sizeof(ConnectivityStatus),
                                 alignof(ConnectivityStatus));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ConnectivityStatus::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ConnectivityStatus_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ConnectivityStatus::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ConnectivityStatus>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ConnectivityStatus::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ConnectivityStatus>(), &ConnectivityStatus::ByteSizeLong,
            &ConnectivityStatus::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ConnectivityStatus, _impl_._cached_size_),
        false,
    },
    &ConnectivityStatus::kDescriptorMethods,
    &descriptor_table_network_5fmanagement_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ConnectivityStatus::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 13, 1, 186, 2> ConnectivityStatus::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    13, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294959104,  // skipmap
    offsetof(decltype(_table_), field_entries),
    13,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::network_management::ConnectivityStatus>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string source_hyphen_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ConnectivityStatus, _impl_.source_hyphen_id_)}},
    // string target_hyphen_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ConnectivityStatus, _impl_.target_hyphen_id_)}},
    // .seigr.network.NetworkProtocol protocol = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ConnectivityStatus, _impl_.protocol_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(ConnectivityStatus, _impl_.protocol_)}},
    // .seigr.network.HyphenStatus connection_status = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ConnectivityStatus, _impl_.connection_status_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(ConnectivityStatus, _impl_.connection_status_)}},
    // string protocol_specific_id = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(ConnectivityStatus, _impl_.protocol_specific_id_)}},
    // int32 latency_ms = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ConnectivityStatus, _impl_.latency_ms_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(ConnectivityStatus, _impl_.latency_ms_)}},
    // string timestamp = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(ConnectivityStatus, _impl_.timestamp_)}},
    // string error_message = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(ConnectivityStatus, _impl_.error_message_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // float packet_loss_rate = 10;
    {::_pbi::TcParser::FastF32S1,
     {85, 63, 0, PROTOBUF_FIELD_OFFSET(ConnectivityStatus, _impl_.packet_loss_rate_)}},
    // bool auto_re_routed = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ConnectivityStatus, _impl_.auto_re_routed_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(ConnectivityStatus, _impl_.auto_re_routed_)}},
    // string re_route_path = 12;
    {::_pbi::TcParser::FastUS1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(ConnectivityStatus, _impl_.re_route_path_)}},
    // string alternative_protocol = 13;
    {::_pbi::TcParser::FastUS1,
     {106, 63, 0, PROTOBUF_FIELD_OFFSET(ConnectivityStatus, _impl_.alternative_protocol_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string source_hyphen_id = 1;
    {PROTOBUF_FIELD_OFFSET(ConnectivityStatus, _impl_.source_hyphen_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string target_hyphen_id = 2;
    {PROTOBUF_FIELD_OFFSET(ConnectivityStatus, _impl_.target_hyphen_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.network.NetworkProtocol protocol = 3;
    {PROTOBUF_FIELD_OFFSET(ConnectivityStatus, _impl_.protocol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .seigr.network.HyphenStatus connection_status = 4;
    {PROTOBUF_FIELD_OFFSET(ConnectivityStatus, _impl_.connection_status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string protocol_specific_id = 5;
    {PROTOBUF_FIELD_OFFSET(ConnectivityStatus, _impl_.protocol_specific_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 latency_ms = 6;
    {PROTOBUF_FIELD_OFFSET(ConnectivityStatus, _impl_.latency_ms_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string timestamp = 7;
    {PROTOBUF_FIELD_OFFSET(ConnectivityStatus, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string error_message = 8;
    {PROTOBUF_FIELD_OFFSET(ConnectivityStatus, _impl_.error_message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> connection_metadata = 9;
    {PROTOBUF_FIELD_OFFSET(ConnectivityStatus, _impl_.connection_metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // float packet_loss_rate = 10;
    {PROTOBUF_FIELD_OFFSET(ConnectivityStatus, _impl_.packet_loss_rate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // bool auto_re_routed = 11;
    {PROTOBUF_FIELD_OFFSET(ConnectivityStatus, _impl_.auto_re_routed_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string re_route_path = 12;
    {PROTOBUF_FIELD_OFFSET(ConnectivityStatus, _impl_.re_route_path_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string alternative_protocol = 13;
    {PROTOBUF_FIELD_OFFSET(ConnectivityStatus, _impl_.alternative_protocol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(ConnectivityStatus()._impl_.connection_metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\53\20\20\0\0\24\0\11\15\23\0\0\15\24\0\0"
    "seigr.network_management.ConnectivityStatus"
    "source_hyphen_id"
    "target_hyphen_id"
    "protocol_specific_id"
    "timestamp"
    "error_message"
    "connection_metadata"
    "re_route_path"
    "alternative_protocol"
  }},
};

PROTOBUF_NOINLINE void ConnectivityStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.network_management.ConnectivityStatus)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.connection_metadata_.Clear();
  _impl_.source_hyphen_id_.ClearToEmpty();
  _impl_.target_hyphen_id_.ClearToEmpty();
  _impl_.protocol_specific_id_.ClearToEmpty();
  _impl_.timestamp_.ClearToEmpty();
  _impl_.error_message_.ClearToEmpty();
  _impl_.re_route_path_.ClearToEmpty();
  _impl_.alternative_protocol_.ClearToEmpty();
  ::memset(&_impl_.protocol_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.auto_re_routed_) -
      reinterpret_cast<char*>(&_impl_.protocol_)) + sizeof(_impl_.auto_re_routed_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ConnectivityStatus::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ConnectivityStatus& this_ = static_cast<const ConnectivityStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ConnectivityStatus::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ConnectivityStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.network_management.ConnectivityStatus)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string source_hyphen_id = 1;
          if (!this_._internal_source_hyphen_id().empty()) {
            const std::string& _s = this_._internal_source_hyphen_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network_management.ConnectivityStatus.source_hyphen_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string target_hyphen_id = 2;
          if (!this_._internal_target_hyphen_id().empty()) {
            const std::string& _s = this_._internal_target_hyphen_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network_management.ConnectivityStatus.target_hyphen_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // .seigr.network.NetworkProtocol protocol = 3;
          if (this_._internal_protocol() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_protocol(), target);
          }

          // .seigr.network.HyphenStatus connection_status = 4;
          if (this_._internal_connection_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                4, this_._internal_connection_status(), target);
          }

          // string protocol_specific_id = 5;
          if (!this_._internal_protocol_specific_id().empty()) {
            const std::string& _s = this_._internal_protocol_specific_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network_management.ConnectivityStatus.protocol_specific_id");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // int32 latency_ms = 6;
          if (this_._internal_latency_ms() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<6>(
                    stream, this_._internal_latency_ms(), target);
          }

          // string timestamp = 7;
          if (!this_._internal_timestamp().empty()) {
            const std::string& _s = this_._internal_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network_management.ConnectivityStatus.timestamp");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // string error_message = 8;
          if (!this_._internal_error_message().empty()) {
            const std::string& _s = this_._internal_error_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network_management.ConnectivityStatus.error_message");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          // map<string, string> connection_metadata = 9;
          if (!this_._internal_connection_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_connection_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    9, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network_management.ConnectivityStatus.connection_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network_management.ConnectivityStatus.connection_metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    9, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network_management.ConnectivityStatus.connection_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network_management.ConnectivityStatus.connection_metadata");
              }
            }
          }

          // float packet_loss_rate = 10;
          if (::absl::bit_cast<::uint32_t>(this_._internal_packet_loss_rate()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                10, this_._internal_packet_loss_rate(), target);
          }

          // bool auto_re_routed = 11;
          if (this_._internal_auto_re_routed() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                11, this_._internal_auto_re_routed(), target);
          }

          // string re_route_path = 12;
          if (!this_._internal_re_route_path().empty()) {
            const std::string& _s = this_._internal_re_route_path();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network_management.ConnectivityStatus.re_route_path");
            target = stream->WriteStringMaybeAliased(12, _s, target);
          }

          // string alternative_protocol = 13;
          if (!this_._internal_alternative_protocol().empty()) {
            const std::string& _s = this_._internal_alternative_protocol();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network_management.ConnectivityStatus.alternative_protocol");
            target = stream->WriteStringMaybeAliased(13, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.network_management.ConnectivityStatus)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ConnectivityStatus::ByteSizeLong(const MessageLite& base) {
          const ConnectivityStatus& this_ = static_cast<const ConnectivityStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ConnectivityStatus::ByteSizeLong() const {
          const ConnectivityStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.network_management.ConnectivityStatus)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> connection_metadata = 9;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_connection_metadata_size());
              for (const auto& entry : this_._internal_connection_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string source_hyphen_id = 1;
            if (!this_._internal_source_hyphen_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_source_hyphen_id());
            }
            // string target_hyphen_id = 2;
            if (!this_._internal_target_hyphen_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_target_hyphen_id());
            }
            // string protocol_specific_id = 5;
            if (!this_._internal_protocol_specific_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_protocol_specific_id());
            }
            // string timestamp = 7;
            if (!this_._internal_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_timestamp());
            }
            // string error_message = 8;
            if (!this_._internal_error_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_error_message());
            }
            // string re_route_path = 12;
            if (!this_._internal_re_route_path().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_re_route_path());
            }
            // string alternative_protocol = 13;
            if (!this_._internal_alternative_protocol().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_alternative_protocol());
            }
            // .seigr.network.NetworkProtocol protocol = 3;
            if (this_._internal_protocol() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_protocol());
            }
            // .seigr.network.HyphenStatus connection_status = 4;
            if (this_._internal_connection_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_connection_status());
            }
            // int32 latency_ms = 6;
            if (this_._internal_latency_ms() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_latency_ms());
            }
            // float packet_loss_rate = 10;
            if (::absl::bit_cast<::uint32_t>(this_._internal_packet_loss_rate()) != 0) {
              total_size += 5;
            }
            // bool auto_re_routed = 11;
            if (this_._internal_auto_re_routed() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ConnectivityStatus::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ConnectivityStatus*>(&to_msg);
  auto& from = static_cast<const ConnectivityStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.network_management.ConnectivityStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.connection_metadata_.MergeFrom(from._impl_.connection_metadata_);
  if (!from._internal_source_hyphen_id().empty()) {
    _this->_internal_set_source_hyphen_id(from._internal_source_hyphen_id());
  }
  if (!from._internal_target_hyphen_id().empty()) {
    _this->_internal_set_target_hyphen_id(from._internal_target_hyphen_id());
  }
  if (!from._internal_protocol_specific_id().empty()) {
    _this->_internal_set_protocol_specific_id(from._internal_protocol_specific_id());
  }
  if (!from._internal_timestamp().empty()) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (!from._internal_error_message().empty()) {
    _this->_internal_set_error_message(from._internal_error_message());
  }
  if (!from._internal_re_route_path().empty()) {
    _this->_internal_set_re_route_path(from._internal_re_route_path());
  }
  if (!from._internal_alternative_protocol().empty()) {
    _this->_internal_set_alternative_protocol(from._internal_alternative_protocol());
  }
  if (from._internal_protocol() != 0) {
    _this->_impl_.protocol_ = from._impl_.protocol_;
  }
  if (from._internal_connection_status() != 0) {
    _this->_impl_.connection_status_ = from._impl_.connection_status_;
  }
  if (from._internal_latency_ms() != 0) {
    _this->_impl_.latency_ms_ = from._impl_.latency_ms_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_packet_loss_rate()) != 0) {
    _this->_impl_.packet_loss_rate_ = from._impl_.packet_loss_rate_;
  }
  if (from._internal_auto_re_routed() != 0) {
    _this->_impl_.auto_re_routed_ = from._impl_.auto_re_routed_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ConnectivityStatus::CopyFrom(const ConnectivityStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.network_management.ConnectivityStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ConnectivityStatus::InternalSwap(ConnectivityStatus* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.connection_metadata_.InternalSwap(&other->_impl_.connection_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.source_hyphen_id_, &other->_impl_.source_hyphen_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.target_hyphen_id_, &other->_impl_.target_hyphen_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.protocol_specific_id_, &other->_impl_.protocol_specific_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.timestamp_, &other->_impl_.timestamp_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_message_, &other->_impl_.error_message_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.re_route_path_, &other->_impl_.re_route_path_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.alternative_protocol_, &other->_impl_.alternative_protocol_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ConnectivityStatus, _impl_.auto_re_routed_)
      + sizeof(ConnectivityStatus::_impl_.auto_re_routed_)
      - PROTOBUF_FIELD_OFFSET(ConnectivityStatus, _impl_.protocol_)>(
          reinterpret_cast<char*>(&_impl_.protocol_),
          reinterpret_cast<char*>(&other->_impl_.protocol_));
}

::google::protobuf::Metadata ConnectivityStatus::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              DataSyncEvent_MetadataEntry_DoNotUse::DataSyncEvent_MetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              DataSyncEvent_MetadataEntry_DoNotUse::DataSyncEvent_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              DataSyncEvent_MetadataEntry_DoNotUse::DataSyncEvent_MetadataEntry_DoNotUse() : SuperType() {}
              DataSyncEvent_MetadataEntry_DoNotUse::DataSyncEvent_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* DataSyncEvent_MetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) DataSyncEvent_MetadataEntry_DoNotUse(arena);
              }
              constexpr auto DataSyncEvent_MetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(DataSyncEvent_MetadataEntry_DoNotUse),
                                                          alignof(DataSyncEvent_MetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull DataSyncEvent_MetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_DataSyncEvent_MetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &DataSyncEvent_MetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<DataSyncEvent_MetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &DataSyncEvent_MetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &DataSyncEvent_MetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(DataSyncEvent_MetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &DataSyncEvent_MetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_network_5fmanagement_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* DataSyncEvent_MetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 69, 2> DataSyncEvent_MetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DataSyncEvent_MetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::network_management::DataSyncEvent_MetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DataSyncEvent_MetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DataSyncEvent_MetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(DataSyncEvent_MetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(DataSyncEvent_MetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\64\3\5\0\0\0\0\0"
    "seigr.network_management.DataSyncEvent.MetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class DataSyncEvent::_Internal {
 public:
};

DataSyncEvent::DataSyncEvent(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.network_management.DataSyncEvent)
}
inline PROTOBUF_NDEBUG_INLINE DataSyncEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::network_management::DataSyncEvent& from_msg)
      : metadata_{visibility, arena, from.metadata_},
        sync_id_(arena, from.sync_id_),
        source_hyphen_id_(arena, from.source_hyphen_id_),
        target_hyphen_id_(arena, from.target_hyphen_id_),
        data_hash_(arena, from.data_hash_),
        timestamp_(arena, from.timestamp_),
        adaptive_bandwidth_used_(arena, from.adaptive_bandwidth_used_),
        redundancy_applied_(arena, from.redundancy_applied_),
        _cached_size_{0} {}

DataSyncEvent::DataSyncEvent(
    ::google::protobuf::Arena* arena,
    const DataSyncEvent& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DataSyncEvent* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, protocol_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, protocol_),
           offsetof(Impl_, network_load_factor_) -
               offsetof(Impl_, protocol_) +
               sizeof(Impl_::network_load_factor_));

  // @@protoc_insertion_point(copy_constructor:seigr.network_management.DataSyncEvent)
}
inline PROTOBUF_NDEBUG_INLINE DataSyncEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : metadata_{visibility, arena},
        sync_id_(arena),
        source_hyphen_id_(arena),
        target_hyphen_id_(arena),
        data_hash_(arena),
        timestamp_(arena),
        adaptive_bandwidth_used_(arena),
        redundancy_applied_(arena),
        _cached_size_{0} {}

inline void DataSyncEvent::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, protocol_),
           0,
           offsetof(Impl_, network_load_factor_) -
               offsetof(Impl_, protocol_) +
               sizeof(Impl_::network_load_factor_));
}
DataSyncEvent::~DataSyncEvent() {
  // @@protoc_insertion_point(destructor:seigr.network_management.DataSyncEvent)
  SharedDtor(*this);
}
inline void DataSyncEvent::SharedDtor(MessageLite& self) {
  DataSyncEvent& this_ = static_cast<DataSyncEvent&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.sync_id_.Destroy();
  this_._impl_.source_hyphen_id_.Destroy();
  this_._impl_.target_hyphen_id_.Destroy();
  this_._impl_.data_hash_.Destroy();
  this_._impl_.timestamp_.Destroy();
  this_._impl_.adaptive_bandwidth_used_.Destroy();
  this_._impl_.redundancy_applied_.Destroy();
  this_._impl_.~Impl_();
}

inline void* DataSyncEvent::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DataSyncEvent(arena);
}
constexpr auto DataSyncEvent::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(DataSyncEvent, _impl_.metadata_) +
          decltype(DataSyncEvent::_impl_.metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(DataSyncEvent, _impl_.metadata_) +
          decltype(DataSyncEvent::_impl_.metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(DataSyncEvent), alignof(DataSyncEvent), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&DataSyncEvent::PlacementNew_,
                                 sizeof(DataSyncEvent),
                                 alignof(DataSyncEvent));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DataSyncEvent::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DataSyncEvent_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DataSyncEvent::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DataSyncEvent>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DataSyncEvent::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DataSyncEvent>(), &DataSyncEvent::ByteSizeLong,
            &DataSyncEvent::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DataSyncEvent, _impl_._cached_size_),
        false,
    },
    &DataSyncEvent::kDescriptorMethods,
    &descriptor_table_network_5fmanagement_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DataSyncEvent::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 14, 1, 161, 2> DataSyncEvent::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    14, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294950912,  // skipmap
    offsetof(decltype(_table_), field_entries),
    14,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::network_management::DataSyncEvent>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string sync_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DataSyncEvent, _impl_.sync_id_)}},
    // string source_hyphen_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DataSyncEvent, _impl_.source_hyphen_id_)}},
    // string target_hyphen_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(DataSyncEvent, _impl_.target_hyphen_id_)}},
    // .seigr.network.NetworkProtocol protocol = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DataSyncEvent, _impl_.protocol_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(DataSyncEvent, _impl_.protocol_)}},
    // string data_hash = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(DataSyncEvent, _impl_.data_hash_)}},
    // .seigr.network_management.SyncType sync_type = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DataSyncEvent, _impl_.sync_type_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(DataSyncEvent, _impl_.sync_type_)}},
    // bool success = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(DataSyncEvent, _impl_.success_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(DataSyncEvent, _impl_.success_)}},
    // string timestamp = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(DataSyncEvent, _impl_.timestamp_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // int64 data_size_bytes = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DataSyncEvent, _impl_.data_size_bytes_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(DataSyncEvent, _impl_.data_size_bytes_)}},
    // int32 retries = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DataSyncEvent, _impl_.retries_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(DataSyncEvent, _impl_.retries_)}},
    // string adaptive_bandwidth_used = 12;
    {::_pbi::TcParser::FastUS1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(DataSyncEvent, _impl_.adaptive_bandwidth_used_)}},
    // string redundancy_applied = 13;
    {::_pbi::TcParser::FastUS1,
     {106, 63, 0, PROTOBUF_FIELD_OFFSET(DataSyncEvent, _impl_.redundancy_applied_)}},
    // float network_load_factor = 14;
    {::_pbi::TcParser::FastF32S1,
     {117, 63, 0, PROTOBUF_FIELD_OFFSET(DataSyncEvent, _impl_.network_load_factor_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string sync_id = 1;
    {PROTOBUF_FIELD_OFFSET(DataSyncEvent, _impl_.sync_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string source_hyphen_id = 2;
    {PROTOBUF_FIELD_OFFSET(DataSyncEvent, _impl_.source_hyphen_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string target_hyphen_id = 3;
    {PROTOBUF_FIELD_OFFSET(DataSyncEvent, _impl_.target_hyphen_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.network.NetworkProtocol protocol = 4;
    {PROTOBUF_FIELD_OFFSET(DataSyncEvent, _impl_.protocol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string data_hash = 5;
    {PROTOBUF_FIELD_OFFSET(DataSyncEvent, _impl_.data_hash_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.network_management.SyncType sync_type = 6;
    {PROTOBUF_FIELD_OFFSET(DataSyncEvent, _impl_.sync_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // bool success = 7;
    {PROTOBUF_FIELD_OFFSET(DataSyncEvent, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string timestamp = 8;
    {PROTOBUF_FIELD_OFFSET(DataSyncEvent, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> metadata = 9;
    {PROTOBUF_FIELD_OFFSET(DataSyncEvent, _impl_.metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // int64 data_size_bytes = 10;
    {PROTOBUF_FIELD_OFFSET(DataSyncEvent, _impl_.data_size_bytes_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int32 retries = 11;
    {PROTOBUF_FIELD_OFFSET(DataSyncEvent, _impl_.retries_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string adaptive_bandwidth_used = 12;
    {PROTOBUF_FIELD_OFFSET(DataSyncEvent, _impl_.adaptive_bandwidth_used_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string redundancy_applied = 13;
    {PROTOBUF_FIELD_OFFSET(DataSyncEvent, _impl_.redundancy_applied_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // float network_load_factor = 14;
    {PROTOBUF_FIELD_OFFSET(DataSyncEvent, _impl_.network_load_factor_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(DataSyncEvent()._impl_.metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\46\7\20\20\0\11\0\0\11\10\0\0\27\22\0\0"
    "seigr.network_management.DataSyncEvent"
    "sync_id"
    "source_hyphen_id"
    "target_hyphen_id"
    "data_hash"
    "timestamp"
    "metadata"
    "adaptive_bandwidth_used"
    "redundancy_applied"
  }},
};

PROTOBUF_NOINLINE void DataSyncEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.network_management.DataSyncEvent)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.metadata_.Clear();
  _impl_.sync_id_.ClearToEmpty();
  _impl_.source_hyphen_id_.ClearToEmpty();
  _impl_.target_hyphen_id_.ClearToEmpty();
  _impl_.data_hash_.ClearToEmpty();
  _impl_.timestamp_.ClearToEmpty();
  _impl_.adaptive_bandwidth_used_.ClearToEmpty();
  _impl_.redundancy_applied_.ClearToEmpty();
  ::memset(&_impl_.protocol_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.network_load_factor_) -
      reinterpret_cast<char*>(&_impl_.protocol_)) + sizeof(_impl_.network_load_factor_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DataSyncEvent::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DataSyncEvent& this_ = static_cast<const DataSyncEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DataSyncEvent::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DataSyncEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.network_management.DataSyncEvent)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string sync_id = 1;
          if (!this_._internal_sync_id().empty()) {
            const std::string& _s = this_._internal_sync_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network_management.DataSyncEvent.sync_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string source_hyphen_id = 2;
          if (!this_._internal_source_hyphen_id().empty()) {
            const std::string& _s = this_._internal_source_hyphen_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network_management.DataSyncEvent.source_hyphen_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string target_hyphen_id = 3;
          if (!this_._internal_target_hyphen_id().empty()) {
            const std::string& _s = this_._internal_target_hyphen_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network_management.DataSyncEvent.target_hyphen_id");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // .seigr.network.NetworkProtocol protocol = 4;
          if (this_._internal_protocol() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                4, this_._internal_protocol(), target);
          }

          // string data_hash = 5;
          if (!this_._internal_data_hash().empty()) {
            const std::string& _s = this_._internal_data_hash();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network_management.DataSyncEvent.data_hash");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // .seigr.network_management.SyncType sync_type = 6;
          if (this_._internal_sync_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                6, this_._internal_sync_type(), target);
          }

          // bool success = 7;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                7, this_._internal_success(), target);
          }

          // string timestamp = 8;
          if (!this_._internal_timestamp().empty()) {
            const std::string& _s = this_._internal_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network_management.DataSyncEvent.timestamp");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          // map<string, string> metadata = 9;
          if (!this_._internal_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    9, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network_management.DataSyncEvent.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network_management.DataSyncEvent.metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    9, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network_management.DataSyncEvent.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network_management.DataSyncEvent.metadata");
              }
            }
          }

          // int64 data_size_bytes = 10;
          if (this_._internal_data_size_bytes() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<10>(
                    stream, this_._internal_data_size_bytes(), target);
          }

          // int32 retries = 11;
          if (this_._internal_retries() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<11>(
                    stream, this_._internal_retries(), target);
          }

          // string adaptive_bandwidth_used = 12;
          if (!this_._internal_adaptive_bandwidth_used().empty()) {
            const std::string& _s = this_._internal_adaptive_bandwidth_used();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network_management.DataSyncEvent.adaptive_bandwidth_used");
            target = stream->WriteStringMaybeAliased(12, _s, target);
          }

          // string redundancy_applied = 13;
          if (!this_._internal_redundancy_applied().empty()) {
            const std::string& _s = this_._internal_redundancy_applied();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network_management.DataSyncEvent.redundancy_applied");
            target = stream->WriteStringMaybeAliased(13, _s, target);
          }

          // float network_load_factor = 14;
          if (::absl::bit_cast<::uint32_t>(this_._internal_network_load_factor()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                14, this_._internal_network_load_factor(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.network_management.DataSyncEvent)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DataSyncEvent::ByteSizeLong(const MessageLite& base) {
          const DataSyncEvent& this_ = static_cast<const DataSyncEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DataSyncEvent::ByteSizeLong() const {
          const DataSyncEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.network_management.DataSyncEvent)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> metadata = 9;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_metadata_size());
              for (const auto& entry : this_._internal_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string sync_id = 1;
            if (!this_._internal_sync_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_sync_id());
            }
            // string source_hyphen_id = 2;
            if (!this_._internal_source_hyphen_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_source_hyphen_id());
            }
            // string target_hyphen_id = 3;
            if (!this_._internal_target_hyphen_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_target_hyphen_id());
            }
            // string data_hash = 5;
            if (!this_._internal_data_hash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_data_hash());
            }
            // string timestamp = 8;
            if (!this_._internal_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_timestamp());
            }
            // string adaptive_bandwidth_used = 12;
            if (!this_._internal_adaptive_bandwidth_used().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_adaptive_bandwidth_used());
            }
            // string redundancy_applied = 13;
            if (!this_._internal_redundancy_applied().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_redundancy_applied());
            }
            // .seigr.network.NetworkProtocol protocol = 4;
            if (this_._internal_protocol() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_protocol());
            }
            // .seigr.network_management.SyncType sync_type = 6;
            if (this_._internal_sync_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_sync_type());
            }
            // bool success = 7;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
            // int32 retries = 11;
            if (this_._internal_retries() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_retries());
            }
            // int64 data_size_bytes = 10;
            if (this_._internal_data_size_bytes() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_data_size_bytes());
            }
            // float network_load_factor = 14;
            if (::absl::bit_cast<::uint32_t>(this_._internal_network_load_factor()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DataSyncEvent::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DataSyncEvent*>(&to_msg);
  auto& from = static_cast<const DataSyncEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.network_management.DataSyncEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.metadata_.MergeFrom(from._impl_.metadata_);
  if (!from._internal_sync_id().empty()) {
    _this->_internal_set_sync_id(from._internal_sync_id());
  }
  if (!from._internal_source_hyphen_id().empty()) {
    _this->_internal_set_source_hyphen_id(from._internal_source_hyphen_id());
  }
  if (!from._internal_target_hyphen_id().empty()) {
    _this->_internal_set_target_hyphen_id(from._internal_target_hyphen_id());
  }
  if (!from._internal_data_hash().empty()) {
    _this->_internal_set_data_hash(from._internal_data_hash());
  }
  if (!from._internal_timestamp().empty()) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (!from._internal_adaptive_bandwidth_used().empty()) {
    _this->_internal_set_adaptive_bandwidth_used(from._internal_adaptive_bandwidth_used());
  }
  if (!from._internal_redundancy_applied().empty()) {
    _this->_internal_set_redundancy_applied(from._internal_redundancy_applied());
  }
  if (from._internal_protocol() != 0) {
    _this->_impl_.protocol_ = from._impl_.protocol_;
  }
  if (from._internal_sync_type() != 0) {
    _this->_impl_.sync_type_ = from._impl_.sync_type_;
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  if (from._internal_retries() != 0) {
    _this->_impl_.retries_ = from._impl_.retries_;
  }
  if (from._internal_data_size_bytes() != 0) {
    _this->_impl_.data_size_bytes_ = from._impl_.data_size_bytes_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_network_load_factor()) != 0) {
    _this->_impl_.network_load_factor_ = from._impl_.network_load_factor_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DataSyncEvent::CopyFrom(const DataSyncEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.network_management.DataSyncEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DataSyncEvent::InternalSwap(DataSyncEvent* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.metadata_.InternalSwap(&other->_impl_.metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sync_id_, &other->_impl_.sync_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.source_hyphen_id_, &other->_impl_.source_hyphen_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.target_hyphen_id_, &other->_impl_.target_hyphen_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_hash_, &other->_impl_.data_hash_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.timestamp_, &other->_impl_.timestamp_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.adaptive_bandwidth_used_, &other->_impl_.adaptive_bandwidth_used_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.redundancy_applied_, &other->_impl_.redundancy_applied_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DataSyncEvent, _impl_.network_load_factor_)
      + sizeof(DataSyncEvent::_impl_.network_load_factor_)
      - PROTOBUF_FIELD_OFFSET(DataSyncEvent, _impl_.protocol_)>(
          reinterpret_cast<char*>(&_impl_.protocol_),
          reinterpret_cast<char*>(&other->_impl_.protocol_));
}

::google::protobuf::Metadata DataSyncEvent::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              NetworkAnomalyAlert_MetadataEntry_DoNotUse::NetworkAnomalyAlert_MetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              NetworkAnomalyAlert_MetadataEntry_DoNotUse::NetworkAnomalyAlert_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              NetworkAnomalyAlert_MetadataEntry_DoNotUse::NetworkAnomalyAlert_MetadataEntry_DoNotUse() : SuperType() {}
              NetworkAnomalyAlert_MetadataEntry_DoNotUse::NetworkAnomalyAlert_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* NetworkAnomalyAlert_MetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) NetworkAnomalyAlert_MetadataEntry_DoNotUse(arena);
              }
              constexpr auto NetworkAnomalyAlert_MetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(NetworkAnomalyAlert_MetadataEntry_DoNotUse),
                                                          alignof(NetworkAnomalyAlert_MetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull NetworkAnomalyAlert_MetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_NetworkAnomalyAlert_MetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &NetworkAnomalyAlert_MetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<NetworkAnomalyAlert_MetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &NetworkAnomalyAlert_MetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &NetworkAnomalyAlert_MetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(NetworkAnomalyAlert_MetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &NetworkAnomalyAlert_MetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_network_5fmanagement_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* NetworkAnomalyAlert_MetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 75, 2> NetworkAnomalyAlert_MetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NetworkAnomalyAlert_MetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::network_management::NetworkAnomalyAlert_MetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkAnomalyAlert_MetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkAnomalyAlert_MetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(NetworkAnomalyAlert_MetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(NetworkAnomalyAlert_MetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\72\3\5\0\0\0\0\0"
    "seigr.network_management.NetworkAnomalyAlert.MetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class NetworkAnomalyAlert::_Internal {
 public:
};

NetworkAnomalyAlert::NetworkAnomalyAlert(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.network_management.NetworkAnomalyAlert)
}
inline PROTOBUF_NDEBUG_INLINE NetworkAnomalyAlert::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::network_management::NetworkAnomalyAlert& from_msg)
      : metadata_{visibility, arena, from.metadata_},
        alert_id_(arena, from.alert_id_),
        detected_by_(arena, from.detected_by_),
        description_(arena, from.description_),
        timestamp_(arena, from.timestamp_),
        _cached_size_{0} {}

NetworkAnomalyAlert::NetworkAnomalyAlert(
    ::google::protobuf::Arena* arena,
    const NetworkAnomalyAlert& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NetworkAnomalyAlert* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.threat_level_ = from._impl_.threat_level_;

  // @@protoc_insertion_point(copy_constructor:seigr.network_management.NetworkAnomalyAlert)
}
inline PROTOBUF_NDEBUG_INLINE NetworkAnomalyAlert::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : metadata_{visibility, arena},
        alert_id_(arena),
        detected_by_(arena),
        description_(arena),
        timestamp_(arena),
        _cached_size_{0} {}

inline void NetworkAnomalyAlert::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.threat_level_ = {};
}
NetworkAnomalyAlert::~NetworkAnomalyAlert() {
  // @@protoc_insertion_point(destructor:seigr.network_management.NetworkAnomalyAlert)
  SharedDtor(*this);
}
inline void NetworkAnomalyAlert::SharedDtor(MessageLite& self) {
  NetworkAnomalyAlert& this_ = static_cast<NetworkAnomalyAlert&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.alert_id_.Destroy();
  this_._impl_.detected_by_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.timestamp_.Destroy();
  this_._impl_.~Impl_();
}

inline void* NetworkAnomalyAlert::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) NetworkAnomalyAlert(arena);
}
constexpr auto NetworkAnomalyAlert::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(NetworkAnomalyAlert, _impl_.metadata_) +
          decltype(NetworkAnomalyAlert::_impl_.metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(NetworkAnomalyAlert, _impl_.metadata_) +
          decltype(NetworkAnomalyAlert::_impl_.metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(NetworkAnomalyAlert), alignof(NetworkAnomalyAlert), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&NetworkAnomalyAlert::PlacementNew_,
                                 sizeof(NetworkAnomalyAlert),
                                 alignof(NetworkAnomalyAlert));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull NetworkAnomalyAlert::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_NetworkAnomalyAlert_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &NetworkAnomalyAlert::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<NetworkAnomalyAlert>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &NetworkAnomalyAlert::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<NetworkAnomalyAlert>(), &NetworkAnomalyAlert::ByteSizeLong,
            &NetworkAnomalyAlert::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(NetworkAnomalyAlert, _impl_._cached_size_),
        false,
    },
    &NetworkAnomalyAlert::kDescriptorMethods,
    &descriptor_table_network_5fmanagement_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* NetworkAnomalyAlert::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 100, 2> NetworkAnomalyAlert::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::network_management::NetworkAnomalyAlert>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string alert_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkAnomalyAlert, _impl_.alert_id_)}},
    // string detected_by = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkAnomalyAlert, _impl_.detected_by_)}},
    // .seigr.common.ThreatLevel threat_level = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NetworkAnomalyAlert, _impl_.threat_level_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkAnomalyAlert, _impl_.threat_level_)}},
    // string description = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkAnomalyAlert, _impl_.description_)}},
    // string timestamp = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkAnomalyAlert, _impl_.timestamp_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string alert_id = 1;
    {PROTOBUF_FIELD_OFFSET(NetworkAnomalyAlert, _impl_.alert_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string detected_by = 2;
    {PROTOBUF_FIELD_OFFSET(NetworkAnomalyAlert, _impl_.detected_by_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.common.ThreatLevel threat_level = 3;
    {PROTOBUF_FIELD_OFFSET(NetworkAnomalyAlert, _impl_.threat_level_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string description = 4;
    {PROTOBUF_FIELD_OFFSET(NetworkAnomalyAlert, _impl_.description_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string timestamp = 5;
    {PROTOBUF_FIELD_OFFSET(NetworkAnomalyAlert, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> metadata = 6;
    {PROTOBUF_FIELD_OFFSET(NetworkAnomalyAlert, _impl_.metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(NetworkAnomalyAlert()._impl_.metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\54\10\13\0\13\11\10\0"
    "seigr.network_management.NetworkAnomalyAlert"
    "alert_id"
    "detected_by"
    "description"
    "timestamp"
    "metadata"
  }},
};

PROTOBUF_NOINLINE void NetworkAnomalyAlert::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.network_management.NetworkAnomalyAlert)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.metadata_.Clear();
  _impl_.alert_id_.ClearToEmpty();
  _impl_.detected_by_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _impl_.timestamp_.ClearToEmpty();
  _impl_.threat_level_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* NetworkAnomalyAlert::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const NetworkAnomalyAlert& this_ = static_cast<const NetworkAnomalyAlert&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* NetworkAnomalyAlert::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const NetworkAnomalyAlert& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.network_management.NetworkAnomalyAlert)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string alert_id = 1;
          if (!this_._internal_alert_id().empty()) {
            const std::string& _s = this_._internal_alert_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network_management.NetworkAnomalyAlert.alert_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string detected_by = 2;
          if (!this_._internal_detected_by().empty()) {
            const std::string& _s = this_._internal_detected_by();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network_management.NetworkAnomalyAlert.detected_by");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // .seigr.common.ThreatLevel threat_level = 3;
          if (this_._internal_threat_level() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_threat_level(), target);
          }

          // string description = 4;
          if (!this_._internal_description().empty()) {
            const std::string& _s = this_._internal_description();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network_management.NetworkAnomalyAlert.description");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string timestamp = 5;
          if (!this_._internal_timestamp().empty()) {
            const std::string& _s = this_._internal_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network_management.NetworkAnomalyAlert.timestamp");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // map<string, string> metadata = 6;
          if (!this_._internal_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network_management.NetworkAnomalyAlert.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network_management.NetworkAnomalyAlert.metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network_management.NetworkAnomalyAlert.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.network_management.NetworkAnomalyAlert.metadata");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.network_management.NetworkAnomalyAlert)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t NetworkAnomalyAlert::ByteSizeLong(const MessageLite& base) {
          const NetworkAnomalyAlert& this_ = static_cast<const NetworkAnomalyAlert&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t NetworkAnomalyAlert::ByteSizeLong() const {
          const NetworkAnomalyAlert& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.network_management.NetworkAnomalyAlert)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> metadata = 6;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_metadata_size());
              for (const auto& entry : this_._internal_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string alert_id = 1;
            if (!this_._internal_alert_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_alert_id());
            }
            // string detected_by = 2;
            if (!this_._internal_detected_by().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_detected_by());
            }
            // string description = 4;
            if (!this_._internal_description().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_description());
            }
            // string timestamp = 5;
            if (!this_._internal_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_timestamp());
            }
            // .seigr.common.ThreatLevel threat_level = 3;
            if (this_._internal_threat_level() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_threat_level());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void NetworkAnomalyAlert::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NetworkAnomalyAlert*>(&to_msg);
  auto& from = static_cast<const NetworkAnomalyAlert&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.network_management.NetworkAnomalyAlert)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.metadata_.MergeFrom(from._impl_.metadata_);
  if (!from._internal_alert_id().empty()) {
    _this->_internal_set_alert_id(from._internal_alert_id());
  }
  if (!from._internal_detected_by().empty()) {
    _this->_internal_set_detected_by(from._internal_detected_by());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (!from._internal_timestamp().empty()) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (from._internal_threat_level() != 0) {
    _this->_impl_.threat_level_ = from._impl_.threat_level_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NetworkAnomalyAlert::CopyFrom(const NetworkAnomalyAlert& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.network_management.NetworkAnomalyAlert)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NetworkAnomalyAlert::InternalSwap(NetworkAnomalyAlert* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.metadata_.InternalSwap(&other->_impl_.metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.alert_id_, &other->_impl_.alert_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.detected_by_, &other->_impl_.detected_by_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.timestamp_, &other->_impl_.timestamp_, arena);
  swap(_impl_.threat_level_, other->_impl_.threat_level_);
}

::google::protobuf::Metadata NetworkAnomalyAlert::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace network_management
}  // namespace seigr
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_network_5fmanagement_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
