// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: alerting.proto
// Protobuf C++ Version: 5.29.2

#ifndef alerting_2eproto_2epb_2eh
#define alerting_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_alerting_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_alerting_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_alerting_2eproto;
namespace seigr {
namespace alerting {
class Alert;
struct AlertDefaultTypeInternal;
extern AlertDefaultTypeInternal _Alert_default_instance_;
class AlertContext;
struct AlertContextDefaultTypeInternal;
extern AlertContextDefaultTypeInternal _AlertContext_default_instance_;
class AlertContext_AdditionalContextEntry_DoNotUse;
struct AlertContext_AdditionalContextEntry_DoNotUseDefaultTypeInternal;
extern AlertContext_AdditionalContextEntry_DoNotUseDefaultTypeInternal _AlertContext_AdditionalContextEntry_DoNotUse_default_instance_;
class AlertEscalation;
struct AlertEscalationDefaultTypeInternal;
extern AlertEscalationDefaultTypeInternal _AlertEscalation_default_instance_;
class AlertEscalationChain;
struct AlertEscalationChainDefaultTypeInternal;
extern AlertEscalationChainDefaultTypeInternal _AlertEscalationChain_default_instance_;
class AlertEscalation_MetadataEntry_DoNotUse;
struct AlertEscalation_MetadataEntry_DoNotUseDefaultTypeInternal;
extern AlertEscalation_MetadataEntry_DoNotUseDefaultTypeInternal _AlertEscalation_MetadataEntry_DoNotUse_default_instance_;
class AlertLog;
struct AlertLogDefaultTypeInternal;
extern AlertLogDefaultTypeInternal _AlertLog_default_instance_;
class AlertLog_MetadataEntry_DoNotUse;
struct AlertLog_MetadataEntry_DoNotUseDefaultTypeInternal;
extern AlertLog_MetadataEntry_DoNotUseDefaultTypeInternal _AlertLog_MetadataEntry_DoNotUse_default_instance_;
class AlertMetadata;
struct AlertMetadataDefaultTypeInternal;
extern AlertMetadataDefaultTypeInternal _AlertMetadata_default_instance_;
class AlertNotificationConfig;
struct AlertNotificationConfigDefaultTypeInternal;
extern AlertNotificationConfigDefaultTypeInternal _AlertNotificationConfig_default_instance_;
class AlertNotificationConfig_ChannelPreferencesEntry_DoNotUse;
struct AlertNotificationConfig_ChannelPreferencesEntry_DoNotUseDefaultTypeInternal;
extern AlertNotificationConfig_ChannelPreferencesEntry_DoNotUseDefaultTypeInternal _AlertNotificationConfig_ChannelPreferencesEntry_DoNotUse_default_instance_;
class AlertNotificationConfig_MetadataEntry_DoNotUse;
struct AlertNotificationConfig_MetadataEntry_DoNotUseDefaultTypeInternal;
extern AlertNotificationConfig_MetadataEntry_DoNotUseDefaultTypeInternal _AlertNotificationConfig_MetadataEntry_DoNotUse_default_instance_;
class AlertRequest;
struct AlertRequestDefaultTypeInternal;
extern AlertRequestDefaultTypeInternal _AlertRequest_default_instance_;
class AlertRequest_FiltersEntry_DoNotUse;
struct AlertRequest_FiltersEntry_DoNotUseDefaultTypeInternal;
extern AlertRequest_FiltersEntry_DoNotUseDefaultTypeInternal _AlertRequest_FiltersEntry_DoNotUse_default_instance_;
class AlertResolution;
struct AlertResolutionDefaultTypeInternal;
extern AlertResolutionDefaultTypeInternal _AlertResolution_default_instance_;
class AlertResolution_MetadataEntry_DoNotUse;
struct AlertResolution_MetadataEntry_DoNotUseDefaultTypeInternal;
extern AlertResolution_MetadataEntry_DoNotUseDefaultTypeInternal _AlertResolution_MetadataEntry_DoNotUse_default_instance_;
class AlertResponse;
struct AlertResponseDefaultTypeInternal;
extern AlertResponseDefaultTypeInternal _AlertResponse_default_instance_;
class AlertResponse_MetadataEntry_DoNotUse;
struct AlertResponse_MetadataEntry_DoNotUseDefaultTypeInternal;
extern AlertResponse_MetadataEntry_DoNotUseDefaultTypeInternal _AlertResponse_MetadataEntry_DoNotUse_default_instance_;
class AlertRule;
struct AlertRuleDefaultTypeInternal;
extern AlertRuleDefaultTypeInternal _AlertRule_default_instance_;
class AlertRule_MetadataEntry_DoNotUse;
struct AlertRule_MetadataEntry_DoNotUseDefaultTypeInternal;
extern AlertRule_MetadataEntry_DoNotUseDefaultTypeInternal _AlertRule_MetadataEntry_DoNotUse_default_instance_;
class Alert_MetadataEntry_DoNotUse;
struct Alert_MetadataEntry_DoNotUseDefaultTypeInternal;
extern Alert_MetadataEntry_DoNotUseDefaultTypeInternal _Alert_MetadataEntry_DoNotUse_default_instance_;
}  // namespace alerting
}  // namespace seigr
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace seigr {
namespace alerting {
enum AlertType : int {
  ALERT_TYPE_UNDEFINED = 0,
  ALERT_TYPE_SECURITY = 1,
  ALERT_TYPE_SYSTEM = 2,
  ALERT_TYPE_DATA_INTEGRITY = 3,
  ALERT_TYPE_NETWORK = 4,
  ALERT_TYPE_REPLICATION = 5,
  ALERT_TYPE_RESOURCE_USAGE = 6,
  ALERT_TYPE_CUSTOM = 7,
  AlertType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  AlertType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool AlertType_IsValid(int value);
extern const uint32_t AlertType_internal_data_[];
constexpr AlertType AlertType_MIN = static_cast<AlertType>(0);
constexpr AlertType AlertType_MAX = static_cast<AlertType>(7);
constexpr int AlertType_ARRAYSIZE = 7 + 1;
const ::google::protobuf::EnumDescriptor*
AlertType_descriptor();
template <typename T>
const std::string& AlertType_Name(T value) {
  static_assert(std::is_same<T, AlertType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to AlertType_Name().");
  return AlertType_Name(static_cast<AlertType>(value));
}
template <>
inline const std::string& AlertType_Name(AlertType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<AlertType_descriptor,
                                                 0, 7>(
      static_cast<int>(value));
}
inline bool AlertType_Parse(absl::string_view name, AlertType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AlertType>(
      AlertType_descriptor(), name, value);
}
enum AlertSeverity : int {
  ALERT_SEVERITY_UNDEFINED = 0,
  ALERT_SEVERITY_INFO = 1,
  ALERT_SEVERITY_WARNING = 2,
  ALERT_SEVERITY_CRITICAL = 3,
  ALERT_SEVERITY_FATAL = 4,
  ALERT_SEVERITY_ERROR = 5,
  AlertSeverity_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  AlertSeverity_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool AlertSeverity_IsValid(int value);
extern const uint32_t AlertSeverity_internal_data_[];
constexpr AlertSeverity AlertSeverity_MIN = static_cast<AlertSeverity>(0);
constexpr AlertSeverity AlertSeverity_MAX = static_cast<AlertSeverity>(5);
constexpr int AlertSeverity_ARRAYSIZE = 5 + 1;
const ::google::protobuf::EnumDescriptor*
AlertSeverity_descriptor();
template <typename T>
const std::string& AlertSeverity_Name(T value) {
  static_assert(std::is_same<T, AlertSeverity>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to AlertSeverity_Name().");
  return AlertSeverity_Name(static_cast<AlertSeverity>(value));
}
template <>
inline const std::string& AlertSeverity_Name(AlertSeverity value) {
  return ::google::protobuf::internal::NameOfDenseEnum<AlertSeverity_descriptor,
                                                 0, 5>(
      static_cast<int>(value));
}
inline bool AlertSeverity_Parse(absl::string_view name, AlertSeverity* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AlertSeverity>(
      AlertSeverity_descriptor(), name, value);
}
enum AlertTriggerSource : int {
  ALERT_TRIGGER_UNDEFINED = 0,
  ALERT_TRIGGER_AUTOMATED = 1,
  ALERT_TRIGGER_MANUAL = 2,
  ALERT_TRIGGER_EXTERNAL = 3,
  AlertTriggerSource_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  AlertTriggerSource_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool AlertTriggerSource_IsValid(int value);
extern const uint32_t AlertTriggerSource_internal_data_[];
constexpr AlertTriggerSource AlertTriggerSource_MIN = static_cast<AlertTriggerSource>(0);
constexpr AlertTriggerSource AlertTriggerSource_MAX = static_cast<AlertTriggerSource>(3);
constexpr int AlertTriggerSource_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
AlertTriggerSource_descriptor();
template <typename T>
const std::string& AlertTriggerSource_Name(T value) {
  static_assert(std::is_same<T, AlertTriggerSource>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to AlertTriggerSource_Name().");
  return AlertTriggerSource_Name(static_cast<AlertTriggerSource>(value));
}
template <>
inline const std::string& AlertTriggerSource_Name(AlertTriggerSource value) {
  return ::google::protobuf::internal::NameOfDenseEnum<AlertTriggerSource_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool AlertTriggerSource_Parse(absl::string_view name, AlertTriggerSource* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AlertTriggerSource>(
      AlertTriggerSource_descriptor(), name, value);
}
enum AlertAction : int {
  ALERT_ACTION_UNDEFINED = 0,
  ALERT_ACTION_AUTO_RECOVERED = 1,
  ALERT_ACTION_MANUAL_INTERVENTION = 2,
  ALERT_ACTION_ESCALATED = 3,
  ALERT_ACTION_IGNORED = 4,
  AlertAction_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  AlertAction_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool AlertAction_IsValid(int value);
extern const uint32_t AlertAction_internal_data_[];
constexpr AlertAction AlertAction_MIN = static_cast<AlertAction>(0);
constexpr AlertAction AlertAction_MAX = static_cast<AlertAction>(4);
constexpr int AlertAction_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor*
AlertAction_descriptor();
template <typename T>
const std::string& AlertAction_Name(T value) {
  static_assert(std::is_same<T, AlertAction>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to AlertAction_Name().");
  return AlertAction_Name(static_cast<AlertAction>(value));
}
template <>
inline const std::string& AlertAction_Name(AlertAction value) {
  return ::google::protobuf::internal::NameOfDenseEnum<AlertAction_descriptor,
                                                 0, 4>(
      static_cast<int>(value));
}
inline bool AlertAction_Parse(absl::string_view name, AlertAction* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AlertAction>(
      AlertAction_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class AlertRule_MetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  AlertRule_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AlertRule_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit AlertRule_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const AlertRule_MetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const AlertRule_MetadataEntry_DoNotUse*>(
        &_AlertRule_MetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_alerting_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      55, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class AlertResponse_MetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  AlertResponse_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AlertResponse_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit AlertResponse_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const AlertResponse_MetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const AlertResponse_MetadataEntry_DoNotUse*>(
        &_AlertResponse_MetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_alerting_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      59, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class AlertResolution_MetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  AlertResolution_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AlertResolution_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit AlertResolution_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const AlertResolution_MetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const AlertResolution_MetadataEntry_DoNotUse*>(
        &_AlertResolution_MetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_alerting_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      61, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class AlertRequest_FiltersEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  AlertRequest_FiltersEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AlertRequest_FiltersEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit AlertRequest_FiltersEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const AlertRequest_FiltersEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const AlertRequest_FiltersEntry_DoNotUse*>(
        &_AlertRequest_FiltersEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_alerting_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      57, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class AlertNotificationConfig_MetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  AlertNotificationConfig_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AlertNotificationConfig_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit AlertNotificationConfig_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const AlertNotificationConfig_MetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const AlertNotificationConfig_MetadataEntry_DoNotUse*>(
        &_AlertNotificationConfig_MetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_alerting_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      69, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class AlertNotificationConfig_ChannelPreferencesEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, bool,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_BOOL> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, bool,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>;
  AlertNotificationConfig_ChannelPreferencesEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AlertNotificationConfig_ChannelPreferencesEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit AlertNotificationConfig_ChannelPreferencesEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const AlertNotificationConfig_ChannelPreferencesEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const AlertNotificationConfig_ChannelPreferencesEntry_DoNotUse*>(
        &_AlertNotificationConfig_ChannelPreferencesEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_alerting_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      74, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class AlertMetadata final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.alerting.AlertMetadata) */ {
 public:
  inline AlertMetadata() : AlertMetadata(nullptr) {}
  ~AlertMetadata() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AlertMetadata* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AlertMetadata));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AlertMetadata(
      ::google::protobuf::internal::ConstantInitialized);

  inline AlertMetadata(const AlertMetadata& from) : AlertMetadata(nullptr, from) {}
  inline AlertMetadata(AlertMetadata&& from) noexcept
      : AlertMetadata(nullptr, std::move(from)) {}
  inline AlertMetadata& operator=(const AlertMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline AlertMetadata& operator=(AlertMetadata&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AlertMetadata& default_instance() {
    return *internal_default_instance();
  }
  static inline const AlertMetadata* internal_default_instance() {
    return reinterpret_cast<const AlertMetadata*>(
        &_AlertMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(AlertMetadata& a, AlertMetadata& b) { a.Swap(&b); }
  inline void Swap(AlertMetadata* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AlertMetadata* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AlertMetadata* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AlertMetadata>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AlertMetadata& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AlertMetadata& from) { AlertMetadata::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AlertMetadata* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.alerting.AlertMetadata"; }

 protected:
  explicit AlertMetadata(::google::protobuf::Arena* arena);
  AlertMetadata(::google::protobuf::Arena* arena, const AlertMetadata& from);
  AlertMetadata(::google::protobuf::Arena* arena, AlertMetadata&& from) noexcept
      : AlertMetadata(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kKeyFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // string key = 1;
  void clear_key() ;
  const std::string& key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key(Arg_&& arg, Args_... args);
  std::string* mutable_key();
  PROTOBUF_NODISCARD std::string* release_key();
  void set_allocated_key(std::string* value);

  private:
  const std::string& _internal_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key(
      const std::string& value);
  std::string* _internal_mutable_key();

  public:
  // string value = 2;
  void clear_value() ;
  const std::string& value() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_value(Arg_&& arg, Args_... args);
  std::string* mutable_value();
  PROTOBUF_NODISCARD std::string* release_value();
  void set_allocated_value(std::string* value);

  private:
  const std::string& _internal_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value(
      const std::string& value);
  std::string* _internal_mutable_value();

  public:
  // @@protoc_insertion_point(class_scope:seigr.alerting.AlertMetadata)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      45, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AlertMetadata& from_msg);
    ::google::protobuf::internal::ArenaStringPtr key_;
    ::google::protobuf::internal::ArenaStringPtr value_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_alerting_2eproto;
};
// -------------------------------------------------------------------

class AlertLog_MetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  AlertLog_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AlertLog_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit AlertLog_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const AlertLog_MetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const AlertLog_MetadataEntry_DoNotUse*>(
        &_AlertLog_MetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_alerting_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      54, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class AlertEscalation_MetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  AlertEscalation_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AlertEscalation_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit AlertEscalation_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const AlertEscalation_MetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const AlertEscalation_MetadataEntry_DoNotUse*>(
        &_AlertEscalation_MetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_alerting_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      61, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class AlertContext_AdditionalContextEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  AlertContext_AdditionalContextEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AlertContext_AdditionalContextEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit AlertContext_AdditionalContextEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const AlertContext_AdditionalContextEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const AlertContext_AdditionalContextEntry_DoNotUse*>(
        &_AlertContext_AdditionalContextEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_alerting_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      67, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class Alert_MetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  Alert_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Alert_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit Alert_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const Alert_MetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const Alert_MetadataEntry_DoNotUse*>(
        &_Alert_MetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_alerting_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      51, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class AlertRule final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.alerting.AlertRule) */ {
 public:
  inline AlertRule() : AlertRule(nullptr) {}
  ~AlertRule() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AlertRule* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AlertRule));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AlertRule(
      ::google::protobuf::internal::ConstantInitialized);

  inline AlertRule(const AlertRule& from) : AlertRule(nullptr, from) {}
  inline AlertRule(AlertRule&& from) noexcept
      : AlertRule(nullptr, std::move(from)) {}
  inline AlertRule& operator=(const AlertRule& from) {
    CopyFrom(from);
    return *this;
  }
  inline AlertRule& operator=(AlertRule&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AlertRule& default_instance() {
    return *internal_default_instance();
  }
  static inline const AlertRule* internal_default_instance() {
    return reinterpret_cast<const AlertRule*>(
        &_AlertRule_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(AlertRule& a, AlertRule& b) { a.Swap(&b); }
  inline void Swap(AlertRule* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AlertRule* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AlertRule* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AlertRule>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AlertRule& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AlertRule& from) { AlertRule::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AlertRule* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.alerting.AlertRule"; }

 protected:
  explicit AlertRule(::google::protobuf::Arena* arena);
  AlertRule(::google::protobuf::Arena* arena, const AlertRule& from);
  AlertRule(::google::protobuf::Arena* arena, AlertRule&& from) noexcept
      : AlertRule(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAlertRecipientsFieldNumber = 6,
    kMetadataFieldNumber = 8,
    kRuleIdFieldNumber = 1,
    kConditionExpressionFieldNumber = 4,
    kEscalationPolicyIdFieldNumber = 7,
    kAlertTypeFieldNumber = 2,
    kMinSeverityFieldNumber = 3,
    kIsEnabledFieldNumber = 5,
    kDynamicThresholdsEnabledFieldNumber = 9,
  };
  // repeated string alert_recipients = 6;
  int alert_recipients_size() const;
  private:
  int _internal_alert_recipients_size() const;

  public:
  void clear_alert_recipients() ;
  const std::string& alert_recipients(int index) const;
  std::string* mutable_alert_recipients(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_alert_recipients(int index, Arg_&& value, Args_... args);
  std::string* add_alert_recipients();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_alert_recipients(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& alert_recipients() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_alert_recipients();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_alert_recipients() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_alert_recipients();

  public:
  // map<string, string> metadata = 8;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // string rule_id = 1;
  void clear_rule_id() ;
  const std::string& rule_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_rule_id(Arg_&& arg, Args_... args);
  std::string* mutable_rule_id();
  PROTOBUF_NODISCARD std::string* release_rule_id();
  void set_allocated_rule_id(std::string* value);

  private:
  const std::string& _internal_rule_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_rule_id(
      const std::string& value);
  std::string* _internal_mutable_rule_id();

  public:
  // string condition_expression = 4;
  void clear_condition_expression() ;
  const std::string& condition_expression() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_condition_expression(Arg_&& arg, Args_... args);
  std::string* mutable_condition_expression();
  PROTOBUF_NODISCARD std::string* release_condition_expression();
  void set_allocated_condition_expression(std::string* value);

  private:
  const std::string& _internal_condition_expression() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_condition_expression(
      const std::string& value);
  std::string* _internal_mutable_condition_expression();

  public:
  // string escalation_policy_id = 7;
  void clear_escalation_policy_id() ;
  const std::string& escalation_policy_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_escalation_policy_id(Arg_&& arg, Args_... args);
  std::string* mutable_escalation_policy_id();
  PROTOBUF_NODISCARD std::string* release_escalation_policy_id();
  void set_allocated_escalation_policy_id(std::string* value);

  private:
  const std::string& _internal_escalation_policy_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_escalation_policy_id(
      const std::string& value);
  std::string* _internal_mutable_escalation_policy_id();

  public:
  // .seigr.alerting.AlertType alert_type = 2;
  void clear_alert_type() ;
  ::seigr::alerting::AlertType alert_type() const;
  void set_alert_type(::seigr::alerting::AlertType value);

  private:
  ::seigr::alerting::AlertType _internal_alert_type() const;
  void _internal_set_alert_type(::seigr::alerting::AlertType value);

  public:
  // .seigr.alerting.AlertSeverity min_severity = 3;
  void clear_min_severity() ;
  ::seigr::alerting::AlertSeverity min_severity() const;
  void set_min_severity(::seigr::alerting::AlertSeverity value);

  private:
  ::seigr::alerting::AlertSeverity _internal_min_severity() const;
  void _internal_set_min_severity(::seigr::alerting::AlertSeverity value);

  public:
  // bool is_enabled = 5;
  void clear_is_enabled() ;
  bool is_enabled() const;
  void set_is_enabled(bool value);

  private:
  bool _internal_is_enabled() const;
  void _internal_set_is_enabled(bool value);

  public:
  // bool dynamic_thresholds_enabled = 9;
  void clear_dynamic_thresholds_enabled() ;
  bool dynamic_thresholds_enabled() const;
  void set_dynamic_thresholds_enabled(bool value);

  private:
  bool _internal_dynamic_thresholds_enabled() const;
  void _internal_set_dynamic_thresholds_enabled(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.alerting.AlertRule)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 1,
      112, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AlertRule& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> alert_recipients_;
    ::google::protobuf::internal::MapField<AlertRule_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::internal::ArenaStringPtr rule_id_;
    ::google::protobuf::internal::ArenaStringPtr condition_expression_;
    ::google::protobuf::internal::ArenaStringPtr escalation_policy_id_;
    int alert_type_;
    int min_severity_;
    bool is_enabled_;
    bool dynamic_thresholds_enabled_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_alerting_2eproto;
};
// -------------------------------------------------------------------

class AlertResolution final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.alerting.AlertResolution) */ {
 public:
  inline AlertResolution() : AlertResolution(nullptr) {}
  ~AlertResolution() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AlertResolution* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AlertResolution));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AlertResolution(
      ::google::protobuf::internal::ConstantInitialized);

  inline AlertResolution(const AlertResolution& from) : AlertResolution(nullptr, from) {}
  inline AlertResolution(AlertResolution&& from) noexcept
      : AlertResolution(nullptr, std::move(from)) {}
  inline AlertResolution& operator=(const AlertResolution& from) {
    CopyFrom(from);
    return *this;
  }
  inline AlertResolution& operator=(AlertResolution&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AlertResolution& default_instance() {
    return *internal_default_instance();
  }
  static inline const AlertResolution* internal_default_instance() {
    return reinterpret_cast<const AlertResolution*>(
        &_AlertResolution_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(AlertResolution& a, AlertResolution& b) { a.Swap(&b); }
  inline void Swap(AlertResolution* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AlertResolution* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AlertResolution* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AlertResolution>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AlertResolution& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AlertResolution& from) { AlertResolution::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AlertResolution* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.alerting.AlertResolution"; }

 protected:
  explicit AlertResolution(::google::protobuf::Arena* arena);
  AlertResolution(::google::protobuf::Arena* arena, const AlertResolution& from);
  AlertResolution(::google::protobuf::Arena* arena, AlertResolution&& from) noexcept
      : AlertResolution(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMetadataFieldNumber = 5,
    kResolvedByIdFieldNumber = 1,
    kResolutionDetailsFieldNumber = 2,
    kResolvedAtFieldNumber = 3,
    kActionTakenFieldNumber = 4,
  };
  // map<string, string> metadata = 5;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // string resolved_by_id = 1;
  void clear_resolved_by_id() ;
  const std::string& resolved_by_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_resolved_by_id(Arg_&& arg, Args_... args);
  std::string* mutable_resolved_by_id();
  PROTOBUF_NODISCARD std::string* release_resolved_by_id();
  void set_allocated_resolved_by_id(std::string* value);

  private:
  const std::string& _internal_resolved_by_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_resolved_by_id(
      const std::string& value);
  std::string* _internal_mutable_resolved_by_id();

  public:
  // string resolution_details = 2;
  void clear_resolution_details() ;
  const std::string& resolution_details() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_resolution_details(Arg_&& arg, Args_... args);
  std::string* mutable_resolution_details();
  PROTOBUF_NODISCARD std::string* release_resolution_details();
  void set_allocated_resolution_details(std::string* value);

  private:
  const std::string& _internal_resolution_details() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_resolution_details(
      const std::string& value);
  std::string* _internal_mutable_resolution_details();

  public:
  // string resolved_at = 3;
  void clear_resolved_at() ;
  const std::string& resolved_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_resolved_at(Arg_&& arg, Args_... args);
  std::string* mutable_resolved_at();
  PROTOBUF_NODISCARD std::string* release_resolved_at();
  void set_allocated_resolved_at(std::string* value);

  private:
  const std::string& _internal_resolved_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_resolved_at(
      const std::string& value);
  std::string* _internal_mutable_resolved_at();

  public:
  // .seigr.alerting.AlertAction action_taken = 4;
  void clear_action_taken() ;
  ::seigr::alerting::AlertAction action_taken() const;
  void set_action_taken(::seigr::alerting::AlertAction value);

  private:
  ::seigr::alerting::AlertAction _internal_action_taken() const;
  void _internal_set_action_taken(::seigr::alerting::AlertAction value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.alerting.AlertResolution)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 5, 1,
      90, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AlertResolution& from_msg);
    ::google::protobuf::internal::MapField<AlertResolution_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::internal::ArenaStringPtr resolved_by_id_;
    ::google::protobuf::internal::ArenaStringPtr resolution_details_;
    ::google::protobuf::internal::ArenaStringPtr resolved_at_;
    int action_taken_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_alerting_2eproto;
};
// -------------------------------------------------------------------

class AlertRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.alerting.AlertRequest) */ {
 public:
  inline AlertRequest() : AlertRequest(nullptr) {}
  ~AlertRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AlertRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AlertRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AlertRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline AlertRequest(const AlertRequest& from) : AlertRequest(nullptr, from) {}
  inline AlertRequest(AlertRequest&& from) noexcept
      : AlertRequest(nullptr, std::move(from)) {}
  inline AlertRequest& operator=(const AlertRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AlertRequest& operator=(AlertRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AlertRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AlertRequest* internal_default_instance() {
    return reinterpret_cast<const AlertRequest*>(
        &_AlertRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(AlertRequest& a, AlertRequest& b) { a.Swap(&b); }
  inline void Swap(AlertRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AlertRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AlertRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AlertRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AlertRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AlertRequest& from) { AlertRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AlertRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.alerting.AlertRequest"; }

 protected:
  explicit AlertRequest(::google::protobuf::Arena* arena);
  AlertRequest(::google::protobuf::Arena* arena, const AlertRequest& from);
  AlertRequest(::google::protobuf::Arena* arena, AlertRequest&& from) noexcept
      : AlertRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRequestedTypesFieldNumber = 1,
    kSourceComponentsFieldNumber = 5,
    kFiltersFieldNumber = 6,
    kStartTimeFilterFieldNumber = 3,
    kEndTimeFilterFieldNumber = 4,
    kMinSeverityFieldNumber = 2,
    kIncludeEscalationsFieldNumber = 7,
  };
  // repeated .seigr.alerting.AlertType requested_types = 1;
  int requested_types_size() const;
  private:
  int _internal_requested_types_size() const;

  public:
  void clear_requested_types() ;
  public:
  ::seigr::alerting::AlertType requested_types(int index) const;
  void set_requested_types(int index, ::seigr::alerting::AlertType value);
  void add_requested_types(::seigr::alerting::AlertType value);
  const ::google::protobuf::RepeatedField<int>& requested_types() const;
  ::google::protobuf::RepeatedField<int>* mutable_requested_types();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_requested_types() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_requested_types();

  public:
  // repeated string source_components = 5;
  int source_components_size() const;
  private:
  int _internal_source_components_size() const;

  public:
  void clear_source_components() ;
  const std::string& source_components(int index) const;
  std::string* mutable_source_components(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_source_components(int index, Arg_&& value, Args_... args);
  std::string* add_source_components();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_source_components(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& source_components() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_source_components();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_source_components() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_source_components();

  public:
  // map<string, string> filters = 6;
  int filters_size() const;
  private:
  int _internal_filters_size() const;

  public:
  void clear_filters() ;
  const ::google::protobuf::Map<std::string, std::string>& filters() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_filters();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_filters() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_filters();

  public:
  // string start_time_filter = 3;
  void clear_start_time_filter() ;
  const std::string& start_time_filter() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_start_time_filter(Arg_&& arg, Args_... args);
  std::string* mutable_start_time_filter();
  PROTOBUF_NODISCARD std::string* release_start_time_filter();
  void set_allocated_start_time_filter(std::string* value);

  private:
  const std::string& _internal_start_time_filter() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_start_time_filter(
      const std::string& value);
  std::string* _internal_mutable_start_time_filter();

  public:
  // string end_time_filter = 4;
  void clear_end_time_filter() ;
  const std::string& end_time_filter() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_end_time_filter(Arg_&& arg, Args_... args);
  std::string* mutable_end_time_filter();
  PROTOBUF_NODISCARD std::string* release_end_time_filter();
  void set_allocated_end_time_filter(std::string* value);

  private:
  const std::string& _internal_end_time_filter() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_end_time_filter(
      const std::string& value);
  std::string* _internal_mutable_end_time_filter();

  public:
  // .seigr.alerting.AlertSeverity min_severity = 2;
  void clear_min_severity() ;
  ::seigr::alerting::AlertSeverity min_severity() const;
  void set_min_severity(::seigr::alerting::AlertSeverity value);

  private:
  ::seigr::alerting::AlertSeverity _internal_min_severity() const;
  void _internal_set_min_severity(::seigr::alerting::AlertSeverity value);

  public:
  // bool include_escalations = 7;
  void clear_include_escalations() ;
  bool include_escalations() const;
  void set_include_escalations(bool value);

  private:
  bool _internal_include_escalations() const;
  void _internal_set_include_escalations(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.alerting.AlertRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 1,
      92, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AlertRequest& from_msg);
    ::google::protobuf::RepeatedField<int> requested_types_;
    ::google::protobuf::internal::CachedSize _requested_types_cached_byte_size_;
    ::google::protobuf::RepeatedPtrField<std::string> source_components_;
    ::google::protobuf::internal::MapField<AlertRequest_FiltersEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        filters_;
    ::google::protobuf::internal::ArenaStringPtr start_time_filter_;
    ::google::protobuf::internal::ArenaStringPtr end_time_filter_;
    int min_severity_;
    bool include_escalations_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_alerting_2eproto;
};
// -------------------------------------------------------------------

class AlertNotificationConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.alerting.AlertNotificationConfig) */ {
 public:
  inline AlertNotificationConfig() : AlertNotificationConfig(nullptr) {}
  ~AlertNotificationConfig() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AlertNotificationConfig* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AlertNotificationConfig));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AlertNotificationConfig(
      ::google::protobuf::internal::ConstantInitialized);

  inline AlertNotificationConfig(const AlertNotificationConfig& from) : AlertNotificationConfig(nullptr, from) {}
  inline AlertNotificationConfig(AlertNotificationConfig&& from) noexcept
      : AlertNotificationConfig(nullptr, std::move(from)) {}
  inline AlertNotificationConfig& operator=(const AlertNotificationConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline AlertNotificationConfig& operator=(AlertNotificationConfig&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AlertNotificationConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const AlertNotificationConfig* internal_default_instance() {
    return reinterpret_cast<const AlertNotificationConfig*>(
        &_AlertNotificationConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(AlertNotificationConfig& a, AlertNotificationConfig& b) { a.Swap(&b); }
  inline void Swap(AlertNotificationConfig* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AlertNotificationConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AlertNotificationConfig* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AlertNotificationConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AlertNotificationConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AlertNotificationConfig& from) { AlertNotificationConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AlertNotificationConfig* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.alerting.AlertNotificationConfig"; }

 protected:
  explicit AlertNotificationConfig(::google::protobuf::Arena* arena);
  AlertNotificationConfig(::google::protobuf::Arena* arena, const AlertNotificationConfig& from);
  AlertNotificationConfig(::google::protobuf::Arena* arena, AlertNotificationConfig&& from) noexcept
      : AlertNotificationConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDefaultRecipientsFieldNumber = 2,
    kAlertTypesFieldNumber = 3,
    kChannelPreferencesFieldNumber = 10,
    kMetadataFieldNumber = 11,
    kConfigIdFieldNumber = 1,
    kDoNotDisturbStartTimeFieldNumber = 8,
    kDoNotDisturbEndTimeFieldNumber = 9,
    kMinNotificationSeverityFieldNumber = 4,
    kEmailNotificationsEnabledFieldNumber = 5,
    kSmsNotificationsEnabledFieldNumber = 6,
    kPushNotificationsEnabledFieldNumber = 7,
  };
  // repeated string default_recipients = 2;
  int default_recipients_size() const;
  private:
  int _internal_default_recipients_size() const;

  public:
  void clear_default_recipients() ;
  const std::string& default_recipients(int index) const;
  std::string* mutable_default_recipients(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_default_recipients(int index, Arg_&& value, Args_... args);
  std::string* add_default_recipients();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_default_recipients(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& default_recipients() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_default_recipients();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_default_recipients() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_default_recipients();

  public:
  // repeated .seigr.alerting.AlertType alert_types = 3;
  int alert_types_size() const;
  private:
  int _internal_alert_types_size() const;

  public:
  void clear_alert_types() ;
  public:
  ::seigr::alerting::AlertType alert_types(int index) const;
  void set_alert_types(int index, ::seigr::alerting::AlertType value);
  void add_alert_types(::seigr::alerting::AlertType value);
  const ::google::protobuf::RepeatedField<int>& alert_types() const;
  ::google::protobuf::RepeatedField<int>* mutable_alert_types();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_alert_types() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_alert_types();

  public:
  // map<string, bool> channel_preferences = 10;
  int channel_preferences_size() const;
  private:
  int _internal_channel_preferences_size() const;

  public:
  void clear_channel_preferences() ;
  const ::google::protobuf::Map<std::string, bool>& channel_preferences() const;
  ::google::protobuf::Map<std::string, bool>* mutable_channel_preferences();

  private:
  const ::google::protobuf::Map<std::string, bool>& _internal_channel_preferences() const;
  ::google::protobuf::Map<std::string, bool>* _internal_mutable_channel_preferences();

  public:
  // map<string, string> metadata = 11;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // string config_id = 1;
  void clear_config_id() ;
  const std::string& config_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_config_id(Arg_&& arg, Args_... args);
  std::string* mutable_config_id();
  PROTOBUF_NODISCARD std::string* release_config_id();
  void set_allocated_config_id(std::string* value);

  private:
  const std::string& _internal_config_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_config_id(
      const std::string& value);
  std::string* _internal_mutable_config_id();

  public:
  // string do_not_disturb_start_time = 8;
  void clear_do_not_disturb_start_time() ;
  const std::string& do_not_disturb_start_time() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_do_not_disturb_start_time(Arg_&& arg, Args_... args);
  std::string* mutable_do_not_disturb_start_time();
  PROTOBUF_NODISCARD std::string* release_do_not_disturb_start_time();
  void set_allocated_do_not_disturb_start_time(std::string* value);

  private:
  const std::string& _internal_do_not_disturb_start_time() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_do_not_disturb_start_time(
      const std::string& value);
  std::string* _internal_mutable_do_not_disturb_start_time();

  public:
  // string do_not_disturb_end_time = 9;
  void clear_do_not_disturb_end_time() ;
  const std::string& do_not_disturb_end_time() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_do_not_disturb_end_time(Arg_&& arg, Args_... args);
  std::string* mutable_do_not_disturb_end_time();
  PROTOBUF_NODISCARD std::string* release_do_not_disturb_end_time();
  void set_allocated_do_not_disturb_end_time(std::string* value);

  private:
  const std::string& _internal_do_not_disturb_end_time() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_do_not_disturb_end_time(
      const std::string& value);
  std::string* _internal_mutable_do_not_disturb_end_time();

  public:
  // .seigr.alerting.AlertSeverity min_notification_severity = 4;
  void clear_min_notification_severity() ;
  ::seigr::alerting::AlertSeverity min_notification_severity() const;
  void set_min_notification_severity(::seigr::alerting::AlertSeverity value);

  private:
  ::seigr::alerting::AlertSeverity _internal_min_notification_severity() const;
  void _internal_set_min_notification_severity(::seigr::alerting::AlertSeverity value);

  public:
  // bool email_notifications_enabled = 5;
  void clear_email_notifications_enabled() ;
  bool email_notifications_enabled() const;
  void set_email_notifications_enabled(bool value);

  private:
  bool _internal_email_notifications_enabled() const;
  void _internal_set_email_notifications_enabled(bool value);

  public:
  // bool sms_notifications_enabled = 6;
  void clear_sms_notifications_enabled() ;
  bool sms_notifications_enabled() const;
  void set_sms_notifications_enabled(bool value);

  private:
  bool _internal_sms_notifications_enabled() const;
  void _internal_set_sms_notifications_enabled(bool value);

  public:
  // bool push_notifications_enabled = 7;
  void clear_push_notifications_enabled() ;
  bool push_notifications_enabled() const;
  void set_push_notifications_enabled(bool value);

  private:
  bool _internal_push_notifications_enabled() const;
  void _internal_set_push_notifications_enabled(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.alerting.AlertNotificationConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 11, 2,
      157, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AlertNotificationConfig& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> default_recipients_;
    ::google::protobuf::RepeatedField<int> alert_types_;
    ::google::protobuf::internal::CachedSize _alert_types_cached_byte_size_;
    ::google::protobuf::internal::MapField<AlertNotificationConfig_ChannelPreferencesEntry_DoNotUse, std::string, bool,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>
        channel_preferences_;
    ::google::protobuf::internal::MapField<AlertNotificationConfig_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::internal::ArenaStringPtr config_id_;
    ::google::protobuf::internal::ArenaStringPtr do_not_disturb_start_time_;
    ::google::protobuf::internal::ArenaStringPtr do_not_disturb_end_time_;
    int min_notification_severity_;
    bool email_notifications_enabled_;
    bool sms_notifications_enabled_;
    bool push_notifications_enabled_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_alerting_2eproto;
};
// -------------------------------------------------------------------

class AlertEscalation final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.alerting.AlertEscalation) */ {
 public:
  inline AlertEscalation() : AlertEscalation(nullptr) {}
  ~AlertEscalation() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AlertEscalation* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AlertEscalation));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AlertEscalation(
      ::google::protobuf::internal::ConstantInitialized);

  inline AlertEscalation(const AlertEscalation& from) : AlertEscalation(nullptr, from) {}
  inline AlertEscalation(AlertEscalation&& from) noexcept
      : AlertEscalation(nullptr, std::move(from)) {}
  inline AlertEscalation& operator=(const AlertEscalation& from) {
    CopyFrom(from);
    return *this;
  }
  inline AlertEscalation& operator=(AlertEscalation&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AlertEscalation& default_instance() {
    return *internal_default_instance();
  }
  static inline const AlertEscalation* internal_default_instance() {
    return reinterpret_cast<const AlertEscalation*>(
        &_AlertEscalation_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(AlertEscalation& a, AlertEscalation& b) { a.Swap(&b); }
  inline void Swap(AlertEscalation* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AlertEscalation* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AlertEscalation* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AlertEscalation>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AlertEscalation& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AlertEscalation& from) { AlertEscalation::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AlertEscalation* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.alerting.AlertEscalation"; }

 protected:
  explicit AlertEscalation(::google::protobuf::Arena* arena);
  AlertEscalation(::google::protobuf::Arena* arena, const AlertEscalation& from);
  AlertEscalation(::google::protobuf::Arena* arena, AlertEscalation&& from) noexcept
      : AlertEscalation(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMetadataFieldNumber = 6,
    kEscalationIdFieldNumber = 1,
    kEscalatedByFieldNumber = 2,
    kEscalationReasonFieldNumber = 3,
    kEscalationTimestampFieldNumber = 5,
    kNewSeverityFieldNumber = 4,
  };
  // map<string, string> metadata = 6;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // string escalation_id = 1;
  void clear_escalation_id() ;
  const std::string& escalation_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_escalation_id(Arg_&& arg, Args_... args);
  std::string* mutable_escalation_id();
  PROTOBUF_NODISCARD std::string* release_escalation_id();
  void set_allocated_escalation_id(std::string* value);

  private:
  const std::string& _internal_escalation_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_escalation_id(
      const std::string& value);
  std::string* _internal_mutable_escalation_id();

  public:
  // string escalated_by = 2;
  void clear_escalated_by() ;
  const std::string& escalated_by() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_escalated_by(Arg_&& arg, Args_... args);
  std::string* mutable_escalated_by();
  PROTOBUF_NODISCARD std::string* release_escalated_by();
  void set_allocated_escalated_by(std::string* value);

  private:
  const std::string& _internal_escalated_by() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_escalated_by(
      const std::string& value);
  std::string* _internal_mutable_escalated_by();

  public:
  // string escalation_reason = 3;
  void clear_escalation_reason() ;
  const std::string& escalation_reason() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_escalation_reason(Arg_&& arg, Args_... args);
  std::string* mutable_escalation_reason();
  PROTOBUF_NODISCARD std::string* release_escalation_reason();
  void set_allocated_escalation_reason(std::string* value);

  private:
  const std::string& _internal_escalation_reason() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_escalation_reason(
      const std::string& value);
  std::string* _internal_mutable_escalation_reason();

  public:
  // string escalation_timestamp = 5;
  void clear_escalation_timestamp() ;
  const std::string& escalation_timestamp() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_escalation_timestamp(Arg_&& arg, Args_... args);
  std::string* mutable_escalation_timestamp();
  PROTOBUF_NODISCARD std::string* release_escalation_timestamp();
  void set_allocated_escalation_timestamp(std::string* value);

  private:
  const std::string& _internal_escalation_timestamp() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_escalation_timestamp(
      const std::string& value);
  std::string* _internal_mutable_escalation_timestamp();

  public:
  // .seigr.alerting.AlertSeverity new_severity = 4;
  void clear_new_severity() ;
  ::seigr::alerting::AlertSeverity new_severity() const;
  void set_new_severity(::seigr::alerting::AlertSeverity value);

  private:
  ::seigr::alerting::AlertSeverity _internal_new_severity() const;
  void _internal_set_new_severity(::seigr::alerting::AlertSeverity value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.alerting.AlertEscalation)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 1,
      109, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AlertEscalation& from_msg);
    ::google::protobuf::internal::MapField<AlertEscalation_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::internal::ArenaStringPtr escalation_id_;
    ::google::protobuf::internal::ArenaStringPtr escalated_by_;
    ::google::protobuf::internal::ArenaStringPtr escalation_reason_;
    ::google::protobuf::internal::ArenaStringPtr escalation_timestamp_;
    int new_severity_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_alerting_2eproto;
};
// -------------------------------------------------------------------

class AlertContext final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.alerting.AlertContext) */ {
 public:
  inline AlertContext() : AlertContext(nullptr) {}
  ~AlertContext() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AlertContext* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AlertContext));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AlertContext(
      ::google::protobuf::internal::ConstantInitialized);

  inline AlertContext(const AlertContext& from) : AlertContext(nullptr, from) {}
  inline AlertContext(AlertContext&& from) noexcept
      : AlertContext(nullptr, std::move(from)) {}
  inline AlertContext& operator=(const AlertContext& from) {
    CopyFrom(from);
    return *this;
  }
  inline AlertContext& operator=(AlertContext&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AlertContext& default_instance() {
    return *internal_default_instance();
  }
  static inline const AlertContext* internal_default_instance() {
    return reinterpret_cast<const AlertContext*>(
        &_AlertContext_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(AlertContext& a, AlertContext& b) { a.Swap(&b); }
  inline void Swap(AlertContext* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AlertContext* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AlertContext* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AlertContext>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AlertContext& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AlertContext& from) { AlertContext::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AlertContext* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.alerting.AlertContext"; }

 protected:
  explicit AlertContext(::google::protobuf::Arena* arena);
  AlertContext(::google::protobuf::Arena* arena, const AlertContext& from);
  AlertContext(::google::protobuf::Arena* arena, AlertContext&& from) noexcept
      : AlertContext(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAdditionalContextFieldNumber = 5,
    kRequestIdFieldNumber = 1,
    kSessionIdFieldNumber = 2,
    kUserIdFieldNumber = 3,
    kTraceIdFieldNumber = 4,
  };
  // map<string, string> additional_context = 5;
  int additional_context_size() const;
  private:
  int _internal_additional_context_size() const;

  public:
  void clear_additional_context() ;
  const ::google::protobuf::Map<std::string, std::string>& additional_context() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_additional_context();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_additional_context() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_additional_context();

  public:
  // string request_id = 1;
  void clear_request_id() ;
  const std::string& request_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_request_id(Arg_&& arg, Args_... args);
  std::string* mutable_request_id();
  PROTOBUF_NODISCARD std::string* release_request_id();
  void set_allocated_request_id(std::string* value);

  private:
  const std::string& _internal_request_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_request_id(
      const std::string& value);
  std::string* _internal_mutable_request_id();

  public:
  // string session_id = 2;
  void clear_session_id() ;
  const std::string& session_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_session_id(Arg_&& arg, Args_... args);
  std::string* mutable_session_id();
  PROTOBUF_NODISCARD std::string* release_session_id();
  void set_allocated_session_id(std::string* value);

  private:
  const std::string& _internal_session_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_session_id(
      const std::string& value);
  std::string* _internal_mutable_session_id();

  public:
  // string user_id = 3;
  void clear_user_id() ;
  const std::string& user_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_user_id(Arg_&& arg, Args_... args);
  std::string* mutable_user_id();
  PROTOBUF_NODISCARD std::string* release_user_id();
  void set_allocated_user_id(std::string* value);

  private:
  const std::string& _internal_user_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_user_id(
      const std::string& value);
  std::string* _internal_mutable_user_id();

  public:
  // string trace_id = 4;
  void clear_trace_id() ;
  const std::string& trace_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_trace_id(Arg_&& arg, Args_... args);
  std::string* mutable_trace_id();
  PROTOBUF_NODISCARD std::string* release_trace_id();
  void set_allocated_trace_id(std::string* value);

  private:
  const std::string& _internal_trace_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_trace_id(
      const std::string& value);
  std::string* _internal_mutable_trace_id();

  public:
  // @@protoc_insertion_point(class_scope:seigr.alerting.AlertContext)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 5, 1,
      89, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AlertContext& from_msg);
    ::google::protobuf::internal::MapField<AlertContext_AdditionalContextEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        additional_context_;
    ::google::protobuf::internal::ArenaStringPtr request_id_;
    ::google::protobuf::internal::ArenaStringPtr session_id_;
    ::google::protobuf::internal::ArenaStringPtr user_id_;
    ::google::protobuf::internal::ArenaStringPtr trace_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_alerting_2eproto;
};
// -------------------------------------------------------------------

class AlertLog final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.alerting.AlertLog) */ {
 public:
  inline AlertLog() : AlertLog(nullptr) {}
  ~AlertLog() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AlertLog* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AlertLog));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AlertLog(
      ::google::protobuf::internal::ConstantInitialized);

  inline AlertLog(const AlertLog& from) : AlertLog(nullptr, from) {}
  inline AlertLog(AlertLog&& from) noexcept
      : AlertLog(nullptr, std::move(from)) {}
  inline AlertLog& operator=(const AlertLog& from) {
    CopyFrom(from);
    return *this;
  }
  inline AlertLog& operator=(AlertLog&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AlertLog& default_instance() {
    return *internal_default_instance();
  }
  static inline const AlertLog* internal_default_instance() {
    return reinterpret_cast<const AlertLog*>(
        &_AlertLog_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(AlertLog& a, AlertLog& b) { a.Swap(&b); }
  inline void Swap(AlertLog* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AlertLog* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AlertLog* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AlertLog>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AlertLog& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AlertLog& from) { AlertLog::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AlertLog* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.alerting.AlertLog"; }

 protected:
  explicit AlertLog(::google::protobuf::Arena* arena);
  AlertLog(::google::protobuf::Arena* arena, const AlertLog& from);
  AlertLog(::google::protobuf::Arena* arena, AlertLog&& from) noexcept
      : AlertLog(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMetadataFieldNumber = 7,
    kEventTraceFieldNumber = 8,
    kLogIdFieldNumber = 1,
    kAlertIdFieldNumber = 2,
    kLogTimestampFieldNumber = 4,
    kAlertStatusFieldNumber = 5,
    kStatusCodeFieldNumber = 9,
    kResolutionFieldNumber = 6,
    kSeverityFieldNumber = 3,
  };
  // map<string, string> metadata = 7;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // repeated string event_trace = 8;
  int event_trace_size() const;
  private:
  int _internal_event_trace_size() const;

  public:
  void clear_event_trace() ;
  const std::string& event_trace(int index) const;
  std::string* mutable_event_trace(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_event_trace(int index, Arg_&& value, Args_... args);
  std::string* add_event_trace();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_event_trace(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& event_trace() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_event_trace();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_event_trace() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_event_trace();

  public:
  // string log_id = 1;
  void clear_log_id() ;
  const std::string& log_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_log_id(Arg_&& arg, Args_... args);
  std::string* mutable_log_id();
  PROTOBUF_NODISCARD std::string* release_log_id();
  void set_allocated_log_id(std::string* value);

  private:
  const std::string& _internal_log_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_log_id(
      const std::string& value);
  std::string* _internal_mutable_log_id();

  public:
  // string alert_id = 2;
  void clear_alert_id() ;
  const std::string& alert_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_alert_id(Arg_&& arg, Args_... args);
  std::string* mutable_alert_id();
  PROTOBUF_NODISCARD std::string* release_alert_id();
  void set_allocated_alert_id(std::string* value);

  private:
  const std::string& _internal_alert_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_alert_id(
      const std::string& value);
  std::string* _internal_mutable_alert_id();

  public:
  // string log_timestamp = 4;
  void clear_log_timestamp() ;
  const std::string& log_timestamp() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_log_timestamp(Arg_&& arg, Args_... args);
  std::string* mutable_log_timestamp();
  PROTOBUF_NODISCARD std::string* release_log_timestamp();
  void set_allocated_log_timestamp(std::string* value);

  private:
  const std::string& _internal_log_timestamp() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_log_timestamp(
      const std::string& value);
  std::string* _internal_mutable_log_timestamp();

  public:
  // string alert_status = 5;
  void clear_alert_status() ;
  const std::string& alert_status() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_alert_status(Arg_&& arg, Args_... args);
  std::string* mutable_alert_status();
  PROTOBUF_NODISCARD std::string* release_alert_status();
  void set_allocated_alert_status(std::string* value);

  private:
  const std::string& _internal_alert_status() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_alert_status(
      const std::string& value);
  std::string* _internal_mutable_alert_status();

  public:
  // string status_code = 9;
  void clear_status_code() ;
  const std::string& status_code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_status_code(Arg_&& arg, Args_... args);
  std::string* mutable_status_code();
  PROTOBUF_NODISCARD std::string* release_status_code();
  void set_allocated_status_code(std::string* value);

  private:
  const std::string& _internal_status_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_status_code(
      const std::string& value);
  std::string* _internal_mutable_status_code();

  public:
  // .seigr.alerting.AlertResolution resolution = 6;
  bool has_resolution() const;
  void clear_resolution() ;
  const ::seigr::alerting::AlertResolution& resolution() const;
  PROTOBUF_NODISCARD ::seigr::alerting::AlertResolution* release_resolution();
  ::seigr::alerting::AlertResolution* mutable_resolution();
  void set_allocated_resolution(::seigr::alerting::AlertResolution* value);
  void unsafe_arena_set_allocated_resolution(::seigr::alerting::AlertResolution* value);
  ::seigr::alerting::AlertResolution* unsafe_arena_release_resolution();

  private:
  const ::seigr::alerting::AlertResolution& _internal_resolution() const;
  ::seigr::alerting::AlertResolution* _internal_mutable_resolution();

  public:
  // .seigr.alerting.AlertSeverity severity = 3;
  void clear_severity() ;
  ::seigr::alerting::AlertSeverity severity() const;
  void set_severity(::seigr::alerting::AlertSeverity value);

  private:
  ::seigr::alerting::AlertSeverity _internal_severity() const;
  void _internal_set_severity(::seigr::alerting::AlertSeverity value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.alerting.AlertLog)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 2,
      109, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AlertLog& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<AlertLog_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::RepeatedPtrField<std::string> event_trace_;
    ::google::protobuf::internal::ArenaStringPtr log_id_;
    ::google::protobuf::internal::ArenaStringPtr alert_id_;
    ::google::protobuf::internal::ArenaStringPtr log_timestamp_;
    ::google::protobuf::internal::ArenaStringPtr alert_status_;
    ::google::protobuf::internal::ArenaStringPtr status_code_;
    ::seigr::alerting::AlertResolution* resolution_;
    int severity_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_alerting_2eproto;
};
// -------------------------------------------------------------------

class AlertEscalationChain final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.alerting.AlertEscalationChain) */ {
 public:
  inline AlertEscalationChain() : AlertEscalationChain(nullptr) {}
  ~AlertEscalationChain() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AlertEscalationChain* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AlertEscalationChain));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AlertEscalationChain(
      ::google::protobuf::internal::ConstantInitialized);

  inline AlertEscalationChain(const AlertEscalationChain& from) : AlertEscalationChain(nullptr, from) {}
  inline AlertEscalationChain(AlertEscalationChain&& from) noexcept
      : AlertEscalationChain(nullptr, std::move(from)) {}
  inline AlertEscalationChain& operator=(const AlertEscalationChain& from) {
    CopyFrom(from);
    return *this;
  }
  inline AlertEscalationChain& operator=(AlertEscalationChain&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AlertEscalationChain& default_instance() {
    return *internal_default_instance();
  }
  static inline const AlertEscalationChain* internal_default_instance() {
    return reinterpret_cast<const AlertEscalationChain*>(
        &_AlertEscalationChain_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(AlertEscalationChain& a, AlertEscalationChain& b) { a.Swap(&b); }
  inline void Swap(AlertEscalationChain* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AlertEscalationChain* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AlertEscalationChain* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AlertEscalationChain>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AlertEscalationChain& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AlertEscalationChain& from) { AlertEscalationChain::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AlertEscalationChain* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.alerting.AlertEscalationChain"; }

 protected:
  explicit AlertEscalationChain(::google::protobuf::Arena* arena);
  AlertEscalationChain(::google::protobuf::Arena* arena, const AlertEscalationChain& from);
  AlertEscalationChain(::google::protobuf::Arena* arena, AlertEscalationChain&& from) noexcept
      : AlertEscalationChain(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEscalationStepsFieldNumber = 1,
    kFinalStatusFieldNumber = 2,
  };
  // repeated .seigr.alerting.AlertEscalation escalation_steps = 1;
  int escalation_steps_size() const;
  private:
  int _internal_escalation_steps_size() const;

  public:
  void clear_escalation_steps() ;
  ::seigr::alerting::AlertEscalation* mutable_escalation_steps(int index);
  ::google::protobuf::RepeatedPtrField<::seigr::alerting::AlertEscalation>* mutable_escalation_steps();

  private:
  const ::google::protobuf::RepeatedPtrField<::seigr::alerting::AlertEscalation>& _internal_escalation_steps() const;
  ::google::protobuf::RepeatedPtrField<::seigr::alerting::AlertEscalation>* _internal_mutable_escalation_steps();
  public:
  const ::seigr::alerting::AlertEscalation& escalation_steps(int index) const;
  ::seigr::alerting::AlertEscalation* add_escalation_steps();
  const ::google::protobuf::RepeatedPtrField<::seigr::alerting::AlertEscalation>& escalation_steps() const;
  // string final_status = 2;
  void clear_final_status() ;
  const std::string& final_status() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_final_status(Arg_&& arg, Args_... args);
  std::string* mutable_final_status();
  PROTOBUF_NODISCARD std::string* release_final_status();
  void set_allocated_final_status(std::string* value);

  private:
  const std::string& _internal_final_status() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_final_status(
      const std::string& value);
  std::string* _internal_mutable_final_status();

  public:
  // @@protoc_insertion_point(class_scope:seigr.alerting.AlertEscalationChain)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      56, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AlertEscalationChain& from_msg);
    ::google::protobuf::RepeatedPtrField< ::seigr::alerting::AlertEscalation > escalation_steps_;
    ::google::protobuf::internal::ArenaStringPtr final_status_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_alerting_2eproto;
};
// -------------------------------------------------------------------

class AlertResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.alerting.AlertResponse) */ {
 public:
  inline AlertResponse() : AlertResponse(nullptr) {}
  ~AlertResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AlertResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AlertResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AlertResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline AlertResponse(const AlertResponse& from) : AlertResponse(nullptr, from) {}
  inline AlertResponse(AlertResponse&& from) noexcept
      : AlertResponse(nullptr, std::move(from)) {}
  inline AlertResponse& operator=(const AlertResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AlertResponse& operator=(AlertResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AlertResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const AlertResponse* internal_default_instance() {
    return reinterpret_cast<const AlertResponse*>(
        &_AlertResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(AlertResponse& a, AlertResponse& b) { a.Swap(&b); }
  inline void Swap(AlertResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AlertResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AlertResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AlertResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AlertResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AlertResponse& from) { AlertResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AlertResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.alerting.AlertResponse"; }

 protected:
  explicit AlertResponse(::google::protobuf::Arena* arena);
  AlertResponse(::google::protobuf::Arena* arena, const AlertResponse& from);
  AlertResponse(::google::protobuf::Arena* arena, AlertResponse&& from) noexcept
      : AlertResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMatchingLogsFieldNumber = 1,
    kMetadataFieldNumber = 4,
    kRequestIdFieldNumber = 2,
    kResponseTimestampFieldNumber = 3,
  };
  // repeated .seigr.alerting.AlertLog matching_logs = 1;
  int matching_logs_size() const;
  private:
  int _internal_matching_logs_size() const;

  public:
  void clear_matching_logs() ;
  ::seigr::alerting::AlertLog* mutable_matching_logs(int index);
  ::google::protobuf::RepeatedPtrField<::seigr::alerting::AlertLog>* mutable_matching_logs();

  private:
  const ::google::protobuf::RepeatedPtrField<::seigr::alerting::AlertLog>& _internal_matching_logs() const;
  ::google::protobuf::RepeatedPtrField<::seigr::alerting::AlertLog>* _internal_mutable_matching_logs();
  public:
  const ::seigr::alerting::AlertLog& matching_logs(int index) const;
  ::seigr::alerting::AlertLog* add_matching_logs();
  const ::google::protobuf::RepeatedPtrField<::seigr::alerting::AlertLog>& matching_logs() const;
  // map<string, string> metadata = 4;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // string request_id = 2;
  void clear_request_id() ;
  const std::string& request_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_request_id(Arg_&& arg, Args_... args);
  std::string* mutable_request_id();
  PROTOBUF_NODISCARD std::string* release_request_id();
  void set_allocated_request_id(std::string* value);

  private:
  const std::string& _internal_request_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_request_id(
      const std::string& value);
  std::string* _internal_mutable_request_id();

  public:
  // string response_timestamp = 3;
  void clear_response_timestamp() ;
  const std::string& response_timestamp() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_response_timestamp(Arg_&& arg, Args_... args);
  std::string* mutable_response_timestamp();
  PROTOBUF_NODISCARD std::string* release_response_timestamp();
  void set_allocated_response_timestamp(std::string* value);

  private:
  const std::string& _internal_response_timestamp() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_response_timestamp(
      const std::string& value);
  std::string* _internal_mutable_response_timestamp();

  public:
  // @@protoc_insertion_point(class_scope:seigr.alerting.AlertResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 2,
      73, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AlertResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::seigr::alerting::AlertLog > matching_logs_;
    ::google::protobuf::internal::MapField<AlertResponse_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::internal::ArenaStringPtr request_id_;
    ::google::protobuf::internal::ArenaStringPtr response_timestamp_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_alerting_2eproto;
};
// -------------------------------------------------------------------

class Alert final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.alerting.Alert) */ {
 public:
  inline Alert() : Alert(nullptr) {}
  ~Alert() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Alert* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Alert));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Alert(
      ::google::protobuf::internal::ConstantInitialized);

  inline Alert(const Alert& from) : Alert(nullptr, from) {}
  inline Alert(Alert&& from) noexcept
      : Alert(nullptr, std::move(from)) {}
  inline Alert& operator=(const Alert& from) {
    CopyFrom(from);
    return *this;
  }
  inline Alert& operator=(Alert&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Alert& default_instance() {
    return *internal_default_instance();
  }
  static inline const Alert* internal_default_instance() {
    return reinterpret_cast<const Alert*>(
        &_Alert_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(Alert& a, Alert& b) { a.Swap(&b); }
  inline void Swap(Alert* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Alert* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Alert* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Alert>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Alert& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Alert& from) { Alert::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Alert* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.alerting.Alert"; }

 protected:
  explicit Alert(::google::protobuf::Arena* arena);
  Alert(::google::protobuf::Arena* arena, const Alert& from);
  Alert(::google::protobuf::Arena* arena, Alert&& from) noexcept
      : Alert(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMetadataFieldNumber = 9,
    kAlertIdFieldNumber = 1,
    kMessageFieldNumber = 4,
    kTimestampFieldNumber = 5,
    kSourceComponentFieldNumber = 6,
    kContextFieldNumber = 8,
    kResolutionFieldNumber = 10,
    kEscalationChainFieldNumber = 11,
    kTypeFieldNumber = 2,
    kSeverityFieldNumber = 3,
    kTriggerSourceFieldNumber = 7,
    kLastActionFieldNumber = 12,
  };
  // map<string, string> metadata = 9;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // string alert_id = 1;
  void clear_alert_id() ;
  const std::string& alert_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_alert_id(Arg_&& arg, Args_... args);
  std::string* mutable_alert_id();
  PROTOBUF_NODISCARD std::string* release_alert_id();
  void set_allocated_alert_id(std::string* value);

  private:
  const std::string& _internal_alert_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_alert_id(
      const std::string& value);
  std::string* _internal_mutable_alert_id();

  public:
  // string message = 4;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // string timestamp = 5;
  void clear_timestamp() ;
  const std::string& timestamp() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_timestamp(Arg_&& arg, Args_... args);
  std::string* mutable_timestamp();
  PROTOBUF_NODISCARD std::string* release_timestamp();
  void set_allocated_timestamp(std::string* value);

  private:
  const std::string& _internal_timestamp() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_timestamp(
      const std::string& value);
  std::string* _internal_mutable_timestamp();

  public:
  // string source_component = 6;
  void clear_source_component() ;
  const std::string& source_component() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_source_component(Arg_&& arg, Args_... args);
  std::string* mutable_source_component();
  PROTOBUF_NODISCARD std::string* release_source_component();
  void set_allocated_source_component(std::string* value);

  private:
  const std::string& _internal_source_component() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_source_component(
      const std::string& value);
  std::string* _internal_mutable_source_component();

  public:
  // .seigr.alerting.AlertContext context = 8;
  bool has_context() const;
  void clear_context() ;
  const ::seigr::alerting::AlertContext& context() const;
  PROTOBUF_NODISCARD ::seigr::alerting::AlertContext* release_context();
  ::seigr::alerting::AlertContext* mutable_context();
  void set_allocated_context(::seigr::alerting::AlertContext* value);
  void unsafe_arena_set_allocated_context(::seigr::alerting::AlertContext* value);
  ::seigr::alerting::AlertContext* unsafe_arena_release_context();

  private:
  const ::seigr::alerting::AlertContext& _internal_context() const;
  ::seigr::alerting::AlertContext* _internal_mutable_context();

  public:
  // .seigr.alerting.AlertResolution resolution = 10;
  bool has_resolution() const;
  void clear_resolution() ;
  const ::seigr::alerting::AlertResolution& resolution() const;
  PROTOBUF_NODISCARD ::seigr::alerting::AlertResolution* release_resolution();
  ::seigr::alerting::AlertResolution* mutable_resolution();
  void set_allocated_resolution(::seigr::alerting::AlertResolution* value);
  void unsafe_arena_set_allocated_resolution(::seigr::alerting::AlertResolution* value);
  ::seigr::alerting::AlertResolution* unsafe_arena_release_resolution();

  private:
  const ::seigr::alerting::AlertResolution& _internal_resolution() const;
  ::seigr::alerting::AlertResolution* _internal_mutable_resolution();

  public:
  // .seigr.alerting.AlertEscalationChain escalation_chain = 11;
  bool has_escalation_chain() const;
  void clear_escalation_chain() ;
  const ::seigr::alerting::AlertEscalationChain& escalation_chain() const;
  PROTOBUF_NODISCARD ::seigr::alerting::AlertEscalationChain* release_escalation_chain();
  ::seigr::alerting::AlertEscalationChain* mutable_escalation_chain();
  void set_allocated_escalation_chain(::seigr::alerting::AlertEscalationChain* value);
  void unsafe_arena_set_allocated_escalation_chain(::seigr::alerting::AlertEscalationChain* value);
  ::seigr::alerting::AlertEscalationChain* unsafe_arena_release_escalation_chain();

  private:
  const ::seigr::alerting::AlertEscalationChain& _internal_escalation_chain() const;
  ::seigr::alerting::AlertEscalationChain* _internal_mutable_escalation_chain();

  public:
  // .seigr.alerting.AlertType type = 2;
  void clear_type() ;
  ::seigr::alerting::AlertType type() const;
  void set_type(::seigr::alerting::AlertType value);

  private:
  ::seigr::alerting::AlertType _internal_type() const;
  void _internal_set_type(::seigr::alerting::AlertType value);

  public:
  // .seigr.alerting.AlertSeverity severity = 3;
  void clear_severity() ;
  ::seigr::alerting::AlertSeverity severity() const;
  void set_severity(::seigr::alerting::AlertSeverity value);

  private:
  ::seigr::alerting::AlertSeverity _internal_severity() const;
  void _internal_set_severity(::seigr::alerting::AlertSeverity value);

  public:
  // .seigr.alerting.AlertTriggerSource trigger_source = 7;
  void clear_trigger_source() ;
  ::seigr::alerting::AlertTriggerSource trigger_source() const;
  void set_trigger_source(::seigr::alerting::AlertTriggerSource value);

  private:
  ::seigr::alerting::AlertTriggerSource _internal_trigger_source() const;
  void _internal_set_trigger_source(::seigr::alerting::AlertTriggerSource value);

  public:
  // .seigr.alerting.AlertAction last_action = 12;
  void clear_last_action() ;
  ::seigr::alerting::AlertAction last_action() const;
  void set_last_action(::seigr::alerting::AlertAction value);

  private:
  ::seigr::alerting::AlertAction _internal_last_action() const;
  void _internal_set_last_action(::seigr::alerting::AlertAction value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.alerting.Alert)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 12, 4,
      85, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Alert& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<Alert_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::internal::ArenaStringPtr alert_id_;
    ::google::protobuf::internal::ArenaStringPtr message_;
    ::google::protobuf::internal::ArenaStringPtr timestamp_;
    ::google::protobuf::internal::ArenaStringPtr source_component_;
    ::seigr::alerting::AlertContext* context_;
    ::seigr::alerting::AlertResolution* resolution_;
    ::seigr::alerting::AlertEscalationChain* escalation_chain_;
    int type_;
    int severity_;
    int trigger_source_;
    int last_action_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_alerting_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// AlertMetadata

// string key = 1;
inline void AlertMetadata::clear_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.ClearToEmpty();
}
inline const std::string& AlertMetadata::key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.alerting.AlertMetadata.key)
  return _internal_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AlertMetadata::set_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.alerting.AlertMetadata.key)
}
inline std::string* AlertMetadata::mutable_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:seigr.alerting.AlertMetadata.key)
  return _s;
}
inline const std::string& AlertMetadata::_internal_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.key_.Get();
}
inline void AlertMetadata::_internal_set_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.Set(value, GetArena());
}
inline std::string* AlertMetadata::_internal_mutable_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.key_.Mutable( GetArena());
}
inline std::string* AlertMetadata::release_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.alerting.AlertMetadata.key)
  return _impl_.key_.Release();
}
inline void AlertMetadata::set_allocated_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.key_.IsDefault()) {
    _impl_.key_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.alerting.AlertMetadata.key)
}

// string value = 2;
inline void AlertMetadata::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.ClearToEmpty();
}
inline const std::string& AlertMetadata::value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.alerting.AlertMetadata.value)
  return _internal_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AlertMetadata::set_value(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.alerting.AlertMetadata.value)
}
inline std::string* AlertMetadata::mutable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:seigr.alerting.AlertMetadata.value)
  return _s;
}
inline const std::string& AlertMetadata::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_.Get();
}
inline void AlertMetadata::_internal_set_value(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.Set(value, GetArena());
}
inline std::string* AlertMetadata::_internal_mutable_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.value_.Mutable( GetArena());
}
inline std::string* AlertMetadata::release_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.alerting.AlertMetadata.value)
  return _impl_.value_.Release();
}
inline void AlertMetadata::set_allocated_value(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.value_.IsDefault()) {
    _impl_.value_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.alerting.AlertMetadata.value)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// AlertContext

// string request_id = 1;
inline void AlertContext::clear_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_.ClearToEmpty();
}
inline const std::string& AlertContext::request_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.alerting.AlertContext.request_id)
  return _internal_request_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AlertContext::set_request_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.alerting.AlertContext.request_id)
}
inline std::string* AlertContext::mutable_request_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_request_id();
  // @@protoc_insertion_point(field_mutable:seigr.alerting.AlertContext.request_id)
  return _s;
}
inline const std::string& AlertContext::_internal_request_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.request_id_.Get();
}
inline void AlertContext::_internal_set_request_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_.Set(value, GetArena());
}
inline std::string* AlertContext::_internal_mutable_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.request_id_.Mutable( GetArena());
}
inline std::string* AlertContext::release_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.alerting.AlertContext.request_id)
  return _impl_.request_id_.Release();
}
inline void AlertContext::set_allocated_request_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.request_id_.IsDefault()) {
    _impl_.request_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.alerting.AlertContext.request_id)
}

// string session_id = 2;
inline void AlertContext::clear_session_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_id_.ClearToEmpty();
}
inline const std::string& AlertContext::session_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.alerting.AlertContext.session_id)
  return _internal_session_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AlertContext::set_session_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.alerting.AlertContext.session_id)
}
inline std::string* AlertContext::mutable_session_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_session_id();
  // @@protoc_insertion_point(field_mutable:seigr.alerting.AlertContext.session_id)
  return _s;
}
inline const std::string& AlertContext::_internal_session_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.session_id_.Get();
}
inline void AlertContext::_internal_set_session_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_id_.Set(value, GetArena());
}
inline std::string* AlertContext::_internal_mutable_session_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.session_id_.Mutable( GetArena());
}
inline std::string* AlertContext::release_session_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.alerting.AlertContext.session_id)
  return _impl_.session_id_.Release();
}
inline void AlertContext::set_allocated_session_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.session_id_.IsDefault()) {
    _impl_.session_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.alerting.AlertContext.session_id)
}

// string user_id = 3;
inline void AlertContext::clear_user_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_id_.ClearToEmpty();
}
inline const std::string& AlertContext::user_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.alerting.AlertContext.user_id)
  return _internal_user_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AlertContext::set_user_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.alerting.AlertContext.user_id)
}
inline std::string* AlertContext::mutable_user_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_user_id();
  // @@protoc_insertion_point(field_mutable:seigr.alerting.AlertContext.user_id)
  return _s;
}
inline const std::string& AlertContext::_internal_user_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.user_id_.Get();
}
inline void AlertContext::_internal_set_user_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_id_.Set(value, GetArena());
}
inline std::string* AlertContext::_internal_mutable_user_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.user_id_.Mutable( GetArena());
}
inline std::string* AlertContext::release_user_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.alerting.AlertContext.user_id)
  return _impl_.user_id_.Release();
}
inline void AlertContext::set_allocated_user_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.user_id_.IsDefault()) {
    _impl_.user_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.alerting.AlertContext.user_id)
}

// string trace_id = 4;
inline void AlertContext::clear_trace_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trace_id_.ClearToEmpty();
}
inline const std::string& AlertContext::trace_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.alerting.AlertContext.trace_id)
  return _internal_trace_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AlertContext::set_trace_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trace_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.alerting.AlertContext.trace_id)
}
inline std::string* AlertContext::mutable_trace_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_trace_id();
  // @@protoc_insertion_point(field_mutable:seigr.alerting.AlertContext.trace_id)
  return _s;
}
inline const std::string& AlertContext::_internal_trace_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.trace_id_.Get();
}
inline void AlertContext::_internal_set_trace_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trace_id_.Set(value, GetArena());
}
inline std::string* AlertContext::_internal_mutable_trace_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.trace_id_.Mutable( GetArena());
}
inline std::string* AlertContext::release_trace_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.alerting.AlertContext.trace_id)
  return _impl_.trace_id_.Release();
}
inline void AlertContext::set_allocated_trace_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trace_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.trace_id_.IsDefault()) {
    _impl_.trace_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.alerting.AlertContext.trace_id)
}

// map<string, string> additional_context = 5;
inline int AlertContext::_internal_additional_context_size() const {
  return _internal_additional_context().size();
}
inline int AlertContext::additional_context_size() const {
  return _internal_additional_context_size();
}
inline void AlertContext::clear_additional_context() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.additional_context_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& AlertContext::_internal_additional_context() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.additional_context_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& AlertContext::additional_context() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.alerting.AlertContext.additional_context)
  return _internal_additional_context();
}
inline ::google::protobuf::Map<std::string, std::string>* AlertContext::_internal_mutable_additional_context() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.additional_context_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* AlertContext::mutable_additional_context() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.alerting.AlertContext.additional_context)
  return _internal_mutable_additional_context();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// AlertResolution

// string resolved_by_id = 1;
inline void AlertResolution::clear_resolved_by_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resolved_by_id_.ClearToEmpty();
}
inline const std::string& AlertResolution::resolved_by_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.alerting.AlertResolution.resolved_by_id)
  return _internal_resolved_by_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AlertResolution::set_resolved_by_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resolved_by_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.alerting.AlertResolution.resolved_by_id)
}
inline std::string* AlertResolution::mutable_resolved_by_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_resolved_by_id();
  // @@protoc_insertion_point(field_mutable:seigr.alerting.AlertResolution.resolved_by_id)
  return _s;
}
inline const std::string& AlertResolution::_internal_resolved_by_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.resolved_by_id_.Get();
}
inline void AlertResolution::_internal_set_resolved_by_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resolved_by_id_.Set(value, GetArena());
}
inline std::string* AlertResolution::_internal_mutable_resolved_by_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.resolved_by_id_.Mutable( GetArena());
}
inline std::string* AlertResolution::release_resolved_by_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.alerting.AlertResolution.resolved_by_id)
  return _impl_.resolved_by_id_.Release();
}
inline void AlertResolution::set_allocated_resolved_by_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resolved_by_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.resolved_by_id_.IsDefault()) {
    _impl_.resolved_by_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.alerting.AlertResolution.resolved_by_id)
}

// string resolution_details = 2;
inline void AlertResolution::clear_resolution_details() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resolution_details_.ClearToEmpty();
}
inline const std::string& AlertResolution::resolution_details() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.alerting.AlertResolution.resolution_details)
  return _internal_resolution_details();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AlertResolution::set_resolution_details(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resolution_details_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.alerting.AlertResolution.resolution_details)
}
inline std::string* AlertResolution::mutable_resolution_details() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_resolution_details();
  // @@protoc_insertion_point(field_mutable:seigr.alerting.AlertResolution.resolution_details)
  return _s;
}
inline const std::string& AlertResolution::_internal_resolution_details() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.resolution_details_.Get();
}
inline void AlertResolution::_internal_set_resolution_details(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resolution_details_.Set(value, GetArena());
}
inline std::string* AlertResolution::_internal_mutable_resolution_details() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.resolution_details_.Mutable( GetArena());
}
inline std::string* AlertResolution::release_resolution_details() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.alerting.AlertResolution.resolution_details)
  return _impl_.resolution_details_.Release();
}
inline void AlertResolution::set_allocated_resolution_details(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resolution_details_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.resolution_details_.IsDefault()) {
    _impl_.resolution_details_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.alerting.AlertResolution.resolution_details)
}

// string resolved_at = 3;
inline void AlertResolution::clear_resolved_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resolved_at_.ClearToEmpty();
}
inline const std::string& AlertResolution::resolved_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.alerting.AlertResolution.resolved_at)
  return _internal_resolved_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AlertResolution::set_resolved_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resolved_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.alerting.AlertResolution.resolved_at)
}
inline std::string* AlertResolution::mutable_resolved_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_resolved_at();
  // @@protoc_insertion_point(field_mutable:seigr.alerting.AlertResolution.resolved_at)
  return _s;
}
inline const std::string& AlertResolution::_internal_resolved_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.resolved_at_.Get();
}
inline void AlertResolution::_internal_set_resolved_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resolved_at_.Set(value, GetArena());
}
inline std::string* AlertResolution::_internal_mutable_resolved_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.resolved_at_.Mutable( GetArena());
}
inline std::string* AlertResolution::release_resolved_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.alerting.AlertResolution.resolved_at)
  return _impl_.resolved_at_.Release();
}
inline void AlertResolution::set_allocated_resolved_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resolved_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.resolved_at_.IsDefault()) {
    _impl_.resolved_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.alerting.AlertResolution.resolved_at)
}

// .seigr.alerting.AlertAction action_taken = 4;
inline void AlertResolution::clear_action_taken() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.action_taken_ = 0;
}
inline ::seigr::alerting::AlertAction AlertResolution::action_taken() const {
  // @@protoc_insertion_point(field_get:seigr.alerting.AlertResolution.action_taken)
  return _internal_action_taken();
}
inline void AlertResolution::set_action_taken(::seigr::alerting::AlertAction value) {
  _internal_set_action_taken(value);
  // @@protoc_insertion_point(field_set:seigr.alerting.AlertResolution.action_taken)
}
inline ::seigr::alerting::AlertAction AlertResolution::_internal_action_taken() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::alerting::AlertAction>(_impl_.action_taken_);
}
inline void AlertResolution::_internal_set_action_taken(::seigr::alerting::AlertAction value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.action_taken_ = value;
}

// map<string, string> metadata = 5;
inline int AlertResolution::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int AlertResolution::metadata_size() const {
  return _internal_metadata_size();
}
inline void AlertResolution::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& AlertResolution::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& AlertResolution::metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.alerting.AlertResolution.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* AlertResolution::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* AlertResolution::mutable_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.alerting.AlertResolution.metadata)
  return _internal_mutable_metadata();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// AlertEscalation

// string escalation_id = 1;
inline void AlertEscalation::clear_escalation_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.escalation_id_.ClearToEmpty();
}
inline const std::string& AlertEscalation::escalation_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.alerting.AlertEscalation.escalation_id)
  return _internal_escalation_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AlertEscalation::set_escalation_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.escalation_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.alerting.AlertEscalation.escalation_id)
}
inline std::string* AlertEscalation::mutable_escalation_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_escalation_id();
  // @@protoc_insertion_point(field_mutable:seigr.alerting.AlertEscalation.escalation_id)
  return _s;
}
inline const std::string& AlertEscalation::_internal_escalation_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.escalation_id_.Get();
}
inline void AlertEscalation::_internal_set_escalation_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.escalation_id_.Set(value, GetArena());
}
inline std::string* AlertEscalation::_internal_mutable_escalation_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.escalation_id_.Mutable( GetArena());
}
inline std::string* AlertEscalation::release_escalation_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.alerting.AlertEscalation.escalation_id)
  return _impl_.escalation_id_.Release();
}
inline void AlertEscalation::set_allocated_escalation_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.escalation_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.escalation_id_.IsDefault()) {
    _impl_.escalation_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.alerting.AlertEscalation.escalation_id)
}

// string escalated_by = 2;
inline void AlertEscalation::clear_escalated_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.escalated_by_.ClearToEmpty();
}
inline const std::string& AlertEscalation::escalated_by() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.alerting.AlertEscalation.escalated_by)
  return _internal_escalated_by();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AlertEscalation::set_escalated_by(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.escalated_by_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.alerting.AlertEscalation.escalated_by)
}
inline std::string* AlertEscalation::mutable_escalated_by() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_escalated_by();
  // @@protoc_insertion_point(field_mutable:seigr.alerting.AlertEscalation.escalated_by)
  return _s;
}
inline const std::string& AlertEscalation::_internal_escalated_by() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.escalated_by_.Get();
}
inline void AlertEscalation::_internal_set_escalated_by(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.escalated_by_.Set(value, GetArena());
}
inline std::string* AlertEscalation::_internal_mutable_escalated_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.escalated_by_.Mutable( GetArena());
}
inline std::string* AlertEscalation::release_escalated_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.alerting.AlertEscalation.escalated_by)
  return _impl_.escalated_by_.Release();
}
inline void AlertEscalation::set_allocated_escalated_by(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.escalated_by_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.escalated_by_.IsDefault()) {
    _impl_.escalated_by_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.alerting.AlertEscalation.escalated_by)
}

// string escalation_reason = 3;
inline void AlertEscalation::clear_escalation_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.escalation_reason_.ClearToEmpty();
}
inline const std::string& AlertEscalation::escalation_reason() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.alerting.AlertEscalation.escalation_reason)
  return _internal_escalation_reason();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AlertEscalation::set_escalation_reason(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.escalation_reason_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.alerting.AlertEscalation.escalation_reason)
}
inline std::string* AlertEscalation::mutable_escalation_reason() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_escalation_reason();
  // @@protoc_insertion_point(field_mutable:seigr.alerting.AlertEscalation.escalation_reason)
  return _s;
}
inline const std::string& AlertEscalation::_internal_escalation_reason() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.escalation_reason_.Get();
}
inline void AlertEscalation::_internal_set_escalation_reason(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.escalation_reason_.Set(value, GetArena());
}
inline std::string* AlertEscalation::_internal_mutable_escalation_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.escalation_reason_.Mutable( GetArena());
}
inline std::string* AlertEscalation::release_escalation_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.alerting.AlertEscalation.escalation_reason)
  return _impl_.escalation_reason_.Release();
}
inline void AlertEscalation::set_allocated_escalation_reason(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.escalation_reason_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.escalation_reason_.IsDefault()) {
    _impl_.escalation_reason_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.alerting.AlertEscalation.escalation_reason)
}

// .seigr.alerting.AlertSeverity new_severity = 4;
inline void AlertEscalation::clear_new_severity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.new_severity_ = 0;
}
inline ::seigr::alerting::AlertSeverity AlertEscalation::new_severity() const {
  // @@protoc_insertion_point(field_get:seigr.alerting.AlertEscalation.new_severity)
  return _internal_new_severity();
}
inline void AlertEscalation::set_new_severity(::seigr::alerting::AlertSeverity value) {
  _internal_set_new_severity(value);
  // @@protoc_insertion_point(field_set:seigr.alerting.AlertEscalation.new_severity)
}
inline ::seigr::alerting::AlertSeverity AlertEscalation::_internal_new_severity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::alerting::AlertSeverity>(_impl_.new_severity_);
}
inline void AlertEscalation::_internal_set_new_severity(::seigr::alerting::AlertSeverity value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.new_severity_ = value;
}

// string escalation_timestamp = 5;
inline void AlertEscalation::clear_escalation_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.escalation_timestamp_.ClearToEmpty();
}
inline const std::string& AlertEscalation::escalation_timestamp() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.alerting.AlertEscalation.escalation_timestamp)
  return _internal_escalation_timestamp();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AlertEscalation::set_escalation_timestamp(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.escalation_timestamp_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.alerting.AlertEscalation.escalation_timestamp)
}
inline std::string* AlertEscalation::mutable_escalation_timestamp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_escalation_timestamp();
  // @@protoc_insertion_point(field_mutable:seigr.alerting.AlertEscalation.escalation_timestamp)
  return _s;
}
inline const std::string& AlertEscalation::_internal_escalation_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.escalation_timestamp_.Get();
}
inline void AlertEscalation::_internal_set_escalation_timestamp(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.escalation_timestamp_.Set(value, GetArena());
}
inline std::string* AlertEscalation::_internal_mutable_escalation_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.escalation_timestamp_.Mutable( GetArena());
}
inline std::string* AlertEscalation::release_escalation_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.alerting.AlertEscalation.escalation_timestamp)
  return _impl_.escalation_timestamp_.Release();
}
inline void AlertEscalation::set_allocated_escalation_timestamp(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.escalation_timestamp_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.escalation_timestamp_.IsDefault()) {
    _impl_.escalation_timestamp_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.alerting.AlertEscalation.escalation_timestamp)
}

// map<string, string> metadata = 6;
inline int AlertEscalation::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int AlertEscalation::metadata_size() const {
  return _internal_metadata_size();
}
inline void AlertEscalation::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& AlertEscalation::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& AlertEscalation::metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.alerting.AlertEscalation.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* AlertEscalation::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* AlertEscalation::mutable_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.alerting.AlertEscalation.metadata)
  return _internal_mutable_metadata();
}

// -------------------------------------------------------------------

// AlertEscalationChain

// repeated .seigr.alerting.AlertEscalation escalation_steps = 1;
inline int AlertEscalationChain::_internal_escalation_steps_size() const {
  return _internal_escalation_steps().size();
}
inline int AlertEscalationChain::escalation_steps_size() const {
  return _internal_escalation_steps_size();
}
inline void AlertEscalationChain::clear_escalation_steps() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.escalation_steps_.Clear();
}
inline ::seigr::alerting::AlertEscalation* AlertEscalationChain::mutable_escalation_steps(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.alerting.AlertEscalationChain.escalation_steps)
  return _internal_mutable_escalation_steps()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seigr::alerting::AlertEscalation>* AlertEscalationChain::mutable_escalation_steps()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.alerting.AlertEscalationChain.escalation_steps)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_escalation_steps();
}
inline const ::seigr::alerting::AlertEscalation& AlertEscalationChain::escalation_steps(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.alerting.AlertEscalationChain.escalation_steps)
  return _internal_escalation_steps().Get(index);
}
inline ::seigr::alerting::AlertEscalation* AlertEscalationChain::add_escalation_steps() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seigr::alerting::AlertEscalation* _add = _internal_mutable_escalation_steps()->Add();
  // @@protoc_insertion_point(field_add:seigr.alerting.AlertEscalationChain.escalation_steps)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seigr::alerting::AlertEscalation>& AlertEscalationChain::escalation_steps() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.alerting.AlertEscalationChain.escalation_steps)
  return _internal_escalation_steps();
}
inline const ::google::protobuf::RepeatedPtrField<::seigr::alerting::AlertEscalation>&
AlertEscalationChain::_internal_escalation_steps() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.escalation_steps_;
}
inline ::google::protobuf::RepeatedPtrField<::seigr::alerting::AlertEscalation>*
AlertEscalationChain::_internal_mutable_escalation_steps() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.escalation_steps_;
}

// string final_status = 2;
inline void AlertEscalationChain::clear_final_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.final_status_.ClearToEmpty();
}
inline const std::string& AlertEscalationChain::final_status() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.alerting.AlertEscalationChain.final_status)
  return _internal_final_status();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AlertEscalationChain::set_final_status(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.final_status_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.alerting.AlertEscalationChain.final_status)
}
inline std::string* AlertEscalationChain::mutable_final_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_final_status();
  // @@protoc_insertion_point(field_mutable:seigr.alerting.AlertEscalationChain.final_status)
  return _s;
}
inline const std::string& AlertEscalationChain::_internal_final_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.final_status_.Get();
}
inline void AlertEscalationChain::_internal_set_final_status(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.final_status_.Set(value, GetArena());
}
inline std::string* AlertEscalationChain::_internal_mutable_final_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.final_status_.Mutable( GetArena());
}
inline std::string* AlertEscalationChain::release_final_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.alerting.AlertEscalationChain.final_status)
  return _impl_.final_status_.Release();
}
inline void AlertEscalationChain::set_allocated_final_status(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.final_status_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.final_status_.IsDefault()) {
    _impl_.final_status_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.alerting.AlertEscalationChain.final_status)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Alert

// string alert_id = 1;
inline void Alert::clear_alert_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alert_id_.ClearToEmpty();
}
inline const std::string& Alert::alert_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.alerting.Alert.alert_id)
  return _internal_alert_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Alert::set_alert_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alert_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.alerting.Alert.alert_id)
}
inline std::string* Alert::mutable_alert_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_alert_id();
  // @@protoc_insertion_point(field_mutable:seigr.alerting.Alert.alert_id)
  return _s;
}
inline const std::string& Alert::_internal_alert_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.alert_id_.Get();
}
inline void Alert::_internal_set_alert_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alert_id_.Set(value, GetArena());
}
inline std::string* Alert::_internal_mutable_alert_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.alert_id_.Mutable( GetArena());
}
inline std::string* Alert::release_alert_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.alerting.Alert.alert_id)
  return _impl_.alert_id_.Release();
}
inline void Alert::set_allocated_alert_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alert_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.alert_id_.IsDefault()) {
    _impl_.alert_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.alerting.Alert.alert_id)
}

// .seigr.alerting.AlertType type = 2;
inline void Alert::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
}
inline ::seigr::alerting::AlertType Alert::type() const {
  // @@protoc_insertion_point(field_get:seigr.alerting.Alert.type)
  return _internal_type();
}
inline void Alert::set_type(::seigr::alerting::AlertType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:seigr.alerting.Alert.type)
}
inline ::seigr::alerting::AlertType Alert::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::alerting::AlertType>(_impl_.type_);
}
inline void Alert::_internal_set_type(::seigr::alerting::AlertType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// .seigr.alerting.AlertSeverity severity = 3;
inline void Alert::clear_severity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.severity_ = 0;
}
inline ::seigr::alerting::AlertSeverity Alert::severity() const {
  // @@protoc_insertion_point(field_get:seigr.alerting.Alert.severity)
  return _internal_severity();
}
inline void Alert::set_severity(::seigr::alerting::AlertSeverity value) {
  _internal_set_severity(value);
  // @@protoc_insertion_point(field_set:seigr.alerting.Alert.severity)
}
inline ::seigr::alerting::AlertSeverity Alert::_internal_severity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::alerting::AlertSeverity>(_impl_.severity_);
}
inline void Alert::_internal_set_severity(::seigr::alerting::AlertSeverity value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.severity_ = value;
}

// string message = 4;
inline void Alert::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& Alert::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.alerting.Alert.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Alert::set_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.alerting.Alert.message)
}
inline std::string* Alert::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:seigr.alerting.Alert.message)
  return _s;
}
inline const std::string& Alert::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void Alert::_internal_set_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(value, GetArena());
}
inline std::string* Alert::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* Alert::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.alerting.Alert.message)
  return _impl_.message_.Release();
}
inline void Alert::set_allocated_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.alerting.Alert.message)
}

// string timestamp = 5;
inline void Alert::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.ClearToEmpty();
}
inline const std::string& Alert::timestamp() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.alerting.Alert.timestamp)
  return _internal_timestamp();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Alert::set_timestamp(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.alerting.Alert.timestamp)
}
inline std::string* Alert::mutable_timestamp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_timestamp();
  // @@protoc_insertion_point(field_mutable:seigr.alerting.Alert.timestamp)
  return _s;
}
inline const std::string& Alert::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_.Get();
}
inline void Alert::_internal_set_timestamp(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.Set(value, GetArena());
}
inline std::string* Alert::_internal_mutable_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.timestamp_.Mutable( GetArena());
}
inline std::string* Alert::release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.alerting.Alert.timestamp)
  return _impl_.timestamp_.Release();
}
inline void Alert::set_allocated_timestamp(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.timestamp_.IsDefault()) {
    _impl_.timestamp_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.alerting.Alert.timestamp)
}

// string source_component = 6;
inline void Alert::clear_source_component() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_component_.ClearToEmpty();
}
inline const std::string& Alert::source_component() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.alerting.Alert.source_component)
  return _internal_source_component();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Alert::set_source_component(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_component_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.alerting.Alert.source_component)
}
inline std::string* Alert::mutable_source_component() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_source_component();
  // @@protoc_insertion_point(field_mutable:seigr.alerting.Alert.source_component)
  return _s;
}
inline const std::string& Alert::_internal_source_component() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.source_component_.Get();
}
inline void Alert::_internal_set_source_component(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_component_.Set(value, GetArena());
}
inline std::string* Alert::_internal_mutable_source_component() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.source_component_.Mutable( GetArena());
}
inline std::string* Alert::release_source_component() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.alerting.Alert.source_component)
  return _impl_.source_component_.Release();
}
inline void Alert::set_allocated_source_component(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_component_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.source_component_.IsDefault()) {
    _impl_.source_component_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.alerting.Alert.source_component)
}

// .seigr.alerting.AlertTriggerSource trigger_source = 7;
inline void Alert::clear_trigger_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trigger_source_ = 0;
}
inline ::seigr::alerting::AlertTriggerSource Alert::trigger_source() const {
  // @@protoc_insertion_point(field_get:seigr.alerting.Alert.trigger_source)
  return _internal_trigger_source();
}
inline void Alert::set_trigger_source(::seigr::alerting::AlertTriggerSource value) {
  _internal_set_trigger_source(value);
  // @@protoc_insertion_point(field_set:seigr.alerting.Alert.trigger_source)
}
inline ::seigr::alerting::AlertTriggerSource Alert::_internal_trigger_source() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::alerting::AlertTriggerSource>(_impl_.trigger_source_);
}
inline void Alert::_internal_set_trigger_source(::seigr::alerting::AlertTriggerSource value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trigger_source_ = value;
}

// .seigr.alerting.AlertContext context = 8;
inline bool Alert::has_context() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.context_ != nullptr);
  return value;
}
inline void Alert::clear_context() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.context_ != nullptr) _impl_.context_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::seigr::alerting::AlertContext& Alert::_internal_context() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seigr::alerting::AlertContext* p = _impl_.context_;
  return p != nullptr ? *p : reinterpret_cast<const ::seigr::alerting::AlertContext&>(::seigr::alerting::_AlertContext_default_instance_);
}
inline const ::seigr::alerting::AlertContext& Alert::context() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.alerting.Alert.context)
  return _internal_context();
}
inline void Alert::unsafe_arena_set_allocated_context(::seigr::alerting::AlertContext* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.context_);
  }
  _impl_.context_ = reinterpret_cast<::seigr::alerting::AlertContext*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seigr.alerting.Alert.context)
}
inline ::seigr::alerting::AlertContext* Alert::release_context() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seigr::alerting::AlertContext* released = _impl_.context_;
  _impl_.context_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seigr::alerting::AlertContext* Alert::unsafe_arena_release_context() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.alerting.Alert.context)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seigr::alerting::AlertContext* temp = _impl_.context_;
  _impl_.context_ = nullptr;
  return temp;
}
inline ::seigr::alerting::AlertContext* Alert::_internal_mutable_context() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.context_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seigr::alerting::AlertContext>(GetArena());
    _impl_.context_ = reinterpret_cast<::seigr::alerting::AlertContext*>(p);
  }
  return _impl_.context_;
}
inline ::seigr::alerting::AlertContext* Alert::mutable_context() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::seigr::alerting::AlertContext* _msg = _internal_mutable_context();
  // @@protoc_insertion_point(field_mutable:seigr.alerting.Alert.context)
  return _msg;
}
inline void Alert::set_allocated_context(::seigr::alerting::AlertContext* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.context_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.context_ = reinterpret_cast<::seigr::alerting::AlertContext*>(value);
  // @@protoc_insertion_point(field_set_allocated:seigr.alerting.Alert.context)
}

// map<string, string> metadata = 9;
inline int Alert::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int Alert::metadata_size() const {
  return _internal_metadata_size();
}
inline void Alert::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& Alert::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& Alert::metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.alerting.Alert.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* Alert::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* Alert::mutable_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.alerting.Alert.metadata)
  return _internal_mutable_metadata();
}

// .seigr.alerting.AlertResolution resolution = 10;
inline bool Alert::has_resolution() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.resolution_ != nullptr);
  return value;
}
inline void Alert::clear_resolution() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.resolution_ != nullptr) _impl_.resolution_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::seigr::alerting::AlertResolution& Alert::_internal_resolution() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seigr::alerting::AlertResolution* p = _impl_.resolution_;
  return p != nullptr ? *p : reinterpret_cast<const ::seigr::alerting::AlertResolution&>(::seigr::alerting::_AlertResolution_default_instance_);
}
inline const ::seigr::alerting::AlertResolution& Alert::resolution() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.alerting.Alert.resolution)
  return _internal_resolution();
}
inline void Alert::unsafe_arena_set_allocated_resolution(::seigr::alerting::AlertResolution* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.resolution_);
  }
  _impl_.resolution_ = reinterpret_cast<::seigr::alerting::AlertResolution*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seigr.alerting.Alert.resolution)
}
inline ::seigr::alerting::AlertResolution* Alert::release_resolution() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::seigr::alerting::AlertResolution* released = _impl_.resolution_;
  _impl_.resolution_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seigr::alerting::AlertResolution* Alert::unsafe_arena_release_resolution() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.alerting.Alert.resolution)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::seigr::alerting::AlertResolution* temp = _impl_.resolution_;
  _impl_.resolution_ = nullptr;
  return temp;
}
inline ::seigr::alerting::AlertResolution* Alert::_internal_mutable_resolution() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.resolution_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seigr::alerting::AlertResolution>(GetArena());
    _impl_.resolution_ = reinterpret_cast<::seigr::alerting::AlertResolution*>(p);
  }
  return _impl_.resolution_;
}
inline ::seigr::alerting::AlertResolution* Alert::mutable_resolution() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::seigr::alerting::AlertResolution* _msg = _internal_mutable_resolution();
  // @@protoc_insertion_point(field_mutable:seigr.alerting.Alert.resolution)
  return _msg;
}
inline void Alert::set_allocated_resolution(::seigr::alerting::AlertResolution* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.resolution_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.resolution_ = reinterpret_cast<::seigr::alerting::AlertResolution*>(value);
  // @@protoc_insertion_point(field_set_allocated:seigr.alerting.Alert.resolution)
}

// .seigr.alerting.AlertEscalationChain escalation_chain = 11;
inline bool Alert::has_escalation_chain() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.escalation_chain_ != nullptr);
  return value;
}
inline void Alert::clear_escalation_chain() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.escalation_chain_ != nullptr) _impl_.escalation_chain_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::seigr::alerting::AlertEscalationChain& Alert::_internal_escalation_chain() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seigr::alerting::AlertEscalationChain* p = _impl_.escalation_chain_;
  return p != nullptr ? *p : reinterpret_cast<const ::seigr::alerting::AlertEscalationChain&>(::seigr::alerting::_AlertEscalationChain_default_instance_);
}
inline const ::seigr::alerting::AlertEscalationChain& Alert::escalation_chain() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.alerting.Alert.escalation_chain)
  return _internal_escalation_chain();
}
inline void Alert::unsafe_arena_set_allocated_escalation_chain(::seigr::alerting::AlertEscalationChain* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.escalation_chain_);
  }
  _impl_.escalation_chain_ = reinterpret_cast<::seigr::alerting::AlertEscalationChain*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seigr.alerting.Alert.escalation_chain)
}
inline ::seigr::alerting::AlertEscalationChain* Alert::release_escalation_chain() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::seigr::alerting::AlertEscalationChain* released = _impl_.escalation_chain_;
  _impl_.escalation_chain_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seigr::alerting::AlertEscalationChain* Alert::unsafe_arena_release_escalation_chain() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.alerting.Alert.escalation_chain)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::seigr::alerting::AlertEscalationChain* temp = _impl_.escalation_chain_;
  _impl_.escalation_chain_ = nullptr;
  return temp;
}
inline ::seigr::alerting::AlertEscalationChain* Alert::_internal_mutable_escalation_chain() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.escalation_chain_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seigr::alerting::AlertEscalationChain>(GetArena());
    _impl_.escalation_chain_ = reinterpret_cast<::seigr::alerting::AlertEscalationChain*>(p);
  }
  return _impl_.escalation_chain_;
}
inline ::seigr::alerting::AlertEscalationChain* Alert::mutable_escalation_chain() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::seigr::alerting::AlertEscalationChain* _msg = _internal_mutable_escalation_chain();
  // @@protoc_insertion_point(field_mutable:seigr.alerting.Alert.escalation_chain)
  return _msg;
}
inline void Alert::set_allocated_escalation_chain(::seigr::alerting::AlertEscalationChain* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.escalation_chain_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.escalation_chain_ = reinterpret_cast<::seigr::alerting::AlertEscalationChain*>(value);
  // @@protoc_insertion_point(field_set_allocated:seigr.alerting.Alert.escalation_chain)
}

// .seigr.alerting.AlertAction last_action = 12;
inline void Alert::clear_last_action() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_action_ = 0;
}
inline ::seigr::alerting::AlertAction Alert::last_action() const {
  // @@protoc_insertion_point(field_get:seigr.alerting.Alert.last_action)
  return _internal_last_action();
}
inline void Alert::set_last_action(::seigr::alerting::AlertAction value) {
  _internal_set_last_action(value);
  // @@protoc_insertion_point(field_set:seigr.alerting.Alert.last_action)
}
inline ::seigr::alerting::AlertAction Alert::_internal_last_action() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::alerting::AlertAction>(_impl_.last_action_);
}
inline void Alert::_internal_set_last_action(::seigr::alerting::AlertAction value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_action_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// AlertRule

// string rule_id = 1;
inline void AlertRule::clear_rule_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rule_id_.ClearToEmpty();
}
inline const std::string& AlertRule::rule_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.alerting.AlertRule.rule_id)
  return _internal_rule_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AlertRule::set_rule_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rule_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.alerting.AlertRule.rule_id)
}
inline std::string* AlertRule::mutable_rule_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_rule_id();
  // @@protoc_insertion_point(field_mutable:seigr.alerting.AlertRule.rule_id)
  return _s;
}
inline const std::string& AlertRule::_internal_rule_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rule_id_.Get();
}
inline void AlertRule::_internal_set_rule_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rule_id_.Set(value, GetArena());
}
inline std::string* AlertRule::_internal_mutable_rule_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.rule_id_.Mutable( GetArena());
}
inline std::string* AlertRule::release_rule_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.alerting.AlertRule.rule_id)
  return _impl_.rule_id_.Release();
}
inline void AlertRule::set_allocated_rule_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rule_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.rule_id_.IsDefault()) {
    _impl_.rule_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.alerting.AlertRule.rule_id)
}

// .seigr.alerting.AlertType alert_type = 2;
inline void AlertRule::clear_alert_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alert_type_ = 0;
}
inline ::seigr::alerting::AlertType AlertRule::alert_type() const {
  // @@protoc_insertion_point(field_get:seigr.alerting.AlertRule.alert_type)
  return _internal_alert_type();
}
inline void AlertRule::set_alert_type(::seigr::alerting::AlertType value) {
  _internal_set_alert_type(value);
  // @@protoc_insertion_point(field_set:seigr.alerting.AlertRule.alert_type)
}
inline ::seigr::alerting::AlertType AlertRule::_internal_alert_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::alerting::AlertType>(_impl_.alert_type_);
}
inline void AlertRule::_internal_set_alert_type(::seigr::alerting::AlertType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alert_type_ = value;
}

// .seigr.alerting.AlertSeverity min_severity = 3;
inline void AlertRule::clear_min_severity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_severity_ = 0;
}
inline ::seigr::alerting::AlertSeverity AlertRule::min_severity() const {
  // @@protoc_insertion_point(field_get:seigr.alerting.AlertRule.min_severity)
  return _internal_min_severity();
}
inline void AlertRule::set_min_severity(::seigr::alerting::AlertSeverity value) {
  _internal_set_min_severity(value);
  // @@protoc_insertion_point(field_set:seigr.alerting.AlertRule.min_severity)
}
inline ::seigr::alerting::AlertSeverity AlertRule::_internal_min_severity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::alerting::AlertSeverity>(_impl_.min_severity_);
}
inline void AlertRule::_internal_set_min_severity(::seigr::alerting::AlertSeverity value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_severity_ = value;
}

// string condition_expression = 4;
inline void AlertRule::clear_condition_expression() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.condition_expression_.ClearToEmpty();
}
inline const std::string& AlertRule::condition_expression() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.alerting.AlertRule.condition_expression)
  return _internal_condition_expression();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AlertRule::set_condition_expression(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.condition_expression_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.alerting.AlertRule.condition_expression)
}
inline std::string* AlertRule::mutable_condition_expression() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_condition_expression();
  // @@protoc_insertion_point(field_mutable:seigr.alerting.AlertRule.condition_expression)
  return _s;
}
inline const std::string& AlertRule::_internal_condition_expression() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.condition_expression_.Get();
}
inline void AlertRule::_internal_set_condition_expression(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.condition_expression_.Set(value, GetArena());
}
inline std::string* AlertRule::_internal_mutable_condition_expression() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.condition_expression_.Mutable( GetArena());
}
inline std::string* AlertRule::release_condition_expression() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.alerting.AlertRule.condition_expression)
  return _impl_.condition_expression_.Release();
}
inline void AlertRule::set_allocated_condition_expression(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.condition_expression_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.condition_expression_.IsDefault()) {
    _impl_.condition_expression_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.alerting.AlertRule.condition_expression)
}

// bool is_enabled = 5;
inline void AlertRule::clear_is_enabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_enabled_ = false;
}
inline bool AlertRule::is_enabled() const {
  // @@protoc_insertion_point(field_get:seigr.alerting.AlertRule.is_enabled)
  return _internal_is_enabled();
}
inline void AlertRule::set_is_enabled(bool value) {
  _internal_set_is_enabled(value);
  // @@protoc_insertion_point(field_set:seigr.alerting.AlertRule.is_enabled)
}
inline bool AlertRule::_internal_is_enabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_enabled_;
}
inline void AlertRule::_internal_set_is_enabled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_enabled_ = value;
}

// repeated string alert_recipients = 6;
inline int AlertRule::_internal_alert_recipients_size() const {
  return _internal_alert_recipients().size();
}
inline int AlertRule::alert_recipients_size() const {
  return _internal_alert_recipients_size();
}
inline void AlertRule::clear_alert_recipients() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alert_recipients_.Clear();
}
inline std::string* AlertRule::add_alert_recipients() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_alert_recipients()->Add();
  // @@protoc_insertion_point(field_add_mutable:seigr.alerting.AlertRule.alert_recipients)
  return _s;
}
inline const std::string& AlertRule::alert_recipients(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.alerting.AlertRule.alert_recipients)
  return _internal_alert_recipients().Get(index);
}
inline std::string* AlertRule::mutable_alert_recipients(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.alerting.AlertRule.alert_recipients)
  return _internal_mutable_alert_recipients()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void AlertRule::set_alert_recipients(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_alert_recipients()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:seigr.alerting.AlertRule.alert_recipients)
}
template <typename Arg_, typename... Args_>
inline void AlertRule::add_alert_recipients(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_alert_recipients(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seigr.alerting.AlertRule.alert_recipients)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
AlertRule::alert_recipients() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.alerting.AlertRule.alert_recipients)
  return _internal_alert_recipients();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
AlertRule::mutable_alert_recipients() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.alerting.AlertRule.alert_recipients)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_alert_recipients();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
AlertRule::_internal_alert_recipients() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.alert_recipients_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
AlertRule::_internal_mutable_alert_recipients() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.alert_recipients_;
}

// string escalation_policy_id = 7;
inline void AlertRule::clear_escalation_policy_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.escalation_policy_id_.ClearToEmpty();
}
inline const std::string& AlertRule::escalation_policy_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.alerting.AlertRule.escalation_policy_id)
  return _internal_escalation_policy_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AlertRule::set_escalation_policy_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.escalation_policy_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.alerting.AlertRule.escalation_policy_id)
}
inline std::string* AlertRule::mutable_escalation_policy_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_escalation_policy_id();
  // @@protoc_insertion_point(field_mutable:seigr.alerting.AlertRule.escalation_policy_id)
  return _s;
}
inline const std::string& AlertRule::_internal_escalation_policy_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.escalation_policy_id_.Get();
}
inline void AlertRule::_internal_set_escalation_policy_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.escalation_policy_id_.Set(value, GetArena());
}
inline std::string* AlertRule::_internal_mutable_escalation_policy_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.escalation_policy_id_.Mutable( GetArena());
}
inline std::string* AlertRule::release_escalation_policy_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.alerting.AlertRule.escalation_policy_id)
  return _impl_.escalation_policy_id_.Release();
}
inline void AlertRule::set_allocated_escalation_policy_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.escalation_policy_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.escalation_policy_id_.IsDefault()) {
    _impl_.escalation_policy_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.alerting.AlertRule.escalation_policy_id)
}

// map<string, string> metadata = 8;
inline int AlertRule::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int AlertRule::metadata_size() const {
  return _internal_metadata_size();
}
inline void AlertRule::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& AlertRule::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& AlertRule::metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.alerting.AlertRule.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* AlertRule::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* AlertRule::mutable_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.alerting.AlertRule.metadata)
  return _internal_mutable_metadata();
}

// bool dynamic_thresholds_enabled = 9;
inline void AlertRule::clear_dynamic_thresholds_enabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dynamic_thresholds_enabled_ = false;
}
inline bool AlertRule::dynamic_thresholds_enabled() const {
  // @@protoc_insertion_point(field_get:seigr.alerting.AlertRule.dynamic_thresholds_enabled)
  return _internal_dynamic_thresholds_enabled();
}
inline void AlertRule::set_dynamic_thresholds_enabled(bool value) {
  _internal_set_dynamic_thresholds_enabled(value);
  // @@protoc_insertion_point(field_set:seigr.alerting.AlertRule.dynamic_thresholds_enabled)
}
inline bool AlertRule::_internal_dynamic_thresholds_enabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dynamic_thresholds_enabled_;
}
inline void AlertRule::_internal_set_dynamic_thresholds_enabled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dynamic_thresholds_enabled_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// AlertNotificationConfig

// string config_id = 1;
inline void AlertNotificationConfig::clear_config_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.config_id_.ClearToEmpty();
}
inline const std::string& AlertNotificationConfig::config_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.alerting.AlertNotificationConfig.config_id)
  return _internal_config_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AlertNotificationConfig::set_config_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.config_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.alerting.AlertNotificationConfig.config_id)
}
inline std::string* AlertNotificationConfig::mutable_config_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_config_id();
  // @@protoc_insertion_point(field_mutable:seigr.alerting.AlertNotificationConfig.config_id)
  return _s;
}
inline const std::string& AlertNotificationConfig::_internal_config_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.config_id_.Get();
}
inline void AlertNotificationConfig::_internal_set_config_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.config_id_.Set(value, GetArena());
}
inline std::string* AlertNotificationConfig::_internal_mutable_config_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.config_id_.Mutable( GetArena());
}
inline std::string* AlertNotificationConfig::release_config_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.alerting.AlertNotificationConfig.config_id)
  return _impl_.config_id_.Release();
}
inline void AlertNotificationConfig::set_allocated_config_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.config_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.config_id_.IsDefault()) {
    _impl_.config_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.alerting.AlertNotificationConfig.config_id)
}

// repeated string default_recipients = 2;
inline int AlertNotificationConfig::_internal_default_recipients_size() const {
  return _internal_default_recipients().size();
}
inline int AlertNotificationConfig::default_recipients_size() const {
  return _internal_default_recipients_size();
}
inline void AlertNotificationConfig::clear_default_recipients() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_recipients_.Clear();
}
inline std::string* AlertNotificationConfig::add_default_recipients() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_default_recipients()->Add();
  // @@protoc_insertion_point(field_add_mutable:seigr.alerting.AlertNotificationConfig.default_recipients)
  return _s;
}
inline const std::string& AlertNotificationConfig::default_recipients(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.alerting.AlertNotificationConfig.default_recipients)
  return _internal_default_recipients().Get(index);
}
inline std::string* AlertNotificationConfig::mutable_default_recipients(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.alerting.AlertNotificationConfig.default_recipients)
  return _internal_mutable_default_recipients()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void AlertNotificationConfig::set_default_recipients(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_default_recipients()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:seigr.alerting.AlertNotificationConfig.default_recipients)
}
template <typename Arg_, typename... Args_>
inline void AlertNotificationConfig::add_default_recipients(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_default_recipients(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seigr.alerting.AlertNotificationConfig.default_recipients)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
AlertNotificationConfig::default_recipients() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.alerting.AlertNotificationConfig.default_recipients)
  return _internal_default_recipients();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
AlertNotificationConfig::mutable_default_recipients() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.alerting.AlertNotificationConfig.default_recipients)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_default_recipients();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
AlertNotificationConfig::_internal_default_recipients() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.default_recipients_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
AlertNotificationConfig::_internal_mutable_default_recipients() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.default_recipients_;
}

// repeated .seigr.alerting.AlertType alert_types = 3;
inline int AlertNotificationConfig::_internal_alert_types_size() const {
  return _internal_alert_types().size();
}
inline int AlertNotificationConfig::alert_types_size() const {
  return _internal_alert_types_size();
}
inline void AlertNotificationConfig::clear_alert_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alert_types_.Clear();
}
inline ::seigr::alerting::AlertType AlertNotificationConfig::alert_types(int index) const {
  // @@protoc_insertion_point(field_get:seigr.alerting.AlertNotificationConfig.alert_types)
  return static_cast<::seigr::alerting::AlertType>(_internal_alert_types().Get(index));
}
inline void AlertNotificationConfig::set_alert_types(int index, ::seigr::alerting::AlertType value) {
  _internal_mutable_alert_types()->Set(index, value);
  // @@protoc_insertion_point(field_set:seigr.alerting.AlertNotificationConfig.alert_types)
}
inline void AlertNotificationConfig::add_alert_types(::seigr::alerting::AlertType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_alert_types()->Add(value);
  // @@protoc_insertion_point(field_add:seigr.alerting.AlertNotificationConfig.alert_types)
}
inline const ::google::protobuf::RepeatedField<int>& AlertNotificationConfig::alert_types() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.alerting.AlertNotificationConfig.alert_types)
  return _internal_alert_types();
}
inline ::google::protobuf::RepeatedField<int>* AlertNotificationConfig::mutable_alert_types()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.alerting.AlertNotificationConfig.alert_types)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_alert_types();
}
inline const ::google::protobuf::RepeatedField<int>& AlertNotificationConfig::_internal_alert_types()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.alert_types_;
}
inline ::google::protobuf::RepeatedField<int>* AlertNotificationConfig::_internal_mutable_alert_types() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.alert_types_;
}

// .seigr.alerting.AlertSeverity min_notification_severity = 4;
inline void AlertNotificationConfig::clear_min_notification_severity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_notification_severity_ = 0;
}
inline ::seigr::alerting::AlertSeverity AlertNotificationConfig::min_notification_severity() const {
  // @@protoc_insertion_point(field_get:seigr.alerting.AlertNotificationConfig.min_notification_severity)
  return _internal_min_notification_severity();
}
inline void AlertNotificationConfig::set_min_notification_severity(::seigr::alerting::AlertSeverity value) {
  _internal_set_min_notification_severity(value);
  // @@protoc_insertion_point(field_set:seigr.alerting.AlertNotificationConfig.min_notification_severity)
}
inline ::seigr::alerting::AlertSeverity AlertNotificationConfig::_internal_min_notification_severity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::alerting::AlertSeverity>(_impl_.min_notification_severity_);
}
inline void AlertNotificationConfig::_internal_set_min_notification_severity(::seigr::alerting::AlertSeverity value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_notification_severity_ = value;
}

// bool email_notifications_enabled = 5;
inline void AlertNotificationConfig::clear_email_notifications_enabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.email_notifications_enabled_ = false;
}
inline bool AlertNotificationConfig::email_notifications_enabled() const {
  // @@protoc_insertion_point(field_get:seigr.alerting.AlertNotificationConfig.email_notifications_enabled)
  return _internal_email_notifications_enabled();
}
inline void AlertNotificationConfig::set_email_notifications_enabled(bool value) {
  _internal_set_email_notifications_enabled(value);
  // @@protoc_insertion_point(field_set:seigr.alerting.AlertNotificationConfig.email_notifications_enabled)
}
inline bool AlertNotificationConfig::_internal_email_notifications_enabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.email_notifications_enabled_;
}
inline void AlertNotificationConfig::_internal_set_email_notifications_enabled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.email_notifications_enabled_ = value;
}

// bool sms_notifications_enabled = 6;
inline void AlertNotificationConfig::clear_sms_notifications_enabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sms_notifications_enabled_ = false;
}
inline bool AlertNotificationConfig::sms_notifications_enabled() const {
  // @@protoc_insertion_point(field_get:seigr.alerting.AlertNotificationConfig.sms_notifications_enabled)
  return _internal_sms_notifications_enabled();
}
inline void AlertNotificationConfig::set_sms_notifications_enabled(bool value) {
  _internal_set_sms_notifications_enabled(value);
  // @@protoc_insertion_point(field_set:seigr.alerting.AlertNotificationConfig.sms_notifications_enabled)
}
inline bool AlertNotificationConfig::_internal_sms_notifications_enabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sms_notifications_enabled_;
}
inline void AlertNotificationConfig::_internal_set_sms_notifications_enabled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sms_notifications_enabled_ = value;
}

// bool push_notifications_enabled = 7;
inline void AlertNotificationConfig::clear_push_notifications_enabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.push_notifications_enabled_ = false;
}
inline bool AlertNotificationConfig::push_notifications_enabled() const {
  // @@protoc_insertion_point(field_get:seigr.alerting.AlertNotificationConfig.push_notifications_enabled)
  return _internal_push_notifications_enabled();
}
inline void AlertNotificationConfig::set_push_notifications_enabled(bool value) {
  _internal_set_push_notifications_enabled(value);
  // @@protoc_insertion_point(field_set:seigr.alerting.AlertNotificationConfig.push_notifications_enabled)
}
inline bool AlertNotificationConfig::_internal_push_notifications_enabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.push_notifications_enabled_;
}
inline void AlertNotificationConfig::_internal_set_push_notifications_enabled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.push_notifications_enabled_ = value;
}

// string do_not_disturb_start_time = 8;
inline void AlertNotificationConfig::clear_do_not_disturb_start_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.do_not_disturb_start_time_.ClearToEmpty();
}
inline const std::string& AlertNotificationConfig::do_not_disturb_start_time() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.alerting.AlertNotificationConfig.do_not_disturb_start_time)
  return _internal_do_not_disturb_start_time();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AlertNotificationConfig::set_do_not_disturb_start_time(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.do_not_disturb_start_time_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.alerting.AlertNotificationConfig.do_not_disturb_start_time)
}
inline std::string* AlertNotificationConfig::mutable_do_not_disturb_start_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_do_not_disturb_start_time();
  // @@protoc_insertion_point(field_mutable:seigr.alerting.AlertNotificationConfig.do_not_disturb_start_time)
  return _s;
}
inline const std::string& AlertNotificationConfig::_internal_do_not_disturb_start_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.do_not_disturb_start_time_.Get();
}
inline void AlertNotificationConfig::_internal_set_do_not_disturb_start_time(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.do_not_disturb_start_time_.Set(value, GetArena());
}
inline std::string* AlertNotificationConfig::_internal_mutable_do_not_disturb_start_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.do_not_disturb_start_time_.Mutable( GetArena());
}
inline std::string* AlertNotificationConfig::release_do_not_disturb_start_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.alerting.AlertNotificationConfig.do_not_disturb_start_time)
  return _impl_.do_not_disturb_start_time_.Release();
}
inline void AlertNotificationConfig::set_allocated_do_not_disturb_start_time(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.do_not_disturb_start_time_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.do_not_disturb_start_time_.IsDefault()) {
    _impl_.do_not_disturb_start_time_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.alerting.AlertNotificationConfig.do_not_disturb_start_time)
}

// string do_not_disturb_end_time = 9;
inline void AlertNotificationConfig::clear_do_not_disturb_end_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.do_not_disturb_end_time_.ClearToEmpty();
}
inline const std::string& AlertNotificationConfig::do_not_disturb_end_time() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.alerting.AlertNotificationConfig.do_not_disturb_end_time)
  return _internal_do_not_disturb_end_time();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AlertNotificationConfig::set_do_not_disturb_end_time(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.do_not_disturb_end_time_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.alerting.AlertNotificationConfig.do_not_disturb_end_time)
}
inline std::string* AlertNotificationConfig::mutable_do_not_disturb_end_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_do_not_disturb_end_time();
  // @@protoc_insertion_point(field_mutable:seigr.alerting.AlertNotificationConfig.do_not_disturb_end_time)
  return _s;
}
inline const std::string& AlertNotificationConfig::_internal_do_not_disturb_end_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.do_not_disturb_end_time_.Get();
}
inline void AlertNotificationConfig::_internal_set_do_not_disturb_end_time(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.do_not_disturb_end_time_.Set(value, GetArena());
}
inline std::string* AlertNotificationConfig::_internal_mutable_do_not_disturb_end_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.do_not_disturb_end_time_.Mutable( GetArena());
}
inline std::string* AlertNotificationConfig::release_do_not_disturb_end_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.alerting.AlertNotificationConfig.do_not_disturb_end_time)
  return _impl_.do_not_disturb_end_time_.Release();
}
inline void AlertNotificationConfig::set_allocated_do_not_disturb_end_time(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.do_not_disturb_end_time_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.do_not_disturb_end_time_.IsDefault()) {
    _impl_.do_not_disturb_end_time_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.alerting.AlertNotificationConfig.do_not_disturb_end_time)
}

// map<string, bool> channel_preferences = 10;
inline int AlertNotificationConfig::_internal_channel_preferences_size() const {
  return _internal_channel_preferences().size();
}
inline int AlertNotificationConfig::channel_preferences_size() const {
  return _internal_channel_preferences_size();
}
inline void AlertNotificationConfig::clear_channel_preferences() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_preferences_.Clear();
}
inline const ::google::protobuf::Map<std::string, bool>& AlertNotificationConfig::_internal_channel_preferences() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.channel_preferences_.GetMap();
}
inline const ::google::protobuf::Map<std::string, bool>& AlertNotificationConfig::channel_preferences() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.alerting.AlertNotificationConfig.channel_preferences)
  return _internal_channel_preferences();
}
inline ::google::protobuf::Map<std::string, bool>* AlertNotificationConfig::_internal_mutable_channel_preferences() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.channel_preferences_.MutableMap();
}
inline ::google::protobuf::Map<std::string, bool>* AlertNotificationConfig::mutable_channel_preferences() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.alerting.AlertNotificationConfig.channel_preferences)
  return _internal_mutable_channel_preferences();
}

// map<string, string> metadata = 11;
inline int AlertNotificationConfig::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int AlertNotificationConfig::metadata_size() const {
  return _internal_metadata_size();
}
inline void AlertNotificationConfig::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& AlertNotificationConfig::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& AlertNotificationConfig::metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.alerting.AlertNotificationConfig.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* AlertNotificationConfig::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* AlertNotificationConfig::mutable_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.alerting.AlertNotificationConfig.metadata)
  return _internal_mutable_metadata();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// AlertLog

// string log_id = 1;
inline void AlertLog::clear_log_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.log_id_.ClearToEmpty();
}
inline const std::string& AlertLog::log_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.alerting.AlertLog.log_id)
  return _internal_log_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AlertLog::set_log_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.log_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.alerting.AlertLog.log_id)
}
inline std::string* AlertLog::mutable_log_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_log_id();
  // @@protoc_insertion_point(field_mutable:seigr.alerting.AlertLog.log_id)
  return _s;
}
inline const std::string& AlertLog::_internal_log_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.log_id_.Get();
}
inline void AlertLog::_internal_set_log_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.log_id_.Set(value, GetArena());
}
inline std::string* AlertLog::_internal_mutable_log_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.log_id_.Mutable( GetArena());
}
inline std::string* AlertLog::release_log_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.alerting.AlertLog.log_id)
  return _impl_.log_id_.Release();
}
inline void AlertLog::set_allocated_log_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.log_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.log_id_.IsDefault()) {
    _impl_.log_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.alerting.AlertLog.log_id)
}

// string alert_id = 2;
inline void AlertLog::clear_alert_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alert_id_.ClearToEmpty();
}
inline const std::string& AlertLog::alert_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.alerting.AlertLog.alert_id)
  return _internal_alert_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AlertLog::set_alert_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alert_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.alerting.AlertLog.alert_id)
}
inline std::string* AlertLog::mutable_alert_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_alert_id();
  // @@protoc_insertion_point(field_mutable:seigr.alerting.AlertLog.alert_id)
  return _s;
}
inline const std::string& AlertLog::_internal_alert_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.alert_id_.Get();
}
inline void AlertLog::_internal_set_alert_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alert_id_.Set(value, GetArena());
}
inline std::string* AlertLog::_internal_mutable_alert_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.alert_id_.Mutable( GetArena());
}
inline std::string* AlertLog::release_alert_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.alerting.AlertLog.alert_id)
  return _impl_.alert_id_.Release();
}
inline void AlertLog::set_allocated_alert_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alert_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.alert_id_.IsDefault()) {
    _impl_.alert_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.alerting.AlertLog.alert_id)
}

// .seigr.alerting.AlertSeverity severity = 3;
inline void AlertLog::clear_severity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.severity_ = 0;
}
inline ::seigr::alerting::AlertSeverity AlertLog::severity() const {
  // @@protoc_insertion_point(field_get:seigr.alerting.AlertLog.severity)
  return _internal_severity();
}
inline void AlertLog::set_severity(::seigr::alerting::AlertSeverity value) {
  _internal_set_severity(value);
  // @@protoc_insertion_point(field_set:seigr.alerting.AlertLog.severity)
}
inline ::seigr::alerting::AlertSeverity AlertLog::_internal_severity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::alerting::AlertSeverity>(_impl_.severity_);
}
inline void AlertLog::_internal_set_severity(::seigr::alerting::AlertSeverity value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.severity_ = value;
}

// string log_timestamp = 4;
inline void AlertLog::clear_log_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.log_timestamp_.ClearToEmpty();
}
inline const std::string& AlertLog::log_timestamp() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.alerting.AlertLog.log_timestamp)
  return _internal_log_timestamp();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AlertLog::set_log_timestamp(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.log_timestamp_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.alerting.AlertLog.log_timestamp)
}
inline std::string* AlertLog::mutable_log_timestamp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_log_timestamp();
  // @@protoc_insertion_point(field_mutable:seigr.alerting.AlertLog.log_timestamp)
  return _s;
}
inline const std::string& AlertLog::_internal_log_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.log_timestamp_.Get();
}
inline void AlertLog::_internal_set_log_timestamp(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.log_timestamp_.Set(value, GetArena());
}
inline std::string* AlertLog::_internal_mutable_log_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.log_timestamp_.Mutable( GetArena());
}
inline std::string* AlertLog::release_log_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.alerting.AlertLog.log_timestamp)
  return _impl_.log_timestamp_.Release();
}
inline void AlertLog::set_allocated_log_timestamp(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.log_timestamp_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.log_timestamp_.IsDefault()) {
    _impl_.log_timestamp_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.alerting.AlertLog.log_timestamp)
}

// string alert_status = 5;
inline void AlertLog::clear_alert_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alert_status_.ClearToEmpty();
}
inline const std::string& AlertLog::alert_status() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.alerting.AlertLog.alert_status)
  return _internal_alert_status();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AlertLog::set_alert_status(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alert_status_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.alerting.AlertLog.alert_status)
}
inline std::string* AlertLog::mutable_alert_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_alert_status();
  // @@protoc_insertion_point(field_mutable:seigr.alerting.AlertLog.alert_status)
  return _s;
}
inline const std::string& AlertLog::_internal_alert_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.alert_status_.Get();
}
inline void AlertLog::_internal_set_alert_status(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alert_status_.Set(value, GetArena());
}
inline std::string* AlertLog::_internal_mutable_alert_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.alert_status_.Mutable( GetArena());
}
inline std::string* AlertLog::release_alert_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.alerting.AlertLog.alert_status)
  return _impl_.alert_status_.Release();
}
inline void AlertLog::set_allocated_alert_status(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alert_status_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.alert_status_.IsDefault()) {
    _impl_.alert_status_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.alerting.AlertLog.alert_status)
}

// .seigr.alerting.AlertResolution resolution = 6;
inline bool AlertLog::has_resolution() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.resolution_ != nullptr);
  return value;
}
inline void AlertLog::clear_resolution() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.resolution_ != nullptr) _impl_.resolution_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::seigr::alerting::AlertResolution& AlertLog::_internal_resolution() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seigr::alerting::AlertResolution* p = _impl_.resolution_;
  return p != nullptr ? *p : reinterpret_cast<const ::seigr::alerting::AlertResolution&>(::seigr::alerting::_AlertResolution_default_instance_);
}
inline const ::seigr::alerting::AlertResolution& AlertLog::resolution() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.alerting.AlertLog.resolution)
  return _internal_resolution();
}
inline void AlertLog::unsafe_arena_set_allocated_resolution(::seigr::alerting::AlertResolution* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.resolution_);
  }
  _impl_.resolution_ = reinterpret_cast<::seigr::alerting::AlertResolution*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seigr.alerting.AlertLog.resolution)
}
inline ::seigr::alerting::AlertResolution* AlertLog::release_resolution() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seigr::alerting::AlertResolution* released = _impl_.resolution_;
  _impl_.resolution_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seigr::alerting::AlertResolution* AlertLog::unsafe_arena_release_resolution() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.alerting.AlertLog.resolution)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seigr::alerting::AlertResolution* temp = _impl_.resolution_;
  _impl_.resolution_ = nullptr;
  return temp;
}
inline ::seigr::alerting::AlertResolution* AlertLog::_internal_mutable_resolution() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.resolution_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seigr::alerting::AlertResolution>(GetArena());
    _impl_.resolution_ = reinterpret_cast<::seigr::alerting::AlertResolution*>(p);
  }
  return _impl_.resolution_;
}
inline ::seigr::alerting::AlertResolution* AlertLog::mutable_resolution() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::seigr::alerting::AlertResolution* _msg = _internal_mutable_resolution();
  // @@protoc_insertion_point(field_mutable:seigr.alerting.AlertLog.resolution)
  return _msg;
}
inline void AlertLog::set_allocated_resolution(::seigr::alerting::AlertResolution* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.resolution_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.resolution_ = reinterpret_cast<::seigr::alerting::AlertResolution*>(value);
  // @@protoc_insertion_point(field_set_allocated:seigr.alerting.AlertLog.resolution)
}

// map<string, string> metadata = 7;
inline int AlertLog::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int AlertLog::metadata_size() const {
  return _internal_metadata_size();
}
inline void AlertLog::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& AlertLog::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& AlertLog::metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.alerting.AlertLog.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* AlertLog::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* AlertLog::mutable_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.alerting.AlertLog.metadata)
  return _internal_mutable_metadata();
}

// repeated string event_trace = 8;
inline int AlertLog::_internal_event_trace_size() const {
  return _internal_event_trace().size();
}
inline int AlertLog::event_trace_size() const {
  return _internal_event_trace_size();
}
inline void AlertLog::clear_event_trace() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.event_trace_.Clear();
}
inline std::string* AlertLog::add_event_trace() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_event_trace()->Add();
  // @@protoc_insertion_point(field_add_mutable:seigr.alerting.AlertLog.event_trace)
  return _s;
}
inline const std::string& AlertLog::event_trace(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.alerting.AlertLog.event_trace)
  return _internal_event_trace().Get(index);
}
inline std::string* AlertLog::mutable_event_trace(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.alerting.AlertLog.event_trace)
  return _internal_mutable_event_trace()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void AlertLog::set_event_trace(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_event_trace()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:seigr.alerting.AlertLog.event_trace)
}
template <typename Arg_, typename... Args_>
inline void AlertLog::add_event_trace(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_event_trace(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seigr.alerting.AlertLog.event_trace)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
AlertLog::event_trace() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.alerting.AlertLog.event_trace)
  return _internal_event_trace();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
AlertLog::mutable_event_trace() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.alerting.AlertLog.event_trace)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_event_trace();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
AlertLog::_internal_event_trace() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.event_trace_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
AlertLog::_internal_mutable_event_trace() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.event_trace_;
}

// string status_code = 9;
inline void AlertLog::clear_status_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_code_.ClearToEmpty();
}
inline const std::string& AlertLog::status_code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.alerting.AlertLog.status_code)
  return _internal_status_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AlertLog::set_status_code(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.alerting.AlertLog.status_code)
}
inline std::string* AlertLog::mutable_status_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_status_code();
  // @@protoc_insertion_point(field_mutable:seigr.alerting.AlertLog.status_code)
  return _s;
}
inline const std::string& AlertLog::_internal_status_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_code_.Get();
}
inline void AlertLog::_internal_set_status_code(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_code_.Set(value, GetArena());
}
inline std::string* AlertLog::_internal_mutable_status_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.status_code_.Mutable( GetArena());
}
inline std::string* AlertLog::release_status_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.alerting.AlertLog.status_code)
  return _impl_.status_code_.Release();
}
inline void AlertLog::set_allocated_status_code(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_code_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.status_code_.IsDefault()) {
    _impl_.status_code_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.alerting.AlertLog.status_code)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// AlertRequest

// repeated .seigr.alerting.AlertType requested_types = 1;
inline int AlertRequest::_internal_requested_types_size() const {
  return _internal_requested_types().size();
}
inline int AlertRequest::requested_types_size() const {
  return _internal_requested_types_size();
}
inline void AlertRequest::clear_requested_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requested_types_.Clear();
}
inline ::seigr::alerting::AlertType AlertRequest::requested_types(int index) const {
  // @@protoc_insertion_point(field_get:seigr.alerting.AlertRequest.requested_types)
  return static_cast<::seigr::alerting::AlertType>(_internal_requested_types().Get(index));
}
inline void AlertRequest::set_requested_types(int index, ::seigr::alerting::AlertType value) {
  _internal_mutable_requested_types()->Set(index, value);
  // @@protoc_insertion_point(field_set:seigr.alerting.AlertRequest.requested_types)
}
inline void AlertRequest::add_requested_types(::seigr::alerting::AlertType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_requested_types()->Add(value);
  // @@protoc_insertion_point(field_add:seigr.alerting.AlertRequest.requested_types)
}
inline const ::google::protobuf::RepeatedField<int>& AlertRequest::requested_types() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.alerting.AlertRequest.requested_types)
  return _internal_requested_types();
}
inline ::google::protobuf::RepeatedField<int>* AlertRequest::mutable_requested_types()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.alerting.AlertRequest.requested_types)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_requested_types();
}
inline const ::google::protobuf::RepeatedField<int>& AlertRequest::_internal_requested_types()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.requested_types_;
}
inline ::google::protobuf::RepeatedField<int>* AlertRequest::_internal_mutable_requested_types() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.requested_types_;
}

// .seigr.alerting.AlertSeverity min_severity = 2;
inline void AlertRequest::clear_min_severity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_severity_ = 0;
}
inline ::seigr::alerting::AlertSeverity AlertRequest::min_severity() const {
  // @@protoc_insertion_point(field_get:seigr.alerting.AlertRequest.min_severity)
  return _internal_min_severity();
}
inline void AlertRequest::set_min_severity(::seigr::alerting::AlertSeverity value) {
  _internal_set_min_severity(value);
  // @@protoc_insertion_point(field_set:seigr.alerting.AlertRequest.min_severity)
}
inline ::seigr::alerting::AlertSeverity AlertRequest::_internal_min_severity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::alerting::AlertSeverity>(_impl_.min_severity_);
}
inline void AlertRequest::_internal_set_min_severity(::seigr::alerting::AlertSeverity value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_severity_ = value;
}

// string start_time_filter = 3;
inline void AlertRequest::clear_start_time_filter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.start_time_filter_.ClearToEmpty();
}
inline const std::string& AlertRequest::start_time_filter() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.alerting.AlertRequest.start_time_filter)
  return _internal_start_time_filter();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AlertRequest::set_start_time_filter(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.start_time_filter_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.alerting.AlertRequest.start_time_filter)
}
inline std::string* AlertRequest::mutable_start_time_filter() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_start_time_filter();
  // @@protoc_insertion_point(field_mutable:seigr.alerting.AlertRequest.start_time_filter)
  return _s;
}
inline const std::string& AlertRequest::_internal_start_time_filter() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.start_time_filter_.Get();
}
inline void AlertRequest::_internal_set_start_time_filter(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.start_time_filter_.Set(value, GetArena());
}
inline std::string* AlertRequest::_internal_mutable_start_time_filter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.start_time_filter_.Mutable( GetArena());
}
inline std::string* AlertRequest::release_start_time_filter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.alerting.AlertRequest.start_time_filter)
  return _impl_.start_time_filter_.Release();
}
inline void AlertRequest::set_allocated_start_time_filter(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.start_time_filter_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.start_time_filter_.IsDefault()) {
    _impl_.start_time_filter_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.alerting.AlertRequest.start_time_filter)
}

// string end_time_filter = 4;
inline void AlertRequest::clear_end_time_filter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.end_time_filter_.ClearToEmpty();
}
inline const std::string& AlertRequest::end_time_filter() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.alerting.AlertRequest.end_time_filter)
  return _internal_end_time_filter();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AlertRequest::set_end_time_filter(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.end_time_filter_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.alerting.AlertRequest.end_time_filter)
}
inline std::string* AlertRequest::mutable_end_time_filter() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_end_time_filter();
  // @@protoc_insertion_point(field_mutable:seigr.alerting.AlertRequest.end_time_filter)
  return _s;
}
inline const std::string& AlertRequest::_internal_end_time_filter() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.end_time_filter_.Get();
}
inline void AlertRequest::_internal_set_end_time_filter(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.end_time_filter_.Set(value, GetArena());
}
inline std::string* AlertRequest::_internal_mutable_end_time_filter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.end_time_filter_.Mutable( GetArena());
}
inline std::string* AlertRequest::release_end_time_filter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.alerting.AlertRequest.end_time_filter)
  return _impl_.end_time_filter_.Release();
}
inline void AlertRequest::set_allocated_end_time_filter(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.end_time_filter_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.end_time_filter_.IsDefault()) {
    _impl_.end_time_filter_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.alerting.AlertRequest.end_time_filter)
}

// repeated string source_components = 5;
inline int AlertRequest::_internal_source_components_size() const {
  return _internal_source_components().size();
}
inline int AlertRequest::source_components_size() const {
  return _internal_source_components_size();
}
inline void AlertRequest::clear_source_components() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_components_.Clear();
}
inline std::string* AlertRequest::add_source_components() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_source_components()->Add();
  // @@protoc_insertion_point(field_add_mutable:seigr.alerting.AlertRequest.source_components)
  return _s;
}
inline const std::string& AlertRequest::source_components(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.alerting.AlertRequest.source_components)
  return _internal_source_components().Get(index);
}
inline std::string* AlertRequest::mutable_source_components(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.alerting.AlertRequest.source_components)
  return _internal_mutable_source_components()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void AlertRequest::set_source_components(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_source_components()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:seigr.alerting.AlertRequest.source_components)
}
template <typename Arg_, typename... Args_>
inline void AlertRequest::add_source_components(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_source_components(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seigr.alerting.AlertRequest.source_components)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
AlertRequest::source_components() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.alerting.AlertRequest.source_components)
  return _internal_source_components();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
AlertRequest::mutable_source_components() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.alerting.AlertRequest.source_components)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_source_components();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
AlertRequest::_internal_source_components() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.source_components_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
AlertRequest::_internal_mutable_source_components() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.source_components_;
}

// map<string, string> filters = 6;
inline int AlertRequest::_internal_filters_size() const {
  return _internal_filters().size();
}
inline int AlertRequest::filters_size() const {
  return _internal_filters_size();
}
inline void AlertRequest::clear_filters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.filters_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& AlertRequest::_internal_filters() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.filters_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& AlertRequest::filters() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.alerting.AlertRequest.filters)
  return _internal_filters();
}
inline ::google::protobuf::Map<std::string, std::string>* AlertRequest::_internal_mutable_filters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.filters_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* AlertRequest::mutable_filters() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.alerting.AlertRequest.filters)
  return _internal_mutable_filters();
}

// bool include_escalations = 7;
inline void AlertRequest::clear_include_escalations() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_escalations_ = false;
}
inline bool AlertRequest::include_escalations() const {
  // @@protoc_insertion_point(field_get:seigr.alerting.AlertRequest.include_escalations)
  return _internal_include_escalations();
}
inline void AlertRequest::set_include_escalations(bool value) {
  _internal_set_include_escalations(value);
  // @@protoc_insertion_point(field_set:seigr.alerting.AlertRequest.include_escalations)
}
inline bool AlertRequest::_internal_include_escalations() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.include_escalations_;
}
inline void AlertRequest::_internal_set_include_escalations(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_escalations_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// AlertResponse

// repeated .seigr.alerting.AlertLog matching_logs = 1;
inline int AlertResponse::_internal_matching_logs_size() const {
  return _internal_matching_logs().size();
}
inline int AlertResponse::matching_logs_size() const {
  return _internal_matching_logs_size();
}
inline void AlertResponse::clear_matching_logs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.matching_logs_.Clear();
}
inline ::seigr::alerting::AlertLog* AlertResponse::mutable_matching_logs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.alerting.AlertResponse.matching_logs)
  return _internal_mutable_matching_logs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seigr::alerting::AlertLog>* AlertResponse::mutable_matching_logs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.alerting.AlertResponse.matching_logs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_matching_logs();
}
inline const ::seigr::alerting::AlertLog& AlertResponse::matching_logs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.alerting.AlertResponse.matching_logs)
  return _internal_matching_logs().Get(index);
}
inline ::seigr::alerting::AlertLog* AlertResponse::add_matching_logs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seigr::alerting::AlertLog* _add = _internal_mutable_matching_logs()->Add();
  // @@protoc_insertion_point(field_add:seigr.alerting.AlertResponse.matching_logs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seigr::alerting::AlertLog>& AlertResponse::matching_logs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.alerting.AlertResponse.matching_logs)
  return _internal_matching_logs();
}
inline const ::google::protobuf::RepeatedPtrField<::seigr::alerting::AlertLog>&
AlertResponse::_internal_matching_logs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.matching_logs_;
}
inline ::google::protobuf::RepeatedPtrField<::seigr::alerting::AlertLog>*
AlertResponse::_internal_mutable_matching_logs() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.matching_logs_;
}

// string request_id = 2;
inline void AlertResponse::clear_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_.ClearToEmpty();
}
inline const std::string& AlertResponse::request_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.alerting.AlertResponse.request_id)
  return _internal_request_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AlertResponse::set_request_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.alerting.AlertResponse.request_id)
}
inline std::string* AlertResponse::mutable_request_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_request_id();
  // @@protoc_insertion_point(field_mutable:seigr.alerting.AlertResponse.request_id)
  return _s;
}
inline const std::string& AlertResponse::_internal_request_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.request_id_.Get();
}
inline void AlertResponse::_internal_set_request_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_.Set(value, GetArena());
}
inline std::string* AlertResponse::_internal_mutable_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.request_id_.Mutable( GetArena());
}
inline std::string* AlertResponse::release_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.alerting.AlertResponse.request_id)
  return _impl_.request_id_.Release();
}
inline void AlertResponse::set_allocated_request_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.request_id_.IsDefault()) {
    _impl_.request_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.alerting.AlertResponse.request_id)
}

// string response_timestamp = 3;
inline void AlertResponse::clear_response_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.response_timestamp_.ClearToEmpty();
}
inline const std::string& AlertResponse::response_timestamp() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.alerting.AlertResponse.response_timestamp)
  return _internal_response_timestamp();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AlertResponse::set_response_timestamp(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.response_timestamp_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.alerting.AlertResponse.response_timestamp)
}
inline std::string* AlertResponse::mutable_response_timestamp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_response_timestamp();
  // @@protoc_insertion_point(field_mutable:seigr.alerting.AlertResponse.response_timestamp)
  return _s;
}
inline const std::string& AlertResponse::_internal_response_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.response_timestamp_.Get();
}
inline void AlertResponse::_internal_set_response_timestamp(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.response_timestamp_.Set(value, GetArena());
}
inline std::string* AlertResponse::_internal_mutable_response_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.response_timestamp_.Mutable( GetArena());
}
inline std::string* AlertResponse::release_response_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.alerting.AlertResponse.response_timestamp)
  return _impl_.response_timestamp_.Release();
}
inline void AlertResponse::set_allocated_response_timestamp(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.response_timestamp_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.response_timestamp_.IsDefault()) {
    _impl_.response_timestamp_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.alerting.AlertResponse.response_timestamp)
}

// map<string, string> metadata = 4;
inline int AlertResponse::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int AlertResponse::metadata_size() const {
  return _internal_metadata_size();
}
inline void AlertResponse::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& AlertResponse::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& AlertResponse::metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.alerting.AlertResponse.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* AlertResponse::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* AlertResponse::mutable_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.alerting.AlertResponse.metadata)
  return _internal_mutable_metadata();
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace alerting
}  // namespace seigr


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::seigr::alerting::AlertType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::seigr::alerting::AlertType>() {
  return ::seigr::alerting::AlertType_descriptor();
}
template <>
struct is_proto_enum<::seigr::alerting::AlertSeverity> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::seigr::alerting::AlertSeverity>() {
  return ::seigr::alerting::AlertSeverity_descriptor();
}
template <>
struct is_proto_enum<::seigr::alerting::AlertTriggerSource> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::seigr::alerting::AlertTriggerSource>() {
  return ::seigr::alerting::AlertTriggerSource_descriptor();
}
template <>
struct is_proto_enum<::seigr::alerting::AlertAction> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::seigr::alerting::AlertAction>() {
  return ::seigr::alerting::AlertAction_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // alerting_2eproto_2epb_2eh
