// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: analytics.proto
// Protobuf C++ Version: 5.29.2

#include "analytics.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace seigr {
namespace analytics {
              template <typename>
PROTOBUF_CONSTEXPR DataMetric_MetadataEntry_DoNotUse::DataMetric_MetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : DataMetric_MetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : DataMetric_MetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct DataMetric_MetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DataMetric_MetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DataMetric_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    DataMetric_MetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DataMetric_MetadataEntry_DoNotUseDefaultTypeInternal _DataMetric_MetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR AnalyticsWorkflowConfig_ModelParametersEntry_DoNotUse::AnalyticsWorkflowConfig_ModelParametersEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : AnalyticsWorkflowConfig_ModelParametersEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : AnalyticsWorkflowConfig_ModelParametersEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct AnalyticsWorkflowConfig_ModelParametersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AnalyticsWorkflowConfig_ModelParametersEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AnalyticsWorkflowConfig_ModelParametersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    AnalyticsWorkflowConfig_ModelParametersEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AnalyticsWorkflowConfig_ModelParametersEntry_DoNotUseDefaultTypeInternal _AnalyticsWorkflowConfig_ModelParametersEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR AnalyticsWorkflowConfig_MetadataEntry_DoNotUse::AnalyticsWorkflowConfig_MetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : AnalyticsWorkflowConfig_MetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : AnalyticsWorkflowConfig_MetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct AnalyticsWorkflowConfig_MetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AnalyticsWorkflowConfig_MetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AnalyticsWorkflowConfig_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    AnalyticsWorkflowConfig_MetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AnalyticsWorkflowConfig_MetadataEntry_DoNotUseDefaultTypeInternal _AnalyticsWorkflowConfig_MetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR AnalyticsSummary_MetadataEntry_DoNotUse::AnalyticsSummary_MetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : AnalyticsSummary_MetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : AnalyticsSummary_MetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct AnalyticsSummary_MetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AnalyticsSummary_MetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AnalyticsSummary_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    AnalyticsSummary_MetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AnalyticsSummary_MetadataEntry_DoNotUseDefaultTypeInternal _AnalyticsSummary_MetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR AnalyticsSummary_ForecastValuesEntry_DoNotUse::AnalyticsSummary_ForecastValuesEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : AnalyticsSummary_ForecastValuesEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : AnalyticsSummary_ForecastValuesEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct AnalyticsSummary_ForecastValuesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AnalyticsSummary_ForecastValuesEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AnalyticsSummary_ForecastValuesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    AnalyticsSummary_ForecastValuesEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AnalyticsSummary_ForecastValuesEntry_DoNotUseDefaultTypeInternal _AnalyticsSummary_ForecastValuesEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR AnalyticsSettings_MetadataEntry_DoNotUse::AnalyticsSettings_MetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : AnalyticsSettings_MetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : AnalyticsSettings_MetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct AnalyticsSettings_MetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AnalyticsSettings_MetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AnalyticsSettings_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    AnalyticsSettings_MetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AnalyticsSettings_MetadataEntry_DoNotUseDefaultTypeInternal _AnalyticsSettings_MetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR AnalyticsReport_MetadataEntry_DoNotUse::AnalyticsReport_MetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : AnalyticsReport_MetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : AnalyticsReport_MetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct AnalyticsReport_MetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AnalyticsReport_MetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AnalyticsReport_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    AnalyticsReport_MetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AnalyticsReport_MetadataEntry_DoNotUseDefaultTypeInternal _AnalyticsReport_MetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR AnalyticsInsight_MetadataEntry_DoNotUse::AnalyticsInsight_MetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : AnalyticsInsight_MetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : AnalyticsInsight_MetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct AnalyticsInsight_MetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AnalyticsInsight_MetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AnalyticsInsight_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    AnalyticsInsight_MetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AnalyticsInsight_MetadataEntry_DoNotUseDefaultTypeInternal _AnalyticsInsight_MetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR AnalyticsAlertThreshold_MetadataEntry_DoNotUse::AnalyticsAlertThreshold_MetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : AnalyticsAlertThreshold_MetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : AnalyticsAlertThreshold_MetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct AnalyticsAlertThreshold_MetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AnalyticsAlertThreshold_MetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AnalyticsAlertThreshold_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    AnalyticsAlertThreshold_MetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AnalyticsAlertThreshold_MetadataEntry_DoNotUseDefaultTypeInternal _AnalyticsAlertThreshold_MetadataEntry_DoNotUse_default_instance_;

inline constexpr DataMetric::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : metadata_{},
        metric_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        unit_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        recorded_at_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        source_component_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        metric_type_{static_cast< ::seigr::analytics::MetricType >(0)},
        category_{static_cast< ::seigr::analytics::MetricCategory >(0)},
        value_{0},
        forecasted_value_{0},
        aggregation_method_{static_cast< ::seigr::analytics::AggregationMethod >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DataMetric::DataMetric(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DataMetricDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DataMetricDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DataMetricDefaultTypeInternal() {}
  union {
    DataMetric _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DataMetricDefaultTypeInternal _DataMetric_default_instance_;

inline constexpr AnalyticsWorkflowConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : metric_ids_{},
        metadata_{},
        model_parameters_{},
        workflow_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        created_by_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        created_at_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        model_type_{static_cast< ::seigr::ai_analysis::ModelType >(0)},
        evaluation_interval_seconds_{0},
        enable_forecasting_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AnalyticsWorkflowConfig::AnalyticsWorkflowConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AnalyticsWorkflowConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AnalyticsWorkflowConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AnalyticsWorkflowConfigDefaultTypeInternal() {}
  union {
    AnalyticsWorkflowConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AnalyticsWorkflowConfigDefaultTypeInternal _AnalyticsWorkflowConfig_default_instance_;

inline constexpr AnalyticsSummary::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : forecast_values_{},
        metadata_{},
        summary_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        trend_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        period_covered_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        average_value_{0},
        max_value_{0},
        min_value_{0},
        standard_deviation_{0},
        category_{static_cast< ::seigr::analytics::MetricCategory >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AnalyticsSummary::AnalyticsSummary(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AnalyticsSummaryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AnalyticsSummaryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AnalyticsSummaryDefaultTypeInternal() {}
  union {
    AnalyticsSummary _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AnalyticsSummaryDefaultTypeInternal _AnalyticsSummary_default_instance_;

inline constexpr AnalyticsInsight::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : metadata_{},
        insight_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        metric_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        context_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        insight_value_{0},
        escalation_level_{static_cast< ::seigr::event::EscalationLevel >(0)},
        is_anomaly_{false},
        is_recurring_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AnalyticsInsight::AnalyticsInsight(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AnalyticsInsightDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AnalyticsInsightDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AnalyticsInsightDefaultTypeInternal() {}
  union {
    AnalyticsInsight _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AnalyticsInsightDefaultTypeInternal _AnalyticsInsight_default_instance_;

inline constexpr AnalyticsAlertThreshold::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : notification_channels_{},
        metadata_{},
        threshold_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        condition_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        action_on_breach_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        threshold_value_{0},
        category_{static_cast< ::seigr::analytics::MetricCategory >(0)},
        severity_{static_cast< ::seigr::alerting::AlertSeverity >(0)},
        escalation_level_{static_cast< ::seigr::event::EscalationLevel >(0)},
        restrict_to_business_hours_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AnalyticsAlertThreshold::AnalyticsAlertThreshold(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AnalyticsAlertThresholdDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AnalyticsAlertThresholdDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AnalyticsAlertThresholdDefaultTypeInternal() {}
  union {
    AnalyticsAlertThreshold _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AnalyticsAlertThresholdDefaultTypeInternal _AnalyticsAlertThreshold_default_instance_;

inline constexpr AnalyticsSettings::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : thresholds_{},
        metadata_{},
        aggregation_interval_seconds_{0},
        data_retention_days_{0},
        real_time_alerting_enabled_{false},
        alert_evaluation_interval_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AnalyticsSettings::AnalyticsSettings(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AnalyticsSettingsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AnalyticsSettingsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AnalyticsSettingsDefaultTypeInternal() {}
  union {
    AnalyticsSettings _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AnalyticsSettingsDefaultTypeInternal _AnalyticsSettings_default_instance_;

inline constexpr AnalyticsReport::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : metrics_{},
        insights_{},
        metadata_{},
        comparison_report_ids_{},
        report_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        generated_by_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AnalyticsReport::AnalyticsReport(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AnalyticsReportDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AnalyticsReportDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AnalyticsReportDefaultTypeInternal() {}
  union {
    AnalyticsReport _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AnalyticsReportDefaultTypeInternal _AnalyticsReport_default_instance_;
}  // namespace analytics
}  // namespace seigr
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_analytics_2eproto[3];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_analytics_2eproto = nullptr;
const ::uint32_t
    TableStruct_analytics_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsWorkflowConfig_MetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsWorkflowConfig_MetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsWorkflowConfig_MetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsWorkflowConfig_MetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsWorkflowConfig_ModelParametersEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsWorkflowConfig_ModelParametersEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsWorkflowConfig_ModelParametersEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsWorkflowConfig_ModelParametersEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsWorkflowConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsWorkflowConfig, _impl_.workflow_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsWorkflowConfig, _impl_.metric_ids_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsWorkflowConfig, _impl_.model_type_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsWorkflowConfig, _impl_.evaluation_interval_seconds_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsWorkflowConfig, _impl_.enable_forecasting_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsWorkflowConfig, _impl_.created_by_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsWorkflowConfig, _impl_.created_at_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsWorkflowConfig, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsWorkflowConfig, _impl_.model_parameters_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsInsight_MetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsInsight_MetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsInsight_MetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsInsight_MetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsInsight, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsInsight, _impl_.insight_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsInsight, _impl_.metric_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsInsight, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsInsight, _impl_.insight_value_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsInsight, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsInsight, _impl_.escalation_level_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsInsight, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsInsight, _impl_.is_anomaly_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsInsight, _impl_.is_recurring_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsInsight, _impl_.context_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::DataMetric_MetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::DataMetric_MetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::DataMetric_MetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::DataMetric_MetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::DataMetric, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::DataMetric, _impl_.metric_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::DataMetric, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::DataMetric, _impl_.metric_type_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::DataMetric, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::DataMetric, _impl_.value_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::DataMetric, _impl_.unit_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::DataMetric, _impl_.recorded_at_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::DataMetric, _impl_.aggregation_method_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::DataMetric, _impl_.source_component_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::DataMetric, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::DataMetric, _impl_.forecasted_value_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsAlertThreshold_MetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsAlertThreshold_MetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsAlertThreshold_MetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsAlertThreshold_MetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsAlertThreshold, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsAlertThreshold, _impl_.threshold_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsAlertThreshold, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsAlertThreshold, _impl_.threshold_value_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsAlertThreshold, _impl_.severity_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsAlertThreshold, _impl_.escalation_level_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsAlertThreshold, _impl_.condition_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsAlertThreshold, _impl_.notification_channels_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsAlertThreshold, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsAlertThreshold, _impl_.action_on_breach_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsAlertThreshold, _impl_.restrict_to_business_hours_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsSettings_MetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsSettings_MetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsSettings_MetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsSettings_MetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsSettings, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsSettings, _impl_.aggregation_interval_seconds_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsSettings, _impl_.data_retention_days_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsSettings, _impl_.real_time_alerting_enabled_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsSettings, _impl_.alert_evaluation_interval_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsSettings, _impl_.thresholds_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsSettings, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsSummary_ForecastValuesEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsSummary_ForecastValuesEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsSummary_ForecastValuesEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsSummary_ForecastValuesEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsSummary_MetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsSummary_MetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsSummary_MetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsSummary_MetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsSummary, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsSummary, _impl_.summary_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsSummary, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsSummary, _impl_.average_value_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsSummary, _impl_.max_value_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsSummary, _impl_.min_value_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsSummary, _impl_.standard_deviation_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsSummary, _impl_.forecast_values_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsSummary, _impl_.trend_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsSummary, _impl_.period_covered_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsSummary, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsReport_MetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsReport_MetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsReport_MetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsReport_MetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsReport, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsReport, _impl_.report_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsReport, _impl_.title_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsReport, _impl_.metrics_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsReport, _impl_.insights_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsReport, _impl_.generated_by_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsReport, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsReport, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::analytics::AnalyticsReport, _impl_.comparison_report_ids_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::seigr::analytics::AnalyticsWorkflowConfig_MetadataEntry_DoNotUse)},
        {12, 22, -1, sizeof(::seigr::analytics::AnalyticsWorkflowConfig_ModelParametersEntry_DoNotUse)},
        {24, -1, -1, sizeof(::seigr::analytics::AnalyticsWorkflowConfig)},
        {41, 51, -1, sizeof(::seigr::analytics::AnalyticsInsight_MetadataEntry_DoNotUse)},
        {53, -1, -1, sizeof(::seigr::analytics::AnalyticsInsight)},
        {71, 81, -1, sizeof(::seigr::analytics::DataMetric_MetadataEntry_DoNotUse)},
        {83, -1, -1, sizeof(::seigr::analytics::DataMetric)},
        {102, 112, -1, sizeof(::seigr::analytics::AnalyticsAlertThreshold_MetadataEntry_DoNotUse)},
        {114, -1, -1, sizeof(::seigr::analytics::AnalyticsAlertThreshold)},
        {132, 142, -1, sizeof(::seigr::analytics::AnalyticsSettings_MetadataEntry_DoNotUse)},
        {144, -1, -1, sizeof(::seigr::analytics::AnalyticsSettings)},
        {158, 168, -1, sizeof(::seigr::analytics::AnalyticsSummary_ForecastValuesEntry_DoNotUse)},
        {170, 180, -1, sizeof(::seigr::analytics::AnalyticsSummary_MetadataEntry_DoNotUse)},
        {182, -1, -1, sizeof(::seigr::analytics::AnalyticsSummary)},
        {200, 210, -1, sizeof(::seigr::analytics::AnalyticsReport_MetadataEntry_DoNotUse)},
        {212, -1, -1, sizeof(::seigr::analytics::AnalyticsReport)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::seigr::analytics::_AnalyticsWorkflowConfig_MetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::analytics::_AnalyticsWorkflowConfig_ModelParametersEntry_DoNotUse_default_instance_._instance,
    &::seigr::analytics::_AnalyticsWorkflowConfig_default_instance_._instance,
    &::seigr::analytics::_AnalyticsInsight_MetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::analytics::_AnalyticsInsight_default_instance_._instance,
    &::seigr::analytics::_DataMetric_MetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::analytics::_DataMetric_default_instance_._instance,
    &::seigr::analytics::_AnalyticsAlertThreshold_MetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::analytics::_AnalyticsAlertThreshold_default_instance_._instance,
    &::seigr::analytics::_AnalyticsSettings_MetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::analytics::_AnalyticsSettings_default_instance_._instance,
    &::seigr::analytics::_AnalyticsSummary_ForecastValuesEntry_DoNotUse_default_instance_._instance,
    &::seigr::analytics::_AnalyticsSummary_MetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::analytics::_AnalyticsSummary_default_instance_._instance,
    &::seigr::analytics::_AnalyticsReport_MetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::analytics::_AnalyticsReport_default_instance_._instance,
};
const char descriptor_table_protodef_analytics_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\017analytics.proto\022\017seigr.analytics\032\016aler"
    "ting.proto\032\021ai_analysis.proto\032\013event.pro"
    "to\"\351\003\n\027AnalyticsWorkflowConfig\022\023\n\013workfl"
    "ow_id\030\001 \001(\t\022\022\n\nmetric_ids\030\002 \003(\t\0220\n\nmodel"
    "_type\030\003 \001(\0162\034.seigr.ai_analysis.ModelTyp"
    "e\022#\n\033evaluation_interval_seconds\030\004 \001(\005\022\032"
    "\n\022enable_forecasting\030\005 \001(\010\022\022\n\ncreated_by"
    "\030\006 \001(\t\022\022\n\ncreated_at\030\007 \001(\t\022H\n\010metadata\030\010"
    " \003(\01326.seigr.analytics.AnalyticsWorkflow"
    "Config.MetadataEntry\022W\n\020model_parameters"
    "\030\t \003(\0132=.seigr.analytics.AnalyticsWorkfl"
    "owConfig.ModelParametersEntry\032/\n\rMetadat"
    "aEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\0326"
    "\n\024ModelParametersEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005v"
    "alue\030\002 \001(\t:\0028\001\"\337\002\n\020AnalyticsInsight\022\022\n\ni"
    "nsight_id\030\001 \001(\t\022\021\n\tmetric_id\030\002 \001(\t\022\023\n\013de"
    "scription\030\003 \001(\t\022\025\n\rinsight_value\030\004 \001(\001\022\021"
    "\n\ttimestamp\030\005 \001(\t\0226\n\020escalation_level\030\006 "
    "\001(\0162\034.seigr.event.EscalationLevel\022A\n\010met"
    "adata\030\007 \003(\0132/.seigr.analytics.AnalyticsI"
    "nsight.MetadataEntry\022\022\n\nis_anomaly\030\010 \001(\010"
    "\022\024\n\014is_recurring\030\t \001(\010\022\017\n\007context\030\n \001(\t\032"
    "/\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002"
    " \001(\t:\0028\001\"\246\003\n\nDataMetric\022\021\n\tmetric_id\030\001 \001"
    "(\t\022\014\n\004name\030\002 \001(\t\0220\n\013metric_type\030\003 \001(\0162\033."
    "seigr.analytics.MetricType\0221\n\010category\030\004"
    " \001(\0162\037.seigr.analytics.MetricCategory\022\r\n"
    "\005value\030\005 \001(\001\022\014\n\004unit\030\006 \001(\t\022\023\n\013recorded_a"
    "t\030\007 \001(\t\022>\n\022aggregation_method\030\010 \001(\0162\".se"
    "igr.analytics.AggregationMethod\022\030\n\020sourc"
    "e_component\030\t \001(\t\022;\n\010metadata\030\n \003(\0132).se"
    "igr.analytics.DataMetric.MetadataEntry\022\030"
    "\n\020forecasted_value\030\013 \001(\001\032/\n\rMetadataEntr"
    "y\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\317\003\n\027An"
    "alyticsAlertThreshold\022\024\n\014threshold_id\030\001 "
    "\001(\t\0221\n\010category\030\002 \001(\0162\037.seigr.analytics."
    "MetricCategory\022\027\n\017threshold_value\030\003 \001(\001\022"
    "/\n\010severity\030\004 \001(\0162\035.seigr.alerting.Alert"
    "Severity\0226\n\020escalation_level\030\005 \001(\0162\034.sei"
    "gr.event.EscalationLevel\022\021\n\tcondition\030\006 "
    "\001(\t\022\035\n\025notification_channels\030\007 \003(\t\022H\n\010me"
    "tadata\030\010 \003(\01326.seigr.analytics.Analytics"
    "AlertThreshold.MetadataEntry\022\030\n\020action_o"
    "n_breach\030\t \001(\t\022\"\n\032restrict_to_business_h"
    "ours\030\n \001(\010\032/\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t"
    "\022\r\n\005value\030\002 \001(\t:\0028\001\"\320\002\n\021AnalyticsSetting"
    "s\022$\n\034aggregation_interval_seconds\030\001 \001(\005\022"
    "\033\n\023data_retention_days\030\002 \001(\005\022\"\n\032real_tim"
    "e_alerting_enabled\030\003 \001(\010\022!\n\031alert_evalua"
    "tion_interval\030\004 \001(\005\022<\n\nthresholds\030\005 \003(\0132"
    "(.seigr.analytics.AnalyticsAlertThreshol"
    "d\022B\n\010metadata\030\006 \003(\01320.seigr.analytics.An"
    "alyticsSettings.MetadataEntry\032/\n\rMetadat"
    "aEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\324"
    "\003\n\020AnalyticsSummary\022\022\n\nsummary_id\030\001 \001(\t\022"
    "1\n\010category\030\002 \001(\0162\037.seigr.analytics.Metr"
    "icCategory\022\025\n\raverage_value\030\003 \001(\001\022\021\n\tmax"
    "_value\030\004 \001(\001\022\021\n\tmin_value\030\005 \001(\001\022\032\n\022stand"
    "ard_deviation\030\006 \001(\001\022N\n\017forecast_values\030\007"
    " \003(\01325.seigr.analytics.AnalyticsSummary."
    "ForecastValuesEntry\022\r\n\005trend\030\010 \001(\t\022\026\n\016pe"
    "riod_covered\030\t \001(\t\022A\n\010metadata\030\n \003(\0132/.s"
    "eigr.analytics.AnalyticsSummary.Metadata"
    "Entry\0325\n\023ForecastValuesEntry\022\013\n\003key\030\001 \001("
    "\t\022\r\n\005value\030\002 \001(\001:\0028\001\032/\n\rMetadataEntry\022\013\n"
    "\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\321\002\n\017Analyt"
    "icsReport\022\021\n\treport_id\030\001 \001(\t\022\r\n\005title\030\002 "
    "\001(\t\022,\n\007metrics\030\003 \003(\0132\033.seigr.analytics.D"
    "ataMetric\0223\n\010insights\030\004 \003(\0132!.seigr.anal"
    "ytics.AnalyticsInsight\022\024\n\014generated_by\030\005"
    " \001(\t\022\021\n\ttimestamp\030\006 \001(\t\022@\n\010metadata\030\007 \003("
    "\0132..seigr.analytics.AnalyticsReport.Meta"
    "dataEntry\022\035\n\025comparison_report_ids\030\010 \003(\t"
    "\032/\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030"
    "\002 \001(\t:\0028\001*\306\001\n\016MetricCategory\022\035\n\031METRIC_C"
    "ATEGORY_UNDEFINED\020\000\022\037\n\033METRIC_CATEGORY_P"
    "ERFORMANCE\020\001\022\034\n\030METRIC_CATEGORY_SECURITY"
    "\020\002\022\031\n\025METRIC_CATEGORY_USAGE\020\003\022\037\n\033METRIC_"
    "CATEGORY_RELIABILITY\020\004\022\032\n\026METRIC_CATEGOR"
    "Y_CUSTOM\020\005*\237\001\n\nMetricType\022\031\n\025METRIC_TYPE"
    "_UNDEFINED\020\000\022\027\n\023METRIC_TYPE_AVERAGE\020\001\022\027\n"
    "\023METRIC_TYPE_MAXIMUM\020\002\022\027\n\023METRIC_TYPE_MI"
    "NIMUM\020\003\022\026\n\022METRIC_TYPE_MEDIAN\020\004\022\023\n\017METRI"
    "C_TYPE_SUM\020\005*\232\001\n\021AggregationMethod\022 \n\034AG"
    "GREGATION_METHOD_UNDEFINED\020\000\022\021\n\rAGGREGAT"
    "E_SUM\020\001\022\025\n\021AGGREGATE_AVERAGE\020\002\022\023\n\017AGGREG"
    "ATE_COUNT\020\003\022\021\n\rAGGREGATE_MAX\020\004\022\021\n\rAGGREG"
    "ATE_MIN\020\005b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_analytics_2eproto_deps[3] =
    {
        &::descriptor_table_ai_5fanalysis_2eproto,
        &::descriptor_table_alerting_2eproto,
        &::descriptor_table_event_2eproto,
};
static ::absl::once_flag descriptor_table_analytics_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_analytics_2eproto = {
    false,
    false,
    3497,
    descriptor_table_protodef_analytics_2eproto,
    "analytics.proto",
    &descriptor_table_analytics_2eproto_once,
    descriptor_table_analytics_2eproto_deps,
    3,
    16,
    schemas,
    file_default_instances,
    TableStruct_analytics_2eproto::offsets,
    file_level_enum_descriptors_analytics_2eproto,
    file_level_service_descriptors_analytics_2eproto,
};
namespace seigr {
namespace analytics {
const ::google::protobuf::EnumDescriptor* MetricCategory_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_analytics_2eproto);
  return file_level_enum_descriptors_analytics_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t MetricCategory_internal_data_[] = {
    393216u, 0u, };
bool MetricCategory_IsValid(int value) {
  return 0 <= value && value <= 5;
}
const ::google::protobuf::EnumDescriptor* MetricType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_analytics_2eproto);
  return file_level_enum_descriptors_analytics_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t MetricType_internal_data_[] = {
    393216u, 0u, };
bool MetricType_IsValid(int value) {
  return 0 <= value && value <= 5;
}
const ::google::protobuf::EnumDescriptor* AggregationMethod_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_analytics_2eproto);
  return file_level_enum_descriptors_analytics_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t AggregationMethod_internal_data_[] = {
    393216u, 0u, };
bool AggregationMethod_IsValid(int value) {
  return 0 <= value && value <= 5;
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              AnalyticsWorkflowConfig_MetadataEntry_DoNotUse::AnalyticsWorkflowConfig_MetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              AnalyticsWorkflowConfig_MetadataEntry_DoNotUse::AnalyticsWorkflowConfig_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              AnalyticsWorkflowConfig_MetadataEntry_DoNotUse::AnalyticsWorkflowConfig_MetadataEntry_DoNotUse() : SuperType() {}
              AnalyticsWorkflowConfig_MetadataEntry_DoNotUse::AnalyticsWorkflowConfig_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* AnalyticsWorkflowConfig_MetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) AnalyticsWorkflowConfig_MetadataEntry_DoNotUse(arena);
              }
              constexpr auto AnalyticsWorkflowConfig_MetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AnalyticsWorkflowConfig_MetadataEntry_DoNotUse),
                                                          alignof(AnalyticsWorkflowConfig_MetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull AnalyticsWorkflowConfig_MetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_AnalyticsWorkflowConfig_MetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &AnalyticsWorkflowConfig_MetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<AnalyticsWorkflowConfig_MetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &AnalyticsWorkflowConfig_MetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &AnalyticsWorkflowConfig_MetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(AnalyticsWorkflowConfig_MetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &AnalyticsWorkflowConfig_MetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_analytics_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* AnalyticsWorkflowConfig_MetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 70, 2> AnalyticsWorkflowConfig_MetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AnalyticsWorkflowConfig_MetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::analytics::AnalyticsWorkflowConfig_MetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsWorkflowConfig_MetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsWorkflowConfig_MetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(AnalyticsWorkflowConfig_MetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(AnalyticsWorkflowConfig_MetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\65\3\5\0\0\0\0\0"
    "seigr.analytics.AnalyticsWorkflowConfig.MetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              AnalyticsWorkflowConfig_ModelParametersEntry_DoNotUse::AnalyticsWorkflowConfig_ModelParametersEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              AnalyticsWorkflowConfig_ModelParametersEntry_DoNotUse::AnalyticsWorkflowConfig_ModelParametersEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              AnalyticsWorkflowConfig_ModelParametersEntry_DoNotUse::AnalyticsWorkflowConfig_ModelParametersEntry_DoNotUse() : SuperType() {}
              AnalyticsWorkflowConfig_ModelParametersEntry_DoNotUse::AnalyticsWorkflowConfig_ModelParametersEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* AnalyticsWorkflowConfig_ModelParametersEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) AnalyticsWorkflowConfig_ModelParametersEntry_DoNotUse(arena);
              }
              constexpr auto AnalyticsWorkflowConfig_ModelParametersEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AnalyticsWorkflowConfig_ModelParametersEntry_DoNotUse),
                                                          alignof(AnalyticsWorkflowConfig_ModelParametersEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull AnalyticsWorkflowConfig_ModelParametersEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_AnalyticsWorkflowConfig_ModelParametersEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &AnalyticsWorkflowConfig_ModelParametersEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<AnalyticsWorkflowConfig_ModelParametersEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &AnalyticsWorkflowConfig_ModelParametersEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &AnalyticsWorkflowConfig_ModelParametersEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(AnalyticsWorkflowConfig_ModelParametersEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &AnalyticsWorkflowConfig_ModelParametersEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_analytics_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* AnalyticsWorkflowConfig_ModelParametersEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 77, 2> AnalyticsWorkflowConfig_ModelParametersEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AnalyticsWorkflowConfig_ModelParametersEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::analytics::AnalyticsWorkflowConfig_ModelParametersEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsWorkflowConfig_ModelParametersEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsWorkflowConfig_ModelParametersEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(AnalyticsWorkflowConfig_ModelParametersEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(AnalyticsWorkflowConfig_ModelParametersEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\74\3\5\0\0\0\0\0"
    "seigr.analytics.AnalyticsWorkflowConfig.ModelParametersEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class AnalyticsWorkflowConfig::_Internal {
 public:
};

AnalyticsWorkflowConfig::AnalyticsWorkflowConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.analytics.AnalyticsWorkflowConfig)
}
inline PROTOBUF_NDEBUG_INLINE AnalyticsWorkflowConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::analytics::AnalyticsWorkflowConfig& from_msg)
      : metric_ids_{visibility, arena, from.metric_ids_},
        metadata_{visibility, arena, from.metadata_},
        model_parameters_{visibility, arena, from.model_parameters_},
        workflow_id_(arena, from.workflow_id_),
        created_by_(arena, from.created_by_),
        created_at_(arena, from.created_at_),
        _cached_size_{0} {}

AnalyticsWorkflowConfig::AnalyticsWorkflowConfig(
    ::google::protobuf::Arena* arena,
    const AnalyticsWorkflowConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AnalyticsWorkflowConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, model_type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, model_type_),
           offsetof(Impl_, enable_forecasting_) -
               offsetof(Impl_, model_type_) +
               sizeof(Impl_::enable_forecasting_));

  // @@protoc_insertion_point(copy_constructor:seigr.analytics.AnalyticsWorkflowConfig)
}
inline PROTOBUF_NDEBUG_INLINE AnalyticsWorkflowConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : metric_ids_{visibility, arena},
        metadata_{visibility, arena},
        model_parameters_{visibility, arena},
        workflow_id_(arena),
        created_by_(arena),
        created_at_(arena),
        _cached_size_{0} {}

inline void AnalyticsWorkflowConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, model_type_),
           0,
           offsetof(Impl_, enable_forecasting_) -
               offsetof(Impl_, model_type_) +
               sizeof(Impl_::enable_forecasting_));
}
AnalyticsWorkflowConfig::~AnalyticsWorkflowConfig() {
  // @@protoc_insertion_point(destructor:seigr.analytics.AnalyticsWorkflowConfig)
  SharedDtor(*this);
}
inline void AnalyticsWorkflowConfig::SharedDtor(MessageLite& self) {
  AnalyticsWorkflowConfig& this_ = static_cast<AnalyticsWorkflowConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.workflow_id_.Destroy();
  this_._impl_.created_by_.Destroy();
  this_._impl_.created_at_.Destroy();
  this_._impl_.~Impl_();
}

inline void* AnalyticsWorkflowConfig::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AnalyticsWorkflowConfig(arena);
}
constexpr auto AnalyticsWorkflowConfig::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(AnalyticsWorkflowConfig, _impl_.metric_ids_) +
          decltype(AnalyticsWorkflowConfig::_impl_.metric_ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(AnalyticsWorkflowConfig, _impl_.metadata_) +
          decltype(AnalyticsWorkflowConfig::_impl_.metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(AnalyticsWorkflowConfig, _impl_.metadata_) +
          decltype(AnalyticsWorkflowConfig::_impl_.metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(AnalyticsWorkflowConfig, _impl_.model_parameters_) +
          decltype(AnalyticsWorkflowConfig::_impl_.model_parameters_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(AnalyticsWorkflowConfig, _impl_.model_parameters_) +
          decltype(AnalyticsWorkflowConfig::_impl_.model_parameters_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(AnalyticsWorkflowConfig), alignof(AnalyticsWorkflowConfig), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&AnalyticsWorkflowConfig::PlacementNew_,
                                 sizeof(AnalyticsWorkflowConfig),
                                 alignof(AnalyticsWorkflowConfig));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AnalyticsWorkflowConfig::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AnalyticsWorkflowConfig_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AnalyticsWorkflowConfig::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AnalyticsWorkflowConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AnalyticsWorkflowConfig::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AnalyticsWorkflowConfig>(), &AnalyticsWorkflowConfig::ByteSizeLong,
            &AnalyticsWorkflowConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AnalyticsWorkflowConfig, _impl_._cached_size_),
        false,
    },
    &AnalyticsWorkflowConfig::kDescriptorMethods,
    &descriptor_table_analytics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AnalyticsWorkflowConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 9, 2, 121, 2> AnalyticsWorkflowConfig::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    9, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::analytics::AnalyticsWorkflowConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string workflow_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsWorkflowConfig, _impl_.workflow_id_)}},
    // repeated string metric_ids = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsWorkflowConfig, _impl_.metric_ids_)}},
    // .seigr.ai_analysis.ModelType model_type = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AnalyticsWorkflowConfig, _impl_.model_type_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsWorkflowConfig, _impl_.model_type_)}},
    // int32 evaluation_interval_seconds = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AnalyticsWorkflowConfig, _impl_.evaluation_interval_seconds_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsWorkflowConfig, _impl_.evaluation_interval_seconds_)}},
    // bool enable_forecasting = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AnalyticsWorkflowConfig, _impl_.enable_forecasting_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsWorkflowConfig, _impl_.enable_forecasting_)}},
    // string created_by = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsWorkflowConfig, _impl_.created_by_)}},
    // string created_at = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsWorkflowConfig, _impl_.created_at_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string workflow_id = 1;
    {PROTOBUF_FIELD_OFFSET(AnalyticsWorkflowConfig, _impl_.workflow_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string metric_ids = 2;
    {PROTOBUF_FIELD_OFFSET(AnalyticsWorkflowConfig, _impl_.metric_ids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // .seigr.ai_analysis.ModelType model_type = 3;
    {PROTOBUF_FIELD_OFFSET(AnalyticsWorkflowConfig, _impl_.model_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // int32 evaluation_interval_seconds = 4;
    {PROTOBUF_FIELD_OFFSET(AnalyticsWorkflowConfig, _impl_.evaluation_interval_seconds_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool enable_forecasting = 5;
    {PROTOBUF_FIELD_OFFSET(AnalyticsWorkflowConfig, _impl_.enable_forecasting_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string created_by = 6;
    {PROTOBUF_FIELD_OFFSET(AnalyticsWorkflowConfig, _impl_.created_by_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string created_at = 7;
    {PROTOBUF_FIELD_OFFSET(AnalyticsWorkflowConfig, _impl_.created_at_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> metadata = 8;
    {PROTOBUF_FIELD_OFFSET(AnalyticsWorkflowConfig, _impl_.metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<string, string> model_parameters = 9;
    {PROTOBUF_FIELD_OFFSET(AnalyticsWorkflowConfig, _impl_.model_parameters_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(AnalyticsWorkflowConfig()._impl_.metadata_)>(
        1, 0, 0, 9,
        9)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(AnalyticsWorkflowConfig()._impl_.model_parameters_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\47\13\12\0\0\0\12\12\10\20\0\0\0\0\0\0"
    "seigr.analytics.AnalyticsWorkflowConfig"
    "workflow_id"
    "metric_ids"
    "created_by"
    "created_at"
    "metadata"
    "model_parameters"
  }},
};

PROTOBUF_NOINLINE void AnalyticsWorkflowConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.analytics.AnalyticsWorkflowConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.metric_ids_.Clear();
  _impl_.metadata_.Clear();
  _impl_.model_parameters_.Clear();
  _impl_.workflow_id_.ClearToEmpty();
  _impl_.created_by_.ClearToEmpty();
  _impl_.created_at_.ClearToEmpty();
  ::memset(&_impl_.model_type_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.enable_forecasting_) -
      reinterpret_cast<char*>(&_impl_.model_type_)) + sizeof(_impl_.enable_forecasting_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AnalyticsWorkflowConfig::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AnalyticsWorkflowConfig& this_ = static_cast<const AnalyticsWorkflowConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AnalyticsWorkflowConfig::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AnalyticsWorkflowConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.analytics.AnalyticsWorkflowConfig)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string workflow_id = 1;
          if (!this_._internal_workflow_id().empty()) {
            const std::string& _s = this_._internal_workflow_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.AnalyticsWorkflowConfig.workflow_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated string metric_ids = 2;
          for (int i = 0, n = this_._internal_metric_ids_size(); i < n; ++i) {
            const auto& s = this_._internal_metric_ids().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.AnalyticsWorkflowConfig.metric_ids");
            target = stream->WriteString(2, s, target);
          }

          // .seigr.ai_analysis.ModelType model_type = 3;
          if (this_._internal_model_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_model_type(), target);
          }

          // int32 evaluation_interval_seconds = 4;
          if (this_._internal_evaluation_interval_seconds() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<4>(
                    stream, this_._internal_evaluation_interval_seconds(), target);
          }

          // bool enable_forecasting = 5;
          if (this_._internal_enable_forecasting() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                5, this_._internal_enable_forecasting(), target);
          }

          // string created_by = 6;
          if (!this_._internal_created_by().empty()) {
            const std::string& _s = this_._internal_created_by();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.AnalyticsWorkflowConfig.created_by");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // string created_at = 7;
          if (!this_._internal_created_at().empty()) {
            const std::string& _s = this_._internal_created_at();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.AnalyticsWorkflowConfig.created_at");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // map<string, string> metadata = 8;
          if (!this_._internal_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    8, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.AnalyticsWorkflowConfig.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.AnalyticsWorkflowConfig.metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    8, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.AnalyticsWorkflowConfig.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.AnalyticsWorkflowConfig.metadata");
              }
            }
          }

          // map<string, string> model_parameters = 9;
          if (!this_._internal_model_parameters().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_model_parameters();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    9, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.AnalyticsWorkflowConfig.model_parameters");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.AnalyticsWorkflowConfig.model_parameters");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    9, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.AnalyticsWorkflowConfig.model_parameters");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.AnalyticsWorkflowConfig.model_parameters");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.analytics.AnalyticsWorkflowConfig)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AnalyticsWorkflowConfig::ByteSizeLong(const MessageLite& base) {
          const AnalyticsWorkflowConfig& this_ = static_cast<const AnalyticsWorkflowConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AnalyticsWorkflowConfig::ByteSizeLong() const {
          const AnalyticsWorkflowConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.analytics.AnalyticsWorkflowConfig)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string metric_ids = 2;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_metric_ids().size());
              for (int i = 0, n = this_._internal_metric_ids().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_metric_ids().Get(i));
              }
            }
            // map<string, string> metadata = 8;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_metadata_size());
              for (const auto& entry : this_._internal_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // map<string, string> model_parameters = 9;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_model_parameters_size());
              for (const auto& entry : this_._internal_model_parameters()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string workflow_id = 1;
            if (!this_._internal_workflow_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_workflow_id());
            }
            // string created_by = 6;
            if (!this_._internal_created_by().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_created_by());
            }
            // string created_at = 7;
            if (!this_._internal_created_at().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_created_at());
            }
            // .seigr.ai_analysis.ModelType model_type = 3;
            if (this_._internal_model_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_model_type());
            }
            // int32 evaluation_interval_seconds = 4;
            if (this_._internal_evaluation_interval_seconds() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_evaluation_interval_seconds());
            }
            // bool enable_forecasting = 5;
            if (this_._internal_enable_forecasting() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AnalyticsWorkflowConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AnalyticsWorkflowConfig*>(&to_msg);
  auto& from = static_cast<const AnalyticsWorkflowConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.analytics.AnalyticsWorkflowConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_metric_ids()->MergeFrom(from._internal_metric_ids());
  _this->_impl_.metadata_.MergeFrom(from._impl_.metadata_);
  _this->_impl_.model_parameters_.MergeFrom(from._impl_.model_parameters_);
  if (!from._internal_workflow_id().empty()) {
    _this->_internal_set_workflow_id(from._internal_workflow_id());
  }
  if (!from._internal_created_by().empty()) {
    _this->_internal_set_created_by(from._internal_created_by());
  }
  if (!from._internal_created_at().empty()) {
    _this->_internal_set_created_at(from._internal_created_at());
  }
  if (from._internal_model_type() != 0) {
    _this->_impl_.model_type_ = from._impl_.model_type_;
  }
  if (from._internal_evaluation_interval_seconds() != 0) {
    _this->_impl_.evaluation_interval_seconds_ = from._impl_.evaluation_interval_seconds_;
  }
  if (from._internal_enable_forecasting() != 0) {
    _this->_impl_.enable_forecasting_ = from._impl_.enable_forecasting_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AnalyticsWorkflowConfig::CopyFrom(const AnalyticsWorkflowConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.analytics.AnalyticsWorkflowConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AnalyticsWorkflowConfig::InternalSwap(AnalyticsWorkflowConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.metric_ids_.InternalSwap(&other->_impl_.metric_ids_);
  _impl_.metadata_.InternalSwap(&other->_impl_.metadata_);
  _impl_.model_parameters_.InternalSwap(&other->_impl_.model_parameters_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.workflow_id_, &other->_impl_.workflow_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.created_by_, &other->_impl_.created_by_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.created_at_, &other->_impl_.created_at_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AnalyticsWorkflowConfig, _impl_.enable_forecasting_)
      + sizeof(AnalyticsWorkflowConfig::_impl_.enable_forecasting_)
      - PROTOBUF_FIELD_OFFSET(AnalyticsWorkflowConfig, _impl_.model_type_)>(
          reinterpret_cast<char*>(&_impl_.model_type_),
          reinterpret_cast<char*>(&other->_impl_.model_type_));
}

::google::protobuf::Metadata AnalyticsWorkflowConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              AnalyticsInsight_MetadataEntry_DoNotUse::AnalyticsInsight_MetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              AnalyticsInsight_MetadataEntry_DoNotUse::AnalyticsInsight_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              AnalyticsInsight_MetadataEntry_DoNotUse::AnalyticsInsight_MetadataEntry_DoNotUse() : SuperType() {}
              AnalyticsInsight_MetadataEntry_DoNotUse::AnalyticsInsight_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* AnalyticsInsight_MetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) AnalyticsInsight_MetadataEntry_DoNotUse(arena);
              }
              constexpr auto AnalyticsInsight_MetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AnalyticsInsight_MetadataEntry_DoNotUse),
                                                          alignof(AnalyticsInsight_MetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull AnalyticsInsight_MetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_AnalyticsInsight_MetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &AnalyticsInsight_MetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<AnalyticsInsight_MetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &AnalyticsInsight_MetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &AnalyticsInsight_MetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(AnalyticsInsight_MetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &AnalyticsInsight_MetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_analytics_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* AnalyticsInsight_MetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 63, 2> AnalyticsInsight_MetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AnalyticsInsight_MetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::analytics::AnalyticsInsight_MetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsInsight_MetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsInsight_MetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(AnalyticsInsight_MetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(AnalyticsInsight_MetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\56\3\5\0\0\0\0\0"
    "seigr.analytics.AnalyticsInsight.MetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class AnalyticsInsight::_Internal {
 public:
};

AnalyticsInsight::AnalyticsInsight(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.analytics.AnalyticsInsight)
}
inline PROTOBUF_NDEBUG_INLINE AnalyticsInsight::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::analytics::AnalyticsInsight& from_msg)
      : metadata_{visibility, arena, from.metadata_},
        insight_id_(arena, from.insight_id_),
        metric_id_(arena, from.metric_id_),
        description_(arena, from.description_),
        timestamp_(arena, from.timestamp_),
        context_(arena, from.context_),
        _cached_size_{0} {}

AnalyticsInsight::AnalyticsInsight(
    ::google::protobuf::Arena* arena,
    const AnalyticsInsight& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AnalyticsInsight* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, insight_value_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, insight_value_),
           offsetof(Impl_, is_recurring_) -
               offsetof(Impl_, insight_value_) +
               sizeof(Impl_::is_recurring_));

  // @@protoc_insertion_point(copy_constructor:seigr.analytics.AnalyticsInsight)
}
inline PROTOBUF_NDEBUG_INLINE AnalyticsInsight::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : metadata_{visibility, arena},
        insight_id_(arena),
        metric_id_(arena),
        description_(arena),
        timestamp_(arena),
        context_(arena),
        _cached_size_{0} {}

inline void AnalyticsInsight::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, insight_value_),
           0,
           offsetof(Impl_, is_recurring_) -
               offsetof(Impl_, insight_value_) +
               sizeof(Impl_::is_recurring_));
}
AnalyticsInsight::~AnalyticsInsight() {
  // @@protoc_insertion_point(destructor:seigr.analytics.AnalyticsInsight)
  SharedDtor(*this);
}
inline void AnalyticsInsight::SharedDtor(MessageLite& self) {
  AnalyticsInsight& this_ = static_cast<AnalyticsInsight&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.insight_id_.Destroy();
  this_._impl_.metric_id_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.timestamp_.Destroy();
  this_._impl_.context_.Destroy();
  this_._impl_.~Impl_();
}

inline void* AnalyticsInsight::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AnalyticsInsight(arena);
}
constexpr auto AnalyticsInsight::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(AnalyticsInsight, _impl_.metadata_) +
          decltype(AnalyticsInsight::_impl_.metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(AnalyticsInsight, _impl_.metadata_) +
          decltype(AnalyticsInsight::_impl_.metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(AnalyticsInsight), alignof(AnalyticsInsight), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&AnalyticsInsight::PlacementNew_,
                                 sizeof(AnalyticsInsight),
                                 alignof(AnalyticsInsight));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AnalyticsInsight::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AnalyticsInsight_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AnalyticsInsight::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AnalyticsInsight>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AnalyticsInsight::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AnalyticsInsight>(), &AnalyticsInsight::ByteSizeLong,
            &AnalyticsInsight::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AnalyticsInsight, _impl_._cached_size_),
        false,
    },
    &AnalyticsInsight::kDescriptorMethods,
    &descriptor_table_analytics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AnalyticsInsight::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 1, 103, 2> AnalyticsInsight::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::analytics::AnalyticsInsight>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string insight_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsInsight, _impl_.insight_id_)}},
    // string metric_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsInsight, _impl_.metric_id_)}},
    // string description = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsInsight, _impl_.description_)}},
    // double insight_value = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsInsight, _impl_.insight_value_)}},
    // string timestamp = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsInsight, _impl_.timestamp_)}},
    // .seigr.event.EscalationLevel escalation_level = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AnalyticsInsight, _impl_.escalation_level_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsInsight, _impl_.escalation_level_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // bool is_anomaly = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AnalyticsInsight, _impl_.is_anomaly_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsInsight, _impl_.is_anomaly_)}},
    // bool is_recurring = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AnalyticsInsight, _impl_.is_recurring_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsInsight, _impl_.is_recurring_)}},
    // string context = 10;
    {::_pbi::TcParser::FastUS1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsInsight, _impl_.context_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string insight_id = 1;
    {PROTOBUF_FIELD_OFFSET(AnalyticsInsight, _impl_.insight_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string metric_id = 2;
    {PROTOBUF_FIELD_OFFSET(AnalyticsInsight, _impl_.metric_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 3;
    {PROTOBUF_FIELD_OFFSET(AnalyticsInsight, _impl_.description_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double insight_value = 4;
    {PROTOBUF_FIELD_OFFSET(AnalyticsInsight, _impl_.insight_value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // string timestamp = 5;
    {PROTOBUF_FIELD_OFFSET(AnalyticsInsight, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.event.EscalationLevel escalation_level = 6;
    {PROTOBUF_FIELD_OFFSET(AnalyticsInsight, _impl_.escalation_level_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // map<string, string> metadata = 7;
    {PROTOBUF_FIELD_OFFSET(AnalyticsInsight, _impl_.metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // bool is_anomaly = 8;
    {PROTOBUF_FIELD_OFFSET(AnalyticsInsight, _impl_.is_anomaly_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool is_recurring = 9;
    {PROTOBUF_FIELD_OFFSET(AnalyticsInsight, _impl_.is_recurring_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string context = 10;
    {PROTOBUF_FIELD_OFFSET(AnalyticsInsight, _impl_.context_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(AnalyticsInsight()._impl_.metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\40\12\11\13\0\11\0\10\0\0\7\0\0\0\0\0"
    "seigr.analytics.AnalyticsInsight"
    "insight_id"
    "metric_id"
    "description"
    "timestamp"
    "metadata"
    "context"
  }},
};

PROTOBUF_NOINLINE void AnalyticsInsight::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.analytics.AnalyticsInsight)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.metadata_.Clear();
  _impl_.insight_id_.ClearToEmpty();
  _impl_.metric_id_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _impl_.timestamp_.ClearToEmpty();
  _impl_.context_.ClearToEmpty();
  ::memset(&_impl_.insight_value_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.is_recurring_) -
      reinterpret_cast<char*>(&_impl_.insight_value_)) + sizeof(_impl_.is_recurring_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AnalyticsInsight::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AnalyticsInsight& this_ = static_cast<const AnalyticsInsight&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AnalyticsInsight::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AnalyticsInsight& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.analytics.AnalyticsInsight)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string insight_id = 1;
          if (!this_._internal_insight_id().empty()) {
            const std::string& _s = this_._internal_insight_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.AnalyticsInsight.insight_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string metric_id = 2;
          if (!this_._internal_metric_id().empty()) {
            const std::string& _s = this_._internal_metric_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.AnalyticsInsight.metric_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string description = 3;
          if (!this_._internal_description().empty()) {
            const std::string& _s = this_._internal_description();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.AnalyticsInsight.description");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // double insight_value = 4;
          if (::absl::bit_cast<::uint64_t>(this_._internal_insight_value()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                4, this_._internal_insight_value(), target);
          }

          // string timestamp = 5;
          if (!this_._internal_timestamp().empty()) {
            const std::string& _s = this_._internal_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.AnalyticsInsight.timestamp");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // .seigr.event.EscalationLevel escalation_level = 6;
          if (this_._internal_escalation_level() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                6, this_._internal_escalation_level(), target);
          }

          // map<string, string> metadata = 7;
          if (!this_._internal_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.AnalyticsInsight.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.AnalyticsInsight.metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.AnalyticsInsight.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.AnalyticsInsight.metadata");
              }
            }
          }

          // bool is_anomaly = 8;
          if (this_._internal_is_anomaly() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                8, this_._internal_is_anomaly(), target);
          }

          // bool is_recurring = 9;
          if (this_._internal_is_recurring() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                9, this_._internal_is_recurring(), target);
          }

          // string context = 10;
          if (!this_._internal_context().empty()) {
            const std::string& _s = this_._internal_context();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.AnalyticsInsight.context");
            target = stream->WriteStringMaybeAliased(10, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.analytics.AnalyticsInsight)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AnalyticsInsight::ByteSizeLong(const MessageLite& base) {
          const AnalyticsInsight& this_ = static_cast<const AnalyticsInsight&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AnalyticsInsight::ByteSizeLong() const {
          const AnalyticsInsight& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.analytics.AnalyticsInsight)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> metadata = 7;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_metadata_size());
              for (const auto& entry : this_._internal_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string insight_id = 1;
            if (!this_._internal_insight_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_insight_id());
            }
            // string metric_id = 2;
            if (!this_._internal_metric_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_metric_id());
            }
            // string description = 3;
            if (!this_._internal_description().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_description());
            }
            // string timestamp = 5;
            if (!this_._internal_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_timestamp());
            }
            // string context = 10;
            if (!this_._internal_context().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_context());
            }
            // double insight_value = 4;
            if (::absl::bit_cast<::uint64_t>(this_._internal_insight_value()) != 0) {
              total_size += 9;
            }
            // .seigr.event.EscalationLevel escalation_level = 6;
            if (this_._internal_escalation_level() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_escalation_level());
            }
            // bool is_anomaly = 8;
            if (this_._internal_is_anomaly() != 0) {
              total_size += 2;
            }
            // bool is_recurring = 9;
            if (this_._internal_is_recurring() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AnalyticsInsight::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AnalyticsInsight*>(&to_msg);
  auto& from = static_cast<const AnalyticsInsight&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.analytics.AnalyticsInsight)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.metadata_.MergeFrom(from._impl_.metadata_);
  if (!from._internal_insight_id().empty()) {
    _this->_internal_set_insight_id(from._internal_insight_id());
  }
  if (!from._internal_metric_id().empty()) {
    _this->_internal_set_metric_id(from._internal_metric_id());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (!from._internal_timestamp().empty()) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (!from._internal_context().empty()) {
    _this->_internal_set_context(from._internal_context());
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_insight_value()) != 0) {
    _this->_impl_.insight_value_ = from._impl_.insight_value_;
  }
  if (from._internal_escalation_level() != 0) {
    _this->_impl_.escalation_level_ = from._impl_.escalation_level_;
  }
  if (from._internal_is_anomaly() != 0) {
    _this->_impl_.is_anomaly_ = from._impl_.is_anomaly_;
  }
  if (from._internal_is_recurring() != 0) {
    _this->_impl_.is_recurring_ = from._impl_.is_recurring_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AnalyticsInsight::CopyFrom(const AnalyticsInsight& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.analytics.AnalyticsInsight)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AnalyticsInsight::InternalSwap(AnalyticsInsight* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.metadata_.InternalSwap(&other->_impl_.metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.insight_id_, &other->_impl_.insight_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.metric_id_, &other->_impl_.metric_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.timestamp_, &other->_impl_.timestamp_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.context_, &other->_impl_.context_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AnalyticsInsight, _impl_.is_recurring_)
      + sizeof(AnalyticsInsight::_impl_.is_recurring_)
      - PROTOBUF_FIELD_OFFSET(AnalyticsInsight, _impl_.insight_value_)>(
          reinterpret_cast<char*>(&_impl_.insight_value_),
          reinterpret_cast<char*>(&other->_impl_.insight_value_));
}

::google::protobuf::Metadata AnalyticsInsight::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              DataMetric_MetadataEntry_DoNotUse::DataMetric_MetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              DataMetric_MetadataEntry_DoNotUse::DataMetric_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              DataMetric_MetadataEntry_DoNotUse::DataMetric_MetadataEntry_DoNotUse() : SuperType() {}
              DataMetric_MetadataEntry_DoNotUse::DataMetric_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* DataMetric_MetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) DataMetric_MetadataEntry_DoNotUse(arena);
              }
              constexpr auto DataMetric_MetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(DataMetric_MetadataEntry_DoNotUse),
                                                          alignof(DataMetric_MetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull DataMetric_MetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_DataMetric_MetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &DataMetric_MetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<DataMetric_MetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &DataMetric_MetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &DataMetric_MetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(DataMetric_MetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &DataMetric_MetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_analytics_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* DataMetric_MetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 57, 2> DataMetric_MetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DataMetric_MetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::analytics::DataMetric_MetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DataMetric_MetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DataMetric_MetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(DataMetric_MetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(DataMetric_MetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\50\3\5\0\0\0\0\0"
    "seigr.analytics.DataMetric.MetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class DataMetric::_Internal {
 public:
};

DataMetric::DataMetric(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.analytics.DataMetric)
}
inline PROTOBUF_NDEBUG_INLINE DataMetric::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::analytics::DataMetric& from_msg)
      : metadata_{visibility, arena, from.metadata_},
        metric_id_(arena, from.metric_id_),
        name_(arena, from.name_),
        unit_(arena, from.unit_),
        recorded_at_(arena, from.recorded_at_),
        source_component_(arena, from.source_component_),
        _cached_size_{0} {}

DataMetric::DataMetric(
    ::google::protobuf::Arena* arena,
    const DataMetric& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DataMetric* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, metric_type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, metric_type_),
           offsetof(Impl_, aggregation_method_) -
               offsetof(Impl_, metric_type_) +
               sizeof(Impl_::aggregation_method_));

  // @@protoc_insertion_point(copy_constructor:seigr.analytics.DataMetric)
}
inline PROTOBUF_NDEBUG_INLINE DataMetric::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : metadata_{visibility, arena},
        metric_id_(arena),
        name_(arena),
        unit_(arena),
        recorded_at_(arena),
        source_component_(arena),
        _cached_size_{0} {}

inline void DataMetric::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, metric_type_),
           0,
           offsetof(Impl_, aggregation_method_) -
               offsetof(Impl_, metric_type_) +
               sizeof(Impl_::aggregation_method_));
}
DataMetric::~DataMetric() {
  // @@protoc_insertion_point(destructor:seigr.analytics.DataMetric)
  SharedDtor(*this);
}
inline void DataMetric::SharedDtor(MessageLite& self) {
  DataMetric& this_ = static_cast<DataMetric&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.metric_id_.Destroy();
  this_._impl_.name_.Destroy();
  this_._impl_.unit_.Destroy();
  this_._impl_.recorded_at_.Destroy();
  this_._impl_.source_component_.Destroy();
  this_._impl_.~Impl_();
}

inline void* DataMetric::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DataMetric(arena);
}
constexpr auto DataMetric::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(DataMetric, _impl_.metadata_) +
          decltype(DataMetric::_impl_.metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(DataMetric, _impl_.metadata_) +
          decltype(DataMetric::_impl_.metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(DataMetric), alignof(DataMetric), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&DataMetric::PlacementNew_,
                                 sizeof(DataMetric),
                                 alignof(DataMetric));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DataMetric::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DataMetric_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DataMetric::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DataMetric>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DataMetric::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DataMetric>(), &DataMetric::ByteSizeLong,
            &DataMetric::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DataMetric, _impl_._cached_size_),
        false,
    },
    &DataMetric::kDescriptorMethods,
    &descriptor_table_analytics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DataMetric::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 1, 95, 2> DataMetric::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::analytics::DataMetric>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string metric_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DataMetric, _impl_.metric_id_)}},
    // string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DataMetric, _impl_.name_)}},
    // .seigr.analytics.MetricType metric_type = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DataMetric, _impl_.metric_type_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(DataMetric, _impl_.metric_type_)}},
    // .seigr.analytics.MetricCategory category = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DataMetric, _impl_.category_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(DataMetric, _impl_.category_)}},
    // double value = 5;
    {::_pbi::TcParser::FastF64S1,
     {41, 63, 0, PROTOBUF_FIELD_OFFSET(DataMetric, _impl_.value_)}},
    // string unit = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(DataMetric, _impl_.unit_)}},
    // string recorded_at = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(DataMetric, _impl_.recorded_at_)}},
    // .seigr.analytics.AggregationMethod aggregation_method = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DataMetric, _impl_.aggregation_method_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(DataMetric, _impl_.aggregation_method_)}},
    // string source_component = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(DataMetric, _impl_.source_component_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // double forecasted_value = 11;
    {::_pbi::TcParser::FastF64S1,
     {89, 63, 0, PROTOBUF_FIELD_OFFSET(DataMetric, _impl_.forecasted_value_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string metric_id = 1;
    {PROTOBUF_FIELD_OFFSET(DataMetric, _impl_.metric_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 2;
    {PROTOBUF_FIELD_OFFSET(DataMetric, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.analytics.MetricType metric_type = 3;
    {PROTOBUF_FIELD_OFFSET(DataMetric, _impl_.metric_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .seigr.analytics.MetricCategory category = 4;
    {PROTOBUF_FIELD_OFFSET(DataMetric, _impl_.category_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // double value = 5;
    {PROTOBUF_FIELD_OFFSET(DataMetric, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // string unit = 6;
    {PROTOBUF_FIELD_OFFSET(DataMetric, _impl_.unit_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string recorded_at = 7;
    {PROTOBUF_FIELD_OFFSET(DataMetric, _impl_.recorded_at_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.analytics.AggregationMethod aggregation_method = 8;
    {PROTOBUF_FIELD_OFFSET(DataMetric, _impl_.aggregation_method_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string source_component = 9;
    {PROTOBUF_FIELD_OFFSET(DataMetric, _impl_.source_component_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> metadata = 10;
    {PROTOBUF_FIELD_OFFSET(DataMetric, _impl_.metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // double forecasted_value = 11;
    {PROTOBUF_FIELD_OFFSET(DataMetric, _impl_.forecasted_value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(DataMetric()._impl_.metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\32\11\4\0\0\0\4\13\0\20\10\0\0\0\0\0"
    "seigr.analytics.DataMetric"
    "metric_id"
    "name"
    "unit"
    "recorded_at"
    "source_component"
    "metadata"
  }},
};

PROTOBUF_NOINLINE void DataMetric::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.analytics.DataMetric)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.metadata_.Clear();
  _impl_.metric_id_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.unit_.ClearToEmpty();
  _impl_.recorded_at_.ClearToEmpty();
  _impl_.source_component_.ClearToEmpty();
  ::memset(&_impl_.metric_type_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.aggregation_method_) -
      reinterpret_cast<char*>(&_impl_.metric_type_)) + sizeof(_impl_.aggregation_method_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DataMetric::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DataMetric& this_ = static_cast<const DataMetric&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DataMetric::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DataMetric& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.analytics.DataMetric)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string metric_id = 1;
          if (!this_._internal_metric_id().empty()) {
            const std::string& _s = this_._internal_metric_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.DataMetric.metric_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string name = 2;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.DataMetric.name");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // .seigr.analytics.MetricType metric_type = 3;
          if (this_._internal_metric_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_metric_type(), target);
          }

          // .seigr.analytics.MetricCategory category = 4;
          if (this_._internal_category() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                4, this_._internal_category(), target);
          }

          // double value = 5;
          if (::absl::bit_cast<::uint64_t>(this_._internal_value()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                5, this_._internal_value(), target);
          }

          // string unit = 6;
          if (!this_._internal_unit().empty()) {
            const std::string& _s = this_._internal_unit();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.DataMetric.unit");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // string recorded_at = 7;
          if (!this_._internal_recorded_at().empty()) {
            const std::string& _s = this_._internal_recorded_at();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.DataMetric.recorded_at");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // .seigr.analytics.AggregationMethod aggregation_method = 8;
          if (this_._internal_aggregation_method() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                8, this_._internal_aggregation_method(), target);
          }

          // string source_component = 9;
          if (!this_._internal_source_component().empty()) {
            const std::string& _s = this_._internal_source_component();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.DataMetric.source_component");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          // map<string, string> metadata = 10;
          if (!this_._internal_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    10, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.DataMetric.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.DataMetric.metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    10, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.DataMetric.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.DataMetric.metadata");
              }
            }
          }

          // double forecasted_value = 11;
          if (::absl::bit_cast<::uint64_t>(this_._internal_forecasted_value()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                11, this_._internal_forecasted_value(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.analytics.DataMetric)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DataMetric::ByteSizeLong(const MessageLite& base) {
          const DataMetric& this_ = static_cast<const DataMetric&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DataMetric::ByteSizeLong() const {
          const DataMetric& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.analytics.DataMetric)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> metadata = 10;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_metadata_size());
              for (const auto& entry : this_._internal_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string metric_id = 1;
            if (!this_._internal_metric_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_metric_id());
            }
            // string name = 2;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string unit = 6;
            if (!this_._internal_unit().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_unit());
            }
            // string recorded_at = 7;
            if (!this_._internal_recorded_at().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_recorded_at());
            }
            // string source_component = 9;
            if (!this_._internal_source_component().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_source_component());
            }
            // .seigr.analytics.MetricType metric_type = 3;
            if (this_._internal_metric_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_metric_type());
            }
            // .seigr.analytics.MetricCategory category = 4;
            if (this_._internal_category() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_category());
            }
            // double value = 5;
            if (::absl::bit_cast<::uint64_t>(this_._internal_value()) != 0) {
              total_size += 9;
            }
            // double forecasted_value = 11;
            if (::absl::bit_cast<::uint64_t>(this_._internal_forecasted_value()) != 0) {
              total_size += 9;
            }
            // .seigr.analytics.AggregationMethod aggregation_method = 8;
            if (this_._internal_aggregation_method() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_aggregation_method());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DataMetric::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DataMetric*>(&to_msg);
  auto& from = static_cast<const DataMetric&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.analytics.DataMetric)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.metadata_.MergeFrom(from._impl_.metadata_);
  if (!from._internal_metric_id().empty()) {
    _this->_internal_set_metric_id(from._internal_metric_id());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_unit().empty()) {
    _this->_internal_set_unit(from._internal_unit());
  }
  if (!from._internal_recorded_at().empty()) {
    _this->_internal_set_recorded_at(from._internal_recorded_at());
  }
  if (!from._internal_source_component().empty()) {
    _this->_internal_set_source_component(from._internal_source_component());
  }
  if (from._internal_metric_type() != 0) {
    _this->_impl_.metric_type_ = from._impl_.metric_type_;
  }
  if (from._internal_category() != 0) {
    _this->_impl_.category_ = from._impl_.category_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_value()) != 0) {
    _this->_impl_.value_ = from._impl_.value_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_forecasted_value()) != 0) {
    _this->_impl_.forecasted_value_ = from._impl_.forecasted_value_;
  }
  if (from._internal_aggregation_method() != 0) {
    _this->_impl_.aggregation_method_ = from._impl_.aggregation_method_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DataMetric::CopyFrom(const DataMetric& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.analytics.DataMetric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DataMetric::InternalSwap(DataMetric* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.metadata_.InternalSwap(&other->_impl_.metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.metric_id_, &other->_impl_.metric_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.unit_, &other->_impl_.unit_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.recorded_at_, &other->_impl_.recorded_at_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.source_component_, &other->_impl_.source_component_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DataMetric, _impl_.aggregation_method_)
      + sizeof(DataMetric::_impl_.aggregation_method_)
      - PROTOBUF_FIELD_OFFSET(DataMetric, _impl_.metric_type_)>(
          reinterpret_cast<char*>(&_impl_.metric_type_),
          reinterpret_cast<char*>(&other->_impl_.metric_type_));
}

::google::protobuf::Metadata DataMetric::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              AnalyticsAlertThreshold_MetadataEntry_DoNotUse::AnalyticsAlertThreshold_MetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              AnalyticsAlertThreshold_MetadataEntry_DoNotUse::AnalyticsAlertThreshold_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              AnalyticsAlertThreshold_MetadataEntry_DoNotUse::AnalyticsAlertThreshold_MetadataEntry_DoNotUse() : SuperType() {}
              AnalyticsAlertThreshold_MetadataEntry_DoNotUse::AnalyticsAlertThreshold_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* AnalyticsAlertThreshold_MetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) AnalyticsAlertThreshold_MetadataEntry_DoNotUse(arena);
              }
              constexpr auto AnalyticsAlertThreshold_MetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AnalyticsAlertThreshold_MetadataEntry_DoNotUse),
                                                          alignof(AnalyticsAlertThreshold_MetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull AnalyticsAlertThreshold_MetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_AnalyticsAlertThreshold_MetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &AnalyticsAlertThreshold_MetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<AnalyticsAlertThreshold_MetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &AnalyticsAlertThreshold_MetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &AnalyticsAlertThreshold_MetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(AnalyticsAlertThreshold_MetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &AnalyticsAlertThreshold_MetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_analytics_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* AnalyticsAlertThreshold_MetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 70, 2> AnalyticsAlertThreshold_MetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AnalyticsAlertThreshold_MetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::analytics::AnalyticsAlertThreshold_MetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsAlertThreshold_MetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsAlertThreshold_MetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(AnalyticsAlertThreshold_MetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(AnalyticsAlertThreshold_MetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\65\3\5\0\0\0\0\0"
    "seigr.analytics.AnalyticsAlertThreshold.MetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class AnalyticsAlertThreshold::_Internal {
 public:
};

AnalyticsAlertThreshold::AnalyticsAlertThreshold(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.analytics.AnalyticsAlertThreshold)
}
inline PROTOBUF_NDEBUG_INLINE AnalyticsAlertThreshold::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::analytics::AnalyticsAlertThreshold& from_msg)
      : notification_channels_{visibility, arena, from.notification_channels_},
        metadata_{visibility, arena, from.metadata_},
        threshold_id_(arena, from.threshold_id_),
        condition_(arena, from.condition_),
        action_on_breach_(arena, from.action_on_breach_),
        _cached_size_{0} {}

AnalyticsAlertThreshold::AnalyticsAlertThreshold(
    ::google::protobuf::Arena* arena,
    const AnalyticsAlertThreshold& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AnalyticsAlertThreshold* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, threshold_value_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, threshold_value_),
           offsetof(Impl_, restrict_to_business_hours_) -
               offsetof(Impl_, threshold_value_) +
               sizeof(Impl_::restrict_to_business_hours_));

  // @@protoc_insertion_point(copy_constructor:seigr.analytics.AnalyticsAlertThreshold)
}
inline PROTOBUF_NDEBUG_INLINE AnalyticsAlertThreshold::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : notification_channels_{visibility, arena},
        metadata_{visibility, arena},
        threshold_id_(arena),
        condition_(arena),
        action_on_breach_(arena),
        _cached_size_{0} {}

inline void AnalyticsAlertThreshold::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, threshold_value_),
           0,
           offsetof(Impl_, restrict_to_business_hours_) -
               offsetof(Impl_, threshold_value_) +
               sizeof(Impl_::restrict_to_business_hours_));
}
AnalyticsAlertThreshold::~AnalyticsAlertThreshold() {
  // @@protoc_insertion_point(destructor:seigr.analytics.AnalyticsAlertThreshold)
  SharedDtor(*this);
}
inline void AnalyticsAlertThreshold::SharedDtor(MessageLite& self) {
  AnalyticsAlertThreshold& this_ = static_cast<AnalyticsAlertThreshold&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.threshold_id_.Destroy();
  this_._impl_.condition_.Destroy();
  this_._impl_.action_on_breach_.Destroy();
  this_._impl_.~Impl_();
}

inline void* AnalyticsAlertThreshold::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AnalyticsAlertThreshold(arena);
}
constexpr auto AnalyticsAlertThreshold::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(AnalyticsAlertThreshold, _impl_.notification_channels_) +
          decltype(AnalyticsAlertThreshold::_impl_.notification_channels_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(AnalyticsAlertThreshold, _impl_.metadata_) +
          decltype(AnalyticsAlertThreshold::_impl_.metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(AnalyticsAlertThreshold, _impl_.metadata_) +
          decltype(AnalyticsAlertThreshold::_impl_.metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(AnalyticsAlertThreshold), alignof(AnalyticsAlertThreshold), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&AnalyticsAlertThreshold::PlacementNew_,
                                 sizeof(AnalyticsAlertThreshold),
                                 alignof(AnalyticsAlertThreshold));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AnalyticsAlertThreshold::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AnalyticsAlertThreshold_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AnalyticsAlertThreshold::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AnalyticsAlertThreshold>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AnalyticsAlertThreshold::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AnalyticsAlertThreshold>(), &AnalyticsAlertThreshold::ByteSizeLong,
            &AnalyticsAlertThreshold::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AnalyticsAlertThreshold, _impl_._cached_size_),
        false,
    },
    &AnalyticsAlertThreshold::kDescriptorMethods,
    &descriptor_table_analytics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AnalyticsAlertThreshold::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 1, 122, 2> AnalyticsAlertThreshold::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::analytics::AnalyticsAlertThreshold>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string threshold_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsAlertThreshold, _impl_.threshold_id_)}},
    // .seigr.analytics.MetricCategory category = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AnalyticsAlertThreshold, _impl_.category_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsAlertThreshold, _impl_.category_)}},
    // double threshold_value = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsAlertThreshold, _impl_.threshold_value_)}},
    // .seigr.alerting.AlertSeverity severity = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AnalyticsAlertThreshold, _impl_.severity_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsAlertThreshold, _impl_.severity_)}},
    // .seigr.event.EscalationLevel escalation_level = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AnalyticsAlertThreshold, _impl_.escalation_level_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsAlertThreshold, _impl_.escalation_level_)}},
    // string condition = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsAlertThreshold, _impl_.condition_)}},
    // repeated string notification_channels = 7;
    {::_pbi::TcParser::FastUR1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsAlertThreshold, _impl_.notification_channels_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string action_on_breach = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsAlertThreshold, _impl_.action_on_breach_)}},
    // bool restrict_to_business_hours = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AnalyticsAlertThreshold, _impl_.restrict_to_business_hours_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsAlertThreshold, _impl_.restrict_to_business_hours_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string threshold_id = 1;
    {PROTOBUF_FIELD_OFFSET(AnalyticsAlertThreshold, _impl_.threshold_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.analytics.MetricCategory category = 2;
    {PROTOBUF_FIELD_OFFSET(AnalyticsAlertThreshold, _impl_.category_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // double threshold_value = 3;
    {PROTOBUF_FIELD_OFFSET(AnalyticsAlertThreshold, _impl_.threshold_value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // .seigr.alerting.AlertSeverity severity = 4;
    {PROTOBUF_FIELD_OFFSET(AnalyticsAlertThreshold, _impl_.severity_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .seigr.event.EscalationLevel escalation_level = 5;
    {PROTOBUF_FIELD_OFFSET(AnalyticsAlertThreshold, _impl_.escalation_level_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string condition = 6;
    {PROTOBUF_FIELD_OFFSET(AnalyticsAlertThreshold, _impl_.condition_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string notification_channels = 7;
    {PROTOBUF_FIELD_OFFSET(AnalyticsAlertThreshold, _impl_.notification_channels_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // map<string, string> metadata = 8;
    {PROTOBUF_FIELD_OFFSET(AnalyticsAlertThreshold, _impl_.metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string action_on_breach = 9;
    {PROTOBUF_FIELD_OFFSET(AnalyticsAlertThreshold, _impl_.action_on_breach_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool restrict_to_business_hours = 10;
    {PROTOBUF_FIELD_OFFSET(AnalyticsAlertThreshold, _impl_.restrict_to_business_hours_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(AnalyticsAlertThreshold()._impl_.metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\47\14\0\0\0\0\11\25\10\20\0\0\0\0\0\0"
    "seigr.analytics.AnalyticsAlertThreshold"
    "threshold_id"
    "condition"
    "notification_channels"
    "metadata"
    "action_on_breach"
  }},
};

PROTOBUF_NOINLINE void AnalyticsAlertThreshold::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.analytics.AnalyticsAlertThreshold)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.notification_channels_.Clear();
  _impl_.metadata_.Clear();
  _impl_.threshold_id_.ClearToEmpty();
  _impl_.condition_.ClearToEmpty();
  _impl_.action_on_breach_.ClearToEmpty();
  ::memset(&_impl_.threshold_value_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.restrict_to_business_hours_) -
      reinterpret_cast<char*>(&_impl_.threshold_value_)) + sizeof(_impl_.restrict_to_business_hours_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AnalyticsAlertThreshold::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AnalyticsAlertThreshold& this_ = static_cast<const AnalyticsAlertThreshold&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AnalyticsAlertThreshold::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AnalyticsAlertThreshold& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.analytics.AnalyticsAlertThreshold)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string threshold_id = 1;
          if (!this_._internal_threshold_id().empty()) {
            const std::string& _s = this_._internal_threshold_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.AnalyticsAlertThreshold.threshold_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // .seigr.analytics.MetricCategory category = 2;
          if (this_._internal_category() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_category(), target);
          }

          // double threshold_value = 3;
          if (::absl::bit_cast<::uint64_t>(this_._internal_threshold_value()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                3, this_._internal_threshold_value(), target);
          }

          // .seigr.alerting.AlertSeverity severity = 4;
          if (this_._internal_severity() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                4, this_._internal_severity(), target);
          }

          // .seigr.event.EscalationLevel escalation_level = 5;
          if (this_._internal_escalation_level() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                5, this_._internal_escalation_level(), target);
          }

          // string condition = 6;
          if (!this_._internal_condition().empty()) {
            const std::string& _s = this_._internal_condition();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.AnalyticsAlertThreshold.condition");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // repeated string notification_channels = 7;
          for (int i = 0, n = this_._internal_notification_channels_size(); i < n; ++i) {
            const auto& s = this_._internal_notification_channels().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.AnalyticsAlertThreshold.notification_channels");
            target = stream->WriteString(7, s, target);
          }

          // map<string, string> metadata = 8;
          if (!this_._internal_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    8, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.AnalyticsAlertThreshold.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.AnalyticsAlertThreshold.metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    8, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.AnalyticsAlertThreshold.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.AnalyticsAlertThreshold.metadata");
              }
            }
          }

          // string action_on_breach = 9;
          if (!this_._internal_action_on_breach().empty()) {
            const std::string& _s = this_._internal_action_on_breach();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.AnalyticsAlertThreshold.action_on_breach");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          // bool restrict_to_business_hours = 10;
          if (this_._internal_restrict_to_business_hours() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                10, this_._internal_restrict_to_business_hours(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.analytics.AnalyticsAlertThreshold)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AnalyticsAlertThreshold::ByteSizeLong(const MessageLite& base) {
          const AnalyticsAlertThreshold& this_ = static_cast<const AnalyticsAlertThreshold&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AnalyticsAlertThreshold::ByteSizeLong() const {
          const AnalyticsAlertThreshold& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.analytics.AnalyticsAlertThreshold)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string notification_channels = 7;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_notification_channels().size());
              for (int i = 0, n = this_._internal_notification_channels().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_notification_channels().Get(i));
              }
            }
            // map<string, string> metadata = 8;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_metadata_size());
              for (const auto& entry : this_._internal_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string threshold_id = 1;
            if (!this_._internal_threshold_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_threshold_id());
            }
            // string condition = 6;
            if (!this_._internal_condition().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_condition());
            }
            // string action_on_breach = 9;
            if (!this_._internal_action_on_breach().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_action_on_breach());
            }
            // double threshold_value = 3;
            if (::absl::bit_cast<::uint64_t>(this_._internal_threshold_value()) != 0) {
              total_size += 9;
            }
            // .seigr.analytics.MetricCategory category = 2;
            if (this_._internal_category() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_category());
            }
            // .seigr.alerting.AlertSeverity severity = 4;
            if (this_._internal_severity() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_severity());
            }
            // .seigr.event.EscalationLevel escalation_level = 5;
            if (this_._internal_escalation_level() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_escalation_level());
            }
            // bool restrict_to_business_hours = 10;
            if (this_._internal_restrict_to_business_hours() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AnalyticsAlertThreshold::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AnalyticsAlertThreshold*>(&to_msg);
  auto& from = static_cast<const AnalyticsAlertThreshold&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.analytics.AnalyticsAlertThreshold)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_notification_channels()->MergeFrom(from._internal_notification_channels());
  _this->_impl_.metadata_.MergeFrom(from._impl_.metadata_);
  if (!from._internal_threshold_id().empty()) {
    _this->_internal_set_threshold_id(from._internal_threshold_id());
  }
  if (!from._internal_condition().empty()) {
    _this->_internal_set_condition(from._internal_condition());
  }
  if (!from._internal_action_on_breach().empty()) {
    _this->_internal_set_action_on_breach(from._internal_action_on_breach());
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_threshold_value()) != 0) {
    _this->_impl_.threshold_value_ = from._impl_.threshold_value_;
  }
  if (from._internal_category() != 0) {
    _this->_impl_.category_ = from._impl_.category_;
  }
  if (from._internal_severity() != 0) {
    _this->_impl_.severity_ = from._impl_.severity_;
  }
  if (from._internal_escalation_level() != 0) {
    _this->_impl_.escalation_level_ = from._impl_.escalation_level_;
  }
  if (from._internal_restrict_to_business_hours() != 0) {
    _this->_impl_.restrict_to_business_hours_ = from._impl_.restrict_to_business_hours_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AnalyticsAlertThreshold::CopyFrom(const AnalyticsAlertThreshold& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.analytics.AnalyticsAlertThreshold)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AnalyticsAlertThreshold::InternalSwap(AnalyticsAlertThreshold* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.notification_channels_.InternalSwap(&other->_impl_.notification_channels_);
  _impl_.metadata_.InternalSwap(&other->_impl_.metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.threshold_id_, &other->_impl_.threshold_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.condition_, &other->_impl_.condition_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.action_on_breach_, &other->_impl_.action_on_breach_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AnalyticsAlertThreshold, _impl_.restrict_to_business_hours_)
      + sizeof(AnalyticsAlertThreshold::_impl_.restrict_to_business_hours_)
      - PROTOBUF_FIELD_OFFSET(AnalyticsAlertThreshold, _impl_.threshold_value_)>(
          reinterpret_cast<char*>(&_impl_.threshold_value_),
          reinterpret_cast<char*>(&other->_impl_.threshold_value_));
}

::google::protobuf::Metadata AnalyticsAlertThreshold::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              AnalyticsSettings_MetadataEntry_DoNotUse::AnalyticsSettings_MetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              AnalyticsSettings_MetadataEntry_DoNotUse::AnalyticsSettings_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              AnalyticsSettings_MetadataEntry_DoNotUse::AnalyticsSettings_MetadataEntry_DoNotUse() : SuperType() {}
              AnalyticsSettings_MetadataEntry_DoNotUse::AnalyticsSettings_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* AnalyticsSettings_MetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) AnalyticsSettings_MetadataEntry_DoNotUse(arena);
              }
              constexpr auto AnalyticsSettings_MetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AnalyticsSettings_MetadataEntry_DoNotUse),
                                                          alignof(AnalyticsSettings_MetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull AnalyticsSettings_MetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_AnalyticsSettings_MetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &AnalyticsSettings_MetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<AnalyticsSettings_MetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &AnalyticsSettings_MetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &AnalyticsSettings_MetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(AnalyticsSettings_MetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &AnalyticsSettings_MetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_analytics_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* AnalyticsSettings_MetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 64, 2> AnalyticsSettings_MetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AnalyticsSettings_MetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::analytics::AnalyticsSettings_MetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsSettings_MetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsSettings_MetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(AnalyticsSettings_MetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(AnalyticsSettings_MetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\57\3\5\0\0\0\0\0"
    "seigr.analytics.AnalyticsSettings.MetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class AnalyticsSettings::_Internal {
 public:
};

AnalyticsSettings::AnalyticsSettings(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.analytics.AnalyticsSettings)
}
inline PROTOBUF_NDEBUG_INLINE AnalyticsSettings::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::analytics::AnalyticsSettings& from_msg)
      : thresholds_{visibility, arena, from.thresholds_},
        metadata_{visibility, arena, from.metadata_},
        _cached_size_{0} {}

AnalyticsSettings::AnalyticsSettings(
    ::google::protobuf::Arena* arena,
    const AnalyticsSettings& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AnalyticsSettings* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, aggregation_interval_seconds_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, aggregation_interval_seconds_),
           offsetof(Impl_, alert_evaluation_interval_) -
               offsetof(Impl_, aggregation_interval_seconds_) +
               sizeof(Impl_::alert_evaluation_interval_));

  // @@protoc_insertion_point(copy_constructor:seigr.analytics.AnalyticsSettings)
}
inline PROTOBUF_NDEBUG_INLINE AnalyticsSettings::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : thresholds_{visibility, arena},
        metadata_{visibility, arena},
        _cached_size_{0} {}

inline void AnalyticsSettings::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, aggregation_interval_seconds_),
           0,
           offsetof(Impl_, alert_evaluation_interval_) -
               offsetof(Impl_, aggregation_interval_seconds_) +
               sizeof(Impl_::alert_evaluation_interval_));
}
AnalyticsSettings::~AnalyticsSettings() {
  // @@protoc_insertion_point(destructor:seigr.analytics.AnalyticsSettings)
  SharedDtor(*this);
}
inline void AnalyticsSettings::SharedDtor(MessageLite& self) {
  AnalyticsSettings& this_ = static_cast<AnalyticsSettings&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* AnalyticsSettings::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AnalyticsSettings(arena);
}
constexpr auto AnalyticsSettings::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(AnalyticsSettings, _impl_.thresholds_) +
          decltype(AnalyticsSettings::_impl_.thresholds_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(AnalyticsSettings, _impl_.metadata_) +
          decltype(AnalyticsSettings::_impl_.metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(AnalyticsSettings, _impl_.metadata_) +
          decltype(AnalyticsSettings::_impl_.metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(AnalyticsSettings), alignof(AnalyticsSettings), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&AnalyticsSettings::PlacementNew_,
                                 sizeof(AnalyticsSettings),
                                 alignof(AnalyticsSettings));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AnalyticsSettings::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AnalyticsSettings_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AnalyticsSettings::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AnalyticsSettings>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AnalyticsSettings::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AnalyticsSettings>(), &AnalyticsSettings::ByteSizeLong,
            &AnalyticsSettings::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AnalyticsSettings, _impl_._cached_size_),
        false,
    },
    &AnalyticsSettings::kDescriptorMethods,
    &descriptor_table_analytics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AnalyticsSettings::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 2, 50, 2> AnalyticsSettings::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::analytics::AnalyticsSettings>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 aggregation_interval_seconds = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AnalyticsSettings, _impl_.aggregation_interval_seconds_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsSettings, _impl_.aggregation_interval_seconds_)}},
    // int32 data_retention_days = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AnalyticsSettings, _impl_.data_retention_days_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsSettings, _impl_.data_retention_days_)}},
    // bool real_time_alerting_enabled = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AnalyticsSettings, _impl_.real_time_alerting_enabled_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsSettings, _impl_.real_time_alerting_enabled_)}},
    // int32 alert_evaluation_interval = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AnalyticsSettings, _impl_.alert_evaluation_interval_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsSettings, _impl_.alert_evaluation_interval_)}},
    // repeated .seigr.analytics.AnalyticsAlertThreshold thresholds = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsSettings, _impl_.thresholds_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 aggregation_interval_seconds = 1;
    {PROTOBUF_FIELD_OFFSET(AnalyticsSettings, _impl_.aggregation_interval_seconds_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 data_retention_days = 2;
    {PROTOBUF_FIELD_OFFSET(AnalyticsSettings, _impl_.data_retention_days_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool real_time_alerting_enabled = 3;
    {PROTOBUF_FIELD_OFFSET(AnalyticsSettings, _impl_.real_time_alerting_enabled_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int32 alert_evaluation_interval = 4;
    {PROTOBUF_FIELD_OFFSET(AnalyticsSettings, _impl_.alert_evaluation_interval_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated .seigr.analytics.AnalyticsAlertThreshold thresholds = 5;
    {PROTOBUF_FIELD_OFFSET(AnalyticsSettings, _impl_.thresholds_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<string, string> metadata = 6;
    {PROTOBUF_FIELD_OFFSET(AnalyticsSettings, _impl_.metadata_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetTable<::seigr::analytics::AnalyticsAlertThreshold>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(AnalyticsSettings()._impl_.metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\41\0\0\0\0\0\10\0"
    "seigr.analytics.AnalyticsSettings"
    "metadata"
  }},
};

PROTOBUF_NOINLINE void AnalyticsSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.analytics.AnalyticsSettings)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.thresholds_.Clear();
  _impl_.metadata_.Clear();
  ::memset(&_impl_.aggregation_interval_seconds_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.alert_evaluation_interval_) -
      reinterpret_cast<char*>(&_impl_.aggregation_interval_seconds_)) + sizeof(_impl_.alert_evaluation_interval_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AnalyticsSettings::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AnalyticsSettings& this_ = static_cast<const AnalyticsSettings&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AnalyticsSettings::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AnalyticsSettings& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.analytics.AnalyticsSettings)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 aggregation_interval_seconds = 1;
          if (this_._internal_aggregation_interval_seconds() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_aggregation_interval_seconds(), target);
          }

          // int32 data_retention_days = 2;
          if (this_._internal_data_retention_days() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_data_retention_days(), target);
          }

          // bool real_time_alerting_enabled = 3;
          if (this_._internal_real_time_alerting_enabled() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_real_time_alerting_enabled(), target);
          }

          // int32 alert_evaluation_interval = 4;
          if (this_._internal_alert_evaluation_interval() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<4>(
                    stream, this_._internal_alert_evaluation_interval(), target);
          }

          // repeated .seigr.analytics.AnalyticsAlertThreshold thresholds = 5;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_thresholds_size());
               i < n; i++) {
            const auto& repfield = this_._internal_thresholds().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    5, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // map<string, string> metadata = 6;
          if (!this_._internal_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.AnalyticsSettings.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.AnalyticsSettings.metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.AnalyticsSettings.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.AnalyticsSettings.metadata");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.analytics.AnalyticsSettings)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AnalyticsSettings::ByteSizeLong(const MessageLite& base) {
          const AnalyticsSettings& this_ = static_cast<const AnalyticsSettings&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AnalyticsSettings::ByteSizeLong() const {
          const AnalyticsSettings& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.analytics.AnalyticsSettings)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .seigr.analytics.AnalyticsAlertThreshold thresholds = 5;
            {
              total_size += 1UL * this_._internal_thresholds_size();
              for (const auto& msg : this_._internal_thresholds()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // map<string, string> metadata = 6;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_metadata_size());
              for (const auto& entry : this_._internal_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // int32 aggregation_interval_seconds = 1;
            if (this_._internal_aggregation_interval_seconds() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_aggregation_interval_seconds());
            }
            // int32 data_retention_days = 2;
            if (this_._internal_data_retention_days() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_data_retention_days());
            }
            // bool real_time_alerting_enabled = 3;
            if (this_._internal_real_time_alerting_enabled() != 0) {
              total_size += 2;
            }
            // int32 alert_evaluation_interval = 4;
            if (this_._internal_alert_evaluation_interval() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_alert_evaluation_interval());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AnalyticsSettings::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AnalyticsSettings*>(&to_msg);
  auto& from = static_cast<const AnalyticsSettings&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.analytics.AnalyticsSettings)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_thresholds()->MergeFrom(
      from._internal_thresholds());
  _this->_impl_.metadata_.MergeFrom(from._impl_.metadata_);
  if (from._internal_aggregation_interval_seconds() != 0) {
    _this->_impl_.aggregation_interval_seconds_ = from._impl_.aggregation_interval_seconds_;
  }
  if (from._internal_data_retention_days() != 0) {
    _this->_impl_.data_retention_days_ = from._impl_.data_retention_days_;
  }
  if (from._internal_real_time_alerting_enabled() != 0) {
    _this->_impl_.real_time_alerting_enabled_ = from._impl_.real_time_alerting_enabled_;
  }
  if (from._internal_alert_evaluation_interval() != 0) {
    _this->_impl_.alert_evaluation_interval_ = from._impl_.alert_evaluation_interval_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AnalyticsSettings::CopyFrom(const AnalyticsSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.analytics.AnalyticsSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AnalyticsSettings::InternalSwap(AnalyticsSettings* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.thresholds_.InternalSwap(&other->_impl_.thresholds_);
  _impl_.metadata_.InternalSwap(&other->_impl_.metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AnalyticsSettings, _impl_.alert_evaluation_interval_)
      + sizeof(AnalyticsSettings::_impl_.alert_evaluation_interval_)
      - PROTOBUF_FIELD_OFFSET(AnalyticsSettings, _impl_.aggregation_interval_seconds_)>(
          reinterpret_cast<char*>(&_impl_.aggregation_interval_seconds_),
          reinterpret_cast<char*>(&other->_impl_.aggregation_interval_seconds_));
}

::google::protobuf::Metadata AnalyticsSettings::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              AnalyticsSummary_ForecastValuesEntry_DoNotUse::AnalyticsSummary_ForecastValuesEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              AnalyticsSummary_ForecastValuesEntry_DoNotUse::AnalyticsSummary_ForecastValuesEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              AnalyticsSummary_ForecastValuesEntry_DoNotUse::AnalyticsSummary_ForecastValuesEntry_DoNotUse() : SuperType() {}
              AnalyticsSummary_ForecastValuesEntry_DoNotUse::AnalyticsSummary_ForecastValuesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* AnalyticsSummary_ForecastValuesEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) AnalyticsSummary_ForecastValuesEntry_DoNotUse(arena);
              }
              constexpr auto AnalyticsSummary_ForecastValuesEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AnalyticsSummary_ForecastValuesEntry_DoNotUse),
                                                          alignof(AnalyticsSummary_ForecastValuesEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull AnalyticsSummary_ForecastValuesEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_AnalyticsSummary_ForecastValuesEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &AnalyticsSummary_ForecastValuesEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<AnalyticsSummary_ForecastValuesEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &AnalyticsSummary_ForecastValuesEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &AnalyticsSummary_ForecastValuesEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(AnalyticsSummary_ForecastValuesEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &AnalyticsSummary_ForecastValuesEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_analytics_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* AnalyticsSummary_ForecastValuesEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 64, 2> AnalyticsSummary_ForecastValuesEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AnalyticsSummary_ForecastValuesEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::analytics::AnalyticsSummary_ForecastValuesEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double value = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsSummary_ForecastValuesEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsSummary_ForecastValuesEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(AnalyticsSummary_ForecastValuesEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double value = 2;
    {PROTOBUF_FIELD_OFFSET(AnalyticsSummary_ForecastValuesEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
    "\64\3\0\0\0\0\0\0"
    "seigr.analytics.AnalyticsSummary.ForecastValuesEntry"
    "key"
  }},
};

// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              AnalyticsSummary_MetadataEntry_DoNotUse::AnalyticsSummary_MetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              AnalyticsSummary_MetadataEntry_DoNotUse::AnalyticsSummary_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              AnalyticsSummary_MetadataEntry_DoNotUse::AnalyticsSummary_MetadataEntry_DoNotUse() : SuperType() {}
              AnalyticsSummary_MetadataEntry_DoNotUse::AnalyticsSummary_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* AnalyticsSummary_MetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) AnalyticsSummary_MetadataEntry_DoNotUse(arena);
              }
              constexpr auto AnalyticsSummary_MetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AnalyticsSummary_MetadataEntry_DoNotUse),
                                                          alignof(AnalyticsSummary_MetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull AnalyticsSummary_MetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_AnalyticsSummary_MetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &AnalyticsSummary_MetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<AnalyticsSummary_MetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &AnalyticsSummary_MetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &AnalyticsSummary_MetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(AnalyticsSummary_MetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &AnalyticsSummary_MetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_analytics_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* AnalyticsSummary_MetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 63, 2> AnalyticsSummary_MetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AnalyticsSummary_MetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::analytics::AnalyticsSummary_MetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsSummary_MetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsSummary_MetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(AnalyticsSummary_MetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(AnalyticsSummary_MetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\56\3\5\0\0\0\0\0"
    "seigr.analytics.AnalyticsSummary.MetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class AnalyticsSummary::_Internal {
 public:
};

AnalyticsSummary::AnalyticsSummary(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.analytics.AnalyticsSummary)
}
inline PROTOBUF_NDEBUG_INLINE AnalyticsSummary::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::analytics::AnalyticsSummary& from_msg)
      : forecast_values_{visibility, arena, from.forecast_values_},
        metadata_{visibility, arena, from.metadata_},
        summary_id_(arena, from.summary_id_),
        trend_(arena, from.trend_),
        period_covered_(arena, from.period_covered_),
        _cached_size_{0} {}

AnalyticsSummary::AnalyticsSummary(
    ::google::protobuf::Arena* arena,
    const AnalyticsSummary& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AnalyticsSummary* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, average_value_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, average_value_),
           offsetof(Impl_, category_) -
               offsetof(Impl_, average_value_) +
               sizeof(Impl_::category_));

  // @@protoc_insertion_point(copy_constructor:seigr.analytics.AnalyticsSummary)
}
inline PROTOBUF_NDEBUG_INLINE AnalyticsSummary::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : forecast_values_{visibility, arena},
        metadata_{visibility, arena},
        summary_id_(arena),
        trend_(arena),
        period_covered_(arena),
        _cached_size_{0} {}

inline void AnalyticsSummary::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, average_value_),
           0,
           offsetof(Impl_, category_) -
               offsetof(Impl_, average_value_) +
               sizeof(Impl_::category_));
}
AnalyticsSummary::~AnalyticsSummary() {
  // @@protoc_insertion_point(destructor:seigr.analytics.AnalyticsSummary)
  SharedDtor(*this);
}
inline void AnalyticsSummary::SharedDtor(MessageLite& self) {
  AnalyticsSummary& this_ = static_cast<AnalyticsSummary&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.summary_id_.Destroy();
  this_._impl_.trend_.Destroy();
  this_._impl_.period_covered_.Destroy();
  this_._impl_.~Impl_();
}

inline void* AnalyticsSummary::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AnalyticsSummary(arena);
}
constexpr auto AnalyticsSummary::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(AnalyticsSummary, _impl_.forecast_values_) +
          decltype(AnalyticsSummary::_impl_.forecast_values_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(AnalyticsSummary, _impl_.forecast_values_) +
          decltype(AnalyticsSummary::_impl_.forecast_values_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(AnalyticsSummary, _impl_.metadata_) +
          decltype(AnalyticsSummary::_impl_.metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(AnalyticsSummary, _impl_.metadata_) +
          decltype(AnalyticsSummary::_impl_.metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(AnalyticsSummary), alignof(AnalyticsSummary), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&AnalyticsSummary::PlacementNew_,
                                 sizeof(AnalyticsSummary),
                                 alignof(AnalyticsSummary));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AnalyticsSummary::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AnalyticsSummary_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AnalyticsSummary::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AnalyticsSummary>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AnalyticsSummary::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AnalyticsSummary>(), &AnalyticsSummary::ByteSizeLong,
            &AnalyticsSummary::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AnalyticsSummary, _impl_._cached_size_),
        false,
    },
    &AnalyticsSummary::kDescriptorMethods,
    &descriptor_table_analytics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AnalyticsSummary::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 2, 101, 2> AnalyticsSummary::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::analytics::AnalyticsSummary>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string summary_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsSummary, _impl_.summary_id_)}},
    // .seigr.analytics.MetricCategory category = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AnalyticsSummary, _impl_.category_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsSummary, _impl_.category_)}},
    // double average_value = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsSummary, _impl_.average_value_)}},
    // double max_value = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsSummary, _impl_.max_value_)}},
    // double min_value = 5;
    {::_pbi::TcParser::FastF64S1,
     {41, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsSummary, _impl_.min_value_)}},
    // double standard_deviation = 6;
    {::_pbi::TcParser::FastF64S1,
     {49, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsSummary, _impl_.standard_deviation_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string trend = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsSummary, _impl_.trend_)}},
    // string period_covered = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsSummary, _impl_.period_covered_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string summary_id = 1;
    {PROTOBUF_FIELD_OFFSET(AnalyticsSummary, _impl_.summary_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.analytics.MetricCategory category = 2;
    {PROTOBUF_FIELD_OFFSET(AnalyticsSummary, _impl_.category_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // double average_value = 3;
    {PROTOBUF_FIELD_OFFSET(AnalyticsSummary, _impl_.average_value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double max_value = 4;
    {PROTOBUF_FIELD_OFFSET(AnalyticsSummary, _impl_.max_value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double min_value = 5;
    {PROTOBUF_FIELD_OFFSET(AnalyticsSummary, _impl_.min_value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double standard_deviation = 6;
    {PROTOBUF_FIELD_OFFSET(AnalyticsSummary, _impl_.standard_deviation_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // map<string, double> forecast_values = 7;
    {PROTOBUF_FIELD_OFFSET(AnalyticsSummary, _impl_.forecast_values_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string trend = 8;
    {PROTOBUF_FIELD_OFFSET(AnalyticsSummary, _impl_.trend_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string period_covered = 9;
    {PROTOBUF_FIELD_OFFSET(AnalyticsSummary, _impl_.period_covered_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> metadata = 10;
    {PROTOBUF_FIELD_OFFSET(AnalyticsSummary, _impl_.metadata_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(AnalyticsSummary()._impl_.forecast_values_)>(
        1, 0, 0, 9,
        1)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(AnalyticsSummary()._impl_.metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\40\12\0\0\0\0\0\17\5\16\10\0\0\0\0\0"
    "seigr.analytics.AnalyticsSummary"
    "summary_id"
    "forecast_values"
    "trend"
    "period_covered"
    "metadata"
  }},
};

PROTOBUF_NOINLINE void AnalyticsSummary::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.analytics.AnalyticsSummary)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.forecast_values_.Clear();
  _impl_.metadata_.Clear();
  _impl_.summary_id_.ClearToEmpty();
  _impl_.trend_.ClearToEmpty();
  _impl_.period_covered_.ClearToEmpty();
  ::memset(&_impl_.average_value_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.category_) -
      reinterpret_cast<char*>(&_impl_.average_value_)) + sizeof(_impl_.category_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AnalyticsSummary::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AnalyticsSummary& this_ = static_cast<const AnalyticsSummary&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AnalyticsSummary::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AnalyticsSummary& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.analytics.AnalyticsSummary)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string summary_id = 1;
          if (!this_._internal_summary_id().empty()) {
            const std::string& _s = this_._internal_summary_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.AnalyticsSummary.summary_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // .seigr.analytics.MetricCategory category = 2;
          if (this_._internal_category() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_category(), target);
          }

          // double average_value = 3;
          if (::absl::bit_cast<::uint64_t>(this_._internal_average_value()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                3, this_._internal_average_value(), target);
          }

          // double max_value = 4;
          if (::absl::bit_cast<::uint64_t>(this_._internal_max_value()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                4, this_._internal_max_value(), target);
          }

          // double min_value = 5;
          if (::absl::bit_cast<::uint64_t>(this_._internal_min_value()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                5, this_._internal_min_value(), target);
          }

          // double standard_deviation = 6;
          if (::absl::bit_cast<::uint64_t>(this_._internal_standard_deviation()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                6, this_._internal_standard_deviation(), target);
          }

          // map<string, double> forecast_values = 7;
          if (!this_._internal_forecast_values().empty()) {
            using MapType = ::google::protobuf::Map<std::string, double>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, double,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_DOUBLE>;
            const auto& field = this_._internal_forecast_values();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.AnalyticsSummary.forecast_values");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.AnalyticsSummary.forecast_values");
              }
            }
          }

          // string trend = 8;
          if (!this_._internal_trend().empty()) {
            const std::string& _s = this_._internal_trend();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.AnalyticsSummary.trend");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          // string period_covered = 9;
          if (!this_._internal_period_covered().empty()) {
            const std::string& _s = this_._internal_period_covered();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.AnalyticsSummary.period_covered");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          // map<string, string> metadata = 10;
          if (!this_._internal_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    10, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.AnalyticsSummary.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.AnalyticsSummary.metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    10, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.AnalyticsSummary.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.AnalyticsSummary.metadata");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.analytics.AnalyticsSummary)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AnalyticsSummary::ByteSizeLong(const MessageLite& base) {
          const AnalyticsSummary& this_ = static_cast<const AnalyticsSummary&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AnalyticsSummary::ByteSizeLong() const {
          const AnalyticsSummary& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.analytics.AnalyticsSummary)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, double> forecast_values = 7;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_forecast_values_size());
              for (const auto& entry : this_._internal_forecast_values()) {
                total_size += _pbi::MapEntryFuncs<std::string, double,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_DOUBLE>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // map<string, string> metadata = 10;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_metadata_size());
              for (const auto& entry : this_._internal_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string summary_id = 1;
            if (!this_._internal_summary_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_summary_id());
            }
            // string trend = 8;
            if (!this_._internal_trend().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_trend());
            }
            // string period_covered = 9;
            if (!this_._internal_period_covered().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_period_covered());
            }
            // double average_value = 3;
            if (::absl::bit_cast<::uint64_t>(this_._internal_average_value()) != 0) {
              total_size += 9;
            }
            // double max_value = 4;
            if (::absl::bit_cast<::uint64_t>(this_._internal_max_value()) != 0) {
              total_size += 9;
            }
            // double min_value = 5;
            if (::absl::bit_cast<::uint64_t>(this_._internal_min_value()) != 0) {
              total_size += 9;
            }
            // double standard_deviation = 6;
            if (::absl::bit_cast<::uint64_t>(this_._internal_standard_deviation()) != 0) {
              total_size += 9;
            }
            // .seigr.analytics.MetricCategory category = 2;
            if (this_._internal_category() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_category());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AnalyticsSummary::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AnalyticsSummary*>(&to_msg);
  auto& from = static_cast<const AnalyticsSummary&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.analytics.AnalyticsSummary)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.forecast_values_.MergeFrom(from._impl_.forecast_values_);
  _this->_impl_.metadata_.MergeFrom(from._impl_.metadata_);
  if (!from._internal_summary_id().empty()) {
    _this->_internal_set_summary_id(from._internal_summary_id());
  }
  if (!from._internal_trend().empty()) {
    _this->_internal_set_trend(from._internal_trend());
  }
  if (!from._internal_period_covered().empty()) {
    _this->_internal_set_period_covered(from._internal_period_covered());
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_average_value()) != 0) {
    _this->_impl_.average_value_ = from._impl_.average_value_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_max_value()) != 0) {
    _this->_impl_.max_value_ = from._impl_.max_value_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_min_value()) != 0) {
    _this->_impl_.min_value_ = from._impl_.min_value_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_standard_deviation()) != 0) {
    _this->_impl_.standard_deviation_ = from._impl_.standard_deviation_;
  }
  if (from._internal_category() != 0) {
    _this->_impl_.category_ = from._impl_.category_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AnalyticsSummary::CopyFrom(const AnalyticsSummary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.analytics.AnalyticsSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AnalyticsSummary::InternalSwap(AnalyticsSummary* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.forecast_values_.InternalSwap(&other->_impl_.forecast_values_);
  _impl_.metadata_.InternalSwap(&other->_impl_.metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.summary_id_, &other->_impl_.summary_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.trend_, &other->_impl_.trend_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.period_covered_, &other->_impl_.period_covered_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AnalyticsSummary, _impl_.category_)
      + sizeof(AnalyticsSummary::_impl_.category_)
      - PROTOBUF_FIELD_OFFSET(AnalyticsSummary, _impl_.average_value_)>(
          reinterpret_cast<char*>(&_impl_.average_value_),
          reinterpret_cast<char*>(&other->_impl_.average_value_));
}

::google::protobuf::Metadata AnalyticsSummary::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              AnalyticsReport_MetadataEntry_DoNotUse::AnalyticsReport_MetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              AnalyticsReport_MetadataEntry_DoNotUse::AnalyticsReport_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              AnalyticsReport_MetadataEntry_DoNotUse::AnalyticsReport_MetadataEntry_DoNotUse() : SuperType() {}
              AnalyticsReport_MetadataEntry_DoNotUse::AnalyticsReport_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* AnalyticsReport_MetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) AnalyticsReport_MetadataEntry_DoNotUse(arena);
              }
              constexpr auto AnalyticsReport_MetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AnalyticsReport_MetadataEntry_DoNotUse),
                                                          alignof(AnalyticsReport_MetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull AnalyticsReport_MetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_AnalyticsReport_MetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &AnalyticsReport_MetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<AnalyticsReport_MetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &AnalyticsReport_MetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &AnalyticsReport_MetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(AnalyticsReport_MetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &AnalyticsReport_MetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_analytics_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* AnalyticsReport_MetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 62, 2> AnalyticsReport_MetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AnalyticsReport_MetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::analytics::AnalyticsReport_MetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsReport_MetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsReport_MetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(AnalyticsReport_MetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(AnalyticsReport_MetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\55\3\5\0\0\0\0\0"
    "seigr.analytics.AnalyticsReport.MetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class AnalyticsReport::_Internal {
 public:
};

AnalyticsReport::AnalyticsReport(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.analytics.AnalyticsReport)
}
inline PROTOBUF_NDEBUG_INLINE AnalyticsReport::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::analytics::AnalyticsReport& from_msg)
      : metrics_{visibility, arena, from.metrics_},
        insights_{visibility, arena, from.insights_},
        metadata_{visibility, arena, from.metadata_},
        comparison_report_ids_{visibility, arena, from.comparison_report_ids_},
        report_id_(arena, from.report_id_),
        title_(arena, from.title_),
        generated_by_(arena, from.generated_by_),
        timestamp_(arena, from.timestamp_),
        _cached_size_{0} {}

AnalyticsReport::AnalyticsReport(
    ::google::protobuf::Arena* arena,
    const AnalyticsReport& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AnalyticsReport* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:seigr.analytics.AnalyticsReport)
}
inline PROTOBUF_NDEBUG_INLINE AnalyticsReport::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : metrics_{visibility, arena},
        insights_{visibility, arena},
        metadata_{visibility, arena},
        comparison_report_ids_{visibility, arena},
        report_id_(arena),
        title_(arena),
        generated_by_(arena),
        timestamp_(arena),
        _cached_size_{0} {}

inline void AnalyticsReport::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AnalyticsReport::~AnalyticsReport() {
  // @@protoc_insertion_point(destructor:seigr.analytics.AnalyticsReport)
  SharedDtor(*this);
}
inline void AnalyticsReport::SharedDtor(MessageLite& self) {
  AnalyticsReport& this_ = static_cast<AnalyticsReport&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.report_id_.Destroy();
  this_._impl_.title_.Destroy();
  this_._impl_.generated_by_.Destroy();
  this_._impl_.timestamp_.Destroy();
  this_._impl_.~Impl_();
}

inline void* AnalyticsReport::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AnalyticsReport(arena);
}
constexpr auto AnalyticsReport::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(AnalyticsReport, _impl_.metrics_) +
          decltype(AnalyticsReport::_impl_.metrics_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(AnalyticsReport, _impl_.insights_) +
          decltype(AnalyticsReport::_impl_.insights_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(AnalyticsReport, _impl_.metadata_) +
          decltype(AnalyticsReport::_impl_.metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(AnalyticsReport, _impl_.metadata_) +
          decltype(AnalyticsReport::_impl_.metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(AnalyticsReport, _impl_.comparison_report_ids_) +
          decltype(AnalyticsReport::_impl_.comparison_report_ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(AnalyticsReport), alignof(AnalyticsReport), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&AnalyticsReport::PlacementNew_,
                                 sizeof(AnalyticsReport),
                                 alignof(AnalyticsReport));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AnalyticsReport::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AnalyticsReport_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AnalyticsReport::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AnalyticsReport>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AnalyticsReport::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AnalyticsReport>(), &AnalyticsReport::ByteSizeLong,
            &AnalyticsReport::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AnalyticsReport, _impl_._cached_size_),
        false,
    },
    &AnalyticsReport::kDescriptorMethods,
    &descriptor_table_analytics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AnalyticsReport::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 3, 112, 2> AnalyticsReport::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::analytics::AnalyticsReport>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string comparison_report_ids = 8;
    {::_pbi::TcParser::FastUR1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsReport, _impl_.comparison_report_ids_)}},
    // string report_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsReport, _impl_.report_id_)}},
    // string title = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsReport, _impl_.title_)}},
    // repeated .seigr.analytics.DataMetric metrics = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsReport, _impl_.metrics_)}},
    // repeated .seigr.analytics.AnalyticsInsight insights = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 1, PROTOBUF_FIELD_OFFSET(AnalyticsReport, _impl_.insights_)}},
    // string generated_by = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsReport, _impl_.generated_by_)}},
    // string timestamp = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(AnalyticsReport, _impl_.timestamp_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string report_id = 1;
    {PROTOBUF_FIELD_OFFSET(AnalyticsReport, _impl_.report_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string title = 2;
    {PROTOBUF_FIELD_OFFSET(AnalyticsReport, _impl_.title_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .seigr.analytics.DataMetric metrics = 3;
    {PROTOBUF_FIELD_OFFSET(AnalyticsReport, _impl_.metrics_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .seigr.analytics.AnalyticsInsight insights = 4;
    {PROTOBUF_FIELD_OFFSET(AnalyticsReport, _impl_.insights_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string generated_by = 5;
    {PROTOBUF_FIELD_OFFSET(AnalyticsReport, _impl_.generated_by_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string timestamp = 6;
    {PROTOBUF_FIELD_OFFSET(AnalyticsReport, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> metadata = 7;
    {PROTOBUF_FIELD_OFFSET(AnalyticsReport, _impl_.metadata_), 0, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // repeated string comparison_report_ids = 8;
    {PROTOBUF_FIELD_OFFSET(AnalyticsReport, _impl_.comparison_report_ids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::seigr::analytics::DataMetric>()},
    {::_pbi::TcParser::GetTable<::seigr::analytics::AnalyticsInsight>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(AnalyticsReport()._impl_.metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\37\11\5\0\0\14\11\10\25\0\0\0\0\0\0\0"
    "seigr.analytics.AnalyticsReport"
    "report_id"
    "title"
    "generated_by"
    "timestamp"
    "metadata"
    "comparison_report_ids"
  }},
};

PROTOBUF_NOINLINE void AnalyticsReport::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.analytics.AnalyticsReport)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.metrics_.Clear();
  _impl_.insights_.Clear();
  _impl_.metadata_.Clear();
  _impl_.comparison_report_ids_.Clear();
  _impl_.report_id_.ClearToEmpty();
  _impl_.title_.ClearToEmpty();
  _impl_.generated_by_.ClearToEmpty();
  _impl_.timestamp_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AnalyticsReport::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AnalyticsReport& this_ = static_cast<const AnalyticsReport&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AnalyticsReport::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AnalyticsReport& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.analytics.AnalyticsReport)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string report_id = 1;
          if (!this_._internal_report_id().empty()) {
            const std::string& _s = this_._internal_report_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.AnalyticsReport.report_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string title = 2;
          if (!this_._internal_title().empty()) {
            const std::string& _s = this_._internal_title();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.AnalyticsReport.title");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // repeated .seigr.analytics.DataMetric metrics = 3;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_metrics_size());
               i < n; i++) {
            const auto& repfield = this_._internal_metrics().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .seigr.analytics.AnalyticsInsight insights = 4;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_insights_size());
               i < n; i++) {
            const auto& repfield = this_._internal_insights().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // string generated_by = 5;
          if (!this_._internal_generated_by().empty()) {
            const std::string& _s = this_._internal_generated_by();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.AnalyticsReport.generated_by");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string timestamp = 6;
          if (!this_._internal_timestamp().empty()) {
            const std::string& _s = this_._internal_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.AnalyticsReport.timestamp");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // map<string, string> metadata = 7;
          if (!this_._internal_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.AnalyticsReport.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.AnalyticsReport.metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.AnalyticsReport.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.AnalyticsReport.metadata");
              }
            }
          }

          // repeated string comparison_report_ids = 8;
          for (int i = 0, n = this_._internal_comparison_report_ids_size(); i < n; ++i) {
            const auto& s = this_._internal_comparison_report_ids().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.analytics.AnalyticsReport.comparison_report_ids");
            target = stream->WriteString(8, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.analytics.AnalyticsReport)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AnalyticsReport::ByteSizeLong(const MessageLite& base) {
          const AnalyticsReport& this_ = static_cast<const AnalyticsReport&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AnalyticsReport::ByteSizeLong() const {
          const AnalyticsReport& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.analytics.AnalyticsReport)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .seigr.analytics.DataMetric metrics = 3;
            {
              total_size += 1UL * this_._internal_metrics_size();
              for (const auto& msg : this_._internal_metrics()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .seigr.analytics.AnalyticsInsight insights = 4;
            {
              total_size += 1UL * this_._internal_insights_size();
              for (const auto& msg : this_._internal_insights()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // map<string, string> metadata = 7;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_metadata_size());
              for (const auto& entry : this_._internal_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // repeated string comparison_report_ids = 8;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_comparison_report_ids().size());
              for (int i = 0, n = this_._internal_comparison_report_ids().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_comparison_report_ids().Get(i));
              }
            }
          }
           {
            // string report_id = 1;
            if (!this_._internal_report_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_report_id());
            }
            // string title = 2;
            if (!this_._internal_title().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_title());
            }
            // string generated_by = 5;
            if (!this_._internal_generated_by().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_generated_by());
            }
            // string timestamp = 6;
            if (!this_._internal_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_timestamp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AnalyticsReport::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AnalyticsReport*>(&to_msg);
  auto& from = static_cast<const AnalyticsReport&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.analytics.AnalyticsReport)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_metrics()->MergeFrom(
      from._internal_metrics());
  _this->_internal_mutable_insights()->MergeFrom(
      from._internal_insights());
  _this->_impl_.metadata_.MergeFrom(from._impl_.metadata_);
  _this->_internal_mutable_comparison_report_ids()->MergeFrom(from._internal_comparison_report_ids());
  if (!from._internal_report_id().empty()) {
    _this->_internal_set_report_id(from._internal_report_id());
  }
  if (!from._internal_title().empty()) {
    _this->_internal_set_title(from._internal_title());
  }
  if (!from._internal_generated_by().empty()) {
    _this->_internal_set_generated_by(from._internal_generated_by());
  }
  if (!from._internal_timestamp().empty()) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AnalyticsReport::CopyFrom(const AnalyticsReport& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.analytics.AnalyticsReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AnalyticsReport::InternalSwap(AnalyticsReport* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.metrics_.InternalSwap(&other->_impl_.metrics_);
  _impl_.insights_.InternalSwap(&other->_impl_.insights_);
  _impl_.metadata_.InternalSwap(&other->_impl_.metadata_);
  _impl_.comparison_report_ids_.InternalSwap(&other->_impl_.comparison_report_ids_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.report_id_, &other->_impl_.report_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.generated_by_, &other->_impl_.generated_by_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.timestamp_, &other->_impl_.timestamp_, arena);
}

::google::protobuf::Metadata AnalyticsReport::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace analytics
}  // namespace seigr
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_analytics_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
