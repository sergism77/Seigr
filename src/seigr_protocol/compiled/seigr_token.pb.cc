// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: seigr_token.proto
// Protobuf C++ Version: 5.29.2

#include "seigr_token.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace seigr {
namespace seigr_token {

inline constexpr TransferTokenResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TransferTokenResponse::TransferTokenResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TransferTokenResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransferTokenResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransferTokenResponseDefaultTypeInternal() {}
  union {
    TransferTokenResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransferTokenResponseDefaultTypeInternal _TransferTokenResponse_default_instance_;

inline constexpr TransferTokenRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : from_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        to_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        reference_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        amount_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TransferTokenRequest::TransferTokenRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TransferTokenRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransferTokenRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransferTokenRequestDefaultTypeInternal() {}
  union {
    TransferTokenRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransferTokenRequestDefaultTypeInternal _TransferTokenRequest_default_instance_;

inline constexpr Transaction::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : from_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        to_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        transaction_id_{::uint64_t{0u}},
        amount_{::uint64_t{0u}},
        type_{static_cast< ::seigr::crosschain::TransactionType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Transaction::Transaction(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TransactionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransactionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransactionDefaultTypeInternal() {}
  union {
    Transaction _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransactionDefaultTypeInternal _Transaction_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SeigrToken_MetadataEntry_DoNotUse::SeigrToken_MetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : SeigrToken_MetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : SeigrToken_MetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SeigrToken_MetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SeigrToken_MetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SeigrToken_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    SeigrToken_MetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SeigrToken_MetadataEntry_DoNotUseDefaultTypeInternal _SeigrToken_MetadataEntry_DoNotUse_default_instance_;

inline constexpr MintTokenResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        token_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MintTokenResponse::MintTokenResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MintTokenResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MintTokenResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MintTokenResponseDefaultTypeInternal() {}
  union {
    MintTokenResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MintTokenResponseDefaultTypeInternal _MintTokenResponse_default_instance_;

inline constexpr MintTokenRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : owner_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        amount_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MintTokenRequest::MintTokenRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MintTokenRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MintTokenRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MintTokenRequestDefaultTypeInternal() {}
  union {
    MintTokenRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MintTokenRequestDefaultTypeInternal _MintTokenRequest_default_instance_;

inline constexpr GetTransactionHistoryRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : token_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        limit_{0u},
        include_locked_transactions_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetTransactionHistoryRequest::GetTransactionHistoryRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetTransactionHistoryRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetTransactionHistoryRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetTransactionHistoryRequestDefaultTypeInternal() {}
  union {
    GetTransactionHistoryRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetTransactionHistoryRequestDefaultTypeInternal _GetTransactionHistoryRequest_default_instance_;

inline constexpr DistributeSurplusResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        distributed_amount_{::uint64_t{0u}},
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DistributeSurplusResponse::DistributeSurplusResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DistributeSurplusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DistributeSurplusResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DistributeSurplusResponseDefaultTypeInternal() {}
  union {
    DistributeSurplusResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DistributeSurplusResponseDefaultTypeInternal _DistributeSurplusResponse_default_instance_;

inline constexpr DistributeSurplusRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : token_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        distribute_amount_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DistributeSurplusRequest::DistributeSurplusRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DistributeSurplusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DistributeSurplusRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DistributeSurplusRequestDefaultTypeInternal() {}
  union {
    DistributeSurplusRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DistributeSurplusRequestDefaultTypeInternal _DistributeSurplusRequest_default_instance_;

inline constexpr CheckTokenStatusResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : balance_{::uint64_t{0u}},
        status_{static_cast< ::seigr::seigr_token::TokenStatus >(0)},
        is_capped_{false},
        max_cap_{::uint64_t{0u}},
        surplus_amount_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CheckTokenStatusResponse::CheckTokenStatusResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CheckTokenStatusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CheckTokenStatusResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CheckTokenStatusResponseDefaultTypeInternal() {}
  union {
    CheckTokenStatusResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CheckTokenStatusResponseDefaultTypeInternal _CheckTokenStatusResponse_default_instance_;

inline constexpr CheckTokenStatusRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : token_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CheckTokenStatusRequest::CheckTokenStatusRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CheckTokenStatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CheckTokenStatusRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CheckTokenStatusRequestDefaultTypeInternal() {}
  union {
    CheckTokenStatusRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CheckTokenStatusRequestDefaultTypeInternal _CheckTokenStatusRequest_default_instance_;

inline constexpr BurnTokenResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BurnTokenResponse::BurnTokenResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BurnTokenResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BurnTokenResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BurnTokenResponseDefaultTypeInternal() {}
  union {
    BurnTokenResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BurnTokenResponseDefaultTypeInternal _BurnTokenResponse_default_instance_;

inline constexpr BurnTokenRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : token_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BurnTokenRequest::BurnTokenRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BurnTokenRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BurnTokenRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BurnTokenRequestDefaultTypeInternal() {}
  union {
    BurnTokenRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BurnTokenRequestDefaultTypeInternal _BurnTokenRequest_default_instance_;

inline constexpr AdjustTokenCapResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        adjusted_cap_{::uint64_t{0u}},
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AdjustTokenCapResponse::AdjustTokenCapResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AdjustTokenCapResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AdjustTokenCapResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AdjustTokenCapResponseDefaultTypeInternal() {}
  union {
    AdjustTokenCapResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AdjustTokenCapResponseDefaultTypeInternal _AdjustTokenCapResponse_default_instance_;

inline constexpr AdjustTokenCapRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : token_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        new_cap_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AdjustTokenCapRequest::AdjustTokenCapRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AdjustTokenCapRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AdjustTokenCapRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AdjustTokenCapRequestDefaultTypeInternal() {}
  union {
    AdjustTokenCapRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AdjustTokenCapRequestDefaultTypeInternal _AdjustTokenCapRequest_default_instance_;

inline constexpr SeigrToken::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : metadata_{},
        authorized_policies_{},
        token_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        owner_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        creation_date_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        balance_{::uint64_t{0u}},
        max_cap_{::uint64_t{0u}},
        cap_threshold_{::uint64_t{0u}},
        status_{static_cast< ::seigr::seigr_token::TokenStatus >(0)},
        eco_friendly_flag_{false},
        reward_accumulation_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SeigrToken::SeigrToken(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SeigrTokenDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SeigrTokenDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SeigrTokenDefaultTypeInternal() {}
  union {
    SeigrToken _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SeigrTokenDefaultTypeInternal _SeigrToken_default_instance_;

inline constexpr GetTransactionHistoryResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : transactions_{},
        token_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetTransactionHistoryResponse::GetTransactionHistoryResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetTransactionHistoryResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetTransactionHistoryResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetTransactionHistoryResponseDefaultTypeInternal() {}
  union {
    GetTransactionHistoryResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetTransactionHistoryResponseDefaultTypeInternal _GetTransactionHistoryResponse_default_instance_;
}  // namespace seigr_token
}  // namespace seigr
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_seigr_5ftoken_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_seigr_5ftoken_2eproto = nullptr;
const ::uint32_t
    TableStruct_seigr_5ftoken_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::SeigrToken_MetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::SeigrToken_MetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::SeigrToken_MetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::SeigrToken_MetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::SeigrToken, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::SeigrToken, _impl_.token_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::SeigrToken, _impl_.owner_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::SeigrToken, _impl_.balance_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::SeigrToken, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::SeigrToken, _impl_.max_cap_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::SeigrToken, _impl_.cap_threshold_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::SeigrToken, _impl_.creation_date_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::SeigrToken, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::SeigrToken, _impl_.eco_friendly_flag_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::SeigrToken, _impl_.reward_accumulation_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::SeigrToken, _impl_.authorized_policies_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::MintTokenRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::MintTokenRequest, _impl_.owner_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::MintTokenRequest, _impl_.amount_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::MintTokenResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::MintTokenResponse, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::MintTokenResponse, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::MintTokenResponse, _impl_.token_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::TransferTokenRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::TransferTokenRequest, _impl_.from_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::TransferTokenRequest, _impl_.to_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::TransferTokenRequest, _impl_.amount_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::TransferTokenRequest, _impl_.reference_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::TransferTokenResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::TransferTokenResponse, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::TransferTokenResponse, _impl_.message_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::CheckTokenStatusRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::CheckTokenStatusRequest, _impl_.token_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::CheckTokenStatusResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::CheckTokenStatusResponse, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::CheckTokenStatusResponse, _impl_.balance_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::CheckTokenStatusResponse, _impl_.max_cap_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::CheckTokenStatusResponse, _impl_.is_capped_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::CheckTokenStatusResponse, _impl_.surplus_amount_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::AdjustTokenCapRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::AdjustTokenCapRequest, _impl_.token_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::AdjustTokenCapRequest, _impl_.new_cap_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::AdjustTokenCapResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::AdjustTokenCapResponse, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::AdjustTokenCapResponse, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::AdjustTokenCapResponse, _impl_.adjusted_cap_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::DistributeSurplusRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::DistributeSurplusRequest, _impl_.token_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::DistributeSurplusRequest, _impl_.distribute_amount_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::DistributeSurplusResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::DistributeSurplusResponse, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::DistributeSurplusResponse, _impl_.distributed_amount_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::DistributeSurplusResponse, _impl_.message_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::BurnTokenRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::BurnTokenRequest, _impl_.token_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::BurnTokenResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::BurnTokenResponse, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::BurnTokenResponse, _impl_.message_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::GetTransactionHistoryRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::GetTransactionHistoryRequest, _impl_.token_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::GetTransactionHistoryRequest, _impl_.limit_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::GetTransactionHistoryRequest, _impl_.include_locked_transactions_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::GetTransactionHistoryResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::GetTransactionHistoryResponse, _impl_.token_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::GetTransactionHistoryResponse, _impl_.transactions_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::Transaction, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::Transaction, _impl_.transaction_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::Transaction, _impl_.from_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::Transaction, _impl_.to_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::Transaction, _impl_.amount_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::Transaction, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::seigr::seigr_token::Transaction, _impl_.type_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::seigr::seigr_token::SeigrToken_MetadataEntry_DoNotUse)},
        {12, -1, -1, sizeof(::seigr::seigr_token::SeigrToken)},
        {31, -1, -1, sizeof(::seigr::seigr_token::MintTokenRequest)},
        {41, -1, -1, sizeof(::seigr::seigr_token::MintTokenResponse)},
        {52, -1, -1, sizeof(::seigr::seigr_token::TransferTokenRequest)},
        {64, -1, -1, sizeof(::seigr::seigr_token::TransferTokenResponse)},
        {74, -1, -1, sizeof(::seigr::seigr_token::CheckTokenStatusRequest)},
        {83, -1, -1, sizeof(::seigr::seigr_token::CheckTokenStatusResponse)},
        {96, -1, -1, sizeof(::seigr::seigr_token::AdjustTokenCapRequest)},
        {106, -1, -1, sizeof(::seigr::seigr_token::AdjustTokenCapResponse)},
        {117, -1, -1, sizeof(::seigr::seigr_token::DistributeSurplusRequest)},
        {127, -1, -1, sizeof(::seigr::seigr_token::DistributeSurplusResponse)},
        {138, -1, -1, sizeof(::seigr::seigr_token::BurnTokenRequest)},
        {147, -1, -1, sizeof(::seigr::seigr_token::BurnTokenResponse)},
        {157, -1, -1, sizeof(::seigr::seigr_token::GetTransactionHistoryRequest)},
        {168, -1, -1, sizeof(::seigr::seigr_token::GetTransactionHistoryResponse)},
        {178, -1, -1, sizeof(::seigr::seigr_token::Transaction)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::seigr::seigr_token::_SeigrToken_MetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::seigr_token::_SeigrToken_default_instance_._instance,
    &::seigr::seigr_token::_MintTokenRequest_default_instance_._instance,
    &::seigr::seigr_token::_MintTokenResponse_default_instance_._instance,
    &::seigr::seigr_token::_TransferTokenRequest_default_instance_._instance,
    &::seigr::seigr_token::_TransferTokenResponse_default_instance_._instance,
    &::seigr::seigr_token::_CheckTokenStatusRequest_default_instance_._instance,
    &::seigr::seigr_token::_CheckTokenStatusResponse_default_instance_._instance,
    &::seigr::seigr_token::_AdjustTokenCapRequest_default_instance_._instance,
    &::seigr::seigr_token::_AdjustTokenCapResponse_default_instance_._instance,
    &::seigr::seigr_token::_DistributeSurplusRequest_default_instance_._instance,
    &::seigr::seigr_token::_DistributeSurplusResponse_default_instance_._instance,
    &::seigr::seigr_token::_BurnTokenRequest_default_instance_._instance,
    &::seigr::seigr_token::_BurnTokenResponse_default_instance_._instance,
    &::seigr::seigr_token::_GetTransactionHistoryRequest_default_instance_._instance,
    &::seigr::seigr_token::_GetTransactionHistoryResponse_default_instance_._instance,
    &::seigr::seigr_token::_Transaction_default_instance_._instance,
};
const char descriptor_table_protodef_seigr_5ftoken_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\021seigr_token.proto\022\021seigr.seigr_token\032\034"
    "cross_chain_operations.proto\"\365\002\n\nSeigrTo"
    "ken\022\020\n\010token_id\030\001 \001(\t\022\020\n\010owner_id\030\002 \001(\t\022"
    "\017\n\007balance\030\003 \001(\004\022.\n\006status\030\004 \001(\0162\036.seigr"
    ".seigr_token.TokenStatus\022\017\n\007max_cap\030\005 \001("
    "\004\022\025\n\rcap_threshold\030\006 \001(\004\022\025\n\rcreation_dat"
    "e\030\007 \001(\t\022=\n\010metadata\030\010 \003(\0132+.seigr.seigr_"
    "token.SeigrToken.MetadataEntry\022\031\n\021eco_fr"
    "iendly_flag\030\t \001(\010\022\033\n\023reward_accumulation"
    "\030\n \001(\004\022\033\n\023authorized_policies\030\013 \003(\t\032/\n\rM"
    "etadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t"
    ":\0028\001\"4\n\020MintTokenRequest\022\020\n\010owner_id\030\001 \001"
    "(\t\022\016\n\006amount\030\002 \001(\004\"G\n\021MintTokenResponse\022"
    "\017\n\007success\030\001 \001(\010\022\017\n\007message\030\002 \001(\t\022\020\n\010tok"
    "en_id\030\003 \001(\t\"\\\n\024TransferTokenRequest\022\017\n\007f"
    "rom_id\030\001 \001(\t\022\r\n\005to_id\030\002 \001(\t\022\016\n\006amount\030\003 "
    "\001(\004\022\024\n\014reference_id\030\004 \001(\t\"9\n\025TransferTok"
    "enResponse\022\017\n\007success\030\001 \001(\010\022\017\n\007message\030\002"
    " \001(\t\"+\n\027CheckTokenStatusRequest\022\020\n\010token"
    "_id\030\001 \001(\t\"\227\001\n\030CheckTokenStatusResponse\022."
    "\n\006status\030\001 \001(\0162\036.seigr.seigr_token.Token"
    "Status\022\017\n\007balance\030\002 \001(\004\022\017\n\007max_cap\030\003 \001(\004"
    "\022\021\n\tis_capped\030\004 \001(\010\022\026\n\016surplus_amount\030\005 "
    "\001(\004\":\n\025AdjustTokenCapRequest\022\020\n\010token_id"
    "\030\001 \001(\t\022\017\n\007new_cap\030\002 \001(\004\"P\n\026AdjustTokenCa"
    "pResponse\022\017\n\007success\030\001 \001(\010\022\017\n\007message\030\002 "
    "\001(\t\022\024\n\014adjusted_cap\030\003 \001(\004\"G\n\030DistributeS"
    "urplusRequest\022\020\n\010token_id\030\001 \001(\t\022\031\n\021distr"
    "ibute_amount\030\002 \001(\004\"Y\n\031DistributeSurplusR"
    "esponse\022\017\n\007success\030\001 \001(\010\022\032\n\022distributed_"
    "amount\030\002 \001(\004\022\017\n\007message\030\003 \001(\t\"$\n\020BurnTok"
    "enRequest\022\020\n\010token_id\030\001 \001(\t\"5\n\021BurnToken"
    "Response\022\017\n\007success\030\001 \001(\010\022\017\n\007message\030\002 \001"
    "(\t\"d\n\034GetTransactionHistoryRequest\022\020\n\010to"
    "ken_id\030\001 \001(\t\022\r\n\005limit\030\002 \001(\r\022#\n\033include_l"
    "ocked_transactions\030\003 \001(\010\"g\n\035GetTransacti"
    "onHistoryResponse\022\020\n\010token_id\030\001 \001(\t\0224\n\014t"
    "ransactions\030\002 \003(\0132\036.seigr.seigr_token.Tr"
    "ansaction\"\231\001\n\013Transaction\022\026\n\016transaction"
    "_id\030\001 \001(\004\022\017\n\007from_id\030\002 \001(\t\022\r\n\005to_id\030\003 \001("
    "\t\022\016\n\006amount\030\004 \001(\004\022\021\n\ttimestamp\030\005 \001(\t\022/\n\004"
    "type\030\006 \001(\0162!.seigr.crosschain.Transactio"
    "nType*\215\001\n\013TokenStatus\022\032\n\026TOKEN_STATUS_UN"
    "DEFINED\020\000\022\027\n\023TOKEN_STATUS_ACTIVE\020\001\022\027\n\023TO"
    "KEN_STATUS_CAPPED\020\002\022\027\n\023TOKEN_STATUS_LOCK"
    "ED\020\003\022\027\n\023TOKEN_STATUS_BURNED\020\0042\347\005\n\021SeigrT"
    "okenService\022V\n\tMintToken\022#.seigr.seigr_t"
    "oken.MintTokenRequest\032$.seigr.seigr_toke"
    "n.MintTokenResponse\022b\n\rTransferToken\022\'.s"
    "eigr.seigr_token.TransferTokenRequest\032(."
    "seigr.seigr_token.TransferTokenResponse\022"
    "k\n\020CheckTokenStatus\022*.seigr.seigr_token."
    "CheckTokenStatusRequest\032+.seigr.seigr_to"
    "ken.CheckTokenStatusResponse\022e\n\016AdjustTo"
    "kenCap\022(.seigr.seigr_token.AdjustTokenCa"
    "pRequest\032).seigr.seigr_token.AdjustToken"
    "CapResponse\022n\n\021DistributeSurplus\022+.seigr"
    ".seigr_token.DistributeSurplusRequest\032,."
    "seigr.seigr_token.DistributeSurplusRespo"
    "nse\022V\n\tBurnToken\022#.seigr.seigr_token.Bur"
    "nTokenRequest\032$.seigr.seigr_token.BurnTo"
    "kenResponse\022z\n\025GetTransactionHistory\022/.s"
    "eigr.seigr_token.GetTransactionHistoryRe"
    "quest\0320.seigr.seigr_token.GetTransaction"
    "HistoryResponseb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_seigr_5ftoken_2eproto_deps[1] =
    {
        &::descriptor_table_cross_5fchain_5foperations_2eproto,
};
static ::absl::once_flag descriptor_table_seigr_5ftoken_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_seigr_5ftoken_2eproto = {
    false,
    false,
    2583,
    descriptor_table_protodef_seigr_5ftoken_2eproto,
    "seigr_token.proto",
    &descriptor_table_seigr_5ftoken_2eproto_once,
    descriptor_table_seigr_5ftoken_2eproto_deps,
    1,
    17,
    schemas,
    file_default_instances,
    TableStruct_seigr_5ftoken_2eproto::offsets,
    file_level_enum_descriptors_seigr_5ftoken_2eproto,
    file_level_service_descriptors_seigr_5ftoken_2eproto,
};
namespace seigr {
namespace seigr_token {
const ::google::protobuf::EnumDescriptor* TokenStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_seigr_5ftoken_2eproto);
  return file_level_enum_descriptors_seigr_5ftoken_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t TokenStatus_internal_data_[] = {
    327680u, 0u, };
bool TokenStatus_IsValid(int value) {
  return 0 <= value && value <= 4;
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              SeigrToken_MetadataEntry_DoNotUse::SeigrToken_MetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              SeigrToken_MetadataEntry_DoNotUse::SeigrToken_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              SeigrToken_MetadataEntry_DoNotUse::SeigrToken_MetadataEntry_DoNotUse() : SuperType() {}
              SeigrToken_MetadataEntry_DoNotUse::SeigrToken_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* SeigrToken_MetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) SeigrToken_MetadataEntry_DoNotUse(arena);
              }
              constexpr auto SeigrToken_MetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SeigrToken_MetadataEntry_DoNotUse),
                                                          alignof(SeigrToken_MetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull SeigrToken_MetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_SeigrToken_MetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &SeigrToken_MetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<SeigrToken_MetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &SeigrToken_MetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &SeigrToken_MetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(SeigrToken_MetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &SeigrToken_MetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_seigr_5ftoken_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* SeigrToken_MetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 59, 2> SeigrToken_MetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SeigrToken_MetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::seigr_token::SeigrToken_MetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SeigrToken_MetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SeigrToken_MetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(SeigrToken_MetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(SeigrToken_MetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\52\3\5\0\0\0\0\0"
    "seigr.seigr_token.SeigrToken.MetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class SeigrToken::_Internal {
 public:
};

SeigrToken::SeigrToken(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.seigr_token.SeigrToken)
}
inline PROTOBUF_NDEBUG_INLINE SeigrToken::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::seigr_token::SeigrToken& from_msg)
      : metadata_{visibility, arena, from.metadata_},
        authorized_policies_{visibility, arena, from.authorized_policies_},
        token_id_(arena, from.token_id_),
        owner_id_(arena, from.owner_id_),
        creation_date_(arena, from.creation_date_),
        _cached_size_{0} {}

SeigrToken::SeigrToken(
    ::google::protobuf::Arena* arena,
    const SeigrToken& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SeigrToken* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, balance_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, balance_),
           offsetof(Impl_, reward_accumulation_) -
               offsetof(Impl_, balance_) +
               sizeof(Impl_::reward_accumulation_));

  // @@protoc_insertion_point(copy_constructor:seigr.seigr_token.SeigrToken)
}
inline PROTOBUF_NDEBUG_INLINE SeigrToken::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : metadata_{visibility, arena},
        authorized_policies_{visibility, arena},
        token_id_(arena),
        owner_id_(arena),
        creation_date_(arena),
        _cached_size_{0} {}

inline void SeigrToken::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, balance_),
           0,
           offsetof(Impl_, reward_accumulation_) -
               offsetof(Impl_, balance_) +
               sizeof(Impl_::reward_accumulation_));
}
SeigrToken::~SeigrToken() {
  // @@protoc_insertion_point(destructor:seigr.seigr_token.SeigrToken)
  SharedDtor(*this);
}
inline void SeigrToken::SharedDtor(MessageLite& self) {
  SeigrToken& this_ = static_cast<SeigrToken&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.token_id_.Destroy();
  this_._impl_.owner_id_.Destroy();
  this_._impl_.creation_date_.Destroy();
  this_._impl_.~Impl_();
}

inline void* SeigrToken::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SeigrToken(arena);
}
constexpr auto SeigrToken::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SeigrToken, _impl_.metadata_) +
          decltype(SeigrToken::_impl_.metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SeigrToken, _impl_.metadata_) +
          decltype(SeigrToken::_impl_.metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SeigrToken, _impl_.authorized_policies_) +
          decltype(SeigrToken::_impl_.authorized_policies_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(SeigrToken), alignof(SeigrToken), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SeigrToken::PlacementNew_,
                                 sizeof(SeigrToken),
                                 alignof(SeigrToken));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SeigrToken::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SeigrToken_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SeigrToken::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SeigrToken>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SeigrToken::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SeigrToken>(), &SeigrToken::ByteSizeLong,
            &SeigrToken::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SeigrToken, _impl_._cached_size_),
        false,
    },
    &SeigrToken::kDescriptorMethods,
    &descriptor_table_seigr_5ftoken_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SeigrToken::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 1, 101, 2> SeigrToken::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::seigr_token::SeigrToken>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string token_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SeigrToken, _impl_.token_id_)}},
    // string owner_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SeigrToken, _impl_.owner_id_)}},
    // uint64 balance = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SeigrToken, _impl_.balance_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(SeigrToken, _impl_.balance_)}},
    // .seigr.seigr_token.TokenStatus status = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SeigrToken, _impl_.status_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(SeigrToken, _impl_.status_)}},
    // uint64 max_cap = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SeigrToken, _impl_.max_cap_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(SeigrToken, _impl_.max_cap_)}},
    // uint64 cap_threshold = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SeigrToken, _impl_.cap_threshold_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(SeigrToken, _impl_.cap_threshold_)}},
    // string creation_date = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(SeigrToken, _impl_.creation_date_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // bool eco_friendly_flag = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SeigrToken, _impl_.eco_friendly_flag_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(SeigrToken, _impl_.eco_friendly_flag_)}},
    // uint64 reward_accumulation = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SeigrToken, _impl_.reward_accumulation_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(SeigrToken, _impl_.reward_accumulation_)}},
    // repeated string authorized_policies = 11;
    {::_pbi::TcParser::FastUR1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(SeigrToken, _impl_.authorized_policies_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string token_id = 1;
    {PROTOBUF_FIELD_OFFSET(SeigrToken, _impl_.token_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string owner_id = 2;
    {PROTOBUF_FIELD_OFFSET(SeigrToken, _impl_.owner_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 balance = 3;
    {PROTOBUF_FIELD_OFFSET(SeigrToken, _impl_.balance_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .seigr.seigr_token.TokenStatus status = 4;
    {PROTOBUF_FIELD_OFFSET(SeigrToken, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // uint64 max_cap = 5;
    {PROTOBUF_FIELD_OFFSET(SeigrToken, _impl_.max_cap_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 cap_threshold = 6;
    {PROTOBUF_FIELD_OFFSET(SeigrToken, _impl_.cap_threshold_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string creation_date = 7;
    {PROTOBUF_FIELD_OFFSET(SeigrToken, _impl_.creation_date_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> metadata = 8;
    {PROTOBUF_FIELD_OFFSET(SeigrToken, _impl_.metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // bool eco_friendly_flag = 9;
    {PROTOBUF_FIELD_OFFSET(SeigrToken, _impl_.eco_friendly_flag_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // uint64 reward_accumulation = 10;
    {PROTOBUF_FIELD_OFFSET(SeigrToken, _impl_.reward_accumulation_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // repeated string authorized_policies = 11;
    {PROTOBUF_FIELD_OFFSET(SeigrToken, _impl_.authorized_policies_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(SeigrToken()._impl_.metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\34\10\10\0\0\0\0\15\10\0\0\23\0\0\0\0"
    "seigr.seigr_token.SeigrToken"
    "token_id"
    "owner_id"
    "creation_date"
    "metadata"
    "authorized_policies"
  }},
};

PROTOBUF_NOINLINE void SeigrToken::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.seigr_token.SeigrToken)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.metadata_.Clear();
  _impl_.authorized_policies_.Clear();
  _impl_.token_id_.ClearToEmpty();
  _impl_.owner_id_.ClearToEmpty();
  _impl_.creation_date_.ClearToEmpty();
  ::memset(&_impl_.balance_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.reward_accumulation_) -
      reinterpret_cast<char*>(&_impl_.balance_)) + sizeof(_impl_.reward_accumulation_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SeigrToken::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SeigrToken& this_ = static_cast<const SeigrToken&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SeigrToken::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SeigrToken& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.seigr_token.SeigrToken)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string token_id = 1;
          if (!this_._internal_token_id().empty()) {
            const std::string& _s = this_._internal_token_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_token.SeigrToken.token_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string owner_id = 2;
          if (!this_._internal_owner_id().empty()) {
            const std::string& _s = this_._internal_owner_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_token.SeigrToken.owner_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // uint64 balance = 3;
          if (this_._internal_balance() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                3, this_._internal_balance(), target);
          }

          // .seigr.seigr_token.TokenStatus status = 4;
          if (this_._internal_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                4, this_._internal_status(), target);
          }

          // uint64 max_cap = 5;
          if (this_._internal_max_cap() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                5, this_._internal_max_cap(), target);
          }

          // uint64 cap_threshold = 6;
          if (this_._internal_cap_threshold() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                6, this_._internal_cap_threshold(), target);
          }

          // string creation_date = 7;
          if (!this_._internal_creation_date().empty()) {
            const std::string& _s = this_._internal_creation_date();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_token.SeigrToken.creation_date");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // map<string, string> metadata = 8;
          if (!this_._internal_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    8, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_token.SeigrToken.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_token.SeigrToken.metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    8, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_token.SeigrToken.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_token.SeigrToken.metadata");
              }
            }
          }

          // bool eco_friendly_flag = 9;
          if (this_._internal_eco_friendly_flag() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                9, this_._internal_eco_friendly_flag(), target);
          }

          // uint64 reward_accumulation = 10;
          if (this_._internal_reward_accumulation() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                10, this_._internal_reward_accumulation(), target);
          }

          // repeated string authorized_policies = 11;
          for (int i = 0, n = this_._internal_authorized_policies_size(); i < n; ++i) {
            const auto& s = this_._internal_authorized_policies().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_token.SeigrToken.authorized_policies");
            target = stream->WriteString(11, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.seigr_token.SeigrToken)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SeigrToken::ByteSizeLong(const MessageLite& base) {
          const SeigrToken& this_ = static_cast<const SeigrToken&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SeigrToken::ByteSizeLong() const {
          const SeigrToken& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.seigr_token.SeigrToken)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> metadata = 8;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_metadata_size());
              for (const auto& entry : this_._internal_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // repeated string authorized_policies = 11;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_authorized_policies().size());
              for (int i = 0, n = this_._internal_authorized_policies().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_authorized_policies().Get(i));
              }
            }
          }
           {
            // string token_id = 1;
            if (!this_._internal_token_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_token_id());
            }
            // string owner_id = 2;
            if (!this_._internal_owner_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_owner_id());
            }
            // string creation_date = 7;
            if (!this_._internal_creation_date().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_creation_date());
            }
            // uint64 balance = 3;
            if (this_._internal_balance() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_balance());
            }
            // uint64 max_cap = 5;
            if (this_._internal_max_cap() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_max_cap());
            }
            // uint64 cap_threshold = 6;
            if (this_._internal_cap_threshold() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_cap_threshold());
            }
            // .seigr.seigr_token.TokenStatus status = 4;
            if (this_._internal_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
            }
            // bool eco_friendly_flag = 9;
            if (this_._internal_eco_friendly_flag() != 0) {
              total_size += 2;
            }
            // uint64 reward_accumulation = 10;
            if (this_._internal_reward_accumulation() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_reward_accumulation());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SeigrToken::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SeigrToken*>(&to_msg);
  auto& from = static_cast<const SeigrToken&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.seigr_token.SeigrToken)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.metadata_.MergeFrom(from._impl_.metadata_);
  _this->_internal_mutable_authorized_policies()->MergeFrom(from._internal_authorized_policies());
  if (!from._internal_token_id().empty()) {
    _this->_internal_set_token_id(from._internal_token_id());
  }
  if (!from._internal_owner_id().empty()) {
    _this->_internal_set_owner_id(from._internal_owner_id());
  }
  if (!from._internal_creation_date().empty()) {
    _this->_internal_set_creation_date(from._internal_creation_date());
  }
  if (from._internal_balance() != 0) {
    _this->_impl_.balance_ = from._impl_.balance_;
  }
  if (from._internal_max_cap() != 0) {
    _this->_impl_.max_cap_ = from._impl_.max_cap_;
  }
  if (from._internal_cap_threshold() != 0) {
    _this->_impl_.cap_threshold_ = from._impl_.cap_threshold_;
  }
  if (from._internal_status() != 0) {
    _this->_impl_.status_ = from._impl_.status_;
  }
  if (from._internal_eco_friendly_flag() != 0) {
    _this->_impl_.eco_friendly_flag_ = from._impl_.eco_friendly_flag_;
  }
  if (from._internal_reward_accumulation() != 0) {
    _this->_impl_.reward_accumulation_ = from._impl_.reward_accumulation_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SeigrToken::CopyFrom(const SeigrToken& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.seigr_token.SeigrToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SeigrToken::InternalSwap(SeigrToken* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.metadata_.InternalSwap(&other->_impl_.metadata_);
  _impl_.authorized_policies_.InternalSwap(&other->_impl_.authorized_policies_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.token_id_, &other->_impl_.token_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.owner_id_, &other->_impl_.owner_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.creation_date_, &other->_impl_.creation_date_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SeigrToken, _impl_.reward_accumulation_)
      + sizeof(SeigrToken::_impl_.reward_accumulation_)
      - PROTOBUF_FIELD_OFFSET(SeigrToken, _impl_.balance_)>(
          reinterpret_cast<char*>(&_impl_.balance_),
          reinterpret_cast<char*>(&other->_impl_.balance_));
}

::google::protobuf::Metadata SeigrToken::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MintTokenRequest::_Internal {
 public:
};

MintTokenRequest::MintTokenRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.seigr_token.MintTokenRequest)
}
inline PROTOBUF_NDEBUG_INLINE MintTokenRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::seigr_token::MintTokenRequest& from_msg)
      : owner_id_(arena, from.owner_id_),
        _cached_size_{0} {}

MintTokenRequest::MintTokenRequest(
    ::google::protobuf::Arena* arena,
    const MintTokenRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MintTokenRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.amount_ = from._impl_.amount_;

  // @@protoc_insertion_point(copy_constructor:seigr.seigr_token.MintTokenRequest)
}
inline PROTOBUF_NDEBUG_INLINE MintTokenRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : owner_id_(arena),
        _cached_size_{0} {}

inline void MintTokenRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.amount_ = {};
}
MintTokenRequest::~MintTokenRequest() {
  // @@protoc_insertion_point(destructor:seigr.seigr_token.MintTokenRequest)
  SharedDtor(*this);
}
inline void MintTokenRequest::SharedDtor(MessageLite& self) {
  MintTokenRequest& this_ = static_cast<MintTokenRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.owner_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* MintTokenRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MintTokenRequest(arena);
}
constexpr auto MintTokenRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(MintTokenRequest),
                                            alignof(MintTokenRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MintTokenRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MintTokenRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MintTokenRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MintTokenRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MintTokenRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MintTokenRequest>(), &MintTokenRequest::ByteSizeLong,
            &MintTokenRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MintTokenRequest, _impl_._cached_size_),
        false,
    },
    &MintTokenRequest::kDescriptorMethods,
    &descriptor_table_seigr_5ftoken_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MintTokenRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 51, 2> MintTokenRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::seigr_token::MintTokenRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 amount = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(MintTokenRequest, _impl_.amount_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(MintTokenRequest, _impl_.amount_)}},
    // string owner_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MintTokenRequest, _impl_.owner_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string owner_id = 1;
    {PROTOBUF_FIELD_OFFSET(MintTokenRequest, _impl_.owner_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 amount = 2;
    {PROTOBUF_FIELD_OFFSET(MintTokenRequest, _impl_.amount_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
    "\42\10\0\0\0\0\0\0"
    "seigr.seigr_token.MintTokenRequest"
    "owner_id"
  }},
};

PROTOBUF_NOINLINE void MintTokenRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.seigr_token.MintTokenRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.owner_id_.ClearToEmpty();
  _impl_.amount_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MintTokenRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MintTokenRequest& this_ = static_cast<const MintTokenRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MintTokenRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MintTokenRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.seigr_token.MintTokenRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string owner_id = 1;
          if (!this_._internal_owner_id().empty()) {
            const std::string& _s = this_._internal_owner_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_token.MintTokenRequest.owner_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // uint64 amount = 2;
          if (this_._internal_amount() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_amount(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.seigr_token.MintTokenRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MintTokenRequest::ByteSizeLong(const MessageLite& base) {
          const MintTokenRequest& this_ = static_cast<const MintTokenRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MintTokenRequest::ByteSizeLong() const {
          const MintTokenRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.seigr_token.MintTokenRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string owner_id = 1;
            if (!this_._internal_owner_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_owner_id());
            }
            // uint64 amount = 2;
            if (this_._internal_amount() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_amount());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MintTokenRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MintTokenRequest*>(&to_msg);
  auto& from = static_cast<const MintTokenRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.seigr_token.MintTokenRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_owner_id().empty()) {
    _this->_internal_set_owner_id(from._internal_owner_id());
  }
  if (from._internal_amount() != 0) {
    _this->_impl_.amount_ = from._impl_.amount_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MintTokenRequest::CopyFrom(const MintTokenRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.seigr_token.MintTokenRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MintTokenRequest::InternalSwap(MintTokenRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.owner_id_, &other->_impl_.owner_id_, arena);
        swap(_impl_.amount_, other->_impl_.amount_);
}

::google::protobuf::Metadata MintTokenRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MintTokenResponse::_Internal {
 public:
};

MintTokenResponse::MintTokenResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.seigr_token.MintTokenResponse)
}
inline PROTOBUF_NDEBUG_INLINE MintTokenResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::seigr_token::MintTokenResponse& from_msg)
      : message_(arena, from.message_),
        token_id_(arena, from.token_id_),
        _cached_size_{0} {}

MintTokenResponse::MintTokenResponse(
    ::google::protobuf::Arena* arena,
    const MintTokenResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MintTokenResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:seigr.seigr_token.MintTokenResponse)
}
inline PROTOBUF_NDEBUG_INLINE MintTokenResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_(arena),
        token_id_(arena),
        _cached_size_{0} {}

inline void MintTokenResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
MintTokenResponse::~MintTokenResponse() {
  // @@protoc_insertion_point(destructor:seigr.seigr_token.MintTokenResponse)
  SharedDtor(*this);
}
inline void MintTokenResponse::SharedDtor(MessageLite& self) {
  MintTokenResponse& this_ = static_cast<MintTokenResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  this_._impl_.token_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* MintTokenResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MintTokenResponse(arena);
}
constexpr auto MintTokenResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(MintTokenResponse),
                                            alignof(MintTokenResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MintTokenResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MintTokenResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MintTokenResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MintTokenResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MintTokenResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MintTokenResponse>(), &MintTokenResponse::ByteSizeLong,
            &MintTokenResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MintTokenResponse, _impl_._cached_size_),
        false,
    },
    &MintTokenResponse::kDescriptorMethods,
    &descriptor_table_seigr_5ftoken_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MintTokenResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 59, 2> MintTokenResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::seigr_token::MintTokenResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(MintTokenResponse, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MintTokenResponse, _impl_.success_)}},
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(MintTokenResponse, _impl_.message_)}},
    // string token_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(MintTokenResponse, _impl_.token_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(MintTokenResponse, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(MintTokenResponse, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string token_id = 3;
    {PROTOBUF_FIELD_OFFSET(MintTokenResponse, _impl_.token_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\43\0\7\10\0\0\0\0"
    "seigr.seigr_token.MintTokenResponse"
    "message"
    "token_id"
  }},
};

PROTOBUF_NOINLINE void MintTokenResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.seigr_token.MintTokenResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _impl_.token_id_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MintTokenResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MintTokenResponse& this_ = static_cast<const MintTokenResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MintTokenResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MintTokenResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.seigr_token.MintTokenResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool success = 1;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_success(), target);
          }

          // string message = 2;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_token.MintTokenResponse.message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string token_id = 3;
          if (!this_._internal_token_id().empty()) {
            const std::string& _s = this_._internal_token_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_token.MintTokenResponse.token_id");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.seigr_token.MintTokenResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MintTokenResponse::ByteSizeLong(const MessageLite& base) {
          const MintTokenResponse& this_ = static_cast<const MintTokenResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MintTokenResponse::ByteSizeLong() const {
          const MintTokenResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.seigr_token.MintTokenResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string message = 2;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
            // string token_id = 3;
            if (!this_._internal_token_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_token_id());
            }
            // bool success = 1;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MintTokenResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MintTokenResponse*>(&to_msg);
  auto& from = static_cast<const MintTokenResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.seigr_token.MintTokenResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (!from._internal_token_id().empty()) {
    _this->_internal_set_token_id(from._internal_token_id());
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MintTokenResponse::CopyFrom(const MintTokenResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.seigr_token.MintTokenResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MintTokenResponse::InternalSwap(MintTokenResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.token_id_, &other->_impl_.token_id_, arena);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata MintTokenResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TransferTokenRequest::_Internal {
 public:
};

TransferTokenRequest::TransferTokenRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.seigr_token.TransferTokenRequest)
}
inline PROTOBUF_NDEBUG_INLINE TransferTokenRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::seigr_token::TransferTokenRequest& from_msg)
      : from_id_(arena, from.from_id_),
        to_id_(arena, from.to_id_),
        reference_id_(arena, from.reference_id_),
        _cached_size_{0} {}

TransferTokenRequest::TransferTokenRequest(
    ::google::protobuf::Arena* arena,
    const TransferTokenRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TransferTokenRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.amount_ = from._impl_.amount_;

  // @@protoc_insertion_point(copy_constructor:seigr.seigr_token.TransferTokenRequest)
}
inline PROTOBUF_NDEBUG_INLINE TransferTokenRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : from_id_(arena),
        to_id_(arena),
        reference_id_(arena),
        _cached_size_{0} {}

inline void TransferTokenRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.amount_ = {};
}
TransferTokenRequest::~TransferTokenRequest() {
  // @@protoc_insertion_point(destructor:seigr.seigr_token.TransferTokenRequest)
  SharedDtor(*this);
}
inline void TransferTokenRequest::SharedDtor(MessageLite& self) {
  TransferTokenRequest& this_ = static_cast<TransferTokenRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.from_id_.Destroy();
  this_._impl_.to_id_.Destroy();
  this_._impl_.reference_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* TransferTokenRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TransferTokenRequest(arena);
}
constexpr auto TransferTokenRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TransferTokenRequest),
                                            alignof(TransferTokenRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TransferTokenRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TransferTokenRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TransferTokenRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TransferTokenRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TransferTokenRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TransferTokenRequest>(), &TransferTokenRequest::ByteSizeLong,
            &TransferTokenRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TransferTokenRequest, _impl_._cached_size_),
        false,
    },
    &TransferTokenRequest::kDescriptorMethods,
    &descriptor_table_seigr_5ftoken_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TransferTokenRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 71, 2> TransferTokenRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::seigr_token::TransferTokenRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string reference_id = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(TransferTokenRequest, _impl_.reference_id_)}},
    // string from_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TransferTokenRequest, _impl_.from_id_)}},
    // string to_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(TransferTokenRequest, _impl_.to_id_)}},
    // uint64 amount = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TransferTokenRequest, _impl_.amount_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(TransferTokenRequest, _impl_.amount_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string from_id = 1;
    {PROTOBUF_FIELD_OFFSET(TransferTokenRequest, _impl_.from_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string to_id = 2;
    {PROTOBUF_FIELD_OFFSET(TransferTokenRequest, _impl_.to_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 amount = 3;
    {PROTOBUF_FIELD_OFFSET(TransferTokenRequest, _impl_.amount_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string reference_id = 4;
    {PROTOBUF_FIELD_OFFSET(TransferTokenRequest, _impl_.reference_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\46\7\5\0\14\0\0\0"
    "seigr.seigr_token.TransferTokenRequest"
    "from_id"
    "to_id"
    "reference_id"
  }},
};

PROTOBUF_NOINLINE void TransferTokenRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.seigr_token.TransferTokenRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.from_id_.ClearToEmpty();
  _impl_.to_id_.ClearToEmpty();
  _impl_.reference_id_.ClearToEmpty();
  _impl_.amount_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TransferTokenRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TransferTokenRequest& this_ = static_cast<const TransferTokenRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TransferTokenRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TransferTokenRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.seigr_token.TransferTokenRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string from_id = 1;
          if (!this_._internal_from_id().empty()) {
            const std::string& _s = this_._internal_from_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_token.TransferTokenRequest.from_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string to_id = 2;
          if (!this_._internal_to_id().empty()) {
            const std::string& _s = this_._internal_to_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_token.TransferTokenRequest.to_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // uint64 amount = 3;
          if (this_._internal_amount() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                3, this_._internal_amount(), target);
          }

          // string reference_id = 4;
          if (!this_._internal_reference_id().empty()) {
            const std::string& _s = this_._internal_reference_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_token.TransferTokenRequest.reference_id");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.seigr_token.TransferTokenRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TransferTokenRequest::ByteSizeLong(const MessageLite& base) {
          const TransferTokenRequest& this_ = static_cast<const TransferTokenRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TransferTokenRequest::ByteSizeLong() const {
          const TransferTokenRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.seigr_token.TransferTokenRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string from_id = 1;
            if (!this_._internal_from_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_from_id());
            }
            // string to_id = 2;
            if (!this_._internal_to_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_to_id());
            }
            // string reference_id = 4;
            if (!this_._internal_reference_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_reference_id());
            }
            // uint64 amount = 3;
            if (this_._internal_amount() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_amount());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TransferTokenRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TransferTokenRequest*>(&to_msg);
  auto& from = static_cast<const TransferTokenRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.seigr_token.TransferTokenRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_from_id().empty()) {
    _this->_internal_set_from_id(from._internal_from_id());
  }
  if (!from._internal_to_id().empty()) {
    _this->_internal_set_to_id(from._internal_to_id());
  }
  if (!from._internal_reference_id().empty()) {
    _this->_internal_set_reference_id(from._internal_reference_id());
  }
  if (from._internal_amount() != 0) {
    _this->_impl_.amount_ = from._impl_.amount_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TransferTokenRequest::CopyFrom(const TransferTokenRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.seigr_token.TransferTokenRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TransferTokenRequest::InternalSwap(TransferTokenRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.from_id_, &other->_impl_.from_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.to_id_, &other->_impl_.to_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reference_id_, &other->_impl_.reference_id_, arena);
        swap(_impl_.amount_, other->_impl_.amount_);
}

::google::protobuf::Metadata TransferTokenRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TransferTokenResponse::_Internal {
 public:
};

TransferTokenResponse::TransferTokenResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.seigr_token.TransferTokenResponse)
}
inline PROTOBUF_NDEBUG_INLINE TransferTokenResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::seigr_token::TransferTokenResponse& from_msg)
      : message_(arena, from.message_),
        _cached_size_{0} {}

TransferTokenResponse::TransferTokenResponse(
    ::google::protobuf::Arena* arena,
    const TransferTokenResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TransferTokenResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:seigr.seigr_token.TransferTokenResponse)
}
inline PROTOBUF_NDEBUG_INLINE TransferTokenResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_(arena),
        _cached_size_{0} {}

inline void TransferTokenResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
TransferTokenResponse::~TransferTokenResponse() {
  // @@protoc_insertion_point(destructor:seigr.seigr_token.TransferTokenResponse)
  SharedDtor(*this);
}
inline void TransferTokenResponse::SharedDtor(MessageLite& self) {
  TransferTokenResponse& this_ = static_cast<TransferTokenResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* TransferTokenResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TransferTokenResponse(arena);
}
constexpr auto TransferTokenResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TransferTokenResponse),
                                            alignof(TransferTokenResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TransferTokenResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TransferTokenResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TransferTokenResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TransferTokenResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TransferTokenResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TransferTokenResponse>(), &TransferTokenResponse::ByteSizeLong,
            &TransferTokenResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TransferTokenResponse, _impl_._cached_size_),
        false,
    },
    &TransferTokenResponse::kDescriptorMethods,
    &descriptor_table_seigr_5ftoken_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TransferTokenResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 55, 2> TransferTokenResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::seigr_token::TransferTokenResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(TransferTokenResponse, _impl_.message_)}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TransferTokenResponse, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(TransferTokenResponse, _impl_.success_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(TransferTokenResponse, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(TransferTokenResponse, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\47\0\7\0\0\0\0\0"
    "seigr.seigr_token.TransferTokenResponse"
    "message"
  }},
};

PROTOBUF_NOINLINE void TransferTokenResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.seigr_token.TransferTokenResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TransferTokenResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TransferTokenResponse& this_ = static_cast<const TransferTokenResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TransferTokenResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TransferTokenResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.seigr_token.TransferTokenResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool success = 1;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_success(), target);
          }

          // string message = 2;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_token.TransferTokenResponse.message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.seigr_token.TransferTokenResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TransferTokenResponse::ByteSizeLong(const MessageLite& base) {
          const TransferTokenResponse& this_ = static_cast<const TransferTokenResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TransferTokenResponse::ByteSizeLong() const {
          const TransferTokenResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.seigr_token.TransferTokenResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string message = 2;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
            // bool success = 1;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TransferTokenResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TransferTokenResponse*>(&to_msg);
  auto& from = static_cast<const TransferTokenResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.seigr_token.TransferTokenResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TransferTokenResponse::CopyFrom(const TransferTokenResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.seigr_token.TransferTokenResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TransferTokenResponse::InternalSwap(TransferTokenResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata TransferTokenResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CheckTokenStatusRequest::_Internal {
 public:
};

CheckTokenStatusRequest::CheckTokenStatusRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.seigr_token.CheckTokenStatusRequest)
}
inline PROTOBUF_NDEBUG_INLINE CheckTokenStatusRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::seigr_token::CheckTokenStatusRequest& from_msg)
      : token_id_(arena, from.token_id_),
        _cached_size_{0} {}

CheckTokenStatusRequest::CheckTokenStatusRequest(
    ::google::protobuf::Arena* arena,
    const CheckTokenStatusRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CheckTokenStatusRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:seigr.seigr_token.CheckTokenStatusRequest)
}
inline PROTOBUF_NDEBUG_INLINE CheckTokenStatusRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : token_id_(arena),
        _cached_size_{0} {}

inline void CheckTokenStatusRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CheckTokenStatusRequest::~CheckTokenStatusRequest() {
  // @@protoc_insertion_point(destructor:seigr.seigr_token.CheckTokenStatusRequest)
  SharedDtor(*this);
}
inline void CheckTokenStatusRequest::SharedDtor(MessageLite& self) {
  CheckTokenStatusRequest& this_ = static_cast<CheckTokenStatusRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.token_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* CheckTokenStatusRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CheckTokenStatusRequest(arena);
}
constexpr auto CheckTokenStatusRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CheckTokenStatusRequest),
                                            alignof(CheckTokenStatusRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CheckTokenStatusRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CheckTokenStatusRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CheckTokenStatusRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CheckTokenStatusRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CheckTokenStatusRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CheckTokenStatusRequest>(), &CheckTokenStatusRequest::ByteSizeLong,
            &CheckTokenStatusRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CheckTokenStatusRequest, _impl_._cached_size_),
        false,
    },
    &CheckTokenStatusRequest::kDescriptorMethods,
    &descriptor_table_seigr_5ftoken_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CheckTokenStatusRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 58, 2> CheckTokenStatusRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::seigr_token::CheckTokenStatusRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string token_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CheckTokenStatusRequest, _impl_.token_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string token_id = 1;
    {PROTOBUF_FIELD_OFFSET(CheckTokenStatusRequest, _impl_.token_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\51\10\0\0\0\0\0\0"
    "seigr.seigr_token.CheckTokenStatusRequest"
    "token_id"
  }},
};

PROTOBUF_NOINLINE void CheckTokenStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.seigr_token.CheckTokenStatusRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.token_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CheckTokenStatusRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CheckTokenStatusRequest& this_ = static_cast<const CheckTokenStatusRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CheckTokenStatusRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CheckTokenStatusRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.seigr_token.CheckTokenStatusRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string token_id = 1;
          if (!this_._internal_token_id().empty()) {
            const std::string& _s = this_._internal_token_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_token.CheckTokenStatusRequest.token_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.seigr_token.CheckTokenStatusRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CheckTokenStatusRequest::ByteSizeLong(const MessageLite& base) {
          const CheckTokenStatusRequest& this_ = static_cast<const CheckTokenStatusRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CheckTokenStatusRequest::ByteSizeLong() const {
          const CheckTokenStatusRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.seigr_token.CheckTokenStatusRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string token_id = 1;
            if (!this_._internal_token_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_token_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CheckTokenStatusRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CheckTokenStatusRequest*>(&to_msg);
  auto& from = static_cast<const CheckTokenStatusRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.seigr_token.CheckTokenStatusRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_token_id().empty()) {
    _this->_internal_set_token_id(from._internal_token_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CheckTokenStatusRequest::CopyFrom(const CheckTokenStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.seigr_token.CheckTokenStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CheckTokenStatusRequest::InternalSwap(CheckTokenStatusRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.token_id_, &other->_impl_.token_id_, arena);
}

::google::protobuf::Metadata CheckTokenStatusRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CheckTokenStatusResponse::_Internal {
 public:
};

CheckTokenStatusResponse::CheckTokenStatusResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.seigr_token.CheckTokenStatusResponse)
}
CheckTokenStatusResponse::CheckTokenStatusResponse(
    ::google::protobuf::Arena* arena, const CheckTokenStatusResponse& from)
    : CheckTokenStatusResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE CheckTokenStatusResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CheckTokenStatusResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, balance_),
           0,
           offsetof(Impl_, surplus_amount_) -
               offsetof(Impl_, balance_) +
               sizeof(Impl_::surplus_amount_));
}
CheckTokenStatusResponse::~CheckTokenStatusResponse() {
  // @@protoc_insertion_point(destructor:seigr.seigr_token.CheckTokenStatusResponse)
  SharedDtor(*this);
}
inline void CheckTokenStatusResponse::SharedDtor(MessageLite& self) {
  CheckTokenStatusResponse& this_ = static_cast<CheckTokenStatusResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* CheckTokenStatusResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CheckTokenStatusResponse(arena);
}
constexpr auto CheckTokenStatusResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CheckTokenStatusResponse),
                                            alignof(CheckTokenStatusResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CheckTokenStatusResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CheckTokenStatusResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CheckTokenStatusResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CheckTokenStatusResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CheckTokenStatusResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CheckTokenStatusResponse>(), &CheckTokenStatusResponse::ByteSizeLong,
            &CheckTokenStatusResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CheckTokenStatusResponse, _impl_._cached_size_),
        false,
    },
    &CheckTokenStatusResponse::kDescriptorMethods,
    &descriptor_table_seigr_5ftoken_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CheckTokenStatusResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2> CheckTokenStatusResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::seigr_token::CheckTokenStatusResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .seigr.seigr_token.TokenStatus status = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CheckTokenStatusResponse, _impl_.status_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CheckTokenStatusResponse, _impl_.status_)}},
    // uint64 balance = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CheckTokenStatusResponse, _impl_.balance_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(CheckTokenStatusResponse, _impl_.balance_)}},
    // uint64 max_cap = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CheckTokenStatusResponse, _impl_.max_cap_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(CheckTokenStatusResponse, _impl_.max_cap_)}},
    // bool is_capped = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CheckTokenStatusResponse, _impl_.is_capped_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(CheckTokenStatusResponse, _impl_.is_capped_)}},
    // uint64 surplus_amount = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CheckTokenStatusResponse, _impl_.surplus_amount_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(CheckTokenStatusResponse, _impl_.surplus_amount_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .seigr.seigr_token.TokenStatus status = 1;
    {PROTOBUF_FIELD_OFFSET(CheckTokenStatusResponse, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // uint64 balance = 2;
    {PROTOBUF_FIELD_OFFSET(CheckTokenStatusResponse, _impl_.balance_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 max_cap = 3;
    {PROTOBUF_FIELD_OFFSET(CheckTokenStatusResponse, _impl_.max_cap_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // bool is_capped = 4;
    {PROTOBUF_FIELD_OFFSET(CheckTokenStatusResponse, _impl_.is_capped_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // uint64 surplus_amount = 5;
    {PROTOBUF_FIELD_OFFSET(CheckTokenStatusResponse, _impl_.surplus_amount_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void CheckTokenStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.seigr_token.CheckTokenStatusResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.balance_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.surplus_amount_) -
      reinterpret_cast<char*>(&_impl_.balance_)) + sizeof(_impl_.surplus_amount_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CheckTokenStatusResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CheckTokenStatusResponse& this_ = static_cast<const CheckTokenStatusResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CheckTokenStatusResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CheckTokenStatusResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.seigr_token.CheckTokenStatusResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .seigr.seigr_token.TokenStatus status = 1;
          if (this_._internal_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_status(), target);
          }

          // uint64 balance = 2;
          if (this_._internal_balance() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_balance(), target);
          }

          // uint64 max_cap = 3;
          if (this_._internal_max_cap() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                3, this_._internal_max_cap(), target);
          }

          // bool is_capped = 4;
          if (this_._internal_is_capped() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_is_capped(), target);
          }

          // uint64 surplus_amount = 5;
          if (this_._internal_surplus_amount() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                5, this_._internal_surplus_amount(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.seigr_token.CheckTokenStatusResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CheckTokenStatusResponse::ByteSizeLong(const MessageLite& base) {
          const CheckTokenStatusResponse& this_ = static_cast<const CheckTokenStatusResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CheckTokenStatusResponse::ByteSizeLong() const {
          const CheckTokenStatusResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.seigr_token.CheckTokenStatusResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // uint64 balance = 2;
            if (this_._internal_balance() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_balance());
            }
            // .seigr.seigr_token.TokenStatus status = 1;
            if (this_._internal_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
            }
            // bool is_capped = 4;
            if (this_._internal_is_capped() != 0) {
              total_size += 2;
            }
            // uint64 max_cap = 3;
            if (this_._internal_max_cap() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_max_cap());
            }
            // uint64 surplus_amount = 5;
            if (this_._internal_surplus_amount() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_surplus_amount());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CheckTokenStatusResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CheckTokenStatusResponse*>(&to_msg);
  auto& from = static_cast<const CheckTokenStatusResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.seigr_token.CheckTokenStatusResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_balance() != 0) {
    _this->_impl_.balance_ = from._impl_.balance_;
  }
  if (from._internal_status() != 0) {
    _this->_impl_.status_ = from._impl_.status_;
  }
  if (from._internal_is_capped() != 0) {
    _this->_impl_.is_capped_ = from._impl_.is_capped_;
  }
  if (from._internal_max_cap() != 0) {
    _this->_impl_.max_cap_ = from._impl_.max_cap_;
  }
  if (from._internal_surplus_amount() != 0) {
    _this->_impl_.surplus_amount_ = from._impl_.surplus_amount_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CheckTokenStatusResponse::CopyFrom(const CheckTokenStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.seigr_token.CheckTokenStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CheckTokenStatusResponse::InternalSwap(CheckTokenStatusResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CheckTokenStatusResponse, _impl_.surplus_amount_)
      + sizeof(CheckTokenStatusResponse::_impl_.surplus_amount_)
      - PROTOBUF_FIELD_OFFSET(CheckTokenStatusResponse, _impl_.balance_)>(
          reinterpret_cast<char*>(&_impl_.balance_),
          reinterpret_cast<char*>(&other->_impl_.balance_));
}

::google::protobuf::Metadata CheckTokenStatusResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AdjustTokenCapRequest::_Internal {
 public:
};

AdjustTokenCapRequest::AdjustTokenCapRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.seigr_token.AdjustTokenCapRequest)
}
inline PROTOBUF_NDEBUG_INLINE AdjustTokenCapRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::seigr_token::AdjustTokenCapRequest& from_msg)
      : token_id_(arena, from.token_id_),
        _cached_size_{0} {}

AdjustTokenCapRequest::AdjustTokenCapRequest(
    ::google::protobuf::Arena* arena,
    const AdjustTokenCapRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AdjustTokenCapRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.new_cap_ = from._impl_.new_cap_;

  // @@protoc_insertion_point(copy_constructor:seigr.seigr_token.AdjustTokenCapRequest)
}
inline PROTOBUF_NDEBUG_INLINE AdjustTokenCapRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : token_id_(arena),
        _cached_size_{0} {}

inline void AdjustTokenCapRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.new_cap_ = {};
}
AdjustTokenCapRequest::~AdjustTokenCapRequest() {
  // @@protoc_insertion_point(destructor:seigr.seigr_token.AdjustTokenCapRequest)
  SharedDtor(*this);
}
inline void AdjustTokenCapRequest::SharedDtor(MessageLite& self) {
  AdjustTokenCapRequest& this_ = static_cast<AdjustTokenCapRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.token_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* AdjustTokenCapRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AdjustTokenCapRequest(arena);
}
constexpr auto AdjustTokenCapRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AdjustTokenCapRequest),
                                            alignof(AdjustTokenCapRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AdjustTokenCapRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AdjustTokenCapRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AdjustTokenCapRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AdjustTokenCapRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AdjustTokenCapRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AdjustTokenCapRequest>(), &AdjustTokenCapRequest::ByteSizeLong,
            &AdjustTokenCapRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AdjustTokenCapRequest, _impl_._cached_size_),
        false,
    },
    &AdjustTokenCapRequest::kDescriptorMethods,
    &descriptor_table_seigr_5ftoken_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AdjustTokenCapRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 56, 2> AdjustTokenCapRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::seigr_token::AdjustTokenCapRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 new_cap = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(AdjustTokenCapRequest, _impl_.new_cap_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(AdjustTokenCapRequest, _impl_.new_cap_)}},
    // string token_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AdjustTokenCapRequest, _impl_.token_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string token_id = 1;
    {PROTOBUF_FIELD_OFFSET(AdjustTokenCapRequest, _impl_.token_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 new_cap = 2;
    {PROTOBUF_FIELD_OFFSET(AdjustTokenCapRequest, _impl_.new_cap_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
    "\47\10\0\0\0\0\0\0"
    "seigr.seigr_token.AdjustTokenCapRequest"
    "token_id"
  }},
};

PROTOBUF_NOINLINE void AdjustTokenCapRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.seigr_token.AdjustTokenCapRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.token_id_.ClearToEmpty();
  _impl_.new_cap_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AdjustTokenCapRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AdjustTokenCapRequest& this_ = static_cast<const AdjustTokenCapRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AdjustTokenCapRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AdjustTokenCapRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.seigr_token.AdjustTokenCapRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string token_id = 1;
          if (!this_._internal_token_id().empty()) {
            const std::string& _s = this_._internal_token_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_token.AdjustTokenCapRequest.token_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // uint64 new_cap = 2;
          if (this_._internal_new_cap() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_new_cap(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.seigr_token.AdjustTokenCapRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AdjustTokenCapRequest::ByteSizeLong(const MessageLite& base) {
          const AdjustTokenCapRequest& this_ = static_cast<const AdjustTokenCapRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AdjustTokenCapRequest::ByteSizeLong() const {
          const AdjustTokenCapRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.seigr_token.AdjustTokenCapRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string token_id = 1;
            if (!this_._internal_token_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_token_id());
            }
            // uint64 new_cap = 2;
            if (this_._internal_new_cap() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_new_cap());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AdjustTokenCapRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AdjustTokenCapRequest*>(&to_msg);
  auto& from = static_cast<const AdjustTokenCapRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.seigr_token.AdjustTokenCapRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_token_id().empty()) {
    _this->_internal_set_token_id(from._internal_token_id());
  }
  if (from._internal_new_cap() != 0) {
    _this->_impl_.new_cap_ = from._impl_.new_cap_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AdjustTokenCapRequest::CopyFrom(const AdjustTokenCapRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.seigr_token.AdjustTokenCapRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AdjustTokenCapRequest::InternalSwap(AdjustTokenCapRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.token_id_, &other->_impl_.token_id_, arena);
        swap(_impl_.new_cap_, other->_impl_.new_cap_);
}

::google::protobuf::Metadata AdjustTokenCapRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AdjustTokenCapResponse::_Internal {
 public:
};

AdjustTokenCapResponse::AdjustTokenCapResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.seigr_token.AdjustTokenCapResponse)
}
inline PROTOBUF_NDEBUG_INLINE AdjustTokenCapResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::seigr_token::AdjustTokenCapResponse& from_msg)
      : message_(arena, from.message_),
        _cached_size_{0} {}

AdjustTokenCapResponse::AdjustTokenCapResponse(
    ::google::protobuf::Arena* arena,
    const AdjustTokenCapResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AdjustTokenCapResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, adjusted_cap_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, adjusted_cap_),
           offsetof(Impl_, success_) -
               offsetof(Impl_, adjusted_cap_) +
               sizeof(Impl_::success_));

  // @@protoc_insertion_point(copy_constructor:seigr.seigr_token.AdjustTokenCapResponse)
}
inline PROTOBUF_NDEBUG_INLINE AdjustTokenCapResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_(arena),
        _cached_size_{0} {}

inline void AdjustTokenCapResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, adjusted_cap_),
           0,
           offsetof(Impl_, success_) -
               offsetof(Impl_, adjusted_cap_) +
               sizeof(Impl_::success_));
}
AdjustTokenCapResponse::~AdjustTokenCapResponse() {
  // @@protoc_insertion_point(destructor:seigr.seigr_token.AdjustTokenCapResponse)
  SharedDtor(*this);
}
inline void AdjustTokenCapResponse::SharedDtor(MessageLite& self) {
  AdjustTokenCapResponse& this_ = static_cast<AdjustTokenCapResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* AdjustTokenCapResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AdjustTokenCapResponse(arena);
}
constexpr auto AdjustTokenCapResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AdjustTokenCapResponse),
                                            alignof(AdjustTokenCapResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AdjustTokenCapResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AdjustTokenCapResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AdjustTokenCapResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AdjustTokenCapResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AdjustTokenCapResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AdjustTokenCapResponse>(), &AdjustTokenCapResponse::ByteSizeLong,
            &AdjustTokenCapResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AdjustTokenCapResponse, _impl_._cached_size_),
        false,
    },
    &AdjustTokenCapResponse::kDescriptorMethods,
    &descriptor_table_seigr_5ftoken_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AdjustTokenCapResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 56, 2> AdjustTokenCapResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::seigr_token::AdjustTokenCapResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AdjustTokenCapResponse, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AdjustTokenCapResponse, _impl_.success_)}},
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AdjustTokenCapResponse, _impl_.message_)}},
    // uint64 adjusted_cap = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(AdjustTokenCapResponse, _impl_.adjusted_cap_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(AdjustTokenCapResponse, _impl_.adjusted_cap_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(AdjustTokenCapResponse, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(AdjustTokenCapResponse, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 adjusted_cap = 3;
    {PROTOBUF_FIELD_OFFSET(AdjustTokenCapResponse, _impl_.adjusted_cap_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
    "\50\0\7\0\0\0\0\0"
    "seigr.seigr_token.AdjustTokenCapResponse"
    "message"
  }},
};

PROTOBUF_NOINLINE void AdjustTokenCapResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.seigr_token.AdjustTokenCapResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  ::memset(&_impl_.adjusted_cap_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.success_) -
      reinterpret_cast<char*>(&_impl_.adjusted_cap_)) + sizeof(_impl_.success_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AdjustTokenCapResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AdjustTokenCapResponse& this_ = static_cast<const AdjustTokenCapResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AdjustTokenCapResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AdjustTokenCapResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.seigr_token.AdjustTokenCapResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool success = 1;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_success(), target);
          }

          // string message = 2;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_token.AdjustTokenCapResponse.message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // uint64 adjusted_cap = 3;
          if (this_._internal_adjusted_cap() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                3, this_._internal_adjusted_cap(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.seigr_token.AdjustTokenCapResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AdjustTokenCapResponse::ByteSizeLong(const MessageLite& base) {
          const AdjustTokenCapResponse& this_ = static_cast<const AdjustTokenCapResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AdjustTokenCapResponse::ByteSizeLong() const {
          const AdjustTokenCapResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.seigr_token.AdjustTokenCapResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string message = 2;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
            // uint64 adjusted_cap = 3;
            if (this_._internal_adjusted_cap() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_adjusted_cap());
            }
            // bool success = 1;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AdjustTokenCapResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AdjustTokenCapResponse*>(&to_msg);
  auto& from = static_cast<const AdjustTokenCapResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.seigr_token.AdjustTokenCapResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_adjusted_cap() != 0) {
    _this->_impl_.adjusted_cap_ = from._impl_.adjusted_cap_;
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AdjustTokenCapResponse::CopyFrom(const AdjustTokenCapResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.seigr_token.AdjustTokenCapResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AdjustTokenCapResponse::InternalSwap(AdjustTokenCapResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AdjustTokenCapResponse, _impl_.success_)
      + sizeof(AdjustTokenCapResponse::_impl_.success_)
      - PROTOBUF_FIELD_OFFSET(AdjustTokenCapResponse, _impl_.adjusted_cap_)>(
          reinterpret_cast<char*>(&_impl_.adjusted_cap_),
          reinterpret_cast<char*>(&other->_impl_.adjusted_cap_));
}

::google::protobuf::Metadata AdjustTokenCapResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DistributeSurplusRequest::_Internal {
 public:
};

DistributeSurplusRequest::DistributeSurplusRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.seigr_token.DistributeSurplusRequest)
}
inline PROTOBUF_NDEBUG_INLINE DistributeSurplusRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::seigr_token::DistributeSurplusRequest& from_msg)
      : token_id_(arena, from.token_id_),
        _cached_size_{0} {}

DistributeSurplusRequest::DistributeSurplusRequest(
    ::google::protobuf::Arena* arena,
    const DistributeSurplusRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DistributeSurplusRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.distribute_amount_ = from._impl_.distribute_amount_;

  // @@protoc_insertion_point(copy_constructor:seigr.seigr_token.DistributeSurplusRequest)
}
inline PROTOBUF_NDEBUG_INLINE DistributeSurplusRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : token_id_(arena),
        _cached_size_{0} {}

inline void DistributeSurplusRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.distribute_amount_ = {};
}
DistributeSurplusRequest::~DistributeSurplusRequest() {
  // @@protoc_insertion_point(destructor:seigr.seigr_token.DistributeSurplusRequest)
  SharedDtor(*this);
}
inline void DistributeSurplusRequest::SharedDtor(MessageLite& self) {
  DistributeSurplusRequest& this_ = static_cast<DistributeSurplusRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.token_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* DistributeSurplusRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DistributeSurplusRequest(arena);
}
constexpr auto DistributeSurplusRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(DistributeSurplusRequest),
                                            alignof(DistributeSurplusRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DistributeSurplusRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DistributeSurplusRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DistributeSurplusRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DistributeSurplusRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DistributeSurplusRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DistributeSurplusRequest>(), &DistributeSurplusRequest::ByteSizeLong,
            &DistributeSurplusRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DistributeSurplusRequest, _impl_._cached_size_),
        false,
    },
    &DistributeSurplusRequest::kDescriptorMethods,
    &descriptor_table_seigr_5ftoken_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DistributeSurplusRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 59, 2> DistributeSurplusRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::seigr_token::DistributeSurplusRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 distribute_amount = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DistributeSurplusRequest, _impl_.distribute_amount_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(DistributeSurplusRequest, _impl_.distribute_amount_)}},
    // string token_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DistributeSurplusRequest, _impl_.token_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string token_id = 1;
    {PROTOBUF_FIELD_OFFSET(DistributeSurplusRequest, _impl_.token_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 distribute_amount = 2;
    {PROTOBUF_FIELD_OFFSET(DistributeSurplusRequest, _impl_.distribute_amount_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
    "\52\10\0\0\0\0\0\0"
    "seigr.seigr_token.DistributeSurplusRequest"
    "token_id"
  }},
};

PROTOBUF_NOINLINE void DistributeSurplusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.seigr_token.DistributeSurplusRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.token_id_.ClearToEmpty();
  _impl_.distribute_amount_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DistributeSurplusRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DistributeSurplusRequest& this_ = static_cast<const DistributeSurplusRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DistributeSurplusRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DistributeSurplusRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.seigr_token.DistributeSurplusRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string token_id = 1;
          if (!this_._internal_token_id().empty()) {
            const std::string& _s = this_._internal_token_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_token.DistributeSurplusRequest.token_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // uint64 distribute_amount = 2;
          if (this_._internal_distribute_amount() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_distribute_amount(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.seigr_token.DistributeSurplusRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DistributeSurplusRequest::ByteSizeLong(const MessageLite& base) {
          const DistributeSurplusRequest& this_ = static_cast<const DistributeSurplusRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DistributeSurplusRequest::ByteSizeLong() const {
          const DistributeSurplusRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.seigr_token.DistributeSurplusRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string token_id = 1;
            if (!this_._internal_token_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_token_id());
            }
            // uint64 distribute_amount = 2;
            if (this_._internal_distribute_amount() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_distribute_amount());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DistributeSurplusRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DistributeSurplusRequest*>(&to_msg);
  auto& from = static_cast<const DistributeSurplusRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.seigr_token.DistributeSurplusRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_token_id().empty()) {
    _this->_internal_set_token_id(from._internal_token_id());
  }
  if (from._internal_distribute_amount() != 0) {
    _this->_impl_.distribute_amount_ = from._impl_.distribute_amount_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DistributeSurplusRequest::CopyFrom(const DistributeSurplusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.seigr_token.DistributeSurplusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DistributeSurplusRequest::InternalSwap(DistributeSurplusRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.token_id_, &other->_impl_.token_id_, arena);
        swap(_impl_.distribute_amount_, other->_impl_.distribute_amount_);
}

::google::protobuf::Metadata DistributeSurplusRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DistributeSurplusResponse::_Internal {
 public:
};

DistributeSurplusResponse::DistributeSurplusResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.seigr_token.DistributeSurplusResponse)
}
inline PROTOBUF_NDEBUG_INLINE DistributeSurplusResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::seigr_token::DistributeSurplusResponse& from_msg)
      : message_(arena, from.message_),
        _cached_size_{0} {}

DistributeSurplusResponse::DistributeSurplusResponse(
    ::google::protobuf::Arena* arena,
    const DistributeSurplusResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DistributeSurplusResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, distributed_amount_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, distributed_amount_),
           offsetof(Impl_, success_) -
               offsetof(Impl_, distributed_amount_) +
               sizeof(Impl_::success_));

  // @@protoc_insertion_point(copy_constructor:seigr.seigr_token.DistributeSurplusResponse)
}
inline PROTOBUF_NDEBUG_INLINE DistributeSurplusResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_(arena),
        _cached_size_{0} {}

inline void DistributeSurplusResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, distributed_amount_),
           0,
           offsetof(Impl_, success_) -
               offsetof(Impl_, distributed_amount_) +
               sizeof(Impl_::success_));
}
DistributeSurplusResponse::~DistributeSurplusResponse() {
  // @@protoc_insertion_point(destructor:seigr.seigr_token.DistributeSurplusResponse)
  SharedDtor(*this);
}
inline void DistributeSurplusResponse::SharedDtor(MessageLite& self) {
  DistributeSurplusResponse& this_ = static_cast<DistributeSurplusResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* DistributeSurplusResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DistributeSurplusResponse(arena);
}
constexpr auto DistributeSurplusResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(DistributeSurplusResponse),
                                            alignof(DistributeSurplusResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DistributeSurplusResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DistributeSurplusResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DistributeSurplusResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DistributeSurplusResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DistributeSurplusResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DistributeSurplusResponse>(), &DistributeSurplusResponse::ByteSizeLong,
            &DistributeSurplusResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DistributeSurplusResponse, _impl_._cached_size_),
        false,
    },
    &DistributeSurplusResponse::kDescriptorMethods,
    &descriptor_table_seigr_5ftoken_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DistributeSurplusResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 59, 2> DistributeSurplusResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::seigr_token::DistributeSurplusResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(DistributeSurplusResponse, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(DistributeSurplusResponse, _impl_.success_)}},
    // uint64 distributed_amount = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DistributeSurplusResponse, _impl_.distributed_amount_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(DistributeSurplusResponse, _impl_.distributed_amount_)}},
    // string message = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(DistributeSurplusResponse, _impl_.message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(DistributeSurplusResponse, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // uint64 distributed_amount = 2;
    {PROTOBUF_FIELD_OFFSET(DistributeSurplusResponse, _impl_.distributed_amount_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string message = 3;
    {PROTOBUF_FIELD_OFFSET(DistributeSurplusResponse, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\53\0\0\7\0\0\0\0"
    "seigr.seigr_token.DistributeSurplusResponse"
    "message"
  }},
};

PROTOBUF_NOINLINE void DistributeSurplusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.seigr_token.DistributeSurplusResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  ::memset(&_impl_.distributed_amount_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.success_) -
      reinterpret_cast<char*>(&_impl_.distributed_amount_)) + sizeof(_impl_.success_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DistributeSurplusResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DistributeSurplusResponse& this_ = static_cast<const DistributeSurplusResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DistributeSurplusResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DistributeSurplusResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.seigr_token.DistributeSurplusResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool success = 1;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_success(), target);
          }

          // uint64 distributed_amount = 2;
          if (this_._internal_distributed_amount() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_distributed_amount(), target);
          }

          // string message = 3;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_token.DistributeSurplusResponse.message");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.seigr_token.DistributeSurplusResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DistributeSurplusResponse::ByteSizeLong(const MessageLite& base) {
          const DistributeSurplusResponse& this_ = static_cast<const DistributeSurplusResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DistributeSurplusResponse::ByteSizeLong() const {
          const DistributeSurplusResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.seigr_token.DistributeSurplusResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string message = 3;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
            // uint64 distributed_amount = 2;
            if (this_._internal_distributed_amount() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_distributed_amount());
            }
            // bool success = 1;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DistributeSurplusResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DistributeSurplusResponse*>(&to_msg);
  auto& from = static_cast<const DistributeSurplusResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.seigr_token.DistributeSurplusResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_distributed_amount() != 0) {
    _this->_impl_.distributed_amount_ = from._impl_.distributed_amount_;
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DistributeSurplusResponse::CopyFrom(const DistributeSurplusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.seigr_token.DistributeSurplusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DistributeSurplusResponse::InternalSwap(DistributeSurplusResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DistributeSurplusResponse, _impl_.success_)
      + sizeof(DistributeSurplusResponse::_impl_.success_)
      - PROTOBUF_FIELD_OFFSET(DistributeSurplusResponse, _impl_.distributed_amount_)>(
          reinterpret_cast<char*>(&_impl_.distributed_amount_),
          reinterpret_cast<char*>(&other->_impl_.distributed_amount_));
}

::google::protobuf::Metadata DistributeSurplusResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BurnTokenRequest::_Internal {
 public:
};

BurnTokenRequest::BurnTokenRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.seigr_token.BurnTokenRequest)
}
inline PROTOBUF_NDEBUG_INLINE BurnTokenRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::seigr_token::BurnTokenRequest& from_msg)
      : token_id_(arena, from.token_id_),
        _cached_size_{0} {}

BurnTokenRequest::BurnTokenRequest(
    ::google::protobuf::Arena* arena,
    const BurnTokenRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BurnTokenRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:seigr.seigr_token.BurnTokenRequest)
}
inline PROTOBUF_NDEBUG_INLINE BurnTokenRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : token_id_(arena),
        _cached_size_{0} {}

inline void BurnTokenRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
BurnTokenRequest::~BurnTokenRequest() {
  // @@protoc_insertion_point(destructor:seigr.seigr_token.BurnTokenRequest)
  SharedDtor(*this);
}
inline void BurnTokenRequest::SharedDtor(MessageLite& self) {
  BurnTokenRequest& this_ = static_cast<BurnTokenRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.token_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* BurnTokenRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BurnTokenRequest(arena);
}
constexpr auto BurnTokenRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(BurnTokenRequest),
                                            alignof(BurnTokenRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BurnTokenRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BurnTokenRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BurnTokenRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BurnTokenRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BurnTokenRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BurnTokenRequest>(), &BurnTokenRequest::ByteSizeLong,
            &BurnTokenRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BurnTokenRequest, _impl_._cached_size_),
        false,
    },
    &BurnTokenRequest::kDescriptorMethods,
    &descriptor_table_seigr_5ftoken_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BurnTokenRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 51, 2> BurnTokenRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::seigr_token::BurnTokenRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string token_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BurnTokenRequest, _impl_.token_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string token_id = 1;
    {PROTOBUF_FIELD_OFFSET(BurnTokenRequest, _impl_.token_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\42\10\0\0\0\0\0\0"
    "seigr.seigr_token.BurnTokenRequest"
    "token_id"
  }},
};

PROTOBUF_NOINLINE void BurnTokenRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.seigr_token.BurnTokenRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.token_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BurnTokenRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BurnTokenRequest& this_ = static_cast<const BurnTokenRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BurnTokenRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BurnTokenRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.seigr_token.BurnTokenRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string token_id = 1;
          if (!this_._internal_token_id().empty()) {
            const std::string& _s = this_._internal_token_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_token.BurnTokenRequest.token_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.seigr_token.BurnTokenRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BurnTokenRequest::ByteSizeLong(const MessageLite& base) {
          const BurnTokenRequest& this_ = static_cast<const BurnTokenRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BurnTokenRequest::ByteSizeLong() const {
          const BurnTokenRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.seigr_token.BurnTokenRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string token_id = 1;
            if (!this_._internal_token_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_token_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BurnTokenRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BurnTokenRequest*>(&to_msg);
  auto& from = static_cast<const BurnTokenRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.seigr_token.BurnTokenRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_token_id().empty()) {
    _this->_internal_set_token_id(from._internal_token_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BurnTokenRequest::CopyFrom(const BurnTokenRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.seigr_token.BurnTokenRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BurnTokenRequest::InternalSwap(BurnTokenRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.token_id_, &other->_impl_.token_id_, arena);
}

::google::protobuf::Metadata BurnTokenRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BurnTokenResponse::_Internal {
 public:
};

BurnTokenResponse::BurnTokenResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.seigr_token.BurnTokenResponse)
}
inline PROTOBUF_NDEBUG_INLINE BurnTokenResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::seigr_token::BurnTokenResponse& from_msg)
      : message_(arena, from.message_),
        _cached_size_{0} {}

BurnTokenResponse::BurnTokenResponse(
    ::google::protobuf::Arena* arena,
    const BurnTokenResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BurnTokenResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:seigr.seigr_token.BurnTokenResponse)
}
inline PROTOBUF_NDEBUG_INLINE BurnTokenResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_(arena),
        _cached_size_{0} {}

inline void BurnTokenResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
BurnTokenResponse::~BurnTokenResponse() {
  // @@protoc_insertion_point(destructor:seigr.seigr_token.BurnTokenResponse)
  SharedDtor(*this);
}
inline void BurnTokenResponse::SharedDtor(MessageLite& self) {
  BurnTokenResponse& this_ = static_cast<BurnTokenResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* BurnTokenResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BurnTokenResponse(arena);
}
constexpr auto BurnTokenResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(BurnTokenResponse),
                                            alignof(BurnTokenResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BurnTokenResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BurnTokenResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BurnTokenResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BurnTokenResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BurnTokenResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BurnTokenResponse>(), &BurnTokenResponse::ByteSizeLong,
            &BurnTokenResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BurnTokenResponse, _impl_._cached_size_),
        false,
    },
    &BurnTokenResponse::kDescriptorMethods,
    &descriptor_table_seigr_5ftoken_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BurnTokenResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 51, 2> BurnTokenResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::seigr_token::BurnTokenResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(BurnTokenResponse, _impl_.message_)}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(BurnTokenResponse, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(BurnTokenResponse, _impl_.success_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(BurnTokenResponse, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(BurnTokenResponse, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\43\0\7\0\0\0\0\0"
    "seigr.seigr_token.BurnTokenResponse"
    "message"
  }},
};

PROTOBUF_NOINLINE void BurnTokenResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.seigr_token.BurnTokenResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BurnTokenResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BurnTokenResponse& this_ = static_cast<const BurnTokenResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BurnTokenResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BurnTokenResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.seigr_token.BurnTokenResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool success = 1;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_success(), target);
          }

          // string message = 2;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_token.BurnTokenResponse.message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.seigr_token.BurnTokenResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BurnTokenResponse::ByteSizeLong(const MessageLite& base) {
          const BurnTokenResponse& this_ = static_cast<const BurnTokenResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BurnTokenResponse::ByteSizeLong() const {
          const BurnTokenResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.seigr_token.BurnTokenResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string message = 2;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
            // bool success = 1;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BurnTokenResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BurnTokenResponse*>(&to_msg);
  auto& from = static_cast<const BurnTokenResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.seigr_token.BurnTokenResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BurnTokenResponse::CopyFrom(const BurnTokenResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.seigr_token.BurnTokenResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BurnTokenResponse::InternalSwap(BurnTokenResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata BurnTokenResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetTransactionHistoryRequest::_Internal {
 public:
};

GetTransactionHistoryRequest::GetTransactionHistoryRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.seigr_token.GetTransactionHistoryRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetTransactionHistoryRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::seigr_token::GetTransactionHistoryRequest& from_msg)
      : token_id_(arena, from.token_id_),
        _cached_size_{0} {}

GetTransactionHistoryRequest::GetTransactionHistoryRequest(
    ::google::protobuf::Arena* arena,
    const GetTransactionHistoryRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetTransactionHistoryRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, limit_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, limit_),
           offsetof(Impl_, include_locked_transactions_) -
               offsetof(Impl_, limit_) +
               sizeof(Impl_::include_locked_transactions_));

  // @@protoc_insertion_point(copy_constructor:seigr.seigr_token.GetTransactionHistoryRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetTransactionHistoryRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : token_id_(arena),
        _cached_size_{0} {}

inline void GetTransactionHistoryRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, limit_),
           0,
           offsetof(Impl_, include_locked_transactions_) -
               offsetof(Impl_, limit_) +
               sizeof(Impl_::include_locked_transactions_));
}
GetTransactionHistoryRequest::~GetTransactionHistoryRequest() {
  // @@protoc_insertion_point(destructor:seigr.seigr_token.GetTransactionHistoryRequest)
  SharedDtor(*this);
}
inline void GetTransactionHistoryRequest::SharedDtor(MessageLite& self) {
  GetTransactionHistoryRequest& this_ = static_cast<GetTransactionHistoryRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.token_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* GetTransactionHistoryRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetTransactionHistoryRequest(arena);
}
constexpr auto GetTransactionHistoryRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetTransactionHistoryRequest),
                                            alignof(GetTransactionHistoryRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetTransactionHistoryRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetTransactionHistoryRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetTransactionHistoryRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetTransactionHistoryRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetTransactionHistoryRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetTransactionHistoryRequest>(), &GetTransactionHistoryRequest::ByteSizeLong,
            &GetTransactionHistoryRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetTransactionHistoryRequest, _impl_._cached_size_),
        false,
    },
    &GetTransactionHistoryRequest::kDescriptorMethods,
    &descriptor_table_seigr_5ftoken_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetTransactionHistoryRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 63, 2> GetTransactionHistoryRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::seigr_token::GetTransactionHistoryRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string token_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetTransactionHistoryRequest, _impl_.token_id_)}},
    // uint32 limit = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetTransactionHistoryRequest, _impl_.limit_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GetTransactionHistoryRequest, _impl_.limit_)}},
    // bool include_locked_transactions = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GetTransactionHistoryRequest, _impl_.include_locked_transactions_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(GetTransactionHistoryRequest, _impl_.include_locked_transactions_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string token_id = 1;
    {PROTOBUF_FIELD_OFFSET(GetTransactionHistoryRequest, _impl_.token_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 limit = 2;
    {PROTOBUF_FIELD_OFFSET(GetTransactionHistoryRequest, _impl_.limit_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // bool include_locked_transactions = 3;
    {PROTOBUF_FIELD_OFFSET(GetTransactionHistoryRequest, _impl_.include_locked_transactions_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\56\10\0\0\0\0\0\0"
    "seigr.seigr_token.GetTransactionHistoryRequest"
    "token_id"
  }},
};

PROTOBUF_NOINLINE void GetTransactionHistoryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.seigr_token.GetTransactionHistoryRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.token_id_.ClearToEmpty();
  ::memset(&_impl_.limit_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.include_locked_transactions_) -
      reinterpret_cast<char*>(&_impl_.limit_)) + sizeof(_impl_.include_locked_transactions_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetTransactionHistoryRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetTransactionHistoryRequest& this_ = static_cast<const GetTransactionHistoryRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetTransactionHistoryRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetTransactionHistoryRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.seigr_token.GetTransactionHistoryRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string token_id = 1;
          if (!this_._internal_token_id().empty()) {
            const std::string& _s = this_._internal_token_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_token.GetTransactionHistoryRequest.token_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // uint32 limit = 2;
          if (this_._internal_limit() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_limit(), target);
          }

          // bool include_locked_transactions = 3;
          if (this_._internal_include_locked_transactions() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_include_locked_transactions(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.seigr_token.GetTransactionHistoryRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetTransactionHistoryRequest::ByteSizeLong(const MessageLite& base) {
          const GetTransactionHistoryRequest& this_ = static_cast<const GetTransactionHistoryRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetTransactionHistoryRequest::ByteSizeLong() const {
          const GetTransactionHistoryRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.seigr_token.GetTransactionHistoryRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string token_id = 1;
            if (!this_._internal_token_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_token_id());
            }
            // uint32 limit = 2;
            if (this_._internal_limit() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_limit());
            }
            // bool include_locked_transactions = 3;
            if (this_._internal_include_locked_transactions() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetTransactionHistoryRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetTransactionHistoryRequest*>(&to_msg);
  auto& from = static_cast<const GetTransactionHistoryRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.seigr_token.GetTransactionHistoryRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_token_id().empty()) {
    _this->_internal_set_token_id(from._internal_token_id());
  }
  if (from._internal_limit() != 0) {
    _this->_impl_.limit_ = from._impl_.limit_;
  }
  if (from._internal_include_locked_transactions() != 0) {
    _this->_impl_.include_locked_transactions_ = from._impl_.include_locked_transactions_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetTransactionHistoryRequest::CopyFrom(const GetTransactionHistoryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.seigr_token.GetTransactionHistoryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetTransactionHistoryRequest::InternalSwap(GetTransactionHistoryRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.token_id_, &other->_impl_.token_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetTransactionHistoryRequest, _impl_.include_locked_transactions_)
      + sizeof(GetTransactionHistoryRequest::_impl_.include_locked_transactions_)
      - PROTOBUF_FIELD_OFFSET(GetTransactionHistoryRequest, _impl_.limit_)>(
          reinterpret_cast<char*>(&_impl_.limit_),
          reinterpret_cast<char*>(&other->_impl_.limit_));
}

::google::protobuf::Metadata GetTransactionHistoryRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetTransactionHistoryResponse::_Internal {
 public:
};

GetTransactionHistoryResponse::GetTransactionHistoryResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.seigr_token.GetTransactionHistoryResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetTransactionHistoryResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::seigr_token::GetTransactionHistoryResponse& from_msg)
      : transactions_{visibility, arena, from.transactions_},
        token_id_(arena, from.token_id_),
        _cached_size_{0} {}

GetTransactionHistoryResponse::GetTransactionHistoryResponse(
    ::google::protobuf::Arena* arena,
    const GetTransactionHistoryResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetTransactionHistoryResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:seigr.seigr_token.GetTransactionHistoryResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetTransactionHistoryResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : transactions_{visibility, arena},
        token_id_(arena),
        _cached_size_{0} {}

inline void GetTransactionHistoryResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetTransactionHistoryResponse::~GetTransactionHistoryResponse() {
  // @@protoc_insertion_point(destructor:seigr.seigr_token.GetTransactionHistoryResponse)
  SharedDtor(*this);
}
inline void GetTransactionHistoryResponse::SharedDtor(MessageLite& self) {
  GetTransactionHistoryResponse& this_ = static_cast<GetTransactionHistoryResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.token_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* GetTransactionHistoryResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetTransactionHistoryResponse(arena);
}
constexpr auto GetTransactionHistoryResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GetTransactionHistoryResponse, _impl_.transactions_) +
          decltype(GetTransactionHistoryResponse::_impl_.transactions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(GetTransactionHistoryResponse), alignof(GetTransactionHistoryResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GetTransactionHistoryResponse::PlacementNew_,
                                 sizeof(GetTransactionHistoryResponse),
                                 alignof(GetTransactionHistoryResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetTransactionHistoryResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetTransactionHistoryResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetTransactionHistoryResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetTransactionHistoryResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetTransactionHistoryResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetTransactionHistoryResponse>(), &GetTransactionHistoryResponse::ByteSizeLong,
            &GetTransactionHistoryResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetTransactionHistoryResponse, _impl_._cached_size_),
        false,
    },
    &GetTransactionHistoryResponse::kDescriptorMethods,
    &descriptor_table_seigr_5ftoken_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetTransactionHistoryResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 64, 2> GetTransactionHistoryResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::seigr_token::GetTransactionHistoryResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .seigr.seigr_token.Transaction transactions = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GetTransactionHistoryResponse, _impl_.transactions_)}},
    // string token_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetTransactionHistoryResponse, _impl_.token_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string token_id = 1;
    {PROTOBUF_FIELD_OFFSET(GetTransactionHistoryResponse, _impl_.token_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .seigr.seigr_token.Transaction transactions = 2;
    {PROTOBUF_FIELD_OFFSET(GetTransactionHistoryResponse, _impl_.transactions_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::seigr::seigr_token::Transaction>()},
  }}, {{
    "\57\10\0\0\0\0\0\0"
    "seigr.seigr_token.GetTransactionHistoryResponse"
    "token_id"
  }},
};

PROTOBUF_NOINLINE void GetTransactionHistoryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.seigr_token.GetTransactionHistoryResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.transactions_.Clear();
  _impl_.token_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetTransactionHistoryResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetTransactionHistoryResponse& this_ = static_cast<const GetTransactionHistoryResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetTransactionHistoryResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetTransactionHistoryResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.seigr_token.GetTransactionHistoryResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string token_id = 1;
          if (!this_._internal_token_id().empty()) {
            const std::string& _s = this_._internal_token_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_token.GetTransactionHistoryResponse.token_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated .seigr.seigr_token.Transaction transactions = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_transactions_size());
               i < n; i++) {
            const auto& repfield = this_._internal_transactions().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.seigr_token.GetTransactionHistoryResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetTransactionHistoryResponse::ByteSizeLong(const MessageLite& base) {
          const GetTransactionHistoryResponse& this_ = static_cast<const GetTransactionHistoryResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetTransactionHistoryResponse::ByteSizeLong() const {
          const GetTransactionHistoryResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.seigr_token.GetTransactionHistoryResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .seigr.seigr_token.Transaction transactions = 2;
            {
              total_size += 1UL * this_._internal_transactions_size();
              for (const auto& msg : this_._internal_transactions()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string token_id = 1;
            if (!this_._internal_token_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_token_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetTransactionHistoryResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetTransactionHistoryResponse*>(&to_msg);
  auto& from = static_cast<const GetTransactionHistoryResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.seigr_token.GetTransactionHistoryResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_transactions()->MergeFrom(
      from._internal_transactions());
  if (!from._internal_token_id().empty()) {
    _this->_internal_set_token_id(from._internal_token_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetTransactionHistoryResponse::CopyFrom(const GetTransactionHistoryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.seigr_token.GetTransactionHistoryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetTransactionHistoryResponse::InternalSwap(GetTransactionHistoryResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.transactions_.InternalSwap(&other->_impl_.transactions_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.token_id_, &other->_impl_.token_id_, arena);
}

::google::protobuf::Metadata GetTransactionHistoryResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Transaction::_Internal {
 public:
};

Transaction::Transaction(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.seigr_token.Transaction)
}
inline PROTOBUF_NDEBUG_INLINE Transaction::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::seigr_token::Transaction& from_msg)
      : from_id_(arena, from.from_id_),
        to_id_(arena, from.to_id_),
        timestamp_(arena, from.timestamp_),
        _cached_size_{0} {}

Transaction::Transaction(
    ::google::protobuf::Arena* arena,
    const Transaction& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Transaction* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, transaction_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, transaction_id_),
           offsetof(Impl_, type_) -
               offsetof(Impl_, transaction_id_) +
               sizeof(Impl_::type_));

  // @@protoc_insertion_point(copy_constructor:seigr.seigr_token.Transaction)
}
inline PROTOBUF_NDEBUG_INLINE Transaction::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : from_id_(arena),
        to_id_(arena),
        timestamp_(arena),
        _cached_size_{0} {}

inline void Transaction::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, transaction_id_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, transaction_id_) +
               sizeof(Impl_::type_));
}
Transaction::~Transaction() {
  // @@protoc_insertion_point(destructor:seigr.seigr_token.Transaction)
  SharedDtor(*this);
}
inline void Transaction::SharedDtor(MessageLite& self) {
  Transaction& this_ = static_cast<Transaction&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.from_id_.Destroy();
  this_._impl_.to_id_.Destroy();
  this_._impl_.timestamp_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Transaction::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Transaction(arena);
}
constexpr auto Transaction::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Transaction),
                                            alignof(Transaction));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Transaction::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Transaction_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Transaction::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Transaction>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Transaction::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Transaction>(), &Transaction::ByteSizeLong,
            &Transaction::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Transaction, _impl_._cached_size_),
        false,
    },
    &Transaction::kDescriptorMethods,
    &descriptor_table_seigr_5ftoken_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Transaction::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 59, 2> Transaction::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::seigr_token::Transaction>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 transaction_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Transaction, _impl_.transaction_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Transaction, _impl_.transaction_id_)}},
    // string from_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Transaction, _impl_.from_id_)}},
    // string to_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Transaction, _impl_.to_id_)}},
    // uint64 amount = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Transaction, _impl_.amount_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Transaction, _impl_.amount_)}},
    // string timestamp = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Transaction, _impl_.timestamp_)}},
    // .seigr.crosschain.TransactionType type = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Transaction, _impl_.type_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(Transaction, _impl_.type_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 transaction_id = 1;
    {PROTOBUF_FIELD_OFFSET(Transaction, _impl_.transaction_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string from_id = 2;
    {PROTOBUF_FIELD_OFFSET(Transaction, _impl_.from_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string to_id = 3;
    {PROTOBUF_FIELD_OFFSET(Transaction, _impl_.to_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 amount = 4;
    {PROTOBUF_FIELD_OFFSET(Transaction, _impl_.amount_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string timestamp = 5;
    {PROTOBUF_FIELD_OFFSET(Transaction, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.crosschain.TransactionType type = 6;
    {PROTOBUF_FIELD_OFFSET(Transaction, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\35\0\7\5\0\11\0\0"
    "seigr.seigr_token.Transaction"
    "from_id"
    "to_id"
    "timestamp"
  }},
};

PROTOBUF_NOINLINE void Transaction::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.seigr_token.Transaction)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.from_id_.ClearToEmpty();
  _impl_.to_id_.ClearToEmpty();
  _impl_.timestamp_.ClearToEmpty();
  ::memset(&_impl_.transaction_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.type_) -
      reinterpret_cast<char*>(&_impl_.transaction_id_)) + sizeof(_impl_.type_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Transaction::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Transaction& this_ = static_cast<const Transaction&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Transaction::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Transaction& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.seigr_token.Transaction)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 transaction_id = 1;
          if (this_._internal_transaction_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_transaction_id(), target);
          }

          // string from_id = 2;
          if (!this_._internal_from_id().empty()) {
            const std::string& _s = this_._internal_from_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_token.Transaction.from_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string to_id = 3;
          if (!this_._internal_to_id().empty()) {
            const std::string& _s = this_._internal_to_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_token.Transaction.to_id");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // uint64 amount = 4;
          if (this_._internal_amount() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                4, this_._internal_amount(), target);
          }

          // string timestamp = 5;
          if (!this_._internal_timestamp().empty()) {
            const std::string& _s = this_._internal_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.seigr_token.Transaction.timestamp");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // .seigr.crosschain.TransactionType type = 6;
          if (this_._internal_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                6, this_._internal_type(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.seigr_token.Transaction)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Transaction::ByteSizeLong(const MessageLite& base) {
          const Transaction& this_ = static_cast<const Transaction&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Transaction::ByteSizeLong() const {
          const Transaction& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.seigr_token.Transaction)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string from_id = 2;
            if (!this_._internal_from_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_from_id());
            }
            // string to_id = 3;
            if (!this_._internal_to_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_to_id());
            }
            // string timestamp = 5;
            if (!this_._internal_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_timestamp());
            }
            // uint64 transaction_id = 1;
            if (this_._internal_transaction_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_transaction_id());
            }
            // uint64 amount = 4;
            if (this_._internal_amount() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_amount());
            }
            // .seigr.crosschain.TransactionType type = 6;
            if (this_._internal_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Transaction::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Transaction*>(&to_msg);
  auto& from = static_cast<const Transaction&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.seigr_token.Transaction)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_from_id().empty()) {
    _this->_internal_set_from_id(from._internal_from_id());
  }
  if (!from._internal_to_id().empty()) {
    _this->_internal_set_to_id(from._internal_to_id());
  }
  if (!from._internal_timestamp().empty()) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (from._internal_transaction_id() != 0) {
    _this->_impl_.transaction_id_ = from._impl_.transaction_id_;
  }
  if (from._internal_amount() != 0) {
    _this->_impl_.amount_ = from._impl_.amount_;
  }
  if (from._internal_type() != 0) {
    _this->_impl_.type_ = from._impl_.type_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Transaction::CopyFrom(const Transaction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.seigr_token.Transaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Transaction::InternalSwap(Transaction* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.from_id_, &other->_impl_.from_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.to_id_, &other->_impl_.to_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.timestamp_, &other->_impl_.timestamp_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Transaction, _impl_.type_)
      + sizeof(Transaction::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(Transaction, _impl_.transaction_id_)>(
          reinterpret_cast<char*>(&_impl_.transaction_id_),
          reinterpret_cast<char*>(&other->_impl_.transaction_id_));
}

::google::protobuf::Metadata Transaction::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace seigr_token
}  // namespace seigr
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_seigr_5ftoken_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
