// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: common.proto
// Protobuf C++ Version: 5.29.2

#ifndef common_2eproto_2epb_2eh
#define common_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_common_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_common_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_common_2eproto;
namespace seigr {
namespace common {
class BasicMetadata;
struct BasicMetadataDefaultTypeInternal;
extern BasicMetadataDefaultTypeInternal _BasicMetadata_default_instance_;
class NetworkHealthSummary;
struct NetworkHealthSummaryDefaultTypeInternal;
extern NetworkHealthSummaryDefaultTypeInternal _NetworkHealthSummary_default_instance_;
class NetworkPerformanceSummary;
struct NetworkPerformanceSummaryDefaultTypeInternal;
extern NetworkPerformanceSummaryDefaultTypeInternal _NetworkPerformanceSummary_default_instance_;
class NetworkStatusRequest;
struct NetworkStatusRequestDefaultTypeInternal;
extern NetworkStatusRequestDefaultTypeInternal _NetworkStatusRequest_default_instance_;
class NetworkStatusRequest_OptionsEntry_DoNotUse;
struct NetworkStatusRequest_OptionsEntry_DoNotUseDefaultTypeInternal;
extern NetworkStatusRequest_OptionsEntry_DoNotUseDefaultTypeInternal _NetworkStatusRequest_OptionsEntry_DoNotUse_default_instance_;
class NetworkStatusResponse;
struct NetworkStatusResponseDefaultTypeInternal;
extern NetworkStatusResponseDefaultTypeInternal _NetworkStatusResponse_default_instance_;
class NetworkStatusResponse_ResponseMetadataEntry_DoNotUse;
struct NetworkStatusResponse_ResponseMetadataEntry_DoNotUseDefaultTypeInternal;
extern NetworkStatusResponse_ResponseMetadataEntry_DoNotUseDefaultTypeInternal _NetworkStatusResponse_ResponseMetadataEntry_DoNotUse_default_instance_;
class StandardResponse;
struct StandardResponseDefaultTypeInternal;
extern StandardResponseDefaultTypeInternal _StandardResponse_default_instance_;
class StandardResponse_MetadataEntry_DoNotUse;
struct StandardResponse_MetadataEntry_DoNotUseDefaultTypeInternal;
extern StandardResponse_MetadataEntry_DoNotUseDefaultTypeInternal _StandardResponse_MetadataEntry_DoNotUse_default_instance_;
class ThreatDetectionLog;
struct ThreatDetectionLogDefaultTypeInternal;
extern ThreatDetectionLogDefaultTypeInternal _ThreatDetectionLog_default_instance_;
class ThreatDetectionLog_MetadataEntry_DoNotUse;
struct ThreatDetectionLog_MetadataEntry_DoNotUseDefaultTypeInternal;
extern ThreatDetectionLog_MetadataEntry_DoNotUseDefaultTypeInternal _ThreatDetectionLog_MetadataEntry_DoNotUse_default_instance_;
class Timestamp;
struct TimestampDefaultTypeInternal;
extern TimestampDefaultTypeInternal _Timestamp_default_instance_;
}  // namespace common
}  // namespace seigr
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace seigr {
namespace common {
enum ThreatLevel : int {
  THREAT_LEVEL_UNDEFINED = 0,
  THREAT_LEVEL_LOW = 1,
  THREAT_LEVEL_MODERATE = 2,
  THREAT_LEVEL_HIGH = 3,
  THREAT_LEVEL_CRITICAL = 4,
  ThreatLevel_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ThreatLevel_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool ThreatLevel_IsValid(int value);
extern const uint32_t ThreatLevel_internal_data_[];
constexpr ThreatLevel ThreatLevel_MIN = static_cast<ThreatLevel>(0);
constexpr ThreatLevel ThreatLevel_MAX = static_cast<ThreatLevel>(4);
constexpr int ThreatLevel_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor*
ThreatLevel_descriptor();
template <typename T>
const std::string& ThreatLevel_Name(T value) {
  static_assert(std::is_same<T, ThreatLevel>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ThreatLevel_Name().");
  return ThreatLevel_Name(static_cast<ThreatLevel>(value));
}
template <>
inline const std::string& ThreatLevel_Name(ThreatLevel value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ThreatLevel_descriptor,
                                                 0, 4>(
      static_cast<int>(value));
}
inline bool ThreatLevel_Parse(absl::string_view name, ThreatLevel* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ThreatLevel>(
      ThreatLevel_descriptor(), name, value);
}
enum OperationalStatus : int {
  OPERATIONAL_STATUS_UNDEFINED = 0,
  OPERATIONAL_STATUS_OK = 1,
  OPERATIONAL_STATUS_WARNING = 2,
  OPERATIONAL_STATUS_ERROR = 3,
  OPERATIONAL_STATUS_MAINTENANCE = 4,
  OPERATIONAL_STATUS_DEGRADED = 5,
  OPERATIONAL_STATUS_DISASTER_RECOVERY = 6,
  OperationalStatus_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  OperationalStatus_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool OperationalStatus_IsValid(int value);
extern const uint32_t OperationalStatus_internal_data_[];
constexpr OperationalStatus OperationalStatus_MIN = static_cast<OperationalStatus>(0);
constexpr OperationalStatus OperationalStatus_MAX = static_cast<OperationalStatus>(6);
constexpr int OperationalStatus_ARRAYSIZE = 6 + 1;
const ::google::protobuf::EnumDescriptor*
OperationalStatus_descriptor();
template <typename T>
const std::string& OperationalStatus_Name(T value) {
  static_assert(std::is_same<T, OperationalStatus>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to OperationalStatus_Name().");
  return OperationalStatus_Name(static_cast<OperationalStatus>(value));
}
template <>
inline const std::string& OperationalStatus_Name(OperationalStatus value) {
  return ::google::protobuf::internal::NameOfDenseEnum<OperationalStatus_descriptor,
                                                 0, 6>(
      static_cast<int>(value));
}
inline bool OperationalStatus_Parse(absl::string_view name, OperationalStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OperationalStatus>(
      OperationalStatus_descriptor(), name, value);
}
enum PriorityLevel : int {
  PRIORITY_LEVEL_UNDEFINED = 0,
  PRIORITY_LEVEL_LOW = 1,
  PRIORITY_LEVEL_MEDIUM = 2,
  PRIORITY_LEVEL_HIGH = 3,
  PRIORITY_LEVEL_URGENT = 4,
  PRIORITY_LEVEL_IMMEDIATE = 5,
  PriorityLevel_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  PriorityLevel_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool PriorityLevel_IsValid(int value);
extern const uint32_t PriorityLevel_internal_data_[];
constexpr PriorityLevel PriorityLevel_MIN = static_cast<PriorityLevel>(0);
constexpr PriorityLevel PriorityLevel_MAX = static_cast<PriorityLevel>(5);
constexpr int PriorityLevel_ARRAYSIZE = 5 + 1;
const ::google::protobuf::EnumDescriptor*
PriorityLevel_descriptor();
template <typename T>
const std::string& PriorityLevel_Name(T value) {
  static_assert(std::is_same<T, PriorityLevel>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to PriorityLevel_Name().");
  return PriorityLevel_Name(static_cast<PriorityLevel>(value));
}
template <>
inline const std::string& PriorityLevel_Name(PriorityLevel value) {
  return ::google::protobuf::internal::NameOfDenseEnum<PriorityLevel_descriptor,
                                                 0, 5>(
      static_cast<int>(value));
}
inline bool PriorityLevel_Parse(absl::string_view name, PriorityLevel* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PriorityLevel>(
      PriorityLevel_descriptor(), name, value);
}
enum QoSLevel : int {
  QOS_LEVEL_UNDEFINED = 0,
  QOS_LEVEL_LOW = 1,
  QOS_LEVEL_MEDIUM = 2,
  QOS_LEVEL_HIGH = 3,
  QOS_LEVEL_CRITICAL = 4,
  QoSLevel_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  QoSLevel_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool QoSLevel_IsValid(int value);
extern const uint32_t QoSLevel_internal_data_[];
constexpr QoSLevel QoSLevel_MIN = static_cast<QoSLevel>(0);
constexpr QoSLevel QoSLevel_MAX = static_cast<QoSLevel>(4);
constexpr int QoSLevel_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor*
QoSLevel_descriptor();
template <typename T>
const std::string& QoSLevel_Name(T value) {
  static_assert(std::is_same<T, QoSLevel>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to QoSLevel_Name().");
  return QoSLevel_Name(static_cast<QoSLevel>(value));
}
template <>
inline const std::string& QoSLevel_Name(QoSLevel value) {
  return ::google::protobuf::internal::NameOfDenseEnum<QoSLevel_descriptor,
                                                 0, 4>(
      static_cast<int>(value));
}
inline bool QoSLevel_Parse(absl::string_view name, QoSLevel* value) {
  return ::google::protobuf::internal::ParseNamedEnum<QoSLevel>(
      QoSLevel_descriptor(), name, value);
}
enum DataType : int {
  DATA_TYPE_UNDEFINED = 0,
  DATA_TYPE_TEXT = 1,
  DATA_TYPE_IMAGE = 2,
  DATA_TYPE_VIDEO = 3,
  DATA_TYPE_AUDIO = 4,
  DATA_TYPE_DOCUMENT = 5,
  DATA_TYPE_METADATA = 6,
  DATA_TYPE_BINARY = 7,
  DATA_TYPE_STRUCTURED = 8,
  DATA_TYPE_STREAM = 9,
  DataType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  DataType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool DataType_IsValid(int value);
extern const uint32_t DataType_internal_data_[];
constexpr DataType DataType_MIN = static_cast<DataType>(0);
constexpr DataType DataType_MAX = static_cast<DataType>(9);
constexpr int DataType_ARRAYSIZE = 9 + 1;
const ::google::protobuf::EnumDescriptor*
DataType_descriptor();
template <typename T>
const std::string& DataType_Name(T value) {
  static_assert(std::is_same<T, DataType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to DataType_Name().");
  return DataType_Name(static_cast<DataType>(value));
}
template <>
inline const std::string& DataType_Name(DataType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<DataType_descriptor,
                                                 0, 9>(
      static_cast<int>(value));
}
inline bool DataType_Parse(absl::string_view name, DataType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DataType>(
      DataType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class Timestamp final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.common.Timestamp) */ {
 public:
  inline Timestamp() : Timestamp(nullptr) {}
  ~Timestamp() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Timestamp* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Timestamp));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Timestamp(
      ::google::protobuf::internal::ConstantInitialized);

  inline Timestamp(const Timestamp& from) : Timestamp(nullptr, from) {}
  inline Timestamp(Timestamp&& from) noexcept
      : Timestamp(nullptr, std::move(from)) {}
  inline Timestamp& operator=(const Timestamp& from) {
    CopyFrom(from);
    return *this;
  }
  inline Timestamp& operator=(Timestamp&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Timestamp& default_instance() {
    return *internal_default_instance();
  }
  static inline const Timestamp* internal_default_instance() {
    return reinterpret_cast<const Timestamp*>(
        &_Timestamp_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Timestamp& a, Timestamp& b) { a.Swap(&b); }
  inline void Swap(Timestamp* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Timestamp* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Timestamp* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Timestamp>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Timestamp& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Timestamp& from) { Timestamp::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Timestamp* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.common.Timestamp"; }

 protected:
  explicit Timestamp(::google::protobuf::Arena* arena);
  Timestamp(::google::protobuf::Arena* arena, const Timestamp& from);
  Timestamp(::google::protobuf::Arena* arena, Timestamp&& from) noexcept
      : Timestamp(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCreatedAtFieldNumber = 1,
    kUpdatedAtFieldNumber = 2,
    kAccessedAtFieldNumber = 3,
    kDeletedAtFieldNumber = 4,
    kTimezoneFieldNumber = 5,
    kPrecisionMsFieldNumber = 6,
  };
  // string created_at = 1;
  void clear_created_at() ;
  const std::string& created_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_created_at(Arg_&& arg, Args_... args);
  std::string* mutable_created_at();
  PROTOBUF_NODISCARD std::string* release_created_at();
  void set_allocated_created_at(std::string* value);

  private:
  const std::string& _internal_created_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_created_at(
      const std::string& value);
  std::string* _internal_mutable_created_at();

  public:
  // string updated_at = 2;
  void clear_updated_at() ;
  const std::string& updated_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_updated_at(Arg_&& arg, Args_... args);
  std::string* mutable_updated_at();
  PROTOBUF_NODISCARD std::string* release_updated_at();
  void set_allocated_updated_at(std::string* value);

  private:
  const std::string& _internal_updated_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_updated_at(
      const std::string& value);
  std::string* _internal_mutable_updated_at();

  public:
  // string accessed_at = 3;
  void clear_accessed_at() ;
  const std::string& accessed_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accessed_at(Arg_&& arg, Args_... args);
  std::string* mutable_accessed_at();
  PROTOBUF_NODISCARD std::string* release_accessed_at();
  void set_allocated_accessed_at(std::string* value);

  private:
  const std::string& _internal_accessed_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accessed_at(
      const std::string& value);
  std::string* _internal_mutable_accessed_at();

  public:
  // string deleted_at = 4;
  void clear_deleted_at() ;
  const std::string& deleted_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_deleted_at(Arg_&& arg, Args_... args);
  std::string* mutable_deleted_at();
  PROTOBUF_NODISCARD std::string* release_deleted_at();
  void set_allocated_deleted_at(std::string* value);

  private:
  const std::string& _internal_deleted_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_deleted_at(
      const std::string& value);
  std::string* _internal_mutable_deleted_at();

  public:
  // string timezone = 5;
  void clear_timezone() ;
  const std::string& timezone() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_timezone(Arg_&& arg, Args_... args);
  std::string* mutable_timezone();
  PROTOBUF_NODISCARD std::string* release_timezone();
  void set_allocated_timezone(std::string* value);

  private:
  const std::string& _internal_timezone() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_timezone(
      const std::string& value);
  std::string* _internal_mutable_timezone();

  public:
  // int32 precision_ms = 6;
  void clear_precision_ms() ;
  ::int32_t precision_ms() const;
  void set_precision_ms(::int32_t value);

  private:
  ::int32_t _internal_precision_ms() const;
  void _internal_set_precision_ms(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.common.Timestamp)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      80, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Timestamp& from_msg);
    ::google::protobuf::internal::ArenaStringPtr created_at_;
    ::google::protobuf::internal::ArenaStringPtr updated_at_;
    ::google::protobuf::internal::ArenaStringPtr accessed_at_;
    ::google::protobuf::internal::ArenaStringPtr deleted_at_;
    ::google::protobuf::internal::ArenaStringPtr timezone_;
    ::int32_t precision_ms_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2eproto;
};
// -------------------------------------------------------------------

class ThreatDetectionLog_MetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  ThreatDetectionLog_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ThreatDetectionLog_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit ThreatDetectionLog_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const ThreatDetectionLog_MetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const ThreatDetectionLog_MetadataEntry_DoNotUse*>(
        &_ThreatDetectionLog_MetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_common_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      62, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class StandardResponse_MetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  StandardResponse_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StandardResponse_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit StandardResponse_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const StandardResponse_MetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const StandardResponse_MetadataEntry_DoNotUse*>(
        &_StandardResponse_MetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_common_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      60, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class NetworkStatusResponse_ResponseMetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  NetworkStatusResponse_ResponseMetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NetworkStatusResponse_ResponseMetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit NetworkStatusResponse_ResponseMetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const NetworkStatusResponse_ResponseMetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const NetworkStatusResponse_ResponseMetadataEntry_DoNotUse*>(
        &_NetworkStatusResponse_ResponseMetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_common_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      73, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class NetworkStatusRequest_OptionsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  NetworkStatusRequest_OptionsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NetworkStatusRequest_OptionsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit NetworkStatusRequest_OptionsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const NetworkStatusRequest_OptionsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const NetworkStatusRequest_OptionsEntry_DoNotUse*>(
        &_NetworkStatusRequest_OptionsEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_common_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      63, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class NetworkPerformanceSummary final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.common.NetworkPerformanceSummary) */ {
 public:
  inline NetworkPerformanceSummary() : NetworkPerformanceSummary(nullptr) {}
  ~NetworkPerformanceSummary() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(NetworkPerformanceSummary* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(NetworkPerformanceSummary));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NetworkPerformanceSummary(
      ::google::protobuf::internal::ConstantInitialized);

  inline NetworkPerformanceSummary(const NetworkPerformanceSummary& from) : NetworkPerformanceSummary(nullptr, from) {}
  inline NetworkPerformanceSummary(NetworkPerformanceSummary&& from) noexcept
      : NetworkPerformanceSummary(nullptr, std::move(from)) {}
  inline NetworkPerformanceSummary& operator=(const NetworkPerformanceSummary& from) {
    CopyFrom(from);
    return *this;
  }
  inline NetworkPerformanceSummary& operator=(NetworkPerformanceSummary&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NetworkPerformanceSummary& default_instance() {
    return *internal_default_instance();
  }
  static inline const NetworkPerformanceSummary* internal_default_instance() {
    return reinterpret_cast<const NetworkPerformanceSummary*>(
        &_NetworkPerformanceSummary_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(NetworkPerformanceSummary& a, NetworkPerformanceSummary& b) { a.Swap(&b); }
  inline void Swap(NetworkPerformanceSummary* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NetworkPerformanceSummary* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NetworkPerformanceSummary* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<NetworkPerformanceSummary>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NetworkPerformanceSummary& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NetworkPerformanceSummary& from) { NetworkPerformanceSummary::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(NetworkPerformanceSummary* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.common.NetworkPerformanceSummary"; }

 protected:
  explicit NetworkPerformanceSummary(::google::protobuf::Arena* arena);
  NetworkPerformanceSummary(::google::protobuf::Arena* arena, const NetworkPerformanceSummary& from);
  NetworkPerformanceSummary(::google::protobuf::Arena* arena, NetworkPerformanceSummary&& from) noexcept
      : NetworkPerformanceSummary(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTotalDataTransferredFieldNumber = 2,
    kAverageLatencyFieldNumber = 1,
  };
  // int64 total_data_transferred = 2;
  void clear_total_data_transferred() ;
  ::int64_t total_data_transferred() const;
  void set_total_data_transferred(::int64_t value);

  private:
  ::int64_t _internal_total_data_transferred() const;
  void _internal_set_total_data_transferred(::int64_t value);

  public:
  // float average_latency = 1;
  void clear_average_latency() ;
  float average_latency() const;
  void set_average_latency(float value);

  private:
  float _internal_average_latency() const;
  void _internal_set_average_latency(float value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.common.NetworkPerformanceSummary)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NetworkPerformanceSummary& from_msg);
    ::int64_t total_data_transferred_;
    float average_latency_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2eproto;
};
// -------------------------------------------------------------------

class NetworkHealthSummary final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.common.NetworkHealthSummary) */ {
 public:
  inline NetworkHealthSummary() : NetworkHealthSummary(nullptr) {}
  ~NetworkHealthSummary() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(NetworkHealthSummary* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(NetworkHealthSummary));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NetworkHealthSummary(
      ::google::protobuf::internal::ConstantInitialized);

  inline NetworkHealthSummary(const NetworkHealthSummary& from) : NetworkHealthSummary(nullptr, from) {}
  inline NetworkHealthSummary(NetworkHealthSummary&& from) noexcept
      : NetworkHealthSummary(nullptr, std::move(from)) {}
  inline NetworkHealthSummary& operator=(const NetworkHealthSummary& from) {
    CopyFrom(from);
    return *this;
  }
  inline NetworkHealthSummary& operator=(NetworkHealthSummary&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NetworkHealthSummary& default_instance() {
    return *internal_default_instance();
  }
  static inline const NetworkHealthSummary* internal_default_instance() {
    return reinterpret_cast<const NetworkHealthSummary*>(
        &_NetworkHealthSummary_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(NetworkHealthSummary& a, NetworkHealthSummary& b) { a.Swap(&b); }
  inline void Swap(NetworkHealthSummary* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NetworkHealthSummary* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NetworkHealthSummary* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<NetworkHealthSummary>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NetworkHealthSummary& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NetworkHealthSummary& from) { NetworkHealthSummary::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(NetworkHealthSummary* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.common.NetworkHealthSummary"; }

 protected:
  explicit NetworkHealthSummary(::google::protobuf::Arena* arena);
  NetworkHealthSummary(::google::protobuf::Arena* arena, const NetworkHealthSummary& from);
  NetworkHealthSummary(::google::protobuf::Arena* arena, NetworkHealthSummary&& from) noexcept
      : NetworkHealthSummary(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTotalHyphensFieldNumber = 1,
    kActiveHyphensFieldNumber = 2,
    kAverageLatencyMsFieldNumber = 3,
  };
  // int32 total_hyphens = 1;
  void clear_total_hyphens() ;
  ::int32_t total_hyphens() const;
  void set_total_hyphens(::int32_t value);

  private:
  ::int32_t _internal_total_hyphens() const;
  void _internal_set_total_hyphens(::int32_t value);

  public:
  // int32 active_hyphens = 2;
  void clear_active_hyphens() ;
  ::int32_t active_hyphens() const;
  void set_active_hyphens(::int32_t value);

  private:
  ::int32_t _internal_active_hyphens() const;
  void _internal_set_active_hyphens(::int32_t value);

  public:
  // float average_latency_ms = 3;
  void clear_average_latency_ms() ;
  float average_latency_ms() const;
  void set_average_latency_ms(float value);

  private:
  float _internal_average_latency_ms() const;
  void _internal_set_average_latency_ms(float value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.common.NetworkHealthSummary)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NetworkHealthSummary& from_msg);
    ::int32_t total_hyphens_;
    ::int32_t active_hyphens_;
    float average_latency_ms_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2eproto;
};
// -------------------------------------------------------------------

class BasicMetadata final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.common.BasicMetadata) */ {
 public:
  inline BasicMetadata() : BasicMetadata(nullptr) {}
  ~BasicMetadata() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BasicMetadata* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BasicMetadata));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BasicMetadata(
      ::google::protobuf::internal::ConstantInitialized);

  inline BasicMetadata(const BasicMetadata& from) : BasicMetadata(nullptr, from) {}
  inline BasicMetadata(BasicMetadata&& from) noexcept
      : BasicMetadata(nullptr, std::move(from)) {}
  inline BasicMetadata& operator=(const BasicMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline BasicMetadata& operator=(BasicMetadata&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BasicMetadata& default_instance() {
    return *internal_default_instance();
  }
  static inline const BasicMetadata* internal_default_instance() {
    return reinterpret_cast<const BasicMetadata*>(
        &_BasicMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(BasicMetadata& a, BasicMetadata& b) { a.Swap(&b); }
  inline void Swap(BasicMetadata* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BasicMetadata* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BasicMetadata* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BasicMetadata>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BasicMetadata& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BasicMetadata& from) { BasicMetadata::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BasicMetadata* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.common.BasicMetadata"; }

 protected:
  explicit BasicMetadata(::google::protobuf::Arena* arena);
  BasicMetadata(::google::protobuf::Arena* arena, const BasicMetadata& from);
  BasicMetadata(::google::protobuf::Arena* arena, BasicMetadata&& from) noexcept
      : BasicMetadata(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kKeyFieldNumber = 1,
    kValueFieldNumber = 2,
    kTypeFieldNumber = 3,
    kSecurityTagFieldNumber = 4,
  };
  // string key = 1;
  void clear_key() ;
  const std::string& key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key(Arg_&& arg, Args_... args);
  std::string* mutable_key();
  PROTOBUF_NODISCARD std::string* release_key();
  void set_allocated_key(std::string* value);

  private:
  const std::string& _internal_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key(
      const std::string& value);
  std::string* _internal_mutable_key();

  public:
  // string value = 2;
  void clear_value() ;
  const std::string& value() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_value(Arg_&& arg, Args_... args);
  std::string* mutable_value();
  PROTOBUF_NODISCARD std::string* release_value();
  void set_allocated_value(std::string* value);

  private:
  const std::string& _internal_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value(
      const std::string& value);
  std::string* _internal_mutable_value();

  public:
  // string type = 3;
  void clear_type() ;
  const std::string& type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_type(Arg_&& arg, Args_... args);
  std::string* mutable_type();
  PROTOBUF_NODISCARD std::string* release_type();
  void set_allocated_type(std::string* value);

  private:
  const std::string& _internal_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type(
      const std::string& value);
  std::string* _internal_mutable_type();

  public:
  // string security_tag = 4;
  void clear_security_tag() ;
  const std::string& security_tag() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_security_tag(Arg_&& arg, Args_... args);
  std::string* mutable_security_tag();
  PROTOBUF_NODISCARD std::string* release_security_tag();
  void set_allocated_security_tag(std::string* value);

  private:
  const std::string& _internal_security_tag() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_security_tag(
      const std::string& value);
  std::string* _internal_mutable_security_tag();

  public:
  // @@protoc_insertion_point(class_scope:seigr.common.BasicMetadata)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      59, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BasicMetadata& from_msg);
    ::google::protobuf::internal::ArenaStringPtr key_;
    ::google::protobuf::internal::ArenaStringPtr value_;
    ::google::protobuf::internal::ArenaStringPtr type_;
    ::google::protobuf::internal::ArenaStringPtr security_tag_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2eproto;
};
// -------------------------------------------------------------------

class ThreatDetectionLog final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.common.ThreatDetectionLog) */ {
 public:
  inline ThreatDetectionLog() : ThreatDetectionLog(nullptr) {}
  ~ThreatDetectionLog() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ThreatDetectionLog* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ThreatDetectionLog));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ThreatDetectionLog(
      ::google::protobuf::internal::ConstantInitialized);

  inline ThreatDetectionLog(const ThreatDetectionLog& from) : ThreatDetectionLog(nullptr, from) {}
  inline ThreatDetectionLog(ThreatDetectionLog&& from) noexcept
      : ThreatDetectionLog(nullptr, std::move(from)) {}
  inline ThreatDetectionLog& operator=(const ThreatDetectionLog& from) {
    CopyFrom(from);
    return *this;
  }
  inline ThreatDetectionLog& operator=(ThreatDetectionLog&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ThreatDetectionLog& default_instance() {
    return *internal_default_instance();
  }
  static inline const ThreatDetectionLog* internal_default_instance() {
    return reinterpret_cast<const ThreatDetectionLog*>(
        &_ThreatDetectionLog_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(ThreatDetectionLog& a, ThreatDetectionLog& b) { a.Swap(&b); }
  inline void Swap(ThreatDetectionLog* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ThreatDetectionLog* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ThreatDetectionLog* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ThreatDetectionLog>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ThreatDetectionLog& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ThreatDetectionLog& from) { ThreatDetectionLog::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ThreatDetectionLog* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.common.ThreatDetectionLog"; }

 protected:
  explicit ThreatDetectionLog(::google::protobuf::Arena* arena);
  ThreatDetectionLog(::google::protobuf::Arena* arena, const ThreatDetectionLog& from);
  ThreatDetectionLog(::google::protobuf::Arena* arena, ThreatDetectionLog&& from) noexcept
      : ThreatDetectionLog(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMetadataFieldNumber = 5,
    kOriginFieldNumber = 2,
    kDescriptionFieldNumber = 3,
    kResponseActionFieldNumber = 6,
    kImpactScopeFieldNumber = 9,
    kDetectionTimeFieldNumber = 4,
    kMitigationTimeFieldNumber = 8,
    kThreatLevelFieldNumber = 1,
    kMitigatedFieldNumber = 7,
  };
  // map<string, string> metadata = 5;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // string origin = 2;
  void clear_origin() ;
  const std::string& origin() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_origin(Arg_&& arg, Args_... args);
  std::string* mutable_origin();
  PROTOBUF_NODISCARD std::string* release_origin();
  void set_allocated_origin(std::string* value);

  private:
  const std::string& _internal_origin() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_origin(
      const std::string& value);
  std::string* _internal_mutable_origin();

  public:
  // string description = 3;
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // string response_action = 6;
  void clear_response_action() ;
  const std::string& response_action() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_response_action(Arg_&& arg, Args_... args);
  std::string* mutable_response_action();
  PROTOBUF_NODISCARD std::string* release_response_action();
  void set_allocated_response_action(std::string* value);

  private:
  const std::string& _internal_response_action() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_response_action(
      const std::string& value);
  std::string* _internal_mutable_response_action();

  public:
  // string impact_scope = 9;
  void clear_impact_scope() ;
  const std::string& impact_scope() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_impact_scope(Arg_&& arg, Args_... args);
  std::string* mutable_impact_scope();
  PROTOBUF_NODISCARD std::string* release_impact_scope();
  void set_allocated_impact_scope(std::string* value);

  private:
  const std::string& _internal_impact_scope() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_impact_scope(
      const std::string& value);
  std::string* _internal_mutable_impact_scope();

  public:
  // .seigr.common.Timestamp detection_time = 4;
  bool has_detection_time() const;
  void clear_detection_time() ;
  const ::seigr::common::Timestamp& detection_time() const;
  PROTOBUF_NODISCARD ::seigr::common::Timestamp* release_detection_time();
  ::seigr::common::Timestamp* mutable_detection_time();
  void set_allocated_detection_time(::seigr::common::Timestamp* value);
  void unsafe_arena_set_allocated_detection_time(::seigr::common::Timestamp* value);
  ::seigr::common::Timestamp* unsafe_arena_release_detection_time();

  private:
  const ::seigr::common::Timestamp& _internal_detection_time() const;
  ::seigr::common::Timestamp* _internal_mutable_detection_time();

  public:
  // .seigr.common.Timestamp mitigation_time = 8;
  bool has_mitigation_time() const;
  void clear_mitigation_time() ;
  const ::seigr::common::Timestamp& mitigation_time() const;
  PROTOBUF_NODISCARD ::seigr::common::Timestamp* release_mitigation_time();
  ::seigr::common::Timestamp* mutable_mitigation_time();
  void set_allocated_mitigation_time(::seigr::common::Timestamp* value);
  void unsafe_arena_set_allocated_mitigation_time(::seigr::common::Timestamp* value);
  ::seigr::common::Timestamp* unsafe_arena_release_mitigation_time();

  private:
  const ::seigr::common::Timestamp& _internal_mitigation_time() const;
  ::seigr::common::Timestamp* _internal_mutable_mitigation_time();

  public:
  // .seigr.common.ThreatLevel threat_level = 1;
  void clear_threat_level() ;
  ::seigr::common::ThreatLevel threat_level() const;
  void set_threat_level(::seigr::common::ThreatLevel value);

  private:
  ::seigr::common::ThreatLevel _internal_threat_level() const;
  void _internal_set_threat_level(::seigr::common::ThreatLevel value);

  public:
  // bool mitigated = 7;
  void clear_mitigated() ;
  bool mitigated() const;
  void set_mitigated(bool value);

  private:
  bool _internal_mitigated() const;
  void _internal_set_mitigated(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.common.ThreatDetectionLog)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 3,
      100, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ThreatDetectionLog& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<ThreatDetectionLog_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::internal::ArenaStringPtr origin_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::internal::ArenaStringPtr response_action_;
    ::google::protobuf::internal::ArenaStringPtr impact_scope_;
    ::seigr::common::Timestamp* detection_time_;
    ::seigr::common::Timestamp* mitigation_time_;
    int threat_level_;
    bool mitigated_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2eproto;
};
// -------------------------------------------------------------------

class StandardResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.common.StandardResponse) */ {
 public:
  inline StandardResponse() : StandardResponse(nullptr) {}
  ~StandardResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StandardResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StandardResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StandardResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline StandardResponse(const StandardResponse& from) : StandardResponse(nullptr, from) {}
  inline StandardResponse(StandardResponse&& from) noexcept
      : StandardResponse(nullptr, std::move(from)) {}
  inline StandardResponse& operator=(const StandardResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline StandardResponse& operator=(StandardResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StandardResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const StandardResponse* internal_default_instance() {
    return reinterpret_cast<const StandardResponse*>(
        &_StandardResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(StandardResponse& a, StandardResponse& b) { a.Swap(&b); }
  inline void Swap(StandardResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StandardResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StandardResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StandardResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StandardResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StandardResponse& from) { StandardResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StandardResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.common.StandardResponse"; }

 protected:
  explicit StandardResponse(::google::protobuf::Arena* arena);
  StandardResponse(::google::protobuf::Arena* arena, const StandardResponse& from);
  StandardResponse(::google::protobuf::Arena* arena, StandardResponse&& from) noexcept
      : StandardResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMetadataFieldNumber = 3,
    kMessageFieldNumber = 2,
    kRequestIdFieldNumber = 4,
    kStatusFieldNumber = 1,
    kThreatLevelFieldNumber = 5,
  };
  // map<string, string> metadata = 3;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // string message = 2;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // string request_id = 4;
  void clear_request_id() ;
  const std::string& request_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_request_id(Arg_&& arg, Args_... args);
  std::string* mutable_request_id();
  PROTOBUF_NODISCARD std::string* release_request_id();
  void set_allocated_request_id(std::string* value);

  private:
  const std::string& _internal_request_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_request_id(
      const std::string& value);
  std::string* _internal_mutable_request_id();

  public:
  // .seigr.common.OperationalStatus status = 1;
  void clear_status() ;
  ::seigr::common::OperationalStatus status() const;
  void set_status(::seigr::common::OperationalStatus value);

  private:
  ::seigr::common::OperationalStatus _internal_status() const;
  void _internal_set_status(::seigr::common::OperationalStatus value);

  public:
  // .seigr.common.ThreatLevel threat_level = 5;
  void clear_threat_level() ;
  ::seigr::common::ThreatLevel threat_level() const;
  void set_threat_level(::seigr::common::ThreatLevel value);

  private:
  ::seigr::common::ThreatLevel _internal_threat_level() const;
  void _internal_set_threat_level(::seigr::common::ThreatLevel value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.common.StandardResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 1,
      63, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StandardResponse& from_msg);
    ::google::protobuf::internal::MapField<StandardResponse_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::internal::ArenaStringPtr message_;
    ::google::protobuf::internal::ArenaStringPtr request_id_;
    int status_;
    int threat_level_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2eproto;
};
// -------------------------------------------------------------------

class NetworkStatusResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.common.NetworkStatusResponse) */ {
 public:
  inline NetworkStatusResponse() : NetworkStatusResponse(nullptr) {}
  ~NetworkStatusResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(NetworkStatusResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(NetworkStatusResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NetworkStatusResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline NetworkStatusResponse(const NetworkStatusResponse& from) : NetworkStatusResponse(nullptr, from) {}
  inline NetworkStatusResponse(NetworkStatusResponse&& from) noexcept
      : NetworkStatusResponse(nullptr, std::move(from)) {}
  inline NetworkStatusResponse& operator=(const NetworkStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline NetworkStatusResponse& operator=(NetworkStatusResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NetworkStatusResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const NetworkStatusResponse* internal_default_instance() {
    return reinterpret_cast<const NetworkStatusResponse*>(
        &_NetworkStatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(NetworkStatusResponse& a, NetworkStatusResponse& b) { a.Swap(&b); }
  inline void Swap(NetworkStatusResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NetworkStatusResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NetworkStatusResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<NetworkStatusResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NetworkStatusResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NetworkStatusResponse& from) { NetworkStatusResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(NetworkStatusResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.common.NetworkStatusResponse"; }

 protected:
  explicit NetworkStatusResponse(::google::protobuf::Arena* arena);
  NetworkStatusResponse(::google::protobuf::Arena* arena, const NetworkStatusResponse& from);
  NetworkStatusResponse(::google::protobuf::Arena* arena, NetworkStatusResponse&& from) noexcept
      : NetworkStatusResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHyphensFieldNumber = 2,
    kConnectivityFieldNumber = 3,
    kResponseMetadataFieldNumber = 4,
    kRequesterIdFieldNumber = 1,
  };
  // repeated string hyphens = 2;
  int hyphens_size() const;
  private:
  int _internal_hyphens_size() const;

  public:
  void clear_hyphens() ;
  const std::string& hyphens(int index) const;
  std::string* mutable_hyphens(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_hyphens(int index, Arg_&& value, Args_... args);
  std::string* add_hyphens();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_hyphens(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& hyphens() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_hyphens();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_hyphens() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_hyphens();

  public:
  // repeated string connectivity = 3;
  int connectivity_size() const;
  private:
  int _internal_connectivity_size() const;

  public:
  void clear_connectivity() ;
  const std::string& connectivity(int index) const;
  std::string* mutable_connectivity(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_connectivity(int index, Arg_&& value, Args_... args);
  std::string* add_connectivity();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_connectivity(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& connectivity() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_connectivity();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_connectivity() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_connectivity();

  public:
  // map<string, string> response_metadata = 4;
  int response_metadata_size() const;
  private:
  int _internal_response_metadata_size() const;

  public:
  void clear_response_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& response_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_response_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_response_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_response_metadata();

  public:
  // string requester_id = 1;
  void clear_requester_id() ;
  const std::string& requester_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_requester_id(Arg_&& arg, Args_... args);
  std::string* mutable_requester_id();
  PROTOBUF_NODISCARD std::string* release_requester_id();
  void set_allocated_requester_id(std::string* value);

  private:
  const std::string& _internal_requester_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_requester_id(
      const std::string& value);
  std::string* _internal_mutable_requester_id();

  public:
  // @@protoc_insertion_point(class_scope:seigr.common.NetworkStatusResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      91, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NetworkStatusResponse& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> hyphens_;
    ::google::protobuf::RepeatedPtrField<std::string> connectivity_;
    ::google::protobuf::internal::MapField<NetworkStatusResponse_ResponseMetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        response_metadata_;
    ::google::protobuf::internal::ArenaStringPtr requester_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2eproto;
};
// -------------------------------------------------------------------

class NetworkStatusRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.common.NetworkStatusRequest) */ {
 public:
  inline NetworkStatusRequest() : NetworkStatusRequest(nullptr) {}
  ~NetworkStatusRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(NetworkStatusRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(NetworkStatusRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NetworkStatusRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline NetworkStatusRequest(const NetworkStatusRequest& from) : NetworkStatusRequest(nullptr, from) {}
  inline NetworkStatusRequest(NetworkStatusRequest&& from) noexcept
      : NetworkStatusRequest(nullptr, std::move(from)) {}
  inline NetworkStatusRequest& operator=(const NetworkStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline NetworkStatusRequest& operator=(NetworkStatusRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NetworkStatusRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const NetworkStatusRequest* internal_default_instance() {
    return reinterpret_cast<const NetworkStatusRequest*>(
        &_NetworkStatusRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(NetworkStatusRequest& a, NetworkStatusRequest& b) { a.Swap(&b); }
  inline void Swap(NetworkStatusRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NetworkStatusRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NetworkStatusRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<NetworkStatusRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NetworkStatusRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NetworkStatusRequest& from) { NetworkStatusRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(NetworkStatusRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.common.NetworkStatusRequest"; }

 protected:
  explicit NetworkStatusRequest(::google::protobuf::Arena* arena);
  NetworkStatusRequest(::google::protobuf::Arena* arena, const NetworkStatusRequest& from);
  NetworkStatusRequest(::google::protobuf::Arena* arena, NetworkStatusRequest&& from) noexcept
      : NetworkStatusRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHyphenIdsFieldNumber = 2,
    kProtocolsFieldNumber = 4,
    kOptionsFieldNumber = 5,
    kRequesterIdFieldNumber = 1,
    kIncludeLatencyFieldNumber = 3,
  };
  // repeated string hyphen_ids = 2;
  int hyphen_ids_size() const;
  private:
  int _internal_hyphen_ids_size() const;

  public:
  void clear_hyphen_ids() ;
  const std::string& hyphen_ids(int index) const;
  std::string* mutable_hyphen_ids(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_hyphen_ids(int index, Arg_&& value, Args_... args);
  std::string* add_hyphen_ids();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_hyphen_ids(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& hyphen_ids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_hyphen_ids();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_hyphen_ids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_hyphen_ids();

  public:
  // repeated string protocols = 4;
  int protocols_size() const;
  private:
  int _internal_protocols_size() const;

  public:
  void clear_protocols() ;
  const std::string& protocols(int index) const;
  std::string* mutable_protocols(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_protocols(int index, Arg_&& value, Args_... args);
  std::string* add_protocols();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_protocols(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& protocols() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_protocols();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_protocols() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_protocols();

  public:
  // map<string, string> options = 5;
  int options_size() const;
  private:
  int _internal_options_size() const;

  public:
  void clear_options() ;
  const ::google::protobuf::Map<std::string, std::string>& options() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_options();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_options() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_options();

  public:
  // string requester_id = 1;
  void clear_requester_id() ;
  const std::string& requester_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_requester_id(Arg_&& arg, Args_... args);
  std::string* mutable_requester_id();
  PROTOBUF_NODISCARD std::string* release_requester_id();
  void set_allocated_requester_id(std::string* value);

  private:
  const std::string& _internal_requester_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_requester_id(
      const std::string& value);
  std::string* _internal_mutable_requester_id();

  public:
  // bool include_latency = 3;
  void clear_include_latency() ;
  bool include_latency() const;
  void set_include_latency(bool value);

  private:
  bool _internal_include_latency() const;
  void _internal_set_include_latency(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.common.NetworkStatusRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 5, 1,
      80, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NetworkStatusRequest& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> hyphen_ids_;
    ::google::protobuf::RepeatedPtrField<std::string> protocols_;
    ::google::protobuf::internal::MapField<NetworkStatusRequest_OptionsEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        options_;
    ::google::protobuf::internal::ArenaStringPtr requester_id_;
    bool include_latency_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// BasicMetadata

// string key = 1;
inline void BasicMetadata::clear_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.ClearToEmpty();
}
inline const std::string& BasicMetadata::key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.common.BasicMetadata.key)
  return _internal_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BasicMetadata::set_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.common.BasicMetadata.key)
}
inline std::string* BasicMetadata::mutable_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:seigr.common.BasicMetadata.key)
  return _s;
}
inline const std::string& BasicMetadata::_internal_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.key_.Get();
}
inline void BasicMetadata::_internal_set_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.Set(value, GetArena());
}
inline std::string* BasicMetadata::_internal_mutable_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.key_.Mutable( GetArena());
}
inline std::string* BasicMetadata::release_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.common.BasicMetadata.key)
  return _impl_.key_.Release();
}
inline void BasicMetadata::set_allocated_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.key_.IsDefault()) {
    _impl_.key_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.common.BasicMetadata.key)
}

// string value = 2;
inline void BasicMetadata::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.ClearToEmpty();
}
inline const std::string& BasicMetadata::value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.common.BasicMetadata.value)
  return _internal_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BasicMetadata::set_value(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.common.BasicMetadata.value)
}
inline std::string* BasicMetadata::mutable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:seigr.common.BasicMetadata.value)
  return _s;
}
inline const std::string& BasicMetadata::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_.Get();
}
inline void BasicMetadata::_internal_set_value(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.Set(value, GetArena());
}
inline std::string* BasicMetadata::_internal_mutable_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.value_.Mutable( GetArena());
}
inline std::string* BasicMetadata::release_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.common.BasicMetadata.value)
  return _impl_.value_.Release();
}
inline void BasicMetadata::set_allocated_value(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.value_.IsDefault()) {
    _impl_.value_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.common.BasicMetadata.value)
}

// string type = 3;
inline void BasicMetadata::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.ClearToEmpty();
}
inline const std::string& BasicMetadata::type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.common.BasicMetadata.type)
  return _internal_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BasicMetadata::set_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.common.BasicMetadata.type)
}
inline std::string* BasicMetadata::mutable_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_type();
  // @@protoc_insertion_point(field_mutable:seigr.common.BasicMetadata.type)
  return _s;
}
inline const std::string& BasicMetadata::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.type_.Get();
}
inline void BasicMetadata::_internal_set_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.Set(value, GetArena());
}
inline std::string* BasicMetadata::_internal_mutable_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.type_.Mutable( GetArena());
}
inline std::string* BasicMetadata::release_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.common.BasicMetadata.type)
  return _impl_.type_.Release();
}
inline void BasicMetadata::set_allocated_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.type_.IsDefault()) {
    _impl_.type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.common.BasicMetadata.type)
}

// string security_tag = 4;
inline void BasicMetadata::clear_security_tag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.security_tag_.ClearToEmpty();
}
inline const std::string& BasicMetadata::security_tag() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.common.BasicMetadata.security_tag)
  return _internal_security_tag();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BasicMetadata::set_security_tag(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.security_tag_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.common.BasicMetadata.security_tag)
}
inline std::string* BasicMetadata::mutable_security_tag() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_security_tag();
  // @@protoc_insertion_point(field_mutable:seigr.common.BasicMetadata.security_tag)
  return _s;
}
inline const std::string& BasicMetadata::_internal_security_tag() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.security_tag_.Get();
}
inline void BasicMetadata::_internal_set_security_tag(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.security_tag_.Set(value, GetArena());
}
inline std::string* BasicMetadata::_internal_mutable_security_tag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.security_tag_.Mutable( GetArena());
}
inline std::string* BasicMetadata::release_security_tag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.common.BasicMetadata.security_tag)
  return _impl_.security_tag_.Release();
}
inline void BasicMetadata::set_allocated_security_tag(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.security_tag_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.security_tag_.IsDefault()) {
    _impl_.security_tag_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.common.BasicMetadata.security_tag)
}

// -------------------------------------------------------------------

// Timestamp

// string created_at = 1;
inline void Timestamp::clear_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.ClearToEmpty();
}
inline const std::string& Timestamp::created_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.common.Timestamp.created_at)
  return _internal_created_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Timestamp::set_created_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.common.Timestamp.created_at)
}
inline std::string* Timestamp::mutable_created_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_created_at();
  // @@protoc_insertion_point(field_mutable:seigr.common.Timestamp.created_at)
  return _s;
}
inline const std::string& Timestamp::_internal_created_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_at_.Get();
}
inline void Timestamp::_internal_set_created_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.Set(value, GetArena());
}
inline std::string* Timestamp::_internal_mutable_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.created_at_.Mutable( GetArena());
}
inline std::string* Timestamp::release_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.common.Timestamp.created_at)
  return _impl_.created_at_.Release();
}
inline void Timestamp::set_allocated_created_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.created_at_.IsDefault()) {
    _impl_.created_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.common.Timestamp.created_at)
}

// string updated_at = 2;
inline void Timestamp::clear_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.ClearToEmpty();
}
inline const std::string& Timestamp::updated_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.common.Timestamp.updated_at)
  return _internal_updated_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Timestamp::set_updated_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.common.Timestamp.updated_at)
}
inline std::string* Timestamp::mutable_updated_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_updated_at();
  // @@protoc_insertion_point(field_mutable:seigr.common.Timestamp.updated_at)
  return _s;
}
inline const std::string& Timestamp::_internal_updated_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updated_at_.Get();
}
inline void Timestamp::_internal_set_updated_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.Set(value, GetArena());
}
inline std::string* Timestamp::_internal_mutable_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.updated_at_.Mutable( GetArena());
}
inline std::string* Timestamp::release_updated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.common.Timestamp.updated_at)
  return _impl_.updated_at_.Release();
}
inline void Timestamp::set_allocated_updated_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.updated_at_.IsDefault()) {
    _impl_.updated_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.common.Timestamp.updated_at)
}

// string accessed_at = 3;
inline void Timestamp::clear_accessed_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accessed_at_.ClearToEmpty();
}
inline const std::string& Timestamp::accessed_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.common.Timestamp.accessed_at)
  return _internal_accessed_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Timestamp::set_accessed_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accessed_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.common.Timestamp.accessed_at)
}
inline std::string* Timestamp::mutable_accessed_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accessed_at();
  // @@protoc_insertion_point(field_mutable:seigr.common.Timestamp.accessed_at)
  return _s;
}
inline const std::string& Timestamp::_internal_accessed_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accessed_at_.Get();
}
inline void Timestamp::_internal_set_accessed_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accessed_at_.Set(value, GetArena());
}
inline std::string* Timestamp::_internal_mutable_accessed_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.accessed_at_.Mutable( GetArena());
}
inline std::string* Timestamp::release_accessed_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.common.Timestamp.accessed_at)
  return _impl_.accessed_at_.Release();
}
inline void Timestamp::set_allocated_accessed_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accessed_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.accessed_at_.IsDefault()) {
    _impl_.accessed_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.common.Timestamp.accessed_at)
}

// string deleted_at = 4;
inline void Timestamp::clear_deleted_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deleted_at_.ClearToEmpty();
}
inline const std::string& Timestamp::deleted_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.common.Timestamp.deleted_at)
  return _internal_deleted_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Timestamp::set_deleted_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deleted_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.common.Timestamp.deleted_at)
}
inline std::string* Timestamp::mutable_deleted_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_deleted_at();
  // @@protoc_insertion_point(field_mutable:seigr.common.Timestamp.deleted_at)
  return _s;
}
inline const std::string& Timestamp::_internal_deleted_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.deleted_at_.Get();
}
inline void Timestamp::_internal_set_deleted_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deleted_at_.Set(value, GetArena());
}
inline std::string* Timestamp::_internal_mutable_deleted_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.deleted_at_.Mutable( GetArena());
}
inline std::string* Timestamp::release_deleted_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.common.Timestamp.deleted_at)
  return _impl_.deleted_at_.Release();
}
inline void Timestamp::set_allocated_deleted_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deleted_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.deleted_at_.IsDefault()) {
    _impl_.deleted_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.common.Timestamp.deleted_at)
}

// string timezone = 5;
inline void Timestamp::clear_timezone() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timezone_.ClearToEmpty();
}
inline const std::string& Timestamp::timezone() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.common.Timestamp.timezone)
  return _internal_timezone();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Timestamp::set_timezone(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timezone_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.common.Timestamp.timezone)
}
inline std::string* Timestamp::mutable_timezone() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_timezone();
  // @@protoc_insertion_point(field_mutable:seigr.common.Timestamp.timezone)
  return _s;
}
inline const std::string& Timestamp::_internal_timezone() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timezone_.Get();
}
inline void Timestamp::_internal_set_timezone(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timezone_.Set(value, GetArena());
}
inline std::string* Timestamp::_internal_mutable_timezone() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.timezone_.Mutable( GetArena());
}
inline std::string* Timestamp::release_timezone() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.common.Timestamp.timezone)
  return _impl_.timezone_.Release();
}
inline void Timestamp::set_allocated_timezone(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timezone_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.timezone_.IsDefault()) {
    _impl_.timezone_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.common.Timestamp.timezone)
}

// int32 precision_ms = 6;
inline void Timestamp::clear_precision_ms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.precision_ms_ = 0;
}
inline ::int32_t Timestamp::precision_ms() const {
  // @@protoc_insertion_point(field_get:seigr.common.Timestamp.precision_ms)
  return _internal_precision_ms();
}
inline void Timestamp::set_precision_ms(::int32_t value) {
  _internal_set_precision_ms(value);
  // @@protoc_insertion_point(field_set:seigr.common.Timestamp.precision_ms)
}
inline ::int32_t Timestamp::_internal_precision_ms() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.precision_ms_;
}
inline void Timestamp::_internal_set_precision_ms(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.precision_ms_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// StandardResponse

// .seigr.common.OperationalStatus status = 1;
inline void StandardResponse::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0;
}
inline ::seigr::common::OperationalStatus StandardResponse::status() const {
  // @@protoc_insertion_point(field_get:seigr.common.StandardResponse.status)
  return _internal_status();
}
inline void StandardResponse::set_status(::seigr::common::OperationalStatus value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:seigr.common.StandardResponse.status)
}
inline ::seigr::common::OperationalStatus StandardResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::common::OperationalStatus>(_impl_.status_);
}
inline void StandardResponse::_internal_set_status(::seigr::common::OperationalStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// string message = 2;
inline void StandardResponse::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& StandardResponse::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.common.StandardResponse.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StandardResponse::set_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.common.StandardResponse.message)
}
inline std::string* StandardResponse::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:seigr.common.StandardResponse.message)
  return _s;
}
inline const std::string& StandardResponse::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void StandardResponse::_internal_set_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(value, GetArena());
}
inline std::string* StandardResponse::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* StandardResponse::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.common.StandardResponse.message)
  return _impl_.message_.Release();
}
inline void StandardResponse::set_allocated_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.common.StandardResponse.message)
}

// map<string, string> metadata = 3;
inline int StandardResponse::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int StandardResponse::metadata_size() const {
  return _internal_metadata_size();
}
inline void StandardResponse::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& StandardResponse::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& StandardResponse::metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.common.StandardResponse.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* StandardResponse::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* StandardResponse::mutable_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.common.StandardResponse.metadata)
  return _internal_mutable_metadata();
}

// string request_id = 4;
inline void StandardResponse::clear_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_.ClearToEmpty();
}
inline const std::string& StandardResponse::request_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.common.StandardResponse.request_id)
  return _internal_request_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StandardResponse::set_request_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.common.StandardResponse.request_id)
}
inline std::string* StandardResponse::mutable_request_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_request_id();
  // @@protoc_insertion_point(field_mutable:seigr.common.StandardResponse.request_id)
  return _s;
}
inline const std::string& StandardResponse::_internal_request_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.request_id_.Get();
}
inline void StandardResponse::_internal_set_request_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_.Set(value, GetArena());
}
inline std::string* StandardResponse::_internal_mutable_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.request_id_.Mutable( GetArena());
}
inline std::string* StandardResponse::release_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.common.StandardResponse.request_id)
  return _impl_.request_id_.Release();
}
inline void StandardResponse::set_allocated_request_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.request_id_.IsDefault()) {
    _impl_.request_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.common.StandardResponse.request_id)
}

// .seigr.common.ThreatLevel threat_level = 5;
inline void StandardResponse::clear_threat_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.threat_level_ = 0;
}
inline ::seigr::common::ThreatLevel StandardResponse::threat_level() const {
  // @@protoc_insertion_point(field_get:seigr.common.StandardResponse.threat_level)
  return _internal_threat_level();
}
inline void StandardResponse::set_threat_level(::seigr::common::ThreatLevel value) {
  _internal_set_threat_level(value);
  // @@protoc_insertion_point(field_set:seigr.common.StandardResponse.threat_level)
}
inline ::seigr::common::ThreatLevel StandardResponse::_internal_threat_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::common::ThreatLevel>(_impl_.threat_level_);
}
inline void StandardResponse::_internal_set_threat_level(::seigr::common::ThreatLevel value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.threat_level_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ThreatDetectionLog

// .seigr.common.ThreatLevel threat_level = 1;
inline void ThreatDetectionLog::clear_threat_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.threat_level_ = 0;
}
inline ::seigr::common::ThreatLevel ThreatDetectionLog::threat_level() const {
  // @@protoc_insertion_point(field_get:seigr.common.ThreatDetectionLog.threat_level)
  return _internal_threat_level();
}
inline void ThreatDetectionLog::set_threat_level(::seigr::common::ThreatLevel value) {
  _internal_set_threat_level(value);
  // @@protoc_insertion_point(field_set:seigr.common.ThreatDetectionLog.threat_level)
}
inline ::seigr::common::ThreatLevel ThreatDetectionLog::_internal_threat_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::common::ThreatLevel>(_impl_.threat_level_);
}
inline void ThreatDetectionLog::_internal_set_threat_level(::seigr::common::ThreatLevel value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.threat_level_ = value;
}

// string origin = 2;
inline void ThreatDetectionLog::clear_origin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.origin_.ClearToEmpty();
}
inline const std::string& ThreatDetectionLog::origin() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.common.ThreatDetectionLog.origin)
  return _internal_origin();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ThreatDetectionLog::set_origin(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.origin_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.common.ThreatDetectionLog.origin)
}
inline std::string* ThreatDetectionLog::mutable_origin() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_origin();
  // @@protoc_insertion_point(field_mutable:seigr.common.ThreatDetectionLog.origin)
  return _s;
}
inline const std::string& ThreatDetectionLog::_internal_origin() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.origin_.Get();
}
inline void ThreatDetectionLog::_internal_set_origin(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.origin_.Set(value, GetArena());
}
inline std::string* ThreatDetectionLog::_internal_mutable_origin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.origin_.Mutable( GetArena());
}
inline std::string* ThreatDetectionLog::release_origin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.common.ThreatDetectionLog.origin)
  return _impl_.origin_.Release();
}
inline void ThreatDetectionLog::set_allocated_origin(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.origin_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.origin_.IsDefault()) {
    _impl_.origin_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.common.ThreatDetectionLog.origin)
}

// string description = 3;
inline void ThreatDetectionLog::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
}
inline const std::string& ThreatDetectionLog::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.common.ThreatDetectionLog.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ThreatDetectionLog::set_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.common.ThreatDetectionLog.description)
}
inline std::string* ThreatDetectionLog::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:seigr.common.ThreatDetectionLog.description)
  return _s;
}
inline const std::string& ThreatDetectionLog::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void ThreatDetectionLog::_internal_set_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(value, GetArena());
}
inline std::string* ThreatDetectionLog::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* ThreatDetectionLog::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.common.ThreatDetectionLog.description)
  return _impl_.description_.Release();
}
inline void ThreatDetectionLog::set_allocated_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.common.ThreatDetectionLog.description)
}

// .seigr.common.Timestamp detection_time = 4;
inline bool ThreatDetectionLog::has_detection_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.detection_time_ != nullptr);
  return value;
}
inline void ThreatDetectionLog::clear_detection_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.detection_time_ != nullptr) _impl_.detection_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::seigr::common::Timestamp& ThreatDetectionLog::_internal_detection_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seigr::common::Timestamp* p = _impl_.detection_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::seigr::common::Timestamp&>(::seigr::common::_Timestamp_default_instance_);
}
inline const ::seigr::common::Timestamp& ThreatDetectionLog::detection_time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.common.ThreatDetectionLog.detection_time)
  return _internal_detection_time();
}
inline void ThreatDetectionLog::unsafe_arena_set_allocated_detection_time(::seigr::common::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.detection_time_);
  }
  _impl_.detection_time_ = reinterpret_cast<::seigr::common::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seigr.common.ThreatDetectionLog.detection_time)
}
inline ::seigr::common::Timestamp* ThreatDetectionLog::release_detection_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seigr::common::Timestamp* released = _impl_.detection_time_;
  _impl_.detection_time_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seigr::common::Timestamp* ThreatDetectionLog::unsafe_arena_release_detection_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.common.ThreatDetectionLog.detection_time)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seigr::common::Timestamp* temp = _impl_.detection_time_;
  _impl_.detection_time_ = nullptr;
  return temp;
}
inline ::seigr::common::Timestamp* ThreatDetectionLog::_internal_mutable_detection_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.detection_time_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seigr::common::Timestamp>(GetArena());
    _impl_.detection_time_ = reinterpret_cast<::seigr::common::Timestamp*>(p);
  }
  return _impl_.detection_time_;
}
inline ::seigr::common::Timestamp* ThreatDetectionLog::mutable_detection_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::seigr::common::Timestamp* _msg = _internal_mutable_detection_time();
  // @@protoc_insertion_point(field_mutable:seigr.common.ThreatDetectionLog.detection_time)
  return _msg;
}
inline void ThreatDetectionLog::set_allocated_detection_time(::seigr::common::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.detection_time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.detection_time_ = reinterpret_cast<::seigr::common::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:seigr.common.ThreatDetectionLog.detection_time)
}

// map<string, string> metadata = 5;
inline int ThreatDetectionLog::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int ThreatDetectionLog::metadata_size() const {
  return _internal_metadata_size();
}
inline void ThreatDetectionLog::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& ThreatDetectionLog::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& ThreatDetectionLog::metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.common.ThreatDetectionLog.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* ThreatDetectionLog::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* ThreatDetectionLog::mutable_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.common.ThreatDetectionLog.metadata)
  return _internal_mutable_metadata();
}

// string response_action = 6;
inline void ThreatDetectionLog::clear_response_action() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.response_action_.ClearToEmpty();
}
inline const std::string& ThreatDetectionLog::response_action() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.common.ThreatDetectionLog.response_action)
  return _internal_response_action();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ThreatDetectionLog::set_response_action(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.response_action_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.common.ThreatDetectionLog.response_action)
}
inline std::string* ThreatDetectionLog::mutable_response_action() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_response_action();
  // @@protoc_insertion_point(field_mutable:seigr.common.ThreatDetectionLog.response_action)
  return _s;
}
inline const std::string& ThreatDetectionLog::_internal_response_action() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.response_action_.Get();
}
inline void ThreatDetectionLog::_internal_set_response_action(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.response_action_.Set(value, GetArena());
}
inline std::string* ThreatDetectionLog::_internal_mutable_response_action() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.response_action_.Mutable( GetArena());
}
inline std::string* ThreatDetectionLog::release_response_action() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.common.ThreatDetectionLog.response_action)
  return _impl_.response_action_.Release();
}
inline void ThreatDetectionLog::set_allocated_response_action(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.response_action_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.response_action_.IsDefault()) {
    _impl_.response_action_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.common.ThreatDetectionLog.response_action)
}

// bool mitigated = 7;
inline void ThreatDetectionLog::clear_mitigated() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mitigated_ = false;
}
inline bool ThreatDetectionLog::mitigated() const {
  // @@protoc_insertion_point(field_get:seigr.common.ThreatDetectionLog.mitigated)
  return _internal_mitigated();
}
inline void ThreatDetectionLog::set_mitigated(bool value) {
  _internal_set_mitigated(value);
  // @@protoc_insertion_point(field_set:seigr.common.ThreatDetectionLog.mitigated)
}
inline bool ThreatDetectionLog::_internal_mitigated() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mitigated_;
}
inline void ThreatDetectionLog::_internal_set_mitigated(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mitigated_ = value;
}

// .seigr.common.Timestamp mitigation_time = 8;
inline bool ThreatDetectionLog::has_mitigation_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.mitigation_time_ != nullptr);
  return value;
}
inline void ThreatDetectionLog::clear_mitigation_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.mitigation_time_ != nullptr) _impl_.mitigation_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::seigr::common::Timestamp& ThreatDetectionLog::_internal_mitigation_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seigr::common::Timestamp* p = _impl_.mitigation_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::seigr::common::Timestamp&>(::seigr::common::_Timestamp_default_instance_);
}
inline const ::seigr::common::Timestamp& ThreatDetectionLog::mitigation_time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.common.ThreatDetectionLog.mitigation_time)
  return _internal_mitigation_time();
}
inline void ThreatDetectionLog::unsafe_arena_set_allocated_mitigation_time(::seigr::common::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.mitigation_time_);
  }
  _impl_.mitigation_time_ = reinterpret_cast<::seigr::common::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seigr.common.ThreatDetectionLog.mitigation_time)
}
inline ::seigr::common::Timestamp* ThreatDetectionLog::release_mitigation_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::seigr::common::Timestamp* released = _impl_.mitigation_time_;
  _impl_.mitigation_time_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seigr::common::Timestamp* ThreatDetectionLog::unsafe_arena_release_mitigation_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.common.ThreatDetectionLog.mitigation_time)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::seigr::common::Timestamp* temp = _impl_.mitigation_time_;
  _impl_.mitigation_time_ = nullptr;
  return temp;
}
inline ::seigr::common::Timestamp* ThreatDetectionLog::_internal_mutable_mitigation_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.mitigation_time_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seigr::common::Timestamp>(GetArena());
    _impl_.mitigation_time_ = reinterpret_cast<::seigr::common::Timestamp*>(p);
  }
  return _impl_.mitigation_time_;
}
inline ::seigr::common::Timestamp* ThreatDetectionLog::mutable_mitigation_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::seigr::common::Timestamp* _msg = _internal_mutable_mitigation_time();
  // @@protoc_insertion_point(field_mutable:seigr.common.ThreatDetectionLog.mitigation_time)
  return _msg;
}
inline void ThreatDetectionLog::set_allocated_mitigation_time(::seigr::common::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.mitigation_time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.mitigation_time_ = reinterpret_cast<::seigr::common::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:seigr.common.ThreatDetectionLog.mitigation_time)
}

// string impact_scope = 9;
inline void ThreatDetectionLog::clear_impact_scope() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.impact_scope_.ClearToEmpty();
}
inline const std::string& ThreatDetectionLog::impact_scope() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.common.ThreatDetectionLog.impact_scope)
  return _internal_impact_scope();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ThreatDetectionLog::set_impact_scope(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.impact_scope_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.common.ThreatDetectionLog.impact_scope)
}
inline std::string* ThreatDetectionLog::mutable_impact_scope() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_impact_scope();
  // @@protoc_insertion_point(field_mutable:seigr.common.ThreatDetectionLog.impact_scope)
  return _s;
}
inline const std::string& ThreatDetectionLog::_internal_impact_scope() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.impact_scope_.Get();
}
inline void ThreatDetectionLog::_internal_set_impact_scope(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.impact_scope_.Set(value, GetArena());
}
inline std::string* ThreatDetectionLog::_internal_mutable_impact_scope() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.impact_scope_.Mutable( GetArena());
}
inline std::string* ThreatDetectionLog::release_impact_scope() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.common.ThreatDetectionLog.impact_scope)
  return _impl_.impact_scope_.Release();
}
inline void ThreatDetectionLog::set_allocated_impact_scope(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.impact_scope_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.impact_scope_.IsDefault()) {
    _impl_.impact_scope_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.common.ThreatDetectionLog.impact_scope)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// NetworkStatusRequest

// string requester_id = 1;
inline void NetworkStatusRequest::clear_requester_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requester_id_.ClearToEmpty();
}
inline const std::string& NetworkStatusRequest::requester_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.common.NetworkStatusRequest.requester_id)
  return _internal_requester_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NetworkStatusRequest::set_requester_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requester_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.common.NetworkStatusRequest.requester_id)
}
inline std::string* NetworkStatusRequest::mutable_requester_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_requester_id();
  // @@protoc_insertion_point(field_mutable:seigr.common.NetworkStatusRequest.requester_id)
  return _s;
}
inline const std::string& NetworkStatusRequest::_internal_requester_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.requester_id_.Get();
}
inline void NetworkStatusRequest::_internal_set_requester_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requester_id_.Set(value, GetArena());
}
inline std::string* NetworkStatusRequest::_internal_mutable_requester_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.requester_id_.Mutable( GetArena());
}
inline std::string* NetworkStatusRequest::release_requester_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.common.NetworkStatusRequest.requester_id)
  return _impl_.requester_id_.Release();
}
inline void NetworkStatusRequest::set_allocated_requester_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requester_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.requester_id_.IsDefault()) {
    _impl_.requester_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.common.NetworkStatusRequest.requester_id)
}

// repeated string hyphen_ids = 2;
inline int NetworkStatusRequest::_internal_hyphen_ids_size() const {
  return _internal_hyphen_ids().size();
}
inline int NetworkStatusRequest::hyphen_ids_size() const {
  return _internal_hyphen_ids_size();
}
inline void NetworkStatusRequest::clear_hyphen_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hyphen_ids_.Clear();
}
inline std::string* NetworkStatusRequest::add_hyphen_ids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_hyphen_ids()->Add();
  // @@protoc_insertion_point(field_add_mutable:seigr.common.NetworkStatusRequest.hyphen_ids)
  return _s;
}
inline const std::string& NetworkStatusRequest::hyphen_ids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.common.NetworkStatusRequest.hyphen_ids)
  return _internal_hyphen_ids().Get(index);
}
inline std::string* NetworkStatusRequest::mutable_hyphen_ids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.common.NetworkStatusRequest.hyphen_ids)
  return _internal_mutable_hyphen_ids()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void NetworkStatusRequest::set_hyphen_ids(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_hyphen_ids()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:seigr.common.NetworkStatusRequest.hyphen_ids)
}
template <typename Arg_, typename... Args_>
inline void NetworkStatusRequest::add_hyphen_ids(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_hyphen_ids(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seigr.common.NetworkStatusRequest.hyphen_ids)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NetworkStatusRequest::hyphen_ids() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.common.NetworkStatusRequest.hyphen_ids)
  return _internal_hyphen_ids();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NetworkStatusRequest::mutable_hyphen_ids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.common.NetworkStatusRequest.hyphen_ids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_hyphen_ids();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NetworkStatusRequest::_internal_hyphen_ids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.hyphen_ids_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NetworkStatusRequest::_internal_mutable_hyphen_ids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.hyphen_ids_;
}

// bool include_latency = 3;
inline void NetworkStatusRequest::clear_include_latency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_latency_ = false;
}
inline bool NetworkStatusRequest::include_latency() const {
  // @@protoc_insertion_point(field_get:seigr.common.NetworkStatusRequest.include_latency)
  return _internal_include_latency();
}
inline void NetworkStatusRequest::set_include_latency(bool value) {
  _internal_set_include_latency(value);
  // @@protoc_insertion_point(field_set:seigr.common.NetworkStatusRequest.include_latency)
}
inline bool NetworkStatusRequest::_internal_include_latency() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.include_latency_;
}
inline void NetworkStatusRequest::_internal_set_include_latency(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_latency_ = value;
}

// repeated string protocols = 4;
inline int NetworkStatusRequest::_internal_protocols_size() const {
  return _internal_protocols().size();
}
inline int NetworkStatusRequest::protocols_size() const {
  return _internal_protocols_size();
}
inline void NetworkStatusRequest::clear_protocols() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.protocols_.Clear();
}
inline std::string* NetworkStatusRequest::add_protocols() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_protocols()->Add();
  // @@protoc_insertion_point(field_add_mutable:seigr.common.NetworkStatusRequest.protocols)
  return _s;
}
inline const std::string& NetworkStatusRequest::protocols(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.common.NetworkStatusRequest.protocols)
  return _internal_protocols().Get(index);
}
inline std::string* NetworkStatusRequest::mutable_protocols(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.common.NetworkStatusRequest.protocols)
  return _internal_mutable_protocols()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void NetworkStatusRequest::set_protocols(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_protocols()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:seigr.common.NetworkStatusRequest.protocols)
}
template <typename Arg_, typename... Args_>
inline void NetworkStatusRequest::add_protocols(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_protocols(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seigr.common.NetworkStatusRequest.protocols)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NetworkStatusRequest::protocols() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.common.NetworkStatusRequest.protocols)
  return _internal_protocols();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NetworkStatusRequest::mutable_protocols() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.common.NetworkStatusRequest.protocols)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_protocols();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NetworkStatusRequest::_internal_protocols() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.protocols_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NetworkStatusRequest::_internal_mutable_protocols() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.protocols_;
}

// map<string, string> options = 5;
inline int NetworkStatusRequest::_internal_options_size() const {
  return _internal_options().size();
}
inline int NetworkStatusRequest::options_size() const {
  return _internal_options_size();
}
inline void NetworkStatusRequest::clear_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.options_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& NetworkStatusRequest::_internal_options() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.options_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& NetworkStatusRequest::options() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.common.NetworkStatusRequest.options)
  return _internal_options();
}
inline ::google::protobuf::Map<std::string, std::string>* NetworkStatusRequest::_internal_mutable_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.options_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* NetworkStatusRequest::mutable_options() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.common.NetworkStatusRequest.options)
  return _internal_mutable_options();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// NetworkStatusResponse

// string requester_id = 1;
inline void NetworkStatusResponse::clear_requester_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requester_id_.ClearToEmpty();
}
inline const std::string& NetworkStatusResponse::requester_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.common.NetworkStatusResponse.requester_id)
  return _internal_requester_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NetworkStatusResponse::set_requester_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requester_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.common.NetworkStatusResponse.requester_id)
}
inline std::string* NetworkStatusResponse::mutable_requester_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_requester_id();
  // @@protoc_insertion_point(field_mutable:seigr.common.NetworkStatusResponse.requester_id)
  return _s;
}
inline const std::string& NetworkStatusResponse::_internal_requester_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.requester_id_.Get();
}
inline void NetworkStatusResponse::_internal_set_requester_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requester_id_.Set(value, GetArena());
}
inline std::string* NetworkStatusResponse::_internal_mutable_requester_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.requester_id_.Mutable( GetArena());
}
inline std::string* NetworkStatusResponse::release_requester_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.common.NetworkStatusResponse.requester_id)
  return _impl_.requester_id_.Release();
}
inline void NetworkStatusResponse::set_allocated_requester_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requester_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.requester_id_.IsDefault()) {
    _impl_.requester_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.common.NetworkStatusResponse.requester_id)
}

// repeated string hyphens = 2;
inline int NetworkStatusResponse::_internal_hyphens_size() const {
  return _internal_hyphens().size();
}
inline int NetworkStatusResponse::hyphens_size() const {
  return _internal_hyphens_size();
}
inline void NetworkStatusResponse::clear_hyphens() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hyphens_.Clear();
}
inline std::string* NetworkStatusResponse::add_hyphens() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_hyphens()->Add();
  // @@protoc_insertion_point(field_add_mutable:seigr.common.NetworkStatusResponse.hyphens)
  return _s;
}
inline const std::string& NetworkStatusResponse::hyphens(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.common.NetworkStatusResponse.hyphens)
  return _internal_hyphens().Get(index);
}
inline std::string* NetworkStatusResponse::mutable_hyphens(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.common.NetworkStatusResponse.hyphens)
  return _internal_mutable_hyphens()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void NetworkStatusResponse::set_hyphens(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_hyphens()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:seigr.common.NetworkStatusResponse.hyphens)
}
template <typename Arg_, typename... Args_>
inline void NetworkStatusResponse::add_hyphens(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_hyphens(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seigr.common.NetworkStatusResponse.hyphens)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NetworkStatusResponse::hyphens() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.common.NetworkStatusResponse.hyphens)
  return _internal_hyphens();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NetworkStatusResponse::mutable_hyphens() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.common.NetworkStatusResponse.hyphens)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_hyphens();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NetworkStatusResponse::_internal_hyphens() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.hyphens_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NetworkStatusResponse::_internal_mutable_hyphens() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.hyphens_;
}

// repeated string connectivity = 3;
inline int NetworkStatusResponse::_internal_connectivity_size() const {
  return _internal_connectivity().size();
}
inline int NetworkStatusResponse::connectivity_size() const {
  return _internal_connectivity_size();
}
inline void NetworkStatusResponse::clear_connectivity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connectivity_.Clear();
}
inline std::string* NetworkStatusResponse::add_connectivity() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_connectivity()->Add();
  // @@protoc_insertion_point(field_add_mutable:seigr.common.NetworkStatusResponse.connectivity)
  return _s;
}
inline const std::string& NetworkStatusResponse::connectivity(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.common.NetworkStatusResponse.connectivity)
  return _internal_connectivity().Get(index);
}
inline std::string* NetworkStatusResponse::mutable_connectivity(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.common.NetworkStatusResponse.connectivity)
  return _internal_mutable_connectivity()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void NetworkStatusResponse::set_connectivity(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_connectivity()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:seigr.common.NetworkStatusResponse.connectivity)
}
template <typename Arg_, typename... Args_>
inline void NetworkStatusResponse::add_connectivity(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_connectivity(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seigr.common.NetworkStatusResponse.connectivity)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NetworkStatusResponse::connectivity() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.common.NetworkStatusResponse.connectivity)
  return _internal_connectivity();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NetworkStatusResponse::mutable_connectivity() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.common.NetworkStatusResponse.connectivity)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_connectivity();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NetworkStatusResponse::_internal_connectivity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.connectivity_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NetworkStatusResponse::_internal_mutable_connectivity() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.connectivity_;
}

// map<string, string> response_metadata = 4;
inline int NetworkStatusResponse::_internal_response_metadata_size() const {
  return _internal_response_metadata().size();
}
inline int NetworkStatusResponse::response_metadata_size() const {
  return _internal_response_metadata_size();
}
inline void NetworkStatusResponse::clear_response_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.response_metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& NetworkStatusResponse::_internal_response_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.response_metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& NetworkStatusResponse::response_metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.common.NetworkStatusResponse.response_metadata)
  return _internal_response_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* NetworkStatusResponse::_internal_mutable_response_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.response_metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* NetworkStatusResponse::mutable_response_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.common.NetworkStatusResponse.response_metadata)
  return _internal_mutable_response_metadata();
}

// -------------------------------------------------------------------

// NetworkHealthSummary

// int32 total_hyphens = 1;
inline void NetworkHealthSummary::clear_total_hyphens() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_hyphens_ = 0;
}
inline ::int32_t NetworkHealthSummary::total_hyphens() const {
  // @@protoc_insertion_point(field_get:seigr.common.NetworkHealthSummary.total_hyphens)
  return _internal_total_hyphens();
}
inline void NetworkHealthSummary::set_total_hyphens(::int32_t value) {
  _internal_set_total_hyphens(value);
  // @@protoc_insertion_point(field_set:seigr.common.NetworkHealthSummary.total_hyphens)
}
inline ::int32_t NetworkHealthSummary::_internal_total_hyphens() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_hyphens_;
}
inline void NetworkHealthSummary::_internal_set_total_hyphens(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_hyphens_ = value;
}

// int32 active_hyphens = 2;
inline void NetworkHealthSummary::clear_active_hyphens() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.active_hyphens_ = 0;
}
inline ::int32_t NetworkHealthSummary::active_hyphens() const {
  // @@protoc_insertion_point(field_get:seigr.common.NetworkHealthSummary.active_hyphens)
  return _internal_active_hyphens();
}
inline void NetworkHealthSummary::set_active_hyphens(::int32_t value) {
  _internal_set_active_hyphens(value);
  // @@protoc_insertion_point(field_set:seigr.common.NetworkHealthSummary.active_hyphens)
}
inline ::int32_t NetworkHealthSummary::_internal_active_hyphens() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.active_hyphens_;
}
inline void NetworkHealthSummary::_internal_set_active_hyphens(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.active_hyphens_ = value;
}

// float average_latency_ms = 3;
inline void NetworkHealthSummary::clear_average_latency_ms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.average_latency_ms_ = 0;
}
inline float NetworkHealthSummary::average_latency_ms() const {
  // @@protoc_insertion_point(field_get:seigr.common.NetworkHealthSummary.average_latency_ms)
  return _internal_average_latency_ms();
}
inline void NetworkHealthSummary::set_average_latency_ms(float value) {
  _internal_set_average_latency_ms(value);
  // @@protoc_insertion_point(field_set:seigr.common.NetworkHealthSummary.average_latency_ms)
}
inline float NetworkHealthSummary::_internal_average_latency_ms() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.average_latency_ms_;
}
inline void NetworkHealthSummary::_internal_set_average_latency_ms(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.average_latency_ms_ = value;
}

// -------------------------------------------------------------------

// NetworkPerformanceSummary

// float average_latency = 1;
inline void NetworkPerformanceSummary::clear_average_latency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.average_latency_ = 0;
}
inline float NetworkPerformanceSummary::average_latency() const {
  // @@protoc_insertion_point(field_get:seigr.common.NetworkPerformanceSummary.average_latency)
  return _internal_average_latency();
}
inline void NetworkPerformanceSummary::set_average_latency(float value) {
  _internal_set_average_latency(value);
  // @@protoc_insertion_point(field_set:seigr.common.NetworkPerformanceSummary.average_latency)
}
inline float NetworkPerformanceSummary::_internal_average_latency() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.average_latency_;
}
inline void NetworkPerformanceSummary::_internal_set_average_latency(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.average_latency_ = value;
}

// int64 total_data_transferred = 2;
inline void NetworkPerformanceSummary::clear_total_data_transferred() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_data_transferred_ = ::int64_t{0};
}
inline ::int64_t NetworkPerformanceSummary::total_data_transferred() const {
  // @@protoc_insertion_point(field_get:seigr.common.NetworkPerformanceSummary.total_data_transferred)
  return _internal_total_data_transferred();
}
inline void NetworkPerformanceSummary::set_total_data_transferred(::int64_t value) {
  _internal_set_total_data_transferred(value);
  // @@protoc_insertion_point(field_set:seigr.common.NetworkPerformanceSummary.total_data_transferred)
}
inline ::int64_t NetworkPerformanceSummary::_internal_total_data_transferred() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_data_transferred_;
}
inline void NetworkPerformanceSummary::_internal_set_total_data_transferred(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_data_transferred_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace common
}  // namespace seigr


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::seigr::common::ThreatLevel> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::seigr::common::ThreatLevel>() {
  return ::seigr::common::ThreatLevel_descriptor();
}
template <>
struct is_proto_enum<::seigr::common::OperationalStatus> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::seigr::common::OperationalStatus>() {
  return ::seigr::common::OperationalStatus_descriptor();
}
template <>
struct is_proto_enum<::seigr::common::PriorityLevel> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::seigr::common::PriorityLevel>() {
  return ::seigr::common::PriorityLevel_descriptor();
}
template <>
struct is_proto_enum<::seigr::common::QoSLevel> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::seigr::common::QoSLevel>() {
  return ::seigr::common::QoSLevel_descriptor();
}
template <>
struct is_proto_enum<::seigr::common::DataType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::seigr::common::DataType>() {
  return ::seigr::common::DataType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // common_2eproto_2epb_2eh
