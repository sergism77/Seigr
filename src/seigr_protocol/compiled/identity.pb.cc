// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: identity.proto
// Protobuf C++ Version: 5.29.2

#include "identity.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace seigr {
              template <typename>
PROTOBUF_CONSTEXPR SeigrIdentityData_VerificationMetadataEntry_DoNotUse::SeigrIdentityData_VerificationMetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : SeigrIdentityData_VerificationMetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : SeigrIdentityData_VerificationMetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SeigrIdentityData_VerificationMetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SeigrIdentityData_VerificationMetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SeigrIdentityData_VerificationMetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    SeigrIdentityData_VerificationMetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SeigrIdentityData_VerificationMetadataEntry_DoNotUseDefaultTypeInternal _SeigrIdentityData_VerificationMetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SeigrIdentityData_SecurityParametersEntry_DoNotUse::SeigrIdentityData_SecurityParametersEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : SeigrIdentityData_SecurityParametersEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : SeigrIdentityData_SecurityParametersEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SeigrIdentityData_SecurityParametersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SeigrIdentityData_SecurityParametersEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SeigrIdentityData_SecurityParametersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    SeigrIdentityData_SecurityParametersEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SeigrIdentityData_SecurityParametersEntry_DoNotUseDefaultTypeInternal _SeigrIdentityData_SecurityParametersEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SeigrIdentityData_MetadataEntry_DoNotUse::SeigrIdentityData_MetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : SeigrIdentityData_MetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : SeigrIdentityData_MetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SeigrIdentityData_MetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SeigrIdentityData_MetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SeigrIdentityData_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    SeigrIdentityData_MetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SeigrIdentityData_MetadataEntry_DoNotUseDefaultTypeInternal _SeigrIdentityData_MetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR IdentityAuditLog_MetadataEntry_DoNotUse::IdentityAuditLog_MetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : IdentityAuditLog_MetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : IdentityAuditLog_MetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct IdentityAuditLog_MetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IdentityAuditLog_MetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IdentityAuditLog_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    IdentityAuditLog_MetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IdentityAuditLog_MetadataEntry_DoNotUseDefaultTypeInternal _IdentityAuditLog_MetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR IdentityAuditLog_ActionDetailsEntry_DoNotUse::IdentityAuditLog_ActionDetailsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : IdentityAuditLog_ActionDetailsEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : IdentityAuditLog_ActionDetailsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct IdentityAuditLog_ActionDetailsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IdentityAuditLog_ActionDetailsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IdentityAuditLog_ActionDetailsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    IdentityAuditLog_ActionDetailsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IdentityAuditLog_ActionDetailsEntry_DoNotUseDefaultTypeInternal _IdentityAuditLog_ActionDetailsEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR AliasIdentity_AliasMetadataEntry_DoNotUse::AliasIdentity_AliasMetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : AliasIdentity_AliasMetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : AliasIdentity_AliasMetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct AliasIdentity_AliasMetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AliasIdentity_AliasMetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AliasIdentity_AliasMetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    AliasIdentity_AliasMetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AliasIdentity_AliasMetadataEntry_DoNotUseDefaultTypeInternal _AliasIdentity_AliasMetadataEntry_DoNotUse_default_instance_;

inline constexpr IdentityAuditLog::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : metadata_{},
        action_details_{},
        action_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        performed_by_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        details_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        compliance_tag_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR IdentityAuditLog::IdentityAuditLog(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct IdentityAuditLogDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IdentityAuditLogDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IdentityAuditLogDefaultTypeInternal() {}
  union {
    IdentityAuditLog _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IdentityAuditLogDefaultTypeInternal _IdentityAuditLog_default_instance_;

inline constexpr AliasIdentity::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : alias_access_policies_{},
        alias_metadata_{},
        related_aliases_{},
        alias_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        alias_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        alias_signature_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        expiration_timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        traceability_level_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_{static_cast< ::seigr::IdentityStatus >(0)},
        privacy_level_{static_cast< ::seigr::PrivacyLevel >(0)},
        identity_type_{static_cast< ::seigr::IdentityType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AliasIdentity::AliasIdentity(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AliasIdentityDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AliasIdentityDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AliasIdentityDefaultTypeInternal() {}
  union {
    AliasIdentity _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AliasIdentityDefaultTypeInternal _AliasIdentity_default_instance_;

inline constexpr SeigrIdentityData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : verification_metadata_{},
        access_policies_{},
        audit_logs_{},
        metadata_{},
        security_parameters_{},
        aliases_{},
        senary_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        owner_public_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        encrypted_private_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        owner_signature_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        revocation_reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        encryption_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        usb_path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        last_used_timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        security_policy_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        expiration_timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        reactivation_code_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        key_rotation_schedule_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        creation_timestamp_{::int64_t{0}},
        identity_type_{static_cast< ::seigr::IdentityType >(0)},
        status_{static_cast< ::seigr::IdentityStatus >(0)},
        verification_level_{static_cast< ::seigr::VerificationLevel >(0)},
        revoked_{false},
        usb_required_{false},
        multi_factor_enabled_{false},
        default_privacy_level_{static_cast< ::seigr::PrivacyLevel >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SeigrIdentityData::SeigrIdentityData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SeigrIdentityDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SeigrIdentityDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SeigrIdentityDataDefaultTypeInternal() {}
  union {
    SeigrIdentityData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SeigrIdentityDataDefaultTypeInternal _SeigrIdentityData_default_instance_;
}  // namespace seigr
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_identity_2eproto[4];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_identity_2eproto = nullptr;
const ::uint32_t
    TableStruct_identity_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::seigr::AliasIdentity_AliasMetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::AliasIdentity_AliasMetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::AliasIdentity_AliasMetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::AliasIdentity_AliasMetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::AliasIdentity, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::AliasIdentity, _impl_.alias_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::AliasIdentity, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::seigr::AliasIdentity, _impl_.privacy_level_),
        PROTOBUF_FIELD_OFFSET(::seigr::AliasIdentity, _impl_.identity_type_),
        PROTOBUF_FIELD_OFFSET(::seigr::AliasIdentity, _impl_.alias_name_),
        PROTOBUF_FIELD_OFFSET(::seigr::AliasIdentity, _impl_.alias_signature_),
        PROTOBUF_FIELD_OFFSET(::seigr::AliasIdentity, _impl_.alias_access_policies_),
        PROTOBUF_FIELD_OFFSET(::seigr::AliasIdentity, _impl_.alias_metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::AliasIdentity, _impl_.expiration_timestamp_),
        PROTOBUF_FIELD_OFFSET(::seigr::AliasIdentity, _impl_.related_aliases_),
        PROTOBUF_FIELD_OFFSET(::seigr::AliasIdentity, _impl_.traceability_level_),
        PROTOBUF_FIELD_OFFSET(::seigr::IdentityAuditLog_MetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::IdentityAuditLog_MetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::IdentityAuditLog_MetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::IdentityAuditLog_MetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::seigr::IdentityAuditLog_ActionDetailsEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::IdentityAuditLog_ActionDetailsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::IdentityAuditLog_ActionDetailsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::IdentityAuditLog_ActionDetailsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::IdentityAuditLog, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::IdentityAuditLog, _impl_.action_),
        PROTOBUF_FIELD_OFFSET(::seigr::IdentityAuditLog, _impl_.performed_by_),
        PROTOBUF_FIELD_OFFSET(::seigr::IdentityAuditLog, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::seigr::IdentityAuditLog, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::seigr::IdentityAuditLog, _impl_.details_),
        PROTOBUF_FIELD_OFFSET(::seigr::IdentityAuditLog, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::IdentityAuditLog, _impl_.action_details_),
        PROTOBUF_FIELD_OFFSET(::seigr::IdentityAuditLog, _impl_.compliance_tag_),
        PROTOBUF_FIELD_OFFSET(::seigr::SeigrIdentityData_VerificationMetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::SeigrIdentityData_VerificationMetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::SeigrIdentityData_VerificationMetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::SeigrIdentityData_VerificationMetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::seigr::SeigrIdentityData_MetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::SeigrIdentityData_MetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::SeigrIdentityData_MetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::SeigrIdentityData_MetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::seigr::SeigrIdentityData_SecurityParametersEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::SeigrIdentityData_SecurityParametersEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::SeigrIdentityData_SecurityParametersEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::SeigrIdentityData_SecurityParametersEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::SeigrIdentityData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::SeigrIdentityData, _impl_.creation_timestamp_),
        PROTOBUF_FIELD_OFFSET(::seigr::SeigrIdentityData, _impl_.identity_type_),
        PROTOBUF_FIELD_OFFSET(::seigr::SeigrIdentityData, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::seigr::SeigrIdentityData, _impl_.senary_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::SeigrIdentityData, _impl_.owner_public_key_),
        PROTOBUF_FIELD_OFFSET(::seigr::SeigrIdentityData, _impl_.encrypted_private_key_),
        PROTOBUF_FIELD_OFFSET(::seigr::SeigrIdentityData, _impl_.owner_signature_),
        PROTOBUF_FIELD_OFFSET(::seigr::SeigrIdentityData, _impl_.revoked_),
        PROTOBUF_FIELD_OFFSET(::seigr::SeigrIdentityData, _impl_.revocation_reason_),
        PROTOBUF_FIELD_OFFSET(::seigr::SeigrIdentityData, _impl_.verification_level_),
        PROTOBUF_FIELD_OFFSET(::seigr::SeigrIdentityData, _impl_.verification_metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::SeigrIdentityData, _impl_.access_policies_),
        PROTOBUF_FIELD_OFFSET(::seigr::SeigrIdentityData, _impl_.audit_logs_),
        PROTOBUF_FIELD_OFFSET(::seigr::SeigrIdentityData, _impl_.version_),
        PROTOBUF_FIELD_OFFSET(::seigr::SeigrIdentityData, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::SeigrIdentityData, _impl_.encryption_key_),
        PROTOBUF_FIELD_OFFSET(::seigr::SeigrIdentityData, _impl_.usb_path_),
        PROTOBUF_FIELD_OFFSET(::seigr::SeigrIdentityData, _impl_.usb_required_),
        PROTOBUF_FIELD_OFFSET(::seigr::SeigrIdentityData, _impl_.last_used_timestamp_),
        PROTOBUF_FIELD_OFFSET(::seigr::SeigrIdentityData, _impl_.security_parameters_),
        PROTOBUF_FIELD_OFFSET(::seigr::SeigrIdentityData, _impl_.multi_factor_enabled_),
        PROTOBUF_FIELD_OFFSET(::seigr::SeigrIdentityData, _impl_.security_policy_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::SeigrIdentityData, _impl_.aliases_),
        PROTOBUF_FIELD_OFFSET(::seigr::SeigrIdentityData, _impl_.expiration_timestamp_),
        PROTOBUF_FIELD_OFFSET(::seigr::SeigrIdentityData, _impl_.reactivation_code_),
        PROTOBUF_FIELD_OFFSET(::seigr::SeigrIdentityData, _impl_.key_rotation_schedule_),
        PROTOBUF_FIELD_OFFSET(::seigr::SeigrIdentityData, _impl_.default_privacy_level_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::seigr::AliasIdentity_AliasMetadataEntry_DoNotUse)},
        {12, -1, -1, sizeof(::seigr::AliasIdentity)},
        {31, 41, -1, sizeof(::seigr::IdentityAuditLog_MetadataEntry_DoNotUse)},
        {43, 53, -1, sizeof(::seigr::IdentityAuditLog_ActionDetailsEntry_DoNotUse)},
        {55, -1, -1, sizeof(::seigr::IdentityAuditLog)},
        {71, 81, -1, sizeof(::seigr::SeigrIdentityData_VerificationMetadataEntry_DoNotUse)},
        {83, 93, -1, sizeof(::seigr::SeigrIdentityData_MetadataEntry_DoNotUse)},
        {95, 105, -1, sizeof(::seigr::SeigrIdentityData_SecurityParametersEntry_DoNotUse)},
        {107, -1, -1, sizeof(::seigr::SeigrIdentityData)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::seigr::_AliasIdentity_AliasMetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::_AliasIdentity_default_instance_._instance,
    &::seigr::_IdentityAuditLog_MetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::_IdentityAuditLog_ActionDetailsEntry_DoNotUse_default_instance_._instance,
    &::seigr::_IdentityAuditLog_default_instance_._instance,
    &::seigr::_SeigrIdentityData_VerificationMetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::_SeigrIdentityData_MetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::_SeigrIdentityData_SecurityParametersEntry_DoNotUse_default_instance_._instance,
    &::seigr::_SeigrIdentityData_default_instance_._instance,
};
const char descriptor_table_protodef_identity_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\016identity.proto\022\005seigr\032\024access_control."
    "proto\"\332\003\n\rAliasIdentity\022\020\n\010alias_id\030\001 \001("
    "\t\022%\n\006status\030\002 \001(\0162\025.seigr.IdentityStatus"
    "\022*\n\rprivacy_level\030\003 \001(\0162\023.seigr.PrivacyL"
    "evel\022*\n\ridentity_type\030\004 \001(\0162\023.seigr.Iden"
    "tityType\022\022\n\nalias_name\030\005 \001(\t\022\027\n\017alias_si"
    "gnature\030\006 \001(\t\022A\n\025alias_access_policies\030\007"
    " \003(\0132\".seigr.access_control.AccessPolicy"
    "\022\?\n\016alias_metadata\030\010 \003(\0132\'.seigr.AliasId"
    "entity.AliasMetadataEntry\022\034\n\024expiration_"
    "timestamp\030\t \001(\t\022\027\n\017related_aliases\030\n \003(\t"
    "\022\032\n\022traceability_level\030\013 \001(\t\0324\n\022AliasMet"
    "adataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\002"
    "8\001\"\350\002\n\020IdentityAuditLog\022\016\n\006action\030\001 \001(\t\022"
    "\024\n\014performed_by\030\002 \001(\t\022\021\n\ttimestamp\030\003 \001(\t"
    "\022\016\n\006status\030\004 \001(\t\022\017\n\007details\030\005 \001(\t\0227\n\010met"
    "adata\030\006 \003(\0132%.seigr.IdentityAuditLog.Met"
    "adataEntry\022B\n\016action_details\030\007 \003(\0132*.sei"
    "gr.IdentityAuditLog.ActionDetailsEntry\022\026"
    "\n\016compliance_tag\030\010 \001(\t\032/\n\rMetadataEntry\022"
    "\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\0324\n\022Actio"
    "nDetailsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001("
    "\t:\0028\001\"\223\t\n\021SeigrIdentityData\022\032\n\022creation_"
    "timestamp\030\001 \001(\003\022*\n\ridentity_type\030\002 \001(\0162\023"
    ".seigr.IdentityType\022%\n\006status\030\003 \001(\0162\025.se"
    "igr.IdentityStatus\022\021\n\tsenary_id\030\004 \001(\014\022\030\n"
    "\020owner_public_key\030\005 \001(\014\022\035\n\025encrypted_pri"
    "vate_key\030\006 \001(\014\022\027\n\017owner_signature\030\007 \001(\014\022"
    "\017\n\007revoked\030\010 \001(\010\022\031\n\021revocation_reason\030\t "
    "\001(\t\0224\n\022verification_level\030\n \001(\0162\030.seigr."
    "VerificationLevel\022Q\n\025verification_metada"
    "ta\030\013 \003(\01322.seigr.SeigrIdentityData.Verif"
    "icationMetadataEntry\022;\n\017access_policies\030"
    "\014 \003(\0132\".seigr.access_control.AccessPolic"
    "y\022+\n\naudit_logs\030\r \003(\0132\027.seigr.IdentityAu"
    "ditLog\022\017\n\007version\030\016 \001(\t\0228\n\010metadata\030\017 \003("
    "\0132&.seigr.SeigrIdentityData.MetadataEntr"
    "y\022\026\n\016encryption_key\030\020 \001(\014\022\020\n\010usb_path\030\021 "
    "\001(\t\022\024\n\014usb_required\030\022 \001(\010\022\033\n\023last_used_t"
    "imestamp\030\023 \001(\t\022M\n\023security_parameters\030\024 "
    "\003(\01320.seigr.SeigrIdentityData.SecurityPa"
    "rametersEntry\022\034\n\024multi_factor_enabled\030\025 "
    "\001(\010\022\032\n\022security_policy_id\030\026 \001(\t\022%\n\007alias"
    "es\030\027 \003(\0132\024.seigr.AliasIdentity\022\034\n\024expira"
    "tion_timestamp\030\030 \001(\t\022\031\n\021reactivation_cod"
    "e\030\031 \001(\t\022\035\n\025key_rotation_schedule\030\032 \001(\t\0222"
    "\n\025default_privacy_level\030\033 \001(\0162\023.seigr.Pr"
    "ivacyLevel\032;\n\031VerificationMetadataEntry\022"
    "\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\032/\n\rMetad"
    "ataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001"
    "\0329\n\027SecurityParametersEntry\022\013\n\003key\030\001 \001(\t"
    "\022\r\n\005value\030\002 \001(\t:\0028\001*\253\001\n\016IdentityStatus\022\035"
    "\n\031IDENTITY_STATUS_UNDEFINED\020\000\022\023\n\017IDENTIT"
    "Y_ACTIVE\020\001\022\026\n\022IDENTITY_SUSPENDED\020\002\022\024\n\020ID"
    "ENTITY_REVOKED\020\003\022!\n\035IDENTITY_PENDING_VER"
    "IFICATION\020\004\022\024\n\020IDENTITY_EXPIRED\020\005*\227\001\n\014Id"
    "entityType\022\033\n\027IDENTITY_TYPE_UNDEFINED\020\000\022"
    "\021\n\rIDENTITY_USER\020\001\022\023\n\017IDENTITY_SENSOR\020\002\022"
    "\023\n\017IDENTITY_SERVER\020\003\022\030\n\024IDENTITY_APPLICA"
    "TION\020\004\022\023\n\017IDENTITY_DEVICE\020\005*\225\001\n\014PrivacyL"
    "evel\022\022\n\016PRIVACY_PUBLIC\020\000\022\031\n\025PRIVACY_PART"
    "IAL_TRACE\020\001\022\032\n\026PRIVACY_SEMI_ANONYMOUS\020\002\022"
    "\032\n\026PRIVACY_FULL_ANONYMOUS\020\003\022\036\n\032PRIVACY_S"
    "ELECTIVE_EXPOSURE\020\004*\307\001\n\021VerificationLeve"
    "l\022 \n\034VERIFICATION_LEVEL_UNDEFINED\020\000\022\032\n\026V"
    "ERIFICATION_LOW_TRUST\020\001\022\035\n\031VERIFICATION_"
    "MEDIUM_TRUST\020\002\022\033\n\027VERIFICATION_HIGH_TRUS"
    "T\020\003\022\037\n\033VERIFICATION_ADMIN_VERIFIED\020\004\022\027\n\023"
    "VERIFICATION_CUSTOM\020\005b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_identity_2eproto_deps[1] =
    {
        &::descriptor_table_access_5fcontrol_2eproto,
};
static ::absl::once_flag descriptor_table_identity_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_identity_2eproto = {
    false,
    false,
    2749,
    descriptor_table_protodef_identity_2eproto,
    "identity.proto",
    &descriptor_table_identity_2eproto_once,
    descriptor_table_identity_2eproto_deps,
    1,
    9,
    schemas,
    file_default_instances,
    TableStruct_identity_2eproto::offsets,
    file_level_enum_descriptors_identity_2eproto,
    file_level_service_descriptors_identity_2eproto,
};
namespace seigr {
const ::google::protobuf::EnumDescriptor* IdentityStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_identity_2eproto);
  return file_level_enum_descriptors_identity_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t IdentityStatus_internal_data_[] = {
    393216u, 0u, };
bool IdentityStatus_IsValid(int value) {
  return 0 <= value && value <= 5;
}
const ::google::protobuf::EnumDescriptor* IdentityType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_identity_2eproto);
  return file_level_enum_descriptors_identity_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t IdentityType_internal_data_[] = {
    393216u, 0u, };
bool IdentityType_IsValid(int value) {
  return 0 <= value && value <= 5;
}
const ::google::protobuf::EnumDescriptor* PrivacyLevel_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_identity_2eproto);
  return file_level_enum_descriptors_identity_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t PrivacyLevel_internal_data_[] = {
    327680u, 0u, };
bool PrivacyLevel_IsValid(int value) {
  return 0 <= value && value <= 4;
}
const ::google::protobuf::EnumDescriptor* VerificationLevel_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_identity_2eproto);
  return file_level_enum_descriptors_identity_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t VerificationLevel_internal_data_[] = {
    393216u, 0u, };
bool VerificationLevel_IsValid(int value) {
  return 0 <= value && value <= 5;
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              AliasIdentity_AliasMetadataEntry_DoNotUse::AliasIdentity_AliasMetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              AliasIdentity_AliasMetadataEntry_DoNotUse::AliasIdentity_AliasMetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              AliasIdentity_AliasMetadataEntry_DoNotUse::AliasIdentity_AliasMetadataEntry_DoNotUse() : SuperType() {}
              AliasIdentity_AliasMetadataEntry_DoNotUse::AliasIdentity_AliasMetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* AliasIdentity_AliasMetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) AliasIdentity_AliasMetadataEntry_DoNotUse(arena);
              }
              constexpr auto AliasIdentity_AliasMetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AliasIdentity_AliasMetadataEntry_DoNotUse),
                                                          alignof(AliasIdentity_AliasMetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull AliasIdentity_AliasMetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_AliasIdentity_AliasMetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &AliasIdentity_AliasMetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<AliasIdentity_AliasMetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &AliasIdentity_AliasMetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &AliasIdentity_AliasMetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(AliasIdentity_AliasMetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &AliasIdentity_AliasMetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_identity_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* AliasIdentity_AliasMetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 55, 2> AliasIdentity_AliasMetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AliasIdentity_AliasMetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::AliasIdentity_AliasMetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AliasIdentity_AliasMetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AliasIdentity_AliasMetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(AliasIdentity_AliasMetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(AliasIdentity_AliasMetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\46\3\5\0\0\0\0\0"
    "seigr.AliasIdentity.AliasMetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class AliasIdentity::_Internal {
 public:
};

void AliasIdentity::clear_alias_access_policies() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alias_access_policies_.Clear();
}
AliasIdentity::AliasIdentity(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.AliasIdentity)
}
inline PROTOBUF_NDEBUG_INLINE AliasIdentity::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::AliasIdentity& from_msg)
      : alias_access_policies_{visibility, arena, from.alias_access_policies_},
        alias_metadata_{visibility, arena, from.alias_metadata_},
        related_aliases_{visibility, arena, from.related_aliases_},
        alias_id_(arena, from.alias_id_),
        alias_name_(arena, from.alias_name_),
        alias_signature_(arena, from.alias_signature_),
        expiration_timestamp_(arena, from.expiration_timestamp_),
        traceability_level_(arena, from.traceability_level_),
        _cached_size_{0} {}

AliasIdentity::AliasIdentity(
    ::google::protobuf::Arena* arena,
    const AliasIdentity& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AliasIdentity* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, status_),
           offsetof(Impl_, identity_type_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::identity_type_));

  // @@protoc_insertion_point(copy_constructor:seigr.AliasIdentity)
}
inline PROTOBUF_NDEBUG_INLINE AliasIdentity::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : alias_access_policies_{visibility, arena},
        alias_metadata_{visibility, arena},
        related_aliases_{visibility, arena},
        alias_id_(arena),
        alias_name_(arena),
        alias_signature_(arena),
        expiration_timestamp_(arena),
        traceability_level_(arena),
        _cached_size_{0} {}

inline void AliasIdentity::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_),
           0,
           offsetof(Impl_, identity_type_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::identity_type_));
}
AliasIdentity::~AliasIdentity() {
  // @@protoc_insertion_point(destructor:seigr.AliasIdentity)
  SharedDtor(*this);
}
inline void AliasIdentity::SharedDtor(MessageLite& self) {
  AliasIdentity& this_ = static_cast<AliasIdentity&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.alias_id_.Destroy();
  this_._impl_.alias_name_.Destroy();
  this_._impl_.alias_signature_.Destroy();
  this_._impl_.expiration_timestamp_.Destroy();
  this_._impl_.traceability_level_.Destroy();
  this_._impl_.~Impl_();
}

inline void* AliasIdentity::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AliasIdentity(arena);
}
constexpr auto AliasIdentity::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(AliasIdentity, _impl_.alias_access_policies_) +
          decltype(AliasIdentity::_impl_.alias_access_policies_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(AliasIdentity, _impl_.alias_metadata_) +
          decltype(AliasIdentity::_impl_.alias_metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(AliasIdentity, _impl_.alias_metadata_) +
          decltype(AliasIdentity::_impl_.alias_metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(AliasIdentity, _impl_.related_aliases_) +
          decltype(AliasIdentity::_impl_.related_aliases_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(AliasIdentity), alignof(AliasIdentity), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&AliasIdentity::PlacementNew_,
                                 sizeof(AliasIdentity),
                                 alignof(AliasIdentity));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AliasIdentity::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AliasIdentity_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AliasIdentity::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AliasIdentity>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AliasIdentity::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AliasIdentity>(), &AliasIdentity::ByteSizeLong,
            &AliasIdentity::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AliasIdentity, _impl_._cached_size_),
        false,
    },
    &AliasIdentity::kDescriptorMethods,
    &descriptor_table_identity_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AliasIdentity::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 2, 136, 2> AliasIdentity::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::AliasIdentity>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string alias_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AliasIdentity, _impl_.alias_id_)}},
    // .seigr.IdentityStatus status = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AliasIdentity, _impl_.status_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(AliasIdentity, _impl_.status_)}},
    // .seigr.PrivacyLevel privacy_level = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AliasIdentity, _impl_.privacy_level_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(AliasIdentity, _impl_.privacy_level_)}},
    // .seigr.IdentityType identity_type = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AliasIdentity, _impl_.identity_type_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(AliasIdentity, _impl_.identity_type_)}},
    // string alias_name = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(AliasIdentity, _impl_.alias_name_)}},
    // string alias_signature = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(AliasIdentity, _impl_.alias_signature_)}},
    // repeated .seigr.access_control.AccessPolicy alias_access_policies = 7;
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(AliasIdentity, _impl_.alias_access_policies_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string expiration_timestamp = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(AliasIdentity, _impl_.expiration_timestamp_)}},
    // repeated string related_aliases = 10;
    {::_pbi::TcParser::FastUR1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(AliasIdentity, _impl_.related_aliases_)}},
    // string traceability_level = 11;
    {::_pbi::TcParser::FastUS1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(AliasIdentity, _impl_.traceability_level_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string alias_id = 1;
    {PROTOBUF_FIELD_OFFSET(AliasIdentity, _impl_.alias_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.IdentityStatus status = 2;
    {PROTOBUF_FIELD_OFFSET(AliasIdentity, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .seigr.PrivacyLevel privacy_level = 3;
    {PROTOBUF_FIELD_OFFSET(AliasIdentity, _impl_.privacy_level_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .seigr.IdentityType identity_type = 4;
    {PROTOBUF_FIELD_OFFSET(AliasIdentity, _impl_.identity_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string alias_name = 5;
    {PROTOBUF_FIELD_OFFSET(AliasIdentity, _impl_.alias_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string alias_signature = 6;
    {PROTOBUF_FIELD_OFFSET(AliasIdentity, _impl_.alias_signature_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .seigr.access_control.AccessPolicy alias_access_policies = 7;
    {PROTOBUF_FIELD_OFFSET(AliasIdentity, _impl_.alias_access_policies_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<string, string> alias_metadata = 8;
    {PROTOBUF_FIELD_OFFSET(AliasIdentity, _impl_.alias_metadata_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string expiration_timestamp = 9;
    {PROTOBUF_FIELD_OFFSET(AliasIdentity, _impl_.expiration_timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string related_aliases = 10;
    {PROTOBUF_FIELD_OFFSET(AliasIdentity, _impl_.related_aliases_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // string traceability_level = 11;
    {PROTOBUF_FIELD_OFFSET(AliasIdentity, _impl_.traceability_level_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::seigr::access_control::AccessPolicy>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(AliasIdentity()._impl_.alias_metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\23\10\0\0\0\12\17\0\16\24\17\22\0\0\0\0"
    "seigr.AliasIdentity"
    "alias_id"
    "alias_name"
    "alias_signature"
    "alias_metadata"
    "expiration_timestamp"
    "related_aliases"
    "traceability_level"
  }},
};

PROTOBUF_NOINLINE void AliasIdentity::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.AliasIdentity)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.alias_access_policies_.Clear();
  _impl_.alias_metadata_.Clear();
  _impl_.related_aliases_.Clear();
  _impl_.alias_id_.ClearToEmpty();
  _impl_.alias_name_.ClearToEmpty();
  _impl_.alias_signature_.ClearToEmpty();
  _impl_.expiration_timestamp_.ClearToEmpty();
  _impl_.traceability_level_.ClearToEmpty();
  ::memset(&_impl_.status_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.identity_type_) -
      reinterpret_cast<char*>(&_impl_.status_)) + sizeof(_impl_.identity_type_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AliasIdentity::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AliasIdentity& this_ = static_cast<const AliasIdentity&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AliasIdentity::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AliasIdentity& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.AliasIdentity)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string alias_id = 1;
          if (!this_._internal_alias_id().empty()) {
            const std::string& _s = this_._internal_alias_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.AliasIdentity.alias_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // .seigr.IdentityStatus status = 2;
          if (this_._internal_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_status(), target);
          }

          // .seigr.PrivacyLevel privacy_level = 3;
          if (this_._internal_privacy_level() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_privacy_level(), target);
          }

          // .seigr.IdentityType identity_type = 4;
          if (this_._internal_identity_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                4, this_._internal_identity_type(), target);
          }

          // string alias_name = 5;
          if (!this_._internal_alias_name().empty()) {
            const std::string& _s = this_._internal_alias_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.AliasIdentity.alias_name");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string alias_signature = 6;
          if (!this_._internal_alias_signature().empty()) {
            const std::string& _s = this_._internal_alias_signature();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.AliasIdentity.alias_signature");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // repeated .seigr.access_control.AccessPolicy alias_access_policies = 7;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_alias_access_policies_size());
               i < n; i++) {
            const auto& repfield = this_._internal_alias_access_policies().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    7, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // map<string, string> alias_metadata = 8;
          if (!this_._internal_alias_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_alias_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    8, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.AliasIdentity.alias_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.AliasIdentity.alias_metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    8, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.AliasIdentity.alias_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.AliasIdentity.alias_metadata");
              }
            }
          }

          // string expiration_timestamp = 9;
          if (!this_._internal_expiration_timestamp().empty()) {
            const std::string& _s = this_._internal_expiration_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.AliasIdentity.expiration_timestamp");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          // repeated string related_aliases = 10;
          for (int i = 0, n = this_._internal_related_aliases_size(); i < n; ++i) {
            const auto& s = this_._internal_related_aliases().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.AliasIdentity.related_aliases");
            target = stream->WriteString(10, s, target);
          }

          // string traceability_level = 11;
          if (!this_._internal_traceability_level().empty()) {
            const std::string& _s = this_._internal_traceability_level();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.AliasIdentity.traceability_level");
            target = stream->WriteStringMaybeAliased(11, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.AliasIdentity)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AliasIdentity::ByteSizeLong(const MessageLite& base) {
          const AliasIdentity& this_ = static_cast<const AliasIdentity&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AliasIdentity::ByteSizeLong() const {
          const AliasIdentity& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.AliasIdentity)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .seigr.access_control.AccessPolicy alias_access_policies = 7;
            {
              total_size += 1UL * this_._internal_alias_access_policies_size();
              for (const auto& msg : this_._internal_alias_access_policies()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // map<string, string> alias_metadata = 8;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_alias_metadata_size());
              for (const auto& entry : this_._internal_alias_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // repeated string related_aliases = 10;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_related_aliases().size());
              for (int i = 0, n = this_._internal_related_aliases().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_related_aliases().Get(i));
              }
            }
          }
           {
            // string alias_id = 1;
            if (!this_._internal_alias_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_alias_id());
            }
            // string alias_name = 5;
            if (!this_._internal_alias_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_alias_name());
            }
            // string alias_signature = 6;
            if (!this_._internal_alias_signature().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_alias_signature());
            }
            // string expiration_timestamp = 9;
            if (!this_._internal_expiration_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_expiration_timestamp());
            }
            // string traceability_level = 11;
            if (!this_._internal_traceability_level().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_traceability_level());
            }
            // .seigr.IdentityStatus status = 2;
            if (this_._internal_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
            }
            // .seigr.PrivacyLevel privacy_level = 3;
            if (this_._internal_privacy_level() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_privacy_level());
            }
            // .seigr.IdentityType identity_type = 4;
            if (this_._internal_identity_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_identity_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AliasIdentity::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AliasIdentity*>(&to_msg);
  auto& from = static_cast<const AliasIdentity&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.AliasIdentity)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_alias_access_policies()->MergeFrom(
      from._internal_alias_access_policies());
  _this->_impl_.alias_metadata_.MergeFrom(from._impl_.alias_metadata_);
  _this->_internal_mutable_related_aliases()->MergeFrom(from._internal_related_aliases());
  if (!from._internal_alias_id().empty()) {
    _this->_internal_set_alias_id(from._internal_alias_id());
  }
  if (!from._internal_alias_name().empty()) {
    _this->_internal_set_alias_name(from._internal_alias_name());
  }
  if (!from._internal_alias_signature().empty()) {
    _this->_internal_set_alias_signature(from._internal_alias_signature());
  }
  if (!from._internal_expiration_timestamp().empty()) {
    _this->_internal_set_expiration_timestamp(from._internal_expiration_timestamp());
  }
  if (!from._internal_traceability_level().empty()) {
    _this->_internal_set_traceability_level(from._internal_traceability_level());
  }
  if (from._internal_status() != 0) {
    _this->_impl_.status_ = from._impl_.status_;
  }
  if (from._internal_privacy_level() != 0) {
    _this->_impl_.privacy_level_ = from._impl_.privacy_level_;
  }
  if (from._internal_identity_type() != 0) {
    _this->_impl_.identity_type_ = from._impl_.identity_type_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AliasIdentity::CopyFrom(const AliasIdentity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.AliasIdentity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AliasIdentity::InternalSwap(AliasIdentity* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.alias_access_policies_.InternalSwap(&other->_impl_.alias_access_policies_);
  _impl_.alias_metadata_.InternalSwap(&other->_impl_.alias_metadata_);
  _impl_.related_aliases_.InternalSwap(&other->_impl_.related_aliases_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.alias_id_, &other->_impl_.alias_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.alias_name_, &other->_impl_.alias_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.alias_signature_, &other->_impl_.alias_signature_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.expiration_timestamp_, &other->_impl_.expiration_timestamp_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.traceability_level_, &other->_impl_.traceability_level_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AliasIdentity, _impl_.identity_type_)
      + sizeof(AliasIdentity::_impl_.identity_type_)
      - PROTOBUF_FIELD_OFFSET(AliasIdentity, _impl_.status_)>(
          reinterpret_cast<char*>(&_impl_.status_),
          reinterpret_cast<char*>(&other->_impl_.status_));
}

::google::protobuf::Metadata AliasIdentity::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              IdentityAuditLog_MetadataEntry_DoNotUse::IdentityAuditLog_MetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              IdentityAuditLog_MetadataEntry_DoNotUse::IdentityAuditLog_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              IdentityAuditLog_MetadataEntry_DoNotUse::IdentityAuditLog_MetadataEntry_DoNotUse() : SuperType() {}
              IdentityAuditLog_MetadataEntry_DoNotUse::IdentityAuditLog_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* IdentityAuditLog_MetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) IdentityAuditLog_MetadataEntry_DoNotUse(arena);
              }
              constexpr auto IdentityAuditLog_MetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(IdentityAuditLog_MetadataEntry_DoNotUse),
                                                          alignof(IdentityAuditLog_MetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull IdentityAuditLog_MetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_IdentityAuditLog_MetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &IdentityAuditLog_MetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<IdentityAuditLog_MetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &IdentityAuditLog_MetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &IdentityAuditLog_MetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(IdentityAuditLog_MetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &IdentityAuditLog_MetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_identity_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* IdentityAuditLog_MetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 53, 2> IdentityAuditLog_MetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(IdentityAuditLog_MetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::IdentityAuditLog_MetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(IdentityAuditLog_MetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(IdentityAuditLog_MetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(IdentityAuditLog_MetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(IdentityAuditLog_MetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\44\3\5\0\0\0\0\0"
    "seigr.IdentityAuditLog.MetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              IdentityAuditLog_ActionDetailsEntry_DoNotUse::IdentityAuditLog_ActionDetailsEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              IdentityAuditLog_ActionDetailsEntry_DoNotUse::IdentityAuditLog_ActionDetailsEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              IdentityAuditLog_ActionDetailsEntry_DoNotUse::IdentityAuditLog_ActionDetailsEntry_DoNotUse() : SuperType() {}
              IdentityAuditLog_ActionDetailsEntry_DoNotUse::IdentityAuditLog_ActionDetailsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* IdentityAuditLog_ActionDetailsEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) IdentityAuditLog_ActionDetailsEntry_DoNotUse(arena);
              }
              constexpr auto IdentityAuditLog_ActionDetailsEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(IdentityAuditLog_ActionDetailsEntry_DoNotUse),
                                                          alignof(IdentityAuditLog_ActionDetailsEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull IdentityAuditLog_ActionDetailsEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_IdentityAuditLog_ActionDetailsEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &IdentityAuditLog_ActionDetailsEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<IdentityAuditLog_ActionDetailsEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &IdentityAuditLog_ActionDetailsEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &IdentityAuditLog_ActionDetailsEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(IdentityAuditLog_ActionDetailsEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &IdentityAuditLog_ActionDetailsEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_identity_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* IdentityAuditLog_ActionDetailsEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 58, 2> IdentityAuditLog_ActionDetailsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(IdentityAuditLog_ActionDetailsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::IdentityAuditLog_ActionDetailsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(IdentityAuditLog_ActionDetailsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(IdentityAuditLog_ActionDetailsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(IdentityAuditLog_ActionDetailsEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(IdentityAuditLog_ActionDetailsEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\51\3\5\0\0\0\0\0"
    "seigr.IdentityAuditLog.ActionDetailsEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class IdentityAuditLog::_Internal {
 public:
};

IdentityAuditLog::IdentityAuditLog(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.IdentityAuditLog)
}
inline PROTOBUF_NDEBUG_INLINE IdentityAuditLog::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::IdentityAuditLog& from_msg)
      : metadata_{visibility, arena, from.metadata_},
        action_details_{visibility, arena, from.action_details_},
        action_(arena, from.action_),
        performed_by_(arena, from.performed_by_),
        timestamp_(arena, from.timestamp_),
        status_(arena, from.status_),
        details_(arena, from.details_),
        compliance_tag_(arena, from.compliance_tag_),
        _cached_size_{0} {}

IdentityAuditLog::IdentityAuditLog(
    ::google::protobuf::Arena* arena,
    const IdentityAuditLog& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  IdentityAuditLog* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:seigr.IdentityAuditLog)
}
inline PROTOBUF_NDEBUG_INLINE IdentityAuditLog::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : metadata_{visibility, arena},
        action_details_{visibility, arena},
        action_(arena),
        performed_by_(arena),
        timestamp_(arena),
        status_(arena),
        details_(arena),
        compliance_tag_(arena),
        _cached_size_{0} {}

inline void IdentityAuditLog::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
IdentityAuditLog::~IdentityAuditLog() {
  // @@protoc_insertion_point(destructor:seigr.IdentityAuditLog)
  SharedDtor(*this);
}
inline void IdentityAuditLog::SharedDtor(MessageLite& self) {
  IdentityAuditLog& this_ = static_cast<IdentityAuditLog&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.action_.Destroy();
  this_._impl_.performed_by_.Destroy();
  this_._impl_.timestamp_.Destroy();
  this_._impl_.status_.Destroy();
  this_._impl_.details_.Destroy();
  this_._impl_.compliance_tag_.Destroy();
  this_._impl_.~Impl_();
}

inline void* IdentityAuditLog::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) IdentityAuditLog(arena);
}
constexpr auto IdentityAuditLog::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(IdentityAuditLog, _impl_.metadata_) +
          decltype(IdentityAuditLog::_impl_.metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(IdentityAuditLog, _impl_.metadata_) +
          decltype(IdentityAuditLog::_impl_.metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(IdentityAuditLog, _impl_.action_details_) +
          decltype(IdentityAuditLog::_impl_.action_details_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(IdentityAuditLog, _impl_.action_details_) +
          decltype(IdentityAuditLog::_impl_.action_details_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(IdentityAuditLog), alignof(IdentityAuditLog), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&IdentityAuditLog::PlacementNew_,
                                 sizeof(IdentityAuditLog),
                                 alignof(IdentityAuditLog));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull IdentityAuditLog::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_IdentityAuditLog_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &IdentityAuditLog::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<IdentityAuditLog>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &IdentityAuditLog::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<IdentityAuditLog>(), &IdentityAuditLog::ByteSizeLong,
            &IdentityAuditLog::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(IdentityAuditLog, _impl_._cached_size_),
        false,
    },
    &IdentityAuditLog::kDescriptorMethods,
    &descriptor_table_identity_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* IdentityAuditLog::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 2, 115, 2> IdentityAuditLog::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::IdentityAuditLog>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string compliance_tag = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(IdentityAuditLog, _impl_.compliance_tag_)}},
    // string action = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(IdentityAuditLog, _impl_.action_)}},
    // string performed_by = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(IdentityAuditLog, _impl_.performed_by_)}},
    // string timestamp = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(IdentityAuditLog, _impl_.timestamp_)}},
    // string status = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(IdentityAuditLog, _impl_.status_)}},
    // string details = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(IdentityAuditLog, _impl_.details_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string action = 1;
    {PROTOBUF_FIELD_OFFSET(IdentityAuditLog, _impl_.action_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string performed_by = 2;
    {PROTOBUF_FIELD_OFFSET(IdentityAuditLog, _impl_.performed_by_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string timestamp = 3;
    {PROTOBUF_FIELD_OFFSET(IdentityAuditLog, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string status = 4;
    {PROTOBUF_FIELD_OFFSET(IdentityAuditLog, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string details = 5;
    {PROTOBUF_FIELD_OFFSET(IdentityAuditLog, _impl_.details_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> metadata = 6;
    {PROTOBUF_FIELD_OFFSET(IdentityAuditLog, _impl_.metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<string, string> action_details = 7;
    {PROTOBUF_FIELD_OFFSET(IdentityAuditLog, _impl_.action_details_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string compliance_tag = 8;
    {PROTOBUF_FIELD_OFFSET(IdentityAuditLog, _impl_.compliance_tag_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(IdentityAuditLog()._impl_.metadata_)>(
        1, 0, 0, 9,
        9)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(IdentityAuditLog()._impl_.action_details_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\26\6\14\11\6\7\10\16\16\0\0\0\0\0\0\0"
    "seigr.IdentityAuditLog"
    "action"
    "performed_by"
    "timestamp"
    "status"
    "details"
    "metadata"
    "action_details"
    "compliance_tag"
  }},
};

PROTOBUF_NOINLINE void IdentityAuditLog::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.IdentityAuditLog)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.metadata_.Clear();
  _impl_.action_details_.Clear();
  _impl_.action_.ClearToEmpty();
  _impl_.performed_by_.ClearToEmpty();
  _impl_.timestamp_.ClearToEmpty();
  _impl_.status_.ClearToEmpty();
  _impl_.details_.ClearToEmpty();
  _impl_.compliance_tag_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* IdentityAuditLog::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const IdentityAuditLog& this_ = static_cast<const IdentityAuditLog&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* IdentityAuditLog::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const IdentityAuditLog& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.IdentityAuditLog)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string action = 1;
          if (!this_._internal_action().empty()) {
            const std::string& _s = this_._internal_action();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.IdentityAuditLog.action");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string performed_by = 2;
          if (!this_._internal_performed_by().empty()) {
            const std::string& _s = this_._internal_performed_by();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.IdentityAuditLog.performed_by");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string timestamp = 3;
          if (!this_._internal_timestamp().empty()) {
            const std::string& _s = this_._internal_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.IdentityAuditLog.timestamp");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string status = 4;
          if (!this_._internal_status().empty()) {
            const std::string& _s = this_._internal_status();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.IdentityAuditLog.status");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string details = 5;
          if (!this_._internal_details().empty()) {
            const std::string& _s = this_._internal_details();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.IdentityAuditLog.details");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // map<string, string> metadata = 6;
          if (!this_._internal_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.IdentityAuditLog.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.IdentityAuditLog.metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.IdentityAuditLog.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.IdentityAuditLog.metadata");
              }
            }
          }

          // map<string, string> action_details = 7;
          if (!this_._internal_action_details().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_action_details();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.IdentityAuditLog.action_details");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.IdentityAuditLog.action_details");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.IdentityAuditLog.action_details");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.IdentityAuditLog.action_details");
              }
            }
          }

          // string compliance_tag = 8;
          if (!this_._internal_compliance_tag().empty()) {
            const std::string& _s = this_._internal_compliance_tag();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.IdentityAuditLog.compliance_tag");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.IdentityAuditLog)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t IdentityAuditLog::ByteSizeLong(const MessageLite& base) {
          const IdentityAuditLog& this_ = static_cast<const IdentityAuditLog&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t IdentityAuditLog::ByteSizeLong() const {
          const IdentityAuditLog& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.IdentityAuditLog)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> metadata = 6;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_metadata_size());
              for (const auto& entry : this_._internal_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // map<string, string> action_details = 7;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_action_details_size());
              for (const auto& entry : this_._internal_action_details()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string action = 1;
            if (!this_._internal_action().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_action());
            }
            // string performed_by = 2;
            if (!this_._internal_performed_by().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_performed_by());
            }
            // string timestamp = 3;
            if (!this_._internal_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_timestamp());
            }
            // string status = 4;
            if (!this_._internal_status().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_status());
            }
            // string details = 5;
            if (!this_._internal_details().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_details());
            }
            // string compliance_tag = 8;
            if (!this_._internal_compliance_tag().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_compliance_tag());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void IdentityAuditLog::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<IdentityAuditLog*>(&to_msg);
  auto& from = static_cast<const IdentityAuditLog&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.IdentityAuditLog)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.metadata_.MergeFrom(from._impl_.metadata_);
  _this->_impl_.action_details_.MergeFrom(from._impl_.action_details_);
  if (!from._internal_action().empty()) {
    _this->_internal_set_action(from._internal_action());
  }
  if (!from._internal_performed_by().empty()) {
    _this->_internal_set_performed_by(from._internal_performed_by());
  }
  if (!from._internal_timestamp().empty()) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (!from._internal_status().empty()) {
    _this->_internal_set_status(from._internal_status());
  }
  if (!from._internal_details().empty()) {
    _this->_internal_set_details(from._internal_details());
  }
  if (!from._internal_compliance_tag().empty()) {
    _this->_internal_set_compliance_tag(from._internal_compliance_tag());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void IdentityAuditLog::CopyFrom(const IdentityAuditLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.IdentityAuditLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void IdentityAuditLog::InternalSwap(IdentityAuditLog* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.metadata_.InternalSwap(&other->_impl_.metadata_);
  _impl_.action_details_.InternalSwap(&other->_impl_.action_details_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.action_, &other->_impl_.action_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.performed_by_, &other->_impl_.performed_by_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.timestamp_, &other->_impl_.timestamp_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.status_, &other->_impl_.status_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.details_, &other->_impl_.details_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.compliance_tag_, &other->_impl_.compliance_tag_, arena);
}

::google::protobuf::Metadata IdentityAuditLog::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              SeigrIdentityData_VerificationMetadataEntry_DoNotUse::SeigrIdentityData_VerificationMetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              SeigrIdentityData_VerificationMetadataEntry_DoNotUse::SeigrIdentityData_VerificationMetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              SeigrIdentityData_VerificationMetadataEntry_DoNotUse::SeigrIdentityData_VerificationMetadataEntry_DoNotUse() : SuperType() {}
              SeigrIdentityData_VerificationMetadataEntry_DoNotUse::SeigrIdentityData_VerificationMetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* SeigrIdentityData_VerificationMetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) SeigrIdentityData_VerificationMetadataEntry_DoNotUse(arena);
              }
              constexpr auto SeigrIdentityData_VerificationMetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SeigrIdentityData_VerificationMetadataEntry_DoNotUse),
                                                          alignof(SeigrIdentityData_VerificationMetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull SeigrIdentityData_VerificationMetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_SeigrIdentityData_VerificationMetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &SeigrIdentityData_VerificationMetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<SeigrIdentityData_VerificationMetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &SeigrIdentityData_VerificationMetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &SeigrIdentityData_VerificationMetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(SeigrIdentityData_VerificationMetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &SeigrIdentityData_VerificationMetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_identity_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* SeigrIdentityData_VerificationMetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 66, 2> SeigrIdentityData_VerificationMetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SeigrIdentityData_VerificationMetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::SeigrIdentityData_VerificationMetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SeigrIdentityData_VerificationMetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SeigrIdentityData_VerificationMetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(SeigrIdentityData_VerificationMetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(SeigrIdentityData_VerificationMetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\61\3\5\0\0\0\0\0"
    "seigr.SeigrIdentityData.VerificationMetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              SeigrIdentityData_MetadataEntry_DoNotUse::SeigrIdentityData_MetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              SeigrIdentityData_MetadataEntry_DoNotUse::SeigrIdentityData_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              SeigrIdentityData_MetadataEntry_DoNotUse::SeigrIdentityData_MetadataEntry_DoNotUse() : SuperType() {}
              SeigrIdentityData_MetadataEntry_DoNotUse::SeigrIdentityData_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* SeigrIdentityData_MetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) SeigrIdentityData_MetadataEntry_DoNotUse(arena);
              }
              constexpr auto SeigrIdentityData_MetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SeigrIdentityData_MetadataEntry_DoNotUse),
                                                          alignof(SeigrIdentityData_MetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull SeigrIdentityData_MetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_SeigrIdentityData_MetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &SeigrIdentityData_MetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<SeigrIdentityData_MetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &SeigrIdentityData_MetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &SeigrIdentityData_MetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(SeigrIdentityData_MetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &SeigrIdentityData_MetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_identity_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* SeigrIdentityData_MetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 54, 2> SeigrIdentityData_MetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SeigrIdentityData_MetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::SeigrIdentityData_MetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SeigrIdentityData_MetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SeigrIdentityData_MetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(SeigrIdentityData_MetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(SeigrIdentityData_MetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\45\3\5\0\0\0\0\0"
    "seigr.SeigrIdentityData.MetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              SeigrIdentityData_SecurityParametersEntry_DoNotUse::SeigrIdentityData_SecurityParametersEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              SeigrIdentityData_SecurityParametersEntry_DoNotUse::SeigrIdentityData_SecurityParametersEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              SeigrIdentityData_SecurityParametersEntry_DoNotUse::SeigrIdentityData_SecurityParametersEntry_DoNotUse() : SuperType() {}
              SeigrIdentityData_SecurityParametersEntry_DoNotUse::SeigrIdentityData_SecurityParametersEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* SeigrIdentityData_SecurityParametersEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) SeigrIdentityData_SecurityParametersEntry_DoNotUse(arena);
              }
              constexpr auto SeigrIdentityData_SecurityParametersEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SeigrIdentityData_SecurityParametersEntry_DoNotUse),
                                                          alignof(SeigrIdentityData_SecurityParametersEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull SeigrIdentityData_SecurityParametersEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_SeigrIdentityData_SecurityParametersEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &SeigrIdentityData_SecurityParametersEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<SeigrIdentityData_SecurityParametersEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &SeigrIdentityData_SecurityParametersEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &SeigrIdentityData_SecurityParametersEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(SeigrIdentityData_SecurityParametersEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &SeigrIdentityData_SecurityParametersEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_identity_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* SeigrIdentityData_SecurityParametersEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 64, 2> SeigrIdentityData_SecurityParametersEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SeigrIdentityData_SecurityParametersEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::SeigrIdentityData_SecurityParametersEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SeigrIdentityData_SecurityParametersEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SeigrIdentityData_SecurityParametersEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(SeigrIdentityData_SecurityParametersEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(SeigrIdentityData_SecurityParametersEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\57\3\5\0\0\0\0\0"
    "seigr.SeigrIdentityData.SecurityParametersEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class SeigrIdentityData::_Internal {
 public:
};

void SeigrIdentityData::clear_access_policies() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.access_policies_.Clear();
}
SeigrIdentityData::SeigrIdentityData(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.SeigrIdentityData)
}
inline PROTOBUF_NDEBUG_INLINE SeigrIdentityData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::SeigrIdentityData& from_msg)
      : verification_metadata_{visibility, arena, from.verification_metadata_},
        access_policies_{visibility, arena, from.access_policies_},
        audit_logs_{visibility, arena, from.audit_logs_},
        metadata_{visibility, arena, from.metadata_},
        security_parameters_{visibility, arena, from.security_parameters_},
        aliases_{visibility, arena, from.aliases_},
        senary_id_(arena, from.senary_id_),
        owner_public_key_(arena, from.owner_public_key_),
        encrypted_private_key_(arena, from.encrypted_private_key_),
        owner_signature_(arena, from.owner_signature_),
        revocation_reason_(arena, from.revocation_reason_),
        version_(arena, from.version_),
        encryption_key_(arena, from.encryption_key_),
        usb_path_(arena, from.usb_path_),
        last_used_timestamp_(arena, from.last_used_timestamp_),
        security_policy_id_(arena, from.security_policy_id_),
        expiration_timestamp_(arena, from.expiration_timestamp_),
        reactivation_code_(arena, from.reactivation_code_),
        key_rotation_schedule_(arena, from.key_rotation_schedule_),
        _cached_size_{0} {}

SeigrIdentityData::SeigrIdentityData(
    ::google::protobuf::Arena* arena,
    const SeigrIdentityData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SeigrIdentityData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, creation_timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, creation_timestamp_),
           offsetof(Impl_, default_privacy_level_) -
               offsetof(Impl_, creation_timestamp_) +
               sizeof(Impl_::default_privacy_level_));

  // @@protoc_insertion_point(copy_constructor:seigr.SeigrIdentityData)
}
inline PROTOBUF_NDEBUG_INLINE SeigrIdentityData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : verification_metadata_{visibility, arena},
        access_policies_{visibility, arena},
        audit_logs_{visibility, arena},
        metadata_{visibility, arena},
        security_parameters_{visibility, arena},
        aliases_{visibility, arena},
        senary_id_(arena),
        owner_public_key_(arena),
        encrypted_private_key_(arena),
        owner_signature_(arena),
        revocation_reason_(arena),
        version_(arena),
        encryption_key_(arena),
        usb_path_(arena),
        last_used_timestamp_(arena),
        security_policy_id_(arena),
        expiration_timestamp_(arena),
        reactivation_code_(arena),
        key_rotation_schedule_(arena),
        _cached_size_{0} {}

inline void SeigrIdentityData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, creation_timestamp_),
           0,
           offsetof(Impl_, default_privacy_level_) -
               offsetof(Impl_, creation_timestamp_) +
               sizeof(Impl_::default_privacy_level_));
}
SeigrIdentityData::~SeigrIdentityData() {
  // @@protoc_insertion_point(destructor:seigr.SeigrIdentityData)
  SharedDtor(*this);
}
inline void SeigrIdentityData::SharedDtor(MessageLite& self) {
  SeigrIdentityData& this_ = static_cast<SeigrIdentityData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.senary_id_.Destroy();
  this_._impl_.owner_public_key_.Destroy();
  this_._impl_.encrypted_private_key_.Destroy();
  this_._impl_.owner_signature_.Destroy();
  this_._impl_.revocation_reason_.Destroy();
  this_._impl_.version_.Destroy();
  this_._impl_.encryption_key_.Destroy();
  this_._impl_.usb_path_.Destroy();
  this_._impl_.last_used_timestamp_.Destroy();
  this_._impl_.security_policy_id_.Destroy();
  this_._impl_.expiration_timestamp_.Destroy();
  this_._impl_.reactivation_code_.Destroy();
  this_._impl_.key_rotation_schedule_.Destroy();
  this_._impl_.~Impl_();
}

inline void* SeigrIdentityData::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SeigrIdentityData(arena);
}
constexpr auto SeigrIdentityData::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.verification_metadata_) +
          decltype(SeigrIdentityData::_impl_.verification_metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.verification_metadata_) +
          decltype(SeigrIdentityData::_impl_.verification_metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.access_policies_) +
          decltype(SeigrIdentityData::_impl_.access_policies_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.audit_logs_) +
          decltype(SeigrIdentityData::_impl_.audit_logs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.metadata_) +
          decltype(SeigrIdentityData::_impl_.metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.metadata_) +
          decltype(SeigrIdentityData::_impl_.metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.security_parameters_) +
          decltype(SeigrIdentityData::_impl_.security_parameters_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.security_parameters_) +
          decltype(SeigrIdentityData::_impl_.security_parameters_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.aliases_) +
          decltype(SeigrIdentityData::_impl_.aliases_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(SeigrIdentityData), alignof(SeigrIdentityData), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SeigrIdentityData::PlacementNew_,
                                 sizeof(SeigrIdentityData),
                                 alignof(SeigrIdentityData));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SeigrIdentityData::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SeigrIdentityData_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SeigrIdentityData::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SeigrIdentityData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SeigrIdentityData::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SeigrIdentityData>(), &SeigrIdentityData::ByteSizeLong,
            &SeigrIdentityData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_._cached_size_),
        false,
    },
    &SeigrIdentityData::kDescriptorMethods,
    &descriptor_table_identity_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SeigrIdentityData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 27, 6, 231, 2> SeigrIdentityData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    27, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4160749568,  // skipmap
    offsetof(decltype(_table_), field_entries),
    27,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::SeigrIdentityData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int64 creation_timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SeigrIdentityData, _impl_.creation_timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.creation_timestamp_)}},
    // .seigr.IdentityType identity_type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SeigrIdentityData, _impl_.identity_type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.identity_type_)}},
    // .seigr.IdentityStatus status = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SeigrIdentityData, _impl_.status_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.status_)}},
    // bytes senary_id = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.senary_id_)}},
    // bytes owner_public_key = 5;
    {::_pbi::TcParser::FastBS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.owner_public_key_)}},
    // bytes encrypted_private_key = 6;
    {::_pbi::TcParser::FastBS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.encrypted_private_key_)}},
    // bytes owner_signature = 7;
    {::_pbi::TcParser::FastBS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.owner_signature_)}},
    // bool revoked = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SeigrIdentityData, _impl_.revoked_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.revoked_)}},
    // string revocation_reason = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.revocation_reason_)}},
    // .seigr.VerificationLevel verification_level = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SeigrIdentityData, _impl_.verification_level_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.verification_level_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .seigr.access_control.AccessPolicy access_policies = 12;
    {::_pbi::TcParser::FastMtR1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.access_policies_)}},
    // repeated .seigr.IdentityAuditLog audit_logs = 13;
    {::_pbi::TcParser::FastMtR1,
     {106, 63, 1, PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.audit_logs_)}},
    // string version = 14;
    {::_pbi::TcParser::FastUS1,
     {114, 63, 0, PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.version_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // bytes encryption_key = 16;
    {::_pbi::TcParser::FastBS2,
     {386, 63, 0, PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.encryption_key_)}},
    // string usb_path = 17;
    {::_pbi::TcParser::FastUS2,
     {394, 63, 0, PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.usb_path_)}},
    // bool usb_required = 18;
    {::_pbi::TcParser::FastV8S2,
     {400, 63, 0, PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.usb_required_)}},
    // string last_used_timestamp = 19;
    {::_pbi::TcParser::FastUS2,
     {410, 63, 0, PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.last_used_timestamp_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // bool multi_factor_enabled = 21;
    {::_pbi::TcParser::FastV8S2,
     {424, 63, 0, PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.multi_factor_enabled_)}},
    // string security_policy_id = 22;
    {::_pbi::TcParser::FastUS2,
     {434, 63, 0, PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.security_policy_id_)}},
    // repeated .seigr.AliasIdentity aliases = 23;
    {::_pbi::TcParser::FastMtR2,
     {442, 63, 2, PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.aliases_)}},
    // string expiration_timestamp = 24;
    {::_pbi::TcParser::FastUS2,
     {450, 63, 0, PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.expiration_timestamp_)}},
    // string reactivation_code = 25;
    {::_pbi::TcParser::FastUS2,
     {458, 63, 0, PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.reactivation_code_)}},
    // string key_rotation_schedule = 26;
    {::_pbi::TcParser::FastUS2,
     {466, 63, 0, PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.key_rotation_schedule_)}},
    // .seigr.PrivacyLevel default_privacy_level = 27;
    {::_pbi::TcParser::FastV32S2,
     {472, 63, 0, PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.default_privacy_level_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 creation_timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.creation_timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .seigr.IdentityType identity_type = 2;
    {PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.identity_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .seigr.IdentityStatus status = 3;
    {PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // bytes senary_id = 4;
    {PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.senary_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes owner_public_key = 5;
    {PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.owner_public_key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes encrypted_private_key = 6;
    {PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.encrypted_private_key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes owner_signature = 7;
    {PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.owner_signature_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bool revoked = 8;
    {PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.revoked_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string revocation_reason = 9;
    {PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.revocation_reason_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.VerificationLevel verification_level = 10;
    {PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.verification_level_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // map<string, string> verification_metadata = 11;
    {PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.verification_metadata_), 0, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // repeated .seigr.access_control.AccessPolicy access_policies = 12;
    {PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.access_policies_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .seigr.IdentityAuditLog audit_logs = 13;
    {PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.audit_logs_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string version = 14;
    {PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> metadata = 15;
    {PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.metadata_), 0, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // bytes encryption_key = 16;
    {PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.encryption_key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // string usb_path = 17;
    {PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.usb_path_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool usb_required = 18;
    {PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.usb_required_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string last_used_timestamp = 19;
    {PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.last_used_timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> security_parameters = 20;
    {PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.security_parameters_), 0, 5,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // bool multi_factor_enabled = 21;
    {PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.multi_factor_enabled_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string security_policy_id = 22;
    {PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.security_policy_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .seigr.AliasIdentity aliases = 23;
    {PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.aliases_), 0, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string expiration_timestamp = 24;
    {PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.expiration_timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string reactivation_code = 25;
    {PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.reactivation_code_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string key_rotation_schedule = 26;
    {PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.key_rotation_schedule_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.PrivacyLevel default_privacy_level = 27;
    {PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.default_privacy_level_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }}, {{
    {::_pbi::TcParser::GetTable<::seigr::access_control::AccessPolicy>()},
    {::_pbi::TcParser::GetTable<::seigr::IdentityAuditLog>()},
    {::_pbi::TcParser::GetTable<::seigr::AliasIdentity>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(SeigrIdentityData()._impl_.verification_metadata_)>(
        1, 0, 0, 9,
        9)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(SeigrIdentityData()._impl_.metadata_)>(
        1, 0, 0, 9,
        9)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(SeigrIdentityData()._impl_.security_parameters_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\27\0\0\0\0\0\0\0\0\21\0\25\0\0\7\10\0\10\0\23\23\0\22\0\24\21\25\0\0\0\0\0"
    "seigr.SeigrIdentityData"
    "revocation_reason"
    "verification_metadata"
    "version"
    "metadata"
    "usb_path"
    "last_used_timestamp"
    "security_parameters"
    "security_policy_id"
    "expiration_timestamp"
    "reactivation_code"
    "key_rotation_schedule"
  }},
};

PROTOBUF_NOINLINE void SeigrIdentityData::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.SeigrIdentityData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.verification_metadata_.Clear();
  _impl_.access_policies_.Clear();
  _impl_.audit_logs_.Clear();
  _impl_.metadata_.Clear();
  _impl_.security_parameters_.Clear();
  _impl_.aliases_.Clear();
  _impl_.senary_id_.ClearToEmpty();
  _impl_.owner_public_key_.ClearToEmpty();
  _impl_.encrypted_private_key_.ClearToEmpty();
  _impl_.owner_signature_.ClearToEmpty();
  _impl_.revocation_reason_.ClearToEmpty();
  _impl_.version_.ClearToEmpty();
  _impl_.encryption_key_.ClearToEmpty();
  _impl_.usb_path_.ClearToEmpty();
  _impl_.last_used_timestamp_.ClearToEmpty();
  _impl_.security_policy_id_.ClearToEmpty();
  _impl_.expiration_timestamp_.ClearToEmpty();
  _impl_.reactivation_code_.ClearToEmpty();
  _impl_.key_rotation_schedule_.ClearToEmpty();
  ::memset(&_impl_.creation_timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.default_privacy_level_) -
      reinterpret_cast<char*>(&_impl_.creation_timestamp_)) + sizeof(_impl_.default_privacy_level_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SeigrIdentityData::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SeigrIdentityData& this_ = static_cast<const SeigrIdentityData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SeigrIdentityData::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SeigrIdentityData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.SeigrIdentityData)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int64 creation_timestamp = 1;
          if (this_._internal_creation_timestamp() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<1>(
                    stream, this_._internal_creation_timestamp(), target);
          }

          // .seigr.IdentityType identity_type = 2;
          if (this_._internal_identity_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_identity_type(), target);
          }

          // .seigr.IdentityStatus status = 3;
          if (this_._internal_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_status(), target);
          }

          // bytes senary_id = 4;
          if (!this_._internal_senary_id().empty()) {
            const std::string& _s = this_._internal_senary_id();
            target = stream->WriteBytesMaybeAliased(4, _s, target);
          }

          // bytes owner_public_key = 5;
          if (!this_._internal_owner_public_key().empty()) {
            const std::string& _s = this_._internal_owner_public_key();
            target = stream->WriteBytesMaybeAliased(5, _s, target);
          }

          // bytes encrypted_private_key = 6;
          if (!this_._internal_encrypted_private_key().empty()) {
            const std::string& _s = this_._internal_encrypted_private_key();
            target = stream->WriteBytesMaybeAliased(6, _s, target);
          }

          // bytes owner_signature = 7;
          if (!this_._internal_owner_signature().empty()) {
            const std::string& _s = this_._internal_owner_signature();
            target = stream->WriteBytesMaybeAliased(7, _s, target);
          }

          // bool revoked = 8;
          if (this_._internal_revoked() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                8, this_._internal_revoked(), target);
          }

          // string revocation_reason = 9;
          if (!this_._internal_revocation_reason().empty()) {
            const std::string& _s = this_._internal_revocation_reason();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.SeigrIdentityData.revocation_reason");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          // .seigr.VerificationLevel verification_level = 10;
          if (this_._internal_verification_level() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                10, this_._internal_verification_level(), target);
          }

          // map<string, string> verification_metadata = 11;
          if (!this_._internal_verification_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_verification_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    11, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.SeigrIdentityData.verification_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.SeigrIdentityData.verification_metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    11, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.SeigrIdentityData.verification_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.SeigrIdentityData.verification_metadata");
              }
            }
          }

          // repeated .seigr.access_control.AccessPolicy access_policies = 12;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_access_policies_size());
               i < n; i++) {
            const auto& repfield = this_._internal_access_policies().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    12, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .seigr.IdentityAuditLog audit_logs = 13;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_audit_logs_size());
               i < n; i++) {
            const auto& repfield = this_._internal_audit_logs().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    13, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // string version = 14;
          if (!this_._internal_version().empty()) {
            const std::string& _s = this_._internal_version();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.SeigrIdentityData.version");
            target = stream->WriteStringMaybeAliased(14, _s, target);
          }

          // map<string, string> metadata = 15;
          if (!this_._internal_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    15, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.SeigrIdentityData.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.SeigrIdentityData.metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    15, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.SeigrIdentityData.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.SeigrIdentityData.metadata");
              }
            }
          }

          // bytes encryption_key = 16;
          if (!this_._internal_encryption_key().empty()) {
            const std::string& _s = this_._internal_encryption_key();
            target = stream->WriteBytesMaybeAliased(16, _s, target);
          }

          // string usb_path = 17;
          if (!this_._internal_usb_path().empty()) {
            const std::string& _s = this_._internal_usb_path();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.SeigrIdentityData.usb_path");
            target = stream->WriteStringMaybeAliased(17, _s, target);
          }

          // bool usb_required = 18;
          if (this_._internal_usb_required() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                18, this_._internal_usb_required(), target);
          }

          // string last_used_timestamp = 19;
          if (!this_._internal_last_used_timestamp().empty()) {
            const std::string& _s = this_._internal_last_used_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.SeigrIdentityData.last_used_timestamp");
            target = stream->WriteStringMaybeAliased(19, _s, target);
          }

          // map<string, string> security_parameters = 20;
          if (!this_._internal_security_parameters().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_security_parameters();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    20, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.SeigrIdentityData.security_parameters");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.SeigrIdentityData.security_parameters");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    20, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.SeigrIdentityData.security_parameters");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.SeigrIdentityData.security_parameters");
              }
            }
          }

          // bool multi_factor_enabled = 21;
          if (this_._internal_multi_factor_enabled() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                21, this_._internal_multi_factor_enabled(), target);
          }

          // string security_policy_id = 22;
          if (!this_._internal_security_policy_id().empty()) {
            const std::string& _s = this_._internal_security_policy_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.SeigrIdentityData.security_policy_id");
            target = stream->WriteStringMaybeAliased(22, _s, target);
          }

          // repeated .seigr.AliasIdentity aliases = 23;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_aliases_size());
               i < n; i++) {
            const auto& repfield = this_._internal_aliases().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    23, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // string expiration_timestamp = 24;
          if (!this_._internal_expiration_timestamp().empty()) {
            const std::string& _s = this_._internal_expiration_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.SeigrIdentityData.expiration_timestamp");
            target = stream->WriteStringMaybeAliased(24, _s, target);
          }

          // string reactivation_code = 25;
          if (!this_._internal_reactivation_code().empty()) {
            const std::string& _s = this_._internal_reactivation_code();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.SeigrIdentityData.reactivation_code");
            target = stream->WriteStringMaybeAliased(25, _s, target);
          }

          // string key_rotation_schedule = 26;
          if (!this_._internal_key_rotation_schedule().empty()) {
            const std::string& _s = this_._internal_key_rotation_schedule();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.SeigrIdentityData.key_rotation_schedule");
            target = stream->WriteStringMaybeAliased(26, _s, target);
          }

          // .seigr.PrivacyLevel default_privacy_level = 27;
          if (this_._internal_default_privacy_level() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                27, this_._internal_default_privacy_level(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.SeigrIdentityData)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SeigrIdentityData::ByteSizeLong(const MessageLite& base) {
          const SeigrIdentityData& this_ = static_cast<const SeigrIdentityData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SeigrIdentityData::ByteSizeLong() const {
          const SeigrIdentityData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.SeigrIdentityData)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> verification_metadata = 11;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_verification_metadata_size());
              for (const auto& entry : this_._internal_verification_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // repeated .seigr.access_control.AccessPolicy access_policies = 12;
            {
              total_size += 1UL * this_._internal_access_policies_size();
              for (const auto& msg : this_._internal_access_policies()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .seigr.IdentityAuditLog audit_logs = 13;
            {
              total_size += 1UL * this_._internal_audit_logs_size();
              for (const auto& msg : this_._internal_audit_logs()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // map<string, string> metadata = 15;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_metadata_size());
              for (const auto& entry : this_._internal_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // map<string, string> security_parameters = 20;
            {
              total_size +=
                  2 * ::google::protobuf::internal::FromIntSize(this_._internal_security_parameters_size());
              for (const auto& entry : this_._internal_security_parameters()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // repeated .seigr.AliasIdentity aliases = 23;
            {
              total_size += 2UL * this_._internal_aliases_size();
              for (const auto& msg : this_._internal_aliases()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // bytes senary_id = 4;
            if (!this_._internal_senary_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_senary_id());
            }
            // bytes owner_public_key = 5;
            if (!this_._internal_owner_public_key().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_owner_public_key());
            }
            // bytes encrypted_private_key = 6;
            if (!this_._internal_encrypted_private_key().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_encrypted_private_key());
            }
            // bytes owner_signature = 7;
            if (!this_._internal_owner_signature().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_owner_signature());
            }
            // string revocation_reason = 9;
            if (!this_._internal_revocation_reason().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_revocation_reason());
            }
            // string version = 14;
            if (!this_._internal_version().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_version());
            }
            // bytes encryption_key = 16;
            if (!this_._internal_encryption_key().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_encryption_key());
            }
            // string usb_path = 17;
            if (!this_._internal_usb_path().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_usb_path());
            }
            // string last_used_timestamp = 19;
            if (!this_._internal_last_used_timestamp().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_last_used_timestamp());
            }
            // string security_policy_id = 22;
            if (!this_._internal_security_policy_id().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_security_policy_id());
            }
            // string expiration_timestamp = 24;
            if (!this_._internal_expiration_timestamp().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_expiration_timestamp());
            }
            // string reactivation_code = 25;
            if (!this_._internal_reactivation_code().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_reactivation_code());
            }
            // string key_rotation_schedule = 26;
            if (!this_._internal_key_rotation_schedule().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_key_rotation_schedule());
            }
            // int64 creation_timestamp = 1;
            if (this_._internal_creation_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_creation_timestamp());
            }
            // .seigr.IdentityType identity_type = 2;
            if (this_._internal_identity_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_identity_type());
            }
            // .seigr.IdentityStatus status = 3;
            if (this_._internal_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
            }
            // .seigr.VerificationLevel verification_level = 10;
            if (this_._internal_verification_level() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_verification_level());
            }
            // bool revoked = 8;
            if (this_._internal_revoked() != 0) {
              total_size += 2;
            }
            // bool usb_required = 18;
            if (this_._internal_usb_required() != 0) {
              total_size += 3;
            }
            // bool multi_factor_enabled = 21;
            if (this_._internal_multi_factor_enabled() != 0) {
              total_size += 3;
            }
            // .seigr.PrivacyLevel default_privacy_level = 27;
            if (this_._internal_default_privacy_level() != 0) {
              total_size += 2 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_default_privacy_level());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SeigrIdentityData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SeigrIdentityData*>(&to_msg);
  auto& from = static_cast<const SeigrIdentityData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.SeigrIdentityData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.verification_metadata_.MergeFrom(from._impl_.verification_metadata_);
  _this->_internal_mutable_access_policies()->MergeFrom(
      from._internal_access_policies());
  _this->_internal_mutable_audit_logs()->MergeFrom(
      from._internal_audit_logs());
  _this->_impl_.metadata_.MergeFrom(from._impl_.metadata_);
  _this->_impl_.security_parameters_.MergeFrom(from._impl_.security_parameters_);
  _this->_internal_mutable_aliases()->MergeFrom(
      from._internal_aliases());
  if (!from._internal_senary_id().empty()) {
    _this->_internal_set_senary_id(from._internal_senary_id());
  }
  if (!from._internal_owner_public_key().empty()) {
    _this->_internal_set_owner_public_key(from._internal_owner_public_key());
  }
  if (!from._internal_encrypted_private_key().empty()) {
    _this->_internal_set_encrypted_private_key(from._internal_encrypted_private_key());
  }
  if (!from._internal_owner_signature().empty()) {
    _this->_internal_set_owner_signature(from._internal_owner_signature());
  }
  if (!from._internal_revocation_reason().empty()) {
    _this->_internal_set_revocation_reason(from._internal_revocation_reason());
  }
  if (!from._internal_version().empty()) {
    _this->_internal_set_version(from._internal_version());
  }
  if (!from._internal_encryption_key().empty()) {
    _this->_internal_set_encryption_key(from._internal_encryption_key());
  }
  if (!from._internal_usb_path().empty()) {
    _this->_internal_set_usb_path(from._internal_usb_path());
  }
  if (!from._internal_last_used_timestamp().empty()) {
    _this->_internal_set_last_used_timestamp(from._internal_last_used_timestamp());
  }
  if (!from._internal_security_policy_id().empty()) {
    _this->_internal_set_security_policy_id(from._internal_security_policy_id());
  }
  if (!from._internal_expiration_timestamp().empty()) {
    _this->_internal_set_expiration_timestamp(from._internal_expiration_timestamp());
  }
  if (!from._internal_reactivation_code().empty()) {
    _this->_internal_set_reactivation_code(from._internal_reactivation_code());
  }
  if (!from._internal_key_rotation_schedule().empty()) {
    _this->_internal_set_key_rotation_schedule(from._internal_key_rotation_schedule());
  }
  if (from._internal_creation_timestamp() != 0) {
    _this->_impl_.creation_timestamp_ = from._impl_.creation_timestamp_;
  }
  if (from._internal_identity_type() != 0) {
    _this->_impl_.identity_type_ = from._impl_.identity_type_;
  }
  if (from._internal_status() != 0) {
    _this->_impl_.status_ = from._impl_.status_;
  }
  if (from._internal_verification_level() != 0) {
    _this->_impl_.verification_level_ = from._impl_.verification_level_;
  }
  if (from._internal_revoked() != 0) {
    _this->_impl_.revoked_ = from._impl_.revoked_;
  }
  if (from._internal_usb_required() != 0) {
    _this->_impl_.usb_required_ = from._impl_.usb_required_;
  }
  if (from._internal_multi_factor_enabled() != 0) {
    _this->_impl_.multi_factor_enabled_ = from._impl_.multi_factor_enabled_;
  }
  if (from._internal_default_privacy_level() != 0) {
    _this->_impl_.default_privacy_level_ = from._impl_.default_privacy_level_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SeigrIdentityData::CopyFrom(const SeigrIdentityData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.SeigrIdentityData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SeigrIdentityData::InternalSwap(SeigrIdentityData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.verification_metadata_.InternalSwap(&other->_impl_.verification_metadata_);
  _impl_.access_policies_.InternalSwap(&other->_impl_.access_policies_);
  _impl_.audit_logs_.InternalSwap(&other->_impl_.audit_logs_);
  _impl_.metadata_.InternalSwap(&other->_impl_.metadata_);
  _impl_.security_parameters_.InternalSwap(&other->_impl_.security_parameters_);
  _impl_.aliases_.InternalSwap(&other->_impl_.aliases_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.senary_id_, &other->_impl_.senary_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.owner_public_key_, &other->_impl_.owner_public_key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.encrypted_private_key_, &other->_impl_.encrypted_private_key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.owner_signature_, &other->_impl_.owner_signature_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.revocation_reason_, &other->_impl_.revocation_reason_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.version_, &other->_impl_.version_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.encryption_key_, &other->_impl_.encryption_key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.usb_path_, &other->_impl_.usb_path_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.last_used_timestamp_, &other->_impl_.last_used_timestamp_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.security_policy_id_, &other->_impl_.security_policy_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.expiration_timestamp_, &other->_impl_.expiration_timestamp_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reactivation_code_, &other->_impl_.reactivation_code_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_rotation_schedule_, &other->_impl_.key_rotation_schedule_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.default_privacy_level_)
      + sizeof(SeigrIdentityData::_impl_.default_privacy_level_)
      - PROTOBUF_FIELD_OFFSET(SeigrIdentityData, _impl_.creation_timestamp_)>(
          reinterpret_cast<char*>(&_impl_.creation_timestamp_),
          reinterpret_cast<char*>(&other->_impl_.creation_timestamp_));
}

::google::protobuf::Metadata SeigrIdentityData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace seigr
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_identity_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
