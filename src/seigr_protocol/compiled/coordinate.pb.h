// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: coordinate.proto
// Protobuf C++ Version: 5.29.2

#ifndef coordinate_2eproto_2epb_2eh
#define coordinate_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_coordinate_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_coordinate_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_coordinate_2eproto;
namespace seigr {
namespace coordinate {
class CoordinateIndex;
struct CoordinateIndexDefaultTypeInternal;
extern CoordinateIndexDefaultTypeInternal _CoordinateIndex_default_instance_;
class CoordinateIndex_MetadataEntry_DoNotUse;
struct CoordinateIndex_MetadataEntry_DoNotUseDefaultTypeInternal;
extern CoordinateIndex_MetadataEntry_DoNotUseDefaultTypeInternal _CoordinateIndex_MetadataEntry_DoNotUse_default_instance_;
class CoordinatePath;
struct CoordinatePathDefaultTypeInternal;
extern CoordinatePathDefaultTypeInternal _CoordinatePath_default_instance_;
class CoordinatePath_MetadataEntry_DoNotUse;
struct CoordinatePath_MetadataEntry_DoNotUseDefaultTypeInternal;
extern CoordinatePath_MetadataEntry_DoNotUseDefaultTypeInternal _CoordinatePath_MetadataEntry_DoNotUse_default_instance_;
class CoordinateRule;
struct CoordinateRuleDefaultTypeInternal;
extern CoordinateRuleDefaultTypeInternal _CoordinateRule_default_instance_;
class CoordinateRule_MetadataEntry_DoNotUse;
struct CoordinateRule_MetadataEntry_DoNotUseDefaultTypeInternal;
extern CoordinateRule_MetadataEntry_DoNotUseDefaultTypeInternal _CoordinateRule_MetadataEntry_DoNotUse_default_instance_;
class CoordinateSummary;
struct CoordinateSummaryDefaultTypeInternal;
extern CoordinateSummaryDefaultTypeInternal _CoordinateSummary_default_instance_;
class CoordinateSummary_MetadataEntry_DoNotUse;
struct CoordinateSummary_MetadataEntry_DoNotUseDefaultTypeInternal;
extern CoordinateSummary_MetadataEntry_DoNotUseDefaultTypeInternal _CoordinateSummary_MetadataEntry_DoNotUse_default_instance_;
}  // namespace coordinate
}  // namespace seigr
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace seigr {
namespace coordinate {
enum CoordinateRelationType : int {
  RELATION_TYPE_UNDEFINED = 0,
  RELATION_TYPE_PRIMARY_PATH = 1,
  RELATION_TYPE_SECONDARY_PATH = 2,
  RELATION_TYPE_HIERARCHICAL_LAYER = 3,
  RELATION_TYPE_CLUSTER_CONNECTION = 4,
  RELATION_TYPE_PEER_LINK = 5,
  RELATION_TYPE_CROSS_CLUSTER_LINK = 6,
  RELATION_TYPE_BACKUP_LINK = 7,
  RELATION_TYPE_LOAD_BALANCED = 8,
  CoordinateRelationType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  CoordinateRelationType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool CoordinateRelationType_IsValid(int value);
extern const uint32_t CoordinateRelationType_internal_data_[];
constexpr CoordinateRelationType CoordinateRelationType_MIN = static_cast<CoordinateRelationType>(0);
constexpr CoordinateRelationType CoordinateRelationType_MAX = static_cast<CoordinateRelationType>(8);
constexpr int CoordinateRelationType_ARRAYSIZE = 8 + 1;
const ::google::protobuf::EnumDescriptor*
CoordinateRelationType_descriptor();
template <typename T>
const std::string& CoordinateRelationType_Name(T value) {
  static_assert(std::is_same<T, CoordinateRelationType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to CoordinateRelationType_Name().");
  return CoordinateRelationType_Name(static_cast<CoordinateRelationType>(value));
}
template <>
inline const std::string& CoordinateRelationType_Name(CoordinateRelationType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<CoordinateRelationType_descriptor,
                                                 0, 8>(
      static_cast<int>(value));
}
inline bool CoordinateRelationType_Parse(absl::string_view name, CoordinateRelationType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CoordinateRelationType>(
      CoordinateRelationType_descriptor(), name, value);
}
enum CoordinateFlag : int {
  COORDINATE_FLAG_UNDEFINED = 0,
  COORDINATE_FLAG_ACTIVE = 1,
  COORDINATE_FLAG_INACTIVE = 2,
  COORDINATE_FLAG_ARCHIVED = 3,
  COORDINATE_FLAG_TEMPORARY = 4,
  COORDINATE_FLAG_LOCKED = 5,
  COORDINATE_FLAG_PRIORITY = 6,
  COORDINATE_FLAG_SYNC_REQUIRED = 7,
  COORDINATE_FLAG_VALIDATOR = 8,
  COORDINATE_FLAG_CACHE_HYPHEN = 9,
  CoordinateFlag_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  CoordinateFlag_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool CoordinateFlag_IsValid(int value);
extern const uint32_t CoordinateFlag_internal_data_[];
constexpr CoordinateFlag CoordinateFlag_MIN = static_cast<CoordinateFlag>(0);
constexpr CoordinateFlag CoordinateFlag_MAX = static_cast<CoordinateFlag>(9);
constexpr int CoordinateFlag_ARRAYSIZE = 9 + 1;
const ::google::protobuf::EnumDescriptor*
CoordinateFlag_descriptor();
template <typename T>
const std::string& CoordinateFlag_Name(T value) {
  static_assert(std::is_same<T, CoordinateFlag>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to CoordinateFlag_Name().");
  return CoordinateFlag_Name(static_cast<CoordinateFlag>(value));
}
template <>
inline const std::string& CoordinateFlag_Name(CoordinateFlag value) {
  return ::google::protobuf::internal::NameOfDenseEnum<CoordinateFlag_descriptor,
                                                 0, 9>(
      static_cast<int>(value));
}
inline bool CoordinateFlag_Parse(absl::string_view name, CoordinateFlag* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CoordinateFlag>(
      CoordinateFlag_descriptor(), name, value);
}
enum LayerType : int {
  LAYER_TYPE_UNDEFINED = 0,
  LAYER_TYPE_TEMPORAL = 1,
  LAYER_TYPE_SPATIAL = 2,
  LAYER_TYPE_LOGICAL = 3,
  LAYER_TYPE_SECURITY = 4,
  LAYER_TYPE_NETWORK_TOPOLOGY = 5,
  LAYER_TYPE_ADAPTIVE = 6,
  LayerType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  LayerType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool LayerType_IsValid(int value);
extern const uint32_t LayerType_internal_data_[];
constexpr LayerType LayerType_MIN = static_cast<LayerType>(0);
constexpr LayerType LayerType_MAX = static_cast<LayerType>(6);
constexpr int LayerType_ARRAYSIZE = 6 + 1;
const ::google::protobuf::EnumDescriptor*
LayerType_descriptor();
template <typename T>
const std::string& LayerType_Name(T value) {
  static_assert(std::is_same<T, LayerType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to LayerType_Name().");
  return LayerType_Name(static_cast<LayerType>(value));
}
template <>
inline const std::string& LayerType_Name(LayerType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<LayerType_descriptor,
                                                 0, 6>(
      static_cast<int>(value));
}
inline bool LayerType_Parse(absl::string_view name, LayerType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LayerType>(
      LayerType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class CoordinateSummary_MetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  CoordinateSummary_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CoordinateSummary_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit CoordinateSummary_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const CoordinateSummary_MetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const CoordinateSummary_MetadataEntry_DoNotUse*>(
        &_CoordinateSummary_MetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_coordinate_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      65, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class CoordinateRule_MetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  CoordinateRule_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CoordinateRule_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit CoordinateRule_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const CoordinateRule_MetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const CoordinateRule_MetadataEntry_DoNotUse*>(
        &_CoordinateRule_MetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_coordinate_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      62, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class CoordinatePath_MetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  CoordinatePath_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CoordinatePath_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit CoordinatePath_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const CoordinatePath_MetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const CoordinatePath_MetadataEntry_DoNotUse*>(
        &_CoordinatePath_MetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_coordinate_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      62, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class CoordinateIndex_MetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  CoordinateIndex_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CoordinateIndex_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit CoordinateIndex_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const CoordinateIndex_MetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const CoordinateIndex_MetadataEntry_DoNotUse*>(
        &_CoordinateIndex_MetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_coordinate_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      63, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class CoordinateSummary final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.coordinate.CoordinateSummary) */ {
 public:
  inline CoordinateSummary() : CoordinateSummary(nullptr) {}
  ~CoordinateSummary() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CoordinateSummary* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CoordinateSummary));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CoordinateSummary(
      ::google::protobuf::internal::ConstantInitialized);

  inline CoordinateSummary(const CoordinateSummary& from) : CoordinateSummary(nullptr, from) {}
  inline CoordinateSummary(CoordinateSummary&& from) noexcept
      : CoordinateSummary(nullptr, std::move(from)) {}
  inline CoordinateSummary& operator=(const CoordinateSummary& from) {
    CopyFrom(from);
    return *this;
  }
  inline CoordinateSummary& operator=(CoordinateSummary&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CoordinateSummary& default_instance() {
    return *internal_default_instance();
  }
  static inline const CoordinateSummary* internal_default_instance() {
    return reinterpret_cast<const CoordinateSummary*>(
        &_CoordinateSummary_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(CoordinateSummary& a, CoordinateSummary& b) { a.Swap(&b); }
  inline void Swap(CoordinateSummary* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CoordinateSummary* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CoordinateSummary* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CoordinateSummary>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CoordinateSummary& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CoordinateSummary& from) { CoordinateSummary::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CoordinateSummary* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.coordinate.CoordinateSummary"; }

 protected:
  explicit CoordinateSummary(::google::protobuf::Arena* arena);
  CoordinateSummary(::google::protobuf::Arena* arena, const CoordinateSummary& from);
  CoordinateSummary(::google::protobuf::Arena* arena, CoordinateSummary&& from) noexcept
      : CoordinateSummary(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMetadataFieldNumber = 6,
    kLastUpdatedFieldNumber = 5,
    kTotalCoordinatesFieldNumber = 1,
    kActiveCoordinatesFieldNumber = 2,
    kInactiveCoordinatesFieldNumber = 3,
    kFlaggedCoordinatesFieldNumber = 4,
  };
  // map<string, string> metadata = 6;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // string last_updated = 5;
  void clear_last_updated() ;
  const std::string& last_updated() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_last_updated(Arg_&& arg, Args_... args);
  std::string* mutable_last_updated();
  PROTOBUF_NODISCARD std::string* release_last_updated();
  void set_allocated_last_updated(std::string* value);

  private:
  const std::string& _internal_last_updated() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_last_updated(
      const std::string& value);
  std::string* _internal_mutable_last_updated();

  public:
  // int32 total_coordinates = 1;
  void clear_total_coordinates() ;
  ::int32_t total_coordinates() const;
  void set_total_coordinates(::int32_t value);

  private:
  ::int32_t _internal_total_coordinates() const;
  void _internal_set_total_coordinates(::int32_t value);

  public:
  // int32 active_coordinates = 2;
  void clear_active_coordinates() ;
  ::int32_t active_coordinates() const;
  void set_active_coordinates(::int32_t value);

  private:
  ::int32_t _internal_active_coordinates() const;
  void _internal_set_active_coordinates(::int32_t value);

  public:
  // int32 inactive_coordinates = 3;
  void clear_inactive_coordinates() ;
  ::int32_t inactive_coordinates() const;
  void set_inactive_coordinates(::int32_t value);

  private:
  ::int32_t _internal_inactive_coordinates() const;
  void _internal_set_inactive_coordinates(::int32_t value);

  public:
  // int32 flagged_coordinates = 4;
  void clear_flagged_coordinates() ;
  ::int32_t flagged_coordinates() const;
  void set_flagged_coordinates(::int32_t value);

  private:
  ::int32_t _internal_flagged_coordinates() const;
  void _internal_set_flagged_coordinates(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.coordinate.CoordinateSummary)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 1,
      63, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CoordinateSummary& from_msg);
    ::google::protobuf::internal::MapField<CoordinateSummary_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::internal::ArenaStringPtr last_updated_;
    ::int32_t total_coordinates_;
    ::int32_t active_coordinates_;
    ::int32_t inactive_coordinates_;
    ::int32_t flagged_coordinates_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_coordinate_2eproto;
};
// -------------------------------------------------------------------

class CoordinateRule final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.coordinate.CoordinateRule) */ {
 public:
  inline CoordinateRule() : CoordinateRule(nullptr) {}
  ~CoordinateRule() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CoordinateRule* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CoordinateRule));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CoordinateRule(
      ::google::protobuf::internal::ConstantInitialized);

  inline CoordinateRule(const CoordinateRule& from) : CoordinateRule(nullptr, from) {}
  inline CoordinateRule(CoordinateRule&& from) noexcept
      : CoordinateRule(nullptr, std::move(from)) {}
  inline CoordinateRule& operator=(const CoordinateRule& from) {
    CopyFrom(from);
    return *this;
  }
  inline CoordinateRule& operator=(CoordinateRule&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CoordinateRule& default_instance() {
    return *internal_default_instance();
  }
  static inline const CoordinateRule* internal_default_instance() {
    return reinterpret_cast<const CoordinateRule*>(
        &_CoordinateRule_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(CoordinateRule& a, CoordinateRule& b) { a.Swap(&b); }
  inline void Swap(CoordinateRule* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CoordinateRule* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CoordinateRule* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CoordinateRule>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CoordinateRule& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CoordinateRule& from) { CoordinateRule::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CoordinateRule* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.coordinate.CoordinateRule"; }

 protected:
  explicit CoordinateRule(::google::protobuf::Arena* arena);
  CoordinateRule(::google::protobuf::Arena* arena, const CoordinateRule& from);
  CoordinateRule(::google::protobuf::Arena* arena, CoordinateRule&& from) noexcept
      : CoordinateRule(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kApplicableFlagsFieldNumber = 4,
    kMetadataFieldNumber = 7,
    kRuleIdFieldNumber = 1,
    kRuleNameFieldNumber = 2,
    kDescriptionFieldNumber = 3,
    kCreationTimestampFieldNumber = 9,
    kUpdatedTimestampFieldNumber = 10,
    kTargetLayerFieldNumber = 5,
    kRelationTypeFieldNumber = 6,
    kIsMandatoryFieldNumber = 8,
  };
  // repeated .seigr.coordinate.CoordinateFlag applicable_flags = 4;
  int applicable_flags_size() const;
  private:
  int _internal_applicable_flags_size() const;

  public:
  void clear_applicable_flags() ;
  public:
  ::seigr::coordinate::CoordinateFlag applicable_flags(int index) const;
  void set_applicable_flags(int index, ::seigr::coordinate::CoordinateFlag value);
  void add_applicable_flags(::seigr::coordinate::CoordinateFlag value);
  const ::google::protobuf::RepeatedField<int>& applicable_flags() const;
  ::google::protobuf::RepeatedField<int>* mutable_applicable_flags();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_applicable_flags() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_applicable_flags();

  public:
  // map<string, string> metadata = 7;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // string rule_id = 1;
  void clear_rule_id() ;
  const std::string& rule_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_rule_id(Arg_&& arg, Args_... args);
  std::string* mutable_rule_id();
  PROTOBUF_NODISCARD std::string* release_rule_id();
  void set_allocated_rule_id(std::string* value);

  private:
  const std::string& _internal_rule_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_rule_id(
      const std::string& value);
  std::string* _internal_mutable_rule_id();

  public:
  // string rule_name = 2;
  void clear_rule_name() ;
  const std::string& rule_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_rule_name(Arg_&& arg, Args_... args);
  std::string* mutable_rule_name();
  PROTOBUF_NODISCARD std::string* release_rule_name();
  void set_allocated_rule_name(std::string* value);

  private:
  const std::string& _internal_rule_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_rule_name(
      const std::string& value);
  std::string* _internal_mutable_rule_name();

  public:
  // string description = 3;
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // string creation_timestamp = 9;
  void clear_creation_timestamp() ;
  const std::string& creation_timestamp() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_creation_timestamp(Arg_&& arg, Args_... args);
  std::string* mutable_creation_timestamp();
  PROTOBUF_NODISCARD std::string* release_creation_timestamp();
  void set_allocated_creation_timestamp(std::string* value);

  private:
  const std::string& _internal_creation_timestamp() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_creation_timestamp(
      const std::string& value);
  std::string* _internal_mutable_creation_timestamp();

  public:
  // string updated_timestamp = 10;
  void clear_updated_timestamp() ;
  const std::string& updated_timestamp() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_updated_timestamp(Arg_&& arg, Args_... args);
  std::string* mutable_updated_timestamp();
  PROTOBUF_NODISCARD std::string* release_updated_timestamp();
  void set_allocated_updated_timestamp(std::string* value);

  private:
  const std::string& _internal_updated_timestamp() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_updated_timestamp(
      const std::string& value);
  std::string* _internal_mutable_updated_timestamp();

  public:
  // .seigr.coordinate.LayerType target_layer = 5;
  void clear_target_layer() ;
  ::seigr::coordinate::LayerType target_layer() const;
  void set_target_layer(::seigr::coordinate::LayerType value);

  private:
  ::seigr::coordinate::LayerType _internal_target_layer() const;
  void _internal_set_target_layer(::seigr::coordinate::LayerType value);

  public:
  // .seigr.coordinate.CoordinateRelationType relation_type = 6;
  void clear_relation_type() ;
  ::seigr::coordinate::CoordinateRelationType relation_type() const;
  void set_relation_type(::seigr::coordinate::CoordinateRelationType value);

  private:
  ::seigr::coordinate::CoordinateRelationType _internal_relation_type() const;
  void _internal_set_relation_type(::seigr::coordinate::CoordinateRelationType value);

  public:
  // bool is_mandatory = 8;
  void clear_is_mandatory() ;
  bool is_mandatory() const;
  void set_is_mandatory(bool value);

  private:
  bool _internal_is_mandatory() const;
  void _internal_set_is_mandatory(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.coordinate.CoordinateRule)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 10, 1,
      118, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CoordinateRule& from_msg);
    ::google::protobuf::RepeatedField<int> applicable_flags_;
    ::google::protobuf::internal::CachedSize _applicable_flags_cached_byte_size_;
    ::google::protobuf::internal::MapField<CoordinateRule_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::internal::ArenaStringPtr rule_id_;
    ::google::protobuf::internal::ArenaStringPtr rule_name_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::internal::ArenaStringPtr creation_timestamp_;
    ::google::protobuf::internal::ArenaStringPtr updated_timestamp_;
    int target_layer_;
    int relation_type_;
    bool is_mandatory_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_coordinate_2eproto;
};
// -------------------------------------------------------------------

class CoordinatePath final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.coordinate.CoordinatePath) */ {
 public:
  inline CoordinatePath() : CoordinatePath(nullptr) {}
  ~CoordinatePath() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CoordinatePath* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CoordinatePath));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CoordinatePath(
      ::google::protobuf::internal::ConstantInitialized);

  inline CoordinatePath(const CoordinatePath& from) : CoordinatePath(nullptr, from) {}
  inline CoordinatePath(CoordinatePath&& from) noexcept
      : CoordinatePath(nullptr, std::move(from)) {}
  inline CoordinatePath& operator=(const CoordinatePath& from) {
    CopyFrom(from);
    return *this;
  }
  inline CoordinatePath& operator=(CoordinatePath&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CoordinatePath& default_instance() {
    return *internal_default_instance();
  }
  static inline const CoordinatePath* internal_default_instance() {
    return reinterpret_cast<const CoordinatePath*>(
        &_CoordinatePath_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(CoordinatePath& a, CoordinatePath& b) { a.Swap(&b); }
  inline void Swap(CoordinatePath* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CoordinatePath* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CoordinatePath* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CoordinatePath>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CoordinatePath& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CoordinatePath& from) { CoordinatePath::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CoordinatePath* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.coordinate.CoordinatePath"; }

 protected:
  explicit CoordinatePath(::google::protobuf::Arena* arena);
  CoordinatePath(::google::protobuf::Arena* arena, const CoordinatePath& from);
  CoordinatePath(::google::protobuf::Arena* arena, CoordinatePath&& from) noexcept
      : CoordinatePath(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIntermediateHyphensFieldNumber = 3,
    kMetadataFieldNumber = 6,
    kStartHyphenFieldNumber = 1,
    kEndHyphenFieldNumber = 2,
    kDirectionFieldNumber = 7,
    kTimeConstraintFieldNumber = 8,
    kBackupPathIdFieldNumber = 11,
    kLatencyConstraintFieldNumber = 12,
    kTotalWeightFieldNumber = 4,
    kPathTypeFieldNumber = 5,
    kDirectionalStrengthFieldNumber = 9,
    kLoadThresholdFieldNumber = 10,
  };
  // repeated string intermediate_hyphens = 3;
  int intermediate_hyphens_size() const;
  private:
  int _internal_intermediate_hyphens_size() const;

  public:
  void clear_intermediate_hyphens() ;
  const std::string& intermediate_hyphens(int index) const;
  std::string* mutable_intermediate_hyphens(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_intermediate_hyphens(int index, Arg_&& value, Args_... args);
  std::string* add_intermediate_hyphens();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_intermediate_hyphens(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& intermediate_hyphens() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_intermediate_hyphens();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_intermediate_hyphens() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_intermediate_hyphens();

  public:
  // map<string, string> metadata = 6;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // string start_hyphen = 1;
  void clear_start_hyphen() ;
  const std::string& start_hyphen() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_start_hyphen(Arg_&& arg, Args_... args);
  std::string* mutable_start_hyphen();
  PROTOBUF_NODISCARD std::string* release_start_hyphen();
  void set_allocated_start_hyphen(std::string* value);

  private:
  const std::string& _internal_start_hyphen() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_start_hyphen(
      const std::string& value);
  std::string* _internal_mutable_start_hyphen();

  public:
  // string end_hyphen = 2;
  void clear_end_hyphen() ;
  const std::string& end_hyphen() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_end_hyphen(Arg_&& arg, Args_... args);
  std::string* mutable_end_hyphen();
  PROTOBUF_NODISCARD std::string* release_end_hyphen();
  void set_allocated_end_hyphen(std::string* value);

  private:
  const std::string& _internal_end_hyphen() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_end_hyphen(
      const std::string& value);
  std::string* _internal_mutable_end_hyphen();

  public:
  // string direction = 7;
  void clear_direction() ;
  const std::string& direction() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_direction(Arg_&& arg, Args_... args);
  std::string* mutable_direction();
  PROTOBUF_NODISCARD std::string* release_direction();
  void set_allocated_direction(std::string* value);

  private:
  const std::string& _internal_direction() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_direction(
      const std::string& value);
  std::string* _internal_mutable_direction();

  public:
  // string time_constraint = 8;
  void clear_time_constraint() ;
  const std::string& time_constraint() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_time_constraint(Arg_&& arg, Args_... args);
  std::string* mutable_time_constraint();
  PROTOBUF_NODISCARD std::string* release_time_constraint();
  void set_allocated_time_constraint(std::string* value);

  private:
  const std::string& _internal_time_constraint() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_time_constraint(
      const std::string& value);
  std::string* _internal_mutable_time_constraint();

  public:
  // string backup_path_id = 11;
  void clear_backup_path_id() ;
  const std::string& backup_path_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_backup_path_id(Arg_&& arg, Args_... args);
  std::string* mutable_backup_path_id();
  PROTOBUF_NODISCARD std::string* release_backup_path_id();
  void set_allocated_backup_path_id(std::string* value);

  private:
  const std::string& _internal_backup_path_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_backup_path_id(
      const std::string& value);
  std::string* _internal_mutable_backup_path_id();

  public:
  // string latency_constraint = 12;
  void clear_latency_constraint() ;
  const std::string& latency_constraint() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_latency_constraint(Arg_&& arg, Args_... args);
  std::string* mutable_latency_constraint();
  PROTOBUF_NODISCARD std::string* release_latency_constraint();
  void set_allocated_latency_constraint(std::string* value);

  private:
  const std::string& _internal_latency_constraint() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_latency_constraint(
      const std::string& value);
  std::string* _internal_mutable_latency_constraint();

  public:
  // float total_weight = 4;
  void clear_total_weight() ;
  float total_weight() const;
  void set_total_weight(float value);

  private:
  float _internal_total_weight() const;
  void _internal_set_total_weight(float value);

  public:
  // .seigr.coordinate.CoordinateRelationType path_type = 5;
  void clear_path_type() ;
  ::seigr::coordinate::CoordinateRelationType path_type() const;
  void set_path_type(::seigr::coordinate::CoordinateRelationType value);

  private:
  ::seigr::coordinate::CoordinateRelationType _internal_path_type() const;
  void _internal_set_path_type(::seigr::coordinate::CoordinateRelationType value);

  public:
  // float directional_strength = 9;
  void clear_directional_strength() ;
  float directional_strength() const;
  void set_directional_strength(float value);

  private:
  float _internal_directional_strength() const;
  void _internal_set_directional_strength(float value);

  public:
  // int32 load_threshold = 10;
  void clear_load_threshold() ;
  ::int32_t load_threshold() const;
  void set_load_threshold(::int32_t value);

  private:
  ::int32_t _internal_load_threshold() const;
  void _internal_set_load_threshold(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.coordinate.CoordinatePath)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 12, 1,
      154, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CoordinatePath& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> intermediate_hyphens_;
    ::google::protobuf::internal::MapField<CoordinatePath_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::internal::ArenaStringPtr start_hyphen_;
    ::google::protobuf::internal::ArenaStringPtr end_hyphen_;
    ::google::protobuf::internal::ArenaStringPtr direction_;
    ::google::protobuf::internal::ArenaStringPtr time_constraint_;
    ::google::protobuf::internal::ArenaStringPtr backup_path_id_;
    ::google::protobuf::internal::ArenaStringPtr latency_constraint_;
    float total_weight_;
    int path_type_;
    float directional_strength_;
    ::int32_t load_threshold_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_coordinate_2eproto;
};
// -------------------------------------------------------------------

class CoordinateIndex final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.coordinate.CoordinateIndex) */ {
 public:
  inline CoordinateIndex() : CoordinateIndex(nullptr) {}
  ~CoordinateIndex() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CoordinateIndex* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CoordinateIndex));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CoordinateIndex(
      ::google::protobuf::internal::ConstantInitialized);

  inline CoordinateIndex(const CoordinateIndex& from) : CoordinateIndex(nullptr, from) {}
  inline CoordinateIndex(CoordinateIndex&& from) noexcept
      : CoordinateIndex(nullptr, std::move(from)) {}
  inline CoordinateIndex& operator=(const CoordinateIndex& from) {
    CopyFrom(from);
    return *this;
  }
  inline CoordinateIndex& operator=(CoordinateIndex&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CoordinateIndex& default_instance() {
    return *internal_default_instance();
  }
  static inline const CoordinateIndex* internal_default_instance() {
    return reinterpret_cast<const CoordinateIndex*>(
        &_CoordinateIndex_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(CoordinateIndex& a, CoordinateIndex& b) { a.Swap(&b); }
  inline void Swap(CoordinateIndex* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CoordinateIndex* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CoordinateIndex* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CoordinateIndex>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CoordinateIndex& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CoordinateIndex& from) { CoordinateIndex::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CoordinateIndex* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.coordinate.CoordinateIndex"; }

 protected:
  explicit CoordinateIndex(::google::protobuf::Arena* arena);
  CoordinateIndex(::google::protobuf::Arena* arena, const CoordinateIndex& from);
  CoordinateIndex(::google::protobuf::Arena* arena, CoordinateIndex&& from) noexcept
      : CoordinateIndex(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConnectedHyphensFieldNumber = 7,
    kFlagsFieldNumber = 10,
    kMetadataFieldNumber = 13,
    kGeoBoundariesFieldNumber = 16,
    kLayerIdFieldNumber = 2,
    kHyphenIdFieldNumber = 4,
    kBranchIdFieldNumber = 5,
    kParentHyphenFieldNumber = 9,
    kVersionFieldNumber = 11,
    kLastModifiedFieldNumber = 12,
    kGeographicLocationFieldNumber = 14,
    kActivePeriodFieldNumber = 15,
    kRoleDescriptionFieldNumber = 17,
    kRelationTypeFieldNumber = 1,
    kLayerTypeFieldNumber = 3,
    kDepthLevelFieldNumber = 6,
    kPathWeightFieldNumber = 8,
  };
  // repeated string connected_hyphens = 7;
  int connected_hyphens_size() const;
  private:
  int _internal_connected_hyphens_size() const;

  public:
  void clear_connected_hyphens() ;
  const std::string& connected_hyphens(int index) const;
  std::string* mutable_connected_hyphens(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_connected_hyphens(int index, Arg_&& value, Args_... args);
  std::string* add_connected_hyphens();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_connected_hyphens(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& connected_hyphens() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_connected_hyphens();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_connected_hyphens() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_connected_hyphens();

  public:
  // repeated .seigr.coordinate.CoordinateFlag flags = 10;
  int flags_size() const;
  private:
  int _internal_flags_size() const;

  public:
  void clear_flags() ;
  public:
  ::seigr::coordinate::CoordinateFlag flags(int index) const;
  void set_flags(int index, ::seigr::coordinate::CoordinateFlag value);
  void add_flags(::seigr::coordinate::CoordinateFlag value);
  const ::google::protobuf::RepeatedField<int>& flags() const;
  ::google::protobuf::RepeatedField<int>* mutable_flags();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_flags() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_flags();

  public:
  // map<string, string> metadata = 13;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // repeated string geo_boundaries = 16;
  int geo_boundaries_size() const;
  private:
  int _internal_geo_boundaries_size() const;

  public:
  void clear_geo_boundaries() ;
  const std::string& geo_boundaries(int index) const;
  std::string* mutable_geo_boundaries(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_geo_boundaries(int index, Arg_&& value, Args_... args);
  std::string* add_geo_boundaries();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_geo_boundaries(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& geo_boundaries() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_geo_boundaries();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_geo_boundaries() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_geo_boundaries();

  public:
  // string layer_id = 2;
  void clear_layer_id() ;
  const std::string& layer_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_layer_id(Arg_&& arg, Args_... args);
  std::string* mutable_layer_id();
  PROTOBUF_NODISCARD std::string* release_layer_id();
  void set_allocated_layer_id(std::string* value);

  private:
  const std::string& _internal_layer_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_layer_id(
      const std::string& value);
  std::string* _internal_mutable_layer_id();

  public:
  // string hyphen_id = 4;
  void clear_hyphen_id() ;
  const std::string& hyphen_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_hyphen_id(Arg_&& arg, Args_... args);
  std::string* mutable_hyphen_id();
  PROTOBUF_NODISCARD std::string* release_hyphen_id();
  void set_allocated_hyphen_id(std::string* value);

  private:
  const std::string& _internal_hyphen_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_hyphen_id(
      const std::string& value);
  std::string* _internal_mutable_hyphen_id();

  public:
  // string branch_id = 5;
  void clear_branch_id() ;
  const std::string& branch_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_branch_id(Arg_&& arg, Args_... args);
  std::string* mutable_branch_id();
  PROTOBUF_NODISCARD std::string* release_branch_id();
  void set_allocated_branch_id(std::string* value);

  private:
  const std::string& _internal_branch_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_branch_id(
      const std::string& value);
  std::string* _internal_mutable_branch_id();

  public:
  // string parent_hyphen = 9;
  void clear_parent_hyphen() ;
  const std::string& parent_hyphen() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_parent_hyphen(Arg_&& arg, Args_... args);
  std::string* mutable_parent_hyphen();
  PROTOBUF_NODISCARD std::string* release_parent_hyphen();
  void set_allocated_parent_hyphen(std::string* value);

  private:
  const std::string& _internal_parent_hyphen() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_parent_hyphen(
      const std::string& value);
  std::string* _internal_mutable_parent_hyphen();

  public:
  // string version = 11;
  void clear_version() ;
  const std::string& version() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_version(Arg_&& arg, Args_... args);
  std::string* mutable_version();
  PROTOBUF_NODISCARD std::string* release_version();
  void set_allocated_version(std::string* value);

  private:
  const std::string& _internal_version() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_version(
      const std::string& value);
  std::string* _internal_mutable_version();

  public:
  // string last_modified = 12;
  void clear_last_modified() ;
  const std::string& last_modified() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_last_modified(Arg_&& arg, Args_... args);
  std::string* mutable_last_modified();
  PROTOBUF_NODISCARD std::string* release_last_modified();
  void set_allocated_last_modified(std::string* value);

  private:
  const std::string& _internal_last_modified() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_last_modified(
      const std::string& value);
  std::string* _internal_mutable_last_modified();

  public:
  // string geographic_location = 14;
  void clear_geographic_location() ;
  const std::string& geographic_location() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_geographic_location(Arg_&& arg, Args_... args);
  std::string* mutable_geographic_location();
  PROTOBUF_NODISCARD std::string* release_geographic_location();
  void set_allocated_geographic_location(std::string* value);

  private:
  const std::string& _internal_geographic_location() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_geographic_location(
      const std::string& value);
  std::string* _internal_mutable_geographic_location();

  public:
  // string active_period = 15;
  void clear_active_period() ;
  const std::string& active_period() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_active_period(Arg_&& arg, Args_... args);
  std::string* mutable_active_period();
  PROTOBUF_NODISCARD std::string* release_active_period();
  void set_allocated_active_period(std::string* value);

  private:
  const std::string& _internal_active_period() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_active_period(
      const std::string& value);
  std::string* _internal_mutable_active_period();

  public:
  // string role_description = 17;
  void clear_role_description() ;
  const std::string& role_description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_role_description(Arg_&& arg, Args_... args);
  std::string* mutable_role_description();
  PROTOBUF_NODISCARD std::string* release_role_description();
  void set_allocated_role_description(std::string* value);

  private:
  const std::string& _internal_role_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_role_description(
      const std::string& value);
  std::string* _internal_mutable_role_description();

  public:
  // .seigr.coordinate.CoordinateRelationType relation_type = 1;
  void clear_relation_type() ;
  ::seigr::coordinate::CoordinateRelationType relation_type() const;
  void set_relation_type(::seigr::coordinate::CoordinateRelationType value);

  private:
  ::seigr::coordinate::CoordinateRelationType _internal_relation_type() const;
  void _internal_set_relation_type(::seigr::coordinate::CoordinateRelationType value);

  public:
  // .seigr.coordinate.LayerType layer_type = 3;
  void clear_layer_type() ;
  ::seigr::coordinate::LayerType layer_type() const;
  void set_layer_type(::seigr::coordinate::LayerType value);

  private:
  ::seigr::coordinate::LayerType _internal_layer_type() const;
  void _internal_set_layer_type(::seigr::coordinate::LayerType value);

  public:
  // int32 depth_level = 6;
  void clear_depth_level() ;
  ::int32_t depth_level() const;
  void set_depth_level(::int32_t value);

  private:
  ::int32_t _internal_depth_level() const;
  void _internal_set_depth_level(::int32_t value);

  public:
  // float path_weight = 8;
  void clear_path_weight() ;
  float path_weight() const;
  void set_path_weight(float value);

  private:
  float _internal_path_weight() const;
  void _internal_set_path_weight(float value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.coordinate.CoordinateIndex)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 17, 1,
      203, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CoordinateIndex& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> connected_hyphens_;
    ::google::protobuf::RepeatedField<int> flags_;
    ::google::protobuf::internal::CachedSize _flags_cached_byte_size_;
    ::google::protobuf::internal::MapField<CoordinateIndex_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::RepeatedPtrField<std::string> geo_boundaries_;
    ::google::protobuf::internal::ArenaStringPtr layer_id_;
    ::google::protobuf::internal::ArenaStringPtr hyphen_id_;
    ::google::protobuf::internal::ArenaStringPtr branch_id_;
    ::google::protobuf::internal::ArenaStringPtr parent_hyphen_;
    ::google::protobuf::internal::ArenaStringPtr version_;
    ::google::protobuf::internal::ArenaStringPtr last_modified_;
    ::google::protobuf::internal::ArenaStringPtr geographic_location_;
    ::google::protobuf::internal::ArenaStringPtr active_period_;
    ::google::protobuf::internal::ArenaStringPtr role_description_;
    int relation_type_;
    int layer_type_;
    ::int32_t depth_level_;
    float path_weight_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_coordinate_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// CoordinateIndex

// .seigr.coordinate.CoordinateRelationType relation_type = 1;
inline void CoordinateIndex::clear_relation_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.relation_type_ = 0;
}
inline ::seigr::coordinate::CoordinateRelationType CoordinateIndex::relation_type() const {
  // @@protoc_insertion_point(field_get:seigr.coordinate.CoordinateIndex.relation_type)
  return _internal_relation_type();
}
inline void CoordinateIndex::set_relation_type(::seigr::coordinate::CoordinateRelationType value) {
  _internal_set_relation_type(value);
  // @@protoc_insertion_point(field_set:seigr.coordinate.CoordinateIndex.relation_type)
}
inline ::seigr::coordinate::CoordinateRelationType CoordinateIndex::_internal_relation_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::coordinate::CoordinateRelationType>(_impl_.relation_type_);
}
inline void CoordinateIndex::_internal_set_relation_type(::seigr::coordinate::CoordinateRelationType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.relation_type_ = value;
}

// string layer_id = 2;
inline void CoordinateIndex::clear_layer_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.layer_id_.ClearToEmpty();
}
inline const std::string& CoordinateIndex::layer_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.coordinate.CoordinateIndex.layer_id)
  return _internal_layer_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CoordinateIndex::set_layer_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.layer_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.coordinate.CoordinateIndex.layer_id)
}
inline std::string* CoordinateIndex::mutable_layer_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_layer_id();
  // @@protoc_insertion_point(field_mutable:seigr.coordinate.CoordinateIndex.layer_id)
  return _s;
}
inline const std::string& CoordinateIndex::_internal_layer_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.layer_id_.Get();
}
inline void CoordinateIndex::_internal_set_layer_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.layer_id_.Set(value, GetArena());
}
inline std::string* CoordinateIndex::_internal_mutable_layer_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.layer_id_.Mutable( GetArena());
}
inline std::string* CoordinateIndex::release_layer_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.coordinate.CoordinateIndex.layer_id)
  return _impl_.layer_id_.Release();
}
inline void CoordinateIndex::set_allocated_layer_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.layer_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.layer_id_.IsDefault()) {
    _impl_.layer_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.coordinate.CoordinateIndex.layer_id)
}

// .seigr.coordinate.LayerType layer_type = 3;
inline void CoordinateIndex::clear_layer_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.layer_type_ = 0;
}
inline ::seigr::coordinate::LayerType CoordinateIndex::layer_type() const {
  // @@protoc_insertion_point(field_get:seigr.coordinate.CoordinateIndex.layer_type)
  return _internal_layer_type();
}
inline void CoordinateIndex::set_layer_type(::seigr::coordinate::LayerType value) {
  _internal_set_layer_type(value);
  // @@protoc_insertion_point(field_set:seigr.coordinate.CoordinateIndex.layer_type)
}
inline ::seigr::coordinate::LayerType CoordinateIndex::_internal_layer_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::coordinate::LayerType>(_impl_.layer_type_);
}
inline void CoordinateIndex::_internal_set_layer_type(::seigr::coordinate::LayerType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.layer_type_ = value;
}

// string hyphen_id = 4;
inline void CoordinateIndex::clear_hyphen_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hyphen_id_.ClearToEmpty();
}
inline const std::string& CoordinateIndex::hyphen_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.coordinate.CoordinateIndex.hyphen_id)
  return _internal_hyphen_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CoordinateIndex::set_hyphen_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hyphen_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.coordinate.CoordinateIndex.hyphen_id)
}
inline std::string* CoordinateIndex::mutable_hyphen_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_hyphen_id();
  // @@protoc_insertion_point(field_mutable:seigr.coordinate.CoordinateIndex.hyphen_id)
  return _s;
}
inline const std::string& CoordinateIndex::_internal_hyphen_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.hyphen_id_.Get();
}
inline void CoordinateIndex::_internal_set_hyphen_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hyphen_id_.Set(value, GetArena());
}
inline std::string* CoordinateIndex::_internal_mutable_hyphen_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.hyphen_id_.Mutable( GetArena());
}
inline std::string* CoordinateIndex::release_hyphen_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.coordinate.CoordinateIndex.hyphen_id)
  return _impl_.hyphen_id_.Release();
}
inline void CoordinateIndex::set_allocated_hyphen_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hyphen_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.hyphen_id_.IsDefault()) {
    _impl_.hyphen_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.coordinate.CoordinateIndex.hyphen_id)
}

// string branch_id = 5;
inline void CoordinateIndex::clear_branch_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.branch_id_.ClearToEmpty();
}
inline const std::string& CoordinateIndex::branch_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.coordinate.CoordinateIndex.branch_id)
  return _internal_branch_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CoordinateIndex::set_branch_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.branch_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.coordinate.CoordinateIndex.branch_id)
}
inline std::string* CoordinateIndex::mutable_branch_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_branch_id();
  // @@protoc_insertion_point(field_mutable:seigr.coordinate.CoordinateIndex.branch_id)
  return _s;
}
inline const std::string& CoordinateIndex::_internal_branch_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.branch_id_.Get();
}
inline void CoordinateIndex::_internal_set_branch_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.branch_id_.Set(value, GetArena());
}
inline std::string* CoordinateIndex::_internal_mutable_branch_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.branch_id_.Mutable( GetArena());
}
inline std::string* CoordinateIndex::release_branch_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.coordinate.CoordinateIndex.branch_id)
  return _impl_.branch_id_.Release();
}
inline void CoordinateIndex::set_allocated_branch_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.branch_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.branch_id_.IsDefault()) {
    _impl_.branch_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.coordinate.CoordinateIndex.branch_id)
}

// int32 depth_level = 6;
inline void CoordinateIndex::clear_depth_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.depth_level_ = 0;
}
inline ::int32_t CoordinateIndex::depth_level() const {
  // @@protoc_insertion_point(field_get:seigr.coordinate.CoordinateIndex.depth_level)
  return _internal_depth_level();
}
inline void CoordinateIndex::set_depth_level(::int32_t value) {
  _internal_set_depth_level(value);
  // @@protoc_insertion_point(field_set:seigr.coordinate.CoordinateIndex.depth_level)
}
inline ::int32_t CoordinateIndex::_internal_depth_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.depth_level_;
}
inline void CoordinateIndex::_internal_set_depth_level(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.depth_level_ = value;
}

// repeated string connected_hyphens = 7;
inline int CoordinateIndex::_internal_connected_hyphens_size() const {
  return _internal_connected_hyphens().size();
}
inline int CoordinateIndex::connected_hyphens_size() const {
  return _internal_connected_hyphens_size();
}
inline void CoordinateIndex::clear_connected_hyphens() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connected_hyphens_.Clear();
}
inline std::string* CoordinateIndex::add_connected_hyphens() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_connected_hyphens()->Add();
  // @@protoc_insertion_point(field_add_mutable:seigr.coordinate.CoordinateIndex.connected_hyphens)
  return _s;
}
inline const std::string& CoordinateIndex::connected_hyphens(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.coordinate.CoordinateIndex.connected_hyphens)
  return _internal_connected_hyphens().Get(index);
}
inline std::string* CoordinateIndex::mutable_connected_hyphens(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.coordinate.CoordinateIndex.connected_hyphens)
  return _internal_mutable_connected_hyphens()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void CoordinateIndex::set_connected_hyphens(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_connected_hyphens()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:seigr.coordinate.CoordinateIndex.connected_hyphens)
}
template <typename Arg_, typename... Args_>
inline void CoordinateIndex::add_connected_hyphens(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_connected_hyphens(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seigr.coordinate.CoordinateIndex.connected_hyphens)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
CoordinateIndex::connected_hyphens() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.coordinate.CoordinateIndex.connected_hyphens)
  return _internal_connected_hyphens();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
CoordinateIndex::mutable_connected_hyphens() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.coordinate.CoordinateIndex.connected_hyphens)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_connected_hyphens();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
CoordinateIndex::_internal_connected_hyphens() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.connected_hyphens_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
CoordinateIndex::_internal_mutable_connected_hyphens() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.connected_hyphens_;
}

// float path_weight = 8;
inline void CoordinateIndex::clear_path_weight() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_weight_ = 0;
}
inline float CoordinateIndex::path_weight() const {
  // @@protoc_insertion_point(field_get:seigr.coordinate.CoordinateIndex.path_weight)
  return _internal_path_weight();
}
inline void CoordinateIndex::set_path_weight(float value) {
  _internal_set_path_weight(value);
  // @@protoc_insertion_point(field_set:seigr.coordinate.CoordinateIndex.path_weight)
}
inline float CoordinateIndex::_internal_path_weight() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.path_weight_;
}
inline void CoordinateIndex::_internal_set_path_weight(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_weight_ = value;
}

// string parent_hyphen = 9;
inline void CoordinateIndex::clear_parent_hyphen() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parent_hyphen_.ClearToEmpty();
}
inline const std::string& CoordinateIndex::parent_hyphen() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.coordinate.CoordinateIndex.parent_hyphen)
  return _internal_parent_hyphen();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CoordinateIndex::set_parent_hyphen(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parent_hyphen_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.coordinate.CoordinateIndex.parent_hyphen)
}
inline std::string* CoordinateIndex::mutable_parent_hyphen() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_parent_hyphen();
  // @@protoc_insertion_point(field_mutable:seigr.coordinate.CoordinateIndex.parent_hyphen)
  return _s;
}
inline const std::string& CoordinateIndex::_internal_parent_hyphen() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.parent_hyphen_.Get();
}
inline void CoordinateIndex::_internal_set_parent_hyphen(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parent_hyphen_.Set(value, GetArena());
}
inline std::string* CoordinateIndex::_internal_mutable_parent_hyphen() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.parent_hyphen_.Mutable( GetArena());
}
inline std::string* CoordinateIndex::release_parent_hyphen() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.coordinate.CoordinateIndex.parent_hyphen)
  return _impl_.parent_hyphen_.Release();
}
inline void CoordinateIndex::set_allocated_parent_hyphen(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parent_hyphen_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.parent_hyphen_.IsDefault()) {
    _impl_.parent_hyphen_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.coordinate.CoordinateIndex.parent_hyphen)
}

// repeated .seigr.coordinate.CoordinateFlag flags = 10;
inline int CoordinateIndex::_internal_flags_size() const {
  return _internal_flags().size();
}
inline int CoordinateIndex::flags_size() const {
  return _internal_flags_size();
}
inline void CoordinateIndex::clear_flags() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flags_.Clear();
}
inline ::seigr::coordinate::CoordinateFlag CoordinateIndex::flags(int index) const {
  // @@protoc_insertion_point(field_get:seigr.coordinate.CoordinateIndex.flags)
  return static_cast<::seigr::coordinate::CoordinateFlag>(_internal_flags().Get(index));
}
inline void CoordinateIndex::set_flags(int index, ::seigr::coordinate::CoordinateFlag value) {
  _internal_mutable_flags()->Set(index, value);
  // @@protoc_insertion_point(field_set:seigr.coordinate.CoordinateIndex.flags)
}
inline void CoordinateIndex::add_flags(::seigr::coordinate::CoordinateFlag value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_flags()->Add(value);
  // @@protoc_insertion_point(field_add:seigr.coordinate.CoordinateIndex.flags)
}
inline const ::google::protobuf::RepeatedField<int>& CoordinateIndex::flags() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.coordinate.CoordinateIndex.flags)
  return _internal_flags();
}
inline ::google::protobuf::RepeatedField<int>* CoordinateIndex::mutable_flags()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.coordinate.CoordinateIndex.flags)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_flags();
}
inline const ::google::protobuf::RepeatedField<int>& CoordinateIndex::_internal_flags()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.flags_;
}
inline ::google::protobuf::RepeatedField<int>* CoordinateIndex::_internal_mutable_flags() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.flags_;
}

// string version = 11;
inline void CoordinateIndex::clear_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.ClearToEmpty();
}
inline const std::string& CoordinateIndex::version() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.coordinate.CoordinateIndex.version)
  return _internal_version();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CoordinateIndex::set_version(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.coordinate.CoordinateIndex.version)
}
inline std::string* CoordinateIndex::mutable_version() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_version();
  // @@protoc_insertion_point(field_mutable:seigr.coordinate.CoordinateIndex.version)
  return _s;
}
inline const std::string& CoordinateIndex::_internal_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.version_.Get();
}
inline void CoordinateIndex::_internal_set_version(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.Set(value, GetArena());
}
inline std::string* CoordinateIndex::_internal_mutable_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.version_.Mutable( GetArena());
}
inline std::string* CoordinateIndex::release_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.coordinate.CoordinateIndex.version)
  return _impl_.version_.Release();
}
inline void CoordinateIndex::set_allocated_version(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.version_.IsDefault()) {
    _impl_.version_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.coordinate.CoordinateIndex.version)
}

// string last_modified = 12;
inline void CoordinateIndex::clear_last_modified() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_modified_.ClearToEmpty();
}
inline const std::string& CoordinateIndex::last_modified() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.coordinate.CoordinateIndex.last_modified)
  return _internal_last_modified();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CoordinateIndex::set_last_modified(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_modified_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.coordinate.CoordinateIndex.last_modified)
}
inline std::string* CoordinateIndex::mutable_last_modified() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_last_modified();
  // @@protoc_insertion_point(field_mutable:seigr.coordinate.CoordinateIndex.last_modified)
  return _s;
}
inline const std::string& CoordinateIndex::_internal_last_modified() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_modified_.Get();
}
inline void CoordinateIndex::_internal_set_last_modified(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_modified_.Set(value, GetArena());
}
inline std::string* CoordinateIndex::_internal_mutable_last_modified() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.last_modified_.Mutable( GetArena());
}
inline std::string* CoordinateIndex::release_last_modified() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.coordinate.CoordinateIndex.last_modified)
  return _impl_.last_modified_.Release();
}
inline void CoordinateIndex::set_allocated_last_modified(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_modified_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.last_modified_.IsDefault()) {
    _impl_.last_modified_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.coordinate.CoordinateIndex.last_modified)
}

// map<string, string> metadata = 13;
inline int CoordinateIndex::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int CoordinateIndex::metadata_size() const {
  return _internal_metadata_size();
}
inline void CoordinateIndex::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& CoordinateIndex::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& CoordinateIndex::metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.coordinate.CoordinateIndex.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* CoordinateIndex::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* CoordinateIndex::mutable_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.coordinate.CoordinateIndex.metadata)
  return _internal_mutable_metadata();
}

// string geographic_location = 14;
inline void CoordinateIndex::clear_geographic_location() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.geographic_location_.ClearToEmpty();
}
inline const std::string& CoordinateIndex::geographic_location() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.coordinate.CoordinateIndex.geographic_location)
  return _internal_geographic_location();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CoordinateIndex::set_geographic_location(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.geographic_location_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.coordinate.CoordinateIndex.geographic_location)
}
inline std::string* CoordinateIndex::mutable_geographic_location() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_geographic_location();
  // @@protoc_insertion_point(field_mutable:seigr.coordinate.CoordinateIndex.geographic_location)
  return _s;
}
inline const std::string& CoordinateIndex::_internal_geographic_location() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.geographic_location_.Get();
}
inline void CoordinateIndex::_internal_set_geographic_location(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.geographic_location_.Set(value, GetArena());
}
inline std::string* CoordinateIndex::_internal_mutable_geographic_location() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.geographic_location_.Mutable( GetArena());
}
inline std::string* CoordinateIndex::release_geographic_location() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.coordinate.CoordinateIndex.geographic_location)
  return _impl_.geographic_location_.Release();
}
inline void CoordinateIndex::set_allocated_geographic_location(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.geographic_location_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.geographic_location_.IsDefault()) {
    _impl_.geographic_location_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.coordinate.CoordinateIndex.geographic_location)
}

// string active_period = 15;
inline void CoordinateIndex::clear_active_period() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.active_period_.ClearToEmpty();
}
inline const std::string& CoordinateIndex::active_period() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.coordinate.CoordinateIndex.active_period)
  return _internal_active_period();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CoordinateIndex::set_active_period(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.active_period_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.coordinate.CoordinateIndex.active_period)
}
inline std::string* CoordinateIndex::mutable_active_period() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_active_period();
  // @@protoc_insertion_point(field_mutable:seigr.coordinate.CoordinateIndex.active_period)
  return _s;
}
inline const std::string& CoordinateIndex::_internal_active_period() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.active_period_.Get();
}
inline void CoordinateIndex::_internal_set_active_period(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.active_period_.Set(value, GetArena());
}
inline std::string* CoordinateIndex::_internal_mutable_active_period() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.active_period_.Mutable( GetArena());
}
inline std::string* CoordinateIndex::release_active_period() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.coordinate.CoordinateIndex.active_period)
  return _impl_.active_period_.Release();
}
inline void CoordinateIndex::set_allocated_active_period(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.active_period_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.active_period_.IsDefault()) {
    _impl_.active_period_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.coordinate.CoordinateIndex.active_period)
}

// repeated string geo_boundaries = 16;
inline int CoordinateIndex::_internal_geo_boundaries_size() const {
  return _internal_geo_boundaries().size();
}
inline int CoordinateIndex::geo_boundaries_size() const {
  return _internal_geo_boundaries_size();
}
inline void CoordinateIndex::clear_geo_boundaries() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.geo_boundaries_.Clear();
}
inline std::string* CoordinateIndex::add_geo_boundaries() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_geo_boundaries()->Add();
  // @@protoc_insertion_point(field_add_mutable:seigr.coordinate.CoordinateIndex.geo_boundaries)
  return _s;
}
inline const std::string& CoordinateIndex::geo_boundaries(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.coordinate.CoordinateIndex.geo_boundaries)
  return _internal_geo_boundaries().Get(index);
}
inline std::string* CoordinateIndex::mutable_geo_boundaries(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.coordinate.CoordinateIndex.geo_boundaries)
  return _internal_mutable_geo_boundaries()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void CoordinateIndex::set_geo_boundaries(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_geo_boundaries()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:seigr.coordinate.CoordinateIndex.geo_boundaries)
}
template <typename Arg_, typename... Args_>
inline void CoordinateIndex::add_geo_boundaries(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_geo_boundaries(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seigr.coordinate.CoordinateIndex.geo_boundaries)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
CoordinateIndex::geo_boundaries() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.coordinate.CoordinateIndex.geo_boundaries)
  return _internal_geo_boundaries();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
CoordinateIndex::mutable_geo_boundaries() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.coordinate.CoordinateIndex.geo_boundaries)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_geo_boundaries();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
CoordinateIndex::_internal_geo_boundaries() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.geo_boundaries_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
CoordinateIndex::_internal_mutable_geo_boundaries() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.geo_boundaries_;
}

// string role_description = 17;
inline void CoordinateIndex::clear_role_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_description_.ClearToEmpty();
}
inline const std::string& CoordinateIndex::role_description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.coordinate.CoordinateIndex.role_description)
  return _internal_role_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CoordinateIndex::set_role_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.coordinate.CoordinateIndex.role_description)
}
inline std::string* CoordinateIndex::mutable_role_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_role_description();
  // @@protoc_insertion_point(field_mutable:seigr.coordinate.CoordinateIndex.role_description)
  return _s;
}
inline const std::string& CoordinateIndex::_internal_role_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.role_description_.Get();
}
inline void CoordinateIndex::_internal_set_role_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_description_.Set(value, GetArena());
}
inline std::string* CoordinateIndex::_internal_mutable_role_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.role_description_.Mutable( GetArena());
}
inline std::string* CoordinateIndex::release_role_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.coordinate.CoordinateIndex.role_description)
  return _impl_.role_description_.Release();
}
inline void CoordinateIndex::set_allocated_role_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.role_description_.IsDefault()) {
    _impl_.role_description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.coordinate.CoordinateIndex.role_description)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// CoordinatePath

// string start_hyphen = 1;
inline void CoordinatePath::clear_start_hyphen() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.start_hyphen_.ClearToEmpty();
}
inline const std::string& CoordinatePath::start_hyphen() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.coordinate.CoordinatePath.start_hyphen)
  return _internal_start_hyphen();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CoordinatePath::set_start_hyphen(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.start_hyphen_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.coordinate.CoordinatePath.start_hyphen)
}
inline std::string* CoordinatePath::mutable_start_hyphen() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_start_hyphen();
  // @@protoc_insertion_point(field_mutable:seigr.coordinate.CoordinatePath.start_hyphen)
  return _s;
}
inline const std::string& CoordinatePath::_internal_start_hyphen() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.start_hyphen_.Get();
}
inline void CoordinatePath::_internal_set_start_hyphen(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.start_hyphen_.Set(value, GetArena());
}
inline std::string* CoordinatePath::_internal_mutable_start_hyphen() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.start_hyphen_.Mutable( GetArena());
}
inline std::string* CoordinatePath::release_start_hyphen() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.coordinate.CoordinatePath.start_hyphen)
  return _impl_.start_hyphen_.Release();
}
inline void CoordinatePath::set_allocated_start_hyphen(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.start_hyphen_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.start_hyphen_.IsDefault()) {
    _impl_.start_hyphen_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.coordinate.CoordinatePath.start_hyphen)
}

// string end_hyphen = 2;
inline void CoordinatePath::clear_end_hyphen() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.end_hyphen_.ClearToEmpty();
}
inline const std::string& CoordinatePath::end_hyphen() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.coordinate.CoordinatePath.end_hyphen)
  return _internal_end_hyphen();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CoordinatePath::set_end_hyphen(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.end_hyphen_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.coordinate.CoordinatePath.end_hyphen)
}
inline std::string* CoordinatePath::mutable_end_hyphen() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_end_hyphen();
  // @@protoc_insertion_point(field_mutable:seigr.coordinate.CoordinatePath.end_hyphen)
  return _s;
}
inline const std::string& CoordinatePath::_internal_end_hyphen() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.end_hyphen_.Get();
}
inline void CoordinatePath::_internal_set_end_hyphen(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.end_hyphen_.Set(value, GetArena());
}
inline std::string* CoordinatePath::_internal_mutable_end_hyphen() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.end_hyphen_.Mutable( GetArena());
}
inline std::string* CoordinatePath::release_end_hyphen() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.coordinate.CoordinatePath.end_hyphen)
  return _impl_.end_hyphen_.Release();
}
inline void CoordinatePath::set_allocated_end_hyphen(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.end_hyphen_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.end_hyphen_.IsDefault()) {
    _impl_.end_hyphen_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.coordinate.CoordinatePath.end_hyphen)
}

// repeated string intermediate_hyphens = 3;
inline int CoordinatePath::_internal_intermediate_hyphens_size() const {
  return _internal_intermediate_hyphens().size();
}
inline int CoordinatePath::intermediate_hyphens_size() const {
  return _internal_intermediate_hyphens_size();
}
inline void CoordinatePath::clear_intermediate_hyphens() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.intermediate_hyphens_.Clear();
}
inline std::string* CoordinatePath::add_intermediate_hyphens() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_intermediate_hyphens()->Add();
  // @@protoc_insertion_point(field_add_mutable:seigr.coordinate.CoordinatePath.intermediate_hyphens)
  return _s;
}
inline const std::string& CoordinatePath::intermediate_hyphens(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.coordinate.CoordinatePath.intermediate_hyphens)
  return _internal_intermediate_hyphens().Get(index);
}
inline std::string* CoordinatePath::mutable_intermediate_hyphens(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.coordinate.CoordinatePath.intermediate_hyphens)
  return _internal_mutable_intermediate_hyphens()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void CoordinatePath::set_intermediate_hyphens(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_intermediate_hyphens()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:seigr.coordinate.CoordinatePath.intermediate_hyphens)
}
template <typename Arg_, typename... Args_>
inline void CoordinatePath::add_intermediate_hyphens(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_intermediate_hyphens(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seigr.coordinate.CoordinatePath.intermediate_hyphens)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
CoordinatePath::intermediate_hyphens() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.coordinate.CoordinatePath.intermediate_hyphens)
  return _internal_intermediate_hyphens();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
CoordinatePath::mutable_intermediate_hyphens() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.coordinate.CoordinatePath.intermediate_hyphens)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_intermediate_hyphens();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
CoordinatePath::_internal_intermediate_hyphens() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.intermediate_hyphens_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
CoordinatePath::_internal_mutable_intermediate_hyphens() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.intermediate_hyphens_;
}

// float total_weight = 4;
inline void CoordinatePath::clear_total_weight() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_weight_ = 0;
}
inline float CoordinatePath::total_weight() const {
  // @@protoc_insertion_point(field_get:seigr.coordinate.CoordinatePath.total_weight)
  return _internal_total_weight();
}
inline void CoordinatePath::set_total_weight(float value) {
  _internal_set_total_weight(value);
  // @@protoc_insertion_point(field_set:seigr.coordinate.CoordinatePath.total_weight)
}
inline float CoordinatePath::_internal_total_weight() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_weight_;
}
inline void CoordinatePath::_internal_set_total_weight(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_weight_ = value;
}

// .seigr.coordinate.CoordinateRelationType path_type = 5;
inline void CoordinatePath::clear_path_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_type_ = 0;
}
inline ::seigr::coordinate::CoordinateRelationType CoordinatePath::path_type() const {
  // @@protoc_insertion_point(field_get:seigr.coordinate.CoordinatePath.path_type)
  return _internal_path_type();
}
inline void CoordinatePath::set_path_type(::seigr::coordinate::CoordinateRelationType value) {
  _internal_set_path_type(value);
  // @@protoc_insertion_point(field_set:seigr.coordinate.CoordinatePath.path_type)
}
inline ::seigr::coordinate::CoordinateRelationType CoordinatePath::_internal_path_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::coordinate::CoordinateRelationType>(_impl_.path_type_);
}
inline void CoordinatePath::_internal_set_path_type(::seigr::coordinate::CoordinateRelationType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_type_ = value;
}

// map<string, string> metadata = 6;
inline int CoordinatePath::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int CoordinatePath::metadata_size() const {
  return _internal_metadata_size();
}
inline void CoordinatePath::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& CoordinatePath::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& CoordinatePath::metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.coordinate.CoordinatePath.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* CoordinatePath::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* CoordinatePath::mutable_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.coordinate.CoordinatePath.metadata)
  return _internal_mutable_metadata();
}

// string direction = 7;
inline void CoordinatePath::clear_direction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_.ClearToEmpty();
}
inline const std::string& CoordinatePath::direction() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.coordinate.CoordinatePath.direction)
  return _internal_direction();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CoordinatePath::set_direction(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.coordinate.CoordinatePath.direction)
}
inline std::string* CoordinatePath::mutable_direction() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_direction();
  // @@protoc_insertion_point(field_mutable:seigr.coordinate.CoordinatePath.direction)
  return _s;
}
inline const std::string& CoordinatePath::_internal_direction() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.direction_.Get();
}
inline void CoordinatePath::_internal_set_direction(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_.Set(value, GetArena());
}
inline std::string* CoordinatePath::_internal_mutable_direction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.direction_.Mutable( GetArena());
}
inline std::string* CoordinatePath::release_direction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.coordinate.CoordinatePath.direction)
  return _impl_.direction_.Release();
}
inline void CoordinatePath::set_allocated_direction(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.direction_.IsDefault()) {
    _impl_.direction_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.coordinate.CoordinatePath.direction)
}

// string time_constraint = 8;
inline void CoordinatePath::clear_time_constraint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_constraint_.ClearToEmpty();
}
inline const std::string& CoordinatePath::time_constraint() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.coordinate.CoordinatePath.time_constraint)
  return _internal_time_constraint();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CoordinatePath::set_time_constraint(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_constraint_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.coordinate.CoordinatePath.time_constraint)
}
inline std::string* CoordinatePath::mutable_time_constraint() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_time_constraint();
  // @@protoc_insertion_point(field_mutable:seigr.coordinate.CoordinatePath.time_constraint)
  return _s;
}
inline const std::string& CoordinatePath::_internal_time_constraint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.time_constraint_.Get();
}
inline void CoordinatePath::_internal_set_time_constraint(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_constraint_.Set(value, GetArena());
}
inline std::string* CoordinatePath::_internal_mutable_time_constraint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.time_constraint_.Mutable( GetArena());
}
inline std::string* CoordinatePath::release_time_constraint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.coordinate.CoordinatePath.time_constraint)
  return _impl_.time_constraint_.Release();
}
inline void CoordinatePath::set_allocated_time_constraint(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_constraint_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.time_constraint_.IsDefault()) {
    _impl_.time_constraint_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.coordinate.CoordinatePath.time_constraint)
}

// float directional_strength = 9;
inline void CoordinatePath::clear_directional_strength() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.directional_strength_ = 0;
}
inline float CoordinatePath::directional_strength() const {
  // @@protoc_insertion_point(field_get:seigr.coordinate.CoordinatePath.directional_strength)
  return _internal_directional_strength();
}
inline void CoordinatePath::set_directional_strength(float value) {
  _internal_set_directional_strength(value);
  // @@protoc_insertion_point(field_set:seigr.coordinate.CoordinatePath.directional_strength)
}
inline float CoordinatePath::_internal_directional_strength() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.directional_strength_;
}
inline void CoordinatePath::_internal_set_directional_strength(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.directional_strength_ = value;
}

// int32 load_threshold = 10;
inline void CoordinatePath::clear_load_threshold() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.load_threshold_ = 0;
}
inline ::int32_t CoordinatePath::load_threshold() const {
  // @@protoc_insertion_point(field_get:seigr.coordinate.CoordinatePath.load_threshold)
  return _internal_load_threshold();
}
inline void CoordinatePath::set_load_threshold(::int32_t value) {
  _internal_set_load_threshold(value);
  // @@protoc_insertion_point(field_set:seigr.coordinate.CoordinatePath.load_threshold)
}
inline ::int32_t CoordinatePath::_internal_load_threshold() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.load_threshold_;
}
inline void CoordinatePath::_internal_set_load_threshold(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.load_threshold_ = value;
}

// string backup_path_id = 11;
inline void CoordinatePath::clear_backup_path_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.backup_path_id_.ClearToEmpty();
}
inline const std::string& CoordinatePath::backup_path_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.coordinate.CoordinatePath.backup_path_id)
  return _internal_backup_path_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CoordinatePath::set_backup_path_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.backup_path_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.coordinate.CoordinatePath.backup_path_id)
}
inline std::string* CoordinatePath::mutable_backup_path_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_backup_path_id();
  // @@protoc_insertion_point(field_mutable:seigr.coordinate.CoordinatePath.backup_path_id)
  return _s;
}
inline const std::string& CoordinatePath::_internal_backup_path_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.backup_path_id_.Get();
}
inline void CoordinatePath::_internal_set_backup_path_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.backup_path_id_.Set(value, GetArena());
}
inline std::string* CoordinatePath::_internal_mutable_backup_path_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.backup_path_id_.Mutable( GetArena());
}
inline std::string* CoordinatePath::release_backup_path_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.coordinate.CoordinatePath.backup_path_id)
  return _impl_.backup_path_id_.Release();
}
inline void CoordinatePath::set_allocated_backup_path_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.backup_path_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.backup_path_id_.IsDefault()) {
    _impl_.backup_path_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.coordinate.CoordinatePath.backup_path_id)
}

// string latency_constraint = 12;
inline void CoordinatePath::clear_latency_constraint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.latency_constraint_.ClearToEmpty();
}
inline const std::string& CoordinatePath::latency_constraint() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.coordinate.CoordinatePath.latency_constraint)
  return _internal_latency_constraint();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CoordinatePath::set_latency_constraint(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.latency_constraint_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.coordinate.CoordinatePath.latency_constraint)
}
inline std::string* CoordinatePath::mutable_latency_constraint() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_latency_constraint();
  // @@protoc_insertion_point(field_mutable:seigr.coordinate.CoordinatePath.latency_constraint)
  return _s;
}
inline const std::string& CoordinatePath::_internal_latency_constraint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.latency_constraint_.Get();
}
inline void CoordinatePath::_internal_set_latency_constraint(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.latency_constraint_.Set(value, GetArena());
}
inline std::string* CoordinatePath::_internal_mutable_latency_constraint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.latency_constraint_.Mutable( GetArena());
}
inline std::string* CoordinatePath::release_latency_constraint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.coordinate.CoordinatePath.latency_constraint)
  return _impl_.latency_constraint_.Release();
}
inline void CoordinatePath::set_allocated_latency_constraint(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.latency_constraint_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.latency_constraint_.IsDefault()) {
    _impl_.latency_constraint_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.coordinate.CoordinatePath.latency_constraint)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// CoordinateRule

// string rule_id = 1;
inline void CoordinateRule::clear_rule_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rule_id_.ClearToEmpty();
}
inline const std::string& CoordinateRule::rule_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.coordinate.CoordinateRule.rule_id)
  return _internal_rule_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CoordinateRule::set_rule_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rule_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.coordinate.CoordinateRule.rule_id)
}
inline std::string* CoordinateRule::mutable_rule_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_rule_id();
  // @@protoc_insertion_point(field_mutable:seigr.coordinate.CoordinateRule.rule_id)
  return _s;
}
inline const std::string& CoordinateRule::_internal_rule_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rule_id_.Get();
}
inline void CoordinateRule::_internal_set_rule_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rule_id_.Set(value, GetArena());
}
inline std::string* CoordinateRule::_internal_mutable_rule_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.rule_id_.Mutable( GetArena());
}
inline std::string* CoordinateRule::release_rule_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.coordinate.CoordinateRule.rule_id)
  return _impl_.rule_id_.Release();
}
inline void CoordinateRule::set_allocated_rule_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rule_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.rule_id_.IsDefault()) {
    _impl_.rule_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.coordinate.CoordinateRule.rule_id)
}

// string rule_name = 2;
inline void CoordinateRule::clear_rule_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rule_name_.ClearToEmpty();
}
inline const std::string& CoordinateRule::rule_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.coordinate.CoordinateRule.rule_name)
  return _internal_rule_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CoordinateRule::set_rule_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rule_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.coordinate.CoordinateRule.rule_name)
}
inline std::string* CoordinateRule::mutable_rule_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_rule_name();
  // @@protoc_insertion_point(field_mutable:seigr.coordinate.CoordinateRule.rule_name)
  return _s;
}
inline const std::string& CoordinateRule::_internal_rule_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rule_name_.Get();
}
inline void CoordinateRule::_internal_set_rule_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rule_name_.Set(value, GetArena());
}
inline std::string* CoordinateRule::_internal_mutable_rule_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.rule_name_.Mutable( GetArena());
}
inline std::string* CoordinateRule::release_rule_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.coordinate.CoordinateRule.rule_name)
  return _impl_.rule_name_.Release();
}
inline void CoordinateRule::set_allocated_rule_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rule_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.rule_name_.IsDefault()) {
    _impl_.rule_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.coordinate.CoordinateRule.rule_name)
}

// string description = 3;
inline void CoordinateRule::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
}
inline const std::string& CoordinateRule::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.coordinate.CoordinateRule.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CoordinateRule::set_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.coordinate.CoordinateRule.description)
}
inline std::string* CoordinateRule::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:seigr.coordinate.CoordinateRule.description)
  return _s;
}
inline const std::string& CoordinateRule::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void CoordinateRule::_internal_set_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(value, GetArena());
}
inline std::string* CoordinateRule::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* CoordinateRule::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.coordinate.CoordinateRule.description)
  return _impl_.description_.Release();
}
inline void CoordinateRule::set_allocated_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.coordinate.CoordinateRule.description)
}

// repeated .seigr.coordinate.CoordinateFlag applicable_flags = 4;
inline int CoordinateRule::_internal_applicable_flags_size() const {
  return _internal_applicable_flags().size();
}
inline int CoordinateRule::applicable_flags_size() const {
  return _internal_applicable_flags_size();
}
inline void CoordinateRule::clear_applicable_flags() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.applicable_flags_.Clear();
}
inline ::seigr::coordinate::CoordinateFlag CoordinateRule::applicable_flags(int index) const {
  // @@protoc_insertion_point(field_get:seigr.coordinate.CoordinateRule.applicable_flags)
  return static_cast<::seigr::coordinate::CoordinateFlag>(_internal_applicable_flags().Get(index));
}
inline void CoordinateRule::set_applicable_flags(int index, ::seigr::coordinate::CoordinateFlag value) {
  _internal_mutable_applicable_flags()->Set(index, value);
  // @@protoc_insertion_point(field_set:seigr.coordinate.CoordinateRule.applicable_flags)
}
inline void CoordinateRule::add_applicable_flags(::seigr::coordinate::CoordinateFlag value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_applicable_flags()->Add(value);
  // @@protoc_insertion_point(field_add:seigr.coordinate.CoordinateRule.applicable_flags)
}
inline const ::google::protobuf::RepeatedField<int>& CoordinateRule::applicable_flags() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.coordinate.CoordinateRule.applicable_flags)
  return _internal_applicable_flags();
}
inline ::google::protobuf::RepeatedField<int>* CoordinateRule::mutable_applicable_flags()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.coordinate.CoordinateRule.applicable_flags)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_applicable_flags();
}
inline const ::google::protobuf::RepeatedField<int>& CoordinateRule::_internal_applicable_flags()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.applicable_flags_;
}
inline ::google::protobuf::RepeatedField<int>* CoordinateRule::_internal_mutable_applicable_flags() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.applicable_flags_;
}

// .seigr.coordinate.LayerType target_layer = 5;
inline void CoordinateRule::clear_target_layer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_layer_ = 0;
}
inline ::seigr::coordinate::LayerType CoordinateRule::target_layer() const {
  // @@protoc_insertion_point(field_get:seigr.coordinate.CoordinateRule.target_layer)
  return _internal_target_layer();
}
inline void CoordinateRule::set_target_layer(::seigr::coordinate::LayerType value) {
  _internal_set_target_layer(value);
  // @@protoc_insertion_point(field_set:seigr.coordinate.CoordinateRule.target_layer)
}
inline ::seigr::coordinate::LayerType CoordinateRule::_internal_target_layer() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::coordinate::LayerType>(_impl_.target_layer_);
}
inline void CoordinateRule::_internal_set_target_layer(::seigr::coordinate::LayerType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_layer_ = value;
}

// .seigr.coordinate.CoordinateRelationType relation_type = 6;
inline void CoordinateRule::clear_relation_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.relation_type_ = 0;
}
inline ::seigr::coordinate::CoordinateRelationType CoordinateRule::relation_type() const {
  // @@protoc_insertion_point(field_get:seigr.coordinate.CoordinateRule.relation_type)
  return _internal_relation_type();
}
inline void CoordinateRule::set_relation_type(::seigr::coordinate::CoordinateRelationType value) {
  _internal_set_relation_type(value);
  // @@protoc_insertion_point(field_set:seigr.coordinate.CoordinateRule.relation_type)
}
inline ::seigr::coordinate::CoordinateRelationType CoordinateRule::_internal_relation_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::coordinate::CoordinateRelationType>(_impl_.relation_type_);
}
inline void CoordinateRule::_internal_set_relation_type(::seigr::coordinate::CoordinateRelationType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.relation_type_ = value;
}

// map<string, string> metadata = 7;
inline int CoordinateRule::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int CoordinateRule::metadata_size() const {
  return _internal_metadata_size();
}
inline void CoordinateRule::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& CoordinateRule::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& CoordinateRule::metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.coordinate.CoordinateRule.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* CoordinateRule::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* CoordinateRule::mutable_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.coordinate.CoordinateRule.metadata)
  return _internal_mutable_metadata();
}

// bool is_mandatory = 8;
inline void CoordinateRule::clear_is_mandatory() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_mandatory_ = false;
}
inline bool CoordinateRule::is_mandatory() const {
  // @@protoc_insertion_point(field_get:seigr.coordinate.CoordinateRule.is_mandatory)
  return _internal_is_mandatory();
}
inline void CoordinateRule::set_is_mandatory(bool value) {
  _internal_set_is_mandatory(value);
  // @@protoc_insertion_point(field_set:seigr.coordinate.CoordinateRule.is_mandatory)
}
inline bool CoordinateRule::_internal_is_mandatory() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_mandatory_;
}
inline void CoordinateRule::_internal_set_is_mandatory(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_mandatory_ = value;
}

// string creation_timestamp = 9;
inline void CoordinateRule::clear_creation_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creation_timestamp_.ClearToEmpty();
}
inline const std::string& CoordinateRule::creation_timestamp() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.coordinate.CoordinateRule.creation_timestamp)
  return _internal_creation_timestamp();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CoordinateRule::set_creation_timestamp(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creation_timestamp_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.coordinate.CoordinateRule.creation_timestamp)
}
inline std::string* CoordinateRule::mutable_creation_timestamp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_creation_timestamp();
  // @@protoc_insertion_point(field_mutable:seigr.coordinate.CoordinateRule.creation_timestamp)
  return _s;
}
inline const std::string& CoordinateRule::_internal_creation_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.creation_timestamp_.Get();
}
inline void CoordinateRule::_internal_set_creation_timestamp(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creation_timestamp_.Set(value, GetArena());
}
inline std::string* CoordinateRule::_internal_mutable_creation_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.creation_timestamp_.Mutable( GetArena());
}
inline std::string* CoordinateRule::release_creation_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.coordinate.CoordinateRule.creation_timestamp)
  return _impl_.creation_timestamp_.Release();
}
inline void CoordinateRule::set_allocated_creation_timestamp(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creation_timestamp_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.creation_timestamp_.IsDefault()) {
    _impl_.creation_timestamp_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.coordinate.CoordinateRule.creation_timestamp)
}

// string updated_timestamp = 10;
inline void CoordinateRule::clear_updated_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_timestamp_.ClearToEmpty();
}
inline const std::string& CoordinateRule::updated_timestamp() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.coordinate.CoordinateRule.updated_timestamp)
  return _internal_updated_timestamp();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CoordinateRule::set_updated_timestamp(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_timestamp_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.coordinate.CoordinateRule.updated_timestamp)
}
inline std::string* CoordinateRule::mutable_updated_timestamp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_updated_timestamp();
  // @@protoc_insertion_point(field_mutable:seigr.coordinate.CoordinateRule.updated_timestamp)
  return _s;
}
inline const std::string& CoordinateRule::_internal_updated_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updated_timestamp_.Get();
}
inline void CoordinateRule::_internal_set_updated_timestamp(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_timestamp_.Set(value, GetArena());
}
inline std::string* CoordinateRule::_internal_mutable_updated_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.updated_timestamp_.Mutable( GetArena());
}
inline std::string* CoordinateRule::release_updated_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.coordinate.CoordinateRule.updated_timestamp)
  return _impl_.updated_timestamp_.Release();
}
inline void CoordinateRule::set_allocated_updated_timestamp(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updated_timestamp_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.updated_timestamp_.IsDefault()) {
    _impl_.updated_timestamp_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.coordinate.CoordinateRule.updated_timestamp)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// CoordinateSummary

// int32 total_coordinates = 1;
inline void CoordinateSummary::clear_total_coordinates() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_coordinates_ = 0;
}
inline ::int32_t CoordinateSummary::total_coordinates() const {
  // @@protoc_insertion_point(field_get:seigr.coordinate.CoordinateSummary.total_coordinates)
  return _internal_total_coordinates();
}
inline void CoordinateSummary::set_total_coordinates(::int32_t value) {
  _internal_set_total_coordinates(value);
  // @@protoc_insertion_point(field_set:seigr.coordinate.CoordinateSummary.total_coordinates)
}
inline ::int32_t CoordinateSummary::_internal_total_coordinates() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_coordinates_;
}
inline void CoordinateSummary::_internal_set_total_coordinates(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_coordinates_ = value;
}

// int32 active_coordinates = 2;
inline void CoordinateSummary::clear_active_coordinates() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.active_coordinates_ = 0;
}
inline ::int32_t CoordinateSummary::active_coordinates() const {
  // @@protoc_insertion_point(field_get:seigr.coordinate.CoordinateSummary.active_coordinates)
  return _internal_active_coordinates();
}
inline void CoordinateSummary::set_active_coordinates(::int32_t value) {
  _internal_set_active_coordinates(value);
  // @@protoc_insertion_point(field_set:seigr.coordinate.CoordinateSummary.active_coordinates)
}
inline ::int32_t CoordinateSummary::_internal_active_coordinates() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.active_coordinates_;
}
inline void CoordinateSummary::_internal_set_active_coordinates(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.active_coordinates_ = value;
}

// int32 inactive_coordinates = 3;
inline void CoordinateSummary::clear_inactive_coordinates() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inactive_coordinates_ = 0;
}
inline ::int32_t CoordinateSummary::inactive_coordinates() const {
  // @@protoc_insertion_point(field_get:seigr.coordinate.CoordinateSummary.inactive_coordinates)
  return _internal_inactive_coordinates();
}
inline void CoordinateSummary::set_inactive_coordinates(::int32_t value) {
  _internal_set_inactive_coordinates(value);
  // @@protoc_insertion_point(field_set:seigr.coordinate.CoordinateSummary.inactive_coordinates)
}
inline ::int32_t CoordinateSummary::_internal_inactive_coordinates() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.inactive_coordinates_;
}
inline void CoordinateSummary::_internal_set_inactive_coordinates(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inactive_coordinates_ = value;
}

// int32 flagged_coordinates = 4;
inline void CoordinateSummary::clear_flagged_coordinates() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flagged_coordinates_ = 0;
}
inline ::int32_t CoordinateSummary::flagged_coordinates() const {
  // @@protoc_insertion_point(field_get:seigr.coordinate.CoordinateSummary.flagged_coordinates)
  return _internal_flagged_coordinates();
}
inline void CoordinateSummary::set_flagged_coordinates(::int32_t value) {
  _internal_set_flagged_coordinates(value);
  // @@protoc_insertion_point(field_set:seigr.coordinate.CoordinateSummary.flagged_coordinates)
}
inline ::int32_t CoordinateSummary::_internal_flagged_coordinates() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.flagged_coordinates_;
}
inline void CoordinateSummary::_internal_set_flagged_coordinates(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flagged_coordinates_ = value;
}

// string last_updated = 5;
inline void CoordinateSummary::clear_last_updated() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_updated_.ClearToEmpty();
}
inline const std::string& CoordinateSummary::last_updated() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.coordinate.CoordinateSummary.last_updated)
  return _internal_last_updated();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CoordinateSummary::set_last_updated(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_updated_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.coordinate.CoordinateSummary.last_updated)
}
inline std::string* CoordinateSummary::mutable_last_updated() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_last_updated();
  // @@protoc_insertion_point(field_mutable:seigr.coordinate.CoordinateSummary.last_updated)
  return _s;
}
inline const std::string& CoordinateSummary::_internal_last_updated() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_updated_.Get();
}
inline void CoordinateSummary::_internal_set_last_updated(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_updated_.Set(value, GetArena());
}
inline std::string* CoordinateSummary::_internal_mutable_last_updated() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.last_updated_.Mutable( GetArena());
}
inline std::string* CoordinateSummary::release_last_updated() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.coordinate.CoordinateSummary.last_updated)
  return _impl_.last_updated_.Release();
}
inline void CoordinateSummary::set_allocated_last_updated(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_updated_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.last_updated_.IsDefault()) {
    _impl_.last_updated_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.coordinate.CoordinateSummary.last_updated)
}

// map<string, string> metadata = 6;
inline int CoordinateSummary::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int CoordinateSummary::metadata_size() const {
  return _internal_metadata_size();
}
inline void CoordinateSummary::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& CoordinateSummary::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& CoordinateSummary::metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.coordinate.CoordinateSummary.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* CoordinateSummary::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* CoordinateSummary::mutable_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.coordinate.CoordinateSummary.metadata)
  return _internal_mutable_metadata();
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace coordinate
}  // namespace seigr


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::seigr::coordinate::CoordinateRelationType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::seigr::coordinate::CoordinateRelationType>() {
  return ::seigr::coordinate::CoordinateRelationType_descriptor();
}
template <>
struct is_proto_enum<::seigr::coordinate::CoordinateFlag> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::seigr::coordinate::CoordinateFlag>() {
  return ::seigr::coordinate::CoordinateFlag_descriptor();
}
template <>
struct is_proto_enum<::seigr::coordinate::LayerType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::seigr::coordinate::LayerType>() {
  return ::seigr::coordinate::LayerType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // coordinate_2eproto_2epb_2eh
