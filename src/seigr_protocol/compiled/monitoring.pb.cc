// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: monitoring.proto
// Protobuf C++ Version: 5.29.2

#include "monitoring.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace seigr {
namespace monitoring {
              template <typename>
PROTOBUF_CONSTEXPR MonitoringCycleSummary_EscalationSummaryEntry_DoNotUse::MonitoringCycleSummary_EscalationSummaryEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : MonitoringCycleSummary_EscalationSummaryEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : MonitoringCycleSummary_EscalationSummaryEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct MonitoringCycleSummary_EscalationSummaryEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MonitoringCycleSummary_EscalationSummaryEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MonitoringCycleSummary_EscalationSummaryEntry_DoNotUseDefaultTypeInternal() {}
  union {
    MonitoringCycleSummary_EscalationSummaryEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MonitoringCycleSummary_EscalationSummaryEntry_DoNotUseDefaultTypeInternal _MonitoringCycleSummary_EscalationSummaryEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR MonitoringCycleSummary_DetectionTrendAnalysisEntry_DoNotUse::MonitoringCycleSummary_DetectionTrendAnalysisEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : MonitoringCycleSummary_DetectionTrendAnalysisEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : MonitoringCycleSummary_DetectionTrendAnalysisEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct MonitoringCycleSummary_DetectionTrendAnalysisEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MonitoringCycleSummary_DetectionTrendAnalysisEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MonitoringCycleSummary_DetectionTrendAnalysisEntry_DoNotUseDefaultTypeInternal() {}
  union {
    MonitoringCycleSummary_DetectionTrendAnalysisEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MonitoringCycleSummary_DetectionTrendAnalysisEntry_DoNotUseDefaultTypeInternal _MonitoringCycleSummary_DetectionTrendAnalysisEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR MonitoringCycleSummary_CycleMetadataEntry_DoNotUse::MonitoringCycleSummary_CycleMetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : MonitoringCycleSummary_CycleMetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : MonitoringCycleSummary_CycleMetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct MonitoringCycleSummary_CycleMetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MonitoringCycleSummary_CycleMetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MonitoringCycleSummary_CycleMetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    MonitoringCycleSummary_CycleMetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MonitoringCycleSummary_CycleMetadataEntry_DoNotUseDefaultTypeInternal _MonitoringCycleSummary_CycleMetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR MonitoringConfig_ConfigMetadataEntry_DoNotUse::MonitoringConfig_ConfigMetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : MonitoringConfig_ConfigMetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : MonitoringConfig_ConfigMetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct MonitoringConfig_ConfigMetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MonitoringConfig_ConfigMetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MonitoringConfig_ConfigMetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    MonitoringConfig_ConfigMetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MonitoringConfig_ConfigMetadataEntry_DoNotUseDefaultTypeInternal _MonitoringConfig_ConfigMetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR EscalationHistory_AdditionalInfoEntry_DoNotUse::EscalationHistory_AdditionalInfoEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : EscalationHistory_AdditionalInfoEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : EscalationHistory_AdditionalInfoEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct EscalationHistory_AdditionalInfoEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EscalationHistory_AdditionalInfoEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EscalationHistory_AdditionalInfoEntry_DoNotUseDefaultTypeInternal() {}
  union {
    EscalationHistory_AdditionalInfoEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EscalationHistory_AdditionalInfoEntry_DoNotUseDefaultTypeInternal _EscalationHistory_AdditionalInfoEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR Escalation_MetadataEntry_DoNotUse::Escalation_MetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : Escalation_MetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : Escalation_MetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct Escalation_MetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Escalation_MetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Escalation_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Escalation_MetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Escalation_MetadataEntry_DoNotUseDefaultTypeInternal _Escalation_MetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR AdaptiveMonitoringLog_LogMetadataEntry_DoNotUse::AdaptiveMonitoringLog_LogMetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : AdaptiveMonitoringLog_LogMetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : AdaptiveMonitoringLog_LogMetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct AdaptiveMonitoringLog_LogMetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AdaptiveMonitoringLog_LogMetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AdaptiveMonitoringLog_LogMetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    AdaptiveMonitoringLog_LogMetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AdaptiveMonitoringLog_LogMetadataEntry_DoNotUseDefaultTypeInternal _AdaptiveMonitoringLog_LogMetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR AdaptiveMonitoringLog_AdaptiveParametersEntry_DoNotUse::AdaptiveMonitoringLog_AdaptiveParametersEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : AdaptiveMonitoringLog_AdaptiveParametersEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : AdaptiveMonitoringLog_AdaptiveParametersEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct AdaptiveMonitoringLog_AdaptiveParametersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AdaptiveMonitoringLog_AdaptiveParametersEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AdaptiveMonitoringLog_AdaptiveParametersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    AdaptiveMonitoringLog_AdaptiveParametersEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AdaptiveMonitoringLog_AdaptiveParametersEntry_DoNotUseDefaultTypeInternal _AdaptiveMonitoringLog_AdaptiveParametersEntry_DoNotUse_default_instance_;

inline constexpr MonitoringCycleSummary::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : highlighted_segments_{},
        cycle_metadata_{},
        escalation_summary_{},
        detection_trend_analysis_{},
        summary_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        cycle_timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        next_cycle_scheduled_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        cycle_summary_notes_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        total_checks_conducted_{0},
        escalations_triggered_{0},
        critical_detections_{0},
        average_detection_accuracy_{0},
        adaptive_measures_applied_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MonitoringCycleSummary::MonitoringCycleSummary(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MonitoringCycleSummaryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MonitoringCycleSummaryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MonitoringCycleSummaryDefaultTypeInternal() {}
  union {
    MonitoringCycleSummary _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MonitoringCycleSummaryDefaultTypeInternal _MonitoringCycleSummary_default_instance_;

inline constexpr MonitoringConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : config_metadata_{},
        config_version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        last_updated_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        default_response_strategy_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        fallback_strategy_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        critical_threshold_{0},
        severe_threshold_{0},
        moderate_threshold_{0},
        adaptive_check_interval_seconds_{0},
        alert_frequency_minutes_{0},
        enable_auto_lockdown_{false},
        enable_severity_scaling_{false},
        dynamic_alert_scaling_{false},
        enable_centralized_logging_{false},
        data_volume_threshold_{0},
        high_frequency_monitoring_interval_{0},
        adaptive_threshold_adjustment_{0},
        prioritize_high_risk_zones_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MonitoringConfig::MonitoringConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MonitoringConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MonitoringConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MonitoringConfigDefaultTypeInternal() {}
  union {
    MonitoringConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MonitoringConfigDefaultTypeInternal _MonitoringConfig_default_instance_;

inline constexpr EscalationHistory::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : additional_info_{},
        update_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        action_taken_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        updated_by_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        adaptive_action_flag_{false},
        threat_escalation_score_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EscalationHistory::EscalationHistory(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EscalationHistoryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EscalationHistoryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EscalationHistoryDefaultTypeInternal() {}
  union {
    EscalationHistory _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EscalationHistoryDefaultTypeInternal _EscalationHistory_default_instance_;

inline constexpr AdaptiveMonitoringLog::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : log_metadata_{},
        adaptive_parameters_{},
        log_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        monitored_segment_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        check_timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        escalation_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        response_action_taken_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        next_check_scheduled_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        monitoring_operator_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        protocol_adjustment_notes_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        data_source_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        detected_threat_level_{static_cast< ::seigr::common::ThreatLevel >(0)},
        detection_accuracy_{0},
        triggered_escalation_{false},
        proactive_response_enabled_{false},
        escalation_probability_score_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AdaptiveMonitoringLog::AdaptiveMonitoringLog(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AdaptiveMonitoringLogDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AdaptiveMonitoringLogDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AdaptiveMonitoringLogDefaultTypeInternal() {}
  union {
    AdaptiveMonitoringLog _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AdaptiveMonitoringLogDefaultTypeInternal _AdaptiveMonitoringLog_default_instance_;

inline constexpr Escalation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : alert_recipients_{},
        metadata_{},
        escalation_history_{},
        escalation_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        segment_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        escalated_at_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        escalation_reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        response_status_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        responder_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        resolution_timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        response_details_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        next_review_timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        threat_level_{static_cast< ::seigr::common::ThreatLevel >(0)},
        escalation_type_{static_cast< ::seigr::monitoring::EscalationType >(0)},
        replication_triggered_{false},
        critical_protocol_override_{false},
        user_intervention_required_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Escalation::Escalation(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EscalationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EscalationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EscalationDefaultTypeInternal() {}
  union {
    Escalation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EscalationDefaultTypeInternal _Escalation_default_instance_;
}  // namespace monitoring
}  // namespace seigr
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_monitoring_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_monitoring_2eproto = nullptr;
const ::uint32_t
    TableStruct_monitoring_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::Escalation_MetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::Escalation_MetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::Escalation_MetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::Escalation_MetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::Escalation, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::Escalation, _impl_.escalation_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::Escalation, _impl_.segment_hash_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::Escalation, _impl_.threat_level_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::Escalation, _impl_.escalation_type_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::Escalation, _impl_.escalated_at_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::Escalation, _impl_.replication_triggered_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::Escalation, _impl_.escalation_reason_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::Escalation, _impl_.alert_recipients_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::Escalation, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::Escalation, _impl_.response_status_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::Escalation, _impl_.responder_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::Escalation, _impl_.resolution_timestamp_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::Escalation, _impl_.response_details_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::Escalation, _impl_.next_review_timestamp_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::Escalation, _impl_.escalation_history_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::Escalation, _impl_.critical_protocol_override_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::Escalation, _impl_.user_intervention_required_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::EscalationHistory_AdditionalInfoEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::EscalationHistory_AdditionalInfoEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::EscalationHistory_AdditionalInfoEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::EscalationHistory_AdditionalInfoEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::EscalationHistory, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::EscalationHistory, _impl_.update_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::EscalationHistory, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::EscalationHistory, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::EscalationHistory, _impl_.action_taken_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::EscalationHistory, _impl_.updated_by_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::EscalationHistory, _impl_.additional_info_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::EscalationHistory, _impl_.adaptive_action_flag_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::EscalationHistory, _impl_.threat_escalation_score_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::MonitoringConfig_ConfigMetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::MonitoringConfig_ConfigMetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::MonitoringConfig_ConfigMetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::MonitoringConfig_ConfigMetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::MonitoringConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::MonitoringConfig, _impl_.critical_threshold_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::MonitoringConfig, _impl_.severe_threshold_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::MonitoringConfig, _impl_.moderate_threshold_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::MonitoringConfig, _impl_.adaptive_check_interval_seconds_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::MonitoringConfig, _impl_.alert_frequency_minutes_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::MonitoringConfig, _impl_.enable_auto_lockdown_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::MonitoringConfig, _impl_.config_metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::MonitoringConfig, _impl_.config_version_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::MonitoringConfig, _impl_.last_updated_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::MonitoringConfig, _impl_.enable_severity_scaling_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::MonitoringConfig, _impl_.default_response_strategy_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::MonitoringConfig, _impl_.dynamic_alert_scaling_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::MonitoringConfig, _impl_.fallback_strategy_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::MonitoringConfig, _impl_.data_volume_threshold_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::MonitoringConfig, _impl_.high_frequency_monitoring_interval_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::MonitoringConfig, _impl_.adaptive_threshold_adjustment_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::MonitoringConfig, _impl_.enable_centralized_logging_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::MonitoringConfig, _impl_.prioritize_high_risk_zones_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::AdaptiveMonitoringLog_LogMetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::AdaptiveMonitoringLog_LogMetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::AdaptiveMonitoringLog_LogMetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::AdaptiveMonitoringLog_LogMetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::AdaptiveMonitoringLog_AdaptiveParametersEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::AdaptiveMonitoringLog_AdaptiveParametersEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::AdaptiveMonitoringLog_AdaptiveParametersEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::AdaptiveMonitoringLog_AdaptiveParametersEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::AdaptiveMonitoringLog, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::AdaptiveMonitoringLog, _impl_.log_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::AdaptiveMonitoringLog, _impl_.monitored_segment_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::AdaptiveMonitoringLog, _impl_.detected_threat_level_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::AdaptiveMonitoringLog, _impl_.check_timestamp_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::AdaptiveMonitoringLog, _impl_.triggered_escalation_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::AdaptiveMonitoringLog, _impl_.escalation_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::AdaptiveMonitoringLog, _impl_.log_metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::AdaptiveMonitoringLog, _impl_.response_action_taken_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::AdaptiveMonitoringLog, _impl_.next_check_scheduled_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::AdaptiveMonitoringLog, _impl_.detection_accuracy_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::AdaptiveMonitoringLog, _impl_.monitoring_operator_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::AdaptiveMonitoringLog, _impl_.adaptive_parameters_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::AdaptiveMonitoringLog, _impl_.escalation_probability_score_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::AdaptiveMonitoringLog, _impl_.protocol_adjustment_notes_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::AdaptiveMonitoringLog, _impl_.data_source_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::AdaptiveMonitoringLog, _impl_.proactive_response_enabled_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::MonitoringCycleSummary_CycleMetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::MonitoringCycleSummary_CycleMetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::MonitoringCycleSummary_CycleMetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::MonitoringCycleSummary_CycleMetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::MonitoringCycleSummary_EscalationSummaryEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::MonitoringCycleSummary_EscalationSummaryEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::MonitoringCycleSummary_EscalationSummaryEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::MonitoringCycleSummary_EscalationSummaryEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::MonitoringCycleSummary_DetectionTrendAnalysisEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::MonitoringCycleSummary_DetectionTrendAnalysisEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::MonitoringCycleSummary_DetectionTrendAnalysisEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::MonitoringCycleSummary_DetectionTrendAnalysisEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::MonitoringCycleSummary, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::MonitoringCycleSummary, _impl_.summary_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::MonitoringCycleSummary, _impl_.cycle_timestamp_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::MonitoringCycleSummary, _impl_.total_checks_conducted_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::MonitoringCycleSummary, _impl_.escalations_triggered_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::MonitoringCycleSummary, _impl_.critical_detections_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::MonitoringCycleSummary, _impl_.average_detection_accuracy_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::MonitoringCycleSummary, _impl_.highlighted_segments_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::MonitoringCycleSummary, _impl_.cycle_metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::MonitoringCycleSummary, _impl_.next_cycle_scheduled_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::MonitoringCycleSummary, _impl_.adaptive_measures_applied_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::MonitoringCycleSummary, _impl_.escalation_summary_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::MonitoringCycleSummary, _impl_.detection_trend_analysis_),
        PROTOBUF_FIELD_OFFSET(::seigr::monitoring::MonitoringCycleSummary, _impl_.cycle_summary_notes_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::seigr::monitoring::Escalation_MetadataEntry_DoNotUse)},
        {12, -1, -1, sizeof(::seigr::monitoring::Escalation)},
        {37, 47, -1, sizeof(::seigr::monitoring::EscalationHistory_AdditionalInfoEntry_DoNotUse)},
        {49, -1, -1, sizeof(::seigr::monitoring::EscalationHistory)},
        {65, 75, -1, sizeof(::seigr::monitoring::MonitoringConfig_ConfigMetadataEntry_DoNotUse)},
        {77, -1, -1, sizeof(::seigr::monitoring::MonitoringConfig)},
        {103, 113, -1, sizeof(::seigr::monitoring::AdaptiveMonitoringLog_LogMetadataEntry_DoNotUse)},
        {115, 125, -1, sizeof(::seigr::monitoring::AdaptiveMonitoringLog_AdaptiveParametersEntry_DoNotUse)},
        {127, -1, -1, sizeof(::seigr::monitoring::AdaptiveMonitoringLog)},
        {151, 161, -1, sizeof(::seigr::monitoring::MonitoringCycleSummary_CycleMetadataEntry_DoNotUse)},
        {163, 173, -1, sizeof(::seigr::monitoring::MonitoringCycleSummary_EscalationSummaryEntry_DoNotUse)},
        {175, 185, -1, sizeof(::seigr::monitoring::MonitoringCycleSummary_DetectionTrendAnalysisEntry_DoNotUse)},
        {187, -1, -1, sizeof(::seigr::monitoring::MonitoringCycleSummary)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::seigr::monitoring::_Escalation_MetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::monitoring::_Escalation_default_instance_._instance,
    &::seigr::monitoring::_EscalationHistory_AdditionalInfoEntry_DoNotUse_default_instance_._instance,
    &::seigr::monitoring::_EscalationHistory_default_instance_._instance,
    &::seigr::monitoring::_MonitoringConfig_ConfigMetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::monitoring::_MonitoringConfig_default_instance_._instance,
    &::seigr::monitoring::_AdaptiveMonitoringLog_LogMetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::monitoring::_AdaptiveMonitoringLog_AdaptiveParametersEntry_DoNotUse_default_instance_._instance,
    &::seigr::monitoring::_AdaptiveMonitoringLog_default_instance_._instance,
    &::seigr::monitoring::_MonitoringCycleSummary_CycleMetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::monitoring::_MonitoringCycleSummary_EscalationSummaryEntry_DoNotUse_default_instance_._instance,
    &::seigr::monitoring::_MonitoringCycleSummary_DetectionTrendAnalysisEntry_DoNotUse_default_instance_._instance,
    &::seigr::monitoring::_MonitoringCycleSummary_default_instance_._instance,
};
const char descriptor_table_protodef_monitoring_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\020monitoring.proto\022\020seigr.monitoring\032\014co"
    "mmon.proto\"\215\005\n\nEscalation\022\025\n\rescalation_"
    "id\030\001 \001(\t\022\024\n\014segment_hash\030\002 \001(\t\022/\n\014threat"
    "_level\030\003 \001(\0162\031.seigr.common.ThreatLevel\022"
    "9\n\017escalation_type\030\004 \001(\0162 .seigr.monitor"
    "ing.EscalationType\022\024\n\014escalated_at\030\005 \001(\t"
    "\022\035\n\025replication_triggered\030\006 \001(\010\022\031\n\021escal"
    "ation_reason\030\007 \001(\t\022\030\n\020alert_recipients\030\010"
    " \003(\t\022<\n\010metadata\030\t \003(\0132*.seigr.monitorin"
    "g.Escalation.MetadataEntry\022\027\n\017response_s"
    "tatus\030\n \001(\t\022\024\n\014responder_id\030\013 \001(\t\022\034\n\024res"
    "olution_timestamp\030\014 \001(\t\022\030\n\020response_deta"
    "ils\030\r \001(\t\022\035\n\025next_review_timestamp\030\016 \001(\t"
    "\022\?\n\022escalation_history\030\017 \003(\0132#.seigr.mon"
    "itoring.EscalationHistory\022\"\n\032critical_pr"
    "otocol_override\030\020 \001(\010\022\"\n\032user_interventi"
    "on_required\030\021 \001(\010\032/\n\rMetadataEntry\022\013\n\003ke"
    "y\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\273\002\n\021Escalatio"
    "nHistory\022\021\n\tupdate_id\030\001 \001(\t\022\021\n\ttimestamp"
    "\030\002 \001(\t\022\016\n\006status\030\003 \001(\t\022\024\n\014action_taken\030\004"
    " \001(\t\022\022\n\nupdated_by\030\005 \001(\t\022P\n\017additional_i"
    "nfo\030\006 \003(\01327.seigr.monitoring.EscalationH"
    "istory.AdditionalInfoEntry\022\034\n\024adaptive_a"
    "ction_flag\030\007 \001(\010\022\037\n\027threat_escalation_sc"
    "ore\030\010 \001(\002\0325\n\023AdditionalInfoEntry\022\013\n\003key\030"
    "\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\272\005\n\020MonitoringC"
    "onfig\022\032\n\022critical_threshold\030\001 \001(\005\022\030\n\020sev"
    "ere_threshold\030\002 \001(\005\022\032\n\022moderate_threshol"
    "d\030\003 \001(\005\022\'\n\037adaptive_check_interval_secon"
    "ds\030\004 \001(\005\022\037\n\027alert_frequency_minutes\030\005 \001("
    "\005\022\034\n\024enable_auto_lockdown\030\006 \001(\010\022O\n\017confi"
    "g_metadata\030\007 \003(\01326.seigr.monitoring.Moni"
    "toringConfig.ConfigMetadataEntry\022\026\n\016conf"
    "ig_version\030\010 \001(\t\022\024\n\014last_updated\030\t \001(\t\022\037"
    "\n\027enable_severity_scaling\030\n \001(\010\022!\n\031defau"
    "lt_response_strategy\030\013 \001(\t\022\035\n\025dynamic_al"
    "ert_scaling\030\014 \001(\010\022\031\n\021fallback_strategy\030\r"
    " \001(\t\022\035\n\025data_volume_threshold\030\016 \001(\005\022*\n\"h"
    "igh_frequency_monitoring_interval\030\017 \001(\005\022"
    "%\n\035adaptive_threshold_adjustment\030\020 \001(\002\022\""
    "\n\032enable_centralized_logging\030\021 \001(\010\022\"\n\032pr"
    "ioritize_high_risk_zones\030\022 \001(\010\0325\n\023Config"
    "MetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001("
    "\t:\0028\001\"\342\005\n\025AdaptiveMonitoringLog\022\016\n\006log_i"
    "d\030\001 \001(\t\022\031\n\021monitored_segment\030\002 \001(\t\0228\n\025de"
    "tected_threat_level\030\003 \001(\0162\031.seigr.common"
    ".ThreatLevel\022\027\n\017check_timestamp\030\004 \001(\t\022\034\n"
    "\024triggered_escalation\030\005 \001(\010\022\025\n\rescalatio"
    "n_id\030\006 \001(\t\022N\n\014log_metadata\030\007 \003(\01328.seigr"
    ".monitoring.AdaptiveMonitoringLog.LogMet"
    "adataEntry\022\035\n\025response_action_taken\030\010 \001("
    "\t\022\034\n\024next_check_scheduled\030\t \001(\t\022\032\n\022detec"
    "tion_accuracy\030\n \001(\002\022\033\n\023monitoring_operat"
    "or\030\013 \001(\t\022\\\n\023adaptive_parameters\030\014 \003(\0132\?."
    "seigr.monitoring.AdaptiveMonitoringLog.A"
    "daptiveParametersEntry\022$\n\034escalation_pro"
    "bability_score\030\r \001(\002\022!\n\031protocol_adjustm"
    "ent_notes\030\016 \001(\t\022\026\n\016data_source_id\030\017 \001(\t\022"
    "\"\n\032proactive_response_enabled\030\020 \001(\010\0322\n\020L"
    "ogMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 "
    "\001(\t:\0028\001\0329\n\027AdaptiveParametersEntry\022\013\n\003ke"
    "y\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\212\006\n\026Monitorin"
    "gCycleSummary\022\022\n\nsummary_id\030\001 \001(\t\022\027\n\017cyc"
    "le_timestamp\030\002 \001(\t\022\036\n\026total_checks_condu"
    "cted\030\003 \001(\005\022\035\n\025escalations_triggered\030\004 \001("
    "\005\022\033\n\023critical_detections\030\005 \001(\005\022\"\n\032averag"
    "e_detection_accuracy\030\006 \001(\002\022\034\n\024highlighte"
    "d_segments\030\007 \003(\t\022S\n\016cycle_metadata\030\010 \003(\013"
    "2;.seigr.monitoring.MonitoringCycleSumma"
    "ry.CycleMetadataEntry\022\034\n\024next_cycle_sche"
    "duled\030\t \001(\t\022!\n\031adaptive_measures_applied"
    "\030\n \001(\010\022[\n\022escalation_summary\030\013 \003(\0132\?.sei"
    "gr.monitoring.MonitoringCycleSummary.Esc"
    "alationSummaryEntry\022f\n\030detection_trend_a"
    "nalysis\030\014 \003(\0132D.seigr.monitoring.Monitor"
    "ingCycleSummary.DetectionTrendAnalysisEn"
    "try\022\033\n\023cycle_summary_notes\030\r \001(\t\0324\n\022Cycl"
    "eMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001"
    "(\t:\0028\001\0328\n\026EscalationSummaryEntry\022\013\n\003key\030"
    "\001 \001(\t\022\r\n\005value\030\002 \001(\005:\0028\001\032=\n\033DetectionTre"
    "ndAnalysisEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 "
    "\001(\002:\0028\001*\365\001\n\016EscalationType\022\035\n\031ESCALATION"
    "_TYPE_UNDEFINED\020\000\022&\n\"ESCALATION_TYPE_THR"
    "EAT_REPLICATION\020\001\022\036\n\032ESCALATION_TYPE_ALE"
    "RT_ONLY\020\002\022#\n\037ESCALATION_TYPE_SYSTEM_LOCK"
    "DOWN\020\003\022,\n(ESCALATION_TYPE_ADAPTIVE_RECON"
    "FIGURATION\020\004\022)\n%ESCALATION_TYPE_USER_ALE"
    "RT_ESCALATION\020\005b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_monitoring_2eproto_deps[1] =
    {
        &::descriptor_table_common_2eproto,
};
static ::absl::once_flag descriptor_table_monitoring_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_monitoring_2eproto = {
    false,
    false,
    3503,
    descriptor_table_protodef_monitoring_2eproto,
    "monitoring.proto",
    &descriptor_table_monitoring_2eproto_once,
    descriptor_table_monitoring_2eproto_deps,
    1,
    13,
    schemas,
    file_default_instances,
    TableStruct_monitoring_2eproto::offsets,
    file_level_enum_descriptors_monitoring_2eproto,
    file_level_service_descriptors_monitoring_2eproto,
};
namespace seigr {
namespace monitoring {
const ::google::protobuf::EnumDescriptor* EscalationType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_monitoring_2eproto);
  return file_level_enum_descriptors_monitoring_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t EscalationType_internal_data_[] = {
    393216u, 0u, };
bool EscalationType_IsValid(int value) {
  return 0 <= value && value <= 5;
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              Escalation_MetadataEntry_DoNotUse::Escalation_MetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              Escalation_MetadataEntry_DoNotUse::Escalation_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              Escalation_MetadataEntry_DoNotUse::Escalation_MetadataEntry_DoNotUse() : SuperType() {}
              Escalation_MetadataEntry_DoNotUse::Escalation_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* Escalation_MetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) Escalation_MetadataEntry_DoNotUse(arena);
              }
              constexpr auto Escalation_MetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Escalation_MetadataEntry_DoNotUse),
                                                          alignof(Escalation_MetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull Escalation_MetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_Escalation_MetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &Escalation_MetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<Escalation_MetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &Escalation_MetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &Escalation_MetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(Escalation_MetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &Escalation_MetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_monitoring_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* Escalation_MetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 58, 2> Escalation_MetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Escalation_MetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::monitoring::Escalation_MetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Escalation_MetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Escalation_MetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(Escalation_MetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(Escalation_MetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\51\3\5\0\0\0\0\0"
    "seigr.monitoring.Escalation.MetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class Escalation::_Internal {
 public:
};

Escalation::Escalation(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.monitoring.Escalation)
}
inline PROTOBUF_NDEBUG_INLINE Escalation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::monitoring::Escalation& from_msg)
      : alert_recipients_{visibility, arena, from.alert_recipients_},
        metadata_{visibility, arena, from.metadata_},
        escalation_history_{visibility, arena, from.escalation_history_},
        escalation_id_(arena, from.escalation_id_),
        segment_hash_(arena, from.segment_hash_),
        escalated_at_(arena, from.escalated_at_),
        escalation_reason_(arena, from.escalation_reason_),
        response_status_(arena, from.response_status_),
        responder_id_(arena, from.responder_id_),
        resolution_timestamp_(arena, from.resolution_timestamp_),
        response_details_(arena, from.response_details_),
        next_review_timestamp_(arena, from.next_review_timestamp_),
        _cached_size_{0} {}

Escalation::Escalation(
    ::google::protobuf::Arena* arena,
    const Escalation& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Escalation* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, threat_level_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, threat_level_),
           offsetof(Impl_, user_intervention_required_) -
               offsetof(Impl_, threat_level_) +
               sizeof(Impl_::user_intervention_required_));

  // @@protoc_insertion_point(copy_constructor:seigr.monitoring.Escalation)
}
inline PROTOBUF_NDEBUG_INLINE Escalation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : alert_recipients_{visibility, arena},
        metadata_{visibility, arena},
        escalation_history_{visibility, arena},
        escalation_id_(arena),
        segment_hash_(arena),
        escalated_at_(arena),
        escalation_reason_(arena),
        response_status_(arena),
        responder_id_(arena),
        resolution_timestamp_(arena),
        response_details_(arena),
        next_review_timestamp_(arena),
        _cached_size_{0} {}

inline void Escalation::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, threat_level_),
           0,
           offsetof(Impl_, user_intervention_required_) -
               offsetof(Impl_, threat_level_) +
               sizeof(Impl_::user_intervention_required_));
}
Escalation::~Escalation() {
  // @@protoc_insertion_point(destructor:seigr.monitoring.Escalation)
  SharedDtor(*this);
}
inline void Escalation::SharedDtor(MessageLite& self) {
  Escalation& this_ = static_cast<Escalation&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.escalation_id_.Destroy();
  this_._impl_.segment_hash_.Destroy();
  this_._impl_.escalated_at_.Destroy();
  this_._impl_.escalation_reason_.Destroy();
  this_._impl_.response_status_.Destroy();
  this_._impl_.responder_id_.Destroy();
  this_._impl_.resolution_timestamp_.Destroy();
  this_._impl_.response_details_.Destroy();
  this_._impl_.next_review_timestamp_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Escalation::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Escalation(arena);
}
constexpr auto Escalation::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Escalation, _impl_.alert_recipients_) +
          decltype(Escalation::_impl_.alert_recipients_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Escalation, _impl_.metadata_) +
          decltype(Escalation::_impl_.metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Escalation, _impl_.metadata_) +
          decltype(Escalation::_impl_.metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Escalation, _impl_.escalation_history_) +
          decltype(Escalation::_impl_.escalation_history_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Escalation), alignof(Escalation), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Escalation::PlacementNew_,
                                 sizeof(Escalation),
                                 alignof(Escalation));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Escalation::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Escalation_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Escalation::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Escalation>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Escalation::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Escalation>(), &Escalation::ByteSizeLong,
            &Escalation::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Escalation, _impl_._cached_size_),
        false,
    },
    &Escalation::kDescriptorMethods,
    &descriptor_table_monitoring_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Escalation::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 17, 2, 214, 2> Escalation::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    17, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294836224,  // skipmap
    offsetof(decltype(_table_), field_entries),
    17,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::monitoring::Escalation>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string escalation_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Escalation, _impl_.escalation_id_)}},
    // string segment_hash = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Escalation, _impl_.segment_hash_)}},
    // .seigr.common.ThreatLevel threat_level = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Escalation, _impl_.threat_level_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Escalation, _impl_.threat_level_)}},
    // .seigr.monitoring.EscalationType escalation_type = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Escalation, _impl_.escalation_type_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Escalation, _impl_.escalation_type_)}},
    // string escalated_at = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Escalation, _impl_.escalated_at_)}},
    // bool replication_triggered = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Escalation, _impl_.replication_triggered_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(Escalation, _impl_.replication_triggered_)}},
    // string escalation_reason = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(Escalation, _impl_.escalation_reason_)}},
    // repeated string alert_recipients = 8;
    {::_pbi::TcParser::FastUR1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(Escalation, _impl_.alert_recipients_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string response_status = 10;
    {::_pbi::TcParser::FastUS1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(Escalation, _impl_.response_status_)}},
    // string responder_id = 11;
    {::_pbi::TcParser::FastUS1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(Escalation, _impl_.responder_id_)}},
    // string resolution_timestamp = 12;
    {::_pbi::TcParser::FastUS1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(Escalation, _impl_.resolution_timestamp_)}},
    // string response_details = 13;
    {::_pbi::TcParser::FastUS1,
     {106, 63, 0, PROTOBUF_FIELD_OFFSET(Escalation, _impl_.response_details_)}},
    // string next_review_timestamp = 14;
    {::_pbi::TcParser::FastUS1,
     {114, 63, 0, PROTOBUF_FIELD_OFFSET(Escalation, _impl_.next_review_timestamp_)}},
    // repeated .seigr.monitoring.EscalationHistory escalation_history = 15;
    {::_pbi::TcParser::FastMtR1,
     {122, 63, 0, PROTOBUF_FIELD_OFFSET(Escalation, _impl_.escalation_history_)}},
    // bool critical_protocol_override = 16;
    {::_pbi::TcParser::FastV8S2,
     {384, 63, 0, PROTOBUF_FIELD_OFFSET(Escalation, _impl_.critical_protocol_override_)}},
    // bool user_intervention_required = 17;
    {::_pbi::TcParser::FastV8S2,
     {392, 63, 0, PROTOBUF_FIELD_OFFSET(Escalation, _impl_.user_intervention_required_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string escalation_id = 1;
    {PROTOBUF_FIELD_OFFSET(Escalation, _impl_.escalation_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string segment_hash = 2;
    {PROTOBUF_FIELD_OFFSET(Escalation, _impl_.segment_hash_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.common.ThreatLevel threat_level = 3;
    {PROTOBUF_FIELD_OFFSET(Escalation, _impl_.threat_level_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .seigr.monitoring.EscalationType escalation_type = 4;
    {PROTOBUF_FIELD_OFFSET(Escalation, _impl_.escalation_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string escalated_at = 5;
    {PROTOBUF_FIELD_OFFSET(Escalation, _impl_.escalated_at_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool replication_triggered = 6;
    {PROTOBUF_FIELD_OFFSET(Escalation, _impl_.replication_triggered_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string escalation_reason = 7;
    {PROTOBUF_FIELD_OFFSET(Escalation, _impl_.escalation_reason_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string alert_recipients = 8;
    {PROTOBUF_FIELD_OFFSET(Escalation, _impl_.alert_recipients_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // map<string, string> metadata = 9;
    {PROTOBUF_FIELD_OFFSET(Escalation, _impl_.metadata_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string response_status = 10;
    {PROTOBUF_FIELD_OFFSET(Escalation, _impl_.response_status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string responder_id = 11;
    {PROTOBUF_FIELD_OFFSET(Escalation, _impl_.responder_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string resolution_timestamp = 12;
    {PROTOBUF_FIELD_OFFSET(Escalation, _impl_.resolution_timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string response_details = 13;
    {PROTOBUF_FIELD_OFFSET(Escalation, _impl_.response_details_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string next_review_timestamp = 14;
    {PROTOBUF_FIELD_OFFSET(Escalation, _impl_.next_review_timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .seigr.monitoring.EscalationHistory escalation_history = 15;
    {PROTOBUF_FIELD_OFFSET(Escalation, _impl_.escalation_history_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool critical_protocol_override = 16;
    {PROTOBUF_FIELD_OFFSET(Escalation, _impl_.critical_protocol_override_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool user_intervention_required = 17;
    {PROTOBUF_FIELD_OFFSET(Escalation, _impl_.user_intervention_required_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::seigr::monitoring::EscalationHistory>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(Escalation()._impl_.metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\33\15\14\0\0\14\0\21\20\10\17\14\24\20\25\0\0\0\0\0\0\0\0\0"
    "seigr.monitoring.Escalation"
    "escalation_id"
    "segment_hash"
    "escalated_at"
    "escalation_reason"
    "alert_recipients"
    "metadata"
    "response_status"
    "responder_id"
    "resolution_timestamp"
    "response_details"
    "next_review_timestamp"
  }},
};

PROTOBUF_NOINLINE void Escalation::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.monitoring.Escalation)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.alert_recipients_.Clear();
  _impl_.metadata_.Clear();
  _impl_.escalation_history_.Clear();
  _impl_.escalation_id_.ClearToEmpty();
  _impl_.segment_hash_.ClearToEmpty();
  _impl_.escalated_at_.ClearToEmpty();
  _impl_.escalation_reason_.ClearToEmpty();
  _impl_.response_status_.ClearToEmpty();
  _impl_.responder_id_.ClearToEmpty();
  _impl_.resolution_timestamp_.ClearToEmpty();
  _impl_.response_details_.ClearToEmpty();
  _impl_.next_review_timestamp_.ClearToEmpty();
  ::memset(&_impl_.threat_level_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.user_intervention_required_) -
      reinterpret_cast<char*>(&_impl_.threat_level_)) + sizeof(_impl_.user_intervention_required_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Escalation::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Escalation& this_ = static_cast<const Escalation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Escalation::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Escalation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.monitoring.Escalation)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string escalation_id = 1;
          if (!this_._internal_escalation_id().empty()) {
            const std::string& _s = this_._internal_escalation_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.Escalation.escalation_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string segment_hash = 2;
          if (!this_._internal_segment_hash().empty()) {
            const std::string& _s = this_._internal_segment_hash();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.Escalation.segment_hash");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // .seigr.common.ThreatLevel threat_level = 3;
          if (this_._internal_threat_level() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_threat_level(), target);
          }

          // .seigr.monitoring.EscalationType escalation_type = 4;
          if (this_._internal_escalation_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                4, this_._internal_escalation_type(), target);
          }

          // string escalated_at = 5;
          if (!this_._internal_escalated_at().empty()) {
            const std::string& _s = this_._internal_escalated_at();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.Escalation.escalated_at");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // bool replication_triggered = 6;
          if (this_._internal_replication_triggered() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                6, this_._internal_replication_triggered(), target);
          }

          // string escalation_reason = 7;
          if (!this_._internal_escalation_reason().empty()) {
            const std::string& _s = this_._internal_escalation_reason();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.Escalation.escalation_reason");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // repeated string alert_recipients = 8;
          for (int i = 0, n = this_._internal_alert_recipients_size(); i < n; ++i) {
            const auto& s = this_._internal_alert_recipients().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.Escalation.alert_recipients");
            target = stream->WriteString(8, s, target);
          }

          // map<string, string> metadata = 9;
          if (!this_._internal_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    9, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.Escalation.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.Escalation.metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    9, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.Escalation.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.Escalation.metadata");
              }
            }
          }

          // string response_status = 10;
          if (!this_._internal_response_status().empty()) {
            const std::string& _s = this_._internal_response_status();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.Escalation.response_status");
            target = stream->WriteStringMaybeAliased(10, _s, target);
          }

          // string responder_id = 11;
          if (!this_._internal_responder_id().empty()) {
            const std::string& _s = this_._internal_responder_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.Escalation.responder_id");
            target = stream->WriteStringMaybeAliased(11, _s, target);
          }

          // string resolution_timestamp = 12;
          if (!this_._internal_resolution_timestamp().empty()) {
            const std::string& _s = this_._internal_resolution_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.Escalation.resolution_timestamp");
            target = stream->WriteStringMaybeAliased(12, _s, target);
          }

          // string response_details = 13;
          if (!this_._internal_response_details().empty()) {
            const std::string& _s = this_._internal_response_details();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.Escalation.response_details");
            target = stream->WriteStringMaybeAliased(13, _s, target);
          }

          // string next_review_timestamp = 14;
          if (!this_._internal_next_review_timestamp().empty()) {
            const std::string& _s = this_._internal_next_review_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.Escalation.next_review_timestamp");
            target = stream->WriteStringMaybeAliased(14, _s, target);
          }

          // repeated .seigr.monitoring.EscalationHistory escalation_history = 15;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_escalation_history_size());
               i < n; i++) {
            const auto& repfield = this_._internal_escalation_history().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    15, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // bool critical_protocol_override = 16;
          if (this_._internal_critical_protocol_override() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                16, this_._internal_critical_protocol_override(), target);
          }

          // bool user_intervention_required = 17;
          if (this_._internal_user_intervention_required() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                17, this_._internal_user_intervention_required(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.monitoring.Escalation)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Escalation::ByteSizeLong(const MessageLite& base) {
          const Escalation& this_ = static_cast<const Escalation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Escalation::ByteSizeLong() const {
          const Escalation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.monitoring.Escalation)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string alert_recipients = 8;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_alert_recipients().size());
              for (int i = 0, n = this_._internal_alert_recipients().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_alert_recipients().Get(i));
              }
            }
            // map<string, string> metadata = 9;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_metadata_size());
              for (const auto& entry : this_._internal_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // repeated .seigr.monitoring.EscalationHistory escalation_history = 15;
            {
              total_size += 1UL * this_._internal_escalation_history_size();
              for (const auto& msg : this_._internal_escalation_history()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string escalation_id = 1;
            if (!this_._internal_escalation_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_escalation_id());
            }
            // string segment_hash = 2;
            if (!this_._internal_segment_hash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_segment_hash());
            }
            // string escalated_at = 5;
            if (!this_._internal_escalated_at().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_escalated_at());
            }
            // string escalation_reason = 7;
            if (!this_._internal_escalation_reason().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_escalation_reason());
            }
            // string response_status = 10;
            if (!this_._internal_response_status().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_response_status());
            }
            // string responder_id = 11;
            if (!this_._internal_responder_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_responder_id());
            }
            // string resolution_timestamp = 12;
            if (!this_._internal_resolution_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_resolution_timestamp());
            }
            // string response_details = 13;
            if (!this_._internal_response_details().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_response_details());
            }
            // string next_review_timestamp = 14;
            if (!this_._internal_next_review_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_next_review_timestamp());
            }
            // .seigr.common.ThreatLevel threat_level = 3;
            if (this_._internal_threat_level() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_threat_level());
            }
            // .seigr.monitoring.EscalationType escalation_type = 4;
            if (this_._internal_escalation_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_escalation_type());
            }
            // bool replication_triggered = 6;
            if (this_._internal_replication_triggered() != 0) {
              total_size += 2;
            }
            // bool critical_protocol_override = 16;
            if (this_._internal_critical_protocol_override() != 0) {
              total_size += 3;
            }
            // bool user_intervention_required = 17;
            if (this_._internal_user_intervention_required() != 0) {
              total_size += 3;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Escalation::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Escalation*>(&to_msg);
  auto& from = static_cast<const Escalation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.monitoring.Escalation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_alert_recipients()->MergeFrom(from._internal_alert_recipients());
  _this->_impl_.metadata_.MergeFrom(from._impl_.metadata_);
  _this->_internal_mutable_escalation_history()->MergeFrom(
      from._internal_escalation_history());
  if (!from._internal_escalation_id().empty()) {
    _this->_internal_set_escalation_id(from._internal_escalation_id());
  }
  if (!from._internal_segment_hash().empty()) {
    _this->_internal_set_segment_hash(from._internal_segment_hash());
  }
  if (!from._internal_escalated_at().empty()) {
    _this->_internal_set_escalated_at(from._internal_escalated_at());
  }
  if (!from._internal_escalation_reason().empty()) {
    _this->_internal_set_escalation_reason(from._internal_escalation_reason());
  }
  if (!from._internal_response_status().empty()) {
    _this->_internal_set_response_status(from._internal_response_status());
  }
  if (!from._internal_responder_id().empty()) {
    _this->_internal_set_responder_id(from._internal_responder_id());
  }
  if (!from._internal_resolution_timestamp().empty()) {
    _this->_internal_set_resolution_timestamp(from._internal_resolution_timestamp());
  }
  if (!from._internal_response_details().empty()) {
    _this->_internal_set_response_details(from._internal_response_details());
  }
  if (!from._internal_next_review_timestamp().empty()) {
    _this->_internal_set_next_review_timestamp(from._internal_next_review_timestamp());
  }
  if (from._internal_threat_level() != 0) {
    _this->_impl_.threat_level_ = from._impl_.threat_level_;
  }
  if (from._internal_escalation_type() != 0) {
    _this->_impl_.escalation_type_ = from._impl_.escalation_type_;
  }
  if (from._internal_replication_triggered() != 0) {
    _this->_impl_.replication_triggered_ = from._impl_.replication_triggered_;
  }
  if (from._internal_critical_protocol_override() != 0) {
    _this->_impl_.critical_protocol_override_ = from._impl_.critical_protocol_override_;
  }
  if (from._internal_user_intervention_required() != 0) {
    _this->_impl_.user_intervention_required_ = from._impl_.user_intervention_required_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Escalation::CopyFrom(const Escalation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.monitoring.Escalation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Escalation::InternalSwap(Escalation* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.alert_recipients_.InternalSwap(&other->_impl_.alert_recipients_);
  _impl_.metadata_.InternalSwap(&other->_impl_.metadata_);
  _impl_.escalation_history_.InternalSwap(&other->_impl_.escalation_history_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.escalation_id_, &other->_impl_.escalation_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.segment_hash_, &other->_impl_.segment_hash_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.escalated_at_, &other->_impl_.escalated_at_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.escalation_reason_, &other->_impl_.escalation_reason_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.response_status_, &other->_impl_.response_status_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.responder_id_, &other->_impl_.responder_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.resolution_timestamp_, &other->_impl_.resolution_timestamp_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.response_details_, &other->_impl_.response_details_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.next_review_timestamp_, &other->_impl_.next_review_timestamp_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Escalation, _impl_.user_intervention_required_)
      + sizeof(Escalation::_impl_.user_intervention_required_)
      - PROTOBUF_FIELD_OFFSET(Escalation, _impl_.threat_level_)>(
          reinterpret_cast<char*>(&_impl_.threat_level_),
          reinterpret_cast<char*>(&other->_impl_.threat_level_));
}

::google::protobuf::Metadata Escalation::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              EscalationHistory_AdditionalInfoEntry_DoNotUse::EscalationHistory_AdditionalInfoEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              EscalationHistory_AdditionalInfoEntry_DoNotUse::EscalationHistory_AdditionalInfoEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              EscalationHistory_AdditionalInfoEntry_DoNotUse::EscalationHistory_AdditionalInfoEntry_DoNotUse() : SuperType() {}
              EscalationHistory_AdditionalInfoEntry_DoNotUse::EscalationHistory_AdditionalInfoEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* EscalationHistory_AdditionalInfoEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) EscalationHistory_AdditionalInfoEntry_DoNotUse(arena);
              }
              constexpr auto EscalationHistory_AdditionalInfoEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(EscalationHistory_AdditionalInfoEntry_DoNotUse),
                                                          alignof(EscalationHistory_AdditionalInfoEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull EscalationHistory_AdditionalInfoEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_EscalationHistory_AdditionalInfoEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &EscalationHistory_AdditionalInfoEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<EscalationHistory_AdditionalInfoEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &EscalationHistory_AdditionalInfoEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &EscalationHistory_AdditionalInfoEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(EscalationHistory_AdditionalInfoEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &EscalationHistory_AdditionalInfoEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_monitoring_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* EscalationHistory_AdditionalInfoEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 71, 2> EscalationHistory_AdditionalInfoEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EscalationHistory_AdditionalInfoEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::monitoring::EscalationHistory_AdditionalInfoEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(EscalationHistory_AdditionalInfoEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EscalationHistory_AdditionalInfoEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(EscalationHistory_AdditionalInfoEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(EscalationHistory_AdditionalInfoEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\66\3\5\0\0\0\0\0"
    "seigr.monitoring.EscalationHistory.AdditionalInfoEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class EscalationHistory::_Internal {
 public:
};

EscalationHistory::EscalationHistory(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.monitoring.EscalationHistory)
}
inline PROTOBUF_NDEBUG_INLINE EscalationHistory::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::monitoring::EscalationHistory& from_msg)
      : additional_info_{visibility, arena, from.additional_info_},
        update_id_(arena, from.update_id_),
        timestamp_(arena, from.timestamp_),
        status_(arena, from.status_),
        action_taken_(arena, from.action_taken_),
        updated_by_(arena, from.updated_by_),
        _cached_size_{0} {}

EscalationHistory::EscalationHistory(
    ::google::protobuf::Arena* arena,
    const EscalationHistory& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EscalationHistory* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, adaptive_action_flag_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, adaptive_action_flag_),
           offsetof(Impl_, threat_escalation_score_) -
               offsetof(Impl_, adaptive_action_flag_) +
               sizeof(Impl_::threat_escalation_score_));

  // @@protoc_insertion_point(copy_constructor:seigr.monitoring.EscalationHistory)
}
inline PROTOBUF_NDEBUG_INLINE EscalationHistory::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : additional_info_{visibility, arena},
        update_id_(arena),
        timestamp_(arena),
        status_(arena),
        action_taken_(arena),
        updated_by_(arena),
        _cached_size_{0} {}

inline void EscalationHistory::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, adaptive_action_flag_),
           0,
           offsetof(Impl_, threat_escalation_score_) -
               offsetof(Impl_, adaptive_action_flag_) +
               sizeof(Impl_::threat_escalation_score_));
}
EscalationHistory::~EscalationHistory() {
  // @@protoc_insertion_point(destructor:seigr.monitoring.EscalationHistory)
  SharedDtor(*this);
}
inline void EscalationHistory::SharedDtor(MessageLite& self) {
  EscalationHistory& this_ = static_cast<EscalationHistory&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.update_id_.Destroy();
  this_._impl_.timestamp_.Destroy();
  this_._impl_.status_.Destroy();
  this_._impl_.action_taken_.Destroy();
  this_._impl_.updated_by_.Destroy();
  this_._impl_.~Impl_();
}

inline void* EscalationHistory::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EscalationHistory(arena);
}
constexpr auto EscalationHistory::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(EscalationHistory, _impl_.additional_info_) +
          decltype(EscalationHistory::_impl_.additional_info_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(EscalationHistory, _impl_.additional_info_) +
          decltype(EscalationHistory::_impl_.additional_info_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(EscalationHistory), alignof(EscalationHistory), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&EscalationHistory::PlacementNew_,
                                 sizeof(EscalationHistory),
                                 alignof(EscalationHistory));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EscalationHistory::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EscalationHistory_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EscalationHistory::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EscalationHistory>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EscalationHistory::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EscalationHistory>(), &EscalationHistory::ByteSizeLong,
            &EscalationHistory::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EscalationHistory, _impl_._cached_size_),
        false,
    },
    &EscalationHistory::kDescriptorMethods,
    &descriptor_table_monitoring_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EscalationHistory::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 1, 112, 2> EscalationHistory::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::monitoring::EscalationHistory>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // float threat_escalation_score = 8;
    {::_pbi::TcParser::FastF32S1,
     {69, 63, 0, PROTOBUF_FIELD_OFFSET(EscalationHistory, _impl_.threat_escalation_score_)}},
    // string update_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EscalationHistory, _impl_.update_id_)}},
    // string timestamp = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(EscalationHistory, _impl_.timestamp_)}},
    // string status = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(EscalationHistory, _impl_.status_)}},
    // string action_taken = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(EscalationHistory, _impl_.action_taken_)}},
    // string updated_by = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(EscalationHistory, _impl_.updated_by_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // bool adaptive_action_flag = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(EscalationHistory, _impl_.adaptive_action_flag_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(EscalationHistory, _impl_.adaptive_action_flag_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string update_id = 1;
    {PROTOBUF_FIELD_OFFSET(EscalationHistory, _impl_.update_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string timestamp = 2;
    {PROTOBUF_FIELD_OFFSET(EscalationHistory, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string status = 3;
    {PROTOBUF_FIELD_OFFSET(EscalationHistory, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string action_taken = 4;
    {PROTOBUF_FIELD_OFFSET(EscalationHistory, _impl_.action_taken_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string updated_by = 5;
    {PROTOBUF_FIELD_OFFSET(EscalationHistory, _impl_.updated_by_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> additional_info = 6;
    {PROTOBUF_FIELD_OFFSET(EscalationHistory, _impl_.additional_info_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // bool adaptive_action_flag = 7;
    {PROTOBUF_FIELD_OFFSET(EscalationHistory, _impl_.adaptive_action_flag_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // float threat_escalation_score = 8;
    {PROTOBUF_FIELD_OFFSET(EscalationHistory, _impl_.threat_escalation_score_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(EscalationHistory()._impl_.additional_info_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\42\11\11\6\14\12\17\0\0\0\0\0\0\0\0\0"
    "seigr.monitoring.EscalationHistory"
    "update_id"
    "timestamp"
    "status"
    "action_taken"
    "updated_by"
    "additional_info"
  }},
};

PROTOBUF_NOINLINE void EscalationHistory::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.monitoring.EscalationHistory)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.additional_info_.Clear();
  _impl_.update_id_.ClearToEmpty();
  _impl_.timestamp_.ClearToEmpty();
  _impl_.status_.ClearToEmpty();
  _impl_.action_taken_.ClearToEmpty();
  _impl_.updated_by_.ClearToEmpty();
  ::memset(&_impl_.adaptive_action_flag_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.threat_escalation_score_) -
      reinterpret_cast<char*>(&_impl_.adaptive_action_flag_)) + sizeof(_impl_.threat_escalation_score_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EscalationHistory::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EscalationHistory& this_ = static_cast<const EscalationHistory&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EscalationHistory::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EscalationHistory& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.monitoring.EscalationHistory)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string update_id = 1;
          if (!this_._internal_update_id().empty()) {
            const std::string& _s = this_._internal_update_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.EscalationHistory.update_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string timestamp = 2;
          if (!this_._internal_timestamp().empty()) {
            const std::string& _s = this_._internal_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.EscalationHistory.timestamp");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string status = 3;
          if (!this_._internal_status().empty()) {
            const std::string& _s = this_._internal_status();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.EscalationHistory.status");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string action_taken = 4;
          if (!this_._internal_action_taken().empty()) {
            const std::string& _s = this_._internal_action_taken();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.EscalationHistory.action_taken");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string updated_by = 5;
          if (!this_._internal_updated_by().empty()) {
            const std::string& _s = this_._internal_updated_by();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.EscalationHistory.updated_by");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // map<string, string> additional_info = 6;
          if (!this_._internal_additional_info().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_additional_info();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.EscalationHistory.additional_info");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.EscalationHistory.additional_info");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.EscalationHistory.additional_info");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.EscalationHistory.additional_info");
              }
            }
          }

          // bool adaptive_action_flag = 7;
          if (this_._internal_adaptive_action_flag() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                7, this_._internal_adaptive_action_flag(), target);
          }

          // float threat_escalation_score = 8;
          if (::absl::bit_cast<::uint32_t>(this_._internal_threat_escalation_score()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                8, this_._internal_threat_escalation_score(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.monitoring.EscalationHistory)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EscalationHistory::ByteSizeLong(const MessageLite& base) {
          const EscalationHistory& this_ = static_cast<const EscalationHistory&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EscalationHistory::ByteSizeLong() const {
          const EscalationHistory& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.monitoring.EscalationHistory)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> additional_info = 6;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_additional_info_size());
              for (const auto& entry : this_._internal_additional_info()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string update_id = 1;
            if (!this_._internal_update_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_update_id());
            }
            // string timestamp = 2;
            if (!this_._internal_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_timestamp());
            }
            // string status = 3;
            if (!this_._internal_status().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_status());
            }
            // string action_taken = 4;
            if (!this_._internal_action_taken().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_action_taken());
            }
            // string updated_by = 5;
            if (!this_._internal_updated_by().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_updated_by());
            }
            // bool adaptive_action_flag = 7;
            if (this_._internal_adaptive_action_flag() != 0) {
              total_size += 2;
            }
            // float threat_escalation_score = 8;
            if (::absl::bit_cast<::uint32_t>(this_._internal_threat_escalation_score()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EscalationHistory::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EscalationHistory*>(&to_msg);
  auto& from = static_cast<const EscalationHistory&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.monitoring.EscalationHistory)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.additional_info_.MergeFrom(from._impl_.additional_info_);
  if (!from._internal_update_id().empty()) {
    _this->_internal_set_update_id(from._internal_update_id());
  }
  if (!from._internal_timestamp().empty()) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (!from._internal_status().empty()) {
    _this->_internal_set_status(from._internal_status());
  }
  if (!from._internal_action_taken().empty()) {
    _this->_internal_set_action_taken(from._internal_action_taken());
  }
  if (!from._internal_updated_by().empty()) {
    _this->_internal_set_updated_by(from._internal_updated_by());
  }
  if (from._internal_adaptive_action_flag() != 0) {
    _this->_impl_.adaptive_action_flag_ = from._impl_.adaptive_action_flag_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_threat_escalation_score()) != 0) {
    _this->_impl_.threat_escalation_score_ = from._impl_.threat_escalation_score_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EscalationHistory::CopyFrom(const EscalationHistory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.monitoring.EscalationHistory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EscalationHistory::InternalSwap(EscalationHistory* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.additional_info_.InternalSwap(&other->_impl_.additional_info_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.update_id_, &other->_impl_.update_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.timestamp_, &other->_impl_.timestamp_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.status_, &other->_impl_.status_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.action_taken_, &other->_impl_.action_taken_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.updated_by_, &other->_impl_.updated_by_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EscalationHistory, _impl_.threat_escalation_score_)
      + sizeof(EscalationHistory::_impl_.threat_escalation_score_)
      - PROTOBUF_FIELD_OFFSET(EscalationHistory, _impl_.adaptive_action_flag_)>(
          reinterpret_cast<char*>(&_impl_.adaptive_action_flag_),
          reinterpret_cast<char*>(&other->_impl_.adaptive_action_flag_));
}

::google::protobuf::Metadata EscalationHistory::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              MonitoringConfig_ConfigMetadataEntry_DoNotUse::MonitoringConfig_ConfigMetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              MonitoringConfig_ConfigMetadataEntry_DoNotUse::MonitoringConfig_ConfigMetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              MonitoringConfig_ConfigMetadataEntry_DoNotUse::MonitoringConfig_ConfigMetadataEntry_DoNotUse() : SuperType() {}
              MonitoringConfig_ConfigMetadataEntry_DoNotUse::MonitoringConfig_ConfigMetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* MonitoringConfig_ConfigMetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) MonitoringConfig_ConfigMetadataEntry_DoNotUse(arena);
              }
              constexpr auto MonitoringConfig_ConfigMetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(MonitoringConfig_ConfigMetadataEntry_DoNotUse),
                                                          alignof(MonitoringConfig_ConfigMetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull MonitoringConfig_ConfigMetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_MonitoringConfig_ConfigMetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &MonitoringConfig_ConfigMetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<MonitoringConfig_ConfigMetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &MonitoringConfig_ConfigMetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &MonitoringConfig_ConfigMetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(MonitoringConfig_ConfigMetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &MonitoringConfig_ConfigMetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_monitoring_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* MonitoringConfig_ConfigMetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 70, 2> MonitoringConfig_ConfigMetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MonitoringConfig_ConfigMetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::monitoring::MonitoringConfig_ConfigMetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(MonitoringConfig_ConfigMetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MonitoringConfig_ConfigMetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(MonitoringConfig_ConfigMetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(MonitoringConfig_ConfigMetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\65\3\5\0\0\0\0\0"
    "seigr.monitoring.MonitoringConfig.ConfigMetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class MonitoringConfig::_Internal {
 public:
};

MonitoringConfig::MonitoringConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.monitoring.MonitoringConfig)
}
inline PROTOBUF_NDEBUG_INLINE MonitoringConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::monitoring::MonitoringConfig& from_msg)
      : config_metadata_{visibility, arena, from.config_metadata_},
        config_version_(arena, from.config_version_),
        last_updated_(arena, from.last_updated_),
        default_response_strategy_(arena, from.default_response_strategy_),
        fallback_strategy_(arena, from.fallback_strategy_),
        _cached_size_{0} {}

MonitoringConfig::MonitoringConfig(
    ::google::protobuf::Arena* arena,
    const MonitoringConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MonitoringConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, critical_threshold_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, critical_threshold_),
           offsetof(Impl_, prioritize_high_risk_zones_) -
               offsetof(Impl_, critical_threshold_) +
               sizeof(Impl_::prioritize_high_risk_zones_));

  // @@protoc_insertion_point(copy_constructor:seigr.monitoring.MonitoringConfig)
}
inline PROTOBUF_NDEBUG_INLINE MonitoringConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : config_metadata_{visibility, arena},
        config_version_(arena),
        last_updated_(arena),
        default_response_strategy_(arena),
        fallback_strategy_(arena),
        _cached_size_{0} {}

inline void MonitoringConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, critical_threshold_),
           0,
           offsetof(Impl_, prioritize_high_risk_zones_) -
               offsetof(Impl_, critical_threshold_) +
               sizeof(Impl_::prioritize_high_risk_zones_));
}
MonitoringConfig::~MonitoringConfig() {
  // @@protoc_insertion_point(destructor:seigr.monitoring.MonitoringConfig)
  SharedDtor(*this);
}
inline void MonitoringConfig::SharedDtor(MessageLite& self) {
  MonitoringConfig& this_ = static_cast<MonitoringConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.config_version_.Destroy();
  this_._impl_.last_updated_.Destroy();
  this_._impl_.default_response_strategy_.Destroy();
  this_._impl_.fallback_strategy_.Destroy();
  this_._impl_.~Impl_();
}

inline void* MonitoringConfig::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MonitoringConfig(arena);
}
constexpr auto MonitoringConfig::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(MonitoringConfig, _impl_.config_metadata_) +
          decltype(MonitoringConfig::_impl_.config_metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(MonitoringConfig, _impl_.config_metadata_) +
          decltype(MonitoringConfig::_impl_.config_metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(MonitoringConfig), alignof(MonitoringConfig), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&MonitoringConfig::PlacementNew_,
                                 sizeof(MonitoringConfig),
                                 alignof(MonitoringConfig));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MonitoringConfig::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MonitoringConfig_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MonitoringConfig::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MonitoringConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MonitoringConfig::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MonitoringConfig>(), &MonitoringConfig::ByteSizeLong,
            &MonitoringConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MonitoringConfig, _impl_._cached_size_),
        false,
    },
    &MonitoringConfig::kDescriptorMethods,
    &descriptor_table_monitoring_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MonitoringConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 18, 1, 141, 2> MonitoringConfig::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    18, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294705152,  // skipmap
    offsetof(decltype(_table_), field_entries),
    18,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::monitoring::MonitoringConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 critical_threshold = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MonitoringConfig, _impl_.critical_threshold_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MonitoringConfig, _impl_.critical_threshold_)}},
    // int32 severe_threshold = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MonitoringConfig, _impl_.severe_threshold_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(MonitoringConfig, _impl_.severe_threshold_)}},
    // int32 moderate_threshold = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MonitoringConfig, _impl_.moderate_threshold_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(MonitoringConfig, _impl_.moderate_threshold_)}},
    // int32 adaptive_check_interval_seconds = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MonitoringConfig, _impl_.adaptive_check_interval_seconds_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(MonitoringConfig, _impl_.adaptive_check_interval_seconds_)}},
    // int32 alert_frequency_minutes = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MonitoringConfig, _impl_.alert_frequency_minutes_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(MonitoringConfig, _impl_.alert_frequency_minutes_)}},
    // bool enable_auto_lockdown = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(MonitoringConfig, _impl_.enable_auto_lockdown_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(MonitoringConfig, _impl_.enable_auto_lockdown_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string config_version = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(MonitoringConfig, _impl_.config_version_)}},
    // string last_updated = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(MonitoringConfig, _impl_.last_updated_)}},
    // bool enable_severity_scaling = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(MonitoringConfig, _impl_.enable_severity_scaling_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(MonitoringConfig, _impl_.enable_severity_scaling_)}},
    // string default_response_strategy = 11;
    {::_pbi::TcParser::FastUS1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(MonitoringConfig, _impl_.default_response_strategy_)}},
    // bool dynamic_alert_scaling = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(MonitoringConfig, _impl_.dynamic_alert_scaling_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(MonitoringConfig, _impl_.dynamic_alert_scaling_)}},
    // string fallback_strategy = 13;
    {::_pbi::TcParser::FastUS1,
     {106, 63, 0, PROTOBUF_FIELD_OFFSET(MonitoringConfig, _impl_.fallback_strategy_)}},
    // int32 data_volume_threshold = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MonitoringConfig, _impl_.data_volume_threshold_), 63>(),
     {112, 63, 0, PROTOBUF_FIELD_OFFSET(MonitoringConfig, _impl_.data_volume_threshold_)}},
    // int32 high_frequency_monitoring_interval = 15;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MonitoringConfig, _impl_.high_frequency_monitoring_interval_), 63>(),
     {120, 63, 0, PROTOBUF_FIELD_OFFSET(MonitoringConfig, _impl_.high_frequency_monitoring_interval_)}},
    // float adaptive_threshold_adjustment = 16;
    {::_pbi::TcParser::FastF32S2,
     {389, 63, 0, PROTOBUF_FIELD_OFFSET(MonitoringConfig, _impl_.adaptive_threshold_adjustment_)}},
    // bool enable_centralized_logging = 17;
    {::_pbi::TcParser::FastV8S2,
     {392, 63, 0, PROTOBUF_FIELD_OFFSET(MonitoringConfig, _impl_.enable_centralized_logging_)}},
    // bool prioritize_high_risk_zones = 18;
    {::_pbi::TcParser::FastV8S2,
     {400, 63, 0, PROTOBUF_FIELD_OFFSET(MonitoringConfig, _impl_.prioritize_high_risk_zones_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 critical_threshold = 1;
    {PROTOBUF_FIELD_OFFSET(MonitoringConfig, _impl_.critical_threshold_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 severe_threshold = 2;
    {PROTOBUF_FIELD_OFFSET(MonitoringConfig, _impl_.severe_threshold_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 moderate_threshold = 3;
    {PROTOBUF_FIELD_OFFSET(MonitoringConfig, _impl_.moderate_threshold_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 adaptive_check_interval_seconds = 4;
    {PROTOBUF_FIELD_OFFSET(MonitoringConfig, _impl_.adaptive_check_interval_seconds_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 alert_frequency_minutes = 5;
    {PROTOBUF_FIELD_OFFSET(MonitoringConfig, _impl_.alert_frequency_minutes_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool enable_auto_lockdown = 6;
    {PROTOBUF_FIELD_OFFSET(MonitoringConfig, _impl_.enable_auto_lockdown_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // map<string, string> config_metadata = 7;
    {PROTOBUF_FIELD_OFFSET(MonitoringConfig, _impl_.config_metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string config_version = 8;
    {PROTOBUF_FIELD_OFFSET(MonitoringConfig, _impl_.config_version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string last_updated = 9;
    {PROTOBUF_FIELD_OFFSET(MonitoringConfig, _impl_.last_updated_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool enable_severity_scaling = 10;
    {PROTOBUF_FIELD_OFFSET(MonitoringConfig, _impl_.enable_severity_scaling_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string default_response_strategy = 11;
    {PROTOBUF_FIELD_OFFSET(MonitoringConfig, _impl_.default_response_strategy_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool dynamic_alert_scaling = 12;
    {PROTOBUF_FIELD_OFFSET(MonitoringConfig, _impl_.dynamic_alert_scaling_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string fallback_strategy = 13;
    {PROTOBUF_FIELD_OFFSET(MonitoringConfig, _impl_.fallback_strategy_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 data_volume_threshold = 14;
    {PROTOBUF_FIELD_OFFSET(MonitoringConfig, _impl_.data_volume_threshold_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 high_frequency_monitoring_interval = 15;
    {PROTOBUF_FIELD_OFFSET(MonitoringConfig, _impl_.high_frequency_monitoring_interval_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // float adaptive_threshold_adjustment = 16;
    {PROTOBUF_FIELD_OFFSET(MonitoringConfig, _impl_.adaptive_threshold_adjustment_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // bool enable_centralized_logging = 17;
    {PROTOBUF_FIELD_OFFSET(MonitoringConfig, _impl_.enable_centralized_logging_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool prioritize_high_risk_zones = 18;
    {PROTOBUF_FIELD_OFFSET(MonitoringConfig, _impl_.prioritize_high_risk_zones_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(MonitoringConfig()._impl_.config_metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\41\0\0\0\0\0\0\17\16\14\0\31\0\21\0\0\0\0\0\0\0\0\0\0"
    "seigr.monitoring.MonitoringConfig"
    "config_metadata"
    "config_version"
    "last_updated"
    "default_response_strategy"
    "fallback_strategy"
  }},
};

PROTOBUF_NOINLINE void MonitoringConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.monitoring.MonitoringConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.config_metadata_.Clear();
  _impl_.config_version_.ClearToEmpty();
  _impl_.last_updated_.ClearToEmpty();
  _impl_.default_response_strategy_.ClearToEmpty();
  _impl_.fallback_strategy_.ClearToEmpty();
  ::memset(&_impl_.critical_threshold_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.prioritize_high_risk_zones_) -
      reinterpret_cast<char*>(&_impl_.critical_threshold_)) + sizeof(_impl_.prioritize_high_risk_zones_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MonitoringConfig::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MonitoringConfig& this_ = static_cast<const MonitoringConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MonitoringConfig::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MonitoringConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.monitoring.MonitoringConfig)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 critical_threshold = 1;
          if (this_._internal_critical_threshold() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_critical_threshold(), target);
          }

          // int32 severe_threshold = 2;
          if (this_._internal_severe_threshold() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_severe_threshold(), target);
          }

          // int32 moderate_threshold = 3;
          if (this_._internal_moderate_threshold() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_moderate_threshold(), target);
          }

          // int32 adaptive_check_interval_seconds = 4;
          if (this_._internal_adaptive_check_interval_seconds() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<4>(
                    stream, this_._internal_adaptive_check_interval_seconds(), target);
          }

          // int32 alert_frequency_minutes = 5;
          if (this_._internal_alert_frequency_minutes() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<5>(
                    stream, this_._internal_alert_frequency_minutes(), target);
          }

          // bool enable_auto_lockdown = 6;
          if (this_._internal_enable_auto_lockdown() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                6, this_._internal_enable_auto_lockdown(), target);
          }

          // map<string, string> config_metadata = 7;
          if (!this_._internal_config_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_config_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.MonitoringConfig.config_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.MonitoringConfig.config_metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.MonitoringConfig.config_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.MonitoringConfig.config_metadata");
              }
            }
          }

          // string config_version = 8;
          if (!this_._internal_config_version().empty()) {
            const std::string& _s = this_._internal_config_version();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.MonitoringConfig.config_version");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          // string last_updated = 9;
          if (!this_._internal_last_updated().empty()) {
            const std::string& _s = this_._internal_last_updated();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.MonitoringConfig.last_updated");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          // bool enable_severity_scaling = 10;
          if (this_._internal_enable_severity_scaling() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                10, this_._internal_enable_severity_scaling(), target);
          }

          // string default_response_strategy = 11;
          if (!this_._internal_default_response_strategy().empty()) {
            const std::string& _s = this_._internal_default_response_strategy();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.MonitoringConfig.default_response_strategy");
            target = stream->WriteStringMaybeAliased(11, _s, target);
          }

          // bool dynamic_alert_scaling = 12;
          if (this_._internal_dynamic_alert_scaling() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                12, this_._internal_dynamic_alert_scaling(), target);
          }

          // string fallback_strategy = 13;
          if (!this_._internal_fallback_strategy().empty()) {
            const std::string& _s = this_._internal_fallback_strategy();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.MonitoringConfig.fallback_strategy");
            target = stream->WriteStringMaybeAliased(13, _s, target);
          }

          // int32 data_volume_threshold = 14;
          if (this_._internal_data_volume_threshold() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<14>(
                    stream, this_._internal_data_volume_threshold(), target);
          }

          // int32 high_frequency_monitoring_interval = 15;
          if (this_._internal_high_frequency_monitoring_interval() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<15>(
                    stream, this_._internal_high_frequency_monitoring_interval(), target);
          }

          // float adaptive_threshold_adjustment = 16;
          if (::absl::bit_cast<::uint32_t>(this_._internal_adaptive_threshold_adjustment()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                16, this_._internal_adaptive_threshold_adjustment(), target);
          }

          // bool enable_centralized_logging = 17;
          if (this_._internal_enable_centralized_logging() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                17, this_._internal_enable_centralized_logging(), target);
          }

          // bool prioritize_high_risk_zones = 18;
          if (this_._internal_prioritize_high_risk_zones() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                18, this_._internal_prioritize_high_risk_zones(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.monitoring.MonitoringConfig)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MonitoringConfig::ByteSizeLong(const MessageLite& base) {
          const MonitoringConfig& this_ = static_cast<const MonitoringConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MonitoringConfig::ByteSizeLong() const {
          const MonitoringConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.monitoring.MonitoringConfig)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> config_metadata = 7;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_config_metadata_size());
              for (const auto& entry : this_._internal_config_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string config_version = 8;
            if (!this_._internal_config_version().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_config_version());
            }
            // string last_updated = 9;
            if (!this_._internal_last_updated().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_last_updated());
            }
            // string default_response_strategy = 11;
            if (!this_._internal_default_response_strategy().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_default_response_strategy());
            }
            // string fallback_strategy = 13;
            if (!this_._internal_fallback_strategy().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_fallback_strategy());
            }
            // int32 critical_threshold = 1;
            if (this_._internal_critical_threshold() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_critical_threshold());
            }
            // int32 severe_threshold = 2;
            if (this_._internal_severe_threshold() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_severe_threshold());
            }
            // int32 moderate_threshold = 3;
            if (this_._internal_moderate_threshold() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_moderate_threshold());
            }
            // int32 adaptive_check_interval_seconds = 4;
            if (this_._internal_adaptive_check_interval_seconds() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_adaptive_check_interval_seconds());
            }
            // int32 alert_frequency_minutes = 5;
            if (this_._internal_alert_frequency_minutes() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_alert_frequency_minutes());
            }
            // bool enable_auto_lockdown = 6;
            if (this_._internal_enable_auto_lockdown() != 0) {
              total_size += 2;
            }
            // bool enable_severity_scaling = 10;
            if (this_._internal_enable_severity_scaling() != 0) {
              total_size += 2;
            }
            // bool dynamic_alert_scaling = 12;
            if (this_._internal_dynamic_alert_scaling() != 0) {
              total_size += 2;
            }
            // bool enable_centralized_logging = 17;
            if (this_._internal_enable_centralized_logging() != 0) {
              total_size += 3;
            }
            // int32 data_volume_threshold = 14;
            if (this_._internal_data_volume_threshold() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_data_volume_threshold());
            }
            // int32 high_frequency_monitoring_interval = 15;
            if (this_._internal_high_frequency_monitoring_interval() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_high_frequency_monitoring_interval());
            }
            // float adaptive_threshold_adjustment = 16;
            if (::absl::bit_cast<::uint32_t>(this_._internal_adaptive_threshold_adjustment()) != 0) {
              total_size += 6;
            }
            // bool prioritize_high_risk_zones = 18;
            if (this_._internal_prioritize_high_risk_zones() != 0) {
              total_size += 3;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MonitoringConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MonitoringConfig*>(&to_msg);
  auto& from = static_cast<const MonitoringConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.monitoring.MonitoringConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.config_metadata_.MergeFrom(from._impl_.config_metadata_);
  if (!from._internal_config_version().empty()) {
    _this->_internal_set_config_version(from._internal_config_version());
  }
  if (!from._internal_last_updated().empty()) {
    _this->_internal_set_last_updated(from._internal_last_updated());
  }
  if (!from._internal_default_response_strategy().empty()) {
    _this->_internal_set_default_response_strategy(from._internal_default_response_strategy());
  }
  if (!from._internal_fallback_strategy().empty()) {
    _this->_internal_set_fallback_strategy(from._internal_fallback_strategy());
  }
  if (from._internal_critical_threshold() != 0) {
    _this->_impl_.critical_threshold_ = from._impl_.critical_threshold_;
  }
  if (from._internal_severe_threshold() != 0) {
    _this->_impl_.severe_threshold_ = from._impl_.severe_threshold_;
  }
  if (from._internal_moderate_threshold() != 0) {
    _this->_impl_.moderate_threshold_ = from._impl_.moderate_threshold_;
  }
  if (from._internal_adaptive_check_interval_seconds() != 0) {
    _this->_impl_.adaptive_check_interval_seconds_ = from._impl_.adaptive_check_interval_seconds_;
  }
  if (from._internal_alert_frequency_minutes() != 0) {
    _this->_impl_.alert_frequency_minutes_ = from._impl_.alert_frequency_minutes_;
  }
  if (from._internal_enable_auto_lockdown() != 0) {
    _this->_impl_.enable_auto_lockdown_ = from._impl_.enable_auto_lockdown_;
  }
  if (from._internal_enable_severity_scaling() != 0) {
    _this->_impl_.enable_severity_scaling_ = from._impl_.enable_severity_scaling_;
  }
  if (from._internal_dynamic_alert_scaling() != 0) {
    _this->_impl_.dynamic_alert_scaling_ = from._impl_.dynamic_alert_scaling_;
  }
  if (from._internal_enable_centralized_logging() != 0) {
    _this->_impl_.enable_centralized_logging_ = from._impl_.enable_centralized_logging_;
  }
  if (from._internal_data_volume_threshold() != 0) {
    _this->_impl_.data_volume_threshold_ = from._impl_.data_volume_threshold_;
  }
  if (from._internal_high_frequency_monitoring_interval() != 0) {
    _this->_impl_.high_frequency_monitoring_interval_ = from._impl_.high_frequency_monitoring_interval_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_adaptive_threshold_adjustment()) != 0) {
    _this->_impl_.adaptive_threshold_adjustment_ = from._impl_.adaptive_threshold_adjustment_;
  }
  if (from._internal_prioritize_high_risk_zones() != 0) {
    _this->_impl_.prioritize_high_risk_zones_ = from._impl_.prioritize_high_risk_zones_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MonitoringConfig::CopyFrom(const MonitoringConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.monitoring.MonitoringConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MonitoringConfig::InternalSwap(MonitoringConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.config_metadata_.InternalSwap(&other->_impl_.config_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.config_version_, &other->_impl_.config_version_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.last_updated_, &other->_impl_.last_updated_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.default_response_strategy_, &other->_impl_.default_response_strategy_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.fallback_strategy_, &other->_impl_.fallback_strategy_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MonitoringConfig, _impl_.prioritize_high_risk_zones_)
      + sizeof(MonitoringConfig::_impl_.prioritize_high_risk_zones_)
      - PROTOBUF_FIELD_OFFSET(MonitoringConfig, _impl_.critical_threshold_)>(
          reinterpret_cast<char*>(&_impl_.critical_threshold_),
          reinterpret_cast<char*>(&other->_impl_.critical_threshold_));
}

::google::protobuf::Metadata MonitoringConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              AdaptiveMonitoringLog_LogMetadataEntry_DoNotUse::AdaptiveMonitoringLog_LogMetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              AdaptiveMonitoringLog_LogMetadataEntry_DoNotUse::AdaptiveMonitoringLog_LogMetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              AdaptiveMonitoringLog_LogMetadataEntry_DoNotUse::AdaptiveMonitoringLog_LogMetadataEntry_DoNotUse() : SuperType() {}
              AdaptiveMonitoringLog_LogMetadataEntry_DoNotUse::AdaptiveMonitoringLog_LogMetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* AdaptiveMonitoringLog_LogMetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) AdaptiveMonitoringLog_LogMetadataEntry_DoNotUse(arena);
              }
              constexpr auto AdaptiveMonitoringLog_LogMetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AdaptiveMonitoringLog_LogMetadataEntry_DoNotUse),
                                                          alignof(AdaptiveMonitoringLog_LogMetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull AdaptiveMonitoringLog_LogMetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_AdaptiveMonitoringLog_LogMetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &AdaptiveMonitoringLog_LogMetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<AdaptiveMonitoringLog_LogMetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &AdaptiveMonitoringLog_LogMetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &AdaptiveMonitoringLog_LogMetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(AdaptiveMonitoringLog_LogMetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &AdaptiveMonitoringLog_LogMetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_monitoring_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* AdaptiveMonitoringLog_LogMetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 72, 2> AdaptiveMonitoringLog_LogMetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AdaptiveMonitoringLog_LogMetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::monitoring::AdaptiveMonitoringLog_LogMetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AdaptiveMonitoringLog_LogMetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AdaptiveMonitoringLog_LogMetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(AdaptiveMonitoringLog_LogMetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(AdaptiveMonitoringLog_LogMetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\67\3\5\0\0\0\0\0"
    "seigr.monitoring.AdaptiveMonitoringLog.LogMetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              AdaptiveMonitoringLog_AdaptiveParametersEntry_DoNotUse::AdaptiveMonitoringLog_AdaptiveParametersEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              AdaptiveMonitoringLog_AdaptiveParametersEntry_DoNotUse::AdaptiveMonitoringLog_AdaptiveParametersEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              AdaptiveMonitoringLog_AdaptiveParametersEntry_DoNotUse::AdaptiveMonitoringLog_AdaptiveParametersEntry_DoNotUse() : SuperType() {}
              AdaptiveMonitoringLog_AdaptiveParametersEntry_DoNotUse::AdaptiveMonitoringLog_AdaptiveParametersEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* AdaptiveMonitoringLog_AdaptiveParametersEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) AdaptiveMonitoringLog_AdaptiveParametersEntry_DoNotUse(arena);
              }
              constexpr auto AdaptiveMonitoringLog_AdaptiveParametersEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AdaptiveMonitoringLog_AdaptiveParametersEntry_DoNotUse),
                                                          alignof(AdaptiveMonitoringLog_AdaptiveParametersEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull AdaptiveMonitoringLog_AdaptiveParametersEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_AdaptiveMonitoringLog_AdaptiveParametersEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &AdaptiveMonitoringLog_AdaptiveParametersEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<AdaptiveMonitoringLog_AdaptiveParametersEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &AdaptiveMonitoringLog_AdaptiveParametersEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &AdaptiveMonitoringLog_AdaptiveParametersEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(AdaptiveMonitoringLog_AdaptiveParametersEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &AdaptiveMonitoringLog_AdaptiveParametersEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_monitoring_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* AdaptiveMonitoringLog_AdaptiveParametersEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 79, 2> AdaptiveMonitoringLog_AdaptiveParametersEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AdaptiveMonitoringLog_AdaptiveParametersEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::monitoring::AdaptiveMonitoringLog_AdaptiveParametersEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AdaptiveMonitoringLog_AdaptiveParametersEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AdaptiveMonitoringLog_AdaptiveParametersEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(AdaptiveMonitoringLog_AdaptiveParametersEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(AdaptiveMonitoringLog_AdaptiveParametersEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\76\3\5\0\0\0\0\0"
    "seigr.monitoring.AdaptiveMonitoringLog.AdaptiveParametersEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class AdaptiveMonitoringLog::_Internal {
 public:
};

AdaptiveMonitoringLog::AdaptiveMonitoringLog(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.monitoring.AdaptiveMonitoringLog)
}
inline PROTOBUF_NDEBUG_INLINE AdaptiveMonitoringLog::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::monitoring::AdaptiveMonitoringLog& from_msg)
      : log_metadata_{visibility, arena, from.log_metadata_},
        adaptive_parameters_{visibility, arena, from.adaptive_parameters_},
        log_id_(arena, from.log_id_),
        monitored_segment_(arena, from.monitored_segment_),
        check_timestamp_(arena, from.check_timestamp_),
        escalation_id_(arena, from.escalation_id_),
        response_action_taken_(arena, from.response_action_taken_),
        next_check_scheduled_(arena, from.next_check_scheduled_),
        monitoring_operator_(arena, from.monitoring_operator_),
        protocol_adjustment_notes_(arena, from.protocol_adjustment_notes_),
        data_source_id_(arena, from.data_source_id_),
        _cached_size_{0} {}

AdaptiveMonitoringLog::AdaptiveMonitoringLog(
    ::google::protobuf::Arena* arena,
    const AdaptiveMonitoringLog& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AdaptiveMonitoringLog* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, detected_threat_level_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, detected_threat_level_),
           offsetof(Impl_, escalation_probability_score_) -
               offsetof(Impl_, detected_threat_level_) +
               sizeof(Impl_::escalation_probability_score_));

  // @@protoc_insertion_point(copy_constructor:seigr.monitoring.AdaptiveMonitoringLog)
}
inline PROTOBUF_NDEBUG_INLINE AdaptiveMonitoringLog::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : log_metadata_{visibility, arena},
        adaptive_parameters_{visibility, arena},
        log_id_(arena),
        monitored_segment_(arena),
        check_timestamp_(arena),
        escalation_id_(arena),
        response_action_taken_(arena),
        next_check_scheduled_(arena),
        monitoring_operator_(arena),
        protocol_adjustment_notes_(arena),
        data_source_id_(arena),
        _cached_size_{0} {}

inline void AdaptiveMonitoringLog::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, detected_threat_level_),
           0,
           offsetof(Impl_, escalation_probability_score_) -
               offsetof(Impl_, detected_threat_level_) +
               sizeof(Impl_::escalation_probability_score_));
}
AdaptiveMonitoringLog::~AdaptiveMonitoringLog() {
  // @@protoc_insertion_point(destructor:seigr.monitoring.AdaptiveMonitoringLog)
  SharedDtor(*this);
}
inline void AdaptiveMonitoringLog::SharedDtor(MessageLite& self) {
  AdaptiveMonitoringLog& this_ = static_cast<AdaptiveMonitoringLog&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.log_id_.Destroy();
  this_._impl_.monitored_segment_.Destroy();
  this_._impl_.check_timestamp_.Destroy();
  this_._impl_.escalation_id_.Destroy();
  this_._impl_.response_action_taken_.Destroy();
  this_._impl_.next_check_scheduled_.Destroy();
  this_._impl_.monitoring_operator_.Destroy();
  this_._impl_.protocol_adjustment_notes_.Destroy();
  this_._impl_.data_source_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* AdaptiveMonitoringLog::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AdaptiveMonitoringLog(arena);
}
constexpr auto AdaptiveMonitoringLog::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(AdaptiveMonitoringLog, _impl_.log_metadata_) +
          decltype(AdaptiveMonitoringLog::_impl_.log_metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(AdaptiveMonitoringLog, _impl_.log_metadata_) +
          decltype(AdaptiveMonitoringLog::_impl_.log_metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(AdaptiveMonitoringLog, _impl_.adaptive_parameters_) +
          decltype(AdaptiveMonitoringLog::_impl_.adaptive_parameters_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(AdaptiveMonitoringLog, _impl_.adaptive_parameters_) +
          decltype(AdaptiveMonitoringLog::_impl_.adaptive_parameters_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(AdaptiveMonitoringLog), alignof(AdaptiveMonitoringLog), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&AdaptiveMonitoringLog::PlacementNew_,
                                 sizeof(AdaptiveMonitoringLog),
                                 alignof(AdaptiveMonitoringLog));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AdaptiveMonitoringLog::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AdaptiveMonitoringLog_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AdaptiveMonitoringLog::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AdaptiveMonitoringLog>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AdaptiveMonitoringLog::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AdaptiveMonitoringLog>(), &AdaptiveMonitoringLog::ByteSizeLong,
            &AdaptiveMonitoringLog::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AdaptiveMonitoringLog, _impl_._cached_size_),
        false,
    },
    &AdaptiveMonitoringLog::kDescriptorMethods,
    &descriptor_table_monitoring_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AdaptiveMonitoringLog::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 16, 2, 244, 2> AdaptiveMonitoringLog::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    16, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294901760,  // skipmap
    offsetof(decltype(_table_), field_entries),
    16,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::monitoring::AdaptiveMonitoringLog>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool proactive_response_enabled = 16;
    {::_pbi::TcParser::FastV8S2,
     {384, 63, 0, PROTOBUF_FIELD_OFFSET(AdaptiveMonitoringLog, _impl_.proactive_response_enabled_)}},
    // string log_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AdaptiveMonitoringLog, _impl_.log_id_)}},
    // string monitored_segment = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AdaptiveMonitoringLog, _impl_.monitored_segment_)}},
    // .seigr.common.ThreatLevel detected_threat_level = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AdaptiveMonitoringLog, _impl_.detected_threat_level_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(AdaptiveMonitoringLog, _impl_.detected_threat_level_)}},
    // string check_timestamp = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(AdaptiveMonitoringLog, _impl_.check_timestamp_)}},
    // bool triggered_escalation = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AdaptiveMonitoringLog, _impl_.triggered_escalation_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(AdaptiveMonitoringLog, _impl_.triggered_escalation_)}},
    // string escalation_id = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(AdaptiveMonitoringLog, _impl_.escalation_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string response_action_taken = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(AdaptiveMonitoringLog, _impl_.response_action_taken_)}},
    // string next_check_scheduled = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(AdaptiveMonitoringLog, _impl_.next_check_scheduled_)}},
    // float detection_accuracy = 10;
    {::_pbi::TcParser::FastF32S1,
     {85, 63, 0, PROTOBUF_FIELD_OFFSET(AdaptiveMonitoringLog, _impl_.detection_accuracy_)}},
    // string monitoring_operator = 11;
    {::_pbi::TcParser::FastUS1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(AdaptiveMonitoringLog, _impl_.monitoring_operator_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // float escalation_probability_score = 13;
    {::_pbi::TcParser::FastF32S1,
     {109, 63, 0, PROTOBUF_FIELD_OFFSET(AdaptiveMonitoringLog, _impl_.escalation_probability_score_)}},
    // string protocol_adjustment_notes = 14;
    {::_pbi::TcParser::FastUS1,
     {114, 63, 0, PROTOBUF_FIELD_OFFSET(AdaptiveMonitoringLog, _impl_.protocol_adjustment_notes_)}},
    // string data_source_id = 15;
    {::_pbi::TcParser::FastUS1,
     {122, 63, 0, PROTOBUF_FIELD_OFFSET(AdaptiveMonitoringLog, _impl_.data_source_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string log_id = 1;
    {PROTOBUF_FIELD_OFFSET(AdaptiveMonitoringLog, _impl_.log_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string monitored_segment = 2;
    {PROTOBUF_FIELD_OFFSET(AdaptiveMonitoringLog, _impl_.monitored_segment_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.common.ThreatLevel detected_threat_level = 3;
    {PROTOBUF_FIELD_OFFSET(AdaptiveMonitoringLog, _impl_.detected_threat_level_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string check_timestamp = 4;
    {PROTOBUF_FIELD_OFFSET(AdaptiveMonitoringLog, _impl_.check_timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool triggered_escalation = 5;
    {PROTOBUF_FIELD_OFFSET(AdaptiveMonitoringLog, _impl_.triggered_escalation_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string escalation_id = 6;
    {PROTOBUF_FIELD_OFFSET(AdaptiveMonitoringLog, _impl_.escalation_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> log_metadata = 7;
    {PROTOBUF_FIELD_OFFSET(AdaptiveMonitoringLog, _impl_.log_metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string response_action_taken = 8;
    {PROTOBUF_FIELD_OFFSET(AdaptiveMonitoringLog, _impl_.response_action_taken_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string next_check_scheduled = 9;
    {PROTOBUF_FIELD_OFFSET(AdaptiveMonitoringLog, _impl_.next_check_scheduled_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // float detection_accuracy = 10;
    {PROTOBUF_FIELD_OFFSET(AdaptiveMonitoringLog, _impl_.detection_accuracy_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // string monitoring_operator = 11;
    {PROTOBUF_FIELD_OFFSET(AdaptiveMonitoringLog, _impl_.monitoring_operator_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> adaptive_parameters = 12;
    {PROTOBUF_FIELD_OFFSET(AdaptiveMonitoringLog, _impl_.adaptive_parameters_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // float escalation_probability_score = 13;
    {PROTOBUF_FIELD_OFFSET(AdaptiveMonitoringLog, _impl_.escalation_probability_score_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // string protocol_adjustment_notes = 14;
    {PROTOBUF_FIELD_OFFSET(AdaptiveMonitoringLog, _impl_.protocol_adjustment_notes_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string data_source_id = 15;
    {PROTOBUF_FIELD_OFFSET(AdaptiveMonitoringLog, _impl_.data_source_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool proactive_response_enabled = 16;
    {PROTOBUF_FIELD_OFFSET(AdaptiveMonitoringLog, _impl_.proactive_response_enabled_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(AdaptiveMonitoringLog()._impl_.log_metadata_)>(
        1, 0, 0, 9,
        9)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(AdaptiveMonitoringLog()._impl_.adaptive_parameters_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\46\6\21\0\17\0\15\14\25\24\0\23\23\0\31\16\0\0\0\0\0\0\0\0"
    "seigr.monitoring.AdaptiveMonitoringLog"
    "log_id"
    "monitored_segment"
    "check_timestamp"
    "escalation_id"
    "log_metadata"
    "response_action_taken"
    "next_check_scheduled"
    "monitoring_operator"
    "adaptive_parameters"
    "protocol_adjustment_notes"
    "data_source_id"
  }},
};

PROTOBUF_NOINLINE void AdaptiveMonitoringLog::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.monitoring.AdaptiveMonitoringLog)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.log_metadata_.Clear();
  _impl_.adaptive_parameters_.Clear();
  _impl_.log_id_.ClearToEmpty();
  _impl_.monitored_segment_.ClearToEmpty();
  _impl_.check_timestamp_.ClearToEmpty();
  _impl_.escalation_id_.ClearToEmpty();
  _impl_.response_action_taken_.ClearToEmpty();
  _impl_.next_check_scheduled_.ClearToEmpty();
  _impl_.monitoring_operator_.ClearToEmpty();
  _impl_.protocol_adjustment_notes_.ClearToEmpty();
  _impl_.data_source_id_.ClearToEmpty();
  ::memset(&_impl_.detected_threat_level_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.escalation_probability_score_) -
      reinterpret_cast<char*>(&_impl_.detected_threat_level_)) + sizeof(_impl_.escalation_probability_score_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AdaptiveMonitoringLog::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AdaptiveMonitoringLog& this_ = static_cast<const AdaptiveMonitoringLog&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AdaptiveMonitoringLog::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AdaptiveMonitoringLog& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.monitoring.AdaptiveMonitoringLog)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string log_id = 1;
          if (!this_._internal_log_id().empty()) {
            const std::string& _s = this_._internal_log_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.AdaptiveMonitoringLog.log_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string monitored_segment = 2;
          if (!this_._internal_monitored_segment().empty()) {
            const std::string& _s = this_._internal_monitored_segment();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.AdaptiveMonitoringLog.monitored_segment");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // .seigr.common.ThreatLevel detected_threat_level = 3;
          if (this_._internal_detected_threat_level() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_detected_threat_level(), target);
          }

          // string check_timestamp = 4;
          if (!this_._internal_check_timestamp().empty()) {
            const std::string& _s = this_._internal_check_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.AdaptiveMonitoringLog.check_timestamp");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // bool triggered_escalation = 5;
          if (this_._internal_triggered_escalation() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                5, this_._internal_triggered_escalation(), target);
          }

          // string escalation_id = 6;
          if (!this_._internal_escalation_id().empty()) {
            const std::string& _s = this_._internal_escalation_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.AdaptiveMonitoringLog.escalation_id");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // map<string, string> log_metadata = 7;
          if (!this_._internal_log_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_log_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.AdaptiveMonitoringLog.log_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.AdaptiveMonitoringLog.log_metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.AdaptiveMonitoringLog.log_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.AdaptiveMonitoringLog.log_metadata");
              }
            }
          }

          // string response_action_taken = 8;
          if (!this_._internal_response_action_taken().empty()) {
            const std::string& _s = this_._internal_response_action_taken();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.AdaptiveMonitoringLog.response_action_taken");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          // string next_check_scheduled = 9;
          if (!this_._internal_next_check_scheduled().empty()) {
            const std::string& _s = this_._internal_next_check_scheduled();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.AdaptiveMonitoringLog.next_check_scheduled");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          // float detection_accuracy = 10;
          if (::absl::bit_cast<::uint32_t>(this_._internal_detection_accuracy()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                10, this_._internal_detection_accuracy(), target);
          }

          // string monitoring_operator = 11;
          if (!this_._internal_monitoring_operator().empty()) {
            const std::string& _s = this_._internal_monitoring_operator();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.AdaptiveMonitoringLog.monitoring_operator");
            target = stream->WriteStringMaybeAliased(11, _s, target);
          }

          // map<string, string> adaptive_parameters = 12;
          if (!this_._internal_adaptive_parameters().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_adaptive_parameters();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    12, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.AdaptiveMonitoringLog.adaptive_parameters");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.AdaptiveMonitoringLog.adaptive_parameters");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    12, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.AdaptiveMonitoringLog.adaptive_parameters");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.AdaptiveMonitoringLog.adaptive_parameters");
              }
            }
          }

          // float escalation_probability_score = 13;
          if (::absl::bit_cast<::uint32_t>(this_._internal_escalation_probability_score()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                13, this_._internal_escalation_probability_score(), target);
          }

          // string protocol_adjustment_notes = 14;
          if (!this_._internal_protocol_adjustment_notes().empty()) {
            const std::string& _s = this_._internal_protocol_adjustment_notes();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.AdaptiveMonitoringLog.protocol_adjustment_notes");
            target = stream->WriteStringMaybeAliased(14, _s, target);
          }

          // string data_source_id = 15;
          if (!this_._internal_data_source_id().empty()) {
            const std::string& _s = this_._internal_data_source_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.AdaptiveMonitoringLog.data_source_id");
            target = stream->WriteStringMaybeAliased(15, _s, target);
          }

          // bool proactive_response_enabled = 16;
          if (this_._internal_proactive_response_enabled() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                16, this_._internal_proactive_response_enabled(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.monitoring.AdaptiveMonitoringLog)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AdaptiveMonitoringLog::ByteSizeLong(const MessageLite& base) {
          const AdaptiveMonitoringLog& this_ = static_cast<const AdaptiveMonitoringLog&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AdaptiveMonitoringLog::ByteSizeLong() const {
          const AdaptiveMonitoringLog& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.monitoring.AdaptiveMonitoringLog)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> log_metadata = 7;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_log_metadata_size());
              for (const auto& entry : this_._internal_log_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // map<string, string> adaptive_parameters = 12;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_adaptive_parameters_size());
              for (const auto& entry : this_._internal_adaptive_parameters()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string log_id = 1;
            if (!this_._internal_log_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_log_id());
            }
            // string monitored_segment = 2;
            if (!this_._internal_monitored_segment().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_monitored_segment());
            }
            // string check_timestamp = 4;
            if (!this_._internal_check_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_check_timestamp());
            }
            // string escalation_id = 6;
            if (!this_._internal_escalation_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_escalation_id());
            }
            // string response_action_taken = 8;
            if (!this_._internal_response_action_taken().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_response_action_taken());
            }
            // string next_check_scheduled = 9;
            if (!this_._internal_next_check_scheduled().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_next_check_scheduled());
            }
            // string monitoring_operator = 11;
            if (!this_._internal_monitoring_operator().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_monitoring_operator());
            }
            // string protocol_adjustment_notes = 14;
            if (!this_._internal_protocol_adjustment_notes().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_protocol_adjustment_notes());
            }
            // string data_source_id = 15;
            if (!this_._internal_data_source_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_data_source_id());
            }
            // .seigr.common.ThreatLevel detected_threat_level = 3;
            if (this_._internal_detected_threat_level() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_detected_threat_level());
            }
            // float detection_accuracy = 10;
            if (::absl::bit_cast<::uint32_t>(this_._internal_detection_accuracy()) != 0) {
              total_size += 5;
            }
            // bool triggered_escalation = 5;
            if (this_._internal_triggered_escalation() != 0) {
              total_size += 2;
            }
            // bool proactive_response_enabled = 16;
            if (this_._internal_proactive_response_enabled() != 0) {
              total_size += 3;
            }
            // float escalation_probability_score = 13;
            if (::absl::bit_cast<::uint32_t>(this_._internal_escalation_probability_score()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AdaptiveMonitoringLog::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AdaptiveMonitoringLog*>(&to_msg);
  auto& from = static_cast<const AdaptiveMonitoringLog&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.monitoring.AdaptiveMonitoringLog)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.log_metadata_.MergeFrom(from._impl_.log_metadata_);
  _this->_impl_.adaptive_parameters_.MergeFrom(from._impl_.adaptive_parameters_);
  if (!from._internal_log_id().empty()) {
    _this->_internal_set_log_id(from._internal_log_id());
  }
  if (!from._internal_monitored_segment().empty()) {
    _this->_internal_set_monitored_segment(from._internal_monitored_segment());
  }
  if (!from._internal_check_timestamp().empty()) {
    _this->_internal_set_check_timestamp(from._internal_check_timestamp());
  }
  if (!from._internal_escalation_id().empty()) {
    _this->_internal_set_escalation_id(from._internal_escalation_id());
  }
  if (!from._internal_response_action_taken().empty()) {
    _this->_internal_set_response_action_taken(from._internal_response_action_taken());
  }
  if (!from._internal_next_check_scheduled().empty()) {
    _this->_internal_set_next_check_scheduled(from._internal_next_check_scheduled());
  }
  if (!from._internal_monitoring_operator().empty()) {
    _this->_internal_set_monitoring_operator(from._internal_monitoring_operator());
  }
  if (!from._internal_protocol_adjustment_notes().empty()) {
    _this->_internal_set_protocol_adjustment_notes(from._internal_protocol_adjustment_notes());
  }
  if (!from._internal_data_source_id().empty()) {
    _this->_internal_set_data_source_id(from._internal_data_source_id());
  }
  if (from._internal_detected_threat_level() != 0) {
    _this->_impl_.detected_threat_level_ = from._impl_.detected_threat_level_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_detection_accuracy()) != 0) {
    _this->_impl_.detection_accuracy_ = from._impl_.detection_accuracy_;
  }
  if (from._internal_triggered_escalation() != 0) {
    _this->_impl_.triggered_escalation_ = from._impl_.triggered_escalation_;
  }
  if (from._internal_proactive_response_enabled() != 0) {
    _this->_impl_.proactive_response_enabled_ = from._impl_.proactive_response_enabled_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_escalation_probability_score()) != 0) {
    _this->_impl_.escalation_probability_score_ = from._impl_.escalation_probability_score_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AdaptiveMonitoringLog::CopyFrom(const AdaptiveMonitoringLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.monitoring.AdaptiveMonitoringLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AdaptiveMonitoringLog::InternalSwap(AdaptiveMonitoringLog* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.log_metadata_.InternalSwap(&other->_impl_.log_metadata_);
  _impl_.adaptive_parameters_.InternalSwap(&other->_impl_.adaptive_parameters_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.log_id_, &other->_impl_.log_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.monitored_segment_, &other->_impl_.monitored_segment_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.check_timestamp_, &other->_impl_.check_timestamp_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.escalation_id_, &other->_impl_.escalation_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.response_action_taken_, &other->_impl_.response_action_taken_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.next_check_scheduled_, &other->_impl_.next_check_scheduled_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.monitoring_operator_, &other->_impl_.monitoring_operator_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.protocol_adjustment_notes_, &other->_impl_.protocol_adjustment_notes_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_source_id_, &other->_impl_.data_source_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AdaptiveMonitoringLog, _impl_.escalation_probability_score_)
      + sizeof(AdaptiveMonitoringLog::_impl_.escalation_probability_score_)
      - PROTOBUF_FIELD_OFFSET(AdaptiveMonitoringLog, _impl_.detected_threat_level_)>(
          reinterpret_cast<char*>(&_impl_.detected_threat_level_),
          reinterpret_cast<char*>(&other->_impl_.detected_threat_level_));
}

::google::protobuf::Metadata AdaptiveMonitoringLog::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              MonitoringCycleSummary_CycleMetadataEntry_DoNotUse::MonitoringCycleSummary_CycleMetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              MonitoringCycleSummary_CycleMetadataEntry_DoNotUse::MonitoringCycleSummary_CycleMetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              MonitoringCycleSummary_CycleMetadataEntry_DoNotUse::MonitoringCycleSummary_CycleMetadataEntry_DoNotUse() : SuperType() {}
              MonitoringCycleSummary_CycleMetadataEntry_DoNotUse::MonitoringCycleSummary_CycleMetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* MonitoringCycleSummary_CycleMetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) MonitoringCycleSummary_CycleMetadataEntry_DoNotUse(arena);
              }
              constexpr auto MonitoringCycleSummary_CycleMetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(MonitoringCycleSummary_CycleMetadataEntry_DoNotUse),
                                                          alignof(MonitoringCycleSummary_CycleMetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull MonitoringCycleSummary_CycleMetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_MonitoringCycleSummary_CycleMetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &MonitoringCycleSummary_CycleMetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<MonitoringCycleSummary_CycleMetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &MonitoringCycleSummary_CycleMetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &MonitoringCycleSummary_CycleMetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(MonitoringCycleSummary_CycleMetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &MonitoringCycleSummary_CycleMetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_monitoring_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* MonitoringCycleSummary_CycleMetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 75, 2> MonitoringCycleSummary_CycleMetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MonitoringCycleSummary_CycleMetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::monitoring::MonitoringCycleSummary_CycleMetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(MonitoringCycleSummary_CycleMetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MonitoringCycleSummary_CycleMetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(MonitoringCycleSummary_CycleMetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(MonitoringCycleSummary_CycleMetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\72\3\5\0\0\0\0\0"
    "seigr.monitoring.MonitoringCycleSummary.CycleMetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              MonitoringCycleSummary_EscalationSummaryEntry_DoNotUse::MonitoringCycleSummary_EscalationSummaryEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              MonitoringCycleSummary_EscalationSummaryEntry_DoNotUse::MonitoringCycleSummary_EscalationSummaryEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              MonitoringCycleSummary_EscalationSummaryEntry_DoNotUse::MonitoringCycleSummary_EscalationSummaryEntry_DoNotUse() : SuperType() {}
              MonitoringCycleSummary_EscalationSummaryEntry_DoNotUse::MonitoringCycleSummary_EscalationSummaryEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* MonitoringCycleSummary_EscalationSummaryEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) MonitoringCycleSummary_EscalationSummaryEntry_DoNotUse(arena);
              }
              constexpr auto MonitoringCycleSummary_EscalationSummaryEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(MonitoringCycleSummary_EscalationSummaryEntry_DoNotUse),
                                                          alignof(MonitoringCycleSummary_EscalationSummaryEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull MonitoringCycleSummary_EscalationSummaryEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_MonitoringCycleSummary_EscalationSummaryEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &MonitoringCycleSummary_EscalationSummaryEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<MonitoringCycleSummary_EscalationSummaryEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &MonitoringCycleSummary_EscalationSummaryEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &MonitoringCycleSummary_EscalationSummaryEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(MonitoringCycleSummary_EscalationSummaryEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &MonitoringCycleSummary_EscalationSummaryEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_monitoring_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* MonitoringCycleSummary_EscalationSummaryEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 74, 2> MonitoringCycleSummary_EscalationSummaryEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MonitoringCycleSummary_EscalationSummaryEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::monitoring::MonitoringCycleSummary_EscalationSummaryEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 value = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MonitoringCycleSummary_EscalationSummaryEntry_DoNotUse, _impl_.value_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(MonitoringCycleSummary_EscalationSummaryEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MonitoringCycleSummary_EscalationSummaryEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(MonitoringCycleSummary_EscalationSummaryEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 value = 2;
    {PROTOBUF_FIELD_OFFSET(MonitoringCycleSummary_EscalationSummaryEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\76\3\0\0\0\0\0\0"
    "seigr.monitoring.MonitoringCycleSummary.EscalationSummaryEntry"
    "key"
  }},
};

// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              MonitoringCycleSummary_DetectionTrendAnalysisEntry_DoNotUse::MonitoringCycleSummary_DetectionTrendAnalysisEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              MonitoringCycleSummary_DetectionTrendAnalysisEntry_DoNotUse::MonitoringCycleSummary_DetectionTrendAnalysisEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              MonitoringCycleSummary_DetectionTrendAnalysisEntry_DoNotUse::MonitoringCycleSummary_DetectionTrendAnalysisEntry_DoNotUse() : SuperType() {}
              MonitoringCycleSummary_DetectionTrendAnalysisEntry_DoNotUse::MonitoringCycleSummary_DetectionTrendAnalysisEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* MonitoringCycleSummary_DetectionTrendAnalysisEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) MonitoringCycleSummary_DetectionTrendAnalysisEntry_DoNotUse(arena);
              }
              constexpr auto MonitoringCycleSummary_DetectionTrendAnalysisEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(MonitoringCycleSummary_DetectionTrendAnalysisEntry_DoNotUse),
                                                          alignof(MonitoringCycleSummary_DetectionTrendAnalysisEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull MonitoringCycleSummary_DetectionTrendAnalysisEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_MonitoringCycleSummary_DetectionTrendAnalysisEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &MonitoringCycleSummary_DetectionTrendAnalysisEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<MonitoringCycleSummary_DetectionTrendAnalysisEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &MonitoringCycleSummary_DetectionTrendAnalysisEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &MonitoringCycleSummary_DetectionTrendAnalysisEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(MonitoringCycleSummary_DetectionTrendAnalysisEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &MonitoringCycleSummary_DetectionTrendAnalysisEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_monitoring_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* MonitoringCycleSummary_DetectionTrendAnalysisEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 79, 2> MonitoringCycleSummary_DetectionTrendAnalysisEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MonitoringCycleSummary_DetectionTrendAnalysisEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::monitoring::MonitoringCycleSummary_DetectionTrendAnalysisEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // float value = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(MonitoringCycleSummary_DetectionTrendAnalysisEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MonitoringCycleSummary_DetectionTrendAnalysisEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(MonitoringCycleSummary_DetectionTrendAnalysisEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // float value = 2;
    {PROTOBUF_FIELD_OFFSET(MonitoringCycleSummary_DetectionTrendAnalysisEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
    "\103\3\0\0\0\0\0\0"
    "seigr.monitoring.MonitoringCycleSummary.DetectionTrendAnalysisEntry"
    "key"
  }},
};

// ===================================================================

class MonitoringCycleSummary::_Internal {
 public:
};

MonitoringCycleSummary::MonitoringCycleSummary(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.monitoring.MonitoringCycleSummary)
}
inline PROTOBUF_NDEBUG_INLINE MonitoringCycleSummary::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::monitoring::MonitoringCycleSummary& from_msg)
      : highlighted_segments_{visibility, arena, from.highlighted_segments_},
        cycle_metadata_{visibility, arena, from.cycle_metadata_},
        escalation_summary_{visibility, arena, from.escalation_summary_},
        detection_trend_analysis_{visibility, arena, from.detection_trend_analysis_},
        summary_id_(arena, from.summary_id_),
        cycle_timestamp_(arena, from.cycle_timestamp_),
        next_cycle_scheduled_(arena, from.next_cycle_scheduled_),
        cycle_summary_notes_(arena, from.cycle_summary_notes_),
        _cached_size_{0} {}

MonitoringCycleSummary::MonitoringCycleSummary(
    ::google::protobuf::Arena* arena,
    const MonitoringCycleSummary& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MonitoringCycleSummary* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_checks_conducted_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, total_checks_conducted_),
           offsetof(Impl_, adaptive_measures_applied_) -
               offsetof(Impl_, total_checks_conducted_) +
               sizeof(Impl_::adaptive_measures_applied_));

  // @@protoc_insertion_point(copy_constructor:seigr.monitoring.MonitoringCycleSummary)
}
inline PROTOBUF_NDEBUG_INLINE MonitoringCycleSummary::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : highlighted_segments_{visibility, arena},
        cycle_metadata_{visibility, arena},
        escalation_summary_{visibility, arena},
        detection_trend_analysis_{visibility, arena},
        summary_id_(arena),
        cycle_timestamp_(arena),
        next_cycle_scheduled_(arena),
        cycle_summary_notes_(arena),
        _cached_size_{0} {}

inline void MonitoringCycleSummary::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_checks_conducted_),
           0,
           offsetof(Impl_, adaptive_measures_applied_) -
               offsetof(Impl_, total_checks_conducted_) +
               sizeof(Impl_::adaptive_measures_applied_));
}
MonitoringCycleSummary::~MonitoringCycleSummary() {
  // @@protoc_insertion_point(destructor:seigr.monitoring.MonitoringCycleSummary)
  SharedDtor(*this);
}
inline void MonitoringCycleSummary::SharedDtor(MessageLite& self) {
  MonitoringCycleSummary& this_ = static_cast<MonitoringCycleSummary&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.summary_id_.Destroy();
  this_._impl_.cycle_timestamp_.Destroy();
  this_._impl_.next_cycle_scheduled_.Destroy();
  this_._impl_.cycle_summary_notes_.Destroy();
  this_._impl_.~Impl_();
}

inline void* MonitoringCycleSummary::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MonitoringCycleSummary(arena);
}
constexpr auto MonitoringCycleSummary::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(MonitoringCycleSummary, _impl_.highlighted_segments_) +
          decltype(MonitoringCycleSummary::_impl_.highlighted_segments_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(MonitoringCycleSummary, _impl_.cycle_metadata_) +
          decltype(MonitoringCycleSummary::_impl_.cycle_metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(MonitoringCycleSummary, _impl_.cycle_metadata_) +
          decltype(MonitoringCycleSummary::_impl_.cycle_metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(MonitoringCycleSummary, _impl_.escalation_summary_) +
          decltype(MonitoringCycleSummary::_impl_.escalation_summary_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(MonitoringCycleSummary, _impl_.escalation_summary_) +
          decltype(MonitoringCycleSummary::_impl_.escalation_summary_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(MonitoringCycleSummary, _impl_.detection_trend_analysis_) +
          decltype(MonitoringCycleSummary::_impl_.detection_trend_analysis_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(MonitoringCycleSummary, _impl_.detection_trend_analysis_) +
          decltype(MonitoringCycleSummary::_impl_.detection_trend_analysis_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(MonitoringCycleSummary), alignof(MonitoringCycleSummary), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&MonitoringCycleSummary::PlacementNew_,
                                 sizeof(MonitoringCycleSummary),
                                 alignof(MonitoringCycleSummary));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MonitoringCycleSummary::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MonitoringCycleSummary_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MonitoringCycleSummary::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MonitoringCycleSummary>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MonitoringCycleSummary::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MonitoringCycleSummary>(), &MonitoringCycleSummary::ByteSizeLong,
            &MonitoringCycleSummary::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MonitoringCycleSummary, _impl_._cached_size_),
        false,
    },
    &MonitoringCycleSummary::kDescriptorMethods,
    &descriptor_table_monitoring_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MonitoringCycleSummary::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 13, 3, 196, 2> MonitoringCycleSummary::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    13, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294959104,  // skipmap
    offsetof(decltype(_table_), field_entries),
    13,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::monitoring::MonitoringCycleSummary>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string summary_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MonitoringCycleSummary, _impl_.summary_id_)}},
    // string cycle_timestamp = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(MonitoringCycleSummary, _impl_.cycle_timestamp_)}},
    // int32 total_checks_conducted = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MonitoringCycleSummary, _impl_.total_checks_conducted_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(MonitoringCycleSummary, _impl_.total_checks_conducted_)}},
    // int32 escalations_triggered = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MonitoringCycleSummary, _impl_.escalations_triggered_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(MonitoringCycleSummary, _impl_.escalations_triggered_)}},
    // int32 critical_detections = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MonitoringCycleSummary, _impl_.critical_detections_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(MonitoringCycleSummary, _impl_.critical_detections_)}},
    // float average_detection_accuracy = 6;
    {::_pbi::TcParser::FastF32S1,
     {53, 63, 0, PROTOBUF_FIELD_OFFSET(MonitoringCycleSummary, _impl_.average_detection_accuracy_)}},
    // repeated string highlighted_segments = 7;
    {::_pbi::TcParser::FastUR1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(MonitoringCycleSummary, _impl_.highlighted_segments_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string next_cycle_scheduled = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(MonitoringCycleSummary, _impl_.next_cycle_scheduled_)}},
    // bool adaptive_measures_applied = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(MonitoringCycleSummary, _impl_.adaptive_measures_applied_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(MonitoringCycleSummary, _impl_.adaptive_measures_applied_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // string cycle_summary_notes = 13;
    {::_pbi::TcParser::FastUS1,
     {106, 63, 0, PROTOBUF_FIELD_OFFSET(MonitoringCycleSummary, _impl_.cycle_summary_notes_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string summary_id = 1;
    {PROTOBUF_FIELD_OFFSET(MonitoringCycleSummary, _impl_.summary_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string cycle_timestamp = 2;
    {PROTOBUF_FIELD_OFFSET(MonitoringCycleSummary, _impl_.cycle_timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 total_checks_conducted = 3;
    {PROTOBUF_FIELD_OFFSET(MonitoringCycleSummary, _impl_.total_checks_conducted_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 escalations_triggered = 4;
    {PROTOBUF_FIELD_OFFSET(MonitoringCycleSummary, _impl_.escalations_triggered_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 critical_detections = 5;
    {PROTOBUF_FIELD_OFFSET(MonitoringCycleSummary, _impl_.critical_detections_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // float average_detection_accuracy = 6;
    {PROTOBUF_FIELD_OFFSET(MonitoringCycleSummary, _impl_.average_detection_accuracy_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // repeated string highlighted_segments = 7;
    {PROTOBUF_FIELD_OFFSET(MonitoringCycleSummary, _impl_.highlighted_segments_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // map<string, string> cycle_metadata = 8;
    {PROTOBUF_FIELD_OFFSET(MonitoringCycleSummary, _impl_.cycle_metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string next_cycle_scheduled = 9;
    {PROTOBUF_FIELD_OFFSET(MonitoringCycleSummary, _impl_.next_cycle_scheduled_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool adaptive_measures_applied = 10;
    {PROTOBUF_FIELD_OFFSET(MonitoringCycleSummary, _impl_.adaptive_measures_applied_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // map<string, int32> escalation_summary = 11;
    {PROTOBUF_FIELD_OFFSET(MonitoringCycleSummary, _impl_.escalation_summary_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<string, float> detection_trend_analysis = 12;
    {PROTOBUF_FIELD_OFFSET(MonitoringCycleSummary, _impl_.detection_trend_analysis_), 0, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string cycle_summary_notes = 13;
    {PROTOBUF_FIELD_OFFSET(MonitoringCycleSummary, _impl_.cycle_summary_notes_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(MonitoringCycleSummary()._impl_.cycle_metadata_)>(
        1, 0, 0, 9,
        9)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(MonitoringCycleSummary()._impl_.escalation_summary_)>(
        1, 0, 0, 9,
        5)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(MonitoringCycleSummary()._impl_.detection_trend_analysis_)>(
        1, 0, 0, 9,
        2)},
  }}, {{
    "\47\12\17\0\0\0\0\24\16\24\0\22\30\23\0\0"
    "seigr.monitoring.MonitoringCycleSummary"
    "summary_id"
    "cycle_timestamp"
    "highlighted_segments"
    "cycle_metadata"
    "next_cycle_scheduled"
    "escalation_summary"
    "detection_trend_analysis"
    "cycle_summary_notes"
  }},
};

PROTOBUF_NOINLINE void MonitoringCycleSummary::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.monitoring.MonitoringCycleSummary)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.highlighted_segments_.Clear();
  _impl_.cycle_metadata_.Clear();
  _impl_.escalation_summary_.Clear();
  _impl_.detection_trend_analysis_.Clear();
  _impl_.summary_id_.ClearToEmpty();
  _impl_.cycle_timestamp_.ClearToEmpty();
  _impl_.next_cycle_scheduled_.ClearToEmpty();
  _impl_.cycle_summary_notes_.ClearToEmpty();
  ::memset(&_impl_.total_checks_conducted_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.adaptive_measures_applied_) -
      reinterpret_cast<char*>(&_impl_.total_checks_conducted_)) + sizeof(_impl_.adaptive_measures_applied_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MonitoringCycleSummary::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MonitoringCycleSummary& this_ = static_cast<const MonitoringCycleSummary&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MonitoringCycleSummary::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MonitoringCycleSummary& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.monitoring.MonitoringCycleSummary)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string summary_id = 1;
          if (!this_._internal_summary_id().empty()) {
            const std::string& _s = this_._internal_summary_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.MonitoringCycleSummary.summary_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string cycle_timestamp = 2;
          if (!this_._internal_cycle_timestamp().empty()) {
            const std::string& _s = this_._internal_cycle_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.MonitoringCycleSummary.cycle_timestamp");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // int32 total_checks_conducted = 3;
          if (this_._internal_total_checks_conducted() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_total_checks_conducted(), target);
          }

          // int32 escalations_triggered = 4;
          if (this_._internal_escalations_triggered() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<4>(
                    stream, this_._internal_escalations_triggered(), target);
          }

          // int32 critical_detections = 5;
          if (this_._internal_critical_detections() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<5>(
                    stream, this_._internal_critical_detections(), target);
          }

          // float average_detection_accuracy = 6;
          if (::absl::bit_cast<::uint32_t>(this_._internal_average_detection_accuracy()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                6, this_._internal_average_detection_accuracy(), target);
          }

          // repeated string highlighted_segments = 7;
          for (int i = 0, n = this_._internal_highlighted_segments_size(); i < n; ++i) {
            const auto& s = this_._internal_highlighted_segments().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.MonitoringCycleSummary.highlighted_segments");
            target = stream->WriteString(7, s, target);
          }

          // map<string, string> cycle_metadata = 8;
          if (!this_._internal_cycle_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_cycle_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    8, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.MonitoringCycleSummary.cycle_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.MonitoringCycleSummary.cycle_metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    8, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.MonitoringCycleSummary.cycle_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.MonitoringCycleSummary.cycle_metadata");
              }
            }
          }

          // string next_cycle_scheduled = 9;
          if (!this_._internal_next_cycle_scheduled().empty()) {
            const std::string& _s = this_._internal_next_cycle_scheduled();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.MonitoringCycleSummary.next_cycle_scheduled");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          // bool adaptive_measures_applied = 10;
          if (this_._internal_adaptive_measures_applied() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                10, this_._internal_adaptive_measures_applied(), target);
          }

          // map<string, int32> escalation_summary = 11;
          if (!this_._internal_escalation_summary().empty()) {
            using MapType = ::google::protobuf::Map<std::string, ::int32_t>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, ::int32_t,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_INT32>;
            const auto& field = this_._internal_escalation_summary();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    11, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.MonitoringCycleSummary.escalation_summary");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    11, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.MonitoringCycleSummary.escalation_summary");
              }
            }
          }

          // map<string, float> detection_trend_analysis = 12;
          if (!this_._internal_detection_trend_analysis().empty()) {
            using MapType = ::google::protobuf::Map<std::string, float>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, float,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_FLOAT>;
            const auto& field = this_._internal_detection_trend_analysis();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    12, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.MonitoringCycleSummary.detection_trend_analysis");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    12, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.MonitoringCycleSummary.detection_trend_analysis");
              }
            }
          }

          // string cycle_summary_notes = 13;
          if (!this_._internal_cycle_summary_notes().empty()) {
            const std::string& _s = this_._internal_cycle_summary_notes();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.monitoring.MonitoringCycleSummary.cycle_summary_notes");
            target = stream->WriteStringMaybeAliased(13, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.monitoring.MonitoringCycleSummary)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MonitoringCycleSummary::ByteSizeLong(const MessageLite& base) {
          const MonitoringCycleSummary& this_ = static_cast<const MonitoringCycleSummary&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MonitoringCycleSummary::ByteSizeLong() const {
          const MonitoringCycleSummary& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.monitoring.MonitoringCycleSummary)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string highlighted_segments = 7;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_highlighted_segments().size());
              for (int i = 0, n = this_._internal_highlighted_segments().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_highlighted_segments().Get(i));
              }
            }
            // map<string, string> cycle_metadata = 8;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_cycle_metadata_size());
              for (const auto& entry : this_._internal_cycle_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // map<string, int32> escalation_summary = 11;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_escalation_summary_size());
              for (const auto& entry : this_._internal_escalation_summary()) {
                total_size += _pbi::MapEntryFuncs<std::string, ::int32_t,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_INT32>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // map<string, float> detection_trend_analysis = 12;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_detection_trend_analysis_size());
              for (const auto& entry : this_._internal_detection_trend_analysis()) {
                total_size += _pbi::MapEntryFuncs<std::string, float,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_FLOAT>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string summary_id = 1;
            if (!this_._internal_summary_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_summary_id());
            }
            // string cycle_timestamp = 2;
            if (!this_._internal_cycle_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_cycle_timestamp());
            }
            // string next_cycle_scheduled = 9;
            if (!this_._internal_next_cycle_scheduled().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_next_cycle_scheduled());
            }
            // string cycle_summary_notes = 13;
            if (!this_._internal_cycle_summary_notes().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_cycle_summary_notes());
            }
            // int32 total_checks_conducted = 3;
            if (this_._internal_total_checks_conducted() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_total_checks_conducted());
            }
            // int32 escalations_triggered = 4;
            if (this_._internal_escalations_triggered() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_escalations_triggered());
            }
            // int32 critical_detections = 5;
            if (this_._internal_critical_detections() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_critical_detections());
            }
            // float average_detection_accuracy = 6;
            if (::absl::bit_cast<::uint32_t>(this_._internal_average_detection_accuracy()) != 0) {
              total_size += 5;
            }
            // bool adaptive_measures_applied = 10;
            if (this_._internal_adaptive_measures_applied() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MonitoringCycleSummary::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MonitoringCycleSummary*>(&to_msg);
  auto& from = static_cast<const MonitoringCycleSummary&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.monitoring.MonitoringCycleSummary)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_highlighted_segments()->MergeFrom(from._internal_highlighted_segments());
  _this->_impl_.cycle_metadata_.MergeFrom(from._impl_.cycle_metadata_);
  _this->_impl_.escalation_summary_.MergeFrom(from._impl_.escalation_summary_);
  _this->_impl_.detection_trend_analysis_.MergeFrom(from._impl_.detection_trend_analysis_);
  if (!from._internal_summary_id().empty()) {
    _this->_internal_set_summary_id(from._internal_summary_id());
  }
  if (!from._internal_cycle_timestamp().empty()) {
    _this->_internal_set_cycle_timestamp(from._internal_cycle_timestamp());
  }
  if (!from._internal_next_cycle_scheduled().empty()) {
    _this->_internal_set_next_cycle_scheduled(from._internal_next_cycle_scheduled());
  }
  if (!from._internal_cycle_summary_notes().empty()) {
    _this->_internal_set_cycle_summary_notes(from._internal_cycle_summary_notes());
  }
  if (from._internal_total_checks_conducted() != 0) {
    _this->_impl_.total_checks_conducted_ = from._impl_.total_checks_conducted_;
  }
  if (from._internal_escalations_triggered() != 0) {
    _this->_impl_.escalations_triggered_ = from._impl_.escalations_triggered_;
  }
  if (from._internal_critical_detections() != 0) {
    _this->_impl_.critical_detections_ = from._impl_.critical_detections_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_average_detection_accuracy()) != 0) {
    _this->_impl_.average_detection_accuracy_ = from._impl_.average_detection_accuracy_;
  }
  if (from._internal_adaptive_measures_applied() != 0) {
    _this->_impl_.adaptive_measures_applied_ = from._impl_.adaptive_measures_applied_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MonitoringCycleSummary::CopyFrom(const MonitoringCycleSummary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.monitoring.MonitoringCycleSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MonitoringCycleSummary::InternalSwap(MonitoringCycleSummary* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.highlighted_segments_.InternalSwap(&other->_impl_.highlighted_segments_);
  _impl_.cycle_metadata_.InternalSwap(&other->_impl_.cycle_metadata_);
  _impl_.escalation_summary_.InternalSwap(&other->_impl_.escalation_summary_);
  _impl_.detection_trend_analysis_.InternalSwap(&other->_impl_.detection_trend_analysis_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.summary_id_, &other->_impl_.summary_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cycle_timestamp_, &other->_impl_.cycle_timestamp_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.next_cycle_scheduled_, &other->_impl_.next_cycle_scheduled_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cycle_summary_notes_, &other->_impl_.cycle_summary_notes_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MonitoringCycleSummary, _impl_.adaptive_measures_applied_)
      + sizeof(MonitoringCycleSummary::_impl_.adaptive_measures_applied_)
      - PROTOBUF_FIELD_OFFSET(MonitoringCycleSummary, _impl_.total_checks_conducted_)>(
          reinterpret_cast<char*>(&_impl_.total_checks_conducted_),
          reinterpret_cast<char*>(&other->_impl_.total_checks_conducted_));
}

::google::protobuf::Metadata MonitoringCycleSummary::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace monitoring
}  // namespace seigr
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_monitoring_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
