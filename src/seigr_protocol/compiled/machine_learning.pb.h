// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: machine_learning.proto
// Protobuf C++ Version: 5.29.2

#ifndef machine_5flearning_2eproto_2epb_2eh
#define machine_5flearning_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_machine_5flearning_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_machine_5flearning_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_machine_5flearning_2eproto;
namespace seigr {
namespace machine_learning {
class EvaluationMetricResult;
struct EvaluationMetricResultDefaultTypeInternal;
extern EvaluationMetricResultDefaultTypeInternal _EvaluationMetricResult_default_instance_;
class MLModel;
struct MLModelDefaultTypeInternal;
extern MLModelDefaultTypeInternal _MLModel_default_instance_;
class MLModel_HyperparametersEntry_DoNotUse;
struct MLModel_HyperparametersEntry_DoNotUseDefaultTypeInternal;
extern MLModel_HyperparametersEntry_DoNotUseDefaultTypeInternal _MLModel_HyperparametersEntry_DoNotUse_default_instance_;
class MLModel_ModelMetadataEntry_DoNotUse;
struct MLModel_ModelMetadataEntry_DoNotUseDefaultTypeInternal;
extern MLModel_ModelMetadataEntry_DoNotUseDefaultTypeInternal _MLModel_ModelMetadataEntry_DoNotUse_default_instance_;
class ModelPerformanceLog;
struct ModelPerformanceLogDefaultTypeInternal;
extern ModelPerformanceLogDefaultTypeInternal _ModelPerformanceLog_default_instance_;
class ModelPerformanceLog_PerformanceMetadataEntry_DoNotUse;
struct ModelPerformanceLog_PerformanceMetadataEntry_DoNotUseDefaultTypeInternal;
extern ModelPerformanceLog_PerformanceMetadataEntry_DoNotUseDefaultTypeInternal _ModelPerformanceLog_PerformanceMetadataEntry_DoNotUse_default_instance_;
class MultiModalConfig;
struct MultiModalConfigDefaultTypeInternal;
extern MultiModalConfigDefaultTypeInternal _MultiModalConfig_default_instance_;
class MultiModalConfig_ProcessingParametersEntry_DoNotUse;
struct MultiModalConfig_ProcessingParametersEntry_DoNotUseDefaultTypeInternal;
extern MultiModalConfig_ProcessingParametersEntry_DoNotUseDefaultTypeInternal _MultiModalConfig_ProcessingParametersEntry_DoNotUse_default_instance_;
class PredictionRequest;
struct PredictionRequestDefaultTypeInternal;
extern PredictionRequestDefaultTypeInternal _PredictionRequest_default_instance_;
class PredictionRequest_ContextDataEntry_DoNotUse;
struct PredictionRequest_ContextDataEntry_DoNotUseDefaultTypeInternal;
extern PredictionRequest_ContextDataEntry_DoNotUseDefaultTypeInternal _PredictionRequest_ContextDataEntry_DoNotUse_default_instance_;
class PredictionResponse;
struct PredictionResponseDefaultTypeInternal;
extern PredictionResponseDefaultTypeInternal _PredictionResponse_default_instance_;
class TrainingConfig;
struct TrainingConfigDefaultTypeInternal;
extern TrainingConfigDefaultTypeInternal _TrainingConfig_default_instance_;
class TrainingConfig_TrainingMetadataEntry_DoNotUse;
struct TrainingConfig_TrainingMetadataEntry_DoNotUseDefaultTypeInternal;
extern TrainingConfig_TrainingMetadataEntry_DoNotUseDefaultTypeInternal _TrainingConfig_TrainingMetadataEntry_DoNotUse_default_instance_;
class TrainingResult;
struct TrainingResultDefaultTypeInternal;
extern TrainingResultDefaultTypeInternal _TrainingResult_default_instance_;
class TrainingResult_ResultMetadataEntry_DoNotUse;
struct TrainingResult_ResultMetadataEntry_DoNotUseDefaultTypeInternal;
extern TrainingResult_ResultMetadataEntry_DoNotUseDefaultTypeInternal _TrainingResult_ResultMetadataEntry_DoNotUse_default_instance_;
}  // namespace machine_learning
}  // namespace seigr
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace seigr {
namespace machine_learning {
enum MLModelType : int {
  ML_MODEL_TYPE_UNDEFINED = 0,
  ML_MODEL_TYPE_CLASSIFICATION = 1,
  ML_MODEL_TYPE_REGRESSION = 2,
  ML_MODEL_TYPE_CLUSTERING = 3,
  ML_MODEL_TYPE_RECOMMENDER = 4,
  ML_MODEL_TYPE_NLP = 5,
  ML_MODEL_TYPE_DEEP_LEARNING = 6,
  ML_MODEL_TYPE_ANOMALY_DETECTION = 7,
  ML_MODEL_TYPE_GENERATIVE = 8,
  ML_MODEL_TYPE_MULTI_MODAL = 9,
  MLModelType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  MLModelType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool MLModelType_IsValid(int value);
extern const uint32_t MLModelType_internal_data_[];
constexpr MLModelType MLModelType_MIN = static_cast<MLModelType>(0);
constexpr MLModelType MLModelType_MAX = static_cast<MLModelType>(9);
constexpr int MLModelType_ARRAYSIZE = 9 + 1;
const ::google::protobuf::EnumDescriptor*
MLModelType_descriptor();
template <typename T>
const std::string& MLModelType_Name(T value) {
  static_assert(std::is_same<T, MLModelType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to MLModelType_Name().");
  return MLModelType_Name(static_cast<MLModelType>(value));
}
template <>
inline const std::string& MLModelType_Name(MLModelType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<MLModelType_descriptor,
                                                 0, 9>(
      static_cast<int>(value));
}
inline bool MLModelType_Parse(absl::string_view name, MLModelType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MLModelType>(
      MLModelType_descriptor(), name, value);
}
enum DataInputType : int {
  DATA_INPUT_TYPE_UNDEFINED = 0,
  DATA_INPUT_TYPE_TEXT = 1,
  DATA_INPUT_TYPE_AUDIO = 2,
  DATA_INPUT_TYPE_IMAGE = 3,
  DATA_INPUT_TYPE_VIDEO = 4,
  DATA_INPUT_TYPE_SENSOR = 5,
  DATA_INPUT_TYPE_STRUCTURED_DATA = 6,
  DataInputType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  DataInputType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool DataInputType_IsValid(int value);
extern const uint32_t DataInputType_internal_data_[];
constexpr DataInputType DataInputType_MIN = static_cast<DataInputType>(0);
constexpr DataInputType DataInputType_MAX = static_cast<DataInputType>(6);
constexpr int DataInputType_ARRAYSIZE = 6 + 1;
const ::google::protobuf::EnumDescriptor*
DataInputType_descriptor();
template <typename T>
const std::string& DataInputType_Name(T value) {
  static_assert(std::is_same<T, DataInputType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to DataInputType_Name().");
  return DataInputType_Name(static_cast<DataInputType>(value));
}
template <>
inline const std::string& DataInputType_Name(DataInputType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<DataInputType_descriptor,
                                                 0, 6>(
      static_cast<int>(value));
}
inline bool DataInputType_Parse(absl::string_view name, DataInputType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DataInputType>(
      DataInputType_descriptor(), name, value);
}
enum MLTrainingStatus : int {
  ML_TRAINING_STATUS_UNDEFINED = 0,
  ML_TRAINING_STATUS_IN_PROGRESS = 1,
  ML_TRAINING_STATUS_COMPLETED = 2,
  ML_TRAINING_STATUS_FAILED = 3,
  ML_TRAINING_STATUS_PENDING = 4,
  ML_TRAINING_STATUS_CONTINUOUS = 5,
  MLTrainingStatus_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  MLTrainingStatus_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool MLTrainingStatus_IsValid(int value);
extern const uint32_t MLTrainingStatus_internal_data_[];
constexpr MLTrainingStatus MLTrainingStatus_MIN = static_cast<MLTrainingStatus>(0);
constexpr MLTrainingStatus MLTrainingStatus_MAX = static_cast<MLTrainingStatus>(5);
constexpr int MLTrainingStatus_ARRAYSIZE = 5 + 1;
const ::google::protobuf::EnumDescriptor*
MLTrainingStatus_descriptor();
template <typename T>
const std::string& MLTrainingStatus_Name(T value) {
  static_assert(std::is_same<T, MLTrainingStatus>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to MLTrainingStatus_Name().");
  return MLTrainingStatus_Name(static_cast<MLTrainingStatus>(value));
}
template <>
inline const std::string& MLTrainingStatus_Name(MLTrainingStatus value) {
  return ::google::protobuf::internal::NameOfDenseEnum<MLTrainingStatus_descriptor,
                                                 0, 5>(
      static_cast<int>(value));
}
inline bool MLTrainingStatus_Parse(absl::string_view name, MLTrainingStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MLTrainingStatus>(
      MLTrainingStatus_descriptor(), name, value);
}
enum MLEvaluationMetric : int {
  ML_EVALUATION_METRIC_UNDEFINED = 0,
  ML_EVALUATION_METRIC_ACCURACY = 1,
  ML_EVALUATION_METRIC_PRECISION = 2,
  ML_EVALUATION_METRIC_RECALL = 3,
  ML_EVALUATION_METRIC_F1_SCORE = 4,
  ML_EVALUATION_METRIC_MSE = 5,
  ML_EVALUATION_METRIC_MAE = 6,
  ML_EVALUATION_METRIC_AUC = 7,
  ML_EVALUATION_METRIC_RMSE = 8,
  ML_EVALUATION_METRIC_SILHOUETTE = 9,
  MLEvaluationMetric_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  MLEvaluationMetric_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool MLEvaluationMetric_IsValid(int value);
extern const uint32_t MLEvaluationMetric_internal_data_[];
constexpr MLEvaluationMetric MLEvaluationMetric_MIN = static_cast<MLEvaluationMetric>(0);
constexpr MLEvaluationMetric MLEvaluationMetric_MAX = static_cast<MLEvaluationMetric>(9);
constexpr int MLEvaluationMetric_ARRAYSIZE = 9 + 1;
const ::google::protobuf::EnumDescriptor*
MLEvaluationMetric_descriptor();
template <typename T>
const std::string& MLEvaluationMetric_Name(T value) {
  static_assert(std::is_same<T, MLEvaluationMetric>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to MLEvaluationMetric_Name().");
  return MLEvaluationMetric_Name(static_cast<MLEvaluationMetric>(value));
}
template <>
inline const std::string& MLEvaluationMetric_Name(MLEvaluationMetric value) {
  return ::google::protobuf::internal::NameOfDenseEnum<MLEvaluationMetric_descriptor,
                                                 0, 9>(
      static_cast<int>(value));
}
inline bool MLEvaluationMetric_Parse(absl::string_view name, MLEvaluationMetric* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MLEvaluationMetric>(
      MLEvaluationMetric_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class TrainingResult_ResultMetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  TrainingResult_ResultMetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TrainingResult_ResultMetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TrainingResult_ResultMetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const TrainingResult_ResultMetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TrainingResult_ResultMetadataEntry_DoNotUse*>(
        &_TrainingResult_ResultMetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_machine_5flearning_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      74, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class TrainingConfig_TrainingMetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  TrainingConfig_TrainingMetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TrainingConfig_TrainingMetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TrainingConfig_TrainingMetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const TrainingConfig_TrainingMetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TrainingConfig_TrainingMetadataEntry_DoNotUse*>(
        &_TrainingConfig_TrainingMetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_machine_5flearning_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      76, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class PredictionResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.machine_learning.PredictionResponse) */ {
 public:
  inline PredictionResponse() : PredictionResponse(nullptr) {}
  ~PredictionResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PredictionResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PredictionResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PredictionResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline PredictionResponse(const PredictionResponse& from) : PredictionResponse(nullptr, from) {}
  inline PredictionResponse(PredictionResponse&& from) noexcept
      : PredictionResponse(nullptr, std::move(from)) {}
  inline PredictionResponse& operator=(const PredictionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PredictionResponse& operator=(PredictionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PredictionResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PredictionResponse* internal_default_instance() {
    return reinterpret_cast<const PredictionResponse*>(
        &_PredictionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(PredictionResponse& a, PredictionResponse& b) { a.Swap(&b); }
  inline void Swap(PredictionResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PredictionResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PredictionResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PredictionResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PredictionResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PredictionResponse& from) { PredictionResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PredictionResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.machine_learning.PredictionResponse"; }

 protected:
  explicit PredictionResponse(::google::protobuf::Arena* arena);
  PredictionResponse(::google::protobuf::Arena* arena, const PredictionResponse& from);
  PredictionResponse(::google::protobuf::Arena* arena, PredictionResponse&& from) noexcept
      : PredictionResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPredictedLabelsFieldNumber = 2,
    kPredictedValuesFieldNumber = 3,
    kModelIdFieldNumber = 1,
    kErrorMessageFieldNumber = 5,
    kPredictionExplanationFieldNumber = 7,
    kSuccessFieldNumber = 4,
    kPredictionConfidenceFieldNumber = 6,
  };
  // repeated string predicted_labels = 2;
  int predicted_labels_size() const;
  private:
  int _internal_predicted_labels_size() const;

  public:
  void clear_predicted_labels() ;
  const std::string& predicted_labels(int index) const;
  std::string* mutable_predicted_labels(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_predicted_labels(int index, Arg_&& value, Args_... args);
  std::string* add_predicted_labels();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_predicted_labels(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& predicted_labels() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_predicted_labels();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_predicted_labels() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_predicted_labels();

  public:
  // repeated double predicted_values = 3;
  int predicted_values_size() const;
  private:
  int _internal_predicted_values_size() const;

  public:
  void clear_predicted_values() ;
  double predicted_values(int index) const;
  void set_predicted_values(int index, double value);
  void add_predicted_values(double value);
  const ::google::protobuf::RepeatedField<double>& predicted_values() const;
  ::google::protobuf::RepeatedField<double>* mutable_predicted_values();

  private:
  const ::google::protobuf::RepeatedField<double>& _internal_predicted_values() const;
  ::google::protobuf::RepeatedField<double>* _internal_mutable_predicted_values();

  public:
  // string model_id = 1;
  void clear_model_id() ;
  const std::string& model_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_model_id(Arg_&& arg, Args_... args);
  std::string* mutable_model_id();
  PROTOBUF_NODISCARD std::string* release_model_id();
  void set_allocated_model_id(std::string* value);

  private:
  const std::string& _internal_model_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_model_id(
      const std::string& value);
  std::string* _internal_mutable_model_id();

  public:
  // string error_message = 5;
  void clear_error_message() ;
  const std::string& error_message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_error_message(Arg_&& arg, Args_... args);
  std::string* mutable_error_message();
  PROTOBUF_NODISCARD std::string* release_error_message();
  void set_allocated_error_message(std::string* value);

  private:
  const std::string& _internal_error_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_error_message(
      const std::string& value);
  std::string* _internal_mutable_error_message();

  public:
  // string prediction_explanation = 7;
  void clear_prediction_explanation() ;
  const std::string& prediction_explanation() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_prediction_explanation(Arg_&& arg, Args_... args);
  std::string* mutable_prediction_explanation();
  PROTOBUF_NODISCARD std::string* release_prediction_explanation();
  void set_allocated_prediction_explanation(std::string* value);

  private:
  const std::string& _internal_prediction_explanation() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_prediction_explanation(
      const std::string& value);
  std::string* _internal_mutable_prediction_explanation();

  public:
  // bool success = 4;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // float prediction_confidence = 6;
  void clear_prediction_confidence() ;
  float prediction_confidence() const;
  void set_prediction_confidence(float value);

  private:
  float _internal_prediction_confidence() const;
  void _internal_set_prediction_confidence(float value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.machine_learning.PredictionResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 0,
      109, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PredictionResponse& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> predicted_labels_;
    ::google::protobuf::RepeatedField<double> predicted_values_;
    ::google::protobuf::internal::ArenaStringPtr model_id_;
    ::google::protobuf::internal::ArenaStringPtr error_message_;
    ::google::protobuf::internal::ArenaStringPtr prediction_explanation_;
    bool success_;
    float prediction_confidence_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_machine_5flearning_2eproto;
};
// -------------------------------------------------------------------

class PredictionRequest_ContextDataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  PredictionRequest_ContextDataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PredictionRequest_ContextDataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit PredictionRequest_ContextDataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const PredictionRequest_ContextDataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const PredictionRequest_ContextDataEntry_DoNotUse*>(
        &_PredictionRequest_ContextDataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_machine_5flearning_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      74, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class MultiModalConfig_ProcessingParametersEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  MultiModalConfig_ProcessingParametersEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MultiModalConfig_ProcessingParametersEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit MultiModalConfig_ProcessingParametersEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const MultiModalConfig_ProcessingParametersEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const MultiModalConfig_ProcessingParametersEntry_DoNotUse*>(
        &_MultiModalConfig_ProcessingParametersEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_machine_5flearning_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      82, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class ModelPerformanceLog_PerformanceMetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  ModelPerformanceLog_PerformanceMetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ModelPerformanceLog_PerformanceMetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit ModelPerformanceLog_PerformanceMetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const ModelPerformanceLog_PerformanceMetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const ModelPerformanceLog_PerformanceMetadataEntry_DoNotUse*>(
        &_ModelPerformanceLog_PerformanceMetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_machine_5flearning_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      84, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class MLModel_ModelMetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  MLModel_ModelMetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MLModel_ModelMetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit MLModel_ModelMetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const MLModel_ModelMetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const MLModel_ModelMetadataEntry_DoNotUse*>(
        &_MLModel_ModelMetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_machine_5flearning_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      66, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class MLModel_HyperparametersEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  MLModel_HyperparametersEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MLModel_HyperparametersEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit MLModel_HyperparametersEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const MLModel_HyperparametersEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const MLModel_HyperparametersEntry_DoNotUse*>(
        &_MLModel_HyperparametersEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_machine_5flearning_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      68, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class EvaluationMetricResult final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.machine_learning.EvaluationMetricResult) */ {
 public:
  inline EvaluationMetricResult() : EvaluationMetricResult(nullptr) {}
  ~EvaluationMetricResult() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(EvaluationMetricResult* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(EvaluationMetricResult));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EvaluationMetricResult(
      ::google::protobuf::internal::ConstantInitialized);

  inline EvaluationMetricResult(const EvaluationMetricResult& from) : EvaluationMetricResult(nullptr, from) {}
  inline EvaluationMetricResult(EvaluationMetricResult&& from) noexcept
      : EvaluationMetricResult(nullptr, std::move(from)) {}
  inline EvaluationMetricResult& operator=(const EvaluationMetricResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline EvaluationMetricResult& operator=(EvaluationMetricResult&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EvaluationMetricResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const EvaluationMetricResult* internal_default_instance() {
    return reinterpret_cast<const EvaluationMetricResult*>(
        &_EvaluationMetricResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(EvaluationMetricResult& a, EvaluationMetricResult& b) { a.Swap(&b); }
  inline void Swap(EvaluationMetricResult* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EvaluationMetricResult* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EvaluationMetricResult* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<EvaluationMetricResult>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EvaluationMetricResult& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EvaluationMetricResult& from) { EvaluationMetricResult::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(EvaluationMetricResult* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.machine_learning.EvaluationMetricResult"; }

 protected:
  explicit EvaluationMetricResult(::google::protobuf::Arena* arena);
  EvaluationMetricResult(::google::protobuf::Arena* arena, const EvaluationMetricResult& from);
  EvaluationMetricResult(::google::protobuf::Arena* arena, EvaluationMetricResult&& from) noexcept
      : EvaluationMetricResult(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMetricValueFieldNumber = 2,
    kMetricTypeFieldNumber = 1,
  };
  // double metric_value = 2;
  void clear_metric_value() ;
  double metric_value() const;
  void set_metric_value(double value);

  private:
  double _internal_metric_value() const;
  void _internal_set_metric_value(double value);

  public:
  // .seigr.machine_learning.MLEvaluationMetric metric_type = 1;
  void clear_metric_type() ;
  ::seigr::machine_learning::MLEvaluationMetric metric_type() const;
  void set_metric_type(::seigr::machine_learning::MLEvaluationMetric value);

  private:
  ::seigr::machine_learning::MLEvaluationMetric _internal_metric_type() const;
  void _internal_set_metric_type(::seigr::machine_learning::MLEvaluationMetric value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.machine_learning.EvaluationMetricResult)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EvaluationMetricResult& from_msg);
    double metric_value_;
    int metric_type_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_machine_5flearning_2eproto;
};
// -------------------------------------------------------------------

class TrainingResult final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.machine_learning.TrainingResult) */ {
 public:
  inline TrainingResult() : TrainingResult(nullptr) {}
  ~TrainingResult() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TrainingResult* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TrainingResult));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TrainingResult(
      ::google::protobuf::internal::ConstantInitialized);

  inline TrainingResult(const TrainingResult& from) : TrainingResult(nullptr, from) {}
  inline TrainingResult(TrainingResult&& from) noexcept
      : TrainingResult(nullptr, std::move(from)) {}
  inline TrainingResult& operator=(const TrainingResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrainingResult& operator=(TrainingResult&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TrainingResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const TrainingResult* internal_default_instance() {
    return reinterpret_cast<const TrainingResult*>(
        &_TrainingResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(TrainingResult& a, TrainingResult& b) { a.Swap(&b); }
  inline void Swap(TrainingResult* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrainingResult* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TrainingResult* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TrainingResult>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TrainingResult& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TrainingResult& from) { TrainingResult::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TrainingResult* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.machine_learning.TrainingResult"; }

 protected:
  explicit TrainingResult(::google::protobuf::Arena* arena);
  TrainingResult(::google::protobuf::Arena* arena, const TrainingResult& from);
  TrainingResult(::google::protobuf::Arena* arena, TrainingResult&& from) noexcept
      : TrainingResult(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMetricsFieldNumber = 3,
    kResultMetadataFieldNumber = 5,
    kModelIdFieldNumber = 1,
    kCompletedAtFieldNumber = 4,
    kStatusFieldNumber = 2,
    kTrainingDurationSecondsFieldNumber = 6,
  };
  // repeated .seigr.machine_learning.EvaluationMetricResult metrics = 3;
  int metrics_size() const;
  private:
  int _internal_metrics_size() const;

  public:
  void clear_metrics() ;
  ::seigr::machine_learning::EvaluationMetricResult* mutable_metrics(int index);
  ::google::protobuf::RepeatedPtrField<::seigr::machine_learning::EvaluationMetricResult>* mutable_metrics();

  private:
  const ::google::protobuf::RepeatedPtrField<::seigr::machine_learning::EvaluationMetricResult>& _internal_metrics() const;
  ::google::protobuf::RepeatedPtrField<::seigr::machine_learning::EvaluationMetricResult>* _internal_mutable_metrics();
  public:
  const ::seigr::machine_learning::EvaluationMetricResult& metrics(int index) const;
  ::seigr::machine_learning::EvaluationMetricResult* add_metrics();
  const ::google::protobuf::RepeatedPtrField<::seigr::machine_learning::EvaluationMetricResult>& metrics() const;
  // map<string, string> result_metadata = 5;
  int result_metadata_size() const;
  private:
  int _internal_result_metadata_size() const;

  public:
  void clear_result_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& result_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_result_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_result_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_result_metadata();

  public:
  // string model_id = 1;
  void clear_model_id() ;
  const std::string& model_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_model_id(Arg_&& arg, Args_... args);
  std::string* mutable_model_id();
  PROTOBUF_NODISCARD std::string* release_model_id();
  void set_allocated_model_id(std::string* value);

  private:
  const std::string& _internal_model_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_model_id(
      const std::string& value);
  std::string* _internal_mutable_model_id();

  public:
  // string completed_at = 4;
  void clear_completed_at() ;
  const std::string& completed_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_completed_at(Arg_&& arg, Args_... args);
  std::string* mutable_completed_at();
  PROTOBUF_NODISCARD std::string* release_completed_at();
  void set_allocated_completed_at(std::string* value);

  private:
  const std::string& _internal_completed_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_completed_at(
      const std::string& value);
  std::string* _internal_mutable_completed_at();

  public:
  // .seigr.machine_learning.MLTrainingStatus status = 2;
  void clear_status() ;
  ::seigr::machine_learning::MLTrainingStatus status() const;
  void set_status(::seigr::machine_learning::MLTrainingStatus value);

  private:
  ::seigr::machine_learning::MLTrainingStatus _internal_status() const;
  void _internal_set_status(::seigr::machine_learning::MLTrainingStatus value);

  public:
  // float training_duration_seconds = 6;
  void clear_training_duration_seconds() ;
  float training_duration_seconds() const;
  void set_training_duration_seconds(float value);

  private:
  float _internal_training_duration_seconds() const;
  void _internal_set_training_duration_seconds(float value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.machine_learning.TrainingResult)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 2,
      81, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TrainingResult& from_msg);
    ::google::protobuf::RepeatedPtrField< ::seigr::machine_learning::EvaluationMetricResult > metrics_;
    ::google::protobuf::internal::MapField<TrainingResult_ResultMetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        result_metadata_;
    ::google::protobuf::internal::ArenaStringPtr model_id_;
    ::google::protobuf::internal::ArenaStringPtr completed_at_;
    int status_;
    float training_duration_seconds_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_machine_5flearning_2eproto;
};
// -------------------------------------------------------------------

class TrainingConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.machine_learning.TrainingConfig) */ {
 public:
  inline TrainingConfig() : TrainingConfig(nullptr) {}
  ~TrainingConfig() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TrainingConfig* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TrainingConfig));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TrainingConfig(
      ::google::protobuf::internal::ConstantInitialized);

  inline TrainingConfig(const TrainingConfig& from) : TrainingConfig(nullptr, from) {}
  inline TrainingConfig(TrainingConfig&& from) noexcept
      : TrainingConfig(nullptr, std::move(from)) {}
  inline TrainingConfig& operator=(const TrainingConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrainingConfig& operator=(TrainingConfig&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TrainingConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const TrainingConfig* internal_default_instance() {
    return reinterpret_cast<const TrainingConfig*>(
        &_TrainingConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(TrainingConfig& a, TrainingConfig& b) { a.Swap(&b); }
  inline void Swap(TrainingConfig* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrainingConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TrainingConfig* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TrainingConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TrainingConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TrainingConfig& from) { TrainingConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TrainingConfig* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.machine_learning.TrainingConfig"; }

 protected:
  explicit TrainingConfig(::google::protobuf::Arena* arena);
  TrainingConfig(::google::protobuf::Arena* arena, const TrainingConfig& from);
  TrainingConfig(::google::protobuf::Arena* arena, TrainingConfig&& from) noexcept
      : TrainingConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTrainingMetadataFieldNumber = 7,
    kModelIdFieldNumber = 1,
    kOptimizerFieldNumber = 6,
    kTrainingDatasetIdFieldNumber = 8,
    kEpochsFieldNumber = 2,
    kBatchSizeFieldNumber = 3,
    kLearningRateFieldNumber = 4,
    kUseGpuFieldNumber = 5,
    kEnableTransferLearningFieldNumber = 9,
    kAdaptiveLearningFieldNumber = 10,
  };
  // map<string, string> training_metadata = 7;
  int training_metadata_size() const;
  private:
  int _internal_training_metadata_size() const;

  public:
  void clear_training_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& training_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_training_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_training_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_training_metadata();

  public:
  // string model_id = 1;
  void clear_model_id() ;
  const std::string& model_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_model_id(Arg_&& arg, Args_... args);
  std::string* mutable_model_id();
  PROTOBUF_NODISCARD std::string* release_model_id();
  void set_allocated_model_id(std::string* value);

  private:
  const std::string& _internal_model_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_model_id(
      const std::string& value);
  std::string* _internal_mutable_model_id();

  public:
  // string optimizer = 6;
  void clear_optimizer() ;
  const std::string& optimizer() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_optimizer(Arg_&& arg, Args_... args);
  std::string* mutable_optimizer();
  PROTOBUF_NODISCARD std::string* release_optimizer();
  void set_allocated_optimizer(std::string* value);

  private:
  const std::string& _internal_optimizer() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_optimizer(
      const std::string& value);
  std::string* _internal_mutable_optimizer();

  public:
  // string training_dataset_id = 8;
  void clear_training_dataset_id() ;
  const std::string& training_dataset_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_training_dataset_id(Arg_&& arg, Args_... args);
  std::string* mutable_training_dataset_id();
  PROTOBUF_NODISCARD std::string* release_training_dataset_id();
  void set_allocated_training_dataset_id(std::string* value);

  private:
  const std::string& _internal_training_dataset_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_training_dataset_id(
      const std::string& value);
  std::string* _internal_mutable_training_dataset_id();

  public:
  // int32 epochs = 2;
  void clear_epochs() ;
  ::int32_t epochs() const;
  void set_epochs(::int32_t value);

  private:
  ::int32_t _internal_epochs() const;
  void _internal_set_epochs(::int32_t value);

  public:
  // int32 batch_size = 3;
  void clear_batch_size() ;
  ::int32_t batch_size() const;
  void set_batch_size(::int32_t value);

  private:
  ::int32_t _internal_batch_size() const;
  void _internal_set_batch_size(::int32_t value);

  public:
  // double learning_rate = 4;
  void clear_learning_rate() ;
  double learning_rate() const;
  void set_learning_rate(double value);

  private:
  double _internal_learning_rate() const;
  void _internal_set_learning_rate(double value);

  public:
  // bool use_gpu = 5;
  void clear_use_gpu() ;
  bool use_gpu() const;
  void set_use_gpu(bool value);

  private:
  bool _internal_use_gpu() const;
  void _internal_set_use_gpu(bool value);

  public:
  // bool enable_transfer_learning = 9;
  void clear_enable_transfer_learning() ;
  bool enable_transfer_learning() const;
  void set_enable_transfer_learning(bool value);

  private:
  bool _internal_enable_transfer_learning() const;
  void _internal_set_enable_transfer_learning(bool value);

  public:
  // bool adaptive_learning = 10;
  void clear_adaptive_learning() ;
  bool adaptive_learning() const;
  void set_adaptive_learning(bool value);

  private:
  bool _internal_adaptive_learning() const;
  void _internal_set_adaptive_learning(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.machine_learning.TrainingConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 10, 1,
      107, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TrainingConfig& from_msg);
    ::google::protobuf::internal::MapField<TrainingConfig_TrainingMetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        training_metadata_;
    ::google::protobuf::internal::ArenaStringPtr model_id_;
    ::google::protobuf::internal::ArenaStringPtr optimizer_;
    ::google::protobuf::internal::ArenaStringPtr training_dataset_id_;
    ::int32_t epochs_;
    ::int32_t batch_size_;
    double learning_rate_;
    bool use_gpu_;
    bool enable_transfer_learning_;
    bool adaptive_learning_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_machine_5flearning_2eproto;
};
// -------------------------------------------------------------------

class PredictionRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.machine_learning.PredictionRequest) */ {
 public:
  inline PredictionRequest() : PredictionRequest(nullptr) {}
  ~PredictionRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PredictionRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PredictionRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PredictionRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline PredictionRequest(const PredictionRequest& from) : PredictionRequest(nullptr, from) {}
  inline PredictionRequest(PredictionRequest&& from) noexcept
      : PredictionRequest(nullptr, std::move(from)) {}
  inline PredictionRequest& operator=(const PredictionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PredictionRequest& operator=(PredictionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PredictionRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PredictionRequest* internal_default_instance() {
    return reinterpret_cast<const PredictionRequest*>(
        &_PredictionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(PredictionRequest& a, PredictionRequest& b) { a.Swap(&b); }
  inline void Swap(PredictionRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PredictionRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PredictionRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PredictionRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PredictionRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PredictionRequest& from) { PredictionRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PredictionRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.machine_learning.PredictionRequest"; }

 protected:
  explicit PredictionRequest(::google::protobuf::Arena* arena);
  PredictionRequest(::google::protobuf::Arena* arena, const PredictionRequest& from);
  PredictionRequest(::google::protobuf::Arena* arena, PredictionRequest&& from) noexcept
      : PredictionRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInputDataFieldNumber = 2,
    kContextDataFieldNumber = 4,
    kModelIdFieldNumber = 1,
    kAsyncRequestFieldNumber = 3,
  };
  // repeated bytes input_data = 2;
  int input_data_size() const;
  private:
  int _internal_input_data_size() const;

  public:
  void clear_input_data() ;
  const std::string& input_data(int index) const;
  std::string* mutable_input_data(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_input_data(int index, Arg_&& value, Args_... args);
  std::string* add_input_data();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_input_data(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& input_data() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_input_data();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_input_data() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_input_data();

  public:
  // map<string, string> context_data = 4;
  int context_data_size() const;
  private:
  int _internal_context_data_size() const;

  public:
  void clear_context_data() ;
  const ::google::protobuf::Map<std::string, std::string>& context_data() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_context_data();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_context_data() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_context_data();

  public:
  // string model_id = 1;
  void clear_model_id() ;
  const std::string& model_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_model_id(Arg_&& arg, Args_... args);
  std::string* mutable_model_id();
  PROTOBUF_NODISCARD std::string* release_model_id();
  void set_allocated_model_id(std::string* value);

  private:
  const std::string& _internal_model_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_model_id(
      const std::string& value);
  std::string* _internal_mutable_model_id();

  public:
  // bool async_request = 3;
  void clear_async_request() ;
  bool async_request() const;
  void set_async_request(bool value);

  private:
  bool _internal_async_request() const;
  void _internal_set_async_request(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.machine_learning.PredictionRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      69, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PredictionRequest& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> input_data_;
    ::google::protobuf::internal::MapField<PredictionRequest_ContextDataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        context_data_;
    ::google::protobuf::internal::ArenaStringPtr model_id_;
    bool async_request_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_machine_5flearning_2eproto;
};
// -------------------------------------------------------------------

class MultiModalConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.machine_learning.MultiModalConfig) */ {
 public:
  inline MultiModalConfig() : MultiModalConfig(nullptr) {}
  ~MultiModalConfig() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MultiModalConfig* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MultiModalConfig));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MultiModalConfig(
      ::google::protobuf::internal::ConstantInitialized);

  inline MultiModalConfig(const MultiModalConfig& from) : MultiModalConfig(nullptr, from) {}
  inline MultiModalConfig(MultiModalConfig&& from) noexcept
      : MultiModalConfig(nullptr, std::move(from)) {}
  inline MultiModalConfig& operator=(const MultiModalConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline MultiModalConfig& operator=(MultiModalConfig&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MultiModalConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const MultiModalConfig* internal_default_instance() {
    return reinterpret_cast<const MultiModalConfig*>(
        &_MultiModalConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(MultiModalConfig& a, MultiModalConfig& b) { a.Swap(&b); }
  inline void Swap(MultiModalConfig* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MultiModalConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MultiModalConfig* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MultiModalConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MultiModalConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MultiModalConfig& from) { MultiModalConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MultiModalConfig* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.machine_learning.MultiModalConfig"; }

 protected:
  explicit MultiModalConfig(::google::protobuf::Arena* arena);
  MultiModalConfig(::google::protobuf::Arena* arena, const MultiModalConfig& from);
  MultiModalConfig(::google::protobuf::Arena* arena, MultiModalConfig&& from) noexcept
      : MultiModalConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInputTypesFieldNumber = 1,
    kProcessingParametersFieldNumber = 2,
    kEnableCrossModalAttentionFieldNumber = 3,
  };
  // repeated .seigr.machine_learning.DataInputType input_types = 1;
  int input_types_size() const;
  private:
  int _internal_input_types_size() const;

  public:
  void clear_input_types() ;
  public:
  ::seigr::machine_learning::DataInputType input_types(int index) const;
  void set_input_types(int index, ::seigr::machine_learning::DataInputType value);
  void add_input_types(::seigr::machine_learning::DataInputType value);
  const ::google::protobuf::RepeatedField<int>& input_types() const;
  ::google::protobuf::RepeatedField<int>* mutable_input_types();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_input_types() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_input_types();

  public:
  // map<string, string> processing_parameters = 2;
  int processing_parameters_size() const;
  private:
  int _internal_processing_parameters_size() const;

  public:
  void clear_processing_parameters() ;
  const ::google::protobuf::Map<std::string, std::string>& processing_parameters() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_processing_parameters();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_processing_parameters() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_processing_parameters();

  public:
  // bool enable_cross_modal_attention = 3;
  void clear_enable_cross_modal_attention() ;
  bool enable_cross_modal_attention() const;
  void set_enable_cross_modal_attention(bool value);

  private:
  bool _internal_enable_cross_modal_attention() const;
  void _internal_set_enable_cross_modal_attention(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.machine_learning.MultiModalConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      69, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MultiModalConfig& from_msg);
    ::google::protobuf::RepeatedField<int> input_types_;
    ::google::protobuf::internal::CachedSize _input_types_cached_byte_size_;
    ::google::protobuf::internal::MapField<MultiModalConfig_ProcessingParametersEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        processing_parameters_;
    bool enable_cross_modal_attention_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_machine_5flearning_2eproto;
};
// -------------------------------------------------------------------

class ModelPerformanceLog final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.machine_learning.ModelPerformanceLog) */ {
 public:
  inline ModelPerformanceLog() : ModelPerformanceLog(nullptr) {}
  ~ModelPerformanceLog() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ModelPerformanceLog* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ModelPerformanceLog));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ModelPerformanceLog(
      ::google::protobuf::internal::ConstantInitialized);

  inline ModelPerformanceLog(const ModelPerformanceLog& from) : ModelPerformanceLog(nullptr, from) {}
  inline ModelPerformanceLog(ModelPerformanceLog&& from) noexcept
      : ModelPerformanceLog(nullptr, std::move(from)) {}
  inline ModelPerformanceLog& operator=(const ModelPerformanceLog& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModelPerformanceLog& operator=(ModelPerformanceLog&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModelPerformanceLog& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModelPerformanceLog* internal_default_instance() {
    return reinterpret_cast<const ModelPerformanceLog*>(
        &_ModelPerformanceLog_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(ModelPerformanceLog& a, ModelPerformanceLog& b) { a.Swap(&b); }
  inline void Swap(ModelPerformanceLog* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModelPerformanceLog* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModelPerformanceLog* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ModelPerformanceLog>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ModelPerformanceLog& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ModelPerformanceLog& from) { ModelPerformanceLog::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ModelPerformanceLog* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.machine_learning.ModelPerformanceLog"; }

 protected:
  explicit ModelPerformanceLog(::google::protobuf::Arena* arena);
  ModelPerformanceLog(::google::protobuf::Arena* arena, const ModelPerformanceLog& from);
  ModelPerformanceLog(::google::protobuf::Arena* arena, ModelPerformanceLog&& from) noexcept
      : ModelPerformanceLog(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMetricsFieldNumber = 2,
    kDriftAlertsFieldNumber = 5,
    kPerformanceMetadataFieldNumber = 6,
    kContextFactorsFieldNumber = 7,
    kModelIdFieldNumber = 1,
    kDataDriftScoreFieldNumber = 3,
    kModelDriftScoreFieldNumber = 4,
  };
  // repeated .seigr.machine_learning.EvaluationMetricResult metrics = 2;
  int metrics_size() const;
  private:
  int _internal_metrics_size() const;

  public:
  void clear_metrics() ;
  ::seigr::machine_learning::EvaluationMetricResult* mutable_metrics(int index);
  ::google::protobuf::RepeatedPtrField<::seigr::machine_learning::EvaluationMetricResult>* mutable_metrics();

  private:
  const ::google::protobuf::RepeatedPtrField<::seigr::machine_learning::EvaluationMetricResult>& _internal_metrics() const;
  ::google::protobuf::RepeatedPtrField<::seigr::machine_learning::EvaluationMetricResult>* _internal_mutable_metrics();
  public:
  const ::seigr::machine_learning::EvaluationMetricResult& metrics(int index) const;
  ::seigr::machine_learning::EvaluationMetricResult* add_metrics();
  const ::google::protobuf::RepeatedPtrField<::seigr::machine_learning::EvaluationMetricResult>& metrics() const;
  // repeated string drift_alerts = 5;
  int drift_alerts_size() const;
  private:
  int _internal_drift_alerts_size() const;

  public:
  void clear_drift_alerts() ;
  const std::string& drift_alerts(int index) const;
  std::string* mutable_drift_alerts(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_drift_alerts(int index, Arg_&& value, Args_... args);
  std::string* add_drift_alerts();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_drift_alerts(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& drift_alerts() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_drift_alerts();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_drift_alerts() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_drift_alerts();

  public:
  // map<string, string> performance_metadata = 6;
  int performance_metadata_size() const;
  private:
  int _internal_performance_metadata_size() const;

  public:
  void clear_performance_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& performance_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_performance_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_performance_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_performance_metadata();

  public:
  // repeated string context_factors = 7;
  int context_factors_size() const;
  private:
  int _internal_context_factors_size() const;

  public:
  void clear_context_factors() ;
  const std::string& context_factors(int index) const;
  std::string* mutable_context_factors(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_context_factors(int index, Arg_&& value, Args_... args);
  std::string* add_context_factors();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_context_factors(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& context_factors() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_context_factors();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_context_factors() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_context_factors();

  public:
  // string model_id = 1;
  void clear_model_id() ;
  const std::string& model_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_model_id(Arg_&& arg, Args_... args);
  std::string* mutable_model_id();
  PROTOBUF_NODISCARD std::string* release_model_id();
  void set_allocated_model_id(std::string* value);

  private:
  const std::string& _internal_model_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_model_id(
      const std::string& value);
  std::string* _internal_mutable_model_id();

  public:
  // float data_drift_score = 3;
  void clear_data_drift_score() ;
  float data_drift_score() const;
  void set_data_drift_score(float value);

  private:
  float _internal_data_drift_score() const;
  void _internal_set_data_drift_score(float value);

  public:
  // float model_drift_score = 4;
  void clear_model_drift_score() ;
  float model_drift_score() const;
  void set_model_drift_score(float value);

  private:
  float _internal_model_drift_score() const;
  void _internal_set_model_drift_score(float value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.machine_learning.ModelPerformanceLog)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 2,
      106, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ModelPerformanceLog& from_msg);
    ::google::protobuf::RepeatedPtrField< ::seigr::machine_learning::EvaluationMetricResult > metrics_;
    ::google::protobuf::RepeatedPtrField<std::string> drift_alerts_;
    ::google::protobuf::internal::MapField<ModelPerformanceLog_PerformanceMetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        performance_metadata_;
    ::google::protobuf::RepeatedPtrField<std::string> context_factors_;
    ::google::protobuf::internal::ArenaStringPtr model_id_;
    float data_drift_score_;
    float model_drift_score_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_machine_5flearning_2eproto;
};
// -------------------------------------------------------------------

class MLModel final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.machine_learning.MLModel) */ {
 public:
  inline MLModel() : MLModel(nullptr) {}
  ~MLModel() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MLModel* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MLModel));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MLModel(
      ::google::protobuf::internal::ConstantInitialized);

  inline MLModel(const MLModel& from) : MLModel(nullptr, from) {}
  inline MLModel(MLModel&& from) noexcept
      : MLModel(nullptr, std::move(from)) {}
  inline MLModel& operator=(const MLModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline MLModel& operator=(MLModel&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MLModel& default_instance() {
    return *internal_default_instance();
  }
  static inline const MLModel* internal_default_instance() {
    return reinterpret_cast<const MLModel*>(
        &_MLModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(MLModel& a, MLModel& b) { a.Swap(&b); }
  inline void Swap(MLModel* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MLModel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MLModel* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MLModel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MLModel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MLModel& from) { MLModel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MLModel* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.machine_learning.MLModel"; }

 protected:
  explicit MLModel(::google::protobuf::Arena* arena);
  MLModel(::google::protobuf::Arena* arena, const MLModel& from);
  MLModel(::google::protobuf::Arena* arena, MLModel&& from) noexcept
      : MLModel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHyperparametersFieldNumber = 7,
    kModelMetadataFieldNumber = 10,
    kModelIdFieldNumber = 1,
    kVersionFieldNumber = 3,
    kCreatedAtFieldNumber = 4,
    kCreatedByFieldNumber = 5,
    kModelFormatFieldNumber = 6,
    kMultiModalConfigFieldNumber = 8,
    kModelTypeFieldNumber = 2,
    kSenaryCompatibleFieldNumber = 9,
  };
  // map<string, string> hyperparameters = 7;
  int hyperparameters_size() const;
  private:
  int _internal_hyperparameters_size() const;

  public:
  void clear_hyperparameters() ;
  const ::google::protobuf::Map<std::string, std::string>& hyperparameters() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_hyperparameters();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_hyperparameters() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_hyperparameters();

  public:
  // map<string, string> model_metadata = 10;
  int model_metadata_size() const;
  private:
  int _internal_model_metadata_size() const;

  public:
  void clear_model_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& model_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_model_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_model_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_model_metadata();

  public:
  // string model_id = 1;
  void clear_model_id() ;
  const std::string& model_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_model_id(Arg_&& arg, Args_... args);
  std::string* mutable_model_id();
  PROTOBUF_NODISCARD std::string* release_model_id();
  void set_allocated_model_id(std::string* value);

  private:
  const std::string& _internal_model_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_model_id(
      const std::string& value);
  std::string* _internal_mutable_model_id();

  public:
  // string version = 3;
  void clear_version() ;
  const std::string& version() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_version(Arg_&& arg, Args_... args);
  std::string* mutable_version();
  PROTOBUF_NODISCARD std::string* release_version();
  void set_allocated_version(std::string* value);

  private:
  const std::string& _internal_version() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_version(
      const std::string& value);
  std::string* _internal_mutable_version();

  public:
  // string created_at = 4;
  void clear_created_at() ;
  const std::string& created_at() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_created_at(Arg_&& arg, Args_... args);
  std::string* mutable_created_at();
  PROTOBUF_NODISCARD std::string* release_created_at();
  void set_allocated_created_at(std::string* value);

  private:
  const std::string& _internal_created_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_created_at(
      const std::string& value);
  std::string* _internal_mutable_created_at();

  public:
  // string created_by = 5;
  void clear_created_by() ;
  const std::string& created_by() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_created_by(Arg_&& arg, Args_... args);
  std::string* mutable_created_by();
  PROTOBUF_NODISCARD std::string* release_created_by();
  void set_allocated_created_by(std::string* value);

  private:
  const std::string& _internal_created_by() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_created_by(
      const std::string& value);
  std::string* _internal_mutable_created_by();

  public:
  // string model_format = 6;
  void clear_model_format() ;
  const std::string& model_format() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_model_format(Arg_&& arg, Args_... args);
  std::string* mutable_model_format();
  PROTOBUF_NODISCARD std::string* release_model_format();
  void set_allocated_model_format(std::string* value);

  private:
  const std::string& _internal_model_format() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_model_format(
      const std::string& value);
  std::string* _internal_mutable_model_format();

  public:
  // .seigr.machine_learning.MultiModalConfig multi_modal_config = 8;
  bool has_multi_modal_config() const;
  void clear_multi_modal_config() ;
  const ::seigr::machine_learning::MultiModalConfig& multi_modal_config() const;
  PROTOBUF_NODISCARD ::seigr::machine_learning::MultiModalConfig* release_multi_modal_config();
  ::seigr::machine_learning::MultiModalConfig* mutable_multi_modal_config();
  void set_allocated_multi_modal_config(::seigr::machine_learning::MultiModalConfig* value);
  void unsafe_arena_set_allocated_multi_modal_config(::seigr::machine_learning::MultiModalConfig* value);
  ::seigr::machine_learning::MultiModalConfig* unsafe_arena_release_multi_modal_config();

  private:
  const ::seigr::machine_learning::MultiModalConfig& _internal_multi_modal_config() const;
  ::seigr::machine_learning::MultiModalConfig* _internal_mutable_multi_modal_config();

  public:
  // .seigr.machine_learning.MLModelType model_type = 2;
  void clear_model_type() ;
  ::seigr::machine_learning::MLModelType model_type() const;
  void set_model_type(::seigr::machine_learning::MLModelType value);

  private:
  ::seigr::machine_learning::MLModelType _internal_model_type() const;
  void _internal_set_model_type(::seigr::machine_learning::MLModelType value);

  public:
  // bool senary_compatible = 9;
  void clear_senary_compatible() ;
  bool senary_compatible() const;
  void set_senary_compatible(bool value);

  private:
  bool _internal_senary_compatible() const;
  void _internal_set_senary_compatible(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.machine_learning.MLModel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 10, 3,
      123, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MLModel& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<MLModel_HyperparametersEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        hyperparameters_;
    ::google::protobuf::internal::MapField<MLModel_ModelMetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        model_metadata_;
    ::google::protobuf::internal::ArenaStringPtr model_id_;
    ::google::protobuf::internal::ArenaStringPtr version_;
    ::google::protobuf::internal::ArenaStringPtr created_at_;
    ::google::protobuf::internal::ArenaStringPtr created_by_;
    ::google::protobuf::internal::ArenaStringPtr model_format_;
    ::seigr::machine_learning::MultiModalConfig* multi_modal_config_;
    int model_type_;
    bool senary_compatible_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_machine_5flearning_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// MultiModalConfig

// repeated .seigr.machine_learning.DataInputType input_types = 1;
inline int MultiModalConfig::_internal_input_types_size() const {
  return _internal_input_types().size();
}
inline int MultiModalConfig::input_types_size() const {
  return _internal_input_types_size();
}
inline void MultiModalConfig::clear_input_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.input_types_.Clear();
}
inline ::seigr::machine_learning::DataInputType MultiModalConfig::input_types(int index) const {
  // @@protoc_insertion_point(field_get:seigr.machine_learning.MultiModalConfig.input_types)
  return static_cast<::seigr::machine_learning::DataInputType>(_internal_input_types().Get(index));
}
inline void MultiModalConfig::set_input_types(int index, ::seigr::machine_learning::DataInputType value) {
  _internal_mutable_input_types()->Set(index, value);
  // @@protoc_insertion_point(field_set:seigr.machine_learning.MultiModalConfig.input_types)
}
inline void MultiModalConfig::add_input_types(::seigr::machine_learning::DataInputType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_input_types()->Add(value);
  // @@protoc_insertion_point(field_add:seigr.machine_learning.MultiModalConfig.input_types)
}
inline const ::google::protobuf::RepeatedField<int>& MultiModalConfig::input_types() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.machine_learning.MultiModalConfig.input_types)
  return _internal_input_types();
}
inline ::google::protobuf::RepeatedField<int>* MultiModalConfig::mutable_input_types()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.machine_learning.MultiModalConfig.input_types)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_input_types();
}
inline const ::google::protobuf::RepeatedField<int>& MultiModalConfig::_internal_input_types()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.input_types_;
}
inline ::google::protobuf::RepeatedField<int>* MultiModalConfig::_internal_mutable_input_types() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.input_types_;
}

// map<string, string> processing_parameters = 2;
inline int MultiModalConfig::_internal_processing_parameters_size() const {
  return _internal_processing_parameters().size();
}
inline int MultiModalConfig::processing_parameters_size() const {
  return _internal_processing_parameters_size();
}
inline void MultiModalConfig::clear_processing_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.processing_parameters_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& MultiModalConfig::_internal_processing_parameters() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.processing_parameters_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& MultiModalConfig::processing_parameters() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.machine_learning.MultiModalConfig.processing_parameters)
  return _internal_processing_parameters();
}
inline ::google::protobuf::Map<std::string, std::string>* MultiModalConfig::_internal_mutable_processing_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.processing_parameters_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* MultiModalConfig::mutable_processing_parameters() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.machine_learning.MultiModalConfig.processing_parameters)
  return _internal_mutable_processing_parameters();
}

// bool enable_cross_modal_attention = 3;
inline void MultiModalConfig::clear_enable_cross_modal_attention() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_cross_modal_attention_ = false;
}
inline bool MultiModalConfig::enable_cross_modal_attention() const {
  // @@protoc_insertion_point(field_get:seigr.machine_learning.MultiModalConfig.enable_cross_modal_attention)
  return _internal_enable_cross_modal_attention();
}
inline void MultiModalConfig::set_enable_cross_modal_attention(bool value) {
  _internal_set_enable_cross_modal_attention(value);
  // @@protoc_insertion_point(field_set:seigr.machine_learning.MultiModalConfig.enable_cross_modal_attention)
}
inline bool MultiModalConfig::_internal_enable_cross_modal_attention() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enable_cross_modal_attention_;
}
inline void MultiModalConfig::_internal_set_enable_cross_modal_attention(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_cross_modal_attention_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// MLModel

// string model_id = 1;
inline void MLModel::clear_model_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.model_id_.ClearToEmpty();
}
inline const std::string& MLModel::model_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.machine_learning.MLModel.model_id)
  return _internal_model_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MLModel::set_model_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.model_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.machine_learning.MLModel.model_id)
}
inline std::string* MLModel::mutable_model_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_model_id();
  // @@protoc_insertion_point(field_mutable:seigr.machine_learning.MLModel.model_id)
  return _s;
}
inline const std::string& MLModel::_internal_model_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.model_id_.Get();
}
inline void MLModel::_internal_set_model_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.model_id_.Set(value, GetArena());
}
inline std::string* MLModel::_internal_mutable_model_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.model_id_.Mutable( GetArena());
}
inline std::string* MLModel::release_model_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.machine_learning.MLModel.model_id)
  return _impl_.model_id_.Release();
}
inline void MLModel::set_allocated_model_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.model_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.model_id_.IsDefault()) {
    _impl_.model_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.machine_learning.MLModel.model_id)
}

// .seigr.machine_learning.MLModelType model_type = 2;
inline void MLModel::clear_model_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.model_type_ = 0;
}
inline ::seigr::machine_learning::MLModelType MLModel::model_type() const {
  // @@protoc_insertion_point(field_get:seigr.machine_learning.MLModel.model_type)
  return _internal_model_type();
}
inline void MLModel::set_model_type(::seigr::machine_learning::MLModelType value) {
  _internal_set_model_type(value);
  // @@protoc_insertion_point(field_set:seigr.machine_learning.MLModel.model_type)
}
inline ::seigr::machine_learning::MLModelType MLModel::_internal_model_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::machine_learning::MLModelType>(_impl_.model_type_);
}
inline void MLModel::_internal_set_model_type(::seigr::machine_learning::MLModelType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.model_type_ = value;
}

// string version = 3;
inline void MLModel::clear_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.ClearToEmpty();
}
inline const std::string& MLModel::version() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.machine_learning.MLModel.version)
  return _internal_version();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MLModel::set_version(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.machine_learning.MLModel.version)
}
inline std::string* MLModel::mutable_version() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_version();
  // @@protoc_insertion_point(field_mutable:seigr.machine_learning.MLModel.version)
  return _s;
}
inline const std::string& MLModel::_internal_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.version_.Get();
}
inline void MLModel::_internal_set_version(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.Set(value, GetArena());
}
inline std::string* MLModel::_internal_mutable_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.version_.Mutable( GetArena());
}
inline std::string* MLModel::release_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.machine_learning.MLModel.version)
  return _impl_.version_.Release();
}
inline void MLModel::set_allocated_version(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.version_.IsDefault()) {
    _impl_.version_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.machine_learning.MLModel.version)
}

// string created_at = 4;
inline void MLModel::clear_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.ClearToEmpty();
}
inline const std::string& MLModel::created_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.machine_learning.MLModel.created_at)
  return _internal_created_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MLModel::set_created_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.machine_learning.MLModel.created_at)
}
inline std::string* MLModel::mutable_created_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_created_at();
  // @@protoc_insertion_point(field_mutable:seigr.machine_learning.MLModel.created_at)
  return _s;
}
inline const std::string& MLModel::_internal_created_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_at_.Get();
}
inline void MLModel::_internal_set_created_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.Set(value, GetArena());
}
inline std::string* MLModel::_internal_mutable_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.created_at_.Mutable( GetArena());
}
inline std::string* MLModel::release_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.machine_learning.MLModel.created_at)
  return _impl_.created_at_.Release();
}
inline void MLModel::set_allocated_created_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.created_at_.IsDefault()) {
    _impl_.created_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.machine_learning.MLModel.created_at)
}

// string created_by = 5;
inline void MLModel::clear_created_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_by_.ClearToEmpty();
}
inline const std::string& MLModel::created_by() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.machine_learning.MLModel.created_by)
  return _internal_created_by();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MLModel::set_created_by(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_by_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.machine_learning.MLModel.created_by)
}
inline std::string* MLModel::mutable_created_by() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_created_by();
  // @@protoc_insertion_point(field_mutable:seigr.machine_learning.MLModel.created_by)
  return _s;
}
inline const std::string& MLModel::_internal_created_by() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_by_.Get();
}
inline void MLModel::_internal_set_created_by(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_by_.Set(value, GetArena());
}
inline std::string* MLModel::_internal_mutable_created_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.created_by_.Mutable( GetArena());
}
inline std::string* MLModel::release_created_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.machine_learning.MLModel.created_by)
  return _impl_.created_by_.Release();
}
inline void MLModel::set_allocated_created_by(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_by_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.created_by_.IsDefault()) {
    _impl_.created_by_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.machine_learning.MLModel.created_by)
}

// string model_format = 6;
inline void MLModel::clear_model_format() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.model_format_.ClearToEmpty();
}
inline const std::string& MLModel::model_format() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.machine_learning.MLModel.model_format)
  return _internal_model_format();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MLModel::set_model_format(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.model_format_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.machine_learning.MLModel.model_format)
}
inline std::string* MLModel::mutable_model_format() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_model_format();
  // @@protoc_insertion_point(field_mutable:seigr.machine_learning.MLModel.model_format)
  return _s;
}
inline const std::string& MLModel::_internal_model_format() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.model_format_.Get();
}
inline void MLModel::_internal_set_model_format(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.model_format_.Set(value, GetArena());
}
inline std::string* MLModel::_internal_mutable_model_format() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.model_format_.Mutable( GetArena());
}
inline std::string* MLModel::release_model_format() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.machine_learning.MLModel.model_format)
  return _impl_.model_format_.Release();
}
inline void MLModel::set_allocated_model_format(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.model_format_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.model_format_.IsDefault()) {
    _impl_.model_format_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.machine_learning.MLModel.model_format)
}

// map<string, string> hyperparameters = 7;
inline int MLModel::_internal_hyperparameters_size() const {
  return _internal_hyperparameters().size();
}
inline int MLModel::hyperparameters_size() const {
  return _internal_hyperparameters_size();
}
inline void MLModel::clear_hyperparameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hyperparameters_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& MLModel::_internal_hyperparameters() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.hyperparameters_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& MLModel::hyperparameters() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.machine_learning.MLModel.hyperparameters)
  return _internal_hyperparameters();
}
inline ::google::protobuf::Map<std::string, std::string>* MLModel::_internal_mutable_hyperparameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.hyperparameters_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* MLModel::mutable_hyperparameters() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.machine_learning.MLModel.hyperparameters)
  return _internal_mutable_hyperparameters();
}

// .seigr.machine_learning.MultiModalConfig multi_modal_config = 8;
inline bool MLModel::has_multi_modal_config() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.multi_modal_config_ != nullptr);
  return value;
}
inline void MLModel::clear_multi_modal_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.multi_modal_config_ != nullptr) _impl_.multi_modal_config_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::seigr::machine_learning::MultiModalConfig& MLModel::_internal_multi_modal_config() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seigr::machine_learning::MultiModalConfig* p = _impl_.multi_modal_config_;
  return p != nullptr ? *p : reinterpret_cast<const ::seigr::machine_learning::MultiModalConfig&>(::seigr::machine_learning::_MultiModalConfig_default_instance_);
}
inline const ::seigr::machine_learning::MultiModalConfig& MLModel::multi_modal_config() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.machine_learning.MLModel.multi_modal_config)
  return _internal_multi_modal_config();
}
inline void MLModel::unsafe_arena_set_allocated_multi_modal_config(::seigr::machine_learning::MultiModalConfig* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.multi_modal_config_);
  }
  _impl_.multi_modal_config_ = reinterpret_cast<::seigr::machine_learning::MultiModalConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seigr.machine_learning.MLModel.multi_modal_config)
}
inline ::seigr::machine_learning::MultiModalConfig* MLModel::release_multi_modal_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seigr::machine_learning::MultiModalConfig* released = _impl_.multi_modal_config_;
  _impl_.multi_modal_config_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seigr::machine_learning::MultiModalConfig* MLModel::unsafe_arena_release_multi_modal_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.machine_learning.MLModel.multi_modal_config)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seigr::machine_learning::MultiModalConfig* temp = _impl_.multi_modal_config_;
  _impl_.multi_modal_config_ = nullptr;
  return temp;
}
inline ::seigr::machine_learning::MultiModalConfig* MLModel::_internal_mutable_multi_modal_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.multi_modal_config_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seigr::machine_learning::MultiModalConfig>(GetArena());
    _impl_.multi_modal_config_ = reinterpret_cast<::seigr::machine_learning::MultiModalConfig*>(p);
  }
  return _impl_.multi_modal_config_;
}
inline ::seigr::machine_learning::MultiModalConfig* MLModel::mutable_multi_modal_config() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::seigr::machine_learning::MultiModalConfig* _msg = _internal_mutable_multi_modal_config();
  // @@protoc_insertion_point(field_mutable:seigr.machine_learning.MLModel.multi_modal_config)
  return _msg;
}
inline void MLModel::set_allocated_multi_modal_config(::seigr::machine_learning::MultiModalConfig* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.multi_modal_config_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.multi_modal_config_ = reinterpret_cast<::seigr::machine_learning::MultiModalConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:seigr.machine_learning.MLModel.multi_modal_config)
}

// bool senary_compatible = 9;
inline void MLModel::clear_senary_compatible() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.senary_compatible_ = false;
}
inline bool MLModel::senary_compatible() const {
  // @@protoc_insertion_point(field_get:seigr.machine_learning.MLModel.senary_compatible)
  return _internal_senary_compatible();
}
inline void MLModel::set_senary_compatible(bool value) {
  _internal_set_senary_compatible(value);
  // @@protoc_insertion_point(field_set:seigr.machine_learning.MLModel.senary_compatible)
}
inline bool MLModel::_internal_senary_compatible() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.senary_compatible_;
}
inline void MLModel::_internal_set_senary_compatible(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.senary_compatible_ = value;
}

// map<string, string> model_metadata = 10;
inline int MLModel::_internal_model_metadata_size() const {
  return _internal_model_metadata().size();
}
inline int MLModel::model_metadata_size() const {
  return _internal_model_metadata_size();
}
inline void MLModel::clear_model_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.model_metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& MLModel::_internal_model_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.model_metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& MLModel::model_metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.machine_learning.MLModel.model_metadata)
  return _internal_model_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* MLModel::_internal_mutable_model_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.model_metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* MLModel::mutable_model_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.machine_learning.MLModel.model_metadata)
  return _internal_mutable_model_metadata();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// TrainingConfig

// string model_id = 1;
inline void TrainingConfig::clear_model_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.model_id_.ClearToEmpty();
}
inline const std::string& TrainingConfig::model_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.machine_learning.TrainingConfig.model_id)
  return _internal_model_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TrainingConfig::set_model_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.model_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.machine_learning.TrainingConfig.model_id)
}
inline std::string* TrainingConfig::mutable_model_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_model_id();
  // @@protoc_insertion_point(field_mutable:seigr.machine_learning.TrainingConfig.model_id)
  return _s;
}
inline const std::string& TrainingConfig::_internal_model_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.model_id_.Get();
}
inline void TrainingConfig::_internal_set_model_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.model_id_.Set(value, GetArena());
}
inline std::string* TrainingConfig::_internal_mutable_model_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.model_id_.Mutable( GetArena());
}
inline std::string* TrainingConfig::release_model_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.machine_learning.TrainingConfig.model_id)
  return _impl_.model_id_.Release();
}
inline void TrainingConfig::set_allocated_model_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.model_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.model_id_.IsDefault()) {
    _impl_.model_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.machine_learning.TrainingConfig.model_id)
}

// int32 epochs = 2;
inline void TrainingConfig::clear_epochs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.epochs_ = 0;
}
inline ::int32_t TrainingConfig::epochs() const {
  // @@protoc_insertion_point(field_get:seigr.machine_learning.TrainingConfig.epochs)
  return _internal_epochs();
}
inline void TrainingConfig::set_epochs(::int32_t value) {
  _internal_set_epochs(value);
  // @@protoc_insertion_point(field_set:seigr.machine_learning.TrainingConfig.epochs)
}
inline ::int32_t TrainingConfig::_internal_epochs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.epochs_;
}
inline void TrainingConfig::_internal_set_epochs(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.epochs_ = value;
}

// int32 batch_size = 3;
inline void TrainingConfig::clear_batch_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.batch_size_ = 0;
}
inline ::int32_t TrainingConfig::batch_size() const {
  // @@protoc_insertion_point(field_get:seigr.machine_learning.TrainingConfig.batch_size)
  return _internal_batch_size();
}
inline void TrainingConfig::set_batch_size(::int32_t value) {
  _internal_set_batch_size(value);
  // @@protoc_insertion_point(field_set:seigr.machine_learning.TrainingConfig.batch_size)
}
inline ::int32_t TrainingConfig::_internal_batch_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.batch_size_;
}
inline void TrainingConfig::_internal_set_batch_size(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.batch_size_ = value;
}

// double learning_rate = 4;
inline void TrainingConfig::clear_learning_rate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.learning_rate_ = 0;
}
inline double TrainingConfig::learning_rate() const {
  // @@protoc_insertion_point(field_get:seigr.machine_learning.TrainingConfig.learning_rate)
  return _internal_learning_rate();
}
inline void TrainingConfig::set_learning_rate(double value) {
  _internal_set_learning_rate(value);
  // @@protoc_insertion_point(field_set:seigr.machine_learning.TrainingConfig.learning_rate)
}
inline double TrainingConfig::_internal_learning_rate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.learning_rate_;
}
inline void TrainingConfig::_internal_set_learning_rate(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.learning_rate_ = value;
}

// bool use_gpu = 5;
inline void TrainingConfig::clear_use_gpu() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_gpu_ = false;
}
inline bool TrainingConfig::use_gpu() const {
  // @@protoc_insertion_point(field_get:seigr.machine_learning.TrainingConfig.use_gpu)
  return _internal_use_gpu();
}
inline void TrainingConfig::set_use_gpu(bool value) {
  _internal_set_use_gpu(value);
  // @@protoc_insertion_point(field_set:seigr.machine_learning.TrainingConfig.use_gpu)
}
inline bool TrainingConfig::_internal_use_gpu() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.use_gpu_;
}
inline void TrainingConfig::_internal_set_use_gpu(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_gpu_ = value;
}

// string optimizer = 6;
inline void TrainingConfig::clear_optimizer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optimizer_.ClearToEmpty();
}
inline const std::string& TrainingConfig::optimizer() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.machine_learning.TrainingConfig.optimizer)
  return _internal_optimizer();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TrainingConfig::set_optimizer(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optimizer_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.machine_learning.TrainingConfig.optimizer)
}
inline std::string* TrainingConfig::mutable_optimizer() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_optimizer();
  // @@protoc_insertion_point(field_mutable:seigr.machine_learning.TrainingConfig.optimizer)
  return _s;
}
inline const std::string& TrainingConfig::_internal_optimizer() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optimizer_.Get();
}
inline void TrainingConfig::_internal_set_optimizer(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optimizer_.Set(value, GetArena());
}
inline std::string* TrainingConfig::_internal_mutable_optimizer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.optimizer_.Mutable( GetArena());
}
inline std::string* TrainingConfig::release_optimizer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.machine_learning.TrainingConfig.optimizer)
  return _impl_.optimizer_.Release();
}
inline void TrainingConfig::set_allocated_optimizer(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optimizer_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.optimizer_.IsDefault()) {
    _impl_.optimizer_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.machine_learning.TrainingConfig.optimizer)
}

// map<string, string> training_metadata = 7;
inline int TrainingConfig::_internal_training_metadata_size() const {
  return _internal_training_metadata().size();
}
inline int TrainingConfig::training_metadata_size() const {
  return _internal_training_metadata_size();
}
inline void TrainingConfig::clear_training_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.training_metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& TrainingConfig::_internal_training_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.training_metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& TrainingConfig::training_metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.machine_learning.TrainingConfig.training_metadata)
  return _internal_training_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* TrainingConfig::_internal_mutable_training_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.training_metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* TrainingConfig::mutable_training_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.machine_learning.TrainingConfig.training_metadata)
  return _internal_mutable_training_metadata();
}

// string training_dataset_id = 8;
inline void TrainingConfig::clear_training_dataset_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.training_dataset_id_.ClearToEmpty();
}
inline const std::string& TrainingConfig::training_dataset_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.machine_learning.TrainingConfig.training_dataset_id)
  return _internal_training_dataset_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TrainingConfig::set_training_dataset_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.training_dataset_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.machine_learning.TrainingConfig.training_dataset_id)
}
inline std::string* TrainingConfig::mutable_training_dataset_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_training_dataset_id();
  // @@protoc_insertion_point(field_mutable:seigr.machine_learning.TrainingConfig.training_dataset_id)
  return _s;
}
inline const std::string& TrainingConfig::_internal_training_dataset_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.training_dataset_id_.Get();
}
inline void TrainingConfig::_internal_set_training_dataset_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.training_dataset_id_.Set(value, GetArena());
}
inline std::string* TrainingConfig::_internal_mutable_training_dataset_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.training_dataset_id_.Mutable( GetArena());
}
inline std::string* TrainingConfig::release_training_dataset_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.machine_learning.TrainingConfig.training_dataset_id)
  return _impl_.training_dataset_id_.Release();
}
inline void TrainingConfig::set_allocated_training_dataset_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.training_dataset_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.training_dataset_id_.IsDefault()) {
    _impl_.training_dataset_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.machine_learning.TrainingConfig.training_dataset_id)
}

// bool enable_transfer_learning = 9;
inline void TrainingConfig::clear_enable_transfer_learning() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_transfer_learning_ = false;
}
inline bool TrainingConfig::enable_transfer_learning() const {
  // @@protoc_insertion_point(field_get:seigr.machine_learning.TrainingConfig.enable_transfer_learning)
  return _internal_enable_transfer_learning();
}
inline void TrainingConfig::set_enable_transfer_learning(bool value) {
  _internal_set_enable_transfer_learning(value);
  // @@protoc_insertion_point(field_set:seigr.machine_learning.TrainingConfig.enable_transfer_learning)
}
inline bool TrainingConfig::_internal_enable_transfer_learning() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enable_transfer_learning_;
}
inline void TrainingConfig::_internal_set_enable_transfer_learning(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_transfer_learning_ = value;
}

// bool adaptive_learning = 10;
inline void TrainingConfig::clear_adaptive_learning() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.adaptive_learning_ = false;
}
inline bool TrainingConfig::adaptive_learning() const {
  // @@protoc_insertion_point(field_get:seigr.machine_learning.TrainingConfig.adaptive_learning)
  return _internal_adaptive_learning();
}
inline void TrainingConfig::set_adaptive_learning(bool value) {
  _internal_set_adaptive_learning(value);
  // @@protoc_insertion_point(field_set:seigr.machine_learning.TrainingConfig.adaptive_learning)
}
inline bool TrainingConfig::_internal_adaptive_learning() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.adaptive_learning_;
}
inline void TrainingConfig::_internal_set_adaptive_learning(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.adaptive_learning_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// TrainingResult

// string model_id = 1;
inline void TrainingResult::clear_model_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.model_id_.ClearToEmpty();
}
inline const std::string& TrainingResult::model_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.machine_learning.TrainingResult.model_id)
  return _internal_model_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TrainingResult::set_model_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.model_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.machine_learning.TrainingResult.model_id)
}
inline std::string* TrainingResult::mutable_model_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_model_id();
  // @@protoc_insertion_point(field_mutable:seigr.machine_learning.TrainingResult.model_id)
  return _s;
}
inline const std::string& TrainingResult::_internal_model_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.model_id_.Get();
}
inline void TrainingResult::_internal_set_model_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.model_id_.Set(value, GetArena());
}
inline std::string* TrainingResult::_internal_mutable_model_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.model_id_.Mutable( GetArena());
}
inline std::string* TrainingResult::release_model_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.machine_learning.TrainingResult.model_id)
  return _impl_.model_id_.Release();
}
inline void TrainingResult::set_allocated_model_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.model_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.model_id_.IsDefault()) {
    _impl_.model_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.machine_learning.TrainingResult.model_id)
}

// .seigr.machine_learning.MLTrainingStatus status = 2;
inline void TrainingResult::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0;
}
inline ::seigr::machine_learning::MLTrainingStatus TrainingResult::status() const {
  // @@protoc_insertion_point(field_get:seigr.machine_learning.TrainingResult.status)
  return _internal_status();
}
inline void TrainingResult::set_status(::seigr::machine_learning::MLTrainingStatus value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:seigr.machine_learning.TrainingResult.status)
}
inline ::seigr::machine_learning::MLTrainingStatus TrainingResult::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::machine_learning::MLTrainingStatus>(_impl_.status_);
}
inline void TrainingResult::_internal_set_status(::seigr::machine_learning::MLTrainingStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// repeated .seigr.machine_learning.EvaluationMetricResult metrics = 3;
inline int TrainingResult::_internal_metrics_size() const {
  return _internal_metrics().size();
}
inline int TrainingResult::metrics_size() const {
  return _internal_metrics_size();
}
inline void TrainingResult::clear_metrics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metrics_.Clear();
}
inline ::seigr::machine_learning::EvaluationMetricResult* TrainingResult::mutable_metrics(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.machine_learning.TrainingResult.metrics)
  return _internal_mutable_metrics()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seigr::machine_learning::EvaluationMetricResult>* TrainingResult::mutable_metrics()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.machine_learning.TrainingResult.metrics)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_metrics();
}
inline const ::seigr::machine_learning::EvaluationMetricResult& TrainingResult::metrics(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.machine_learning.TrainingResult.metrics)
  return _internal_metrics().Get(index);
}
inline ::seigr::machine_learning::EvaluationMetricResult* TrainingResult::add_metrics() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seigr::machine_learning::EvaluationMetricResult* _add = _internal_mutable_metrics()->Add();
  // @@protoc_insertion_point(field_add:seigr.machine_learning.TrainingResult.metrics)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seigr::machine_learning::EvaluationMetricResult>& TrainingResult::metrics() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.machine_learning.TrainingResult.metrics)
  return _internal_metrics();
}
inline const ::google::protobuf::RepeatedPtrField<::seigr::machine_learning::EvaluationMetricResult>&
TrainingResult::_internal_metrics() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metrics_;
}
inline ::google::protobuf::RepeatedPtrField<::seigr::machine_learning::EvaluationMetricResult>*
TrainingResult::_internal_mutable_metrics() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.metrics_;
}

// string completed_at = 4;
inline void TrainingResult::clear_completed_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.completed_at_.ClearToEmpty();
}
inline const std::string& TrainingResult::completed_at() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.machine_learning.TrainingResult.completed_at)
  return _internal_completed_at();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TrainingResult::set_completed_at(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.completed_at_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.machine_learning.TrainingResult.completed_at)
}
inline std::string* TrainingResult::mutable_completed_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_completed_at();
  // @@protoc_insertion_point(field_mutable:seigr.machine_learning.TrainingResult.completed_at)
  return _s;
}
inline const std::string& TrainingResult::_internal_completed_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.completed_at_.Get();
}
inline void TrainingResult::_internal_set_completed_at(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.completed_at_.Set(value, GetArena());
}
inline std::string* TrainingResult::_internal_mutable_completed_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.completed_at_.Mutable( GetArena());
}
inline std::string* TrainingResult::release_completed_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.machine_learning.TrainingResult.completed_at)
  return _impl_.completed_at_.Release();
}
inline void TrainingResult::set_allocated_completed_at(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.completed_at_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.completed_at_.IsDefault()) {
    _impl_.completed_at_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.machine_learning.TrainingResult.completed_at)
}

// map<string, string> result_metadata = 5;
inline int TrainingResult::_internal_result_metadata_size() const {
  return _internal_result_metadata().size();
}
inline int TrainingResult::result_metadata_size() const {
  return _internal_result_metadata_size();
}
inline void TrainingResult::clear_result_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& TrainingResult::_internal_result_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& TrainingResult::result_metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.machine_learning.TrainingResult.result_metadata)
  return _internal_result_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* TrainingResult::_internal_mutable_result_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.result_metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* TrainingResult::mutable_result_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.machine_learning.TrainingResult.result_metadata)
  return _internal_mutable_result_metadata();
}

// float training_duration_seconds = 6;
inline void TrainingResult::clear_training_duration_seconds() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.training_duration_seconds_ = 0;
}
inline float TrainingResult::training_duration_seconds() const {
  // @@protoc_insertion_point(field_get:seigr.machine_learning.TrainingResult.training_duration_seconds)
  return _internal_training_duration_seconds();
}
inline void TrainingResult::set_training_duration_seconds(float value) {
  _internal_set_training_duration_seconds(value);
  // @@protoc_insertion_point(field_set:seigr.machine_learning.TrainingResult.training_duration_seconds)
}
inline float TrainingResult::_internal_training_duration_seconds() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.training_duration_seconds_;
}
inline void TrainingResult::_internal_set_training_duration_seconds(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.training_duration_seconds_ = value;
}

// -------------------------------------------------------------------

// EvaluationMetricResult

// .seigr.machine_learning.MLEvaluationMetric metric_type = 1;
inline void EvaluationMetricResult::clear_metric_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metric_type_ = 0;
}
inline ::seigr::machine_learning::MLEvaluationMetric EvaluationMetricResult::metric_type() const {
  // @@protoc_insertion_point(field_get:seigr.machine_learning.EvaluationMetricResult.metric_type)
  return _internal_metric_type();
}
inline void EvaluationMetricResult::set_metric_type(::seigr::machine_learning::MLEvaluationMetric value) {
  _internal_set_metric_type(value);
  // @@protoc_insertion_point(field_set:seigr.machine_learning.EvaluationMetricResult.metric_type)
}
inline ::seigr::machine_learning::MLEvaluationMetric EvaluationMetricResult::_internal_metric_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::machine_learning::MLEvaluationMetric>(_impl_.metric_type_);
}
inline void EvaluationMetricResult::_internal_set_metric_type(::seigr::machine_learning::MLEvaluationMetric value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metric_type_ = value;
}

// double metric_value = 2;
inline void EvaluationMetricResult::clear_metric_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metric_value_ = 0;
}
inline double EvaluationMetricResult::metric_value() const {
  // @@protoc_insertion_point(field_get:seigr.machine_learning.EvaluationMetricResult.metric_value)
  return _internal_metric_value();
}
inline void EvaluationMetricResult::set_metric_value(double value) {
  _internal_set_metric_value(value);
  // @@protoc_insertion_point(field_set:seigr.machine_learning.EvaluationMetricResult.metric_value)
}
inline double EvaluationMetricResult::_internal_metric_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metric_value_;
}
inline void EvaluationMetricResult::_internal_set_metric_value(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metric_value_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// PredictionRequest

// string model_id = 1;
inline void PredictionRequest::clear_model_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.model_id_.ClearToEmpty();
}
inline const std::string& PredictionRequest::model_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.machine_learning.PredictionRequest.model_id)
  return _internal_model_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PredictionRequest::set_model_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.model_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.machine_learning.PredictionRequest.model_id)
}
inline std::string* PredictionRequest::mutable_model_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_model_id();
  // @@protoc_insertion_point(field_mutable:seigr.machine_learning.PredictionRequest.model_id)
  return _s;
}
inline const std::string& PredictionRequest::_internal_model_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.model_id_.Get();
}
inline void PredictionRequest::_internal_set_model_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.model_id_.Set(value, GetArena());
}
inline std::string* PredictionRequest::_internal_mutable_model_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.model_id_.Mutable( GetArena());
}
inline std::string* PredictionRequest::release_model_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.machine_learning.PredictionRequest.model_id)
  return _impl_.model_id_.Release();
}
inline void PredictionRequest::set_allocated_model_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.model_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.model_id_.IsDefault()) {
    _impl_.model_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.machine_learning.PredictionRequest.model_id)
}

// repeated bytes input_data = 2;
inline int PredictionRequest::_internal_input_data_size() const {
  return _internal_input_data().size();
}
inline int PredictionRequest::input_data_size() const {
  return _internal_input_data_size();
}
inline void PredictionRequest::clear_input_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.input_data_.Clear();
}
inline std::string* PredictionRequest::add_input_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_input_data()->Add();
  // @@protoc_insertion_point(field_add_mutable:seigr.machine_learning.PredictionRequest.input_data)
  return _s;
}
inline const std::string& PredictionRequest::input_data(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.machine_learning.PredictionRequest.input_data)
  return _internal_input_data().Get(index);
}
inline std::string* PredictionRequest::mutable_input_data(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.machine_learning.PredictionRequest.input_data)
  return _internal_mutable_input_data()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void PredictionRequest::set_input_data(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_input_data()->Mutable(index),
      std::forward<Arg_>(value), args... , ::google::protobuf::internal::BytesTag{});
  // @@protoc_insertion_point(field_set:seigr.machine_learning.PredictionRequest.input_data)
}
template <typename Arg_, typename... Args_>
inline void PredictionRequest::add_input_data(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_input_data(),
                               std::forward<Arg_>(value),
                               args... , ::google::protobuf::internal::BytesTag{});
  // @@protoc_insertion_point(field_add:seigr.machine_learning.PredictionRequest.input_data)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
PredictionRequest::input_data() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.machine_learning.PredictionRequest.input_data)
  return _internal_input_data();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
PredictionRequest::mutable_input_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.machine_learning.PredictionRequest.input_data)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_input_data();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
PredictionRequest::_internal_input_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.input_data_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
PredictionRequest::_internal_mutable_input_data() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.input_data_;
}

// bool async_request = 3;
inline void PredictionRequest::clear_async_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.async_request_ = false;
}
inline bool PredictionRequest::async_request() const {
  // @@protoc_insertion_point(field_get:seigr.machine_learning.PredictionRequest.async_request)
  return _internal_async_request();
}
inline void PredictionRequest::set_async_request(bool value) {
  _internal_set_async_request(value);
  // @@protoc_insertion_point(field_set:seigr.machine_learning.PredictionRequest.async_request)
}
inline bool PredictionRequest::_internal_async_request() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.async_request_;
}
inline void PredictionRequest::_internal_set_async_request(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.async_request_ = value;
}

// map<string, string> context_data = 4;
inline int PredictionRequest::_internal_context_data_size() const {
  return _internal_context_data().size();
}
inline int PredictionRequest::context_data_size() const {
  return _internal_context_data_size();
}
inline void PredictionRequest::clear_context_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.context_data_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& PredictionRequest::_internal_context_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.context_data_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& PredictionRequest::context_data() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.machine_learning.PredictionRequest.context_data)
  return _internal_context_data();
}
inline ::google::protobuf::Map<std::string, std::string>* PredictionRequest::_internal_mutable_context_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.context_data_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* PredictionRequest::mutable_context_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.machine_learning.PredictionRequest.context_data)
  return _internal_mutable_context_data();
}

// -------------------------------------------------------------------

// PredictionResponse

// string model_id = 1;
inline void PredictionResponse::clear_model_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.model_id_.ClearToEmpty();
}
inline const std::string& PredictionResponse::model_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.machine_learning.PredictionResponse.model_id)
  return _internal_model_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PredictionResponse::set_model_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.model_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.machine_learning.PredictionResponse.model_id)
}
inline std::string* PredictionResponse::mutable_model_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_model_id();
  // @@protoc_insertion_point(field_mutable:seigr.machine_learning.PredictionResponse.model_id)
  return _s;
}
inline const std::string& PredictionResponse::_internal_model_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.model_id_.Get();
}
inline void PredictionResponse::_internal_set_model_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.model_id_.Set(value, GetArena());
}
inline std::string* PredictionResponse::_internal_mutable_model_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.model_id_.Mutable( GetArena());
}
inline std::string* PredictionResponse::release_model_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.machine_learning.PredictionResponse.model_id)
  return _impl_.model_id_.Release();
}
inline void PredictionResponse::set_allocated_model_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.model_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.model_id_.IsDefault()) {
    _impl_.model_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.machine_learning.PredictionResponse.model_id)
}

// repeated string predicted_labels = 2;
inline int PredictionResponse::_internal_predicted_labels_size() const {
  return _internal_predicted_labels().size();
}
inline int PredictionResponse::predicted_labels_size() const {
  return _internal_predicted_labels_size();
}
inline void PredictionResponse::clear_predicted_labels() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.predicted_labels_.Clear();
}
inline std::string* PredictionResponse::add_predicted_labels() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_predicted_labels()->Add();
  // @@protoc_insertion_point(field_add_mutable:seigr.machine_learning.PredictionResponse.predicted_labels)
  return _s;
}
inline const std::string& PredictionResponse::predicted_labels(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.machine_learning.PredictionResponse.predicted_labels)
  return _internal_predicted_labels().Get(index);
}
inline std::string* PredictionResponse::mutable_predicted_labels(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.machine_learning.PredictionResponse.predicted_labels)
  return _internal_mutable_predicted_labels()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void PredictionResponse::set_predicted_labels(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_predicted_labels()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:seigr.machine_learning.PredictionResponse.predicted_labels)
}
template <typename Arg_, typename... Args_>
inline void PredictionResponse::add_predicted_labels(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_predicted_labels(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seigr.machine_learning.PredictionResponse.predicted_labels)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
PredictionResponse::predicted_labels() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.machine_learning.PredictionResponse.predicted_labels)
  return _internal_predicted_labels();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
PredictionResponse::mutable_predicted_labels() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.machine_learning.PredictionResponse.predicted_labels)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_predicted_labels();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
PredictionResponse::_internal_predicted_labels() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.predicted_labels_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
PredictionResponse::_internal_mutable_predicted_labels() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.predicted_labels_;
}

// repeated double predicted_values = 3;
inline int PredictionResponse::_internal_predicted_values_size() const {
  return _internal_predicted_values().size();
}
inline int PredictionResponse::predicted_values_size() const {
  return _internal_predicted_values_size();
}
inline void PredictionResponse::clear_predicted_values() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.predicted_values_.Clear();
}
inline double PredictionResponse::predicted_values(int index) const {
  // @@protoc_insertion_point(field_get:seigr.machine_learning.PredictionResponse.predicted_values)
  return _internal_predicted_values().Get(index);
}
inline void PredictionResponse::set_predicted_values(int index, double value) {
  _internal_mutable_predicted_values()->Set(index, value);
  // @@protoc_insertion_point(field_set:seigr.machine_learning.PredictionResponse.predicted_values)
}
inline void PredictionResponse::add_predicted_values(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_predicted_values()->Add(value);
  // @@protoc_insertion_point(field_add:seigr.machine_learning.PredictionResponse.predicted_values)
}
inline const ::google::protobuf::RepeatedField<double>& PredictionResponse::predicted_values() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.machine_learning.PredictionResponse.predicted_values)
  return _internal_predicted_values();
}
inline ::google::protobuf::RepeatedField<double>* PredictionResponse::mutable_predicted_values()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.machine_learning.PredictionResponse.predicted_values)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_predicted_values();
}
inline const ::google::protobuf::RepeatedField<double>&
PredictionResponse::_internal_predicted_values() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.predicted_values_;
}
inline ::google::protobuf::RepeatedField<double>* PredictionResponse::_internal_mutable_predicted_values() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.predicted_values_;
}

// bool success = 4;
inline void PredictionResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool PredictionResponse::success() const {
  // @@protoc_insertion_point(field_get:seigr.machine_learning.PredictionResponse.success)
  return _internal_success();
}
inline void PredictionResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:seigr.machine_learning.PredictionResponse.success)
}
inline bool PredictionResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void PredictionResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// string error_message = 5;
inline void PredictionResponse::clear_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.ClearToEmpty();
}
inline const std::string& PredictionResponse::error_message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.machine_learning.PredictionResponse.error_message)
  return _internal_error_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PredictionResponse::set_error_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.machine_learning.PredictionResponse.error_message)
}
inline std::string* PredictionResponse::mutable_error_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_error_message();
  // @@protoc_insertion_point(field_mutable:seigr.machine_learning.PredictionResponse.error_message)
  return _s;
}
inline const std::string& PredictionResponse::_internal_error_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.error_message_.Get();
}
inline void PredictionResponse::_internal_set_error_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.Set(value, GetArena());
}
inline std::string* PredictionResponse::_internal_mutable_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.error_message_.Mutable( GetArena());
}
inline std::string* PredictionResponse::release_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.machine_learning.PredictionResponse.error_message)
  return _impl_.error_message_.Release();
}
inline void PredictionResponse::set_allocated_error_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.error_message_.IsDefault()) {
    _impl_.error_message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.machine_learning.PredictionResponse.error_message)
}

// float prediction_confidence = 6;
inline void PredictionResponse::clear_prediction_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.prediction_confidence_ = 0;
}
inline float PredictionResponse::prediction_confidence() const {
  // @@protoc_insertion_point(field_get:seigr.machine_learning.PredictionResponse.prediction_confidence)
  return _internal_prediction_confidence();
}
inline void PredictionResponse::set_prediction_confidence(float value) {
  _internal_set_prediction_confidence(value);
  // @@protoc_insertion_point(field_set:seigr.machine_learning.PredictionResponse.prediction_confidence)
}
inline float PredictionResponse::_internal_prediction_confidence() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.prediction_confidence_;
}
inline void PredictionResponse::_internal_set_prediction_confidence(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.prediction_confidence_ = value;
}

// string prediction_explanation = 7;
inline void PredictionResponse::clear_prediction_explanation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.prediction_explanation_.ClearToEmpty();
}
inline const std::string& PredictionResponse::prediction_explanation() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.machine_learning.PredictionResponse.prediction_explanation)
  return _internal_prediction_explanation();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PredictionResponse::set_prediction_explanation(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.prediction_explanation_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.machine_learning.PredictionResponse.prediction_explanation)
}
inline std::string* PredictionResponse::mutable_prediction_explanation() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_prediction_explanation();
  // @@protoc_insertion_point(field_mutable:seigr.machine_learning.PredictionResponse.prediction_explanation)
  return _s;
}
inline const std::string& PredictionResponse::_internal_prediction_explanation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.prediction_explanation_.Get();
}
inline void PredictionResponse::_internal_set_prediction_explanation(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.prediction_explanation_.Set(value, GetArena());
}
inline std::string* PredictionResponse::_internal_mutable_prediction_explanation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.prediction_explanation_.Mutable( GetArena());
}
inline std::string* PredictionResponse::release_prediction_explanation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.machine_learning.PredictionResponse.prediction_explanation)
  return _impl_.prediction_explanation_.Release();
}
inline void PredictionResponse::set_allocated_prediction_explanation(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.prediction_explanation_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.prediction_explanation_.IsDefault()) {
    _impl_.prediction_explanation_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.machine_learning.PredictionResponse.prediction_explanation)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ModelPerformanceLog

// string model_id = 1;
inline void ModelPerformanceLog::clear_model_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.model_id_.ClearToEmpty();
}
inline const std::string& ModelPerformanceLog::model_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.machine_learning.ModelPerformanceLog.model_id)
  return _internal_model_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ModelPerformanceLog::set_model_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.model_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.machine_learning.ModelPerformanceLog.model_id)
}
inline std::string* ModelPerformanceLog::mutable_model_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_model_id();
  // @@protoc_insertion_point(field_mutable:seigr.machine_learning.ModelPerformanceLog.model_id)
  return _s;
}
inline const std::string& ModelPerformanceLog::_internal_model_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.model_id_.Get();
}
inline void ModelPerformanceLog::_internal_set_model_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.model_id_.Set(value, GetArena());
}
inline std::string* ModelPerformanceLog::_internal_mutable_model_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.model_id_.Mutable( GetArena());
}
inline std::string* ModelPerformanceLog::release_model_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.machine_learning.ModelPerformanceLog.model_id)
  return _impl_.model_id_.Release();
}
inline void ModelPerformanceLog::set_allocated_model_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.model_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.model_id_.IsDefault()) {
    _impl_.model_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.machine_learning.ModelPerformanceLog.model_id)
}

// repeated .seigr.machine_learning.EvaluationMetricResult metrics = 2;
inline int ModelPerformanceLog::_internal_metrics_size() const {
  return _internal_metrics().size();
}
inline int ModelPerformanceLog::metrics_size() const {
  return _internal_metrics_size();
}
inline void ModelPerformanceLog::clear_metrics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metrics_.Clear();
}
inline ::seigr::machine_learning::EvaluationMetricResult* ModelPerformanceLog::mutable_metrics(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.machine_learning.ModelPerformanceLog.metrics)
  return _internal_mutable_metrics()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seigr::machine_learning::EvaluationMetricResult>* ModelPerformanceLog::mutable_metrics()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.machine_learning.ModelPerformanceLog.metrics)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_metrics();
}
inline const ::seigr::machine_learning::EvaluationMetricResult& ModelPerformanceLog::metrics(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.machine_learning.ModelPerformanceLog.metrics)
  return _internal_metrics().Get(index);
}
inline ::seigr::machine_learning::EvaluationMetricResult* ModelPerformanceLog::add_metrics() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seigr::machine_learning::EvaluationMetricResult* _add = _internal_mutable_metrics()->Add();
  // @@protoc_insertion_point(field_add:seigr.machine_learning.ModelPerformanceLog.metrics)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seigr::machine_learning::EvaluationMetricResult>& ModelPerformanceLog::metrics() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.machine_learning.ModelPerformanceLog.metrics)
  return _internal_metrics();
}
inline const ::google::protobuf::RepeatedPtrField<::seigr::machine_learning::EvaluationMetricResult>&
ModelPerformanceLog::_internal_metrics() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metrics_;
}
inline ::google::protobuf::RepeatedPtrField<::seigr::machine_learning::EvaluationMetricResult>*
ModelPerformanceLog::_internal_mutable_metrics() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.metrics_;
}

// float data_drift_score = 3;
inline void ModelPerformanceLog::clear_data_drift_score() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_drift_score_ = 0;
}
inline float ModelPerformanceLog::data_drift_score() const {
  // @@protoc_insertion_point(field_get:seigr.machine_learning.ModelPerformanceLog.data_drift_score)
  return _internal_data_drift_score();
}
inline void ModelPerformanceLog::set_data_drift_score(float value) {
  _internal_set_data_drift_score(value);
  // @@protoc_insertion_point(field_set:seigr.machine_learning.ModelPerformanceLog.data_drift_score)
}
inline float ModelPerformanceLog::_internal_data_drift_score() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_drift_score_;
}
inline void ModelPerformanceLog::_internal_set_data_drift_score(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_drift_score_ = value;
}

// float model_drift_score = 4;
inline void ModelPerformanceLog::clear_model_drift_score() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.model_drift_score_ = 0;
}
inline float ModelPerformanceLog::model_drift_score() const {
  // @@protoc_insertion_point(field_get:seigr.machine_learning.ModelPerformanceLog.model_drift_score)
  return _internal_model_drift_score();
}
inline void ModelPerformanceLog::set_model_drift_score(float value) {
  _internal_set_model_drift_score(value);
  // @@protoc_insertion_point(field_set:seigr.machine_learning.ModelPerformanceLog.model_drift_score)
}
inline float ModelPerformanceLog::_internal_model_drift_score() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.model_drift_score_;
}
inline void ModelPerformanceLog::_internal_set_model_drift_score(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.model_drift_score_ = value;
}

// repeated string drift_alerts = 5;
inline int ModelPerformanceLog::_internal_drift_alerts_size() const {
  return _internal_drift_alerts().size();
}
inline int ModelPerformanceLog::drift_alerts_size() const {
  return _internal_drift_alerts_size();
}
inline void ModelPerformanceLog::clear_drift_alerts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.drift_alerts_.Clear();
}
inline std::string* ModelPerformanceLog::add_drift_alerts() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_drift_alerts()->Add();
  // @@protoc_insertion_point(field_add_mutable:seigr.machine_learning.ModelPerformanceLog.drift_alerts)
  return _s;
}
inline const std::string& ModelPerformanceLog::drift_alerts(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.machine_learning.ModelPerformanceLog.drift_alerts)
  return _internal_drift_alerts().Get(index);
}
inline std::string* ModelPerformanceLog::mutable_drift_alerts(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.machine_learning.ModelPerformanceLog.drift_alerts)
  return _internal_mutable_drift_alerts()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void ModelPerformanceLog::set_drift_alerts(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_drift_alerts()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:seigr.machine_learning.ModelPerformanceLog.drift_alerts)
}
template <typename Arg_, typename... Args_>
inline void ModelPerformanceLog::add_drift_alerts(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_drift_alerts(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seigr.machine_learning.ModelPerformanceLog.drift_alerts)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ModelPerformanceLog::drift_alerts() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.machine_learning.ModelPerformanceLog.drift_alerts)
  return _internal_drift_alerts();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ModelPerformanceLog::mutable_drift_alerts() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.machine_learning.ModelPerformanceLog.drift_alerts)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_drift_alerts();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ModelPerformanceLog::_internal_drift_alerts() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.drift_alerts_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ModelPerformanceLog::_internal_mutable_drift_alerts() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.drift_alerts_;
}

// map<string, string> performance_metadata = 6;
inline int ModelPerformanceLog::_internal_performance_metadata_size() const {
  return _internal_performance_metadata().size();
}
inline int ModelPerformanceLog::performance_metadata_size() const {
  return _internal_performance_metadata_size();
}
inline void ModelPerformanceLog::clear_performance_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.performance_metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& ModelPerformanceLog::_internal_performance_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.performance_metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& ModelPerformanceLog::performance_metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.machine_learning.ModelPerformanceLog.performance_metadata)
  return _internal_performance_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* ModelPerformanceLog::_internal_mutable_performance_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.performance_metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* ModelPerformanceLog::mutable_performance_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.machine_learning.ModelPerformanceLog.performance_metadata)
  return _internal_mutable_performance_metadata();
}

// repeated string context_factors = 7;
inline int ModelPerformanceLog::_internal_context_factors_size() const {
  return _internal_context_factors().size();
}
inline int ModelPerformanceLog::context_factors_size() const {
  return _internal_context_factors_size();
}
inline void ModelPerformanceLog::clear_context_factors() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.context_factors_.Clear();
}
inline std::string* ModelPerformanceLog::add_context_factors() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_context_factors()->Add();
  // @@protoc_insertion_point(field_add_mutable:seigr.machine_learning.ModelPerformanceLog.context_factors)
  return _s;
}
inline const std::string& ModelPerformanceLog::context_factors(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.machine_learning.ModelPerformanceLog.context_factors)
  return _internal_context_factors().Get(index);
}
inline std::string* ModelPerformanceLog::mutable_context_factors(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.machine_learning.ModelPerformanceLog.context_factors)
  return _internal_mutable_context_factors()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void ModelPerformanceLog::set_context_factors(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_context_factors()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:seigr.machine_learning.ModelPerformanceLog.context_factors)
}
template <typename Arg_, typename... Args_>
inline void ModelPerformanceLog::add_context_factors(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_context_factors(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seigr.machine_learning.ModelPerformanceLog.context_factors)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ModelPerformanceLog::context_factors() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.machine_learning.ModelPerformanceLog.context_factors)
  return _internal_context_factors();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ModelPerformanceLog::mutable_context_factors() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.machine_learning.ModelPerformanceLog.context_factors)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_context_factors();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ModelPerformanceLog::_internal_context_factors() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.context_factors_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ModelPerformanceLog::_internal_mutable_context_factors() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.context_factors_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace machine_learning
}  // namespace seigr


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::seigr::machine_learning::MLModelType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::seigr::machine_learning::MLModelType>() {
  return ::seigr::machine_learning::MLModelType_descriptor();
}
template <>
struct is_proto_enum<::seigr::machine_learning::DataInputType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::seigr::machine_learning::DataInputType>() {
  return ::seigr::machine_learning::DataInputType_descriptor();
}
template <>
struct is_proto_enum<::seigr::machine_learning::MLTrainingStatus> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::seigr::machine_learning::MLTrainingStatus>() {
  return ::seigr::machine_learning::MLTrainingStatus_descriptor();
}
template <>
struct is_proto_enum<::seigr::machine_learning::MLEvaluationMetric> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::seigr::machine_learning::MLEvaluationMetric>() {
  return ::seigr::machine_learning::MLEvaluationMetric_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // machine_5flearning_2eproto_2epb_2eh
