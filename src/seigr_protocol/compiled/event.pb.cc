// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: event.proto
// Protobuf C++ Version: 5.29.2

#include "event.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace seigr {
namespace event {

inline constexpr SubscriptionAck::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : subscription_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SubscriptionAck::SubscriptionAck(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubscriptionAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscriptionAckDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscriptionAckDefaultTypeInternal() {}
  union {
    SubscriptionAck _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscriptionAckDefaultTypeInternal _SubscriptionAck_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR EventSubscription_SubscriptionMetadataEntry_DoNotUse::EventSubscription_SubscriptionMetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : EventSubscription_SubscriptionMetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : EventSubscription_SubscriptionMetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct EventSubscription_SubscriptionMetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EventSubscription_SubscriptionMetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EventSubscription_SubscriptionMetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    EventSubscription_SubscriptionMetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EventSubscription_SubscriptionMetadataEntry_DoNotUseDefaultTypeInternal _EventSubscription_SubscriptionMetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR EventSubscription_FiltersEntry_DoNotUse::EventSubscription_FiltersEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : EventSubscription_FiltersEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : EventSubscription_FiltersEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct EventSubscription_FiltersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EventSubscription_FiltersEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EventSubscription_FiltersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    EventSubscription_FiltersEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EventSubscription_FiltersEntry_DoNotUseDefaultTypeInternal _EventSubscription_FiltersEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR EventResponse_ResponseMetadataEntry_DoNotUse::EventResponse_ResponseMetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : EventResponse_ResponseMetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : EventResponse_ResponseMetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct EventResponse_ResponseMetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EventResponse_ResponseMetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EventResponse_ResponseMetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    EventResponse_ResponseMetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EventResponse_ResponseMetadataEntry_DoNotUseDefaultTypeInternal _EventResponse_ResponseMetadataEntry_DoNotUse_default_instance_;

inline constexpr EventLogRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : filters_{},
        event_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        time_range_start_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        time_range_end_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EventLogRequest::EventLogRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EventLogRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EventLogRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EventLogRequestDefaultTypeInternal() {}
  union {
    EventLogRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EventLogRequestDefaultTypeInternal _EventLogRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR EventLog_LogMetadataEntry_DoNotUse::EventLog_LogMetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : EventLog_LogMetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : EventLog_LogMetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct EventLog_LogMetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EventLog_LogMetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EventLog_LogMetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    EventLog_LogMetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EventLog_LogMetadataEntry_DoNotUseDefaultTypeInternal _EventLog_LogMetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR Event_MetadataEntry_DoNotUse::Event_MetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : Event_MetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : Event_MetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct Event_MetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Event_MetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Event_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Event_MetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Event_MetadataEntry_DoNotUseDefaultTypeInternal _Event_MetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR EscalationConfig_ConditionsEntry_DoNotUse::EscalationConfig_ConditionsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : EscalationConfig_ConditionsEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : EscalationConfig_ConditionsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct EscalationConfig_ConditionsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EscalationConfig_ConditionsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EscalationConfig_ConditionsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    EscalationConfig_ConditionsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EscalationConfig_ConditionsEntry_DoNotUseDefaultTypeInternal _EscalationConfig_ConditionsEntry_DoNotUse_default_instance_;

inline constexpr AcknowledgeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AcknowledgeResponse::AcknowledgeResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AcknowledgeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AcknowledgeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AcknowledgeResponseDefaultTypeInternal() {}
  union {
    AcknowledgeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AcknowledgeResponseDefaultTypeInternal _AcknowledgeResponse_default_instance_;

inline constexpr AcknowledgeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : event_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        subscriber_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        acknowledgment_timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AcknowledgeRequest::AcknowledgeRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AcknowledgeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AcknowledgeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AcknowledgeRequestDefaultTypeInternal() {}
  union {
    AcknowledgeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AcknowledgeRequestDefaultTypeInternal _AcknowledgeRequest_default_instance_;

inline constexpr EventSubscription::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : event_types_{},
        _event_types_cached_byte_size_{0},
        filters_{},
        subscription_metadata_{},
        subscription_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        subscriber_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        callback_url_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        last_updated_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        min_escalation_level_{static_cast< ::seigr::event::EscalationLevel >(0)},
        active_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EventSubscription::EventSubscription(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EventSubscriptionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EventSubscriptionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EventSubscriptionDefaultTypeInternal() {}
  union {
    EventSubscription _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EventSubscriptionDefaultTypeInternal _EventSubscription_default_instance_;

inline constexpr EventResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : response_metadata_{},
        response_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        event_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        responder_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        action_taken_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        response_timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        follow_up_action_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        requires_follow_up_{false},
        resolved_{false},
        escalation_path_{static_cast< ::seigr::event::EscalationLevel >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EventResponse::EventResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EventResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EventResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EventResponseDefaultTypeInternal() {}
  union {
    EventResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EventResponseDefaultTypeInternal _EventResponse_default_instance_;

inline constexpr EventLog::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : log_metadata_{},
        log_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        event_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        logged_at_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        logger_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        log_message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        logged_escalation_level_{static_cast< ::seigr::event::EscalationLevel >(0)},
        is_resolved_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EventLog::EventLog(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EventLogDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EventLogDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EventLogDefaultTypeInternal() {}
  union {
    EventLog _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EventLogDefaultTypeInternal _EventLog_default_instance_;

inline constexpr Event::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : metadata_{},
        target_subscribers_{},
        event_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        origin_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_{static_cast< ::seigr::event::EventType >(0)},
        priority_{static_cast< ::seigr::common::PriorityLevel >(0)},
        escalation_level_{static_cast< ::seigr::event::EscalationLevel >(0)},
        requires_acknowledgment_{false},
        allow_forwarding_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Event::Event(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EventDefaultTypeInternal() {}
  union {
    Event _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EventDefaultTypeInternal _Event_default_instance_;

inline constexpr EscalationConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : conditions_{},
        alert_recipients_{},
        escalation_path_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        escalation_strategy_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        level_{static_cast< ::seigr::event::EscalationLevel >(0)},
        enable_automatic_responses_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EscalationConfig::EscalationConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EscalationConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EscalationConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EscalationConfigDefaultTypeInternal() {}
  union {
    EscalationConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EscalationConfigDefaultTypeInternal _EscalationConfig_default_instance_;

inline constexpr EventLogResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : logs_{},
        status_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EventLogResponse::EventLogResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EventLogResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EventLogResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EventLogResponseDefaultTypeInternal() {}
  union {
    EventLogResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EventLogResponseDefaultTypeInternal _EventLogResponse_default_instance_;
}  // namespace event
}  // namespace seigr
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_event_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_event_2eproto = nullptr;
const ::uint32_t
    TableStruct_event_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::seigr::event::Event_MetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::Event_MetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::event::Event_MetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::Event_MetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::event::Event, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::event::Event, _impl_.event_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::Event, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::Event, _impl_.priority_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::Event, _impl_.escalation_level_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::Event, _impl_.origin_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::Event, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::Event, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::Event, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::Event, _impl_.target_subscribers_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::Event, _impl_.requires_acknowledgment_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::Event, _impl_.allow_forwarding_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventSubscription_FiltersEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventSubscription_FiltersEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventSubscription_FiltersEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventSubscription_FiltersEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventSubscription_SubscriptionMetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventSubscription_SubscriptionMetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventSubscription_SubscriptionMetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventSubscription_SubscriptionMetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventSubscription, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventSubscription, _impl_.subscription_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventSubscription, _impl_.subscriber_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventSubscription, _impl_.event_types_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventSubscription, _impl_.filters_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventSubscription, _impl_.callback_url_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventSubscription, _impl_.subscription_metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventSubscription, _impl_.last_updated_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventSubscription, _impl_.min_escalation_level_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventSubscription, _impl_.active_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventResponse_ResponseMetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventResponse_ResponseMetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventResponse_ResponseMetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventResponse_ResponseMetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventResponse, _impl_.response_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventResponse, _impl_.event_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventResponse, _impl_.responder_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventResponse, _impl_.action_taken_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventResponse, _impl_.response_timestamp_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventResponse, _impl_.response_metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventResponse, _impl_.requires_follow_up_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventResponse, _impl_.follow_up_action_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventResponse, _impl_.escalation_path_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventResponse, _impl_.resolved_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::EscalationConfig_ConditionsEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::EscalationConfig_ConditionsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::event::EscalationConfig_ConditionsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::EscalationConfig_ConditionsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::event::EscalationConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::event::EscalationConfig, _impl_.level_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::EscalationConfig, _impl_.escalation_path_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::EscalationConfig, _impl_.conditions_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::EscalationConfig, _impl_.alert_recipients_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::EscalationConfig, _impl_.escalation_strategy_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::EscalationConfig, _impl_.enable_automatic_responses_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventLog_LogMetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventLog_LogMetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventLog_LogMetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventLog_LogMetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventLog, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventLog, _impl_.log_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventLog, _impl_.event_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventLog, _impl_.logged_at_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventLog, _impl_.logger_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventLog, _impl_.log_message_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventLog, _impl_.log_metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventLog, _impl_.logged_escalation_level_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventLog, _impl_.is_resolved_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::event::SubscriptionAck, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::event::SubscriptionAck, _impl_.subscription_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::SubscriptionAck, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::SubscriptionAck, _impl_.message_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::event::AcknowledgeRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::event::AcknowledgeRequest, _impl_.event_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::AcknowledgeRequest, _impl_.subscriber_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::AcknowledgeRequest, _impl_.acknowledgment_timestamp_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::event::AcknowledgeResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::event::AcknowledgeResponse, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::AcknowledgeResponse, _impl_.message_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventLogRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventLogRequest, _impl_.event_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventLogRequest, _impl_.time_range_start_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventLogRequest, _impl_.time_range_end_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventLogRequest, _impl_.filters_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventLogResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventLogResponse, _impl_.logs_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventLogResponse, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::seigr::event::EventLogResponse, _impl_.message_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::seigr::event::Event_MetadataEntry_DoNotUse)},
        {12, -1, -1, sizeof(::seigr::event::Event)},
        {31, 41, -1, sizeof(::seigr::event::EventSubscription_FiltersEntry_DoNotUse)},
        {43, 53, -1, sizeof(::seigr::event::EventSubscription_SubscriptionMetadataEntry_DoNotUse)},
        {55, -1, -1, sizeof(::seigr::event::EventSubscription)},
        {72, 82, -1, sizeof(::seigr::event::EventResponse_ResponseMetadataEntry_DoNotUse)},
        {84, -1, -1, sizeof(::seigr::event::EventResponse)},
        {102, 112, -1, sizeof(::seigr::event::EscalationConfig_ConditionsEntry_DoNotUse)},
        {114, -1, -1, sizeof(::seigr::event::EscalationConfig)},
        {128, 138, -1, sizeof(::seigr::event::EventLog_LogMetadataEntry_DoNotUse)},
        {140, -1, -1, sizeof(::seigr::event::EventLog)},
        {156, -1, -1, sizeof(::seigr::event::SubscriptionAck)},
        {167, -1, -1, sizeof(::seigr::event::AcknowledgeRequest)},
        {178, -1, -1, sizeof(::seigr::event::AcknowledgeResponse)},
        {188, -1, -1, sizeof(::seigr::event::EventLogRequest)},
        {200, -1, -1, sizeof(::seigr::event::EventLogResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::seigr::event::_Event_MetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::event::_Event_default_instance_._instance,
    &::seigr::event::_EventSubscription_FiltersEntry_DoNotUse_default_instance_._instance,
    &::seigr::event::_EventSubscription_SubscriptionMetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::event::_EventSubscription_default_instance_._instance,
    &::seigr::event::_EventResponse_ResponseMetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::event::_EventResponse_default_instance_._instance,
    &::seigr::event::_EscalationConfig_ConditionsEntry_DoNotUse_default_instance_._instance,
    &::seigr::event::_EscalationConfig_default_instance_._instance,
    &::seigr::event::_EventLog_LogMetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::event::_EventLog_default_instance_._instance,
    &::seigr::event::_SubscriptionAck_default_instance_._instance,
    &::seigr::event::_AcknowledgeRequest_default_instance_._instance,
    &::seigr::event::_AcknowledgeResponse_default_instance_._instance,
    &::seigr::event::_EventLogRequest_default_instance_._instance,
    &::seigr::event::_EventLogResponse_default_instance_._instance,
};
const char descriptor_table_protodef_event_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\013event.proto\022\013seigr.event\032\014common.proto"
    "\"\232\003\n\005Event\022\020\n\010event_id\030\001 \001(\t\022$\n\004type\030\002 \001"
    "(\0162\026.seigr.event.EventType\022-\n\010priority\030\003"
    " \001(\0162\033.seigr.common.PriorityLevel\0226\n\020esc"
    "alation_level\030\004 \001(\0162\034.seigr.event.Escala"
    "tionLevel\022\016\n\006origin\030\005 \001(\t\022\021\n\ttimestamp\030\006"
    " \001(\t\022\023\n\013description\030\007 \001(\t\0222\n\010metadata\030\010 "
    "\003(\0132 .seigr.event.Event.MetadataEntry\022\032\n"
    "\022target_subscribers\030\t \003(\t\022\037\n\027requires_ac"
    "knowledgment\030\n \001(\010\022\030\n\020allow_forwarding\030\013"
    " \001(\010\032/\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005va"
    "lue\030\002 \001(\t:\0028\001\"\354\003\n\021EventSubscription\022\027\n\017s"
    "ubscription_id\030\001 \001(\t\022\025\n\rsubscriber_id\030\002 "
    "\001(\t\022+\n\013event_types\030\003 \003(\0162\026.seigr.event.E"
    "ventType\022<\n\007filters\030\004 \003(\0132+.seigr.event."
    "EventSubscription.FiltersEntry\022\024\n\014callba"
    "ck_url\030\005 \001(\t\022W\n\025subscription_metadata\030\006 "
    "\003(\01328.seigr.event.EventSubscription.Subs"
    "criptionMetadataEntry\022\024\n\014last_updated\030\007 "
    "\001(\t\022:\n\024min_escalation_level\030\010 \001(\0162\034.seig"
    "r.event.EscalationLevel\022\016\n\006active\030\t \001(\010\032"
    ".\n\014FiltersEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 "
    "\001(\t:\0028\001\032;\n\031SubscriptionMetadataEntry\022\013\n\003"
    "key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\206\003\n\rEventRe"
    "sponse\022\023\n\013response_id\030\001 \001(\t\022\020\n\010event_id\030"
    "\002 \001(\t\022\024\n\014responder_id\030\003 \001(\t\022\024\n\014action_ta"
    "ken\030\004 \001(\t\022\032\n\022response_timestamp\030\005 \001(\t\022K\n"
    "\021response_metadata\030\006 \003(\01320.seigr.event.E"
    "ventResponse.ResponseMetadataEntry\022\032\n\022re"
    "quires_follow_up\030\007 \001(\010\022\033\n\023follow_up_acti"
    "on_id\030\010 \001(\t\0225\n\017escalation_path\030\t \001(\0162\034.s"
    "eigr.event.EscalationLevel\022\020\n\010resolved\030\n"
    " \001(\010\0327\n\025ResponseMetadataEntry\022\013\n\003key\030\001 \001"
    "(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\254\002\n\020EscalationConf"
    "ig\022+\n\005level\030\001 \001(\0162\034.seigr.event.Escalati"
    "onLevel\022\032\n\022escalation_path_id\030\002 \001(\t\022A\n\nc"
    "onditions\030\003 \003(\0132-.seigr.event.Escalation"
    "Config.ConditionsEntry\022\030\n\020alert_recipien"
    "ts\030\004 \003(\t\022\033\n\023escalation_strategy\030\005 \001(\t\022\"\n"
    "\032enable_automatic_responses\030\006 \001(\010\0321\n\017Con"
    "ditionsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t"
    ":\0028\001\"\255\002\n\010EventLog\022\016\n\006log_id\030\001 \001(\t\022\020\n\010eve"
    "nt_id\030\002 \001(\t\022\021\n\tlogged_at\030\003 \001(\t\022\021\n\tlogger"
    "_id\030\004 \001(\t\022\023\n\013log_message\030\005 \001(\t\022<\n\014log_me"
    "tadata\030\006 \003(\0132&.seigr.event.EventLog.LogM"
    "etadataEntry\022=\n\027logged_escalation_level\030"
    "\007 \001(\0162\034.seigr.event.EscalationLevel\022\023\n\013i"
    "s_resolved\030\010 \001(\010\0322\n\020LogMetadataEntry\022\013\n\003"
    "key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"L\n\017Subscrip"
    "tionAck\022\027\n\017subscription_id\030\001 \001(\t\022\017\n\007succ"
    "ess\030\002 \001(\010\022\017\n\007message\030\003 \001(\t\"_\n\022Acknowledg"
    "eRequest\022\020\n\010event_id\030\001 \001(\t\022\025\n\rsubscriber"
    "_id\030\002 \001(\t\022 \n\030acknowledgment_timestamp\030\003 "
    "\001(\t\"7\n\023AcknowledgeResponse\022\017\n\007success\030\001 "
    "\001(\010\022\017\n\007message\030\002 \001(\t\"f\n\017EventLogRequest\022"
    "\020\n\010event_id\030\001 \001(\t\022\030\n\020time_range_start\030\002 "
    "\001(\t\022\026\n\016time_range_end\030\003 \001(\t\022\017\n\007filters\030\004"
    " \003(\t\"X\n\020EventLogResponse\022#\n\004logs\030\001 \003(\0132\025"
    ".seigr.event.EventLog\022\016\n\006status\030\002 \001(\t\022\017\n"
    "\007message\030\003 \001(\t*\205\002\n\tEventType\022\030\n\024EVENT_TY"
    "PE_UNDEFINED\020\000\022\024\n\020EVENT_TYPE_ERROR\020\001\022\024\n\020"
    "EVENT_TYPE_ALERT\020\002\022\032\n\026EVENT_TYPE_USER_AC"
    "TION\020\003\022)\n%EVENT_TYPE_RESOURCE_THRESHOLD_"
    "REACHED\020\004\022\034\n\030EVENT_TYPE_SYSTEM_UPDATE\020\005\022"
    "\031\n\025EVENT_TYPE_MONITORING\020\006\022\033\n\027EVENT_TYPE"
    "_SELF_HEALING\020\007\022\025\n\021EVENT_TYPE_CUSTOM\020\010*\235"
    "\001\n\017EscalationLevel\022\031\n\025ESCALATION_LEVEL_N"
    "ONE\020\000\022\030\n\024ESCALATION_LEVEL_LOW\020\001\022\033\n\027ESCAL"
    "ATION_LEVEL_MEDIUM\020\002\022\031\n\025ESCALATION_LEVEL"
    "_HIGH\020\003\022\035\n\031ESCALATION_LEVEL_CRITICAL\020\0042\311"
    "\002\n\014EventService\022>\n\014PublishEvent\022\022.seigr."
    "event.Event\032\032.seigr.event.EventResponse\022"
    "Q\n\021SubscribeToEvents\022\036.seigr.event.Event"
    "Subscription\032\034.seigr.event.SubscriptionA"
    "ck\022U\n\020AcknowledgeEvent\022\037.seigr.event.Ack"
    "nowledgeRequest\032 .seigr.event.Acknowledg"
    "eResponse\022O\n\020RetrieveEventLog\022\034.seigr.ev"
    "ent.EventLogRequest\032\035.seigr.event.EventL"
    "ogResponseb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_event_2eproto_deps[1] =
    {
        &::descriptor_table_common_2eproto,
};
static ::absl::once_flag descriptor_table_event_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_event_2eproto = {
    false,
    false,
    3138,
    descriptor_table_protodef_event_2eproto,
    "event.proto",
    &descriptor_table_event_2eproto_once,
    descriptor_table_event_2eproto_deps,
    1,
    16,
    schemas,
    file_default_instances,
    TableStruct_event_2eproto::offsets,
    file_level_enum_descriptors_event_2eproto,
    file_level_service_descriptors_event_2eproto,
};
namespace seigr {
namespace event {
const ::google::protobuf::EnumDescriptor* EventType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_event_2eproto);
  return file_level_enum_descriptors_event_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t EventType_internal_data_[] = {
    589824u, 0u, };
bool EventType_IsValid(int value) {
  return 0 <= value && value <= 8;
}
const ::google::protobuf::EnumDescriptor* EscalationLevel_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_event_2eproto);
  return file_level_enum_descriptors_event_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t EscalationLevel_internal_data_[] = {
    327680u, 0u, };
bool EscalationLevel_IsValid(int value) {
  return 0 <= value && value <= 4;
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              Event_MetadataEntry_DoNotUse::Event_MetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              Event_MetadataEntry_DoNotUse::Event_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              Event_MetadataEntry_DoNotUse::Event_MetadataEntry_DoNotUse() : SuperType() {}
              Event_MetadataEntry_DoNotUse::Event_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* Event_MetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) Event_MetadataEntry_DoNotUse(arena);
              }
              constexpr auto Event_MetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Event_MetadataEntry_DoNotUse),
                                                          alignof(Event_MetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull Event_MetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_Event_MetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &Event_MetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<Event_MetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &Event_MetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &Event_MetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(Event_MetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &Event_MetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_event_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* Event_MetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 48, 2> Event_MetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Event_MetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::event::Event_MetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Event_MetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Event_MetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(Event_MetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(Event_MetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\37\3\5\0\0\0\0\0"
    "seigr.event.Event.MetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class Event::_Internal {
 public:
};

Event::Event(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.event.Event)
}
inline PROTOBUF_NDEBUG_INLINE Event::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::event::Event& from_msg)
      : metadata_{visibility, arena, from.metadata_},
        target_subscribers_{visibility, arena, from.target_subscribers_},
        event_id_(arena, from.event_id_),
        origin_(arena, from.origin_),
        timestamp_(arena, from.timestamp_),
        description_(arena, from.description_),
        _cached_size_{0} {}

Event::Event(
    ::google::protobuf::Arena* arena,
    const Event& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Event* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, type_),
           offsetof(Impl_, allow_forwarding_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::allow_forwarding_));

  // @@protoc_insertion_point(copy_constructor:seigr.event.Event)
}
inline PROTOBUF_NDEBUG_INLINE Event::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : metadata_{visibility, arena},
        target_subscribers_{visibility, arena},
        event_id_(arena),
        origin_(arena),
        timestamp_(arena),
        description_(arena),
        _cached_size_{0} {}

inline void Event::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           0,
           offsetof(Impl_, allow_forwarding_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::allow_forwarding_));
}
Event::~Event() {
  // @@protoc_insertion_point(destructor:seigr.event.Event)
  SharedDtor(*this);
}
inline void Event::SharedDtor(MessageLite& self) {
  Event& this_ = static_cast<Event&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.event_id_.Destroy();
  this_._impl_.origin_.Destroy();
  this_._impl_.timestamp_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Event::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Event(arena);
}
constexpr auto Event::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Event, _impl_.metadata_) +
          decltype(Event::_impl_.metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Event, _impl_.metadata_) +
          decltype(Event::_impl_.metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Event, _impl_.target_subscribers_) +
          decltype(Event::_impl_.target_subscribers_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Event), alignof(Event), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Event::PlacementNew_,
                                 sizeof(Event),
                                 alignof(Event));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Event::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Event_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Event::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Event>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Event::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Event>(), &Event::ByteSizeLong,
            &Event::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Event, _impl_._cached_size_),
        false,
    },
    &Event::kDescriptorMethods,
    &descriptor_table_event_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Event::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 1, 94, 2> Event::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::event::Event>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string event_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Event, _impl_.event_id_)}},
    // .seigr.event.EventType type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Event, _impl_.type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Event, _impl_.type_)}},
    // .seigr.common.PriorityLevel priority = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Event, _impl_.priority_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Event, _impl_.priority_)}},
    // .seigr.event.EscalationLevel escalation_level = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Event, _impl_.escalation_level_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Event, _impl_.escalation_level_)}},
    // string origin = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Event, _impl_.origin_)}},
    // string timestamp = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Event, _impl_.timestamp_)}},
    // string description = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(Event, _impl_.description_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated string target_subscribers = 9;
    {::_pbi::TcParser::FastUR1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(Event, _impl_.target_subscribers_)}},
    // bool requires_acknowledgment = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Event, _impl_.requires_acknowledgment_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(Event, _impl_.requires_acknowledgment_)}},
    // bool allow_forwarding = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Event, _impl_.allow_forwarding_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(Event, _impl_.allow_forwarding_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string event_id = 1;
    {PROTOBUF_FIELD_OFFSET(Event, _impl_.event_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.event.EventType type = 2;
    {PROTOBUF_FIELD_OFFSET(Event, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .seigr.common.PriorityLevel priority = 3;
    {PROTOBUF_FIELD_OFFSET(Event, _impl_.priority_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .seigr.event.EscalationLevel escalation_level = 4;
    {PROTOBUF_FIELD_OFFSET(Event, _impl_.escalation_level_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string origin = 5;
    {PROTOBUF_FIELD_OFFSET(Event, _impl_.origin_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string timestamp = 6;
    {PROTOBUF_FIELD_OFFSET(Event, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 7;
    {PROTOBUF_FIELD_OFFSET(Event, _impl_.description_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> metadata = 8;
    {PROTOBUF_FIELD_OFFSET(Event, _impl_.metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // repeated string target_subscribers = 9;
    {PROTOBUF_FIELD_OFFSET(Event, _impl_.target_subscribers_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // bool requires_acknowledgment = 10;
    {PROTOBUF_FIELD_OFFSET(Event, _impl_.requires_acknowledgment_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool allow_forwarding = 11;
    {PROTOBUF_FIELD_OFFSET(Event, _impl_.allow_forwarding_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(Event()._impl_.metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\21\10\0\0\0\6\11\13\10\22\0\0\0\0\0\0"
    "seigr.event.Event"
    "event_id"
    "origin"
    "timestamp"
    "description"
    "metadata"
    "target_subscribers"
  }},
};

PROTOBUF_NOINLINE void Event::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.event.Event)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.metadata_.Clear();
  _impl_.target_subscribers_.Clear();
  _impl_.event_id_.ClearToEmpty();
  _impl_.origin_.ClearToEmpty();
  _impl_.timestamp_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  ::memset(&_impl_.type_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.allow_forwarding_) -
      reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.allow_forwarding_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Event::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Event& this_ = static_cast<const Event&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Event::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Event& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.event.Event)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string event_id = 1;
          if (!this_._internal_event_id().empty()) {
            const std::string& _s = this_._internal_event_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.Event.event_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // .seigr.event.EventType type = 2;
          if (this_._internal_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_type(), target);
          }

          // .seigr.common.PriorityLevel priority = 3;
          if (this_._internal_priority() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_priority(), target);
          }

          // .seigr.event.EscalationLevel escalation_level = 4;
          if (this_._internal_escalation_level() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                4, this_._internal_escalation_level(), target);
          }

          // string origin = 5;
          if (!this_._internal_origin().empty()) {
            const std::string& _s = this_._internal_origin();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.Event.origin");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string timestamp = 6;
          if (!this_._internal_timestamp().empty()) {
            const std::string& _s = this_._internal_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.Event.timestamp");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // string description = 7;
          if (!this_._internal_description().empty()) {
            const std::string& _s = this_._internal_description();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.Event.description");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // map<string, string> metadata = 8;
          if (!this_._internal_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    8, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.Event.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.Event.metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    8, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.Event.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.Event.metadata");
              }
            }
          }

          // repeated string target_subscribers = 9;
          for (int i = 0, n = this_._internal_target_subscribers_size(); i < n; ++i) {
            const auto& s = this_._internal_target_subscribers().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.Event.target_subscribers");
            target = stream->WriteString(9, s, target);
          }

          // bool requires_acknowledgment = 10;
          if (this_._internal_requires_acknowledgment() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                10, this_._internal_requires_acknowledgment(), target);
          }

          // bool allow_forwarding = 11;
          if (this_._internal_allow_forwarding() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                11, this_._internal_allow_forwarding(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.event.Event)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Event::ByteSizeLong(const MessageLite& base) {
          const Event& this_ = static_cast<const Event&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Event::ByteSizeLong() const {
          const Event& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.event.Event)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> metadata = 8;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_metadata_size());
              for (const auto& entry : this_._internal_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // repeated string target_subscribers = 9;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_target_subscribers().size());
              for (int i = 0, n = this_._internal_target_subscribers().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_target_subscribers().Get(i));
              }
            }
          }
           {
            // string event_id = 1;
            if (!this_._internal_event_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_event_id());
            }
            // string origin = 5;
            if (!this_._internal_origin().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_origin());
            }
            // string timestamp = 6;
            if (!this_._internal_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_timestamp());
            }
            // string description = 7;
            if (!this_._internal_description().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_description());
            }
            // .seigr.event.EventType type = 2;
            if (this_._internal_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
            }
            // .seigr.common.PriorityLevel priority = 3;
            if (this_._internal_priority() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_priority());
            }
            // .seigr.event.EscalationLevel escalation_level = 4;
            if (this_._internal_escalation_level() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_escalation_level());
            }
            // bool requires_acknowledgment = 10;
            if (this_._internal_requires_acknowledgment() != 0) {
              total_size += 2;
            }
            // bool allow_forwarding = 11;
            if (this_._internal_allow_forwarding() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Event::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Event*>(&to_msg);
  auto& from = static_cast<const Event&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.event.Event)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.metadata_.MergeFrom(from._impl_.metadata_);
  _this->_internal_mutable_target_subscribers()->MergeFrom(from._internal_target_subscribers());
  if (!from._internal_event_id().empty()) {
    _this->_internal_set_event_id(from._internal_event_id());
  }
  if (!from._internal_origin().empty()) {
    _this->_internal_set_origin(from._internal_origin());
  }
  if (!from._internal_timestamp().empty()) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (from._internal_type() != 0) {
    _this->_impl_.type_ = from._impl_.type_;
  }
  if (from._internal_priority() != 0) {
    _this->_impl_.priority_ = from._impl_.priority_;
  }
  if (from._internal_escalation_level() != 0) {
    _this->_impl_.escalation_level_ = from._impl_.escalation_level_;
  }
  if (from._internal_requires_acknowledgment() != 0) {
    _this->_impl_.requires_acknowledgment_ = from._impl_.requires_acknowledgment_;
  }
  if (from._internal_allow_forwarding() != 0) {
    _this->_impl_.allow_forwarding_ = from._impl_.allow_forwarding_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Event::CopyFrom(const Event& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.event.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Event::InternalSwap(Event* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.metadata_.InternalSwap(&other->_impl_.metadata_);
  _impl_.target_subscribers_.InternalSwap(&other->_impl_.target_subscribers_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.event_id_, &other->_impl_.event_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.origin_, &other->_impl_.origin_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.timestamp_, &other->_impl_.timestamp_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Event, _impl_.allow_forwarding_)
      + sizeof(Event::_impl_.allow_forwarding_)
      - PROTOBUF_FIELD_OFFSET(Event, _impl_.type_)>(
          reinterpret_cast<char*>(&_impl_.type_),
          reinterpret_cast<char*>(&other->_impl_.type_));
}

::google::protobuf::Metadata Event::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              EventSubscription_FiltersEntry_DoNotUse::EventSubscription_FiltersEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              EventSubscription_FiltersEntry_DoNotUse::EventSubscription_FiltersEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              EventSubscription_FiltersEntry_DoNotUse::EventSubscription_FiltersEntry_DoNotUse() : SuperType() {}
              EventSubscription_FiltersEntry_DoNotUse::EventSubscription_FiltersEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* EventSubscription_FiltersEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) EventSubscription_FiltersEntry_DoNotUse(arena);
              }
              constexpr auto EventSubscription_FiltersEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(EventSubscription_FiltersEntry_DoNotUse),
                                                          alignof(EventSubscription_FiltersEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull EventSubscription_FiltersEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_EventSubscription_FiltersEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &EventSubscription_FiltersEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<EventSubscription_FiltersEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &EventSubscription_FiltersEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &EventSubscription_FiltersEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(EventSubscription_FiltersEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &EventSubscription_FiltersEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_event_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* EventSubscription_FiltersEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 59, 2> EventSubscription_FiltersEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EventSubscription_FiltersEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::event::EventSubscription_FiltersEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(EventSubscription_FiltersEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EventSubscription_FiltersEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(EventSubscription_FiltersEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(EventSubscription_FiltersEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\52\3\5\0\0\0\0\0"
    "seigr.event.EventSubscription.FiltersEntry"
    "key"
    "value"
  }},
};

// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              EventSubscription_SubscriptionMetadataEntry_DoNotUse::EventSubscription_SubscriptionMetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              EventSubscription_SubscriptionMetadataEntry_DoNotUse::EventSubscription_SubscriptionMetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              EventSubscription_SubscriptionMetadataEntry_DoNotUse::EventSubscription_SubscriptionMetadataEntry_DoNotUse() : SuperType() {}
              EventSubscription_SubscriptionMetadataEntry_DoNotUse::EventSubscription_SubscriptionMetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* EventSubscription_SubscriptionMetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) EventSubscription_SubscriptionMetadataEntry_DoNotUse(arena);
              }
              constexpr auto EventSubscription_SubscriptionMetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(EventSubscription_SubscriptionMetadataEntry_DoNotUse),
                                                          alignof(EventSubscription_SubscriptionMetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull EventSubscription_SubscriptionMetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_EventSubscription_SubscriptionMetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &EventSubscription_SubscriptionMetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<EventSubscription_SubscriptionMetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &EventSubscription_SubscriptionMetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &EventSubscription_SubscriptionMetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(EventSubscription_SubscriptionMetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &EventSubscription_SubscriptionMetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_event_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* EventSubscription_SubscriptionMetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 72, 2> EventSubscription_SubscriptionMetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EventSubscription_SubscriptionMetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::event::EventSubscription_SubscriptionMetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(EventSubscription_SubscriptionMetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EventSubscription_SubscriptionMetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(EventSubscription_SubscriptionMetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(EventSubscription_SubscriptionMetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\67\3\5\0\0\0\0\0"
    "seigr.event.EventSubscription.SubscriptionMetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class EventSubscription::_Internal {
 public:
};

EventSubscription::EventSubscription(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.event.EventSubscription)
}
inline PROTOBUF_NDEBUG_INLINE EventSubscription::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::event::EventSubscription& from_msg)
      : event_types_{visibility, arena, from.event_types_},
        _event_types_cached_byte_size_{0},
        filters_{visibility, arena, from.filters_},
        subscription_metadata_{visibility, arena, from.subscription_metadata_},
        subscription_id_(arena, from.subscription_id_),
        subscriber_id_(arena, from.subscriber_id_),
        callback_url_(arena, from.callback_url_),
        last_updated_(arena, from.last_updated_),
        _cached_size_{0} {}

EventSubscription::EventSubscription(
    ::google::protobuf::Arena* arena,
    const EventSubscription& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EventSubscription* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, min_escalation_level_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, min_escalation_level_),
           offsetof(Impl_, active_) -
               offsetof(Impl_, min_escalation_level_) +
               sizeof(Impl_::active_));

  // @@protoc_insertion_point(copy_constructor:seigr.event.EventSubscription)
}
inline PROTOBUF_NDEBUG_INLINE EventSubscription::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : event_types_{visibility, arena},
        _event_types_cached_byte_size_{0},
        filters_{visibility, arena},
        subscription_metadata_{visibility, arena},
        subscription_id_(arena),
        subscriber_id_(arena),
        callback_url_(arena),
        last_updated_(arena),
        _cached_size_{0} {}

inline void EventSubscription::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, min_escalation_level_),
           0,
           offsetof(Impl_, active_) -
               offsetof(Impl_, min_escalation_level_) +
               sizeof(Impl_::active_));
}
EventSubscription::~EventSubscription() {
  // @@protoc_insertion_point(destructor:seigr.event.EventSubscription)
  SharedDtor(*this);
}
inline void EventSubscription::SharedDtor(MessageLite& self) {
  EventSubscription& this_ = static_cast<EventSubscription&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.subscription_id_.Destroy();
  this_._impl_.subscriber_id_.Destroy();
  this_._impl_.callback_url_.Destroy();
  this_._impl_.last_updated_.Destroy();
  this_._impl_.~Impl_();
}

inline void* EventSubscription::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EventSubscription(arena);
}
constexpr auto EventSubscription::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(EventSubscription, _impl_.event_types_) +
          decltype(EventSubscription::_impl_.event_types_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(EventSubscription, _impl_.filters_) +
          decltype(EventSubscription::_impl_.filters_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(EventSubscription, _impl_.filters_) +
          decltype(EventSubscription::_impl_.filters_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(EventSubscription, _impl_.subscription_metadata_) +
          decltype(EventSubscription::_impl_.subscription_metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(EventSubscription, _impl_.subscription_metadata_) +
          decltype(EventSubscription::_impl_.subscription_metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(EventSubscription), alignof(EventSubscription), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&EventSubscription::PlacementNew_,
                                 sizeof(EventSubscription),
                                 alignof(EventSubscription));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EventSubscription::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EventSubscription_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EventSubscription::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EventSubscription>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EventSubscription::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EventSubscription>(), &EventSubscription::ByteSizeLong,
            &EventSubscription::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EventSubscription, _impl_._cached_size_),
        false,
    },
    &EventSubscription::kDescriptorMethods,
    &descriptor_table_event_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EventSubscription::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 2, 126, 2> EventSubscription::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::event::EventSubscription>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string subscription_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EventSubscription, _impl_.subscription_id_)}},
    // string subscriber_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(EventSubscription, _impl_.subscriber_id_)}},
    // repeated .seigr.event.EventType event_types = 3;
    {::_pbi::TcParser::FastV32P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(EventSubscription, _impl_.event_types_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string callback_url = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(EventSubscription, _impl_.callback_url_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string last_updated = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(EventSubscription, _impl_.last_updated_)}},
    // .seigr.event.EscalationLevel min_escalation_level = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EventSubscription, _impl_.min_escalation_level_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(EventSubscription, _impl_.min_escalation_level_)}},
    // bool active = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(EventSubscription, _impl_.active_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(EventSubscription, _impl_.active_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string subscription_id = 1;
    {PROTOBUF_FIELD_OFFSET(EventSubscription, _impl_.subscription_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string subscriber_id = 2;
    {PROTOBUF_FIELD_OFFSET(EventSubscription, _impl_.subscriber_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .seigr.event.EventType event_types = 3;
    {PROTOBUF_FIELD_OFFSET(EventSubscription, _impl_.event_types_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // map<string, string> filters = 4;
    {PROTOBUF_FIELD_OFFSET(EventSubscription, _impl_.filters_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string callback_url = 5;
    {PROTOBUF_FIELD_OFFSET(EventSubscription, _impl_.callback_url_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> subscription_metadata = 6;
    {PROTOBUF_FIELD_OFFSET(EventSubscription, _impl_.subscription_metadata_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string last_updated = 7;
    {PROTOBUF_FIELD_OFFSET(EventSubscription, _impl_.last_updated_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.event.EscalationLevel min_escalation_level = 8;
    {PROTOBUF_FIELD_OFFSET(EventSubscription, _impl_.min_escalation_level_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // bool active = 9;
    {PROTOBUF_FIELD_OFFSET(EventSubscription, _impl_.active_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(EventSubscription()._impl_.filters_)>(
        1, 0, 0, 9,
        9)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(EventSubscription()._impl_.subscription_metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\35\17\15\0\7\14\25\14\0\0\0\0\0\0\0\0"
    "seigr.event.EventSubscription"
    "subscription_id"
    "subscriber_id"
    "filters"
    "callback_url"
    "subscription_metadata"
    "last_updated"
  }},
};

PROTOBUF_NOINLINE void EventSubscription::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.event.EventSubscription)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.event_types_.Clear();
  _impl_.filters_.Clear();
  _impl_.subscription_metadata_.Clear();
  _impl_.subscription_id_.ClearToEmpty();
  _impl_.subscriber_id_.ClearToEmpty();
  _impl_.callback_url_.ClearToEmpty();
  _impl_.last_updated_.ClearToEmpty();
  ::memset(&_impl_.min_escalation_level_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.active_) -
      reinterpret_cast<char*>(&_impl_.min_escalation_level_)) + sizeof(_impl_.active_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EventSubscription::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EventSubscription& this_ = static_cast<const EventSubscription&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EventSubscription::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EventSubscription& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.event.EventSubscription)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string subscription_id = 1;
          if (!this_._internal_subscription_id().empty()) {
            const std::string& _s = this_._internal_subscription_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.EventSubscription.subscription_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string subscriber_id = 2;
          if (!this_._internal_subscriber_id().empty()) {
            const std::string& _s = this_._internal_subscriber_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.EventSubscription.subscriber_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // repeated .seigr.event.EventType event_types = 3;
          {
            std::size_t byte_size =
                                              this_._impl_._event_types_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteEnumPacked(
                  3, this_._internal_event_types(), byte_size, target);
            }
          }

          // map<string, string> filters = 4;
          if (!this_._internal_filters().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_filters();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    4, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.EventSubscription.filters");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.EventSubscription.filters");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    4, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.EventSubscription.filters");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.EventSubscription.filters");
              }
            }
          }

          // string callback_url = 5;
          if (!this_._internal_callback_url().empty()) {
            const std::string& _s = this_._internal_callback_url();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.EventSubscription.callback_url");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // map<string, string> subscription_metadata = 6;
          if (!this_._internal_subscription_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_subscription_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.EventSubscription.subscription_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.EventSubscription.subscription_metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.EventSubscription.subscription_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.EventSubscription.subscription_metadata");
              }
            }
          }

          // string last_updated = 7;
          if (!this_._internal_last_updated().empty()) {
            const std::string& _s = this_._internal_last_updated();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.EventSubscription.last_updated");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // .seigr.event.EscalationLevel min_escalation_level = 8;
          if (this_._internal_min_escalation_level() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                8, this_._internal_min_escalation_level(), target);
          }

          // bool active = 9;
          if (this_._internal_active() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                9, this_._internal_active(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.event.EventSubscription)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EventSubscription::ByteSizeLong(const MessageLite& base) {
          const EventSubscription& this_ = static_cast<const EventSubscription&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EventSubscription::ByteSizeLong() const {
          const EventSubscription& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.event.EventSubscription)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .seigr.event.EventType event_types = 3;
            {
              total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
                  this_._internal_event_types(), 1, this_._impl_._event_types_cached_byte_size_);
            }
            // map<string, string> filters = 4;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_filters_size());
              for (const auto& entry : this_._internal_filters()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // map<string, string> subscription_metadata = 6;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_subscription_metadata_size());
              for (const auto& entry : this_._internal_subscription_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string subscription_id = 1;
            if (!this_._internal_subscription_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_subscription_id());
            }
            // string subscriber_id = 2;
            if (!this_._internal_subscriber_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_subscriber_id());
            }
            // string callback_url = 5;
            if (!this_._internal_callback_url().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_callback_url());
            }
            // string last_updated = 7;
            if (!this_._internal_last_updated().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_last_updated());
            }
            // .seigr.event.EscalationLevel min_escalation_level = 8;
            if (this_._internal_min_escalation_level() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_min_escalation_level());
            }
            // bool active = 9;
            if (this_._internal_active() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EventSubscription::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EventSubscription*>(&to_msg);
  auto& from = static_cast<const EventSubscription&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.event.EventSubscription)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_event_types()->MergeFrom(from._internal_event_types());
  _this->_impl_.filters_.MergeFrom(from._impl_.filters_);
  _this->_impl_.subscription_metadata_.MergeFrom(from._impl_.subscription_metadata_);
  if (!from._internal_subscription_id().empty()) {
    _this->_internal_set_subscription_id(from._internal_subscription_id());
  }
  if (!from._internal_subscriber_id().empty()) {
    _this->_internal_set_subscriber_id(from._internal_subscriber_id());
  }
  if (!from._internal_callback_url().empty()) {
    _this->_internal_set_callback_url(from._internal_callback_url());
  }
  if (!from._internal_last_updated().empty()) {
    _this->_internal_set_last_updated(from._internal_last_updated());
  }
  if (from._internal_min_escalation_level() != 0) {
    _this->_impl_.min_escalation_level_ = from._impl_.min_escalation_level_;
  }
  if (from._internal_active() != 0) {
    _this->_impl_.active_ = from._impl_.active_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EventSubscription::CopyFrom(const EventSubscription& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.event.EventSubscription)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EventSubscription::InternalSwap(EventSubscription* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.event_types_.InternalSwap(&other->_impl_.event_types_);
  _impl_.filters_.InternalSwap(&other->_impl_.filters_);
  _impl_.subscription_metadata_.InternalSwap(&other->_impl_.subscription_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.subscription_id_, &other->_impl_.subscription_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.subscriber_id_, &other->_impl_.subscriber_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.callback_url_, &other->_impl_.callback_url_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.last_updated_, &other->_impl_.last_updated_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EventSubscription, _impl_.active_)
      + sizeof(EventSubscription::_impl_.active_)
      - PROTOBUF_FIELD_OFFSET(EventSubscription, _impl_.min_escalation_level_)>(
          reinterpret_cast<char*>(&_impl_.min_escalation_level_),
          reinterpret_cast<char*>(&other->_impl_.min_escalation_level_));
}

::google::protobuf::Metadata EventSubscription::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              EventResponse_ResponseMetadataEntry_DoNotUse::EventResponse_ResponseMetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              EventResponse_ResponseMetadataEntry_DoNotUse::EventResponse_ResponseMetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              EventResponse_ResponseMetadataEntry_DoNotUse::EventResponse_ResponseMetadataEntry_DoNotUse() : SuperType() {}
              EventResponse_ResponseMetadataEntry_DoNotUse::EventResponse_ResponseMetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* EventResponse_ResponseMetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) EventResponse_ResponseMetadataEntry_DoNotUse(arena);
              }
              constexpr auto EventResponse_ResponseMetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(EventResponse_ResponseMetadataEntry_DoNotUse),
                                                          alignof(EventResponse_ResponseMetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull EventResponse_ResponseMetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_EventResponse_ResponseMetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &EventResponse_ResponseMetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<EventResponse_ResponseMetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &EventResponse_ResponseMetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &EventResponse_ResponseMetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(EventResponse_ResponseMetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &EventResponse_ResponseMetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_event_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* EventResponse_ResponseMetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 64, 2> EventResponse_ResponseMetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EventResponse_ResponseMetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::event::EventResponse_ResponseMetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(EventResponse_ResponseMetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EventResponse_ResponseMetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(EventResponse_ResponseMetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(EventResponse_ResponseMetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\57\3\5\0\0\0\0\0"
    "seigr.event.EventResponse.ResponseMetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class EventResponse::_Internal {
 public:
};

EventResponse::EventResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.event.EventResponse)
}
inline PROTOBUF_NDEBUG_INLINE EventResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::event::EventResponse& from_msg)
      : response_metadata_{visibility, arena, from.response_metadata_},
        response_id_(arena, from.response_id_),
        event_id_(arena, from.event_id_),
        responder_id_(arena, from.responder_id_),
        action_taken_(arena, from.action_taken_),
        response_timestamp_(arena, from.response_timestamp_),
        follow_up_action_id_(arena, from.follow_up_action_id_),
        _cached_size_{0} {}

EventResponse::EventResponse(
    ::google::protobuf::Arena* arena,
    const EventResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EventResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, requires_follow_up_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, requires_follow_up_),
           offsetof(Impl_, escalation_path_) -
               offsetof(Impl_, requires_follow_up_) +
               sizeof(Impl_::escalation_path_));

  // @@protoc_insertion_point(copy_constructor:seigr.event.EventResponse)
}
inline PROTOBUF_NDEBUG_INLINE EventResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : response_metadata_{visibility, arena},
        response_id_(arena),
        event_id_(arena),
        responder_id_(arena),
        action_taken_(arena),
        response_timestamp_(arena),
        follow_up_action_id_(arena),
        _cached_size_{0} {}

inline void EventResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, requires_follow_up_),
           0,
           offsetof(Impl_, escalation_path_) -
               offsetof(Impl_, requires_follow_up_) +
               sizeof(Impl_::escalation_path_));
}
EventResponse::~EventResponse() {
  // @@protoc_insertion_point(destructor:seigr.event.EventResponse)
  SharedDtor(*this);
}
inline void EventResponse::SharedDtor(MessageLite& self) {
  EventResponse& this_ = static_cast<EventResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.response_id_.Destroy();
  this_._impl_.event_id_.Destroy();
  this_._impl_.responder_id_.Destroy();
  this_._impl_.action_taken_.Destroy();
  this_._impl_.response_timestamp_.Destroy();
  this_._impl_.follow_up_action_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* EventResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EventResponse(arena);
}
constexpr auto EventResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(EventResponse, _impl_.response_metadata_) +
          decltype(EventResponse::_impl_.response_metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(EventResponse, _impl_.response_metadata_) +
          decltype(EventResponse::_impl_.response_metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(EventResponse), alignof(EventResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&EventResponse::PlacementNew_,
                                 sizeof(EventResponse),
                                 alignof(EventResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EventResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EventResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EventResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EventResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EventResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EventResponse>(), &EventResponse::ByteSizeLong,
            &EventResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EventResponse, _impl_._cached_size_),
        false,
    },
    &EventResponse::kDescriptorMethods,
    &descriptor_table_event_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EventResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 1, 139, 2> EventResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::event::EventResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string response_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EventResponse, _impl_.response_id_)}},
    // string event_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(EventResponse, _impl_.event_id_)}},
    // string responder_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(EventResponse, _impl_.responder_id_)}},
    // string action_taken = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(EventResponse, _impl_.action_taken_)}},
    // string response_timestamp = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(EventResponse, _impl_.response_timestamp_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // bool requires_follow_up = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(EventResponse, _impl_.requires_follow_up_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(EventResponse, _impl_.requires_follow_up_)}},
    // string follow_up_action_id = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(EventResponse, _impl_.follow_up_action_id_)}},
    // .seigr.event.EscalationLevel escalation_path = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EventResponse, _impl_.escalation_path_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(EventResponse, _impl_.escalation_path_)}},
    // bool resolved = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(EventResponse, _impl_.resolved_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(EventResponse, _impl_.resolved_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string response_id = 1;
    {PROTOBUF_FIELD_OFFSET(EventResponse, _impl_.response_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string event_id = 2;
    {PROTOBUF_FIELD_OFFSET(EventResponse, _impl_.event_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string responder_id = 3;
    {PROTOBUF_FIELD_OFFSET(EventResponse, _impl_.responder_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string action_taken = 4;
    {PROTOBUF_FIELD_OFFSET(EventResponse, _impl_.action_taken_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string response_timestamp = 5;
    {PROTOBUF_FIELD_OFFSET(EventResponse, _impl_.response_timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> response_metadata = 6;
    {PROTOBUF_FIELD_OFFSET(EventResponse, _impl_.response_metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // bool requires_follow_up = 7;
    {PROTOBUF_FIELD_OFFSET(EventResponse, _impl_.requires_follow_up_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string follow_up_action_id = 8;
    {PROTOBUF_FIELD_OFFSET(EventResponse, _impl_.follow_up_action_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.event.EscalationLevel escalation_path = 9;
    {PROTOBUF_FIELD_OFFSET(EventResponse, _impl_.escalation_path_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // bool resolved = 10;
    {PROTOBUF_FIELD_OFFSET(EventResponse, _impl_.resolved_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(EventResponse()._impl_.response_metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\31\13\10\14\14\22\21\0\23\0\0\0\0\0\0\0"
    "seigr.event.EventResponse"
    "response_id"
    "event_id"
    "responder_id"
    "action_taken"
    "response_timestamp"
    "response_metadata"
    "follow_up_action_id"
  }},
};

PROTOBUF_NOINLINE void EventResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.event.EventResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.response_metadata_.Clear();
  _impl_.response_id_.ClearToEmpty();
  _impl_.event_id_.ClearToEmpty();
  _impl_.responder_id_.ClearToEmpty();
  _impl_.action_taken_.ClearToEmpty();
  _impl_.response_timestamp_.ClearToEmpty();
  _impl_.follow_up_action_id_.ClearToEmpty();
  ::memset(&_impl_.requires_follow_up_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.escalation_path_) -
      reinterpret_cast<char*>(&_impl_.requires_follow_up_)) + sizeof(_impl_.escalation_path_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EventResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EventResponse& this_ = static_cast<const EventResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EventResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EventResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.event.EventResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string response_id = 1;
          if (!this_._internal_response_id().empty()) {
            const std::string& _s = this_._internal_response_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.EventResponse.response_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string event_id = 2;
          if (!this_._internal_event_id().empty()) {
            const std::string& _s = this_._internal_event_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.EventResponse.event_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string responder_id = 3;
          if (!this_._internal_responder_id().empty()) {
            const std::string& _s = this_._internal_responder_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.EventResponse.responder_id");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string action_taken = 4;
          if (!this_._internal_action_taken().empty()) {
            const std::string& _s = this_._internal_action_taken();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.EventResponse.action_taken");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string response_timestamp = 5;
          if (!this_._internal_response_timestamp().empty()) {
            const std::string& _s = this_._internal_response_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.EventResponse.response_timestamp");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // map<string, string> response_metadata = 6;
          if (!this_._internal_response_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_response_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.EventResponse.response_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.EventResponse.response_metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.EventResponse.response_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.EventResponse.response_metadata");
              }
            }
          }

          // bool requires_follow_up = 7;
          if (this_._internal_requires_follow_up() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                7, this_._internal_requires_follow_up(), target);
          }

          // string follow_up_action_id = 8;
          if (!this_._internal_follow_up_action_id().empty()) {
            const std::string& _s = this_._internal_follow_up_action_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.EventResponse.follow_up_action_id");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          // .seigr.event.EscalationLevel escalation_path = 9;
          if (this_._internal_escalation_path() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                9, this_._internal_escalation_path(), target);
          }

          // bool resolved = 10;
          if (this_._internal_resolved() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                10, this_._internal_resolved(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.event.EventResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EventResponse::ByteSizeLong(const MessageLite& base) {
          const EventResponse& this_ = static_cast<const EventResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EventResponse::ByteSizeLong() const {
          const EventResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.event.EventResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> response_metadata = 6;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_response_metadata_size());
              for (const auto& entry : this_._internal_response_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string response_id = 1;
            if (!this_._internal_response_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_response_id());
            }
            // string event_id = 2;
            if (!this_._internal_event_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_event_id());
            }
            // string responder_id = 3;
            if (!this_._internal_responder_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_responder_id());
            }
            // string action_taken = 4;
            if (!this_._internal_action_taken().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_action_taken());
            }
            // string response_timestamp = 5;
            if (!this_._internal_response_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_response_timestamp());
            }
            // string follow_up_action_id = 8;
            if (!this_._internal_follow_up_action_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_follow_up_action_id());
            }
            // bool requires_follow_up = 7;
            if (this_._internal_requires_follow_up() != 0) {
              total_size += 2;
            }
            // bool resolved = 10;
            if (this_._internal_resolved() != 0) {
              total_size += 2;
            }
            // .seigr.event.EscalationLevel escalation_path = 9;
            if (this_._internal_escalation_path() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_escalation_path());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EventResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EventResponse*>(&to_msg);
  auto& from = static_cast<const EventResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.event.EventResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.response_metadata_.MergeFrom(from._impl_.response_metadata_);
  if (!from._internal_response_id().empty()) {
    _this->_internal_set_response_id(from._internal_response_id());
  }
  if (!from._internal_event_id().empty()) {
    _this->_internal_set_event_id(from._internal_event_id());
  }
  if (!from._internal_responder_id().empty()) {
    _this->_internal_set_responder_id(from._internal_responder_id());
  }
  if (!from._internal_action_taken().empty()) {
    _this->_internal_set_action_taken(from._internal_action_taken());
  }
  if (!from._internal_response_timestamp().empty()) {
    _this->_internal_set_response_timestamp(from._internal_response_timestamp());
  }
  if (!from._internal_follow_up_action_id().empty()) {
    _this->_internal_set_follow_up_action_id(from._internal_follow_up_action_id());
  }
  if (from._internal_requires_follow_up() != 0) {
    _this->_impl_.requires_follow_up_ = from._impl_.requires_follow_up_;
  }
  if (from._internal_resolved() != 0) {
    _this->_impl_.resolved_ = from._impl_.resolved_;
  }
  if (from._internal_escalation_path() != 0) {
    _this->_impl_.escalation_path_ = from._impl_.escalation_path_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EventResponse::CopyFrom(const EventResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.event.EventResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EventResponse::InternalSwap(EventResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.response_metadata_.InternalSwap(&other->_impl_.response_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.response_id_, &other->_impl_.response_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.event_id_, &other->_impl_.event_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.responder_id_, &other->_impl_.responder_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.action_taken_, &other->_impl_.action_taken_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.response_timestamp_, &other->_impl_.response_timestamp_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.follow_up_action_id_, &other->_impl_.follow_up_action_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EventResponse, _impl_.escalation_path_)
      + sizeof(EventResponse::_impl_.escalation_path_)
      - PROTOBUF_FIELD_OFFSET(EventResponse, _impl_.requires_follow_up_)>(
          reinterpret_cast<char*>(&_impl_.requires_follow_up_),
          reinterpret_cast<char*>(&other->_impl_.requires_follow_up_));
}

::google::protobuf::Metadata EventResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              EscalationConfig_ConditionsEntry_DoNotUse::EscalationConfig_ConditionsEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              EscalationConfig_ConditionsEntry_DoNotUse::EscalationConfig_ConditionsEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              EscalationConfig_ConditionsEntry_DoNotUse::EscalationConfig_ConditionsEntry_DoNotUse() : SuperType() {}
              EscalationConfig_ConditionsEntry_DoNotUse::EscalationConfig_ConditionsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* EscalationConfig_ConditionsEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) EscalationConfig_ConditionsEntry_DoNotUse(arena);
              }
              constexpr auto EscalationConfig_ConditionsEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(EscalationConfig_ConditionsEntry_DoNotUse),
                                                          alignof(EscalationConfig_ConditionsEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull EscalationConfig_ConditionsEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_EscalationConfig_ConditionsEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &EscalationConfig_ConditionsEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<EscalationConfig_ConditionsEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &EscalationConfig_ConditionsEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &EscalationConfig_ConditionsEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(EscalationConfig_ConditionsEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &EscalationConfig_ConditionsEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_event_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* EscalationConfig_ConditionsEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 61, 2> EscalationConfig_ConditionsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EscalationConfig_ConditionsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::event::EscalationConfig_ConditionsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(EscalationConfig_ConditionsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EscalationConfig_ConditionsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(EscalationConfig_ConditionsEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(EscalationConfig_ConditionsEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\54\3\5\0\0\0\0\0"
    "seigr.event.EscalationConfig.ConditionsEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class EscalationConfig::_Internal {
 public:
};

EscalationConfig::EscalationConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.event.EscalationConfig)
}
inline PROTOBUF_NDEBUG_INLINE EscalationConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::event::EscalationConfig& from_msg)
      : conditions_{visibility, arena, from.conditions_},
        alert_recipients_{visibility, arena, from.alert_recipients_},
        escalation_path_id_(arena, from.escalation_path_id_),
        escalation_strategy_(arena, from.escalation_strategy_),
        _cached_size_{0} {}

EscalationConfig::EscalationConfig(
    ::google::protobuf::Arena* arena,
    const EscalationConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EscalationConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, level_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, level_),
           offsetof(Impl_, enable_automatic_responses_) -
               offsetof(Impl_, level_) +
               sizeof(Impl_::enable_automatic_responses_));

  // @@protoc_insertion_point(copy_constructor:seigr.event.EscalationConfig)
}
inline PROTOBUF_NDEBUG_INLINE EscalationConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : conditions_{visibility, arena},
        alert_recipients_{visibility, arena},
        escalation_path_id_(arena),
        escalation_strategy_(arena),
        _cached_size_{0} {}

inline void EscalationConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, level_),
           0,
           offsetof(Impl_, enable_automatic_responses_) -
               offsetof(Impl_, level_) +
               sizeof(Impl_::enable_automatic_responses_));
}
EscalationConfig::~EscalationConfig() {
  // @@protoc_insertion_point(destructor:seigr.event.EscalationConfig)
  SharedDtor(*this);
}
inline void EscalationConfig::SharedDtor(MessageLite& self) {
  EscalationConfig& this_ = static_cast<EscalationConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.escalation_path_id_.Destroy();
  this_._impl_.escalation_strategy_.Destroy();
  this_._impl_.~Impl_();
}

inline void* EscalationConfig::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EscalationConfig(arena);
}
constexpr auto EscalationConfig::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(EscalationConfig, _impl_.conditions_) +
          decltype(EscalationConfig::_impl_.conditions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(EscalationConfig, _impl_.conditions_) +
          decltype(EscalationConfig::_impl_.conditions_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(EscalationConfig, _impl_.alert_recipients_) +
          decltype(EscalationConfig::_impl_.alert_recipients_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(EscalationConfig), alignof(EscalationConfig), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&EscalationConfig::PlacementNew_,
                                 sizeof(EscalationConfig),
                                 alignof(EscalationConfig));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EscalationConfig::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EscalationConfig_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EscalationConfig::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EscalationConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EscalationConfig::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EscalationConfig>(), &EscalationConfig::ByteSizeLong,
            &EscalationConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EscalationConfig, _impl_._cached_size_),
        false,
    },
    &EscalationConfig::kDescriptorMethods,
    &descriptor_table_event_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EscalationConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 100, 2> EscalationConfig::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::event::EscalationConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .seigr.event.EscalationLevel level = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EscalationConfig, _impl_.level_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(EscalationConfig, _impl_.level_)}},
    // string escalation_path_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(EscalationConfig, _impl_.escalation_path_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated string alert_recipients = 4;
    {::_pbi::TcParser::FastUR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(EscalationConfig, _impl_.alert_recipients_)}},
    // string escalation_strategy = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(EscalationConfig, _impl_.escalation_strategy_)}},
    // bool enable_automatic_responses = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(EscalationConfig, _impl_.enable_automatic_responses_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(EscalationConfig, _impl_.enable_automatic_responses_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .seigr.event.EscalationLevel level = 1;
    {PROTOBUF_FIELD_OFFSET(EscalationConfig, _impl_.level_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string escalation_path_id = 2;
    {PROTOBUF_FIELD_OFFSET(EscalationConfig, _impl_.escalation_path_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> conditions = 3;
    {PROTOBUF_FIELD_OFFSET(EscalationConfig, _impl_.conditions_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // repeated string alert_recipients = 4;
    {PROTOBUF_FIELD_OFFSET(EscalationConfig, _impl_.alert_recipients_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // string escalation_strategy = 5;
    {PROTOBUF_FIELD_OFFSET(EscalationConfig, _impl_.escalation_strategy_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool enable_automatic_responses = 6;
    {PROTOBUF_FIELD_OFFSET(EscalationConfig, _impl_.enable_automatic_responses_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(EscalationConfig()._impl_.conditions_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\34\0\22\12\20\23\0\0"
    "seigr.event.EscalationConfig"
    "escalation_path_id"
    "conditions"
    "alert_recipients"
    "escalation_strategy"
  }},
};

PROTOBUF_NOINLINE void EscalationConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.event.EscalationConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.conditions_.Clear();
  _impl_.alert_recipients_.Clear();
  _impl_.escalation_path_id_.ClearToEmpty();
  _impl_.escalation_strategy_.ClearToEmpty();
  ::memset(&_impl_.level_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.enable_automatic_responses_) -
      reinterpret_cast<char*>(&_impl_.level_)) + sizeof(_impl_.enable_automatic_responses_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EscalationConfig::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EscalationConfig& this_ = static_cast<const EscalationConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EscalationConfig::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EscalationConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.event.EscalationConfig)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .seigr.event.EscalationLevel level = 1;
          if (this_._internal_level() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_level(), target);
          }

          // string escalation_path_id = 2;
          if (!this_._internal_escalation_path_id().empty()) {
            const std::string& _s = this_._internal_escalation_path_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.EscalationConfig.escalation_path_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // map<string, string> conditions = 3;
          if (!this_._internal_conditions().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_conditions();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    3, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.EscalationConfig.conditions");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.EscalationConfig.conditions");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    3, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.EscalationConfig.conditions");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.EscalationConfig.conditions");
              }
            }
          }

          // repeated string alert_recipients = 4;
          for (int i = 0, n = this_._internal_alert_recipients_size(); i < n; ++i) {
            const auto& s = this_._internal_alert_recipients().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.EscalationConfig.alert_recipients");
            target = stream->WriteString(4, s, target);
          }

          // string escalation_strategy = 5;
          if (!this_._internal_escalation_strategy().empty()) {
            const std::string& _s = this_._internal_escalation_strategy();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.EscalationConfig.escalation_strategy");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // bool enable_automatic_responses = 6;
          if (this_._internal_enable_automatic_responses() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                6, this_._internal_enable_automatic_responses(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.event.EscalationConfig)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EscalationConfig::ByteSizeLong(const MessageLite& base) {
          const EscalationConfig& this_ = static_cast<const EscalationConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EscalationConfig::ByteSizeLong() const {
          const EscalationConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.event.EscalationConfig)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> conditions = 3;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_conditions_size());
              for (const auto& entry : this_._internal_conditions()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // repeated string alert_recipients = 4;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_alert_recipients().size());
              for (int i = 0, n = this_._internal_alert_recipients().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_alert_recipients().Get(i));
              }
            }
          }
           {
            // string escalation_path_id = 2;
            if (!this_._internal_escalation_path_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_escalation_path_id());
            }
            // string escalation_strategy = 5;
            if (!this_._internal_escalation_strategy().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_escalation_strategy());
            }
            // .seigr.event.EscalationLevel level = 1;
            if (this_._internal_level() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_level());
            }
            // bool enable_automatic_responses = 6;
            if (this_._internal_enable_automatic_responses() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EscalationConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EscalationConfig*>(&to_msg);
  auto& from = static_cast<const EscalationConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.event.EscalationConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.conditions_.MergeFrom(from._impl_.conditions_);
  _this->_internal_mutable_alert_recipients()->MergeFrom(from._internal_alert_recipients());
  if (!from._internal_escalation_path_id().empty()) {
    _this->_internal_set_escalation_path_id(from._internal_escalation_path_id());
  }
  if (!from._internal_escalation_strategy().empty()) {
    _this->_internal_set_escalation_strategy(from._internal_escalation_strategy());
  }
  if (from._internal_level() != 0) {
    _this->_impl_.level_ = from._impl_.level_;
  }
  if (from._internal_enable_automatic_responses() != 0) {
    _this->_impl_.enable_automatic_responses_ = from._impl_.enable_automatic_responses_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EscalationConfig::CopyFrom(const EscalationConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.event.EscalationConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EscalationConfig::InternalSwap(EscalationConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.conditions_.InternalSwap(&other->_impl_.conditions_);
  _impl_.alert_recipients_.InternalSwap(&other->_impl_.alert_recipients_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.escalation_path_id_, &other->_impl_.escalation_path_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.escalation_strategy_, &other->_impl_.escalation_strategy_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EscalationConfig, _impl_.enable_automatic_responses_)
      + sizeof(EscalationConfig::_impl_.enable_automatic_responses_)
      - PROTOBUF_FIELD_OFFSET(EscalationConfig, _impl_.level_)>(
          reinterpret_cast<char*>(&_impl_.level_),
          reinterpret_cast<char*>(&other->_impl_.level_));
}

::google::protobuf::Metadata EscalationConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              EventLog_LogMetadataEntry_DoNotUse::EventLog_LogMetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              EventLog_LogMetadataEntry_DoNotUse::EventLog_LogMetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              EventLog_LogMetadataEntry_DoNotUse::EventLog_LogMetadataEntry_DoNotUse() : SuperType() {}
              EventLog_LogMetadataEntry_DoNotUse::EventLog_LogMetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* EventLog_LogMetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) EventLog_LogMetadataEntry_DoNotUse(arena);
              }
              constexpr auto EventLog_LogMetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(EventLog_LogMetadataEntry_DoNotUse),
                                                          alignof(EventLog_LogMetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull EventLog_LogMetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_EventLog_LogMetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &EventLog_LogMetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<EventLog_LogMetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &EventLog_LogMetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &EventLog_LogMetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(EventLog_LogMetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &EventLog_LogMetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_event_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* EventLog_LogMetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 54, 2> EventLog_LogMetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EventLog_LogMetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::event::EventLog_LogMetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(EventLog_LogMetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EventLog_LogMetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(EventLog_LogMetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(EventLog_LogMetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\45\3\5\0\0\0\0\0"
    "seigr.event.EventLog.LogMetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class EventLog::_Internal {
 public:
};

EventLog::EventLog(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.event.EventLog)
}
inline PROTOBUF_NDEBUG_INLINE EventLog::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::event::EventLog& from_msg)
      : log_metadata_{visibility, arena, from.log_metadata_},
        log_id_(arena, from.log_id_),
        event_id_(arena, from.event_id_),
        logged_at_(arena, from.logged_at_),
        logger_id_(arena, from.logger_id_),
        log_message_(arena, from.log_message_),
        _cached_size_{0} {}

EventLog::EventLog(
    ::google::protobuf::Arena* arena,
    const EventLog& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EventLog* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, logged_escalation_level_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, logged_escalation_level_),
           offsetof(Impl_, is_resolved_) -
               offsetof(Impl_, logged_escalation_level_) +
               sizeof(Impl_::is_resolved_));

  // @@protoc_insertion_point(copy_constructor:seigr.event.EventLog)
}
inline PROTOBUF_NDEBUG_INLINE EventLog::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : log_metadata_{visibility, arena},
        log_id_(arena),
        event_id_(arena),
        logged_at_(arena),
        logger_id_(arena),
        log_message_(arena),
        _cached_size_{0} {}

inline void EventLog::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, logged_escalation_level_),
           0,
           offsetof(Impl_, is_resolved_) -
               offsetof(Impl_, logged_escalation_level_) +
               sizeof(Impl_::is_resolved_));
}
EventLog::~EventLog() {
  // @@protoc_insertion_point(destructor:seigr.event.EventLog)
  SharedDtor(*this);
}
inline void EventLog::SharedDtor(MessageLite& self) {
  EventLog& this_ = static_cast<EventLog&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.log_id_.Destroy();
  this_._impl_.event_id_.Destroy();
  this_._impl_.logged_at_.Destroy();
  this_._impl_.logger_id_.Destroy();
  this_._impl_.log_message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* EventLog::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EventLog(arena);
}
constexpr auto EventLog::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(EventLog, _impl_.log_metadata_) +
          decltype(EventLog::_impl_.log_metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(EventLog, _impl_.log_metadata_) +
          decltype(EventLog::_impl_.log_metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(EventLog), alignof(EventLog), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&EventLog::PlacementNew_,
                                 sizeof(EventLog),
                                 alignof(EventLog));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EventLog::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EventLog_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EventLog::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EventLog>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EventLog::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EventLog>(), &EventLog::ByteSizeLong,
            &EventLog::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EventLog, _impl_._cached_size_),
        false,
    },
    &EventLog::kDescriptorMethods,
    &descriptor_table_event_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EventLog::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 1, 92, 2> EventLog::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::event::EventLog>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool is_resolved = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(EventLog, _impl_.is_resolved_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(EventLog, _impl_.is_resolved_)}},
    // string log_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EventLog, _impl_.log_id_)}},
    // string event_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(EventLog, _impl_.event_id_)}},
    // string logged_at = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(EventLog, _impl_.logged_at_)}},
    // string logger_id = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(EventLog, _impl_.logger_id_)}},
    // string log_message = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(EventLog, _impl_.log_message_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .seigr.event.EscalationLevel logged_escalation_level = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EventLog, _impl_.logged_escalation_level_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(EventLog, _impl_.logged_escalation_level_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string log_id = 1;
    {PROTOBUF_FIELD_OFFSET(EventLog, _impl_.log_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string event_id = 2;
    {PROTOBUF_FIELD_OFFSET(EventLog, _impl_.event_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string logged_at = 3;
    {PROTOBUF_FIELD_OFFSET(EventLog, _impl_.logged_at_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string logger_id = 4;
    {PROTOBUF_FIELD_OFFSET(EventLog, _impl_.logger_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string log_message = 5;
    {PROTOBUF_FIELD_OFFSET(EventLog, _impl_.log_message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> log_metadata = 6;
    {PROTOBUF_FIELD_OFFSET(EventLog, _impl_.log_metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // .seigr.event.EscalationLevel logged_escalation_level = 7;
    {PROTOBUF_FIELD_OFFSET(EventLog, _impl_.logged_escalation_level_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // bool is_resolved = 8;
    {PROTOBUF_FIELD_OFFSET(EventLog, _impl_.is_resolved_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(EventLog()._impl_.log_metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\24\6\10\11\11\13\14\0\0\0\0\0\0\0\0\0"
    "seigr.event.EventLog"
    "log_id"
    "event_id"
    "logged_at"
    "logger_id"
    "log_message"
    "log_metadata"
  }},
};

PROTOBUF_NOINLINE void EventLog::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.event.EventLog)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.log_metadata_.Clear();
  _impl_.log_id_.ClearToEmpty();
  _impl_.event_id_.ClearToEmpty();
  _impl_.logged_at_.ClearToEmpty();
  _impl_.logger_id_.ClearToEmpty();
  _impl_.log_message_.ClearToEmpty();
  ::memset(&_impl_.logged_escalation_level_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.is_resolved_) -
      reinterpret_cast<char*>(&_impl_.logged_escalation_level_)) + sizeof(_impl_.is_resolved_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EventLog::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EventLog& this_ = static_cast<const EventLog&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EventLog::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EventLog& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.event.EventLog)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string log_id = 1;
          if (!this_._internal_log_id().empty()) {
            const std::string& _s = this_._internal_log_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.EventLog.log_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string event_id = 2;
          if (!this_._internal_event_id().empty()) {
            const std::string& _s = this_._internal_event_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.EventLog.event_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string logged_at = 3;
          if (!this_._internal_logged_at().empty()) {
            const std::string& _s = this_._internal_logged_at();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.EventLog.logged_at");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string logger_id = 4;
          if (!this_._internal_logger_id().empty()) {
            const std::string& _s = this_._internal_logger_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.EventLog.logger_id");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string log_message = 5;
          if (!this_._internal_log_message().empty()) {
            const std::string& _s = this_._internal_log_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.EventLog.log_message");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // map<string, string> log_metadata = 6;
          if (!this_._internal_log_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_log_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.EventLog.log_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.EventLog.log_metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.EventLog.log_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.EventLog.log_metadata");
              }
            }
          }

          // .seigr.event.EscalationLevel logged_escalation_level = 7;
          if (this_._internal_logged_escalation_level() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                7, this_._internal_logged_escalation_level(), target);
          }

          // bool is_resolved = 8;
          if (this_._internal_is_resolved() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                8, this_._internal_is_resolved(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.event.EventLog)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EventLog::ByteSizeLong(const MessageLite& base) {
          const EventLog& this_ = static_cast<const EventLog&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EventLog::ByteSizeLong() const {
          const EventLog& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.event.EventLog)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> log_metadata = 6;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_log_metadata_size());
              for (const auto& entry : this_._internal_log_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string log_id = 1;
            if (!this_._internal_log_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_log_id());
            }
            // string event_id = 2;
            if (!this_._internal_event_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_event_id());
            }
            // string logged_at = 3;
            if (!this_._internal_logged_at().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_logged_at());
            }
            // string logger_id = 4;
            if (!this_._internal_logger_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_logger_id());
            }
            // string log_message = 5;
            if (!this_._internal_log_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_log_message());
            }
            // .seigr.event.EscalationLevel logged_escalation_level = 7;
            if (this_._internal_logged_escalation_level() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_logged_escalation_level());
            }
            // bool is_resolved = 8;
            if (this_._internal_is_resolved() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EventLog::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EventLog*>(&to_msg);
  auto& from = static_cast<const EventLog&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.event.EventLog)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.log_metadata_.MergeFrom(from._impl_.log_metadata_);
  if (!from._internal_log_id().empty()) {
    _this->_internal_set_log_id(from._internal_log_id());
  }
  if (!from._internal_event_id().empty()) {
    _this->_internal_set_event_id(from._internal_event_id());
  }
  if (!from._internal_logged_at().empty()) {
    _this->_internal_set_logged_at(from._internal_logged_at());
  }
  if (!from._internal_logger_id().empty()) {
    _this->_internal_set_logger_id(from._internal_logger_id());
  }
  if (!from._internal_log_message().empty()) {
    _this->_internal_set_log_message(from._internal_log_message());
  }
  if (from._internal_logged_escalation_level() != 0) {
    _this->_impl_.logged_escalation_level_ = from._impl_.logged_escalation_level_;
  }
  if (from._internal_is_resolved() != 0) {
    _this->_impl_.is_resolved_ = from._impl_.is_resolved_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EventLog::CopyFrom(const EventLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.event.EventLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EventLog::InternalSwap(EventLog* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.log_metadata_.InternalSwap(&other->_impl_.log_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.log_id_, &other->_impl_.log_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.event_id_, &other->_impl_.event_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.logged_at_, &other->_impl_.logged_at_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.logger_id_, &other->_impl_.logger_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.log_message_, &other->_impl_.log_message_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EventLog, _impl_.is_resolved_)
      + sizeof(EventLog::_impl_.is_resolved_)
      - PROTOBUF_FIELD_OFFSET(EventLog, _impl_.logged_escalation_level_)>(
          reinterpret_cast<char*>(&_impl_.logged_escalation_level_),
          reinterpret_cast<char*>(&other->_impl_.logged_escalation_level_));
}

::google::protobuf::Metadata EventLog::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscriptionAck::_Internal {
 public:
};

SubscriptionAck::SubscriptionAck(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.event.SubscriptionAck)
}
inline PROTOBUF_NDEBUG_INLINE SubscriptionAck::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::event::SubscriptionAck& from_msg)
      : subscription_id_(arena, from.subscription_id_),
        message_(arena, from.message_),
        _cached_size_{0} {}

SubscriptionAck::SubscriptionAck(
    ::google::protobuf::Arena* arena,
    const SubscriptionAck& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscriptionAck* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:seigr.event.SubscriptionAck)
}
inline PROTOBUF_NDEBUG_INLINE SubscriptionAck::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : subscription_id_(arena),
        message_(arena),
        _cached_size_{0} {}

inline void SubscriptionAck::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
SubscriptionAck::~SubscriptionAck() {
  // @@protoc_insertion_point(destructor:seigr.event.SubscriptionAck)
  SharedDtor(*this);
}
inline void SubscriptionAck::SharedDtor(MessageLite& self) {
  SubscriptionAck& this_ = static_cast<SubscriptionAck&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.subscription_id_.Destroy();
  this_._impl_.message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* SubscriptionAck::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubscriptionAck(arena);
}
constexpr auto SubscriptionAck::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SubscriptionAck),
                                            alignof(SubscriptionAck));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubscriptionAck::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubscriptionAck_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubscriptionAck::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SubscriptionAck>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubscriptionAck::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SubscriptionAck>(), &SubscriptionAck::ByteSizeLong,
            &SubscriptionAck::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubscriptionAck, _impl_._cached_size_),
        false,
    },
    &SubscriptionAck::kDescriptorMethods,
    &descriptor_table_event_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubscriptionAck::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 58, 2> SubscriptionAck::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::event::SubscriptionAck>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string subscription_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SubscriptionAck, _impl_.subscription_id_)}},
    // bool success = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SubscriptionAck, _impl_.success_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SubscriptionAck, _impl_.success_)}},
    // string message = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(SubscriptionAck, _impl_.message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string subscription_id = 1;
    {PROTOBUF_FIELD_OFFSET(SubscriptionAck, _impl_.subscription_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool success = 2;
    {PROTOBUF_FIELD_OFFSET(SubscriptionAck, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string message = 3;
    {PROTOBUF_FIELD_OFFSET(SubscriptionAck, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\33\17\0\7\0\0\0\0"
    "seigr.event.SubscriptionAck"
    "subscription_id"
    "message"
  }},
};

PROTOBUF_NOINLINE void SubscriptionAck::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.event.SubscriptionAck)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.subscription_id_.ClearToEmpty();
  _impl_.message_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SubscriptionAck::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SubscriptionAck& this_ = static_cast<const SubscriptionAck&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SubscriptionAck::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SubscriptionAck& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.event.SubscriptionAck)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string subscription_id = 1;
          if (!this_._internal_subscription_id().empty()) {
            const std::string& _s = this_._internal_subscription_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.SubscriptionAck.subscription_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // bool success = 2;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                2, this_._internal_success(), target);
          }

          // string message = 3;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.SubscriptionAck.message");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.event.SubscriptionAck)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SubscriptionAck::ByteSizeLong(const MessageLite& base) {
          const SubscriptionAck& this_ = static_cast<const SubscriptionAck&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SubscriptionAck::ByteSizeLong() const {
          const SubscriptionAck& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.event.SubscriptionAck)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string subscription_id = 1;
            if (!this_._internal_subscription_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_subscription_id());
            }
            // string message = 3;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
            // bool success = 2;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SubscriptionAck::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubscriptionAck*>(&to_msg);
  auto& from = static_cast<const SubscriptionAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.event.SubscriptionAck)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_subscription_id().empty()) {
    _this->_internal_set_subscription_id(from._internal_subscription_id());
  }
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubscriptionAck::CopyFrom(const SubscriptionAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.event.SubscriptionAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubscriptionAck::InternalSwap(SubscriptionAck* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.subscription_id_, &other->_impl_.subscription_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata SubscriptionAck::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AcknowledgeRequest::_Internal {
 public:
};

AcknowledgeRequest::AcknowledgeRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.event.AcknowledgeRequest)
}
inline PROTOBUF_NDEBUG_INLINE AcknowledgeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::event::AcknowledgeRequest& from_msg)
      : event_id_(arena, from.event_id_),
        subscriber_id_(arena, from.subscriber_id_),
        acknowledgment_timestamp_(arena, from.acknowledgment_timestamp_),
        _cached_size_{0} {}

AcknowledgeRequest::AcknowledgeRequest(
    ::google::protobuf::Arena* arena,
    const AcknowledgeRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AcknowledgeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:seigr.event.AcknowledgeRequest)
}
inline PROTOBUF_NDEBUG_INLINE AcknowledgeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : event_id_(arena),
        subscriber_id_(arena),
        acknowledgment_timestamp_(arena),
        _cached_size_{0} {}

inline void AcknowledgeRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AcknowledgeRequest::~AcknowledgeRequest() {
  // @@protoc_insertion_point(destructor:seigr.event.AcknowledgeRequest)
  SharedDtor(*this);
}
inline void AcknowledgeRequest::SharedDtor(MessageLite& self) {
  AcknowledgeRequest& this_ = static_cast<AcknowledgeRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.event_id_.Destroy();
  this_._impl_.subscriber_id_.Destroy();
  this_._impl_.acknowledgment_timestamp_.Destroy();
  this_._impl_.~Impl_();
}

inline void* AcknowledgeRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AcknowledgeRequest(arena);
}
constexpr auto AcknowledgeRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AcknowledgeRequest),
                                            alignof(AcknowledgeRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AcknowledgeRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AcknowledgeRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AcknowledgeRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AcknowledgeRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AcknowledgeRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AcknowledgeRequest>(), &AcknowledgeRequest::ByteSizeLong,
            &AcknowledgeRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AcknowledgeRequest, _impl_._cached_size_),
        false,
    },
    &AcknowledgeRequest::kDescriptorMethods,
    &descriptor_table_event_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AcknowledgeRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 84, 2> AcknowledgeRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::event::AcknowledgeRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string event_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AcknowledgeRequest, _impl_.event_id_)}},
    // string subscriber_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AcknowledgeRequest, _impl_.subscriber_id_)}},
    // string acknowledgment_timestamp = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(AcknowledgeRequest, _impl_.acknowledgment_timestamp_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string event_id = 1;
    {PROTOBUF_FIELD_OFFSET(AcknowledgeRequest, _impl_.event_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string subscriber_id = 2;
    {PROTOBUF_FIELD_OFFSET(AcknowledgeRequest, _impl_.subscriber_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string acknowledgment_timestamp = 3;
    {PROTOBUF_FIELD_OFFSET(AcknowledgeRequest, _impl_.acknowledgment_timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\36\10\15\30\0\0\0\0"
    "seigr.event.AcknowledgeRequest"
    "event_id"
    "subscriber_id"
    "acknowledgment_timestamp"
  }},
};

PROTOBUF_NOINLINE void AcknowledgeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.event.AcknowledgeRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.event_id_.ClearToEmpty();
  _impl_.subscriber_id_.ClearToEmpty();
  _impl_.acknowledgment_timestamp_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AcknowledgeRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AcknowledgeRequest& this_ = static_cast<const AcknowledgeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AcknowledgeRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AcknowledgeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.event.AcknowledgeRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string event_id = 1;
          if (!this_._internal_event_id().empty()) {
            const std::string& _s = this_._internal_event_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.AcknowledgeRequest.event_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string subscriber_id = 2;
          if (!this_._internal_subscriber_id().empty()) {
            const std::string& _s = this_._internal_subscriber_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.AcknowledgeRequest.subscriber_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string acknowledgment_timestamp = 3;
          if (!this_._internal_acknowledgment_timestamp().empty()) {
            const std::string& _s = this_._internal_acknowledgment_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.AcknowledgeRequest.acknowledgment_timestamp");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.event.AcknowledgeRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AcknowledgeRequest::ByteSizeLong(const MessageLite& base) {
          const AcknowledgeRequest& this_ = static_cast<const AcknowledgeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AcknowledgeRequest::ByteSizeLong() const {
          const AcknowledgeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.event.AcknowledgeRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string event_id = 1;
            if (!this_._internal_event_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_event_id());
            }
            // string subscriber_id = 2;
            if (!this_._internal_subscriber_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_subscriber_id());
            }
            // string acknowledgment_timestamp = 3;
            if (!this_._internal_acknowledgment_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_acknowledgment_timestamp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AcknowledgeRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AcknowledgeRequest*>(&to_msg);
  auto& from = static_cast<const AcknowledgeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.event.AcknowledgeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_event_id().empty()) {
    _this->_internal_set_event_id(from._internal_event_id());
  }
  if (!from._internal_subscriber_id().empty()) {
    _this->_internal_set_subscriber_id(from._internal_subscriber_id());
  }
  if (!from._internal_acknowledgment_timestamp().empty()) {
    _this->_internal_set_acknowledgment_timestamp(from._internal_acknowledgment_timestamp());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AcknowledgeRequest::CopyFrom(const AcknowledgeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.event.AcknowledgeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AcknowledgeRequest::InternalSwap(AcknowledgeRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.event_id_, &other->_impl_.event_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.subscriber_id_, &other->_impl_.subscriber_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.acknowledgment_timestamp_, &other->_impl_.acknowledgment_timestamp_, arena);
}

::google::protobuf::Metadata AcknowledgeRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AcknowledgeResponse::_Internal {
 public:
};

AcknowledgeResponse::AcknowledgeResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.event.AcknowledgeResponse)
}
inline PROTOBUF_NDEBUG_INLINE AcknowledgeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::event::AcknowledgeResponse& from_msg)
      : message_(arena, from.message_),
        _cached_size_{0} {}

AcknowledgeResponse::AcknowledgeResponse(
    ::google::protobuf::Arena* arena,
    const AcknowledgeResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AcknowledgeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:seigr.event.AcknowledgeResponse)
}
inline PROTOBUF_NDEBUG_INLINE AcknowledgeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_(arena),
        _cached_size_{0} {}

inline void AcknowledgeResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
AcknowledgeResponse::~AcknowledgeResponse() {
  // @@protoc_insertion_point(destructor:seigr.event.AcknowledgeResponse)
  SharedDtor(*this);
}
inline void AcknowledgeResponse::SharedDtor(MessageLite& self) {
  AcknowledgeResponse& this_ = static_cast<AcknowledgeResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* AcknowledgeResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AcknowledgeResponse(arena);
}
constexpr auto AcknowledgeResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AcknowledgeResponse),
                                            alignof(AcknowledgeResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AcknowledgeResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AcknowledgeResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AcknowledgeResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AcknowledgeResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AcknowledgeResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AcknowledgeResponse>(), &AcknowledgeResponse::ByteSizeLong,
            &AcknowledgeResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AcknowledgeResponse, _impl_._cached_size_),
        false,
    },
    &AcknowledgeResponse::kDescriptorMethods,
    &descriptor_table_event_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AcknowledgeResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 47, 2> AcknowledgeResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::event::AcknowledgeResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AcknowledgeResponse, _impl_.message_)}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AcknowledgeResponse, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AcknowledgeResponse, _impl_.success_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(AcknowledgeResponse, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(AcknowledgeResponse, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\37\0\7\0\0\0\0\0"
    "seigr.event.AcknowledgeResponse"
    "message"
  }},
};

PROTOBUF_NOINLINE void AcknowledgeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.event.AcknowledgeResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AcknowledgeResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AcknowledgeResponse& this_ = static_cast<const AcknowledgeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AcknowledgeResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AcknowledgeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.event.AcknowledgeResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool success = 1;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_success(), target);
          }

          // string message = 2;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.AcknowledgeResponse.message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.event.AcknowledgeResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AcknowledgeResponse::ByteSizeLong(const MessageLite& base) {
          const AcknowledgeResponse& this_ = static_cast<const AcknowledgeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AcknowledgeResponse::ByteSizeLong() const {
          const AcknowledgeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.event.AcknowledgeResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string message = 2;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
            // bool success = 1;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AcknowledgeResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AcknowledgeResponse*>(&to_msg);
  auto& from = static_cast<const AcknowledgeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.event.AcknowledgeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AcknowledgeResponse::CopyFrom(const AcknowledgeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.event.AcknowledgeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AcknowledgeResponse::InternalSwap(AcknowledgeResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata AcknowledgeResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EventLogRequest::_Internal {
 public:
};

EventLogRequest::EventLogRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.event.EventLogRequest)
}
inline PROTOBUF_NDEBUG_INLINE EventLogRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::event::EventLogRequest& from_msg)
      : filters_{visibility, arena, from.filters_},
        event_id_(arena, from.event_id_),
        time_range_start_(arena, from.time_range_start_),
        time_range_end_(arena, from.time_range_end_),
        _cached_size_{0} {}

EventLogRequest::EventLogRequest(
    ::google::protobuf::Arena* arena,
    const EventLogRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EventLogRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:seigr.event.EventLogRequest)
}
inline PROTOBUF_NDEBUG_INLINE EventLogRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : filters_{visibility, arena},
        event_id_(arena),
        time_range_start_(arena),
        time_range_end_(arena),
        _cached_size_{0} {}

inline void EventLogRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
EventLogRequest::~EventLogRequest() {
  // @@protoc_insertion_point(destructor:seigr.event.EventLogRequest)
  SharedDtor(*this);
}
inline void EventLogRequest::SharedDtor(MessageLite& self) {
  EventLogRequest& this_ = static_cast<EventLogRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.event_id_.Destroy();
  this_._impl_.time_range_start_.Destroy();
  this_._impl_.time_range_end_.Destroy();
  this_._impl_.~Impl_();
}

inline void* EventLogRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EventLogRequest(arena);
}
constexpr auto EventLogRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(EventLogRequest, _impl_.filters_) +
          decltype(EventLogRequest::_impl_.filters_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(EventLogRequest), alignof(EventLogRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&EventLogRequest::PlacementNew_,
                                 sizeof(EventLogRequest),
                                 alignof(EventLogRequest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EventLogRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EventLogRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EventLogRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EventLogRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EventLogRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EventLogRequest>(), &EventLogRequest::ByteSizeLong,
            &EventLogRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EventLogRequest, _impl_._cached_size_),
        false,
    },
    &EventLogRequest::kDescriptorMethods,
    &descriptor_table_event_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EventLogRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 81, 2> EventLogRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::event::EventLogRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string filters = 4;
    {::_pbi::TcParser::FastUR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(EventLogRequest, _impl_.filters_)}},
    // string event_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EventLogRequest, _impl_.event_id_)}},
    // string time_range_start = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(EventLogRequest, _impl_.time_range_start_)}},
    // string time_range_end = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(EventLogRequest, _impl_.time_range_end_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string event_id = 1;
    {PROTOBUF_FIELD_OFFSET(EventLogRequest, _impl_.event_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string time_range_start = 2;
    {PROTOBUF_FIELD_OFFSET(EventLogRequest, _impl_.time_range_start_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string time_range_end = 3;
    {PROTOBUF_FIELD_OFFSET(EventLogRequest, _impl_.time_range_end_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string filters = 4;
    {PROTOBUF_FIELD_OFFSET(EventLogRequest, _impl_.filters_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\33\10\20\16\7\0\0\0"
    "seigr.event.EventLogRequest"
    "event_id"
    "time_range_start"
    "time_range_end"
    "filters"
  }},
};

PROTOBUF_NOINLINE void EventLogRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.event.EventLogRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.filters_.Clear();
  _impl_.event_id_.ClearToEmpty();
  _impl_.time_range_start_.ClearToEmpty();
  _impl_.time_range_end_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EventLogRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EventLogRequest& this_ = static_cast<const EventLogRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EventLogRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EventLogRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.event.EventLogRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string event_id = 1;
          if (!this_._internal_event_id().empty()) {
            const std::string& _s = this_._internal_event_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.EventLogRequest.event_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string time_range_start = 2;
          if (!this_._internal_time_range_start().empty()) {
            const std::string& _s = this_._internal_time_range_start();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.EventLogRequest.time_range_start");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string time_range_end = 3;
          if (!this_._internal_time_range_end().empty()) {
            const std::string& _s = this_._internal_time_range_end();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.EventLogRequest.time_range_end");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // repeated string filters = 4;
          for (int i = 0, n = this_._internal_filters_size(); i < n; ++i) {
            const auto& s = this_._internal_filters().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.EventLogRequest.filters");
            target = stream->WriteString(4, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.event.EventLogRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EventLogRequest::ByteSizeLong(const MessageLite& base) {
          const EventLogRequest& this_ = static_cast<const EventLogRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EventLogRequest::ByteSizeLong() const {
          const EventLogRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.event.EventLogRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string filters = 4;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_filters().size());
              for (int i = 0, n = this_._internal_filters().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_filters().Get(i));
              }
            }
          }
           {
            // string event_id = 1;
            if (!this_._internal_event_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_event_id());
            }
            // string time_range_start = 2;
            if (!this_._internal_time_range_start().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_time_range_start());
            }
            // string time_range_end = 3;
            if (!this_._internal_time_range_end().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_time_range_end());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EventLogRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EventLogRequest*>(&to_msg);
  auto& from = static_cast<const EventLogRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.event.EventLogRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_filters()->MergeFrom(from._internal_filters());
  if (!from._internal_event_id().empty()) {
    _this->_internal_set_event_id(from._internal_event_id());
  }
  if (!from._internal_time_range_start().empty()) {
    _this->_internal_set_time_range_start(from._internal_time_range_start());
  }
  if (!from._internal_time_range_end().empty()) {
    _this->_internal_set_time_range_end(from._internal_time_range_end());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EventLogRequest::CopyFrom(const EventLogRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.event.EventLogRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EventLogRequest::InternalSwap(EventLogRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.filters_.InternalSwap(&other->_impl_.filters_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.event_id_, &other->_impl_.event_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.time_range_start_, &other->_impl_.time_range_start_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.time_range_end_, &other->_impl_.time_range_end_, arena);
}

::google::protobuf::Metadata EventLogRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EventLogResponse::_Internal {
 public:
};

EventLogResponse::EventLogResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.event.EventLogResponse)
}
inline PROTOBUF_NDEBUG_INLINE EventLogResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::event::EventLogResponse& from_msg)
      : logs_{visibility, arena, from.logs_},
        status_(arena, from.status_),
        message_(arena, from.message_),
        _cached_size_{0} {}

EventLogResponse::EventLogResponse(
    ::google::protobuf::Arena* arena,
    const EventLogResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EventLogResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:seigr.event.EventLogResponse)
}
inline PROTOBUF_NDEBUG_INLINE EventLogResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : logs_{visibility, arena},
        status_(arena),
        message_(arena),
        _cached_size_{0} {}

inline void EventLogResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
EventLogResponse::~EventLogResponse() {
  // @@protoc_insertion_point(destructor:seigr.event.EventLogResponse)
  SharedDtor(*this);
}
inline void EventLogResponse::SharedDtor(MessageLite& self) {
  EventLogResponse& this_ = static_cast<EventLogResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.status_.Destroy();
  this_._impl_.message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* EventLogResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EventLogResponse(arena);
}
constexpr auto EventLogResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(EventLogResponse, _impl_.logs_) +
          decltype(EventLogResponse::_impl_.logs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(EventLogResponse), alignof(EventLogResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&EventLogResponse::PlacementNew_,
                                 sizeof(EventLogResponse),
                                 alignof(EventLogResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EventLogResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EventLogResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EventLogResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EventLogResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EventLogResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EventLogResponse>(), &EventLogResponse::ByteSizeLong,
            &EventLogResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EventLogResponse, _impl_._cached_size_),
        false,
    },
    &EventLogResponse::kDescriptorMethods,
    &descriptor_table_event_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EventLogResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 50, 2> EventLogResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::event::EventLogResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .seigr.event.EventLog logs = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EventLogResponse, _impl_.logs_)}},
    // string status = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(EventLogResponse, _impl_.status_)}},
    // string message = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(EventLogResponse, _impl_.message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .seigr.event.EventLog logs = 1;
    {PROTOBUF_FIELD_OFFSET(EventLogResponse, _impl_.logs_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string status = 2;
    {PROTOBUF_FIELD_OFFSET(EventLogResponse, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string message = 3;
    {PROTOBUF_FIELD_OFFSET(EventLogResponse, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::seigr::event::EventLog>()},
  }}, {{
    "\34\0\6\7\0\0\0\0"
    "seigr.event.EventLogResponse"
    "status"
    "message"
  }},
};

PROTOBUF_NOINLINE void EventLogResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.event.EventLogResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.logs_.Clear();
  _impl_.status_.ClearToEmpty();
  _impl_.message_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EventLogResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EventLogResponse& this_ = static_cast<const EventLogResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EventLogResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EventLogResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.event.EventLogResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .seigr.event.EventLog logs = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_logs_size());
               i < n; i++) {
            const auto& repfield = this_._internal_logs().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // string status = 2;
          if (!this_._internal_status().empty()) {
            const std::string& _s = this_._internal_status();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.EventLogResponse.status");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string message = 3;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.event.EventLogResponse.message");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.event.EventLogResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EventLogResponse::ByteSizeLong(const MessageLite& base) {
          const EventLogResponse& this_ = static_cast<const EventLogResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EventLogResponse::ByteSizeLong() const {
          const EventLogResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.event.EventLogResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .seigr.event.EventLog logs = 1;
            {
              total_size += 1UL * this_._internal_logs_size();
              for (const auto& msg : this_._internal_logs()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string status = 2;
            if (!this_._internal_status().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_status());
            }
            // string message = 3;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EventLogResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EventLogResponse*>(&to_msg);
  auto& from = static_cast<const EventLogResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.event.EventLogResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_logs()->MergeFrom(
      from._internal_logs());
  if (!from._internal_status().empty()) {
    _this->_internal_set_status(from._internal_status());
  }
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EventLogResponse::CopyFrom(const EventLogResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.event.EventLogResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EventLogResponse::InternalSwap(EventLogResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.logs_.InternalSwap(&other->_impl_.logs_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.status_, &other->_impl_.status_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
}

::google::protobuf::Metadata EventLogResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace event
}  // namespace seigr
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_event_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
