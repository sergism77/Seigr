// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: lineage.proto
// Protobuf C++ Version: 5.29.2

#ifndef lineage_2eproto_2epb_2eh
#define lineage_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "segment_metadata.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_lineage_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_lineage_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_lineage_2eproto;
namespace seigr {
namespace lineage {
class Lineage;
struct LineageDefaultTypeInternal;
extern LineageDefaultTypeInternal _Lineage_default_instance_;
class LineageAuditTrail;
struct LineageAuditTrailDefaultTypeInternal;
extern LineageAuditTrailDefaultTypeInternal _LineageAuditTrail_default_instance_;
class LineageAuditTrail_AuditMetadataEntry_DoNotUse;
struct LineageAuditTrail_AuditMetadataEntry_DoNotUseDefaultTypeInternal;
extern LineageAuditTrail_AuditMetadataEntry_DoNotUseDefaultTypeInternal _LineageAuditTrail_AuditMetadataEntry_DoNotUse_default_instance_;
class LineageEntry;
struct LineageEntryDefaultTypeInternal;
extern LineageEntryDefaultTypeInternal _LineageEntry_default_instance_;
class LineageEntry_AdaptiveConditionsEntry_DoNotUse;
struct LineageEntry_AdaptiveConditionsEntry_DoNotUseDefaultTypeInternal;
extern LineageEntry_AdaptiveConditionsEntry_DoNotUseDefaultTypeInternal _LineageEntry_AdaptiveConditionsEntry_DoNotUse_default_instance_;
class LineageEntry_ContextDataEntry_DoNotUse;
struct LineageEntry_ContextDataEntry_DoNotUseDefaultTypeInternal;
extern LineageEntry_ContextDataEntry_DoNotUseDefaultTypeInternal _LineageEntry_ContextDataEntry_DoNotUse_default_instance_;
class LineageEntry_MetadataEntry_DoNotUse;
struct LineageEntry_MetadataEntry_DoNotUseDefaultTypeInternal;
extern LineageEntry_MetadataEntry_DoNotUseDefaultTypeInternal _LineageEntry_MetadataEntry_DoNotUse_default_instance_;
class LineageValidationSummary;
struct LineageValidationSummaryDefaultTypeInternal;
extern LineageValidationSummaryDefaultTypeInternal _LineageValidationSummary_default_instance_;
class LineageValidationSummary_ValidationMetadataEntry_DoNotUse;
struct LineageValidationSummary_ValidationMetadataEntry_DoNotUseDefaultTypeInternal;
extern LineageValidationSummary_ValidationMetadataEntry_DoNotUseDefaultTypeInternal _LineageValidationSummary_ValidationMetadataEntry_DoNotUse_default_instance_;
class Lineage_AdaptiveTriggersEntry_DoNotUse;
struct Lineage_AdaptiveTriggersEntry_DoNotUseDefaultTypeInternal;
extern Lineage_AdaptiveTriggersEntry_DoNotUseDefaultTypeInternal _Lineage_AdaptiveTriggersEntry_DoNotUse_default_instance_;
class Lineage_MetadataEntry_DoNotUse;
struct Lineage_MetadataEntry_DoNotUseDefaultTypeInternal;
extern Lineage_MetadataEntry_DoNotUseDefaultTypeInternal _Lineage_MetadataEntry_DoNotUse_default_instance_;
class TemporalLayer;
struct TemporalLayerDefaultTypeInternal;
extern TemporalLayerDefaultTypeInternal _TemporalLayer_default_instance_;
class TemporalLayer_DataSnapshotEntry_DoNotUse;
struct TemporalLayer_DataSnapshotEntry_DoNotUseDefaultTypeInternal;
extern TemporalLayer_DataSnapshotEntry_DoNotUseDefaultTypeInternal _TemporalLayer_DataSnapshotEntry_DoNotUse_default_instance_;
class TemporalLayer_MetadataEntry_DoNotUse;
struct TemporalLayer_MetadataEntry_DoNotUseDefaultTypeInternal;
extern TemporalLayer_MetadataEntry_DoNotUseDefaultTypeInternal _TemporalLayer_MetadataEntry_DoNotUse_default_instance_;
}  // namespace lineage
}  // namespace seigr
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace seigr {
namespace lineage {
enum LineageType : int {
  STANDARD = 0,
  BRANCHED = 1,
  MERGED = 2,
  ARCHIVED = 3,
  LineageType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  LineageType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool LineageType_IsValid(int value);
extern const uint32_t LineageType_internal_data_[];
constexpr LineageType LineageType_MIN = static_cast<LineageType>(0);
constexpr LineageType LineageType_MAX = static_cast<LineageType>(3);
constexpr int LineageType_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
LineageType_descriptor();
template <typename T>
const std::string& LineageType_Name(T value) {
  static_assert(std::is_same<T, LineageType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to LineageType_Name().");
  return LineageType_Name(static_cast<LineageType>(value));
}
template <>
inline const std::string& LineageType_Name(LineageType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<LineageType_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool LineageType_Parse(absl::string_view name, LineageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LineageType>(
      LineageType_descriptor(), name, value);
}
enum EntryType : int {
  CREATION = 0,
  MODIFICATION = 1,
  MERGE = 2,
  DELETION = 3,
  FORK = 4,
  RESTORE = 5,
  SNAPSHOT = 6,
  ADAPTIVE_UPDATE = 7,
  EntryType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  EntryType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool EntryType_IsValid(int value);
extern const uint32_t EntryType_internal_data_[];
constexpr EntryType EntryType_MIN = static_cast<EntryType>(0);
constexpr EntryType EntryType_MAX = static_cast<EntryType>(7);
constexpr int EntryType_ARRAYSIZE = 7 + 1;
const ::google::protobuf::EnumDescriptor*
EntryType_descriptor();
template <typename T>
const std::string& EntryType_Name(T value) {
  static_assert(std::is_same<T, EntryType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to EntryType_Name().");
  return EntryType_Name(static_cast<EntryType>(value));
}
template <>
inline const std::string& EntryType_Name(EntryType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<EntryType_descriptor,
                                                 0, 7>(
      static_cast<int>(value));
}
inline bool EntryType_Parse(absl::string_view name, EntryType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EntryType>(
      EntryType_descriptor(), name, value);
}
enum LineageStatus : int {
  LINEAGE_STATUS_UNDEFINED = 0,
  LINEAGE_ACTIVE = 1,
  LINEAGE_ARCHIVED = 2,
  LINEAGE_LOCKED = 3,
  LINEAGE_RETIRED = 4,
  LineageStatus_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  LineageStatus_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool LineageStatus_IsValid(int value);
extern const uint32_t LineageStatus_internal_data_[];
constexpr LineageStatus LineageStatus_MIN = static_cast<LineageStatus>(0);
constexpr LineageStatus LineageStatus_MAX = static_cast<LineageStatus>(4);
constexpr int LineageStatus_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor*
LineageStatus_descriptor();
template <typename T>
const std::string& LineageStatus_Name(T value) {
  static_assert(std::is_same<T, LineageStatus>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to LineageStatus_Name().");
  return LineageStatus_Name(static_cast<LineageStatus>(value));
}
template <>
inline const std::string& LineageStatus_Name(LineageStatus value) {
  return ::google::protobuf::internal::NameOfDenseEnum<LineageStatus_descriptor,
                                                 0, 4>(
      static_cast<int>(value));
}
inline bool LineageStatus_Parse(absl::string_view name, LineageStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LineageStatus>(
      LineageStatus_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class TemporalLayer_MetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  TemporalLayer_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TemporalLayer_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TemporalLayer_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const TemporalLayer_MetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TemporalLayer_MetadataEntry_DoNotUse*>(
        &_TemporalLayer_MetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_lineage_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      58, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class TemporalLayer_DataSnapshotEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_BYTES> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES>;
  TemporalLayer_DataSnapshotEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TemporalLayer_DataSnapshotEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TemporalLayer_DataSnapshotEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const TemporalLayer_DataSnapshotEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TemporalLayer_DataSnapshotEntry_DoNotUse*>(
        &_TemporalLayer_DataSnapshotEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_lineage_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      57, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class LineageValidationSummary_ValidationMetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  LineageValidationSummary_ValidationMetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LineageValidationSummary_ValidationMetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit LineageValidationSummary_ValidationMetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const LineageValidationSummary_ValidationMetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const LineageValidationSummary_ValidationMetadataEntry_DoNotUse*>(
        &_LineageValidationSummary_ValidationMetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_lineage_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      79, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class LineageEntry_MetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  LineageEntry_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LineageEntry_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit LineageEntry_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const LineageEntry_MetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const LineageEntry_MetadataEntry_DoNotUse*>(
        &_LineageEntry_MetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_lineage_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      57, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class LineageEntry_ContextDataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  LineageEntry_ContextDataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LineageEntry_ContextDataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit LineageEntry_ContextDataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const LineageEntry_ContextDataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const LineageEntry_ContextDataEntry_DoNotUse*>(
        &_LineageEntry_ContextDataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_lineage_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      60, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class LineageEntry_AdaptiveConditionsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  LineageEntry_AdaptiveConditionsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LineageEntry_AdaptiveConditionsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit LineageEntry_AdaptiveConditionsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const LineageEntry_AdaptiveConditionsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const LineageEntry_AdaptiveConditionsEntry_DoNotUse*>(
        &_LineageEntry_AdaptiveConditionsEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_lineage_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      67, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class LineageAuditTrail_AuditMetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  LineageAuditTrail_AuditMetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LineageAuditTrail_AuditMetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit LineageAuditTrail_AuditMetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const LineageAuditTrail_AuditMetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const LineageAuditTrail_AuditMetadataEntry_DoNotUse*>(
        &_LineageAuditTrail_AuditMetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_lineage_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      67, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class Lineage_MetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  Lineage_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Lineage_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit Lineage_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const Lineage_MetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const Lineage_MetadataEntry_DoNotUse*>(
        &_Lineage_MetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_lineage_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      52, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class Lineage_AdaptiveTriggersEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  Lineage_AdaptiveTriggersEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Lineage_AdaptiveTriggersEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit Lineage_AdaptiveTriggersEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const Lineage_AdaptiveTriggersEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const Lineage_AdaptiveTriggersEntry_DoNotUse*>(
        &_Lineage_AdaptiveTriggersEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_lineage_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      60, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class LineageValidationSummary final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.lineage.LineageValidationSummary) */ {
 public:
  inline LineageValidationSummary() : LineageValidationSummary(nullptr) {}
  ~LineageValidationSummary() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LineageValidationSummary* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LineageValidationSummary));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LineageValidationSummary(
      ::google::protobuf::internal::ConstantInitialized);

  inline LineageValidationSummary(const LineageValidationSummary& from) : LineageValidationSummary(nullptr, from) {}
  inline LineageValidationSummary(LineageValidationSummary&& from) noexcept
      : LineageValidationSummary(nullptr, std::move(from)) {}
  inline LineageValidationSummary& operator=(const LineageValidationSummary& from) {
    CopyFrom(from);
    return *this;
  }
  inline LineageValidationSummary& operator=(LineageValidationSummary&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LineageValidationSummary& default_instance() {
    return *internal_default_instance();
  }
  static inline const LineageValidationSummary* internal_default_instance() {
    return reinterpret_cast<const LineageValidationSummary*>(
        &_LineageValidationSummary_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(LineageValidationSummary& a, LineageValidationSummary& b) { a.Swap(&b); }
  inline void Swap(LineageValidationSummary* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LineageValidationSummary* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LineageValidationSummary* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LineageValidationSummary>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LineageValidationSummary& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LineageValidationSummary& from) { LineageValidationSummary::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LineageValidationSummary* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.lineage.LineageValidationSummary"; }

 protected:
  explicit LineageValidationSummary(::google::protobuf::Arena* arena);
  LineageValidationSummary(::google::protobuf::Arena* arena, const LineageValidationSummary& from);
  LineageValidationSummary(::google::protobuf::Arena* arena, LineageValidationSummary&& from) noexcept
      : LineageValidationSummary(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kWarningsFieldNumber = 4,
    kErrorsFieldNumber = 5,
    kValidationMetadataFieldNumber = 9,
    kDependencyChecksFieldNumber = 11,
    kValidationIdFieldNumber = 1,
    kLineageIdFieldNumber = 2,
    kValidationTimestampFieldNumber = 6,
    kValidatedByFieldNumber = 7,
    kIntegrityChecksumFieldNumber = 8,
    kRecommendedActionFieldNumber = 10,
    kRollbackAdviceFieldNumber = 12,
    kValidationSuccessfulFieldNumber = 3,
  };
  // repeated string warnings = 4;
  int warnings_size() const;
  private:
  int _internal_warnings_size() const;

  public:
  void clear_warnings() ;
  const std::string& warnings(int index) const;
  std::string* mutable_warnings(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_warnings(int index, Arg_&& value, Args_... args);
  std::string* add_warnings();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_warnings(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& warnings() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_warnings();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_warnings() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_warnings();

  public:
  // repeated string errors = 5;
  int errors_size() const;
  private:
  int _internal_errors_size() const;

  public:
  void clear_errors() ;
  const std::string& errors(int index) const;
  std::string* mutable_errors(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_errors(int index, Arg_&& value, Args_... args);
  std::string* add_errors();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_errors(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& errors() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_errors();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_errors() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_errors();

  public:
  // map<string, string> validation_metadata = 9;
  int validation_metadata_size() const;
  private:
  int _internal_validation_metadata_size() const;

  public:
  void clear_validation_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& validation_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_validation_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_validation_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_validation_metadata();

  public:
  // repeated string dependency_checks = 11;
  int dependency_checks_size() const;
  private:
  int _internal_dependency_checks_size() const;

  public:
  void clear_dependency_checks() ;
  const std::string& dependency_checks(int index) const;
  std::string* mutable_dependency_checks(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_dependency_checks(int index, Arg_&& value, Args_... args);
  std::string* add_dependency_checks();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_dependency_checks(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& dependency_checks() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_dependency_checks();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_dependency_checks() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_dependency_checks();

  public:
  // string validation_id = 1;
  void clear_validation_id() ;
  const std::string& validation_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_validation_id(Arg_&& arg, Args_... args);
  std::string* mutable_validation_id();
  PROTOBUF_NODISCARD std::string* release_validation_id();
  void set_allocated_validation_id(std::string* value);

  private:
  const std::string& _internal_validation_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_validation_id(
      const std::string& value);
  std::string* _internal_mutable_validation_id();

  public:
  // string lineage_id = 2;
  void clear_lineage_id() ;
  const std::string& lineage_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_lineage_id(Arg_&& arg, Args_... args);
  std::string* mutable_lineage_id();
  PROTOBUF_NODISCARD std::string* release_lineage_id();
  void set_allocated_lineage_id(std::string* value);

  private:
  const std::string& _internal_lineage_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_lineage_id(
      const std::string& value);
  std::string* _internal_mutable_lineage_id();

  public:
  // string validation_timestamp = 6;
  void clear_validation_timestamp() ;
  const std::string& validation_timestamp() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_validation_timestamp(Arg_&& arg, Args_... args);
  std::string* mutable_validation_timestamp();
  PROTOBUF_NODISCARD std::string* release_validation_timestamp();
  void set_allocated_validation_timestamp(std::string* value);

  private:
  const std::string& _internal_validation_timestamp() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_validation_timestamp(
      const std::string& value);
  std::string* _internal_mutable_validation_timestamp();

  public:
  // string validated_by = 7;
  void clear_validated_by() ;
  const std::string& validated_by() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_validated_by(Arg_&& arg, Args_... args);
  std::string* mutable_validated_by();
  PROTOBUF_NODISCARD std::string* release_validated_by();
  void set_allocated_validated_by(std::string* value);

  private:
  const std::string& _internal_validated_by() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_validated_by(
      const std::string& value);
  std::string* _internal_mutable_validated_by();

  public:
  // string integrity_checksum = 8;
  void clear_integrity_checksum() ;
  const std::string& integrity_checksum() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_integrity_checksum(Arg_&& arg, Args_... args);
  std::string* mutable_integrity_checksum();
  PROTOBUF_NODISCARD std::string* release_integrity_checksum();
  void set_allocated_integrity_checksum(std::string* value);

  private:
  const std::string& _internal_integrity_checksum() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_integrity_checksum(
      const std::string& value);
  std::string* _internal_mutable_integrity_checksum();

  public:
  // string recommended_action = 10;
  void clear_recommended_action() ;
  const std::string& recommended_action() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_recommended_action(Arg_&& arg, Args_... args);
  std::string* mutable_recommended_action();
  PROTOBUF_NODISCARD std::string* release_recommended_action();
  void set_allocated_recommended_action(std::string* value);

  private:
  const std::string& _internal_recommended_action() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_recommended_action(
      const std::string& value);
  std::string* _internal_mutable_recommended_action();

  public:
  // string rollback_advice = 12;
  void clear_rollback_advice() ;
  const std::string& rollback_advice() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_rollback_advice(Arg_&& arg, Args_... args);
  std::string* mutable_rollback_advice();
  PROTOBUF_NODISCARD std::string* release_rollback_advice();
  void set_allocated_rollback_advice(std::string* value);

  private:
  const std::string& _internal_rollback_advice() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_rollback_advice(
      const std::string& value);
  std::string* _internal_mutable_rollback_advice();

  public:
  // bool validation_successful = 3;
  void clear_validation_successful() ;
  bool validation_successful() const;
  void set_validation_successful(bool value);

  private:
  bool _internal_validation_successful() const;
  void _internal_set_validation_successful(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.lineage.LineageValidationSummary)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 12, 1,
      211, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LineageValidationSummary& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> warnings_;
    ::google::protobuf::RepeatedPtrField<std::string> errors_;
    ::google::protobuf::internal::MapField<LineageValidationSummary_ValidationMetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        validation_metadata_;
    ::google::protobuf::RepeatedPtrField<std::string> dependency_checks_;
    ::google::protobuf::internal::ArenaStringPtr validation_id_;
    ::google::protobuf::internal::ArenaStringPtr lineage_id_;
    ::google::protobuf::internal::ArenaStringPtr validation_timestamp_;
    ::google::protobuf::internal::ArenaStringPtr validated_by_;
    ::google::protobuf::internal::ArenaStringPtr integrity_checksum_;
    ::google::protobuf::internal::ArenaStringPtr recommended_action_;
    ::google::protobuf::internal::ArenaStringPtr rollback_advice_;
    bool validation_successful_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lineage_2eproto;
};
// -------------------------------------------------------------------

class LineageEntry final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.lineage.LineageEntry) */ {
 public:
  inline LineageEntry() : LineageEntry(nullptr) {}
  ~LineageEntry() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LineageEntry* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LineageEntry));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LineageEntry(
      ::google::protobuf::internal::ConstantInitialized);

  inline LineageEntry(const LineageEntry& from) : LineageEntry(nullptr, from) {}
  inline LineageEntry(LineageEntry&& from) noexcept
      : LineageEntry(nullptr, std::move(from)) {}
  inline LineageEntry& operator=(const LineageEntry& from) {
    CopyFrom(from);
    return *this;
  }
  inline LineageEntry& operator=(LineageEntry&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LineageEntry& default_instance() {
    return *internal_default_instance();
  }
  static inline const LineageEntry* internal_default_instance() {
    return reinterpret_cast<const LineageEntry*>(
        &_LineageEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(LineageEntry& a, LineageEntry& b) { a.Swap(&b); }
  inline void Swap(LineageEntry* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LineageEntry* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LineageEntry* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LineageEntry>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LineageEntry& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LineageEntry& from) { LineageEntry::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LineageEntry* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.lineage.LineageEntry"; }

 protected:
  explicit LineageEntry(::google::protobuf::Arena* arena);
  LineageEntry(::google::protobuf::Arena* arena, const LineageEntry& from);
  LineageEntry(::google::protobuf::Arena* arena, LineageEntry&& from) noexcept
      : LineageEntry(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPreviousHashesFieldNumber = 8,
    kMetadataFieldNumber = 11,
    kDependencyIdsFieldNumber = 14,
    kContextDataFieldNumber = 15,
    kAssociatedFilesFieldNumber = 16,
    kResolvedDependenciesFieldNumber = 19,
    kAdaptiveConditionsFieldNumber = 21,
    kEntryIdFieldNumber = 1,
    kEntryVersionFieldNumber = 2,
    kActionFieldNumber = 4,
    kCreatorIdFieldNumber = 5,
    kContributorIdFieldNumber = 6,
    kTimestampFieldNumber = 7,
    kParentIdFieldNumber = 9,
    kEventTriggerFieldNumber = 10,
    kEntryChecksumFieldNumber = 12,
    kExternalReferenceIdFieldNumber = 13,
    kConflictResolutionStrategyFieldNumber = 18,
    kRevisionNotesFieldNumber = 20,
    kRollbackCheckpointFieldNumber = 22,
    kEntryTypeFieldNumber = 3,
    kAdaptiveUpdateFlagFieldNumber = 17,
  };
  // repeated string previous_hashes = 8;
  int previous_hashes_size() const;
  private:
  int _internal_previous_hashes_size() const;

  public:
  void clear_previous_hashes() ;
  const std::string& previous_hashes(int index) const;
  std::string* mutable_previous_hashes(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_previous_hashes(int index, Arg_&& value, Args_... args);
  std::string* add_previous_hashes();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_previous_hashes(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& previous_hashes() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_previous_hashes();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_previous_hashes() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_previous_hashes();

  public:
  // map<string, string> metadata = 11;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // repeated string dependency_ids = 14;
  int dependency_ids_size() const;
  private:
  int _internal_dependency_ids_size() const;

  public:
  void clear_dependency_ids() ;
  const std::string& dependency_ids(int index) const;
  std::string* mutable_dependency_ids(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_dependency_ids(int index, Arg_&& value, Args_... args);
  std::string* add_dependency_ids();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_dependency_ids(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& dependency_ids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_dependency_ids();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_dependency_ids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_dependency_ids();

  public:
  // map<string, string> context_data = 15;
  int context_data_size() const;
  private:
  int _internal_context_data_size() const;

  public:
  void clear_context_data() ;
  const ::google::protobuf::Map<std::string, std::string>& context_data() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_context_data();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_context_data() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_context_data();

  public:
  // repeated string associated_files = 16;
  int associated_files_size() const;
  private:
  int _internal_associated_files_size() const;

  public:
  void clear_associated_files() ;
  const std::string& associated_files(int index) const;
  std::string* mutable_associated_files(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_associated_files(int index, Arg_&& value, Args_... args);
  std::string* add_associated_files();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_associated_files(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& associated_files() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_associated_files();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_associated_files() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_associated_files();

  public:
  // repeated string resolved_dependencies = 19;
  int resolved_dependencies_size() const;
  private:
  int _internal_resolved_dependencies_size() const;

  public:
  void clear_resolved_dependencies() ;
  const std::string& resolved_dependencies(int index) const;
  std::string* mutable_resolved_dependencies(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_resolved_dependencies(int index, Arg_&& value, Args_... args);
  std::string* add_resolved_dependencies();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_resolved_dependencies(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& resolved_dependencies() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_resolved_dependencies();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_resolved_dependencies() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_resolved_dependencies();

  public:
  // map<string, string> adaptive_conditions = 21;
  int adaptive_conditions_size() const;
  private:
  int _internal_adaptive_conditions_size() const;

  public:
  void clear_adaptive_conditions() ;
  const ::google::protobuf::Map<std::string, std::string>& adaptive_conditions() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_adaptive_conditions();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_adaptive_conditions() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_adaptive_conditions();

  public:
  // string entry_id = 1;
  void clear_entry_id() ;
  const std::string& entry_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_entry_id(Arg_&& arg, Args_... args);
  std::string* mutable_entry_id();
  PROTOBUF_NODISCARD std::string* release_entry_id();
  void set_allocated_entry_id(std::string* value);

  private:
  const std::string& _internal_entry_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_entry_id(
      const std::string& value);
  std::string* _internal_mutable_entry_id();

  public:
  // string entry_version = 2;
  void clear_entry_version() ;
  const std::string& entry_version() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_entry_version(Arg_&& arg, Args_... args);
  std::string* mutable_entry_version();
  PROTOBUF_NODISCARD std::string* release_entry_version();
  void set_allocated_entry_version(std::string* value);

  private:
  const std::string& _internal_entry_version() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_entry_version(
      const std::string& value);
  std::string* _internal_mutable_entry_version();

  public:
  // string action = 4;
  void clear_action() ;
  const std::string& action() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_action(Arg_&& arg, Args_... args);
  std::string* mutable_action();
  PROTOBUF_NODISCARD std::string* release_action();
  void set_allocated_action(std::string* value);

  private:
  const std::string& _internal_action() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_action(
      const std::string& value);
  std::string* _internal_mutable_action();

  public:
  // string creator_id = 5;
  void clear_creator_id() ;
  const std::string& creator_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_creator_id(Arg_&& arg, Args_... args);
  std::string* mutable_creator_id();
  PROTOBUF_NODISCARD std::string* release_creator_id();
  void set_allocated_creator_id(std::string* value);

  private:
  const std::string& _internal_creator_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_creator_id(
      const std::string& value);
  std::string* _internal_mutable_creator_id();

  public:
  // string contributor_id = 6;
  void clear_contributor_id() ;
  const std::string& contributor_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_contributor_id(Arg_&& arg, Args_... args);
  std::string* mutable_contributor_id();
  PROTOBUF_NODISCARD std::string* release_contributor_id();
  void set_allocated_contributor_id(std::string* value);

  private:
  const std::string& _internal_contributor_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_contributor_id(
      const std::string& value);
  std::string* _internal_mutable_contributor_id();

  public:
  // string timestamp = 7;
  void clear_timestamp() ;
  const std::string& timestamp() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_timestamp(Arg_&& arg, Args_... args);
  std::string* mutable_timestamp();
  PROTOBUF_NODISCARD std::string* release_timestamp();
  void set_allocated_timestamp(std::string* value);

  private:
  const std::string& _internal_timestamp() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_timestamp(
      const std::string& value);
  std::string* _internal_mutable_timestamp();

  public:
  // string parent_id = 9;
  void clear_parent_id() ;
  const std::string& parent_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_parent_id(Arg_&& arg, Args_... args);
  std::string* mutable_parent_id();
  PROTOBUF_NODISCARD std::string* release_parent_id();
  void set_allocated_parent_id(std::string* value);

  private:
  const std::string& _internal_parent_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_parent_id(
      const std::string& value);
  std::string* _internal_mutable_parent_id();

  public:
  // string event_trigger = 10;
  void clear_event_trigger() ;
  const std::string& event_trigger() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_event_trigger(Arg_&& arg, Args_... args);
  std::string* mutable_event_trigger();
  PROTOBUF_NODISCARD std::string* release_event_trigger();
  void set_allocated_event_trigger(std::string* value);

  private:
  const std::string& _internal_event_trigger() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_event_trigger(
      const std::string& value);
  std::string* _internal_mutable_event_trigger();

  public:
  // string entry_checksum = 12;
  void clear_entry_checksum() ;
  const std::string& entry_checksum() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_entry_checksum(Arg_&& arg, Args_... args);
  std::string* mutable_entry_checksum();
  PROTOBUF_NODISCARD std::string* release_entry_checksum();
  void set_allocated_entry_checksum(std::string* value);

  private:
  const std::string& _internal_entry_checksum() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_entry_checksum(
      const std::string& value);
  std::string* _internal_mutable_entry_checksum();

  public:
  // string external_reference_id = 13;
  void clear_external_reference_id() ;
  const std::string& external_reference_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_external_reference_id(Arg_&& arg, Args_... args);
  std::string* mutable_external_reference_id();
  PROTOBUF_NODISCARD std::string* release_external_reference_id();
  void set_allocated_external_reference_id(std::string* value);

  private:
  const std::string& _internal_external_reference_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_external_reference_id(
      const std::string& value);
  std::string* _internal_mutable_external_reference_id();

  public:
  // string conflict_resolution_strategy = 18;
  void clear_conflict_resolution_strategy() ;
  const std::string& conflict_resolution_strategy() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_conflict_resolution_strategy(Arg_&& arg, Args_... args);
  std::string* mutable_conflict_resolution_strategy();
  PROTOBUF_NODISCARD std::string* release_conflict_resolution_strategy();
  void set_allocated_conflict_resolution_strategy(std::string* value);

  private:
  const std::string& _internal_conflict_resolution_strategy() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_conflict_resolution_strategy(
      const std::string& value);
  std::string* _internal_mutable_conflict_resolution_strategy();

  public:
  // string revision_notes = 20;
  void clear_revision_notes() ;
  const std::string& revision_notes() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_revision_notes(Arg_&& arg, Args_... args);
  std::string* mutable_revision_notes();
  PROTOBUF_NODISCARD std::string* release_revision_notes();
  void set_allocated_revision_notes(std::string* value);

  private:
  const std::string& _internal_revision_notes() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_revision_notes(
      const std::string& value);
  std::string* _internal_mutable_revision_notes();

  public:
  // string rollback_checkpoint = 22;
  void clear_rollback_checkpoint() ;
  const std::string& rollback_checkpoint() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_rollback_checkpoint(Arg_&& arg, Args_... args);
  std::string* mutable_rollback_checkpoint();
  PROTOBUF_NODISCARD std::string* release_rollback_checkpoint();
  void set_allocated_rollback_checkpoint(std::string* value);

  private:
  const std::string& _internal_rollback_checkpoint() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_rollback_checkpoint(
      const std::string& value);
  std::string* _internal_mutable_rollback_checkpoint();

  public:
  // .seigr.lineage.EntryType entry_type = 3;
  void clear_entry_type() ;
  ::seigr::lineage::EntryType entry_type() const;
  void set_entry_type(::seigr::lineage::EntryType value);

  private:
  ::seigr::lineage::EntryType _internal_entry_type() const;
  void _internal_set_entry_type(::seigr::lineage::EntryType value);

  public:
  // bool adaptive_update_flag = 17;
  void clear_adaptive_update_flag() ;
  bool adaptive_update_flag() const;
  void set_adaptive_update_flag(bool value);

  private:
  bool _internal_adaptive_update_flag() const;
  void _internal_set_adaptive_update_flag(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.lineage.LineageEntry)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 22, 3,
      334, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LineageEntry& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> previous_hashes_;
    ::google::protobuf::internal::MapField<LineageEntry_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::RepeatedPtrField<std::string> dependency_ids_;
    ::google::protobuf::internal::MapField<LineageEntry_ContextDataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        context_data_;
    ::google::protobuf::RepeatedPtrField<std::string> associated_files_;
    ::google::protobuf::RepeatedPtrField<std::string> resolved_dependencies_;
    ::google::protobuf::internal::MapField<LineageEntry_AdaptiveConditionsEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        adaptive_conditions_;
    ::google::protobuf::internal::ArenaStringPtr entry_id_;
    ::google::protobuf::internal::ArenaStringPtr entry_version_;
    ::google::protobuf::internal::ArenaStringPtr action_;
    ::google::protobuf::internal::ArenaStringPtr creator_id_;
    ::google::protobuf::internal::ArenaStringPtr contributor_id_;
    ::google::protobuf::internal::ArenaStringPtr timestamp_;
    ::google::protobuf::internal::ArenaStringPtr parent_id_;
    ::google::protobuf::internal::ArenaStringPtr event_trigger_;
    ::google::protobuf::internal::ArenaStringPtr entry_checksum_;
    ::google::protobuf::internal::ArenaStringPtr external_reference_id_;
    ::google::protobuf::internal::ArenaStringPtr conflict_resolution_strategy_;
    ::google::protobuf::internal::ArenaStringPtr revision_notes_;
    ::google::protobuf::internal::ArenaStringPtr rollback_checkpoint_;
    int entry_type_;
    bool adaptive_update_flag_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lineage_2eproto;
};
// -------------------------------------------------------------------

class LineageAuditTrail final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.lineage.LineageAuditTrail) */ {
 public:
  inline LineageAuditTrail() : LineageAuditTrail(nullptr) {}
  ~LineageAuditTrail() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LineageAuditTrail* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LineageAuditTrail));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LineageAuditTrail(
      ::google::protobuf::internal::ConstantInitialized);

  inline LineageAuditTrail(const LineageAuditTrail& from) : LineageAuditTrail(nullptr, from) {}
  inline LineageAuditTrail(LineageAuditTrail&& from) noexcept
      : LineageAuditTrail(nullptr, std::move(from)) {}
  inline LineageAuditTrail& operator=(const LineageAuditTrail& from) {
    CopyFrom(from);
    return *this;
  }
  inline LineageAuditTrail& operator=(LineageAuditTrail&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LineageAuditTrail& default_instance() {
    return *internal_default_instance();
  }
  static inline const LineageAuditTrail* internal_default_instance() {
    return reinterpret_cast<const LineageAuditTrail*>(
        &_LineageAuditTrail_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(LineageAuditTrail& a, LineageAuditTrail& b) { a.Swap(&b); }
  inline void Swap(LineageAuditTrail* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LineageAuditTrail* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LineageAuditTrail* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LineageAuditTrail>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LineageAuditTrail& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LineageAuditTrail& from) { LineageAuditTrail::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LineageAuditTrail* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.lineage.LineageAuditTrail"; }

 protected:
  explicit LineageAuditTrail(::google::protobuf::Arena* arena);
  LineageAuditTrail(::google::protobuf::Arena* arena, const LineageAuditTrail& from);
  LineageAuditTrail(::google::protobuf::Arena* arena, LineageAuditTrail&& from) noexcept
      : LineageAuditTrail(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAuditMetadataFieldNumber = 7,
    kAffectedEntriesFieldNumber = 8,
    kAuditIdFieldNumber = 1,
    kLineageIdFieldNumber = 2,
    kEventDescriptionFieldNumber = 3,
    kPerformedByFieldNumber = 4,
    kEventTimestampFieldNumber = 5,
    kEventStatusFieldNumber = 6,
    kComplianceVerifiedFieldNumber = 9,
  };
  // map<string, string> audit_metadata = 7;
  int audit_metadata_size() const;
  private:
  int _internal_audit_metadata_size() const;

  public:
  void clear_audit_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& audit_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_audit_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_audit_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_audit_metadata();

  public:
  // repeated string affected_entries = 8;
  int affected_entries_size() const;
  private:
  int _internal_affected_entries_size() const;

  public:
  void clear_affected_entries() ;
  const std::string& affected_entries(int index) const;
  std::string* mutable_affected_entries(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_affected_entries(int index, Arg_&& value, Args_... args);
  std::string* add_affected_entries();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_affected_entries(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& affected_entries() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_affected_entries();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_affected_entries() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_affected_entries();

  public:
  // string audit_id = 1;
  void clear_audit_id() ;
  const std::string& audit_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_audit_id(Arg_&& arg, Args_... args);
  std::string* mutable_audit_id();
  PROTOBUF_NODISCARD std::string* release_audit_id();
  void set_allocated_audit_id(std::string* value);

  private:
  const std::string& _internal_audit_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_audit_id(
      const std::string& value);
  std::string* _internal_mutable_audit_id();

  public:
  // string lineage_id = 2;
  void clear_lineage_id() ;
  const std::string& lineage_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_lineage_id(Arg_&& arg, Args_... args);
  std::string* mutable_lineage_id();
  PROTOBUF_NODISCARD std::string* release_lineage_id();
  void set_allocated_lineage_id(std::string* value);

  private:
  const std::string& _internal_lineage_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_lineage_id(
      const std::string& value);
  std::string* _internal_mutable_lineage_id();

  public:
  // string event_description = 3;
  void clear_event_description() ;
  const std::string& event_description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_event_description(Arg_&& arg, Args_... args);
  std::string* mutable_event_description();
  PROTOBUF_NODISCARD std::string* release_event_description();
  void set_allocated_event_description(std::string* value);

  private:
  const std::string& _internal_event_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_event_description(
      const std::string& value);
  std::string* _internal_mutable_event_description();

  public:
  // string performed_by = 4;
  void clear_performed_by() ;
  const std::string& performed_by() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_performed_by(Arg_&& arg, Args_... args);
  std::string* mutable_performed_by();
  PROTOBUF_NODISCARD std::string* release_performed_by();
  void set_allocated_performed_by(std::string* value);

  private:
  const std::string& _internal_performed_by() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_performed_by(
      const std::string& value);
  std::string* _internal_mutable_performed_by();

  public:
  // string event_timestamp = 5;
  void clear_event_timestamp() ;
  const std::string& event_timestamp() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_event_timestamp(Arg_&& arg, Args_... args);
  std::string* mutable_event_timestamp();
  PROTOBUF_NODISCARD std::string* release_event_timestamp();
  void set_allocated_event_timestamp(std::string* value);

  private:
  const std::string& _internal_event_timestamp() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_event_timestamp(
      const std::string& value);
  std::string* _internal_mutable_event_timestamp();

  public:
  // string event_status = 6;
  void clear_event_status() ;
  const std::string& event_status() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_event_status(Arg_&& arg, Args_... args);
  std::string* mutable_event_status();
  PROTOBUF_NODISCARD std::string* release_event_status();
  void set_allocated_event_status(std::string* value);

  private:
  const std::string& _internal_event_status() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_event_status(
      const std::string& value);
  std::string* _internal_mutable_event_status();

  public:
  // bool compliance_verified = 9;
  void clear_compliance_verified() ;
  bool compliance_verified() const;
  void set_compliance_verified(bool value);

  private:
  bool _internal_compliance_verified() const;
  void _internal_set_compliance_verified(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.lineage.LineageAuditTrail)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 1,
      152, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LineageAuditTrail& from_msg);
    ::google::protobuf::internal::MapField<LineageAuditTrail_AuditMetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        audit_metadata_;
    ::google::protobuf::RepeatedPtrField<std::string> affected_entries_;
    ::google::protobuf::internal::ArenaStringPtr audit_id_;
    ::google::protobuf::internal::ArenaStringPtr lineage_id_;
    ::google::protobuf::internal::ArenaStringPtr event_description_;
    ::google::protobuf::internal::ArenaStringPtr performed_by_;
    ::google::protobuf::internal::ArenaStringPtr event_timestamp_;
    ::google::protobuf::internal::ArenaStringPtr event_status_;
    bool compliance_verified_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lineage_2eproto;
};
// -------------------------------------------------------------------

class TemporalLayer final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.lineage.TemporalLayer) */ {
 public:
  inline TemporalLayer() : TemporalLayer(nullptr) {}
  ~TemporalLayer() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TemporalLayer* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TemporalLayer));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TemporalLayer(
      ::google::protobuf::internal::ConstantInitialized);

  inline TemporalLayer(const TemporalLayer& from) : TemporalLayer(nullptr, from) {}
  inline TemporalLayer(TemporalLayer&& from) noexcept
      : TemporalLayer(nullptr, std::move(from)) {}
  inline TemporalLayer& operator=(const TemporalLayer& from) {
    CopyFrom(from);
    return *this;
  }
  inline TemporalLayer& operator=(TemporalLayer&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TemporalLayer& default_instance() {
    return *internal_default_instance();
  }
  static inline const TemporalLayer* internal_default_instance() {
    return reinterpret_cast<const TemporalLayer*>(
        &_TemporalLayer_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(TemporalLayer& a, TemporalLayer& b) { a.Swap(&b); }
  inline void Swap(TemporalLayer* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TemporalLayer* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TemporalLayer* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TemporalLayer>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TemporalLayer& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TemporalLayer& from) { TemporalLayer::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TemporalLayer* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.lineage.TemporalLayer"; }

 protected:
  explicit TemporalLayer(::google::protobuf::Arena* arena);
  TemporalLayer(::google::protobuf::Arena* arena, const TemporalLayer& from);
  TemporalLayer(::google::protobuf::Arena* arena, TemporalLayer&& from) noexcept
      : TemporalLayer(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSegmentsFieldNumber = 9,
    kChecksumSegmentsFieldNumber = 10,
    kDataSnapshotFieldNumber = 11,
    kMetadataFieldNumber = 13,
    kLayerIdFieldNumber = 1,
    kTimestampFieldNumber = 2,
    kStateSnapshotFieldNumber = 3,
    kDescriptionFieldNumber = 4,
    kCreatedByFieldNumber = 5,
    kLayerHashFieldNumber = 6,
    kPreviousLayerHashFieldNumber = 7,
    kBackupLocationFieldNumber = 12,
    kRollbackAllowedFieldNumber = 8,
  };
  // repeated .seigr.segment_metadata.SegmentMetadata segments = 9;
  int segments_size() const;
  private:
  int _internal_segments_size() const;

  public:
  void clear_segments() ;
  ::seigr::segment_metadata::SegmentMetadata* mutable_segments(int index);
  ::google::protobuf::RepeatedPtrField<::seigr::segment_metadata::SegmentMetadata>* mutable_segments();

  private:
  const ::google::protobuf::RepeatedPtrField<::seigr::segment_metadata::SegmentMetadata>& _internal_segments() const;
  ::google::protobuf::RepeatedPtrField<::seigr::segment_metadata::SegmentMetadata>* _internal_mutable_segments();
  public:
  const ::seigr::segment_metadata::SegmentMetadata& segments(int index) const;
  ::seigr::segment_metadata::SegmentMetadata* add_segments();
  const ::google::protobuf::RepeatedPtrField<::seigr::segment_metadata::SegmentMetadata>& segments() const;
  // repeated string checksum_segments = 10;
  int checksum_segments_size() const;
  private:
  int _internal_checksum_segments_size() const;

  public:
  void clear_checksum_segments() ;
  const std::string& checksum_segments(int index) const;
  std::string* mutable_checksum_segments(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_checksum_segments(int index, Arg_&& value, Args_... args);
  std::string* add_checksum_segments();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_checksum_segments(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& checksum_segments() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_checksum_segments();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_checksum_segments() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_checksum_segments();

  public:
  // map<string, bytes> data_snapshot = 11;
  int data_snapshot_size() const;
  private:
  int _internal_data_snapshot_size() const;

  public:
  void clear_data_snapshot() ;
  const ::google::protobuf::Map<std::string, std::string>& data_snapshot() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_data_snapshot();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_data_snapshot() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_data_snapshot();

  public:
  // map<string, string> metadata = 13;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // string layer_id = 1;
  void clear_layer_id() ;
  const std::string& layer_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_layer_id(Arg_&& arg, Args_... args);
  std::string* mutable_layer_id();
  PROTOBUF_NODISCARD std::string* release_layer_id();
  void set_allocated_layer_id(std::string* value);

  private:
  const std::string& _internal_layer_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_layer_id(
      const std::string& value);
  std::string* _internal_mutable_layer_id();

  public:
  // string timestamp = 2;
  void clear_timestamp() ;
  const std::string& timestamp() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_timestamp(Arg_&& arg, Args_... args);
  std::string* mutable_timestamp();
  PROTOBUF_NODISCARD std::string* release_timestamp();
  void set_allocated_timestamp(std::string* value);

  private:
  const std::string& _internal_timestamp() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_timestamp(
      const std::string& value);
  std::string* _internal_mutable_timestamp();

  public:
  // string state_snapshot = 3;
  void clear_state_snapshot() ;
  const std::string& state_snapshot() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_state_snapshot(Arg_&& arg, Args_... args);
  std::string* mutable_state_snapshot();
  PROTOBUF_NODISCARD std::string* release_state_snapshot();
  void set_allocated_state_snapshot(std::string* value);

  private:
  const std::string& _internal_state_snapshot() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_state_snapshot(
      const std::string& value);
  std::string* _internal_mutable_state_snapshot();

  public:
  // string description = 4;
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // string created_by = 5;
  void clear_created_by() ;
  const std::string& created_by() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_created_by(Arg_&& arg, Args_... args);
  std::string* mutable_created_by();
  PROTOBUF_NODISCARD std::string* release_created_by();
  void set_allocated_created_by(std::string* value);

  private:
  const std::string& _internal_created_by() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_created_by(
      const std::string& value);
  std::string* _internal_mutable_created_by();

  public:
  // string layer_hash = 6;
  void clear_layer_hash() ;
  const std::string& layer_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_layer_hash(Arg_&& arg, Args_... args);
  std::string* mutable_layer_hash();
  PROTOBUF_NODISCARD std::string* release_layer_hash();
  void set_allocated_layer_hash(std::string* value);

  private:
  const std::string& _internal_layer_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_layer_hash(
      const std::string& value);
  std::string* _internal_mutable_layer_hash();

  public:
  // string previous_layer_hash = 7;
  void clear_previous_layer_hash() ;
  const std::string& previous_layer_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_previous_layer_hash(Arg_&& arg, Args_... args);
  std::string* mutable_previous_layer_hash();
  PROTOBUF_NODISCARD std::string* release_previous_layer_hash();
  void set_allocated_previous_layer_hash(std::string* value);

  private:
  const std::string& _internal_previous_layer_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_previous_layer_hash(
      const std::string& value);
  std::string* _internal_mutable_previous_layer_hash();

  public:
  // string backup_location = 12;
  void clear_backup_location() ;
  const std::string& backup_location() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_backup_location(Arg_&& arg, Args_... args);
  std::string* mutable_backup_location();
  PROTOBUF_NODISCARD std::string* release_backup_location();
  void set_allocated_backup_location(std::string* value);

  private:
  const std::string& _internal_backup_location() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_backup_location(
      const std::string& value);
  std::string* _internal_mutable_backup_location();

  public:
  // bool rollback_allowed = 8;
  void clear_rollback_allowed() ;
  bool rollback_allowed() const;
  void set_rollback_allowed(bool value);

  private:
  bool _internal_rollback_allowed() const;
  void _internal_set_rollback_allowed(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.lineage.TemporalLayer)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 13, 3,
      178, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TemporalLayer& from_msg);
    ::google::protobuf::RepeatedPtrField< ::seigr::segment_metadata::SegmentMetadata > segments_;
    ::google::protobuf::RepeatedPtrField<std::string> checksum_segments_;
    ::google::protobuf::internal::MapField<TemporalLayer_DataSnapshotEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES>
        data_snapshot_;
    ::google::protobuf::internal::MapField<TemporalLayer_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::internal::ArenaStringPtr layer_id_;
    ::google::protobuf::internal::ArenaStringPtr timestamp_;
    ::google::protobuf::internal::ArenaStringPtr state_snapshot_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::internal::ArenaStringPtr created_by_;
    ::google::protobuf::internal::ArenaStringPtr layer_hash_;
    ::google::protobuf::internal::ArenaStringPtr previous_layer_hash_;
    ::google::protobuf::internal::ArenaStringPtr backup_location_;
    bool rollback_allowed_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lineage_2eproto;
};
// -------------------------------------------------------------------

class Lineage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seigr.lineage.Lineage) */ {
 public:
  inline Lineage() : Lineage(nullptr) {}
  ~Lineage() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Lineage* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Lineage));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Lineage(
      ::google::protobuf::internal::ConstantInitialized);

  inline Lineage(const Lineage& from) : Lineage(nullptr, from) {}
  inline Lineage(Lineage&& from) noexcept
      : Lineage(nullptr, std::move(from)) {}
  inline Lineage& operator=(const Lineage& from) {
    CopyFrom(from);
    return *this;
  }
  inline Lineage& operator=(Lineage&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Lineage& default_instance() {
    return *internal_default_instance();
  }
  static inline const Lineage* internal_default_instance() {
    return reinterpret_cast<const Lineage*>(
        &_Lineage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(Lineage& a, Lineage& b) { a.Swap(&b); }
  inline void Swap(Lineage* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Lineage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Lineage* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Lineage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Lineage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Lineage& from) { Lineage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Lineage* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seigr.lineage.Lineage"; }

 protected:
  explicit Lineage(::google::protobuf::Arena* arena);
  Lineage(::google::protobuf::Arena* arena, const Lineage& from);
  Lineage(::google::protobuf::Arena* arena, Lineage&& from) noexcept
      : Lineage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEntriesFieldNumber = 7,
    kMetadataFieldNumber = 9,
    kAssociatedFilesFieldNumber = 12,
    kAccessPermissionsFieldNumber = 14,
    kLinkedLineagesFieldNumber = 15,
    kAdaptiveTriggersFieldNumber = 17,
    kLineageIdFieldNumber = 1,
    kCreatorIdFieldNumber = 2,
    kCurrentHashFieldNumber = 3,
    kFormatVersionFieldNumber = 4,
    kIntegrityChecksumFieldNumber = 8,
    kParentLineageIdFieldNumber = 10,
    kArchiveTimestampFieldNumber = 11,
    kNetworkReferenceIdFieldNumber = 13,
    kLastModifiedFieldNumber = 16,
    kDeprecationPolicyFieldNumber = 18,
    kLineageTypeFieldNumber = 5,
    kStatusFieldNumber = 6,
  };
  // repeated .seigr.lineage.LineageEntry entries = 7;
  int entries_size() const;
  private:
  int _internal_entries_size() const;

  public:
  void clear_entries() ;
  ::seigr::lineage::LineageEntry* mutable_entries(int index);
  ::google::protobuf::RepeatedPtrField<::seigr::lineage::LineageEntry>* mutable_entries();

  private:
  const ::google::protobuf::RepeatedPtrField<::seigr::lineage::LineageEntry>& _internal_entries() const;
  ::google::protobuf::RepeatedPtrField<::seigr::lineage::LineageEntry>* _internal_mutable_entries();
  public:
  const ::seigr::lineage::LineageEntry& entries(int index) const;
  ::seigr::lineage::LineageEntry* add_entries();
  const ::google::protobuf::RepeatedPtrField<::seigr::lineage::LineageEntry>& entries() const;
  // map<string, string> metadata = 9;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // repeated string associated_files = 12;
  int associated_files_size() const;
  private:
  int _internal_associated_files_size() const;

  public:
  void clear_associated_files() ;
  const std::string& associated_files(int index) const;
  std::string* mutable_associated_files(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_associated_files(int index, Arg_&& value, Args_... args);
  std::string* add_associated_files();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_associated_files(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& associated_files() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_associated_files();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_associated_files() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_associated_files();

  public:
  // repeated string access_permissions = 14;
  int access_permissions_size() const;
  private:
  int _internal_access_permissions_size() const;

  public:
  void clear_access_permissions() ;
  const std::string& access_permissions(int index) const;
  std::string* mutable_access_permissions(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_access_permissions(int index, Arg_&& value, Args_... args);
  std::string* add_access_permissions();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_access_permissions(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& access_permissions() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_access_permissions();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_access_permissions() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_access_permissions();

  public:
  // repeated string linked_lineages = 15;
  int linked_lineages_size() const;
  private:
  int _internal_linked_lineages_size() const;

  public:
  void clear_linked_lineages() ;
  const std::string& linked_lineages(int index) const;
  std::string* mutable_linked_lineages(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_linked_lineages(int index, Arg_&& value, Args_... args);
  std::string* add_linked_lineages();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_linked_lineages(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& linked_lineages() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_linked_lineages();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_linked_lineages() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_linked_lineages();

  public:
  // map<string, string> adaptive_triggers = 17;
  int adaptive_triggers_size() const;
  private:
  int _internal_adaptive_triggers_size() const;

  public:
  void clear_adaptive_triggers() ;
  const ::google::protobuf::Map<std::string, std::string>& adaptive_triggers() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_adaptive_triggers();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_adaptive_triggers() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_adaptive_triggers();

  public:
  // string lineage_id = 1;
  void clear_lineage_id() ;
  const std::string& lineage_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_lineage_id(Arg_&& arg, Args_... args);
  std::string* mutable_lineage_id();
  PROTOBUF_NODISCARD std::string* release_lineage_id();
  void set_allocated_lineage_id(std::string* value);

  private:
  const std::string& _internal_lineage_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_lineage_id(
      const std::string& value);
  std::string* _internal_mutable_lineage_id();

  public:
  // string creator_id = 2;
  void clear_creator_id() ;
  const std::string& creator_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_creator_id(Arg_&& arg, Args_... args);
  std::string* mutable_creator_id();
  PROTOBUF_NODISCARD std::string* release_creator_id();
  void set_allocated_creator_id(std::string* value);

  private:
  const std::string& _internal_creator_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_creator_id(
      const std::string& value);
  std::string* _internal_mutable_creator_id();

  public:
  // string current_hash = 3;
  void clear_current_hash() ;
  const std::string& current_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_current_hash(Arg_&& arg, Args_... args);
  std::string* mutable_current_hash();
  PROTOBUF_NODISCARD std::string* release_current_hash();
  void set_allocated_current_hash(std::string* value);

  private:
  const std::string& _internal_current_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_current_hash(
      const std::string& value);
  std::string* _internal_mutable_current_hash();

  public:
  // string format_version = 4;
  void clear_format_version() ;
  const std::string& format_version() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_format_version(Arg_&& arg, Args_... args);
  std::string* mutable_format_version();
  PROTOBUF_NODISCARD std::string* release_format_version();
  void set_allocated_format_version(std::string* value);

  private:
  const std::string& _internal_format_version() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_format_version(
      const std::string& value);
  std::string* _internal_mutable_format_version();

  public:
  // string integrity_checksum = 8;
  void clear_integrity_checksum() ;
  const std::string& integrity_checksum() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_integrity_checksum(Arg_&& arg, Args_... args);
  std::string* mutable_integrity_checksum();
  PROTOBUF_NODISCARD std::string* release_integrity_checksum();
  void set_allocated_integrity_checksum(std::string* value);

  private:
  const std::string& _internal_integrity_checksum() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_integrity_checksum(
      const std::string& value);
  std::string* _internal_mutable_integrity_checksum();

  public:
  // string parent_lineage_id = 10;
  void clear_parent_lineage_id() ;
  const std::string& parent_lineage_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_parent_lineage_id(Arg_&& arg, Args_... args);
  std::string* mutable_parent_lineage_id();
  PROTOBUF_NODISCARD std::string* release_parent_lineage_id();
  void set_allocated_parent_lineage_id(std::string* value);

  private:
  const std::string& _internal_parent_lineage_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_parent_lineage_id(
      const std::string& value);
  std::string* _internal_mutable_parent_lineage_id();

  public:
  // string archive_timestamp = 11;
  void clear_archive_timestamp() ;
  const std::string& archive_timestamp() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_archive_timestamp(Arg_&& arg, Args_... args);
  std::string* mutable_archive_timestamp();
  PROTOBUF_NODISCARD std::string* release_archive_timestamp();
  void set_allocated_archive_timestamp(std::string* value);

  private:
  const std::string& _internal_archive_timestamp() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_archive_timestamp(
      const std::string& value);
  std::string* _internal_mutable_archive_timestamp();

  public:
  // string network_reference_id = 13;
  void clear_network_reference_id() ;
  const std::string& network_reference_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_network_reference_id(Arg_&& arg, Args_... args);
  std::string* mutable_network_reference_id();
  PROTOBUF_NODISCARD std::string* release_network_reference_id();
  void set_allocated_network_reference_id(std::string* value);

  private:
  const std::string& _internal_network_reference_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_network_reference_id(
      const std::string& value);
  std::string* _internal_mutable_network_reference_id();

  public:
  // string last_modified = 16;
  void clear_last_modified() ;
  const std::string& last_modified() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_last_modified(Arg_&& arg, Args_... args);
  std::string* mutable_last_modified();
  PROTOBUF_NODISCARD std::string* release_last_modified();
  void set_allocated_last_modified(std::string* value);

  private:
  const std::string& _internal_last_modified() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_last_modified(
      const std::string& value);
  std::string* _internal_mutable_last_modified();

  public:
  // string deprecation_policy = 18;
  void clear_deprecation_policy() ;
  const std::string& deprecation_policy() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_deprecation_policy(Arg_&& arg, Args_... args);
  std::string* mutable_deprecation_policy();
  PROTOBUF_NODISCARD std::string* release_deprecation_policy();
  void set_allocated_deprecation_policy(std::string* value);

  private:
  const std::string& _internal_deprecation_policy() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_deprecation_policy(
      const std::string& value);
  std::string* _internal_mutable_deprecation_policy();

  public:
  // .seigr.lineage.LineageType lineage_type = 5;
  void clear_lineage_type() ;
  ::seigr::lineage::LineageType lineage_type() const;
  void set_lineage_type(::seigr::lineage::LineageType value);

  private:
  ::seigr::lineage::LineageType _internal_lineage_type() const;
  void _internal_set_lineage_type(::seigr::lineage::LineageType value);

  public:
  // .seigr.lineage.LineageStatus status = 6;
  void clear_status() ;
  ::seigr::lineage::LineageStatus status() const;
  void set_status(::seigr::lineage::LineageStatus value);

  private:
  ::seigr::lineage::LineageStatus _internal_status() const;
  void _internal_set_status(::seigr::lineage::LineageStatus value);

  public:
  // @@protoc_insertion_point(class_scope:seigr.lineage.Lineage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 18, 3,
      269, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Lineage& from_msg);
    ::google::protobuf::RepeatedPtrField< ::seigr::lineage::LineageEntry > entries_;
    ::google::protobuf::internal::MapField<Lineage_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::RepeatedPtrField<std::string> associated_files_;
    ::google::protobuf::RepeatedPtrField<std::string> access_permissions_;
    ::google::protobuf::RepeatedPtrField<std::string> linked_lineages_;
    ::google::protobuf::internal::MapField<Lineage_AdaptiveTriggersEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        adaptive_triggers_;
    ::google::protobuf::internal::ArenaStringPtr lineage_id_;
    ::google::protobuf::internal::ArenaStringPtr creator_id_;
    ::google::protobuf::internal::ArenaStringPtr current_hash_;
    ::google::protobuf::internal::ArenaStringPtr format_version_;
    ::google::protobuf::internal::ArenaStringPtr integrity_checksum_;
    ::google::protobuf::internal::ArenaStringPtr parent_lineage_id_;
    ::google::protobuf::internal::ArenaStringPtr archive_timestamp_;
    ::google::protobuf::internal::ArenaStringPtr network_reference_id_;
    ::google::protobuf::internal::ArenaStringPtr last_modified_;
    ::google::protobuf::internal::ArenaStringPtr deprecation_policy_;
    int lineage_type_;
    int status_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lineage_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Lineage

// string lineage_id = 1;
inline void Lineage::clear_lineage_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lineage_id_.ClearToEmpty();
}
inline const std::string& Lineage::lineage_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.Lineage.lineage_id)
  return _internal_lineage_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Lineage::set_lineage_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lineage_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.lineage.Lineage.lineage_id)
}
inline std::string* Lineage::mutable_lineage_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_lineage_id();
  // @@protoc_insertion_point(field_mutable:seigr.lineage.Lineage.lineage_id)
  return _s;
}
inline const std::string& Lineage::_internal_lineage_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lineage_id_.Get();
}
inline void Lineage::_internal_set_lineage_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lineage_id_.Set(value, GetArena());
}
inline std::string* Lineage::_internal_mutable_lineage_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.lineage_id_.Mutable( GetArena());
}
inline std::string* Lineage::release_lineage_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.lineage.Lineage.lineage_id)
  return _impl_.lineage_id_.Release();
}
inline void Lineage::set_allocated_lineage_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lineage_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.lineage_id_.IsDefault()) {
    _impl_.lineage_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.lineage.Lineage.lineage_id)
}

// string creator_id = 2;
inline void Lineage::clear_creator_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creator_id_.ClearToEmpty();
}
inline const std::string& Lineage::creator_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.Lineage.creator_id)
  return _internal_creator_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Lineage::set_creator_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creator_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.lineage.Lineage.creator_id)
}
inline std::string* Lineage::mutable_creator_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_creator_id();
  // @@protoc_insertion_point(field_mutable:seigr.lineage.Lineage.creator_id)
  return _s;
}
inline const std::string& Lineage::_internal_creator_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.creator_id_.Get();
}
inline void Lineage::_internal_set_creator_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creator_id_.Set(value, GetArena());
}
inline std::string* Lineage::_internal_mutable_creator_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.creator_id_.Mutable( GetArena());
}
inline std::string* Lineage::release_creator_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.lineage.Lineage.creator_id)
  return _impl_.creator_id_.Release();
}
inline void Lineage::set_allocated_creator_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creator_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.creator_id_.IsDefault()) {
    _impl_.creator_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.lineage.Lineage.creator_id)
}

// string current_hash = 3;
inline void Lineage::clear_current_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.current_hash_.ClearToEmpty();
}
inline const std::string& Lineage::current_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.Lineage.current_hash)
  return _internal_current_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Lineage::set_current_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.current_hash_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.lineage.Lineage.current_hash)
}
inline std::string* Lineage::mutable_current_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_current_hash();
  // @@protoc_insertion_point(field_mutable:seigr.lineage.Lineage.current_hash)
  return _s;
}
inline const std::string& Lineage::_internal_current_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.current_hash_.Get();
}
inline void Lineage::_internal_set_current_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.current_hash_.Set(value, GetArena());
}
inline std::string* Lineage::_internal_mutable_current_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.current_hash_.Mutable( GetArena());
}
inline std::string* Lineage::release_current_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.lineage.Lineage.current_hash)
  return _impl_.current_hash_.Release();
}
inline void Lineage::set_allocated_current_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.current_hash_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.current_hash_.IsDefault()) {
    _impl_.current_hash_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.lineage.Lineage.current_hash)
}

// string format_version = 4;
inline void Lineage::clear_format_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.format_version_.ClearToEmpty();
}
inline const std::string& Lineage::format_version() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.Lineage.format_version)
  return _internal_format_version();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Lineage::set_format_version(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.format_version_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.lineage.Lineage.format_version)
}
inline std::string* Lineage::mutable_format_version() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_format_version();
  // @@protoc_insertion_point(field_mutable:seigr.lineage.Lineage.format_version)
  return _s;
}
inline const std::string& Lineage::_internal_format_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.format_version_.Get();
}
inline void Lineage::_internal_set_format_version(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.format_version_.Set(value, GetArena());
}
inline std::string* Lineage::_internal_mutable_format_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.format_version_.Mutable( GetArena());
}
inline std::string* Lineage::release_format_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.lineage.Lineage.format_version)
  return _impl_.format_version_.Release();
}
inline void Lineage::set_allocated_format_version(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.format_version_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.format_version_.IsDefault()) {
    _impl_.format_version_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.lineage.Lineage.format_version)
}

// .seigr.lineage.LineageType lineage_type = 5;
inline void Lineage::clear_lineage_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lineage_type_ = 0;
}
inline ::seigr::lineage::LineageType Lineage::lineage_type() const {
  // @@protoc_insertion_point(field_get:seigr.lineage.Lineage.lineage_type)
  return _internal_lineage_type();
}
inline void Lineage::set_lineage_type(::seigr::lineage::LineageType value) {
  _internal_set_lineage_type(value);
  // @@protoc_insertion_point(field_set:seigr.lineage.Lineage.lineage_type)
}
inline ::seigr::lineage::LineageType Lineage::_internal_lineage_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::lineage::LineageType>(_impl_.lineage_type_);
}
inline void Lineage::_internal_set_lineage_type(::seigr::lineage::LineageType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lineage_type_ = value;
}

// .seigr.lineage.LineageStatus status = 6;
inline void Lineage::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0;
}
inline ::seigr::lineage::LineageStatus Lineage::status() const {
  // @@protoc_insertion_point(field_get:seigr.lineage.Lineage.status)
  return _internal_status();
}
inline void Lineage::set_status(::seigr::lineage::LineageStatus value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:seigr.lineage.Lineage.status)
}
inline ::seigr::lineage::LineageStatus Lineage::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::lineage::LineageStatus>(_impl_.status_);
}
inline void Lineage::_internal_set_status(::seigr::lineage::LineageStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// repeated .seigr.lineage.LineageEntry entries = 7;
inline int Lineage::_internal_entries_size() const {
  return _internal_entries().size();
}
inline int Lineage::entries_size() const {
  return _internal_entries_size();
}
inline void Lineage::clear_entries() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entries_.Clear();
}
inline ::seigr::lineage::LineageEntry* Lineage::mutable_entries(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.lineage.Lineage.entries)
  return _internal_mutable_entries()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seigr::lineage::LineageEntry>* Lineage::mutable_entries()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.lineage.Lineage.entries)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_entries();
}
inline const ::seigr::lineage::LineageEntry& Lineage::entries(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.Lineage.entries)
  return _internal_entries().Get(index);
}
inline ::seigr::lineage::LineageEntry* Lineage::add_entries() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seigr::lineage::LineageEntry* _add = _internal_mutable_entries()->Add();
  // @@protoc_insertion_point(field_add:seigr.lineage.Lineage.entries)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seigr::lineage::LineageEntry>& Lineage::entries() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.lineage.Lineage.entries)
  return _internal_entries();
}
inline const ::google::protobuf::RepeatedPtrField<::seigr::lineage::LineageEntry>&
Lineage::_internal_entries() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entries_;
}
inline ::google::protobuf::RepeatedPtrField<::seigr::lineage::LineageEntry>*
Lineage::_internal_mutable_entries() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.entries_;
}

// string integrity_checksum = 8;
inline void Lineage::clear_integrity_checksum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.integrity_checksum_.ClearToEmpty();
}
inline const std::string& Lineage::integrity_checksum() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.Lineage.integrity_checksum)
  return _internal_integrity_checksum();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Lineage::set_integrity_checksum(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.integrity_checksum_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.lineage.Lineage.integrity_checksum)
}
inline std::string* Lineage::mutable_integrity_checksum() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_integrity_checksum();
  // @@protoc_insertion_point(field_mutable:seigr.lineage.Lineage.integrity_checksum)
  return _s;
}
inline const std::string& Lineage::_internal_integrity_checksum() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.integrity_checksum_.Get();
}
inline void Lineage::_internal_set_integrity_checksum(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.integrity_checksum_.Set(value, GetArena());
}
inline std::string* Lineage::_internal_mutable_integrity_checksum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.integrity_checksum_.Mutable( GetArena());
}
inline std::string* Lineage::release_integrity_checksum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.lineage.Lineage.integrity_checksum)
  return _impl_.integrity_checksum_.Release();
}
inline void Lineage::set_allocated_integrity_checksum(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.integrity_checksum_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.integrity_checksum_.IsDefault()) {
    _impl_.integrity_checksum_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.lineage.Lineage.integrity_checksum)
}

// map<string, string> metadata = 9;
inline int Lineage::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int Lineage::metadata_size() const {
  return _internal_metadata_size();
}
inline void Lineage::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& Lineage::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& Lineage::metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.lineage.Lineage.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* Lineage::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* Lineage::mutable_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.lineage.Lineage.metadata)
  return _internal_mutable_metadata();
}

// string parent_lineage_id = 10;
inline void Lineage::clear_parent_lineage_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parent_lineage_id_.ClearToEmpty();
}
inline const std::string& Lineage::parent_lineage_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.Lineage.parent_lineage_id)
  return _internal_parent_lineage_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Lineage::set_parent_lineage_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parent_lineage_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.lineage.Lineage.parent_lineage_id)
}
inline std::string* Lineage::mutable_parent_lineage_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_parent_lineage_id();
  // @@protoc_insertion_point(field_mutable:seigr.lineage.Lineage.parent_lineage_id)
  return _s;
}
inline const std::string& Lineage::_internal_parent_lineage_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.parent_lineage_id_.Get();
}
inline void Lineage::_internal_set_parent_lineage_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parent_lineage_id_.Set(value, GetArena());
}
inline std::string* Lineage::_internal_mutable_parent_lineage_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.parent_lineage_id_.Mutable( GetArena());
}
inline std::string* Lineage::release_parent_lineage_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.lineage.Lineage.parent_lineage_id)
  return _impl_.parent_lineage_id_.Release();
}
inline void Lineage::set_allocated_parent_lineage_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parent_lineage_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.parent_lineage_id_.IsDefault()) {
    _impl_.parent_lineage_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.lineage.Lineage.parent_lineage_id)
}

// string archive_timestamp = 11;
inline void Lineage::clear_archive_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.archive_timestamp_.ClearToEmpty();
}
inline const std::string& Lineage::archive_timestamp() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.Lineage.archive_timestamp)
  return _internal_archive_timestamp();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Lineage::set_archive_timestamp(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.archive_timestamp_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.lineage.Lineage.archive_timestamp)
}
inline std::string* Lineage::mutable_archive_timestamp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_archive_timestamp();
  // @@protoc_insertion_point(field_mutable:seigr.lineage.Lineage.archive_timestamp)
  return _s;
}
inline const std::string& Lineage::_internal_archive_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.archive_timestamp_.Get();
}
inline void Lineage::_internal_set_archive_timestamp(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.archive_timestamp_.Set(value, GetArena());
}
inline std::string* Lineage::_internal_mutable_archive_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.archive_timestamp_.Mutable( GetArena());
}
inline std::string* Lineage::release_archive_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.lineage.Lineage.archive_timestamp)
  return _impl_.archive_timestamp_.Release();
}
inline void Lineage::set_allocated_archive_timestamp(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.archive_timestamp_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.archive_timestamp_.IsDefault()) {
    _impl_.archive_timestamp_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.lineage.Lineage.archive_timestamp)
}

// repeated string associated_files = 12;
inline int Lineage::_internal_associated_files_size() const {
  return _internal_associated_files().size();
}
inline int Lineage::associated_files_size() const {
  return _internal_associated_files_size();
}
inline void Lineage::clear_associated_files() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.associated_files_.Clear();
}
inline std::string* Lineage::add_associated_files() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_associated_files()->Add();
  // @@protoc_insertion_point(field_add_mutable:seigr.lineage.Lineage.associated_files)
  return _s;
}
inline const std::string& Lineage::associated_files(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.Lineage.associated_files)
  return _internal_associated_files().Get(index);
}
inline std::string* Lineage::mutable_associated_files(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.lineage.Lineage.associated_files)
  return _internal_mutable_associated_files()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void Lineage::set_associated_files(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_associated_files()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:seigr.lineage.Lineage.associated_files)
}
template <typename Arg_, typename... Args_>
inline void Lineage::add_associated_files(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_associated_files(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seigr.lineage.Lineage.associated_files)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Lineage::associated_files() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.lineage.Lineage.associated_files)
  return _internal_associated_files();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Lineage::mutable_associated_files() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.lineage.Lineage.associated_files)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_associated_files();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Lineage::_internal_associated_files() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.associated_files_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Lineage::_internal_mutable_associated_files() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.associated_files_;
}

// string network_reference_id = 13;
inline void Lineage::clear_network_reference_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.network_reference_id_.ClearToEmpty();
}
inline const std::string& Lineage::network_reference_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.Lineage.network_reference_id)
  return _internal_network_reference_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Lineage::set_network_reference_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.network_reference_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.lineage.Lineage.network_reference_id)
}
inline std::string* Lineage::mutable_network_reference_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_network_reference_id();
  // @@protoc_insertion_point(field_mutable:seigr.lineage.Lineage.network_reference_id)
  return _s;
}
inline const std::string& Lineage::_internal_network_reference_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.network_reference_id_.Get();
}
inline void Lineage::_internal_set_network_reference_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.network_reference_id_.Set(value, GetArena());
}
inline std::string* Lineage::_internal_mutable_network_reference_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.network_reference_id_.Mutable( GetArena());
}
inline std::string* Lineage::release_network_reference_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.lineage.Lineage.network_reference_id)
  return _impl_.network_reference_id_.Release();
}
inline void Lineage::set_allocated_network_reference_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.network_reference_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.network_reference_id_.IsDefault()) {
    _impl_.network_reference_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.lineage.Lineage.network_reference_id)
}

// repeated string access_permissions = 14;
inline int Lineage::_internal_access_permissions_size() const {
  return _internal_access_permissions().size();
}
inline int Lineage::access_permissions_size() const {
  return _internal_access_permissions_size();
}
inline void Lineage::clear_access_permissions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.access_permissions_.Clear();
}
inline std::string* Lineage::add_access_permissions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_access_permissions()->Add();
  // @@protoc_insertion_point(field_add_mutable:seigr.lineage.Lineage.access_permissions)
  return _s;
}
inline const std::string& Lineage::access_permissions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.Lineage.access_permissions)
  return _internal_access_permissions().Get(index);
}
inline std::string* Lineage::mutable_access_permissions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.lineage.Lineage.access_permissions)
  return _internal_mutable_access_permissions()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void Lineage::set_access_permissions(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_access_permissions()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:seigr.lineage.Lineage.access_permissions)
}
template <typename Arg_, typename... Args_>
inline void Lineage::add_access_permissions(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_access_permissions(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seigr.lineage.Lineage.access_permissions)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Lineage::access_permissions() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.lineage.Lineage.access_permissions)
  return _internal_access_permissions();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Lineage::mutable_access_permissions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.lineage.Lineage.access_permissions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_access_permissions();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Lineage::_internal_access_permissions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.access_permissions_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Lineage::_internal_mutable_access_permissions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.access_permissions_;
}

// repeated string linked_lineages = 15;
inline int Lineage::_internal_linked_lineages_size() const {
  return _internal_linked_lineages().size();
}
inline int Lineage::linked_lineages_size() const {
  return _internal_linked_lineages_size();
}
inline void Lineage::clear_linked_lineages() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.linked_lineages_.Clear();
}
inline std::string* Lineage::add_linked_lineages() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_linked_lineages()->Add();
  // @@protoc_insertion_point(field_add_mutable:seigr.lineage.Lineage.linked_lineages)
  return _s;
}
inline const std::string& Lineage::linked_lineages(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.Lineage.linked_lineages)
  return _internal_linked_lineages().Get(index);
}
inline std::string* Lineage::mutable_linked_lineages(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.lineage.Lineage.linked_lineages)
  return _internal_mutable_linked_lineages()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void Lineage::set_linked_lineages(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_linked_lineages()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:seigr.lineage.Lineage.linked_lineages)
}
template <typename Arg_, typename... Args_>
inline void Lineage::add_linked_lineages(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_linked_lineages(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seigr.lineage.Lineage.linked_lineages)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Lineage::linked_lineages() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.lineage.Lineage.linked_lineages)
  return _internal_linked_lineages();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Lineage::mutable_linked_lineages() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.lineage.Lineage.linked_lineages)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_linked_lineages();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Lineage::_internal_linked_lineages() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.linked_lineages_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Lineage::_internal_mutable_linked_lineages() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.linked_lineages_;
}

// string last_modified = 16;
inline void Lineage::clear_last_modified() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_modified_.ClearToEmpty();
}
inline const std::string& Lineage::last_modified() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.Lineage.last_modified)
  return _internal_last_modified();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Lineage::set_last_modified(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_modified_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.lineage.Lineage.last_modified)
}
inline std::string* Lineage::mutable_last_modified() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_last_modified();
  // @@protoc_insertion_point(field_mutable:seigr.lineage.Lineage.last_modified)
  return _s;
}
inline const std::string& Lineage::_internal_last_modified() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_modified_.Get();
}
inline void Lineage::_internal_set_last_modified(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_modified_.Set(value, GetArena());
}
inline std::string* Lineage::_internal_mutable_last_modified() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.last_modified_.Mutable( GetArena());
}
inline std::string* Lineage::release_last_modified() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.lineage.Lineage.last_modified)
  return _impl_.last_modified_.Release();
}
inline void Lineage::set_allocated_last_modified(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_modified_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.last_modified_.IsDefault()) {
    _impl_.last_modified_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.lineage.Lineage.last_modified)
}

// map<string, string> adaptive_triggers = 17;
inline int Lineage::_internal_adaptive_triggers_size() const {
  return _internal_adaptive_triggers().size();
}
inline int Lineage::adaptive_triggers_size() const {
  return _internal_adaptive_triggers_size();
}
inline void Lineage::clear_adaptive_triggers() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.adaptive_triggers_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& Lineage::_internal_adaptive_triggers() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.adaptive_triggers_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& Lineage::adaptive_triggers() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.lineage.Lineage.adaptive_triggers)
  return _internal_adaptive_triggers();
}
inline ::google::protobuf::Map<std::string, std::string>* Lineage::_internal_mutable_adaptive_triggers() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.adaptive_triggers_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* Lineage::mutable_adaptive_triggers() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.lineage.Lineage.adaptive_triggers)
  return _internal_mutable_adaptive_triggers();
}

// string deprecation_policy = 18;
inline void Lineage::clear_deprecation_policy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deprecation_policy_.ClearToEmpty();
}
inline const std::string& Lineage::deprecation_policy() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.Lineage.deprecation_policy)
  return _internal_deprecation_policy();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Lineage::set_deprecation_policy(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deprecation_policy_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.lineage.Lineage.deprecation_policy)
}
inline std::string* Lineage::mutable_deprecation_policy() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_deprecation_policy();
  // @@protoc_insertion_point(field_mutable:seigr.lineage.Lineage.deprecation_policy)
  return _s;
}
inline const std::string& Lineage::_internal_deprecation_policy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.deprecation_policy_.Get();
}
inline void Lineage::_internal_set_deprecation_policy(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deprecation_policy_.Set(value, GetArena());
}
inline std::string* Lineage::_internal_mutable_deprecation_policy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.deprecation_policy_.Mutable( GetArena());
}
inline std::string* Lineage::release_deprecation_policy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.lineage.Lineage.deprecation_policy)
  return _impl_.deprecation_policy_.Release();
}
inline void Lineage::set_allocated_deprecation_policy(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deprecation_policy_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.deprecation_policy_.IsDefault()) {
    _impl_.deprecation_policy_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.lineage.Lineage.deprecation_policy)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// LineageEntry

// string entry_id = 1;
inline void LineageEntry::clear_entry_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entry_id_.ClearToEmpty();
}
inline const std::string& LineageEntry::entry_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.LineageEntry.entry_id)
  return _internal_entry_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LineageEntry::set_entry_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entry_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.lineage.LineageEntry.entry_id)
}
inline std::string* LineageEntry::mutable_entry_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_entry_id();
  // @@protoc_insertion_point(field_mutable:seigr.lineage.LineageEntry.entry_id)
  return _s;
}
inline const std::string& LineageEntry::_internal_entry_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entry_id_.Get();
}
inline void LineageEntry::_internal_set_entry_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entry_id_.Set(value, GetArena());
}
inline std::string* LineageEntry::_internal_mutable_entry_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.entry_id_.Mutable( GetArena());
}
inline std::string* LineageEntry::release_entry_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.lineage.LineageEntry.entry_id)
  return _impl_.entry_id_.Release();
}
inline void LineageEntry::set_allocated_entry_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entry_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.entry_id_.IsDefault()) {
    _impl_.entry_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.lineage.LineageEntry.entry_id)
}

// string entry_version = 2;
inline void LineageEntry::clear_entry_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entry_version_.ClearToEmpty();
}
inline const std::string& LineageEntry::entry_version() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.LineageEntry.entry_version)
  return _internal_entry_version();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LineageEntry::set_entry_version(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entry_version_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.lineage.LineageEntry.entry_version)
}
inline std::string* LineageEntry::mutable_entry_version() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_entry_version();
  // @@protoc_insertion_point(field_mutable:seigr.lineage.LineageEntry.entry_version)
  return _s;
}
inline const std::string& LineageEntry::_internal_entry_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entry_version_.Get();
}
inline void LineageEntry::_internal_set_entry_version(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entry_version_.Set(value, GetArena());
}
inline std::string* LineageEntry::_internal_mutable_entry_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.entry_version_.Mutable( GetArena());
}
inline std::string* LineageEntry::release_entry_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.lineage.LineageEntry.entry_version)
  return _impl_.entry_version_.Release();
}
inline void LineageEntry::set_allocated_entry_version(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entry_version_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.entry_version_.IsDefault()) {
    _impl_.entry_version_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.lineage.LineageEntry.entry_version)
}

// .seigr.lineage.EntryType entry_type = 3;
inline void LineageEntry::clear_entry_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entry_type_ = 0;
}
inline ::seigr::lineage::EntryType LineageEntry::entry_type() const {
  // @@protoc_insertion_point(field_get:seigr.lineage.LineageEntry.entry_type)
  return _internal_entry_type();
}
inline void LineageEntry::set_entry_type(::seigr::lineage::EntryType value) {
  _internal_set_entry_type(value);
  // @@protoc_insertion_point(field_set:seigr.lineage.LineageEntry.entry_type)
}
inline ::seigr::lineage::EntryType LineageEntry::_internal_entry_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seigr::lineage::EntryType>(_impl_.entry_type_);
}
inline void LineageEntry::_internal_set_entry_type(::seigr::lineage::EntryType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entry_type_ = value;
}

// string action = 4;
inline void LineageEntry::clear_action() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.action_.ClearToEmpty();
}
inline const std::string& LineageEntry::action() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.LineageEntry.action)
  return _internal_action();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LineageEntry::set_action(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.action_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.lineage.LineageEntry.action)
}
inline std::string* LineageEntry::mutable_action() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_action();
  // @@protoc_insertion_point(field_mutable:seigr.lineage.LineageEntry.action)
  return _s;
}
inline const std::string& LineageEntry::_internal_action() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.action_.Get();
}
inline void LineageEntry::_internal_set_action(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.action_.Set(value, GetArena());
}
inline std::string* LineageEntry::_internal_mutable_action() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.action_.Mutable( GetArena());
}
inline std::string* LineageEntry::release_action() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.lineage.LineageEntry.action)
  return _impl_.action_.Release();
}
inline void LineageEntry::set_allocated_action(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.action_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.action_.IsDefault()) {
    _impl_.action_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.lineage.LineageEntry.action)
}

// string creator_id = 5;
inline void LineageEntry::clear_creator_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creator_id_.ClearToEmpty();
}
inline const std::string& LineageEntry::creator_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.LineageEntry.creator_id)
  return _internal_creator_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LineageEntry::set_creator_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creator_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.lineage.LineageEntry.creator_id)
}
inline std::string* LineageEntry::mutable_creator_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_creator_id();
  // @@protoc_insertion_point(field_mutable:seigr.lineage.LineageEntry.creator_id)
  return _s;
}
inline const std::string& LineageEntry::_internal_creator_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.creator_id_.Get();
}
inline void LineageEntry::_internal_set_creator_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creator_id_.Set(value, GetArena());
}
inline std::string* LineageEntry::_internal_mutable_creator_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.creator_id_.Mutable( GetArena());
}
inline std::string* LineageEntry::release_creator_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.lineage.LineageEntry.creator_id)
  return _impl_.creator_id_.Release();
}
inline void LineageEntry::set_allocated_creator_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creator_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.creator_id_.IsDefault()) {
    _impl_.creator_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.lineage.LineageEntry.creator_id)
}

// string contributor_id = 6;
inline void LineageEntry::clear_contributor_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contributor_id_.ClearToEmpty();
}
inline const std::string& LineageEntry::contributor_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.LineageEntry.contributor_id)
  return _internal_contributor_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LineageEntry::set_contributor_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contributor_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.lineage.LineageEntry.contributor_id)
}
inline std::string* LineageEntry::mutable_contributor_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_contributor_id();
  // @@protoc_insertion_point(field_mutable:seigr.lineage.LineageEntry.contributor_id)
  return _s;
}
inline const std::string& LineageEntry::_internal_contributor_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.contributor_id_.Get();
}
inline void LineageEntry::_internal_set_contributor_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contributor_id_.Set(value, GetArena());
}
inline std::string* LineageEntry::_internal_mutable_contributor_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.contributor_id_.Mutable( GetArena());
}
inline std::string* LineageEntry::release_contributor_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.lineage.LineageEntry.contributor_id)
  return _impl_.contributor_id_.Release();
}
inline void LineageEntry::set_allocated_contributor_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contributor_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.contributor_id_.IsDefault()) {
    _impl_.contributor_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.lineage.LineageEntry.contributor_id)
}

// string timestamp = 7;
inline void LineageEntry::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.ClearToEmpty();
}
inline const std::string& LineageEntry::timestamp() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.LineageEntry.timestamp)
  return _internal_timestamp();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LineageEntry::set_timestamp(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.lineage.LineageEntry.timestamp)
}
inline std::string* LineageEntry::mutable_timestamp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_timestamp();
  // @@protoc_insertion_point(field_mutable:seigr.lineage.LineageEntry.timestamp)
  return _s;
}
inline const std::string& LineageEntry::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_.Get();
}
inline void LineageEntry::_internal_set_timestamp(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.Set(value, GetArena());
}
inline std::string* LineageEntry::_internal_mutable_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.timestamp_.Mutable( GetArena());
}
inline std::string* LineageEntry::release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.lineage.LineageEntry.timestamp)
  return _impl_.timestamp_.Release();
}
inline void LineageEntry::set_allocated_timestamp(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.timestamp_.IsDefault()) {
    _impl_.timestamp_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.lineage.LineageEntry.timestamp)
}

// repeated string previous_hashes = 8;
inline int LineageEntry::_internal_previous_hashes_size() const {
  return _internal_previous_hashes().size();
}
inline int LineageEntry::previous_hashes_size() const {
  return _internal_previous_hashes_size();
}
inline void LineageEntry::clear_previous_hashes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.previous_hashes_.Clear();
}
inline std::string* LineageEntry::add_previous_hashes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_previous_hashes()->Add();
  // @@protoc_insertion_point(field_add_mutable:seigr.lineage.LineageEntry.previous_hashes)
  return _s;
}
inline const std::string& LineageEntry::previous_hashes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.LineageEntry.previous_hashes)
  return _internal_previous_hashes().Get(index);
}
inline std::string* LineageEntry::mutable_previous_hashes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.lineage.LineageEntry.previous_hashes)
  return _internal_mutable_previous_hashes()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void LineageEntry::set_previous_hashes(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_previous_hashes()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:seigr.lineage.LineageEntry.previous_hashes)
}
template <typename Arg_, typename... Args_>
inline void LineageEntry::add_previous_hashes(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_previous_hashes(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seigr.lineage.LineageEntry.previous_hashes)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
LineageEntry::previous_hashes() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.lineage.LineageEntry.previous_hashes)
  return _internal_previous_hashes();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
LineageEntry::mutable_previous_hashes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.lineage.LineageEntry.previous_hashes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_previous_hashes();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
LineageEntry::_internal_previous_hashes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.previous_hashes_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
LineageEntry::_internal_mutable_previous_hashes() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.previous_hashes_;
}

// string parent_id = 9;
inline void LineageEntry::clear_parent_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parent_id_.ClearToEmpty();
}
inline const std::string& LineageEntry::parent_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.LineageEntry.parent_id)
  return _internal_parent_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LineageEntry::set_parent_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parent_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.lineage.LineageEntry.parent_id)
}
inline std::string* LineageEntry::mutable_parent_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_parent_id();
  // @@protoc_insertion_point(field_mutable:seigr.lineage.LineageEntry.parent_id)
  return _s;
}
inline const std::string& LineageEntry::_internal_parent_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.parent_id_.Get();
}
inline void LineageEntry::_internal_set_parent_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parent_id_.Set(value, GetArena());
}
inline std::string* LineageEntry::_internal_mutable_parent_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.parent_id_.Mutable( GetArena());
}
inline std::string* LineageEntry::release_parent_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.lineage.LineageEntry.parent_id)
  return _impl_.parent_id_.Release();
}
inline void LineageEntry::set_allocated_parent_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parent_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.parent_id_.IsDefault()) {
    _impl_.parent_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.lineage.LineageEntry.parent_id)
}

// string event_trigger = 10;
inline void LineageEntry::clear_event_trigger() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.event_trigger_.ClearToEmpty();
}
inline const std::string& LineageEntry::event_trigger() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.LineageEntry.event_trigger)
  return _internal_event_trigger();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LineageEntry::set_event_trigger(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.event_trigger_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.lineage.LineageEntry.event_trigger)
}
inline std::string* LineageEntry::mutable_event_trigger() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_event_trigger();
  // @@protoc_insertion_point(field_mutable:seigr.lineage.LineageEntry.event_trigger)
  return _s;
}
inline const std::string& LineageEntry::_internal_event_trigger() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.event_trigger_.Get();
}
inline void LineageEntry::_internal_set_event_trigger(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.event_trigger_.Set(value, GetArena());
}
inline std::string* LineageEntry::_internal_mutable_event_trigger() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.event_trigger_.Mutable( GetArena());
}
inline std::string* LineageEntry::release_event_trigger() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.lineage.LineageEntry.event_trigger)
  return _impl_.event_trigger_.Release();
}
inline void LineageEntry::set_allocated_event_trigger(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.event_trigger_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.event_trigger_.IsDefault()) {
    _impl_.event_trigger_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.lineage.LineageEntry.event_trigger)
}

// map<string, string> metadata = 11;
inline int LineageEntry::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int LineageEntry::metadata_size() const {
  return _internal_metadata_size();
}
inline void LineageEntry::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& LineageEntry::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& LineageEntry::metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.lineage.LineageEntry.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* LineageEntry::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* LineageEntry::mutable_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.lineage.LineageEntry.metadata)
  return _internal_mutable_metadata();
}

// string entry_checksum = 12;
inline void LineageEntry::clear_entry_checksum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entry_checksum_.ClearToEmpty();
}
inline const std::string& LineageEntry::entry_checksum() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.LineageEntry.entry_checksum)
  return _internal_entry_checksum();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LineageEntry::set_entry_checksum(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entry_checksum_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.lineage.LineageEntry.entry_checksum)
}
inline std::string* LineageEntry::mutable_entry_checksum() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_entry_checksum();
  // @@protoc_insertion_point(field_mutable:seigr.lineage.LineageEntry.entry_checksum)
  return _s;
}
inline const std::string& LineageEntry::_internal_entry_checksum() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entry_checksum_.Get();
}
inline void LineageEntry::_internal_set_entry_checksum(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entry_checksum_.Set(value, GetArena());
}
inline std::string* LineageEntry::_internal_mutable_entry_checksum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.entry_checksum_.Mutable( GetArena());
}
inline std::string* LineageEntry::release_entry_checksum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.lineage.LineageEntry.entry_checksum)
  return _impl_.entry_checksum_.Release();
}
inline void LineageEntry::set_allocated_entry_checksum(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entry_checksum_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.entry_checksum_.IsDefault()) {
    _impl_.entry_checksum_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.lineage.LineageEntry.entry_checksum)
}

// string external_reference_id = 13;
inline void LineageEntry::clear_external_reference_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.external_reference_id_.ClearToEmpty();
}
inline const std::string& LineageEntry::external_reference_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.LineageEntry.external_reference_id)
  return _internal_external_reference_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LineageEntry::set_external_reference_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.external_reference_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.lineage.LineageEntry.external_reference_id)
}
inline std::string* LineageEntry::mutable_external_reference_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_external_reference_id();
  // @@protoc_insertion_point(field_mutable:seigr.lineage.LineageEntry.external_reference_id)
  return _s;
}
inline const std::string& LineageEntry::_internal_external_reference_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.external_reference_id_.Get();
}
inline void LineageEntry::_internal_set_external_reference_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.external_reference_id_.Set(value, GetArena());
}
inline std::string* LineageEntry::_internal_mutable_external_reference_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.external_reference_id_.Mutable( GetArena());
}
inline std::string* LineageEntry::release_external_reference_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.lineage.LineageEntry.external_reference_id)
  return _impl_.external_reference_id_.Release();
}
inline void LineageEntry::set_allocated_external_reference_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.external_reference_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.external_reference_id_.IsDefault()) {
    _impl_.external_reference_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.lineage.LineageEntry.external_reference_id)
}

// repeated string dependency_ids = 14;
inline int LineageEntry::_internal_dependency_ids_size() const {
  return _internal_dependency_ids().size();
}
inline int LineageEntry::dependency_ids_size() const {
  return _internal_dependency_ids_size();
}
inline void LineageEntry::clear_dependency_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dependency_ids_.Clear();
}
inline std::string* LineageEntry::add_dependency_ids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_dependency_ids()->Add();
  // @@protoc_insertion_point(field_add_mutable:seigr.lineage.LineageEntry.dependency_ids)
  return _s;
}
inline const std::string& LineageEntry::dependency_ids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.LineageEntry.dependency_ids)
  return _internal_dependency_ids().Get(index);
}
inline std::string* LineageEntry::mutable_dependency_ids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.lineage.LineageEntry.dependency_ids)
  return _internal_mutable_dependency_ids()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void LineageEntry::set_dependency_ids(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_dependency_ids()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:seigr.lineage.LineageEntry.dependency_ids)
}
template <typename Arg_, typename... Args_>
inline void LineageEntry::add_dependency_ids(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_dependency_ids(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seigr.lineage.LineageEntry.dependency_ids)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
LineageEntry::dependency_ids() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.lineage.LineageEntry.dependency_ids)
  return _internal_dependency_ids();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
LineageEntry::mutable_dependency_ids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.lineage.LineageEntry.dependency_ids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_dependency_ids();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
LineageEntry::_internal_dependency_ids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dependency_ids_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
LineageEntry::_internal_mutable_dependency_ids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.dependency_ids_;
}

// map<string, string> context_data = 15;
inline int LineageEntry::_internal_context_data_size() const {
  return _internal_context_data().size();
}
inline int LineageEntry::context_data_size() const {
  return _internal_context_data_size();
}
inline void LineageEntry::clear_context_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.context_data_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& LineageEntry::_internal_context_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.context_data_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& LineageEntry::context_data() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.lineage.LineageEntry.context_data)
  return _internal_context_data();
}
inline ::google::protobuf::Map<std::string, std::string>* LineageEntry::_internal_mutable_context_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.context_data_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* LineageEntry::mutable_context_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.lineage.LineageEntry.context_data)
  return _internal_mutable_context_data();
}

// repeated string associated_files = 16;
inline int LineageEntry::_internal_associated_files_size() const {
  return _internal_associated_files().size();
}
inline int LineageEntry::associated_files_size() const {
  return _internal_associated_files_size();
}
inline void LineageEntry::clear_associated_files() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.associated_files_.Clear();
}
inline std::string* LineageEntry::add_associated_files() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_associated_files()->Add();
  // @@protoc_insertion_point(field_add_mutable:seigr.lineage.LineageEntry.associated_files)
  return _s;
}
inline const std::string& LineageEntry::associated_files(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.LineageEntry.associated_files)
  return _internal_associated_files().Get(index);
}
inline std::string* LineageEntry::mutable_associated_files(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.lineage.LineageEntry.associated_files)
  return _internal_mutable_associated_files()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void LineageEntry::set_associated_files(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_associated_files()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:seigr.lineage.LineageEntry.associated_files)
}
template <typename Arg_, typename... Args_>
inline void LineageEntry::add_associated_files(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_associated_files(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seigr.lineage.LineageEntry.associated_files)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
LineageEntry::associated_files() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.lineage.LineageEntry.associated_files)
  return _internal_associated_files();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
LineageEntry::mutable_associated_files() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.lineage.LineageEntry.associated_files)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_associated_files();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
LineageEntry::_internal_associated_files() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.associated_files_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
LineageEntry::_internal_mutable_associated_files() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.associated_files_;
}

// bool adaptive_update_flag = 17;
inline void LineageEntry::clear_adaptive_update_flag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.adaptive_update_flag_ = false;
}
inline bool LineageEntry::adaptive_update_flag() const {
  // @@protoc_insertion_point(field_get:seigr.lineage.LineageEntry.adaptive_update_flag)
  return _internal_adaptive_update_flag();
}
inline void LineageEntry::set_adaptive_update_flag(bool value) {
  _internal_set_adaptive_update_flag(value);
  // @@protoc_insertion_point(field_set:seigr.lineage.LineageEntry.adaptive_update_flag)
}
inline bool LineageEntry::_internal_adaptive_update_flag() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.adaptive_update_flag_;
}
inline void LineageEntry::_internal_set_adaptive_update_flag(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.adaptive_update_flag_ = value;
}

// string conflict_resolution_strategy = 18;
inline void LineageEntry::clear_conflict_resolution_strategy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conflict_resolution_strategy_.ClearToEmpty();
}
inline const std::string& LineageEntry::conflict_resolution_strategy() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.LineageEntry.conflict_resolution_strategy)
  return _internal_conflict_resolution_strategy();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LineageEntry::set_conflict_resolution_strategy(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conflict_resolution_strategy_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.lineage.LineageEntry.conflict_resolution_strategy)
}
inline std::string* LineageEntry::mutable_conflict_resolution_strategy() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_conflict_resolution_strategy();
  // @@protoc_insertion_point(field_mutable:seigr.lineage.LineageEntry.conflict_resolution_strategy)
  return _s;
}
inline const std::string& LineageEntry::_internal_conflict_resolution_strategy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.conflict_resolution_strategy_.Get();
}
inline void LineageEntry::_internal_set_conflict_resolution_strategy(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conflict_resolution_strategy_.Set(value, GetArena());
}
inline std::string* LineageEntry::_internal_mutable_conflict_resolution_strategy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.conflict_resolution_strategy_.Mutable( GetArena());
}
inline std::string* LineageEntry::release_conflict_resolution_strategy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.lineage.LineageEntry.conflict_resolution_strategy)
  return _impl_.conflict_resolution_strategy_.Release();
}
inline void LineageEntry::set_allocated_conflict_resolution_strategy(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conflict_resolution_strategy_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.conflict_resolution_strategy_.IsDefault()) {
    _impl_.conflict_resolution_strategy_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.lineage.LineageEntry.conflict_resolution_strategy)
}

// repeated string resolved_dependencies = 19;
inline int LineageEntry::_internal_resolved_dependencies_size() const {
  return _internal_resolved_dependencies().size();
}
inline int LineageEntry::resolved_dependencies_size() const {
  return _internal_resolved_dependencies_size();
}
inline void LineageEntry::clear_resolved_dependencies() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resolved_dependencies_.Clear();
}
inline std::string* LineageEntry::add_resolved_dependencies() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_resolved_dependencies()->Add();
  // @@protoc_insertion_point(field_add_mutable:seigr.lineage.LineageEntry.resolved_dependencies)
  return _s;
}
inline const std::string& LineageEntry::resolved_dependencies(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.LineageEntry.resolved_dependencies)
  return _internal_resolved_dependencies().Get(index);
}
inline std::string* LineageEntry::mutable_resolved_dependencies(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.lineage.LineageEntry.resolved_dependencies)
  return _internal_mutable_resolved_dependencies()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void LineageEntry::set_resolved_dependencies(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_resolved_dependencies()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:seigr.lineage.LineageEntry.resolved_dependencies)
}
template <typename Arg_, typename... Args_>
inline void LineageEntry::add_resolved_dependencies(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_resolved_dependencies(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seigr.lineage.LineageEntry.resolved_dependencies)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
LineageEntry::resolved_dependencies() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.lineage.LineageEntry.resolved_dependencies)
  return _internal_resolved_dependencies();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
LineageEntry::mutable_resolved_dependencies() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.lineage.LineageEntry.resolved_dependencies)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_resolved_dependencies();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
LineageEntry::_internal_resolved_dependencies() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.resolved_dependencies_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
LineageEntry::_internal_mutable_resolved_dependencies() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.resolved_dependencies_;
}

// string revision_notes = 20;
inline void LineageEntry::clear_revision_notes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.revision_notes_.ClearToEmpty();
}
inline const std::string& LineageEntry::revision_notes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.LineageEntry.revision_notes)
  return _internal_revision_notes();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LineageEntry::set_revision_notes(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.revision_notes_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.lineage.LineageEntry.revision_notes)
}
inline std::string* LineageEntry::mutable_revision_notes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_revision_notes();
  // @@protoc_insertion_point(field_mutable:seigr.lineage.LineageEntry.revision_notes)
  return _s;
}
inline const std::string& LineageEntry::_internal_revision_notes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.revision_notes_.Get();
}
inline void LineageEntry::_internal_set_revision_notes(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.revision_notes_.Set(value, GetArena());
}
inline std::string* LineageEntry::_internal_mutable_revision_notes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.revision_notes_.Mutable( GetArena());
}
inline std::string* LineageEntry::release_revision_notes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.lineage.LineageEntry.revision_notes)
  return _impl_.revision_notes_.Release();
}
inline void LineageEntry::set_allocated_revision_notes(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.revision_notes_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.revision_notes_.IsDefault()) {
    _impl_.revision_notes_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.lineage.LineageEntry.revision_notes)
}

// map<string, string> adaptive_conditions = 21;
inline int LineageEntry::_internal_adaptive_conditions_size() const {
  return _internal_adaptive_conditions().size();
}
inline int LineageEntry::adaptive_conditions_size() const {
  return _internal_adaptive_conditions_size();
}
inline void LineageEntry::clear_adaptive_conditions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.adaptive_conditions_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& LineageEntry::_internal_adaptive_conditions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.adaptive_conditions_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& LineageEntry::adaptive_conditions() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.lineage.LineageEntry.adaptive_conditions)
  return _internal_adaptive_conditions();
}
inline ::google::protobuf::Map<std::string, std::string>* LineageEntry::_internal_mutable_adaptive_conditions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.adaptive_conditions_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* LineageEntry::mutable_adaptive_conditions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.lineage.LineageEntry.adaptive_conditions)
  return _internal_mutable_adaptive_conditions();
}

// string rollback_checkpoint = 22;
inline void LineageEntry::clear_rollback_checkpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rollback_checkpoint_.ClearToEmpty();
}
inline const std::string& LineageEntry::rollback_checkpoint() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.LineageEntry.rollback_checkpoint)
  return _internal_rollback_checkpoint();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LineageEntry::set_rollback_checkpoint(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rollback_checkpoint_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.lineage.LineageEntry.rollback_checkpoint)
}
inline std::string* LineageEntry::mutable_rollback_checkpoint() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_rollback_checkpoint();
  // @@protoc_insertion_point(field_mutable:seigr.lineage.LineageEntry.rollback_checkpoint)
  return _s;
}
inline const std::string& LineageEntry::_internal_rollback_checkpoint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rollback_checkpoint_.Get();
}
inline void LineageEntry::_internal_set_rollback_checkpoint(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rollback_checkpoint_.Set(value, GetArena());
}
inline std::string* LineageEntry::_internal_mutable_rollback_checkpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.rollback_checkpoint_.Mutable( GetArena());
}
inline std::string* LineageEntry::release_rollback_checkpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.lineage.LineageEntry.rollback_checkpoint)
  return _impl_.rollback_checkpoint_.Release();
}
inline void LineageEntry::set_allocated_rollback_checkpoint(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rollback_checkpoint_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.rollback_checkpoint_.IsDefault()) {
    _impl_.rollback_checkpoint_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.lineage.LineageEntry.rollback_checkpoint)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// LineageValidationSummary

// string validation_id = 1;
inline void LineageValidationSummary::clear_validation_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validation_id_.ClearToEmpty();
}
inline const std::string& LineageValidationSummary::validation_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.LineageValidationSummary.validation_id)
  return _internal_validation_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LineageValidationSummary::set_validation_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validation_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.lineage.LineageValidationSummary.validation_id)
}
inline std::string* LineageValidationSummary::mutable_validation_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_validation_id();
  // @@protoc_insertion_point(field_mutable:seigr.lineage.LineageValidationSummary.validation_id)
  return _s;
}
inline const std::string& LineageValidationSummary::_internal_validation_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.validation_id_.Get();
}
inline void LineageValidationSummary::_internal_set_validation_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validation_id_.Set(value, GetArena());
}
inline std::string* LineageValidationSummary::_internal_mutable_validation_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.validation_id_.Mutable( GetArena());
}
inline std::string* LineageValidationSummary::release_validation_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.lineage.LineageValidationSummary.validation_id)
  return _impl_.validation_id_.Release();
}
inline void LineageValidationSummary::set_allocated_validation_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validation_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.validation_id_.IsDefault()) {
    _impl_.validation_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.lineage.LineageValidationSummary.validation_id)
}

// string lineage_id = 2;
inline void LineageValidationSummary::clear_lineage_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lineage_id_.ClearToEmpty();
}
inline const std::string& LineageValidationSummary::lineage_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.LineageValidationSummary.lineage_id)
  return _internal_lineage_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LineageValidationSummary::set_lineage_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lineage_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.lineage.LineageValidationSummary.lineage_id)
}
inline std::string* LineageValidationSummary::mutable_lineage_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_lineage_id();
  // @@protoc_insertion_point(field_mutable:seigr.lineage.LineageValidationSummary.lineage_id)
  return _s;
}
inline const std::string& LineageValidationSummary::_internal_lineage_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lineage_id_.Get();
}
inline void LineageValidationSummary::_internal_set_lineage_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lineage_id_.Set(value, GetArena());
}
inline std::string* LineageValidationSummary::_internal_mutable_lineage_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.lineage_id_.Mutable( GetArena());
}
inline std::string* LineageValidationSummary::release_lineage_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.lineage.LineageValidationSummary.lineage_id)
  return _impl_.lineage_id_.Release();
}
inline void LineageValidationSummary::set_allocated_lineage_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lineage_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.lineage_id_.IsDefault()) {
    _impl_.lineage_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.lineage.LineageValidationSummary.lineage_id)
}

// bool validation_successful = 3;
inline void LineageValidationSummary::clear_validation_successful() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validation_successful_ = false;
}
inline bool LineageValidationSummary::validation_successful() const {
  // @@protoc_insertion_point(field_get:seigr.lineage.LineageValidationSummary.validation_successful)
  return _internal_validation_successful();
}
inline void LineageValidationSummary::set_validation_successful(bool value) {
  _internal_set_validation_successful(value);
  // @@protoc_insertion_point(field_set:seigr.lineage.LineageValidationSummary.validation_successful)
}
inline bool LineageValidationSummary::_internal_validation_successful() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.validation_successful_;
}
inline void LineageValidationSummary::_internal_set_validation_successful(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validation_successful_ = value;
}

// repeated string warnings = 4;
inline int LineageValidationSummary::_internal_warnings_size() const {
  return _internal_warnings().size();
}
inline int LineageValidationSummary::warnings_size() const {
  return _internal_warnings_size();
}
inline void LineageValidationSummary::clear_warnings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.warnings_.Clear();
}
inline std::string* LineageValidationSummary::add_warnings() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_warnings()->Add();
  // @@protoc_insertion_point(field_add_mutable:seigr.lineage.LineageValidationSummary.warnings)
  return _s;
}
inline const std::string& LineageValidationSummary::warnings(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.LineageValidationSummary.warnings)
  return _internal_warnings().Get(index);
}
inline std::string* LineageValidationSummary::mutable_warnings(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.lineage.LineageValidationSummary.warnings)
  return _internal_mutable_warnings()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void LineageValidationSummary::set_warnings(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_warnings()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:seigr.lineage.LineageValidationSummary.warnings)
}
template <typename Arg_, typename... Args_>
inline void LineageValidationSummary::add_warnings(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_warnings(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seigr.lineage.LineageValidationSummary.warnings)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
LineageValidationSummary::warnings() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.lineage.LineageValidationSummary.warnings)
  return _internal_warnings();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
LineageValidationSummary::mutable_warnings() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.lineage.LineageValidationSummary.warnings)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_warnings();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
LineageValidationSummary::_internal_warnings() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.warnings_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
LineageValidationSummary::_internal_mutable_warnings() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.warnings_;
}

// repeated string errors = 5;
inline int LineageValidationSummary::_internal_errors_size() const {
  return _internal_errors().size();
}
inline int LineageValidationSummary::errors_size() const {
  return _internal_errors_size();
}
inline void LineageValidationSummary::clear_errors() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.errors_.Clear();
}
inline std::string* LineageValidationSummary::add_errors() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_errors()->Add();
  // @@protoc_insertion_point(field_add_mutable:seigr.lineage.LineageValidationSummary.errors)
  return _s;
}
inline const std::string& LineageValidationSummary::errors(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.LineageValidationSummary.errors)
  return _internal_errors().Get(index);
}
inline std::string* LineageValidationSummary::mutable_errors(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.lineage.LineageValidationSummary.errors)
  return _internal_mutable_errors()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void LineageValidationSummary::set_errors(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_errors()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:seigr.lineage.LineageValidationSummary.errors)
}
template <typename Arg_, typename... Args_>
inline void LineageValidationSummary::add_errors(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_errors(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seigr.lineage.LineageValidationSummary.errors)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
LineageValidationSummary::errors() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.lineage.LineageValidationSummary.errors)
  return _internal_errors();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
LineageValidationSummary::mutable_errors() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.lineage.LineageValidationSummary.errors)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_errors();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
LineageValidationSummary::_internal_errors() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.errors_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
LineageValidationSummary::_internal_mutable_errors() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.errors_;
}

// string validation_timestamp = 6;
inline void LineageValidationSummary::clear_validation_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validation_timestamp_.ClearToEmpty();
}
inline const std::string& LineageValidationSummary::validation_timestamp() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.LineageValidationSummary.validation_timestamp)
  return _internal_validation_timestamp();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LineageValidationSummary::set_validation_timestamp(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validation_timestamp_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.lineage.LineageValidationSummary.validation_timestamp)
}
inline std::string* LineageValidationSummary::mutable_validation_timestamp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_validation_timestamp();
  // @@protoc_insertion_point(field_mutable:seigr.lineage.LineageValidationSummary.validation_timestamp)
  return _s;
}
inline const std::string& LineageValidationSummary::_internal_validation_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.validation_timestamp_.Get();
}
inline void LineageValidationSummary::_internal_set_validation_timestamp(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validation_timestamp_.Set(value, GetArena());
}
inline std::string* LineageValidationSummary::_internal_mutable_validation_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.validation_timestamp_.Mutable( GetArena());
}
inline std::string* LineageValidationSummary::release_validation_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.lineage.LineageValidationSummary.validation_timestamp)
  return _impl_.validation_timestamp_.Release();
}
inline void LineageValidationSummary::set_allocated_validation_timestamp(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validation_timestamp_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.validation_timestamp_.IsDefault()) {
    _impl_.validation_timestamp_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.lineage.LineageValidationSummary.validation_timestamp)
}

// string validated_by = 7;
inline void LineageValidationSummary::clear_validated_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validated_by_.ClearToEmpty();
}
inline const std::string& LineageValidationSummary::validated_by() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.LineageValidationSummary.validated_by)
  return _internal_validated_by();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LineageValidationSummary::set_validated_by(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validated_by_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.lineage.LineageValidationSummary.validated_by)
}
inline std::string* LineageValidationSummary::mutable_validated_by() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_validated_by();
  // @@protoc_insertion_point(field_mutable:seigr.lineage.LineageValidationSummary.validated_by)
  return _s;
}
inline const std::string& LineageValidationSummary::_internal_validated_by() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.validated_by_.Get();
}
inline void LineageValidationSummary::_internal_set_validated_by(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validated_by_.Set(value, GetArena());
}
inline std::string* LineageValidationSummary::_internal_mutable_validated_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.validated_by_.Mutable( GetArena());
}
inline std::string* LineageValidationSummary::release_validated_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.lineage.LineageValidationSummary.validated_by)
  return _impl_.validated_by_.Release();
}
inline void LineageValidationSummary::set_allocated_validated_by(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validated_by_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.validated_by_.IsDefault()) {
    _impl_.validated_by_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.lineage.LineageValidationSummary.validated_by)
}

// string integrity_checksum = 8;
inline void LineageValidationSummary::clear_integrity_checksum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.integrity_checksum_.ClearToEmpty();
}
inline const std::string& LineageValidationSummary::integrity_checksum() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.LineageValidationSummary.integrity_checksum)
  return _internal_integrity_checksum();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LineageValidationSummary::set_integrity_checksum(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.integrity_checksum_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.lineage.LineageValidationSummary.integrity_checksum)
}
inline std::string* LineageValidationSummary::mutable_integrity_checksum() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_integrity_checksum();
  // @@protoc_insertion_point(field_mutable:seigr.lineage.LineageValidationSummary.integrity_checksum)
  return _s;
}
inline const std::string& LineageValidationSummary::_internal_integrity_checksum() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.integrity_checksum_.Get();
}
inline void LineageValidationSummary::_internal_set_integrity_checksum(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.integrity_checksum_.Set(value, GetArena());
}
inline std::string* LineageValidationSummary::_internal_mutable_integrity_checksum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.integrity_checksum_.Mutable( GetArena());
}
inline std::string* LineageValidationSummary::release_integrity_checksum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.lineage.LineageValidationSummary.integrity_checksum)
  return _impl_.integrity_checksum_.Release();
}
inline void LineageValidationSummary::set_allocated_integrity_checksum(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.integrity_checksum_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.integrity_checksum_.IsDefault()) {
    _impl_.integrity_checksum_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.lineage.LineageValidationSummary.integrity_checksum)
}

// map<string, string> validation_metadata = 9;
inline int LineageValidationSummary::_internal_validation_metadata_size() const {
  return _internal_validation_metadata().size();
}
inline int LineageValidationSummary::validation_metadata_size() const {
  return _internal_validation_metadata_size();
}
inline void LineageValidationSummary::clear_validation_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validation_metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& LineageValidationSummary::_internal_validation_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.validation_metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& LineageValidationSummary::validation_metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.lineage.LineageValidationSummary.validation_metadata)
  return _internal_validation_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* LineageValidationSummary::_internal_mutable_validation_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.validation_metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* LineageValidationSummary::mutable_validation_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.lineage.LineageValidationSummary.validation_metadata)
  return _internal_mutable_validation_metadata();
}

// string recommended_action = 10;
inline void LineageValidationSummary::clear_recommended_action() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recommended_action_.ClearToEmpty();
}
inline const std::string& LineageValidationSummary::recommended_action() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.LineageValidationSummary.recommended_action)
  return _internal_recommended_action();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LineageValidationSummary::set_recommended_action(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recommended_action_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.lineage.LineageValidationSummary.recommended_action)
}
inline std::string* LineageValidationSummary::mutable_recommended_action() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_recommended_action();
  // @@protoc_insertion_point(field_mutable:seigr.lineage.LineageValidationSummary.recommended_action)
  return _s;
}
inline const std::string& LineageValidationSummary::_internal_recommended_action() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.recommended_action_.Get();
}
inline void LineageValidationSummary::_internal_set_recommended_action(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recommended_action_.Set(value, GetArena());
}
inline std::string* LineageValidationSummary::_internal_mutable_recommended_action() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.recommended_action_.Mutable( GetArena());
}
inline std::string* LineageValidationSummary::release_recommended_action() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.lineage.LineageValidationSummary.recommended_action)
  return _impl_.recommended_action_.Release();
}
inline void LineageValidationSummary::set_allocated_recommended_action(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recommended_action_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.recommended_action_.IsDefault()) {
    _impl_.recommended_action_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.lineage.LineageValidationSummary.recommended_action)
}

// repeated string dependency_checks = 11;
inline int LineageValidationSummary::_internal_dependency_checks_size() const {
  return _internal_dependency_checks().size();
}
inline int LineageValidationSummary::dependency_checks_size() const {
  return _internal_dependency_checks_size();
}
inline void LineageValidationSummary::clear_dependency_checks() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dependency_checks_.Clear();
}
inline std::string* LineageValidationSummary::add_dependency_checks() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_dependency_checks()->Add();
  // @@protoc_insertion_point(field_add_mutable:seigr.lineage.LineageValidationSummary.dependency_checks)
  return _s;
}
inline const std::string& LineageValidationSummary::dependency_checks(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.LineageValidationSummary.dependency_checks)
  return _internal_dependency_checks().Get(index);
}
inline std::string* LineageValidationSummary::mutable_dependency_checks(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.lineage.LineageValidationSummary.dependency_checks)
  return _internal_mutable_dependency_checks()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void LineageValidationSummary::set_dependency_checks(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_dependency_checks()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:seigr.lineage.LineageValidationSummary.dependency_checks)
}
template <typename Arg_, typename... Args_>
inline void LineageValidationSummary::add_dependency_checks(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_dependency_checks(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seigr.lineage.LineageValidationSummary.dependency_checks)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
LineageValidationSummary::dependency_checks() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.lineage.LineageValidationSummary.dependency_checks)
  return _internal_dependency_checks();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
LineageValidationSummary::mutable_dependency_checks() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.lineage.LineageValidationSummary.dependency_checks)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_dependency_checks();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
LineageValidationSummary::_internal_dependency_checks() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dependency_checks_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
LineageValidationSummary::_internal_mutable_dependency_checks() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.dependency_checks_;
}

// string rollback_advice = 12;
inline void LineageValidationSummary::clear_rollback_advice() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rollback_advice_.ClearToEmpty();
}
inline const std::string& LineageValidationSummary::rollback_advice() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.LineageValidationSummary.rollback_advice)
  return _internal_rollback_advice();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LineageValidationSummary::set_rollback_advice(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rollback_advice_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.lineage.LineageValidationSummary.rollback_advice)
}
inline std::string* LineageValidationSummary::mutable_rollback_advice() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_rollback_advice();
  // @@protoc_insertion_point(field_mutable:seigr.lineage.LineageValidationSummary.rollback_advice)
  return _s;
}
inline const std::string& LineageValidationSummary::_internal_rollback_advice() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rollback_advice_.Get();
}
inline void LineageValidationSummary::_internal_set_rollback_advice(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rollback_advice_.Set(value, GetArena());
}
inline std::string* LineageValidationSummary::_internal_mutable_rollback_advice() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.rollback_advice_.Mutable( GetArena());
}
inline std::string* LineageValidationSummary::release_rollback_advice() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.lineage.LineageValidationSummary.rollback_advice)
  return _impl_.rollback_advice_.Release();
}
inline void LineageValidationSummary::set_allocated_rollback_advice(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rollback_advice_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.rollback_advice_.IsDefault()) {
    _impl_.rollback_advice_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.lineage.LineageValidationSummary.rollback_advice)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// LineageAuditTrail

// string audit_id = 1;
inline void LineageAuditTrail::clear_audit_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.audit_id_.ClearToEmpty();
}
inline const std::string& LineageAuditTrail::audit_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.LineageAuditTrail.audit_id)
  return _internal_audit_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LineageAuditTrail::set_audit_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.audit_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.lineage.LineageAuditTrail.audit_id)
}
inline std::string* LineageAuditTrail::mutable_audit_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_audit_id();
  // @@protoc_insertion_point(field_mutable:seigr.lineage.LineageAuditTrail.audit_id)
  return _s;
}
inline const std::string& LineageAuditTrail::_internal_audit_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.audit_id_.Get();
}
inline void LineageAuditTrail::_internal_set_audit_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.audit_id_.Set(value, GetArena());
}
inline std::string* LineageAuditTrail::_internal_mutable_audit_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.audit_id_.Mutable( GetArena());
}
inline std::string* LineageAuditTrail::release_audit_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.lineage.LineageAuditTrail.audit_id)
  return _impl_.audit_id_.Release();
}
inline void LineageAuditTrail::set_allocated_audit_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.audit_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.audit_id_.IsDefault()) {
    _impl_.audit_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.lineage.LineageAuditTrail.audit_id)
}

// string lineage_id = 2;
inline void LineageAuditTrail::clear_lineage_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lineage_id_.ClearToEmpty();
}
inline const std::string& LineageAuditTrail::lineage_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.LineageAuditTrail.lineage_id)
  return _internal_lineage_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LineageAuditTrail::set_lineage_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lineage_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.lineage.LineageAuditTrail.lineage_id)
}
inline std::string* LineageAuditTrail::mutable_lineage_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_lineage_id();
  // @@protoc_insertion_point(field_mutable:seigr.lineage.LineageAuditTrail.lineage_id)
  return _s;
}
inline const std::string& LineageAuditTrail::_internal_lineage_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lineage_id_.Get();
}
inline void LineageAuditTrail::_internal_set_lineage_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lineage_id_.Set(value, GetArena());
}
inline std::string* LineageAuditTrail::_internal_mutable_lineage_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.lineage_id_.Mutable( GetArena());
}
inline std::string* LineageAuditTrail::release_lineage_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.lineage.LineageAuditTrail.lineage_id)
  return _impl_.lineage_id_.Release();
}
inline void LineageAuditTrail::set_allocated_lineage_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lineage_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.lineage_id_.IsDefault()) {
    _impl_.lineage_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.lineage.LineageAuditTrail.lineage_id)
}

// string event_description = 3;
inline void LineageAuditTrail::clear_event_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.event_description_.ClearToEmpty();
}
inline const std::string& LineageAuditTrail::event_description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.LineageAuditTrail.event_description)
  return _internal_event_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LineageAuditTrail::set_event_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.event_description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.lineage.LineageAuditTrail.event_description)
}
inline std::string* LineageAuditTrail::mutable_event_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_event_description();
  // @@protoc_insertion_point(field_mutable:seigr.lineage.LineageAuditTrail.event_description)
  return _s;
}
inline const std::string& LineageAuditTrail::_internal_event_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.event_description_.Get();
}
inline void LineageAuditTrail::_internal_set_event_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.event_description_.Set(value, GetArena());
}
inline std::string* LineageAuditTrail::_internal_mutable_event_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.event_description_.Mutable( GetArena());
}
inline std::string* LineageAuditTrail::release_event_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.lineage.LineageAuditTrail.event_description)
  return _impl_.event_description_.Release();
}
inline void LineageAuditTrail::set_allocated_event_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.event_description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.event_description_.IsDefault()) {
    _impl_.event_description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.lineage.LineageAuditTrail.event_description)
}

// string performed_by = 4;
inline void LineageAuditTrail::clear_performed_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.performed_by_.ClearToEmpty();
}
inline const std::string& LineageAuditTrail::performed_by() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.LineageAuditTrail.performed_by)
  return _internal_performed_by();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LineageAuditTrail::set_performed_by(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.performed_by_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.lineage.LineageAuditTrail.performed_by)
}
inline std::string* LineageAuditTrail::mutable_performed_by() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_performed_by();
  // @@protoc_insertion_point(field_mutable:seigr.lineage.LineageAuditTrail.performed_by)
  return _s;
}
inline const std::string& LineageAuditTrail::_internal_performed_by() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.performed_by_.Get();
}
inline void LineageAuditTrail::_internal_set_performed_by(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.performed_by_.Set(value, GetArena());
}
inline std::string* LineageAuditTrail::_internal_mutable_performed_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.performed_by_.Mutable( GetArena());
}
inline std::string* LineageAuditTrail::release_performed_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.lineage.LineageAuditTrail.performed_by)
  return _impl_.performed_by_.Release();
}
inline void LineageAuditTrail::set_allocated_performed_by(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.performed_by_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.performed_by_.IsDefault()) {
    _impl_.performed_by_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.lineage.LineageAuditTrail.performed_by)
}

// string event_timestamp = 5;
inline void LineageAuditTrail::clear_event_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.event_timestamp_.ClearToEmpty();
}
inline const std::string& LineageAuditTrail::event_timestamp() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.LineageAuditTrail.event_timestamp)
  return _internal_event_timestamp();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LineageAuditTrail::set_event_timestamp(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.event_timestamp_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.lineage.LineageAuditTrail.event_timestamp)
}
inline std::string* LineageAuditTrail::mutable_event_timestamp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_event_timestamp();
  // @@protoc_insertion_point(field_mutable:seigr.lineage.LineageAuditTrail.event_timestamp)
  return _s;
}
inline const std::string& LineageAuditTrail::_internal_event_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.event_timestamp_.Get();
}
inline void LineageAuditTrail::_internal_set_event_timestamp(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.event_timestamp_.Set(value, GetArena());
}
inline std::string* LineageAuditTrail::_internal_mutable_event_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.event_timestamp_.Mutable( GetArena());
}
inline std::string* LineageAuditTrail::release_event_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.lineage.LineageAuditTrail.event_timestamp)
  return _impl_.event_timestamp_.Release();
}
inline void LineageAuditTrail::set_allocated_event_timestamp(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.event_timestamp_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.event_timestamp_.IsDefault()) {
    _impl_.event_timestamp_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.lineage.LineageAuditTrail.event_timestamp)
}

// string event_status = 6;
inline void LineageAuditTrail::clear_event_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.event_status_.ClearToEmpty();
}
inline const std::string& LineageAuditTrail::event_status() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.LineageAuditTrail.event_status)
  return _internal_event_status();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LineageAuditTrail::set_event_status(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.event_status_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.lineage.LineageAuditTrail.event_status)
}
inline std::string* LineageAuditTrail::mutable_event_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_event_status();
  // @@protoc_insertion_point(field_mutable:seigr.lineage.LineageAuditTrail.event_status)
  return _s;
}
inline const std::string& LineageAuditTrail::_internal_event_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.event_status_.Get();
}
inline void LineageAuditTrail::_internal_set_event_status(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.event_status_.Set(value, GetArena());
}
inline std::string* LineageAuditTrail::_internal_mutable_event_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.event_status_.Mutable( GetArena());
}
inline std::string* LineageAuditTrail::release_event_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.lineage.LineageAuditTrail.event_status)
  return _impl_.event_status_.Release();
}
inline void LineageAuditTrail::set_allocated_event_status(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.event_status_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.event_status_.IsDefault()) {
    _impl_.event_status_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.lineage.LineageAuditTrail.event_status)
}

// map<string, string> audit_metadata = 7;
inline int LineageAuditTrail::_internal_audit_metadata_size() const {
  return _internal_audit_metadata().size();
}
inline int LineageAuditTrail::audit_metadata_size() const {
  return _internal_audit_metadata_size();
}
inline void LineageAuditTrail::clear_audit_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.audit_metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& LineageAuditTrail::_internal_audit_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.audit_metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& LineageAuditTrail::audit_metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.lineage.LineageAuditTrail.audit_metadata)
  return _internal_audit_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* LineageAuditTrail::_internal_mutable_audit_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.audit_metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* LineageAuditTrail::mutable_audit_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.lineage.LineageAuditTrail.audit_metadata)
  return _internal_mutable_audit_metadata();
}

// repeated string affected_entries = 8;
inline int LineageAuditTrail::_internal_affected_entries_size() const {
  return _internal_affected_entries().size();
}
inline int LineageAuditTrail::affected_entries_size() const {
  return _internal_affected_entries_size();
}
inline void LineageAuditTrail::clear_affected_entries() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.affected_entries_.Clear();
}
inline std::string* LineageAuditTrail::add_affected_entries() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_affected_entries()->Add();
  // @@protoc_insertion_point(field_add_mutable:seigr.lineage.LineageAuditTrail.affected_entries)
  return _s;
}
inline const std::string& LineageAuditTrail::affected_entries(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.LineageAuditTrail.affected_entries)
  return _internal_affected_entries().Get(index);
}
inline std::string* LineageAuditTrail::mutable_affected_entries(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.lineage.LineageAuditTrail.affected_entries)
  return _internal_mutable_affected_entries()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void LineageAuditTrail::set_affected_entries(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_affected_entries()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:seigr.lineage.LineageAuditTrail.affected_entries)
}
template <typename Arg_, typename... Args_>
inline void LineageAuditTrail::add_affected_entries(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_affected_entries(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seigr.lineage.LineageAuditTrail.affected_entries)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
LineageAuditTrail::affected_entries() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.lineage.LineageAuditTrail.affected_entries)
  return _internal_affected_entries();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
LineageAuditTrail::mutable_affected_entries() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.lineage.LineageAuditTrail.affected_entries)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_affected_entries();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
LineageAuditTrail::_internal_affected_entries() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.affected_entries_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
LineageAuditTrail::_internal_mutable_affected_entries() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.affected_entries_;
}

// bool compliance_verified = 9;
inline void LineageAuditTrail::clear_compliance_verified() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.compliance_verified_ = false;
}
inline bool LineageAuditTrail::compliance_verified() const {
  // @@protoc_insertion_point(field_get:seigr.lineage.LineageAuditTrail.compliance_verified)
  return _internal_compliance_verified();
}
inline void LineageAuditTrail::set_compliance_verified(bool value) {
  _internal_set_compliance_verified(value);
  // @@protoc_insertion_point(field_set:seigr.lineage.LineageAuditTrail.compliance_verified)
}
inline bool LineageAuditTrail::_internal_compliance_verified() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.compliance_verified_;
}
inline void LineageAuditTrail::_internal_set_compliance_verified(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.compliance_verified_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// TemporalLayer

// string layer_id = 1;
inline void TemporalLayer::clear_layer_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.layer_id_.ClearToEmpty();
}
inline const std::string& TemporalLayer::layer_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.TemporalLayer.layer_id)
  return _internal_layer_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TemporalLayer::set_layer_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.layer_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.lineage.TemporalLayer.layer_id)
}
inline std::string* TemporalLayer::mutable_layer_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_layer_id();
  // @@protoc_insertion_point(field_mutable:seigr.lineage.TemporalLayer.layer_id)
  return _s;
}
inline const std::string& TemporalLayer::_internal_layer_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.layer_id_.Get();
}
inline void TemporalLayer::_internal_set_layer_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.layer_id_.Set(value, GetArena());
}
inline std::string* TemporalLayer::_internal_mutable_layer_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.layer_id_.Mutable( GetArena());
}
inline std::string* TemporalLayer::release_layer_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.lineage.TemporalLayer.layer_id)
  return _impl_.layer_id_.Release();
}
inline void TemporalLayer::set_allocated_layer_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.layer_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.layer_id_.IsDefault()) {
    _impl_.layer_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.lineage.TemporalLayer.layer_id)
}

// string timestamp = 2;
inline void TemporalLayer::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.ClearToEmpty();
}
inline const std::string& TemporalLayer::timestamp() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.TemporalLayer.timestamp)
  return _internal_timestamp();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TemporalLayer::set_timestamp(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.lineage.TemporalLayer.timestamp)
}
inline std::string* TemporalLayer::mutable_timestamp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_timestamp();
  // @@protoc_insertion_point(field_mutable:seigr.lineage.TemporalLayer.timestamp)
  return _s;
}
inline const std::string& TemporalLayer::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_.Get();
}
inline void TemporalLayer::_internal_set_timestamp(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.Set(value, GetArena());
}
inline std::string* TemporalLayer::_internal_mutable_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.timestamp_.Mutable( GetArena());
}
inline std::string* TemporalLayer::release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.lineage.TemporalLayer.timestamp)
  return _impl_.timestamp_.Release();
}
inline void TemporalLayer::set_allocated_timestamp(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.timestamp_.IsDefault()) {
    _impl_.timestamp_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.lineage.TemporalLayer.timestamp)
}

// string state_snapshot = 3;
inline void TemporalLayer::clear_state_snapshot() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_snapshot_.ClearToEmpty();
}
inline const std::string& TemporalLayer::state_snapshot() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.TemporalLayer.state_snapshot)
  return _internal_state_snapshot();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TemporalLayer::set_state_snapshot(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_snapshot_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.lineage.TemporalLayer.state_snapshot)
}
inline std::string* TemporalLayer::mutable_state_snapshot() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_state_snapshot();
  // @@protoc_insertion_point(field_mutable:seigr.lineage.TemporalLayer.state_snapshot)
  return _s;
}
inline const std::string& TemporalLayer::_internal_state_snapshot() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.state_snapshot_.Get();
}
inline void TemporalLayer::_internal_set_state_snapshot(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_snapshot_.Set(value, GetArena());
}
inline std::string* TemporalLayer::_internal_mutable_state_snapshot() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.state_snapshot_.Mutable( GetArena());
}
inline std::string* TemporalLayer::release_state_snapshot() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.lineage.TemporalLayer.state_snapshot)
  return _impl_.state_snapshot_.Release();
}
inline void TemporalLayer::set_allocated_state_snapshot(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_snapshot_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.state_snapshot_.IsDefault()) {
    _impl_.state_snapshot_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.lineage.TemporalLayer.state_snapshot)
}

// string description = 4;
inline void TemporalLayer::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
}
inline const std::string& TemporalLayer::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.TemporalLayer.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TemporalLayer::set_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.lineage.TemporalLayer.description)
}
inline std::string* TemporalLayer::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:seigr.lineage.TemporalLayer.description)
  return _s;
}
inline const std::string& TemporalLayer::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void TemporalLayer::_internal_set_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(value, GetArena());
}
inline std::string* TemporalLayer::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* TemporalLayer::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.lineage.TemporalLayer.description)
  return _impl_.description_.Release();
}
inline void TemporalLayer::set_allocated_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.lineage.TemporalLayer.description)
}

// string created_by = 5;
inline void TemporalLayer::clear_created_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_by_.ClearToEmpty();
}
inline const std::string& TemporalLayer::created_by() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.TemporalLayer.created_by)
  return _internal_created_by();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TemporalLayer::set_created_by(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_by_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.lineage.TemporalLayer.created_by)
}
inline std::string* TemporalLayer::mutable_created_by() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_created_by();
  // @@protoc_insertion_point(field_mutable:seigr.lineage.TemporalLayer.created_by)
  return _s;
}
inline const std::string& TemporalLayer::_internal_created_by() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_by_.Get();
}
inline void TemporalLayer::_internal_set_created_by(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_by_.Set(value, GetArena());
}
inline std::string* TemporalLayer::_internal_mutable_created_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.created_by_.Mutable( GetArena());
}
inline std::string* TemporalLayer::release_created_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.lineage.TemporalLayer.created_by)
  return _impl_.created_by_.Release();
}
inline void TemporalLayer::set_allocated_created_by(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_by_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.created_by_.IsDefault()) {
    _impl_.created_by_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.lineage.TemporalLayer.created_by)
}

// string layer_hash = 6;
inline void TemporalLayer::clear_layer_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.layer_hash_.ClearToEmpty();
}
inline const std::string& TemporalLayer::layer_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.TemporalLayer.layer_hash)
  return _internal_layer_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TemporalLayer::set_layer_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.layer_hash_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.lineage.TemporalLayer.layer_hash)
}
inline std::string* TemporalLayer::mutable_layer_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_layer_hash();
  // @@protoc_insertion_point(field_mutable:seigr.lineage.TemporalLayer.layer_hash)
  return _s;
}
inline const std::string& TemporalLayer::_internal_layer_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.layer_hash_.Get();
}
inline void TemporalLayer::_internal_set_layer_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.layer_hash_.Set(value, GetArena());
}
inline std::string* TemporalLayer::_internal_mutable_layer_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.layer_hash_.Mutable( GetArena());
}
inline std::string* TemporalLayer::release_layer_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.lineage.TemporalLayer.layer_hash)
  return _impl_.layer_hash_.Release();
}
inline void TemporalLayer::set_allocated_layer_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.layer_hash_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.layer_hash_.IsDefault()) {
    _impl_.layer_hash_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.lineage.TemporalLayer.layer_hash)
}

// string previous_layer_hash = 7;
inline void TemporalLayer::clear_previous_layer_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.previous_layer_hash_.ClearToEmpty();
}
inline const std::string& TemporalLayer::previous_layer_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.TemporalLayer.previous_layer_hash)
  return _internal_previous_layer_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TemporalLayer::set_previous_layer_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.previous_layer_hash_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.lineage.TemporalLayer.previous_layer_hash)
}
inline std::string* TemporalLayer::mutable_previous_layer_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_previous_layer_hash();
  // @@protoc_insertion_point(field_mutable:seigr.lineage.TemporalLayer.previous_layer_hash)
  return _s;
}
inline const std::string& TemporalLayer::_internal_previous_layer_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.previous_layer_hash_.Get();
}
inline void TemporalLayer::_internal_set_previous_layer_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.previous_layer_hash_.Set(value, GetArena());
}
inline std::string* TemporalLayer::_internal_mutable_previous_layer_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.previous_layer_hash_.Mutable( GetArena());
}
inline std::string* TemporalLayer::release_previous_layer_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.lineage.TemporalLayer.previous_layer_hash)
  return _impl_.previous_layer_hash_.Release();
}
inline void TemporalLayer::set_allocated_previous_layer_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.previous_layer_hash_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.previous_layer_hash_.IsDefault()) {
    _impl_.previous_layer_hash_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.lineage.TemporalLayer.previous_layer_hash)
}

// bool rollback_allowed = 8;
inline void TemporalLayer::clear_rollback_allowed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rollback_allowed_ = false;
}
inline bool TemporalLayer::rollback_allowed() const {
  // @@protoc_insertion_point(field_get:seigr.lineage.TemporalLayer.rollback_allowed)
  return _internal_rollback_allowed();
}
inline void TemporalLayer::set_rollback_allowed(bool value) {
  _internal_set_rollback_allowed(value);
  // @@protoc_insertion_point(field_set:seigr.lineage.TemporalLayer.rollback_allowed)
}
inline bool TemporalLayer::_internal_rollback_allowed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rollback_allowed_;
}
inline void TemporalLayer::_internal_set_rollback_allowed(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rollback_allowed_ = value;
}

// repeated .seigr.segment_metadata.SegmentMetadata segments = 9;
inline int TemporalLayer::_internal_segments_size() const {
  return _internal_segments().size();
}
inline int TemporalLayer::segments_size() const {
  return _internal_segments_size();
}
inline ::seigr::segment_metadata::SegmentMetadata* TemporalLayer::mutable_segments(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.lineage.TemporalLayer.segments)
  return _internal_mutable_segments()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seigr::segment_metadata::SegmentMetadata>* TemporalLayer::mutable_segments()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.lineage.TemporalLayer.segments)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_segments();
}
inline const ::seigr::segment_metadata::SegmentMetadata& TemporalLayer::segments(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.TemporalLayer.segments)
  return _internal_segments().Get(index);
}
inline ::seigr::segment_metadata::SegmentMetadata* TemporalLayer::add_segments() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seigr::segment_metadata::SegmentMetadata* _add = _internal_mutable_segments()->Add();
  // @@protoc_insertion_point(field_add:seigr.lineage.TemporalLayer.segments)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seigr::segment_metadata::SegmentMetadata>& TemporalLayer::segments() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.lineage.TemporalLayer.segments)
  return _internal_segments();
}
inline const ::google::protobuf::RepeatedPtrField<::seigr::segment_metadata::SegmentMetadata>&
TemporalLayer::_internal_segments() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.segments_;
}
inline ::google::protobuf::RepeatedPtrField<::seigr::segment_metadata::SegmentMetadata>*
TemporalLayer::_internal_mutable_segments() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.segments_;
}

// repeated string checksum_segments = 10;
inline int TemporalLayer::_internal_checksum_segments_size() const {
  return _internal_checksum_segments().size();
}
inline int TemporalLayer::checksum_segments_size() const {
  return _internal_checksum_segments_size();
}
inline void TemporalLayer::clear_checksum_segments() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.checksum_segments_.Clear();
}
inline std::string* TemporalLayer::add_checksum_segments() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_checksum_segments()->Add();
  // @@protoc_insertion_point(field_add_mutable:seigr.lineage.TemporalLayer.checksum_segments)
  return _s;
}
inline const std::string& TemporalLayer::checksum_segments(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.TemporalLayer.checksum_segments)
  return _internal_checksum_segments().Get(index);
}
inline std::string* TemporalLayer::mutable_checksum_segments(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seigr.lineage.TemporalLayer.checksum_segments)
  return _internal_mutable_checksum_segments()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void TemporalLayer::set_checksum_segments(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_checksum_segments()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:seigr.lineage.TemporalLayer.checksum_segments)
}
template <typename Arg_, typename... Args_>
inline void TemporalLayer::add_checksum_segments(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_checksum_segments(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seigr.lineage.TemporalLayer.checksum_segments)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TemporalLayer::checksum_segments() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seigr.lineage.TemporalLayer.checksum_segments)
  return _internal_checksum_segments();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TemporalLayer::mutable_checksum_segments() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seigr.lineage.TemporalLayer.checksum_segments)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_checksum_segments();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TemporalLayer::_internal_checksum_segments() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.checksum_segments_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TemporalLayer::_internal_mutable_checksum_segments() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.checksum_segments_;
}

// map<string, bytes> data_snapshot = 11;
inline int TemporalLayer::_internal_data_snapshot_size() const {
  return _internal_data_snapshot().size();
}
inline int TemporalLayer::data_snapshot_size() const {
  return _internal_data_snapshot_size();
}
inline void TemporalLayer::clear_data_snapshot() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_snapshot_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& TemporalLayer::_internal_data_snapshot() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_snapshot_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& TemporalLayer::data_snapshot() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.lineage.TemporalLayer.data_snapshot)
  return _internal_data_snapshot();
}
inline ::google::protobuf::Map<std::string, std::string>* TemporalLayer::_internal_mutable_data_snapshot() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_snapshot_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* TemporalLayer::mutable_data_snapshot() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.lineage.TemporalLayer.data_snapshot)
  return _internal_mutable_data_snapshot();
}

// string backup_location = 12;
inline void TemporalLayer::clear_backup_location() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.backup_location_.ClearToEmpty();
}
inline const std::string& TemporalLayer::backup_location() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seigr.lineage.TemporalLayer.backup_location)
  return _internal_backup_location();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TemporalLayer::set_backup_location(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.backup_location_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seigr.lineage.TemporalLayer.backup_location)
}
inline std::string* TemporalLayer::mutable_backup_location() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_backup_location();
  // @@protoc_insertion_point(field_mutable:seigr.lineage.TemporalLayer.backup_location)
  return _s;
}
inline const std::string& TemporalLayer::_internal_backup_location() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.backup_location_.Get();
}
inline void TemporalLayer::_internal_set_backup_location(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.backup_location_.Set(value, GetArena());
}
inline std::string* TemporalLayer::_internal_mutable_backup_location() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.backup_location_.Mutable( GetArena());
}
inline std::string* TemporalLayer::release_backup_location() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seigr.lineage.TemporalLayer.backup_location)
  return _impl_.backup_location_.Release();
}
inline void TemporalLayer::set_allocated_backup_location(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.backup_location_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.backup_location_.IsDefault()) {
    _impl_.backup_location_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seigr.lineage.TemporalLayer.backup_location)
}

// map<string, string> metadata = 13;
inline int TemporalLayer::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int TemporalLayer::metadata_size() const {
  return _internal_metadata_size();
}
inline void TemporalLayer::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& TemporalLayer::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& TemporalLayer::metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seigr.lineage.TemporalLayer.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* TemporalLayer::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* TemporalLayer::mutable_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seigr.lineage.TemporalLayer.metadata)
  return _internal_mutable_metadata();
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace lineage
}  // namespace seigr


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::seigr::lineage::LineageType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::seigr::lineage::LineageType>() {
  return ::seigr::lineage::LineageType_descriptor();
}
template <>
struct is_proto_enum<::seigr::lineage::EntryType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::seigr::lineage::EntryType>() {
  return ::seigr::lineage::EntryType_descriptor();
}
template <>
struct is_proto_enum<::seigr::lineage::LineageStatus> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::seigr::lineage::LineageStatus>() {
  return ::seigr::lineage::LineageStatus_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // lineage_2eproto_2epb_2eh
