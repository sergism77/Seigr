// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: replication.proto
// Protobuf C++ Version: 5.29.2

#include "replication.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace seigr {
namespace replication {
              template <typename>
PROTOBUF_CONSTEXPR ReplicationSummary_SummaryMetadataEntry_DoNotUse::ReplicationSummary_SummaryMetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ReplicationSummary_SummaryMetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ReplicationSummary_SummaryMetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ReplicationSummary_SummaryMetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReplicationSummary_SummaryMetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReplicationSummary_SummaryMetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ReplicationSummary_SummaryMetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReplicationSummary_SummaryMetadataEntry_DoNotUseDefaultTypeInternal _ReplicationSummary_SummaryMetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR ReplicationSummary_EscalationCountsEntry_DoNotUse::ReplicationSummary_EscalationCountsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ReplicationSummary_EscalationCountsEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ReplicationSummary_EscalationCountsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ReplicationSummary_EscalationCountsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReplicationSummary_EscalationCountsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReplicationSummary_EscalationCountsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ReplicationSummary_EscalationCountsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReplicationSummary_EscalationCountsEntry_DoNotUseDefaultTypeInternal _ReplicationSummary_EscalationCountsEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR ReplicationStatus_MetadataEntry_DoNotUse::ReplicationStatus_MetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ReplicationStatus_MetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ReplicationStatus_MetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ReplicationStatus_MetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReplicationStatus_MetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReplicationStatus_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ReplicationStatus_MetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReplicationStatus_MetadataEntry_DoNotUseDefaultTypeInternal _ReplicationStatus_MetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR ReplicationEventLog_DetailsEntry_DoNotUse::ReplicationEventLog_DetailsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ReplicationEventLog_DetailsEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ReplicationEventLog_DetailsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ReplicationEventLog_DetailsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReplicationEventLog_DetailsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReplicationEventLog_DetailsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ReplicationEventLog_DetailsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReplicationEventLog_DetailsEntry_DoNotUseDefaultTypeInternal _ReplicationEventLog_DetailsEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR ReplicationEscalation_MetadataEntry_DoNotUse::ReplicationEscalation_MetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ReplicationEscalation_MetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ReplicationEscalation_MetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ReplicationEscalation_MetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReplicationEscalation_MetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReplicationEscalation_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ReplicationEscalation_MetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReplicationEscalation_MetadataEntry_DoNotUseDefaultTypeInternal _ReplicationEscalation_MetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR ReplicationEscalation_AlertPreferencesEntry_DoNotUse::ReplicationEscalation_AlertPreferencesEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ReplicationEscalation_AlertPreferencesEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ReplicationEscalation_AlertPreferencesEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ReplicationEscalation_AlertPreferencesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReplicationEscalation_AlertPreferencesEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReplicationEscalation_AlertPreferencesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ReplicationEscalation_AlertPreferencesEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReplicationEscalation_AlertPreferencesEntry_DoNotUseDefaultTypeInternal _ReplicationEscalation_AlertPreferencesEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR ReplicationConfig_MetadataEntry_DoNotUse::ReplicationConfig_MetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ReplicationConfig_MetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ReplicationConfig_MetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ReplicationConfig_MetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReplicationConfig_MetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReplicationConfig_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ReplicationConfig_MetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReplicationConfig_MetadataEntry_DoNotUseDefaultTypeInternal _ReplicationConfig_MetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR RedundancyManager_SegmentPriorityEntry_DoNotUse::RedundancyManager_SegmentPriorityEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : RedundancyManager_SegmentPriorityEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : RedundancyManager_SegmentPriorityEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct RedundancyManager_SegmentPriorityEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RedundancyManager_SegmentPriorityEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RedundancyManager_SegmentPriorityEntry_DoNotUseDefaultTypeInternal() {}
  union {
    RedundancyManager_SegmentPriorityEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RedundancyManager_SegmentPriorityEntry_DoNotUseDefaultTypeInternal _RedundancyManager_SegmentPriorityEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR RedundancyManager_RedundancyMetadataEntry_DoNotUse::RedundancyManager_RedundancyMetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : RedundancyManager_RedundancyMetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : RedundancyManager_RedundancyMetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct RedundancyManager_RedundancyMetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RedundancyManager_RedundancyMetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RedundancyManager_RedundancyMetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    RedundancyManager_RedundancyMetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RedundancyManager_RedundancyMetadataEntry_DoNotUseDefaultTypeInternal _RedundancyManager_RedundancyMetadataEntry_DoNotUse_default_instance_;

inline constexpr ReplicationStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : replica_hyphen_ids_{},
        metadata_{},
        segment_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        last_checked_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        failover_target_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        current_replication_count_{0},
        target_replication_count_{0},
        priority_{static_cast< ::seigr::common_requests::ReplicationPriority >(0)},
        replication_completed_{false},
        is_synchronized_{false},
        replication_speed_bytes_per_sec_{::int64_t{0}},
        estimated_completion_time_{0},
        replication_progress_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ReplicationStatus::ReplicationStatus(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ReplicationStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReplicationStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReplicationStatusDefaultTypeInternal() {}
  union {
    ReplicationStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReplicationStatusDefaultTypeInternal _ReplicationStatus_default_instance_;

inline constexpr ReplicationEventLog::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : details_{},
        event_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        segment_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        action_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        initiated_by_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        failover_status_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        initiator_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        escalation_level_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        resolution_notes_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        retries_attempted_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ReplicationEventLog::ReplicationEventLog(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ReplicationEventLogDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReplicationEventLogDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReplicationEventLogDefaultTypeInternal() {}
  union {
    ReplicationEventLog _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReplicationEventLogDefaultTypeInternal _ReplicationEventLog_default_instance_;

inline constexpr ReplicationEscalation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : alert_recipients_{},
        metadata_{},
        alert_preferences_{},
        escalation_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        segment_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        escalated_at_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        escalation_status_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        escalation_resolution_timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        fallback_strategy_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        priority_{static_cast< ::seigr::common_requests::ReplicationPriority >(0)},
        immediate_replication_triggered_{false},
        escalation_level_{static_cast< ::seigr::event::EscalationLevel >(0)},
        replication_delay_penalty_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ReplicationEscalation::ReplicationEscalation(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ReplicationEscalationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReplicationEscalationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReplicationEscalationDefaultTypeInternal() {}
  union {
    ReplicationEscalation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReplicationEscalationDefaultTypeInternal _ReplicationEscalation_default_instance_;

inline constexpr ReplicationConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : metadata_{},
        config_version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        redundancy_policy_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        replication_factor_{0},
        min_replication_factor_{0},
        max_replication_factor_{0},
        default_strategy_{static_cast< ::seigr::common_requests::ReplicationStrategy >(0)},
        adaptive_scaling_threshold_{0},
        adaptive_replication_enabled_{false},
        failover_enabled_{false},
        dynamic_redundancy_scaling_{false},
        load_balanced_replication_{false},
        auto_priority_adjustment_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ReplicationConfig::ReplicationConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ReplicationConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReplicationConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReplicationConfigDefaultTypeInternal() {}
  union {
    ReplicationConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReplicationConfigDefaultTypeInternal _ReplicationConfig_default_instance_;

inline constexpr RedundancyManager::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : segment_priority_{},
        high_priority_segments_{},
        critical_segments_{},
        redundancy_metadata_{},
        adaptive_redundancy_policy_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        min_redundancy_level_{0},
        max_redundancy_level_{0},
        failover_timeout_seconds_{0},
        adaptive_redundancy_{false},
        cross_cluster_replication_enabled_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RedundancyManager::RedundancyManager(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RedundancyManagerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RedundancyManagerDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RedundancyManagerDefaultTypeInternal() {}
  union {
    RedundancyManager _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RedundancyManagerDefaultTypeInternal _RedundancyManager_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR ReplicationSummary_SegmentStatusesEntry_DoNotUse::ReplicationSummary_SegmentStatusesEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ReplicationSummary_SegmentStatusesEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ReplicationSummary_SegmentStatusesEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ReplicationSummary_SegmentStatusesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReplicationSummary_SegmentStatusesEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReplicationSummary_SegmentStatusesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ReplicationSummary_SegmentStatusesEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReplicationSummary_SegmentStatusesEntry_DoNotUseDefaultTypeInternal _ReplicationSummary_SegmentStatusesEntry_DoNotUse_default_instance_;

inline constexpr ReplicationSummary::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : segment_statuses_{},
        summary_metadata_{},
        escalation_counts_{},
        summary_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        generated_at_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        total_segments_replicated_{0},
        high_priority_replications_{0},
        failed_replications_{0},
        ongoing_replications_{0},
        total_data_replicated_bytes_{::int64_t{0}},
        average_replication_time_{0},
        synchronization_rate_{0},
        failover_rate_{0},
        redundancy_satisfaction_rate_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ReplicationSummary::ReplicationSummary(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ReplicationSummaryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReplicationSummaryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReplicationSummaryDefaultTypeInternal() {}
  union {
    ReplicationSummary _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReplicationSummaryDefaultTypeInternal _ReplicationSummary_default_instance_;
}  // namespace replication
}  // namespace seigr
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_replication_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_replication_2eproto = nullptr;
const ::uint32_t
    TableStruct_replication_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationConfig_MetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationConfig_MetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationConfig_MetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationConfig_MetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationConfig, _impl_.replication_factor_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationConfig, _impl_.min_replication_factor_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationConfig, _impl_.max_replication_factor_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationConfig, _impl_.adaptive_replication_enabled_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationConfig, _impl_.default_strategy_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationConfig, _impl_.config_version_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationConfig, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationConfig, _impl_.adaptive_scaling_threshold_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationConfig, _impl_.failover_enabled_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationConfig, _impl_.dynamic_redundancy_scaling_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationConfig, _impl_.load_balanced_replication_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationConfig, _impl_.auto_priority_adjustment_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationConfig, _impl_.redundancy_policy_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationStatus_MetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationStatus_MetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationStatus_MetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationStatus_MetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationStatus, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationStatus, _impl_.segment_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationStatus, _impl_.current_replication_count_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationStatus, _impl_.target_replication_count_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationStatus, _impl_.replica_hyphen_ids_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationStatus, _impl_.replication_completed_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationStatus, _impl_.priority_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationStatus, _impl_.last_checked_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationStatus, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationStatus, _impl_.failover_target_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationStatus, _impl_.estimated_completion_time_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationStatus, _impl_.replication_speed_bytes_per_sec_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationStatus, _impl_.replication_progress_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationStatus, _impl_.is_synchronized_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationEventLog_DetailsEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationEventLog_DetailsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationEventLog_DetailsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationEventLog_DetailsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationEventLog, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationEventLog, _impl_.event_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationEventLog, _impl_.segment_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationEventLog, _impl_.action_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationEventLog, _impl_.initiated_by_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationEventLog, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationEventLog, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationEventLog, _impl_.details_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationEventLog, _impl_.failover_status_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationEventLog, _impl_.initiator_type_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationEventLog, _impl_.retries_attempted_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationEventLog, _impl_.escalation_level_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationEventLog, _impl_.resolution_notes_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::RedundancyManager_SegmentPriorityEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::RedundancyManager_SegmentPriorityEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::replication::RedundancyManager_SegmentPriorityEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::RedundancyManager_SegmentPriorityEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::seigr::replication::RedundancyManager_RedundancyMetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::RedundancyManager_RedundancyMetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::replication::RedundancyManager_RedundancyMetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::RedundancyManager_RedundancyMetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::replication::RedundancyManager, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::replication::RedundancyManager, _impl_.min_redundancy_level_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::RedundancyManager, _impl_.max_redundancy_level_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::RedundancyManager, _impl_.segment_priority_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::RedundancyManager, _impl_.high_priority_segments_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::RedundancyManager, _impl_.critical_segments_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::RedundancyManager, _impl_.redundancy_metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::RedundancyManager, _impl_.failover_timeout_seconds_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::RedundancyManager, _impl_.adaptive_redundancy_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::RedundancyManager, _impl_.adaptive_redundancy_policy_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::RedundancyManager, _impl_.cross_cluster_replication_enabled_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationEscalation_MetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationEscalation_MetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationEscalation_MetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationEscalation_MetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationEscalation_AlertPreferencesEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationEscalation_AlertPreferencesEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationEscalation_AlertPreferencesEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationEscalation_AlertPreferencesEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationEscalation, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationEscalation, _impl_.escalation_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationEscalation, _impl_.segment_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationEscalation, _impl_.priority_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationEscalation, _impl_.escalated_at_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationEscalation, _impl_.reason_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationEscalation, _impl_.alert_recipients_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationEscalation, _impl_.immediate_replication_triggered_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationEscalation, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationEscalation, _impl_.alert_preferences_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationEscalation, _impl_.escalation_level_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationEscalation, _impl_.escalation_status_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationEscalation, _impl_.escalation_resolution_timestamp_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationEscalation, _impl_.fallback_strategy_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationEscalation, _impl_.replication_delay_penalty_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationSummary_SegmentStatusesEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationSummary_SegmentStatusesEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationSummary_SegmentStatusesEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationSummary_SegmentStatusesEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationSummary_SummaryMetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationSummary_SummaryMetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationSummary_SummaryMetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationSummary_SummaryMetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationSummary_EscalationCountsEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationSummary_EscalationCountsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationSummary_EscalationCountsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationSummary_EscalationCountsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationSummary, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationSummary, _impl_.summary_id_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationSummary, _impl_.total_segments_replicated_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationSummary, _impl_.high_priority_replications_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationSummary, _impl_.failed_replications_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationSummary, _impl_.ongoing_replications_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationSummary, _impl_.generated_at_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationSummary, _impl_.segment_statuses_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationSummary, _impl_.summary_metadata_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationSummary, _impl_.average_replication_time_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationSummary, _impl_.total_data_replicated_bytes_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationSummary, _impl_.synchronization_rate_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationSummary, _impl_.escalation_counts_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationSummary, _impl_.failover_rate_),
        PROTOBUF_FIELD_OFFSET(::seigr::replication::ReplicationSummary, _impl_.redundancy_satisfaction_rate_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::seigr::replication::ReplicationConfig_MetadataEntry_DoNotUse)},
        {12, -1, -1, sizeof(::seigr::replication::ReplicationConfig)},
        {33, 43, -1, sizeof(::seigr::replication::ReplicationStatus_MetadataEntry_DoNotUse)},
        {45, -1, -1, sizeof(::seigr::replication::ReplicationStatus)},
        {66, 76, -1, sizeof(::seigr::replication::ReplicationEventLog_DetailsEntry_DoNotUse)},
        {78, -1, -1, sizeof(::seigr::replication::ReplicationEventLog)},
        {98, 108, -1, sizeof(::seigr::replication::RedundancyManager_SegmentPriorityEntry_DoNotUse)},
        {110, 120, -1, sizeof(::seigr::replication::RedundancyManager_RedundancyMetadataEntry_DoNotUse)},
        {122, -1, -1, sizeof(::seigr::replication::RedundancyManager)},
        {140, 150, -1, sizeof(::seigr::replication::ReplicationEscalation_MetadataEntry_DoNotUse)},
        {152, 162, -1, sizeof(::seigr::replication::ReplicationEscalation_AlertPreferencesEntry_DoNotUse)},
        {164, -1, -1, sizeof(::seigr::replication::ReplicationEscalation)},
        {186, 196, -1, sizeof(::seigr::replication::ReplicationSummary_SegmentStatusesEntry_DoNotUse)},
        {198, 208, -1, sizeof(::seigr::replication::ReplicationSummary_SummaryMetadataEntry_DoNotUse)},
        {210, 220, -1, sizeof(::seigr::replication::ReplicationSummary_EscalationCountsEntry_DoNotUse)},
        {222, -1, -1, sizeof(::seigr::replication::ReplicationSummary)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::seigr::replication::_ReplicationConfig_MetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::replication::_ReplicationConfig_default_instance_._instance,
    &::seigr::replication::_ReplicationStatus_MetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::replication::_ReplicationStatus_default_instance_._instance,
    &::seigr::replication::_ReplicationEventLog_DetailsEntry_DoNotUse_default_instance_._instance,
    &::seigr::replication::_ReplicationEventLog_default_instance_._instance,
    &::seigr::replication::_RedundancyManager_SegmentPriorityEntry_DoNotUse_default_instance_._instance,
    &::seigr::replication::_RedundancyManager_RedundancyMetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::replication::_RedundancyManager_default_instance_._instance,
    &::seigr::replication::_ReplicationEscalation_MetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::replication::_ReplicationEscalation_AlertPreferencesEntry_DoNotUse_default_instance_._instance,
    &::seigr::replication::_ReplicationEscalation_default_instance_._instance,
    &::seigr::replication::_ReplicationSummary_SegmentStatusesEntry_DoNotUse_default_instance_._instance,
    &::seigr::replication::_ReplicationSummary_SummaryMetadataEntry_DoNotUse_default_instance_._instance,
    &::seigr::replication::_ReplicationSummary_EscalationCountsEntry_DoNotUse_default_instance_._instance,
    &::seigr::replication::_ReplicationSummary_default_instance_._instance,
};
const char descriptor_table_protodef_replication_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\021replication.proto\022\021seigr.replication\032\025"
    "common_requests.proto\032\013event.proto\"\257\004\n\021R"
    "eplicationConfig\022\032\n\022replication_factor\030\001"
    " \001(\005\022\036\n\026min_replication_factor\030\002 \001(\005\022\036\n\026"
    "max_replication_factor\030\003 \001(\005\022$\n\034adaptive"
    "_replication_enabled\030\004 \001(\010\022D\n\020default_st"
    "rategy\030\005 \001(\0162*.seigr.common_requests.Rep"
    "licationStrategy\022\026\n\016config_version\030\006 \001(\t"
    "\022D\n\010metadata\030\007 \003(\01322.seigr.replication.R"
    "eplicationConfig.MetadataEntry\022\"\n\032adapti"
    "ve_scaling_threshold\030\010 \001(\005\022\030\n\020failover_e"
    "nabled\030\t \001(\010\022\"\n\032dynamic_redundancy_scali"
    "ng\030\n \001(\010\022!\n\031load_balanced_replication\030\013 "
    "\001(\010\022 \n\030auto_priority_adjustment\030\014 \001(\010\022\034\n"
    "\024redundancy_policy_id\030\r \001(\t\032/\n\rMetadataE"
    "ntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\221\004\n"
    "\021ReplicationStatus\022\022\n\nsegment_id\030\001 \001(\t\022!"
    "\n\031current_replication_count\030\002 \001(\005\022 \n\030tar"
    "get_replication_count\030\003 \001(\005\022\032\n\022replica_h"
    "yphen_ids\030\004 \003(\t\022\035\n\025replication_completed"
    "\030\005 \001(\010\022<\n\010priority\030\006 \001(\0162*.seigr.common_"
    "requests.ReplicationPriority\022\024\n\014last_che"
    "cked\030\007 \001(\t\022D\n\010metadata\030\010 \003(\01322.seigr.rep"
    "lication.ReplicationStatus.MetadataEntry"
    "\022\032\n\022failover_target_id\030\t \001(\t\022!\n\031estimate"
    "d_completion_time\030\n \001(\005\022\'\n\037replication_s"
    "peed_bytes_per_sec\030\013 \001(\003\022\034\n\024replication_"
    "progress\030\014 \001(\002\022\027\n\017is_synchronized\030\r \001(\010\032"
    "/\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002"
    " \001(\t:\0028\001\"\372\002\n\023ReplicationEventLog\022\020\n\010even"
    "t_id\030\001 \001(\t\022\022\n\nsegment_id\030\002 \001(\t\022\016\n\006action"
    "\030\003 \001(\t\022\024\n\014initiated_by\030\004 \001(\t\022\021\n\ttimestam"
    "p\030\005 \001(\t\022\016\n\006status\030\006 \001(\t\022D\n\007details\030\007 \003(\013"
    "23.seigr.replication.ReplicationEventLog"
    ".DetailsEntry\022\027\n\017failover_status\030\010 \001(\t\022\026"
    "\n\016initiator_type\030\t \001(\t\022\031\n\021retries_attemp"
    "ted\030\n \001(\005\022\030\n\020escalation_level\030\013 \001(\t\022\030\n\020r"
    "esolution_notes\030\014 \001(\t\032.\n\014DetailsEntry\022\013\n"
    "\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\352\004\n\021Redund"
    "ancyManager\022\034\n\024min_redundancy_level\030\001 \001("
    "\005\022\034\n\024max_redundancy_level\030\002 \001(\005\022S\n\020segme"
    "nt_priority\030\003 \003(\01329.seigr.replication.Re"
    "dundancyManager.SegmentPriorityEntry\022\036\n\026"
    "high_priority_segments\030\004 \003(\t\022\031\n\021critical"
    "_segments\030\005 \003(\t\022Y\n\023redundancy_metadata\030\006"
    " \003(\0132<.seigr.replication.RedundancyManag"
    "er.RedundancyMetadataEntry\022 \n\030failover_t"
    "imeout_seconds\030\007 \001(\005\022\033\n\023adaptive_redunda"
    "ncy\030\010 \001(\010\022%\n\035adaptive_redundancy_policy_"
    "id\030\t \001(\t\022)\n!cross_cluster_replication_en"
    "abled\030\n \001(\010\032b\n\024SegmentPriorityEntry\022\013\n\003k"
    "ey\030\001 \001(\t\0229\n\005value\030\002 \001(\0162*.seigr.common_r"
    "equests.ReplicationPriority:\0028\001\0329\n\027Redun"
    "dancyMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value"
    "\030\002 \001(\t:\0028\001\"\262\005\n\025ReplicationEscalation\022\025\n\r"
    "escalation_id\030\001 \001(\t\022\022\n\nsegment_id\030\002 \001(\t\022"
    "<\n\010priority\030\003 \001(\0162*.seigr.common_request"
    "s.ReplicationPriority\022\024\n\014escalated_at\030\004 "
    "\001(\t\022\016\n\006reason\030\005 \001(\t\022\030\n\020alert_recipients\030"
    "\006 \003(\t\022\'\n\037immediate_replication_triggered"
    "\030\007 \001(\010\022H\n\010metadata\030\010 \003(\01326.seigr.replica"
    "tion.ReplicationEscalation.MetadataEntry"
    "\022Y\n\021alert_preferences\030\t \003(\0132>.seigr.repl"
    "ication.ReplicationEscalation.AlertPrefe"
    "rencesEntry\0226\n\020escalation_level\030\n \001(\0162\034."
    "seigr.event.EscalationLevel\022\031\n\021escalatio"
    "n_status\030\013 \001(\t\022\'\n\037escalation_resolution_"
    "timestamp\030\014 \001(\t\022\031\n\021fallback_strategy\030\r \001"
    "(\t\022!\n\031replication_delay_penalty\030\016 \001(\005\032/\n"
    "\rMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001"
    "(\t:\0028\001\0327\n\025AlertPreferencesEntry\022\013\n\003key\030\001"
    " \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\265\006\n\022ReplicationS"
    "ummary\022\022\n\nsummary_id\030\001 \001(\t\022!\n\031total_segm"
    "ents_replicated\030\002 \001(\005\022\"\n\032high_priority_r"
    "eplications\030\003 \001(\005\022\033\n\023failed_replications"
    "\030\004 \001(\005\022\034\n\024ongoing_replications\030\005 \001(\005\022\024\n\014"
    "generated_at\030\006 \001(\t\022T\n\020segment_statuses\030\007"
    " \003(\0132:.seigr.replication.ReplicationSumm"
    "ary.SegmentStatusesEntry\022T\n\020summary_meta"
    "data\030\010 \003(\0132:.seigr.replication.Replicati"
    "onSummary.SummaryMetadataEntry\022 \n\030averag"
    "e_replication_time\030\t \001(\002\022#\n\033total_data_r"
    "eplicated_bytes\030\n \001(\003\022\034\n\024synchronization"
    "_rate\030\013 \001(\002\022V\n\021escalation_counts\030\014 \003(\0132;"
    ".seigr.replication.ReplicationSummary.Es"
    "calationCountsEntry\022\025\n\rfailover_rate\030\r \001"
    "(\002\022$\n\034redundancy_satisfaction_rate\030\016 \001(\002"
    "\032\\\n\024SegmentStatusesEntry\022\013\n\003key\030\001 \001(\t\0223\n"
    "\005value\030\002 \001(\0132$.seigr.replication.Replica"
    "tionStatus:\0028\001\0326\n\024SummaryMetadataEntry\022\013"
    "\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\0327\n\025Escala"
    "tionCountsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 "
    "\001(\005:\0028\001b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_replication_2eproto_deps[2] =
    {
        &::descriptor_table_common_5frequests_2eproto,
        &::descriptor_table_event_2eproto,
};
static ::absl::once_flag descriptor_table_replication_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_replication_2eproto = {
    false,
    false,
    3695,
    descriptor_table_protodef_replication_2eproto,
    "replication.proto",
    &descriptor_table_replication_2eproto_once,
    descriptor_table_replication_2eproto_deps,
    2,
    16,
    schemas,
    file_default_instances,
    TableStruct_replication_2eproto::offsets,
    file_level_enum_descriptors_replication_2eproto,
    file_level_service_descriptors_replication_2eproto,
};
namespace seigr {
namespace replication {
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              ReplicationConfig_MetadataEntry_DoNotUse::ReplicationConfig_MetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              ReplicationConfig_MetadataEntry_DoNotUse::ReplicationConfig_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              ReplicationConfig_MetadataEntry_DoNotUse::ReplicationConfig_MetadataEntry_DoNotUse() : SuperType() {}
              ReplicationConfig_MetadataEntry_DoNotUse::ReplicationConfig_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* ReplicationConfig_MetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) ReplicationConfig_MetadataEntry_DoNotUse(arena);
              }
              constexpr auto ReplicationConfig_MetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ReplicationConfig_MetadataEntry_DoNotUse),
                                                          alignof(ReplicationConfig_MetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull ReplicationConfig_MetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_ReplicationConfig_MetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &ReplicationConfig_MetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<ReplicationConfig_MetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &ReplicationConfig_MetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &ReplicationConfig_MetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(ReplicationConfig_MetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &ReplicationConfig_MetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_replication_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* ReplicationConfig_MetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 66, 2> ReplicationConfig_MetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ReplicationConfig_MetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::replication::ReplicationConfig_MetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationConfig_MetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationConfig_MetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(ReplicationConfig_MetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(ReplicationConfig_MetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\61\3\5\0\0\0\0\0"
    "seigr.replication.ReplicationConfig.MetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class ReplicationConfig::_Internal {
 public:
};

ReplicationConfig::ReplicationConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.replication.ReplicationConfig)
}
inline PROTOBUF_NDEBUG_INLINE ReplicationConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::replication::ReplicationConfig& from_msg)
      : metadata_{visibility, arena, from.metadata_},
        config_version_(arena, from.config_version_),
        redundancy_policy_id_(arena, from.redundancy_policy_id_),
        _cached_size_{0} {}

ReplicationConfig::ReplicationConfig(
    ::google::protobuf::Arena* arena,
    const ReplicationConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ReplicationConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, replication_factor_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, replication_factor_),
           offsetof(Impl_, auto_priority_adjustment_) -
               offsetof(Impl_, replication_factor_) +
               sizeof(Impl_::auto_priority_adjustment_));

  // @@protoc_insertion_point(copy_constructor:seigr.replication.ReplicationConfig)
}
inline PROTOBUF_NDEBUG_INLINE ReplicationConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : metadata_{visibility, arena},
        config_version_(arena),
        redundancy_policy_id_(arena),
        _cached_size_{0} {}

inline void ReplicationConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, replication_factor_),
           0,
           offsetof(Impl_, auto_priority_adjustment_) -
               offsetof(Impl_, replication_factor_) +
               sizeof(Impl_::auto_priority_adjustment_));
}
ReplicationConfig::~ReplicationConfig() {
  // @@protoc_insertion_point(destructor:seigr.replication.ReplicationConfig)
  SharedDtor(*this);
}
inline void ReplicationConfig::SharedDtor(MessageLite& self) {
  ReplicationConfig& this_ = static_cast<ReplicationConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.config_version_.Destroy();
  this_._impl_.redundancy_policy_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ReplicationConfig::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ReplicationConfig(arena);
}
constexpr auto ReplicationConfig::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ReplicationConfig, _impl_.metadata_) +
          decltype(ReplicationConfig::_impl_.metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ReplicationConfig, _impl_.metadata_) +
          decltype(ReplicationConfig::_impl_.metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ReplicationConfig), alignof(ReplicationConfig), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ReplicationConfig::PlacementNew_,
                                 sizeof(ReplicationConfig),
                                 alignof(ReplicationConfig));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ReplicationConfig::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ReplicationConfig_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ReplicationConfig::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ReplicationConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ReplicationConfig::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ReplicationConfig>(), &ReplicationConfig::ByteSizeLong,
            &ReplicationConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ReplicationConfig, _impl_._cached_size_),
        false,
    },
    &ReplicationConfig::kDescriptorMethods,
    &descriptor_table_replication_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ReplicationConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 13, 1, 94, 2> ReplicationConfig::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    13, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294959104,  // skipmap
    offsetof(decltype(_table_), field_entries),
    13,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::replication::ReplicationConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 replication_factor = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ReplicationConfig, _impl_.replication_factor_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationConfig, _impl_.replication_factor_)}},
    // int32 min_replication_factor = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ReplicationConfig, _impl_.min_replication_factor_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationConfig, _impl_.min_replication_factor_)}},
    // int32 max_replication_factor = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ReplicationConfig, _impl_.max_replication_factor_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationConfig, _impl_.max_replication_factor_)}},
    // bool adaptive_replication_enabled = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ReplicationConfig, _impl_.adaptive_replication_enabled_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationConfig, _impl_.adaptive_replication_enabled_)}},
    // .seigr.common_requests.ReplicationStrategy default_strategy = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ReplicationConfig, _impl_.default_strategy_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationConfig, _impl_.default_strategy_)}},
    // string config_version = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationConfig, _impl_.config_version_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // int32 adaptive_scaling_threshold = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ReplicationConfig, _impl_.adaptive_scaling_threshold_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationConfig, _impl_.adaptive_scaling_threshold_)}},
    // bool failover_enabled = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ReplicationConfig, _impl_.failover_enabled_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationConfig, _impl_.failover_enabled_)}},
    // bool dynamic_redundancy_scaling = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ReplicationConfig, _impl_.dynamic_redundancy_scaling_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationConfig, _impl_.dynamic_redundancy_scaling_)}},
    // bool load_balanced_replication = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ReplicationConfig, _impl_.load_balanced_replication_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationConfig, _impl_.load_balanced_replication_)}},
    // bool auto_priority_adjustment = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ReplicationConfig, _impl_.auto_priority_adjustment_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationConfig, _impl_.auto_priority_adjustment_)}},
    // string redundancy_policy_id = 13;
    {::_pbi::TcParser::FastUS1,
     {106, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationConfig, _impl_.redundancy_policy_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 replication_factor = 1;
    {PROTOBUF_FIELD_OFFSET(ReplicationConfig, _impl_.replication_factor_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 min_replication_factor = 2;
    {PROTOBUF_FIELD_OFFSET(ReplicationConfig, _impl_.min_replication_factor_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 max_replication_factor = 3;
    {PROTOBUF_FIELD_OFFSET(ReplicationConfig, _impl_.max_replication_factor_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool adaptive_replication_enabled = 4;
    {PROTOBUF_FIELD_OFFSET(ReplicationConfig, _impl_.adaptive_replication_enabled_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .seigr.common_requests.ReplicationStrategy default_strategy = 5;
    {PROTOBUF_FIELD_OFFSET(ReplicationConfig, _impl_.default_strategy_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string config_version = 6;
    {PROTOBUF_FIELD_OFFSET(ReplicationConfig, _impl_.config_version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> metadata = 7;
    {PROTOBUF_FIELD_OFFSET(ReplicationConfig, _impl_.metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // int32 adaptive_scaling_threshold = 8;
    {PROTOBUF_FIELD_OFFSET(ReplicationConfig, _impl_.adaptive_scaling_threshold_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool failover_enabled = 9;
    {PROTOBUF_FIELD_OFFSET(ReplicationConfig, _impl_.failover_enabled_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool dynamic_redundancy_scaling = 10;
    {PROTOBUF_FIELD_OFFSET(ReplicationConfig, _impl_.dynamic_redundancy_scaling_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool load_balanced_replication = 11;
    {PROTOBUF_FIELD_OFFSET(ReplicationConfig, _impl_.load_balanced_replication_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool auto_priority_adjustment = 12;
    {PROTOBUF_FIELD_OFFSET(ReplicationConfig, _impl_.auto_priority_adjustment_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string redundancy_policy_id = 13;
    {PROTOBUF_FIELD_OFFSET(ReplicationConfig, _impl_.redundancy_policy_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(ReplicationConfig()._impl_.metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\43\0\0\0\0\0\16\10\0\0\0\0\0\24\0\0"
    "seigr.replication.ReplicationConfig"
    "config_version"
    "metadata"
    "redundancy_policy_id"
  }},
};

PROTOBUF_NOINLINE void ReplicationConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.replication.ReplicationConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.metadata_.Clear();
  _impl_.config_version_.ClearToEmpty();
  _impl_.redundancy_policy_id_.ClearToEmpty();
  ::memset(&_impl_.replication_factor_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.auto_priority_adjustment_) -
      reinterpret_cast<char*>(&_impl_.replication_factor_)) + sizeof(_impl_.auto_priority_adjustment_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ReplicationConfig::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ReplicationConfig& this_ = static_cast<const ReplicationConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ReplicationConfig::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ReplicationConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.replication.ReplicationConfig)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 replication_factor = 1;
          if (this_._internal_replication_factor() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_replication_factor(), target);
          }

          // int32 min_replication_factor = 2;
          if (this_._internal_min_replication_factor() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_min_replication_factor(), target);
          }

          // int32 max_replication_factor = 3;
          if (this_._internal_max_replication_factor() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_max_replication_factor(), target);
          }

          // bool adaptive_replication_enabled = 4;
          if (this_._internal_adaptive_replication_enabled() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_adaptive_replication_enabled(), target);
          }

          // .seigr.common_requests.ReplicationStrategy default_strategy = 5;
          if (this_._internal_default_strategy() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                5, this_._internal_default_strategy(), target);
          }

          // string config_version = 6;
          if (!this_._internal_config_version().empty()) {
            const std::string& _s = this_._internal_config_version();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationConfig.config_version");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // map<string, string> metadata = 7;
          if (!this_._internal_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationConfig.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationConfig.metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationConfig.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationConfig.metadata");
              }
            }
          }

          // int32 adaptive_scaling_threshold = 8;
          if (this_._internal_adaptive_scaling_threshold() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<8>(
                    stream, this_._internal_adaptive_scaling_threshold(), target);
          }

          // bool failover_enabled = 9;
          if (this_._internal_failover_enabled() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                9, this_._internal_failover_enabled(), target);
          }

          // bool dynamic_redundancy_scaling = 10;
          if (this_._internal_dynamic_redundancy_scaling() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                10, this_._internal_dynamic_redundancy_scaling(), target);
          }

          // bool load_balanced_replication = 11;
          if (this_._internal_load_balanced_replication() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                11, this_._internal_load_balanced_replication(), target);
          }

          // bool auto_priority_adjustment = 12;
          if (this_._internal_auto_priority_adjustment() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                12, this_._internal_auto_priority_adjustment(), target);
          }

          // string redundancy_policy_id = 13;
          if (!this_._internal_redundancy_policy_id().empty()) {
            const std::string& _s = this_._internal_redundancy_policy_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationConfig.redundancy_policy_id");
            target = stream->WriteStringMaybeAliased(13, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.replication.ReplicationConfig)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ReplicationConfig::ByteSizeLong(const MessageLite& base) {
          const ReplicationConfig& this_ = static_cast<const ReplicationConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ReplicationConfig::ByteSizeLong() const {
          const ReplicationConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.replication.ReplicationConfig)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> metadata = 7;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_metadata_size());
              for (const auto& entry : this_._internal_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string config_version = 6;
            if (!this_._internal_config_version().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_config_version());
            }
            // string redundancy_policy_id = 13;
            if (!this_._internal_redundancy_policy_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_redundancy_policy_id());
            }
            // int32 replication_factor = 1;
            if (this_._internal_replication_factor() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_replication_factor());
            }
            // int32 min_replication_factor = 2;
            if (this_._internal_min_replication_factor() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_min_replication_factor());
            }
            // int32 max_replication_factor = 3;
            if (this_._internal_max_replication_factor() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_max_replication_factor());
            }
            // .seigr.common_requests.ReplicationStrategy default_strategy = 5;
            if (this_._internal_default_strategy() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_default_strategy());
            }
            // int32 adaptive_scaling_threshold = 8;
            if (this_._internal_adaptive_scaling_threshold() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_adaptive_scaling_threshold());
            }
            // bool adaptive_replication_enabled = 4;
            if (this_._internal_adaptive_replication_enabled() != 0) {
              total_size += 2;
            }
            // bool failover_enabled = 9;
            if (this_._internal_failover_enabled() != 0) {
              total_size += 2;
            }
            // bool dynamic_redundancy_scaling = 10;
            if (this_._internal_dynamic_redundancy_scaling() != 0) {
              total_size += 2;
            }
            // bool load_balanced_replication = 11;
            if (this_._internal_load_balanced_replication() != 0) {
              total_size += 2;
            }
            // bool auto_priority_adjustment = 12;
            if (this_._internal_auto_priority_adjustment() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ReplicationConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ReplicationConfig*>(&to_msg);
  auto& from = static_cast<const ReplicationConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.replication.ReplicationConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.metadata_.MergeFrom(from._impl_.metadata_);
  if (!from._internal_config_version().empty()) {
    _this->_internal_set_config_version(from._internal_config_version());
  }
  if (!from._internal_redundancy_policy_id().empty()) {
    _this->_internal_set_redundancy_policy_id(from._internal_redundancy_policy_id());
  }
  if (from._internal_replication_factor() != 0) {
    _this->_impl_.replication_factor_ = from._impl_.replication_factor_;
  }
  if (from._internal_min_replication_factor() != 0) {
    _this->_impl_.min_replication_factor_ = from._impl_.min_replication_factor_;
  }
  if (from._internal_max_replication_factor() != 0) {
    _this->_impl_.max_replication_factor_ = from._impl_.max_replication_factor_;
  }
  if (from._internal_default_strategy() != 0) {
    _this->_impl_.default_strategy_ = from._impl_.default_strategy_;
  }
  if (from._internal_adaptive_scaling_threshold() != 0) {
    _this->_impl_.adaptive_scaling_threshold_ = from._impl_.adaptive_scaling_threshold_;
  }
  if (from._internal_adaptive_replication_enabled() != 0) {
    _this->_impl_.adaptive_replication_enabled_ = from._impl_.adaptive_replication_enabled_;
  }
  if (from._internal_failover_enabled() != 0) {
    _this->_impl_.failover_enabled_ = from._impl_.failover_enabled_;
  }
  if (from._internal_dynamic_redundancy_scaling() != 0) {
    _this->_impl_.dynamic_redundancy_scaling_ = from._impl_.dynamic_redundancy_scaling_;
  }
  if (from._internal_load_balanced_replication() != 0) {
    _this->_impl_.load_balanced_replication_ = from._impl_.load_balanced_replication_;
  }
  if (from._internal_auto_priority_adjustment() != 0) {
    _this->_impl_.auto_priority_adjustment_ = from._impl_.auto_priority_adjustment_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ReplicationConfig::CopyFrom(const ReplicationConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.replication.ReplicationConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ReplicationConfig::InternalSwap(ReplicationConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.metadata_.InternalSwap(&other->_impl_.metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.config_version_, &other->_impl_.config_version_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.redundancy_policy_id_, &other->_impl_.redundancy_policy_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReplicationConfig, _impl_.auto_priority_adjustment_)
      + sizeof(ReplicationConfig::_impl_.auto_priority_adjustment_)
      - PROTOBUF_FIELD_OFFSET(ReplicationConfig, _impl_.replication_factor_)>(
          reinterpret_cast<char*>(&_impl_.replication_factor_),
          reinterpret_cast<char*>(&other->_impl_.replication_factor_));
}

::google::protobuf::Metadata ReplicationConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              ReplicationStatus_MetadataEntry_DoNotUse::ReplicationStatus_MetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              ReplicationStatus_MetadataEntry_DoNotUse::ReplicationStatus_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              ReplicationStatus_MetadataEntry_DoNotUse::ReplicationStatus_MetadataEntry_DoNotUse() : SuperType() {}
              ReplicationStatus_MetadataEntry_DoNotUse::ReplicationStatus_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* ReplicationStatus_MetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) ReplicationStatus_MetadataEntry_DoNotUse(arena);
              }
              constexpr auto ReplicationStatus_MetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ReplicationStatus_MetadataEntry_DoNotUse),
                                                          alignof(ReplicationStatus_MetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull ReplicationStatus_MetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_ReplicationStatus_MetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &ReplicationStatus_MetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<ReplicationStatus_MetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &ReplicationStatus_MetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &ReplicationStatus_MetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(ReplicationStatus_MetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &ReplicationStatus_MetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_replication_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* ReplicationStatus_MetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 66, 2> ReplicationStatus_MetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ReplicationStatus_MetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::replication::ReplicationStatus_MetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationStatus_MetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationStatus_MetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(ReplicationStatus_MetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(ReplicationStatus_MetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\61\3\5\0\0\0\0\0"
    "seigr.replication.ReplicationStatus.MetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class ReplicationStatus::_Internal {
 public:
};

ReplicationStatus::ReplicationStatus(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.replication.ReplicationStatus)
}
inline PROTOBUF_NDEBUG_INLINE ReplicationStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::replication::ReplicationStatus& from_msg)
      : replica_hyphen_ids_{visibility, arena, from.replica_hyphen_ids_},
        metadata_{visibility, arena, from.metadata_},
        segment_id_(arena, from.segment_id_),
        last_checked_(arena, from.last_checked_),
        failover_target_id_(arena, from.failover_target_id_),
        _cached_size_{0} {}

ReplicationStatus::ReplicationStatus(
    ::google::protobuf::Arena* arena,
    const ReplicationStatus& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ReplicationStatus* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, current_replication_count_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, current_replication_count_),
           offsetof(Impl_, replication_progress_) -
               offsetof(Impl_, current_replication_count_) +
               sizeof(Impl_::replication_progress_));

  // @@protoc_insertion_point(copy_constructor:seigr.replication.ReplicationStatus)
}
inline PROTOBUF_NDEBUG_INLINE ReplicationStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : replica_hyphen_ids_{visibility, arena},
        metadata_{visibility, arena},
        segment_id_(arena),
        last_checked_(arena),
        failover_target_id_(arena),
        _cached_size_{0} {}

inline void ReplicationStatus::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, current_replication_count_),
           0,
           offsetof(Impl_, replication_progress_) -
               offsetof(Impl_, current_replication_count_) +
               sizeof(Impl_::replication_progress_));
}
ReplicationStatus::~ReplicationStatus() {
  // @@protoc_insertion_point(destructor:seigr.replication.ReplicationStatus)
  SharedDtor(*this);
}
inline void ReplicationStatus::SharedDtor(MessageLite& self) {
  ReplicationStatus& this_ = static_cast<ReplicationStatus&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.segment_id_.Destroy();
  this_._impl_.last_checked_.Destroy();
  this_._impl_.failover_target_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ReplicationStatus::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ReplicationStatus(arena);
}
constexpr auto ReplicationStatus::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ReplicationStatus, _impl_.replica_hyphen_ids_) +
          decltype(ReplicationStatus::_impl_.replica_hyphen_ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ReplicationStatus, _impl_.metadata_) +
          decltype(ReplicationStatus::_impl_.metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ReplicationStatus, _impl_.metadata_) +
          decltype(ReplicationStatus::_impl_.metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ReplicationStatus), alignof(ReplicationStatus), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ReplicationStatus::PlacementNew_,
                                 sizeof(ReplicationStatus),
                                 alignof(ReplicationStatus));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ReplicationStatus::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ReplicationStatus_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ReplicationStatus::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ReplicationStatus>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ReplicationStatus::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ReplicationStatus>(), &ReplicationStatus::ByteSizeLong,
            &ReplicationStatus::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ReplicationStatus, _impl_._cached_size_),
        false,
    },
    &ReplicationStatus::kDescriptorMethods,
    &descriptor_table_replication_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ReplicationStatus::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 13, 1, 118, 2> ReplicationStatus::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    13, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294959104,  // skipmap
    offsetof(decltype(_table_), field_entries),
    13,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::replication::ReplicationStatus>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string segment_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationStatus, _impl_.segment_id_)}},
    // int32 current_replication_count = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ReplicationStatus, _impl_.current_replication_count_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationStatus, _impl_.current_replication_count_)}},
    // int32 target_replication_count = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ReplicationStatus, _impl_.target_replication_count_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationStatus, _impl_.target_replication_count_)}},
    // repeated string replica_hyphen_ids = 4;
    {::_pbi::TcParser::FastUR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationStatus, _impl_.replica_hyphen_ids_)}},
    // bool replication_completed = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ReplicationStatus, _impl_.replication_completed_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationStatus, _impl_.replication_completed_)}},
    // .seigr.common_requests.ReplicationPriority priority = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ReplicationStatus, _impl_.priority_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationStatus, _impl_.priority_)}},
    // string last_checked = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationStatus, _impl_.last_checked_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string failover_target_id = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationStatus, _impl_.failover_target_id_)}},
    // int32 estimated_completion_time = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ReplicationStatus, _impl_.estimated_completion_time_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationStatus, _impl_.estimated_completion_time_)}},
    // int64 replication_speed_bytes_per_sec = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ReplicationStatus, _impl_.replication_speed_bytes_per_sec_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationStatus, _impl_.replication_speed_bytes_per_sec_)}},
    // float replication_progress = 12;
    {::_pbi::TcParser::FastF32S1,
     {101, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationStatus, _impl_.replication_progress_)}},
    // bool is_synchronized = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ReplicationStatus, _impl_.is_synchronized_), 63>(),
     {104, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationStatus, _impl_.is_synchronized_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string segment_id = 1;
    {PROTOBUF_FIELD_OFFSET(ReplicationStatus, _impl_.segment_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 current_replication_count = 2;
    {PROTOBUF_FIELD_OFFSET(ReplicationStatus, _impl_.current_replication_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 target_replication_count = 3;
    {PROTOBUF_FIELD_OFFSET(ReplicationStatus, _impl_.target_replication_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated string replica_hyphen_ids = 4;
    {PROTOBUF_FIELD_OFFSET(ReplicationStatus, _impl_.replica_hyphen_ids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // bool replication_completed = 5;
    {PROTOBUF_FIELD_OFFSET(ReplicationStatus, _impl_.replication_completed_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .seigr.common_requests.ReplicationPriority priority = 6;
    {PROTOBUF_FIELD_OFFSET(ReplicationStatus, _impl_.priority_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string last_checked = 7;
    {PROTOBUF_FIELD_OFFSET(ReplicationStatus, _impl_.last_checked_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> metadata = 8;
    {PROTOBUF_FIELD_OFFSET(ReplicationStatus, _impl_.metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string failover_target_id = 9;
    {PROTOBUF_FIELD_OFFSET(ReplicationStatus, _impl_.failover_target_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 estimated_completion_time = 10;
    {PROTOBUF_FIELD_OFFSET(ReplicationStatus, _impl_.estimated_completion_time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int64 replication_speed_bytes_per_sec = 11;
    {PROTOBUF_FIELD_OFFSET(ReplicationStatus, _impl_.replication_speed_bytes_per_sec_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // float replication_progress = 12;
    {PROTOBUF_FIELD_OFFSET(ReplicationStatus, _impl_.replication_progress_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // bool is_synchronized = 13;
    {PROTOBUF_FIELD_OFFSET(ReplicationStatus, _impl_.is_synchronized_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(ReplicationStatus()._impl_.metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\43\12\0\0\22\0\0\14\10\22\0\0\0\0\0\0"
    "seigr.replication.ReplicationStatus"
    "segment_id"
    "replica_hyphen_ids"
    "last_checked"
    "metadata"
    "failover_target_id"
  }},
};

PROTOBUF_NOINLINE void ReplicationStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.replication.ReplicationStatus)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.replica_hyphen_ids_.Clear();
  _impl_.metadata_.Clear();
  _impl_.segment_id_.ClearToEmpty();
  _impl_.last_checked_.ClearToEmpty();
  _impl_.failover_target_id_.ClearToEmpty();
  ::memset(&_impl_.current_replication_count_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.replication_progress_) -
      reinterpret_cast<char*>(&_impl_.current_replication_count_)) + sizeof(_impl_.replication_progress_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ReplicationStatus::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ReplicationStatus& this_ = static_cast<const ReplicationStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ReplicationStatus::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ReplicationStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.replication.ReplicationStatus)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string segment_id = 1;
          if (!this_._internal_segment_id().empty()) {
            const std::string& _s = this_._internal_segment_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationStatus.segment_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // int32 current_replication_count = 2;
          if (this_._internal_current_replication_count() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_current_replication_count(), target);
          }

          // int32 target_replication_count = 3;
          if (this_._internal_target_replication_count() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_target_replication_count(), target);
          }

          // repeated string replica_hyphen_ids = 4;
          for (int i = 0, n = this_._internal_replica_hyphen_ids_size(); i < n; ++i) {
            const auto& s = this_._internal_replica_hyphen_ids().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationStatus.replica_hyphen_ids");
            target = stream->WriteString(4, s, target);
          }

          // bool replication_completed = 5;
          if (this_._internal_replication_completed() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                5, this_._internal_replication_completed(), target);
          }

          // .seigr.common_requests.ReplicationPriority priority = 6;
          if (this_._internal_priority() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                6, this_._internal_priority(), target);
          }

          // string last_checked = 7;
          if (!this_._internal_last_checked().empty()) {
            const std::string& _s = this_._internal_last_checked();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationStatus.last_checked");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // map<string, string> metadata = 8;
          if (!this_._internal_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    8, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationStatus.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationStatus.metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    8, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationStatus.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationStatus.metadata");
              }
            }
          }

          // string failover_target_id = 9;
          if (!this_._internal_failover_target_id().empty()) {
            const std::string& _s = this_._internal_failover_target_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationStatus.failover_target_id");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          // int32 estimated_completion_time = 10;
          if (this_._internal_estimated_completion_time() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<10>(
                    stream, this_._internal_estimated_completion_time(), target);
          }

          // int64 replication_speed_bytes_per_sec = 11;
          if (this_._internal_replication_speed_bytes_per_sec() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<11>(
                    stream, this_._internal_replication_speed_bytes_per_sec(), target);
          }

          // float replication_progress = 12;
          if (::absl::bit_cast<::uint32_t>(this_._internal_replication_progress()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                12, this_._internal_replication_progress(), target);
          }

          // bool is_synchronized = 13;
          if (this_._internal_is_synchronized() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                13, this_._internal_is_synchronized(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.replication.ReplicationStatus)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ReplicationStatus::ByteSizeLong(const MessageLite& base) {
          const ReplicationStatus& this_ = static_cast<const ReplicationStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ReplicationStatus::ByteSizeLong() const {
          const ReplicationStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.replication.ReplicationStatus)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string replica_hyphen_ids = 4;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_replica_hyphen_ids().size());
              for (int i = 0, n = this_._internal_replica_hyphen_ids().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_replica_hyphen_ids().Get(i));
              }
            }
            // map<string, string> metadata = 8;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_metadata_size());
              for (const auto& entry : this_._internal_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string segment_id = 1;
            if (!this_._internal_segment_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_segment_id());
            }
            // string last_checked = 7;
            if (!this_._internal_last_checked().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_last_checked());
            }
            // string failover_target_id = 9;
            if (!this_._internal_failover_target_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_failover_target_id());
            }
            // int32 current_replication_count = 2;
            if (this_._internal_current_replication_count() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_current_replication_count());
            }
            // int32 target_replication_count = 3;
            if (this_._internal_target_replication_count() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_target_replication_count());
            }
            // .seigr.common_requests.ReplicationPriority priority = 6;
            if (this_._internal_priority() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_priority());
            }
            // bool replication_completed = 5;
            if (this_._internal_replication_completed() != 0) {
              total_size += 2;
            }
            // bool is_synchronized = 13;
            if (this_._internal_is_synchronized() != 0) {
              total_size += 2;
            }
            // int64 replication_speed_bytes_per_sec = 11;
            if (this_._internal_replication_speed_bytes_per_sec() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_replication_speed_bytes_per_sec());
            }
            // int32 estimated_completion_time = 10;
            if (this_._internal_estimated_completion_time() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_estimated_completion_time());
            }
            // float replication_progress = 12;
            if (::absl::bit_cast<::uint32_t>(this_._internal_replication_progress()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ReplicationStatus::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ReplicationStatus*>(&to_msg);
  auto& from = static_cast<const ReplicationStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.replication.ReplicationStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_replica_hyphen_ids()->MergeFrom(from._internal_replica_hyphen_ids());
  _this->_impl_.metadata_.MergeFrom(from._impl_.metadata_);
  if (!from._internal_segment_id().empty()) {
    _this->_internal_set_segment_id(from._internal_segment_id());
  }
  if (!from._internal_last_checked().empty()) {
    _this->_internal_set_last_checked(from._internal_last_checked());
  }
  if (!from._internal_failover_target_id().empty()) {
    _this->_internal_set_failover_target_id(from._internal_failover_target_id());
  }
  if (from._internal_current_replication_count() != 0) {
    _this->_impl_.current_replication_count_ = from._impl_.current_replication_count_;
  }
  if (from._internal_target_replication_count() != 0) {
    _this->_impl_.target_replication_count_ = from._impl_.target_replication_count_;
  }
  if (from._internal_priority() != 0) {
    _this->_impl_.priority_ = from._impl_.priority_;
  }
  if (from._internal_replication_completed() != 0) {
    _this->_impl_.replication_completed_ = from._impl_.replication_completed_;
  }
  if (from._internal_is_synchronized() != 0) {
    _this->_impl_.is_synchronized_ = from._impl_.is_synchronized_;
  }
  if (from._internal_replication_speed_bytes_per_sec() != 0) {
    _this->_impl_.replication_speed_bytes_per_sec_ = from._impl_.replication_speed_bytes_per_sec_;
  }
  if (from._internal_estimated_completion_time() != 0) {
    _this->_impl_.estimated_completion_time_ = from._impl_.estimated_completion_time_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_replication_progress()) != 0) {
    _this->_impl_.replication_progress_ = from._impl_.replication_progress_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ReplicationStatus::CopyFrom(const ReplicationStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.replication.ReplicationStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ReplicationStatus::InternalSwap(ReplicationStatus* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.replica_hyphen_ids_.InternalSwap(&other->_impl_.replica_hyphen_ids_);
  _impl_.metadata_.InternalSwap(&other->_impl_.metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.segment_id_, &other->_impl_.segment_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.last_checked_, &other->_impl_.last_checked_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.failover_target_id_, &other->_impl_.failover_target_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReplicationStatus, _impl_.replication_progress_)
      + sizeof(ReplicationStatus::_impl_.replication_progress_)
      - PROTOBUF_FIELD_OFFSET(ReplicationStatus, _impl_.current_replication_count_)>(
          reinterpret_cast<char*>(&_impl_.current_replication_count_),
          reinterpret_cast<char*>(&other->_impl_.current_replication_count_));
}

::google::protobuf::Metadata ReplicationStatus::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              ReplicationEventLog_DetailsEntry_DoNotUse::ReplicationEventLog_DetailsEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              ReplicationEventLog_DetailsEntry_DoNotUse::ReplicationEventLog_DetailsEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              ReplicationEventLog_DetailsEntry_DoNotUse::ReplicationEventLog_DetailsEntry_DoNotUse() : SuperType() {}
              ReplicationEventLog_DetailsEntry_DoNotUse::ReplicationEventLog_DetailsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* ReplicationEventLog_DetailsEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) ReplicationEventLog_DetailsEntry_DoNotUse(arena);
              }
              constexpr auto ReplicationEventLog_DetailsEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ReplicationEventLog_DetailsEntry_DoNotUse),
                                                          alignof(ReplicationEventLog_DetailsEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull ReplicationEventLog_DetailsEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_ReplicationEventLog_DetailsEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &ReplicationEventLog_DetailsEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<ReplicationEventLog_DetailsEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &ReplicationEventLog_DetailsEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &ReplicationEventLog_DetailsEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(ReplicationEventLog_DetailsEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &ReplicationEventLog_DetailsEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_replication_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* ReplicationEventLog_DetailsEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 67, 2> ReplicationEventLog_DetailsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ReplicationEventLog_DetailsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::replication::ReplicationEventLog_DetailsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationEventLog_DetailsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationEventLog_DetailsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(ReplicationEventLog_DetailsEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(ReplicationEventLog_DetailsEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\62\3\5\0\0\0\0\0"
    "seigr.replication.ReplicationEventLog.DetailsEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class ReplicationEventLog::_Internal {
 public:
};

ReplicationEventLog::ReplicationEventLog(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.replication.ReplicationEventLog)
}
inline PROTOBUF_NDEBUG_INLINE ReplicationEventLog::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::replication::ReplicationEventLog& from_msg)
      : details_{visibility, arena, from.details_},
        event_id_(arena, from.event_id_),
        segment_id_(arena, from.segment_id_),
        action_(arena, from.action_),
        initiated_by_(arena, from.initiated_by_),
        timestamp_(arena, from.timestamp_),
        status_(arena, from.status_),
        failover_status_(arena, from.failover_status_),
        initiator_type_(arena, from.initiator_type_),
        escalation_level_(arena, from.escalation_level_),
        resolution_notes_(arena, from.resolution_notes_),
        _cached_size_{0} {}

ReplicationEventLog::ReplicationEventLog(
    ::google::protobuf::Arena* arena,
    const ReplicationEventLog& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ReplicationEventLog* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.retries_attempted_ = from._impl_.retries_attempted_;

  // @@protoc_insertion_point(copy_constructor:seigr.replication.ReplicationEventLog)
}
inline PROTOBUF_NDEBUG_INLINE ReplicationEventLog::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : details_{visibility, arena},
        event_id_(arena),
        segment_id_(arena),
        action_(arena),
        initiated_by_(arena),
        timestamp_(arena),
        status_(arena),
        failover_status_(arena),
        initiator_type_(arena),
        escalation_level_(arena),
        resolution_notes_(arena),
        _cached_size_{0} {}

inline void ReplicationEventLog::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.retries_attempted_ = {};
}
ReplicationEventLog::~ReplicationEventLog() {
  // @@protoc_insertion_point(destructor:seigr.replication.ReplicationEventLog)
  SharedDtor(*this);
}
inline void ReplicationEventLog::SharedDtor(MessageLite& self) {
  ReplicationEventLog& this_ = static_cast<ReplicationEventLog&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.event_id_.Destroy();
  this_._impl_.segment_id_.Destroy();
  this_._impl_.action_.Destroy();
  this_._impl_.initiated_by_.Destroy();
  this_._impl_.timestamp_.Destroy();
  this_._impl_.status_.Destroy();
  this_._impl_.failover_status_.Destroy();
  this_._impl_.initiator_type_.Destroy();
  this_._impl_.escalation_level_.Destroy();
  this_._impl_.resolution_notes_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ReplicationEventLog::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ReplicationEventLog(arena);
}
constexpr auto ReplicationEventLog::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ReplicationEventLog, _impl_.details_) +
          decltype(ReplicationEventLog::_impl_.details_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ReplicationEventLog, _impl_.details_) +
          decltype(ReplicationEventLog::_impl_.details_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ReplicationEventLog), alignof(ReplicationEventLog), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ReplicationEventLog::PlacementNew_,
                                 sizeof(ReplicationEventLog),
                                 alignof(ReplicationEventLog));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ReplicationEventLog::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ReplicationEventLog_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ReplicationEventLog::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ReplicationEventLog>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ReplicationEventLog::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ReplicationEventLog>(), &ReplicationEventLog::ByteSizeLong,
            &ReplicationEventLog::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ReplicationEventLog, _impl_._cached_size_),
        false,
    },
    &ReplicationEventLog::kDescriptorMethods,
    &descriptor_table_replication_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ReplicationEventLog::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 12, 1, 173, 2> ReplicationEventLog::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    12, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963200,  // skipmap
    offsetof(decltype(_table_), field_entries),
    12,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::replication::ReplicationEventLog>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string event_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationEventLog, _impl_.event_id_)}},
    // string segment_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationEventLog, _impl_.segment_id_)}},
    // string action = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationEventLog, _impl_.action_)}},
    // string initiated_by = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationEventLog, _impl_.initiated_by_)}},
    // string timestamp = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationEventLog, _impl_.timestamp_)}},
    // string status = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationEventLog, _impl_.status_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string failover_status = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationEventLog, _impl_.failover_status_)}},
    // string initiator_type = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationEventLog, _impl_.initiator_type_)}},
    // int32 retries_attempted = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ReplicationEventLog, _impl_.retries_attempted_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationEventLog, _impl_.retries_attempted_)}},
    // string escalation_level = 11;
    {::_pbi::TcParser::FastUS1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationEventLog, _impl_.escalation_level_)}},
    // string resolution_notes = 12;
    {::_pbi::TcParser::FastUS1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationEventLog, _impl_.resolution_notes_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string event_id = 1;
    {PROTOBUF_FIELD_OFFSET(ReplicationEventLog, _impl_.event_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string segment_id = 2;
    {PROTOBUF_FIELD_OFFSET(ReplicationEventLog, _impl_.segment_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string action = 3;
    {PROTOBUF_FIELD_OFFSET(ReplicationEventLog, _impl_.action_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string initiated_by = 4;
    {PROTOBUF_FIELD_OFFSET(ReplicationEventLog, _impl_.initiated_by_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string timestamp = 5;
    {PROTOBUF_FIELD_OFFSET(ReplicationEventLog, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string status = 6;
    {PROTOBUF_FIELD_OFFSET(ReplicationEventLog, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> details = 7;
    {PROTOBUF_FIELD_OFFSET(ReplicationEventLog, _impl_.details_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string failover_status = 8;
    {PROTOBUF_FIELD_OFFSET(ReplicationEventLog, _impl_.failover_status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string initiator_type = 9;
    {PROTOBUF_FIELD_OFFSET(ReplicationEventLog, _impl_.initiator_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 retries_attempted = 10;
    {PROTOBUF_FIELD_OFFSET(ReplicationEventLog, _impl_.retries_attempted_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string escalation_level = 11;
    {PROTOBUF_FIELD_OFFSET(ReplicationEventLog, _impl_.escalation_level_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string resolution_notes = 12;
    {PROTOBUF_FIELD_OFFSET(ReplicationEventLog, _impl_.resolution_notes_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(ReplicationEventLog()._impl_.details_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\45\10\12\6\14\11\6\7\17\16\0\20\20\0\0\0"
    "seigr.replication.ReplicationEventLog"
    "event_id"
    "segment_id"
    "action"
    "initiated_by"
    "timestamp"
    "status"
    "details"
    "failover_status"
    "initiator_type"
    "escalation_level"
    "resolution_notes"
  }},
};

PROTOBUF_NOINLINE void ReplicationEventLog::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.replication.ReplicationEventLog)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.details_.Clear();
  _impl_.event_id_.ClearToEmpty();
  _impl_.segment_id_.ClearToEmpty();
  _impl_.action_.ClearToEmpty();
  _impl_.initiated_by_.ClearToEmpty();
  _impl_.timestamp_.ClearToEmpty();
  _impl_.status_.ClearToEmpty();
  _impl_.failover_status_.ClearToEmpty();
  _impl_.initiator_type_.ClearToEmpty();
  _impl_.escalation_level_.ClearToEmpty();
  _impl_.resolution_notes_.ClearToEmpty();
  _impl_.retries_attempted_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ReplicationEventLog::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ReplicationEventLog& this_ = static_cast<const ReplicationEventLog&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ReplicationEventLog::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ReplicationEventLog& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.replication.ReplicationEventLog)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string event_id = 1;
          if (!this_._internal_event_id().empty()) {
            const std::string& _s = this_._internal_event_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationEventLog.event_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string segment_id = 2;
          if (!this_._internal_segment_id().empty()) {
            const std::string& _s = this_._internal_segment_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationEventLog.segment_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string action = 3;
          if (!this_._internal_action().empty()) {
            const std::string& _s = this_._internal_action();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationEventLog.action");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string initiated_by = 4;
          if (!this_._internal_initiated_by().empty()) {
            const std::string& _s = this_._internal_initiated_by();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationEventLog.initiated_by");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string timestamp = 5;
          if (!this_._internal_timestamp().empty()) {
            const std::string& _s = this_._internal_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationEventLog.timestamp");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string status = 6;
          if (!this_._internal_status().empty()) {
            const std::string& _s = this_._internal_status();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationEventLog.status");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // map<string, string> details = 7;
          if (!this_._internal_details().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_details();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationEventLog.details");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationEventLog.details");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationEventLog.details");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationEventLog.details");
              }
            }
          }

          // string failover_status = 8;
          if (!this_._internal_failover_status().empty()) {
            const std::string& _s = this_._internal_failover_status();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationEventLog.failover_status");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          // string initiator_type = 9;
          if (!this_._internal_initiator_type().empty()) {
            const std::string& _s = this_._internal_initiator_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationEventLog.initiator_type");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          // int32 retries_attempted = 10;
          if (this_._internal_retries_attempted() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<10>(
                    stream, this_._internal_retries_attempted(), target);
          }

          // string escalation_level = 11;
          if (!this_._internal_escalation_level().empty()) {
            const std::string& _s = this_._internal_escalation_level();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationEventLog.escalation_level");
            target = stream->WriteStringMaybeAliased(11, _s, target);
          }

          // string resolution_notes = 12;
          if (!this_._internal_resolution_notes().empty()) {
            const std::string& _s = this_._internal_resolution_notes();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationEventLog.resolution_notes");
            target = stream->WriteStringMaybeAliased(12, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.replication.ReplicationEventLog)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ReplicationEventLog::ByteSizeLong(const MessageLite& base) {
          const ReplicationEventLog& this_ = static_cast<const ReplicationEventLog&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ReplicationEventLog::ByteSizeLong() const {
          const ReplicationEventLog& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.replication.ReplicationEventLog)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> details = 7;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_details_size());
              for (const auto& entry : this_._internal_details()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string event_id = 1;
            if (!this_._internal_event_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_event_id());
            }
            // string segment_id = 2;
            if (!this_._internal_segment_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_segment_id());
            }
            // string action = 3;
            if (!this_._internal_action().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_action());
            }
            // string initiated_by = 4;
            if (!this_._internal_initiated_by().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_initiated_by());
            }
            // string timestamp = 5;
            if (!this_._internal_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_timestamp());
            }
            // string status = 6;
            if (!this_._internal_status().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_status());
            }
            // string failover_status = 8;
            if (!this_._internal_failover_status().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_failover_status());
            }
            // string initiator_type = 9;
            if (!this_._internal_initiator_type().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_initiator_type());
            }
            // string escalation_level = 11;
            if (!this_._internal_escalation_level().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_escalation_level());
            }
            // string resolution_notes = 12;
            if (!this_._internal_resolution_notes().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_resolution_notes());
            }
            // int32 retries_attempted = 10;
            if (this_._internal_retries_attempted() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_retries_attempted());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ReplicationEventLog::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ReplicationEventLog*>(&to_msg);
  auto& from = static_cast<const ReplicationEventLog&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.replication.ReplicationEventLog)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.details_.MergeFrom(from._impl_.details_);
  if (!from._internal_event_id().empty()) {
    _this->_internal_set_event_id(from._internal_event_id());
  }
  if (!from._internal_segment_id().empty()) {
    _this->_internal_set_segment_id(from._internal_segment_id());
  }
  if (!from._internal_action().empty()) {
    _this->_internal_set_action(from._internal_action());
  }
  if (!from._internal_initiated_by().empty()) {
    _this->_internal_set_initiated_by(from._internal_initiated_by());
  }
  if (!from._internal_timestamp().empty()) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (!from._internal_status().empty()) {
    _this->_internal_set_status(from._internal_status());
  }
  if (!from._internal_failover_status().empty()) {
    _this->_internal_set_failover_status(from._internal_failover_status());
  }
  if (!from._internal_initiator_type().empty()) {
    _this->_internal_set_initiator_type(from._internal_initiator_type());
  }
  if (!from._internal_escalation_level().empty()) {
    _this->_internal_set_escalation_level(from._internal_escalation_level());
  }
  if (!from._internal_resolution_notes().empty()) {
    _this->_internal_set_resolution_notes(from._internal_resolution_notes());
  }
  if (from._internal_retries_attempted() != 0) {
    _this->_impl_.retries_attempted_ = from._impl_.retries_attempted_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ReplicationEventLog::CopyFrom(const ReplicationEventLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.replication.ReplicationEventLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ReplicationEventLog::InternalSwap(ReplicationEventLog* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.details_.InternalSwap(&other->_impl_.details_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.event_id_, &other->_impl_.event_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.segment_id_, &other->_impl_.segment_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.action_, &other->_impl_.action_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.initiated_by_, &other->_impl_.initiated_by_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.timestamp_, &other->_impl_.timestamp_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.status_, &other->_impl_.status_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.failover_status_, &other->_impl_.failover_status_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.initiator_type_, &other->_impl_.initiator_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.escalation_level_, &other->_impl_.escalation_level_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.resolution_notes_, &other->_impl_.resolution_notes_, arena);
        swap(_impl_.retries_attempted_, other->_impl_.retries_attempted_);
}

::google::protobuf::Metadata ReplicationEventLog::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              RedundancyManager_SegmentPriorityEntry_DoNotUse::RedundancyManager_SegmentPriorityEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              RedundancyManager_SegmentPriorityEntry_DoNotUse::RedundancyManager_SegmentPriorityEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              RedundancyManager_SegmentPriorityEntry_DoNotUse::RedundancyManager_SegmentPriorityEntry_DoNotUse() : SuperType() {}
              RedundancyManager_SegmentPriorityEntry_DoNotUse::RedundancyManager_SegmentPriorityEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* RedundancyManager_SegmentPriorityEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) RedundancyManager_SegmentPriorityEntry_DoNotUse(arena);
              }
              constexpr auto RedundancyManager_SegmentPriorityEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RedundancyManager_SegmentPriorityEntry_DoNotUse),
                                                          alignof(RedundancyManager_SegmentPriorityEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull RedundancyManager_SegmentPriorityEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_RedundancyManager_SegmentPriorityEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &RedundancyManager_SegmentPriorityEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<RedundancyManager_SegmentPriorityEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &RedundancyManager_SegmentPriorityEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &RedundancyManager_SegmentPriorityEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(RedundancyManager_SegmentPriorityEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &RedundancyManager_SegmentPriorityEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_replication_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* RedundancyManager_SegmentPriorityEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 68, 2> RedundancyManager_SegmentPriorityEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RedundancyManager_SegmentPriorityEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::replication::RedundancyManager_SegmentPriorityEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .seigr.common_requests.ReplicationPriority value = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RedundancyManager_SegmentPriorityEntry_DoNotUse, _impl_.value_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(RedundancyManager_SegmentPriorityEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RedundancyManager_SegmentPriorityEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(RedundancyManager_SegmentPriorityEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.common_requests.ReplicationPriority value = 2;
    {PROTOBUF_FIELD_OFFSET(RedundancyManager_SegmentPriorityEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\70\3\0\0\0\0\0\0"
    "seigr.replication.RedundancyManager.SegmentPriorityEntry"
    "key"
  }},
};

// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              RedundancyManager_RedundancyMetadataEntry_DoNotUse::RedundancyManager_RedundancyMetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              RedundancyManager_RedundancyMetadataEntry_DoNotUse::RedundancyManager_RedundancyMetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              RedundancyManager_RedundancyMetadataEntry_DoNotUse::RedundancyManager_RedundancyMetadataEntry_DoNotUse() : SuperType() {}
              RedundancyManager_RedundancyMetadataEntry_DoNotUse::RedundancyManager_RedundancyMetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* RedundancyManager_RedundancyMetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) RedundancyManager_RedundancyMetadataEntry_DoNotUse(arena);
              }
              constexpr auto RedundancyManager_RedundancyMetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RedundancyManager_RedundancyMetadataEntry_DoNotUse),
                                                          alignof(RedundancyManager_RedundancyMetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull RedundancyManager_RedundancyMetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_RedundancyManager_RedundancyMetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &RedundancyManager_RedundancyMetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<RedundancyManager_RedundancyMetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &RedundancyManager_RedundancyMetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &RedundancyManager_RedundancyMetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(RedundancyManager_RedundancyMetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &RedundancyManager_RedundancyMetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_replication_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* RedundancyManager_RedundancyMetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 76, 2> RedundancyManager_RedundancyMetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RedundancyManager_RedundancyMetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::replication::RedundancyManager_RedundancyMetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RedundancyManager_RedundancyMetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RedundancyManager_RedundancyMetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(RedundancyManager_RedundancyMetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(RedundancyManager_RedundancyMetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\73\3\5\0\0\0\0\0"
    "seigr.replication.RedundancyManager.RedundancyMetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class RedundancyManager::_Internal {
 public:
};

RedundancyManager::RedundancyManager(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.replication.RedundancyManager)
}
inline PROTOBUF_NDEBUG_INLINE RedundancyManager::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::replication::RedundancyManager& from_msg)
      : segment_priority_{visibility, arena, from.segment_priority_},
        high_priority_segments_{visibility, arena, from.high_priority_segments_},
        critical_segments_{visibility, arena, from.critical_segments_},
        redundancy_metadata_{visibility, arena, from.redundancy_metadata_},
        adaptive_redundancy_policy_id_(arena, from.adaptive_redundancy_policy_id_),
        _cached_size_{0} {}

RedundancyManager::RedundancyManager(
    ::google::protobuf::Arena* arena,
    const RedundancyManager& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RedundancyManager* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, min_redundancy_level_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, min_redundancy_level_),
           offsetof(Impl_, cross_cluster_replication_enabled_) -
               offsetof(Impl_, min_redundancy_level_) +
               sizeof(Impl_::cross_cluster_replication_enabled_));

  // @@protoc_insertion_point(copy_constructor:seigr.replication.RedundancyManager)
}
inline PROTOBUF_NDEBUG_INLINE RedundancyManager::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : segment_priority_{visibility, arena},
        high_priority_segments_{visibility, arena},
        critical_segments_{visibility, arena},
        redundancy_metadata_{visibility, arena},
        adaptive_redundancy_policy_id_(arena),
        _cached_size_{0} {}

inline void RedundancyManager::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, min_redundancy_level_),
           0,
           offsetof(Impl_, cross_cluster_replication_enabled_) -
               offsetof(Impl_, min_redundancy_level_) +
               sizeof(Impl_::cross_cluster_replication_enabled_));
}
RedundancyManager::~RedundancyManager() {
  // @@protoc_insertion_point(destructor:seigr.replication.RedundancyManager)
  SharedDtor(*this);
}
inline void RedundancyManager::SharedDtor(MessageLite& self) {
  RedundancyManager& this_ = static_cast<RedundancyManager&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.adaptive_redundancy_policy_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* RedundancyManager::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RedundancyManager(arena);
}
constexpr auto RedundancyManager::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RedundancyManager, _impl_.segment_priority_) +
          decltype(RedundancyManager::_impl_.segment_priority_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RedundancyManager, _impl_.segment_priority_) +
          decltype(RedundancyManager::_impl_.segment_priority_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RedundancyManager, _impl_.high_priority_segments_) +
          decltype(RedundancyManager::_impl_.high_priority_segments_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RedundancyManager, _impl_.critical_segments_) +
          decltype(RedundancyManager::_impl_.critical_segments_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RedundancyManager, _impl_.redundancy_metadata_) +
          decltype(RedundancyManager::_impl_.redundancy_metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RedundancyManager, _impl_.redundancy_metadata_) +
          decltype(RedundancyManager::_impl_.redundancy_metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(RedundancyManager), alignof(RedundancyManager), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RedundancyManager::PlacementNew_,
                                 sizeof(RedundancyManager),
                                 alignof(RedundancyManager));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RedundancyManager::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RedundancyManager_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RedundancyManager::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RedundancyManager>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RedundancyManager::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RedundancyManager>(), &RedundancyManager::ByteSizeLong,
            &RedundancyManager::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RedundancyManager, _impl_._cached_size_),
        false,
    },
    &RedundancyManager::kDescriptorMethods,
    &descriptor_table_replication_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RedundancyManager::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 2, 155, 2> RedundancyManager::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::replication::RedundancyManager>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 min_redundancy_level = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RedundancyManager, _impl_.min_redundancy_level_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RedundancyManager, _impl_.min_redundancy_level_)}},
    // int32 max_redundancy_level = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RedundancyManager, _impl_.max_redundancy_level_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(RedundancyManager, _impl_.max_redundancy_level_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated string high_priority_segments = 4;
    {::_pbi::TcParser::FastUR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(RedundancyManager, _impl_.high_priority_segments_)}},
    // repeated string critical_segments = 5;
    {::_pbi::TcParser::FastUR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(RedundancyManager, _impl_.critical_segments_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // int32 failover_timeout_seconds = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RedundancyManager, _impl_.failover_timeout_seconds_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(RedundancyManager, _impl_.failover_timeout_seconds_)}},
    // bool adaptive_redundancy = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RedundancyManager, _impl_.adaptive_redundancy_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(RedundancyManager, _impl_.adaptive_redundancy_)}},
    // string adaptive_redundancy_policy_id = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(RedundancyManager, _impl_.adaptive_redundancy_policy_id_)}},
    // bool cross_cluster_replication_enabled = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RedundancyManager, _impl_.cross_cluster_replication_enabled_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(RedundancyManager, _impl_.cross_cluster_replication_enabled_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 min_redundancy_level = 1;
    {PROTOBUF_FIELD_OFFSET(RedundancyManager, _impl_.min_redundancy_level_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 max_redundancy_level = 2;
    {PROTOBUF_FIELD_OFFSET(RedundancyManager, _impl_.max_redundancy_level_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // map<string, .seigr.common_requests.ReplicationPriority> segment_priority = 3;
    {PROTOBUF_FIELD_OFFSET(RedundancyManager, _impl_.segment_priority_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // repeated string high_priority_segments = 4;
    {PROTOBUF_FIELD_OFFSET(RedundancyManager, _impl_.high_priority_segments_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string critical_segments = 5;
    {PROTOBUF_FIELD_OFFSET(RedundancyManager, _impl_.critical_segments_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // map<string, string> redundancy_metadata = 6;
    {PROTOBUF_FIELD_OFFSET(RedundancyManager, _impl_.redundancy_metadata_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // int32 failover_timeout_seconds = 7;
    {PROTOBUF_FIELD_OFFSET(RedundancyManager, _impl_.failover_timeout_seconds_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool adaptive_redundancy = 8;
    {PROTOBUF_FIELD_OFFSET(RedundancyManager, _impl_.adaptive_redundancy_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string adaptive_redundancy_policy_id = 9;
    {PROTOBUF_FIELD_OFFSET(RedundancyManager, _impl_.adaptive_redundancy_policy_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool cross_cluster_replication_enabled = 10;
    {PROTOBUF_FIELD_OFFSET(RedundancyManager, _impl_.cross_cluster_replication_enabled_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(RedundancyManager()._impl_.segment_priority_)>(
        1, 0, 0, 9,
        14)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(RedundancyManager()._impl_.redundancy_metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\43\0\0\20\26\21\23\0\0\35\0\0\0\0\0\0"
    "seigr.replication.RedundancyManager"
    "segment_priority"
    "high_priority_segments"
    "critical_segments"
    "redundancy_metadata"
    "adaptive_redundancy_policy_id"
  }},
};

PROTOBUF_NOINLINE void RedundancyManager::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.replication.RedundancyManager)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.segment_priority_.Clear();
  _impl_.high_priority_segments_.Clear();
  _impl_.critical_segments_.Clear();
  _impl_.redundancy_metadata_.Clear();
  _impl_.adaptive_redundancy_policy_id_.ClearToEmpty();
  ::memset(&_impl_.min_redundancy_level_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.cross_cluster_replication_enabled_) -
      reinterpret_cast<char*>(&_impl_.min_redundancy_level_)) + sizeof(_impl_.cross_cluster_replication_enabled_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RedundancyManager::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RedundancyManager& this_ = static_cast<const RedundancyManager&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RedundancyManager::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RedundancyManager& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.replication.RedundancyManager)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 min_redundancy_level = 1;
          if (this_._internal_min_redundancy_level() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_min_redundancy_level(), target);
          }

          // int32 max_redundancy_level = 2;
          if (this_._internal_max_redundancy_level() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_max_redundancy_level(), target);
          }

          // map<string, .seigr.common_requests.ReplicationPriority> segment_priority = 3;
          if (!this_._internal_segment_priority().empty()) {
            using MapType = ::google::protobuf::Map<std::string, ::seigr::common_requests::ReplicationPriority>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, ::seigr::common_requests::ReplicationPriority,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_ENUM>;
            const auto& field = this_._internal_segment_priority();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    3, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.RedundancyManager.segment_priority");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    3, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.RedundancyManager.segment_priority");
              }
            }
          }

          // repeated string high_priority_segments = 4;
          for (int i = 0, n = this_._internal_high_priority_segments_size(); i < n; ++i) {
            const auto& s = this_._internal_high_priority_segments().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.RedundancyManager.high_priority_segments");
            target = stream->WriteString(4, s, target);
          }

          // repeated string critical_segments = 5;
          for (int i = 0, n = this_._internal_critical_segments_size(); i < n; ++i) {
            const auto& s = this_._internal_critical_segments().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.RedundancyManager.critical_segments");
            target = stream->WriteString(5, s, target);
          }

          // map<string, string> redundancy_metadata = 6;
          if (!this_._internal_redundancy_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_redundancy_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.RedundancyManager.redundancy_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.RedundancyManager.redundancy_metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.RedundancyManager.redundancy_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.RedundancyManager.redundancy_metadata");
              }
            }
          }

          // int32 failover_timeout_seconds = 7;
          if (this_._internal_failover_timeout_seconds() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<7>(
                    stream, this_._internal_failover_timeout_seconds(), target);
          }

          // bool adaptive_redundancy = 8;
          if (this_._internal_adaptive_redundancy() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                8, this_._internal_adaptive_redundancy(), target);
          }

          // string adaptive_redundancy_policy_id = 9;
          if (!this_._internal_adaptive_redundancy_policy_id().empty()) {
            const std::string& _s = this_._internal_adaptive_redundancy_policy_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.RedundancyManager.adaptive_redundancy_policy_id");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          // bool cross_cluster_replication_enabled = 10;
          if (this_._internal_cross_cluster_replication_enabled() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                10, this_._internal_cross_cluster_replication_enabled(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.replication.RedundancyManager)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RedundancyManager::ByteSizeLong(const MessageLite& base) {
          const RedundancyManager& this_ = static_cast<const RedundancyManager&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RedundancyManager::ByteSizeLong() const {
          const RedundancyManager& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.replication.RedundancyManager)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, .seigr.common_requests.ReplicationPriority> segment_priority = 3;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_segment_priority_size());
              for (const auto& entry : this_._internal_segment_priority()) {
                total_size += _pbi::MapEntryFuncs<std::string, ::seigr::common_requests::ReplicationPriority,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_ENUM>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // repeated string high_priority_segments = 4;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_high_priority_segments().size());
              for (int i = 0, n = this_._internal_high_priority_segments().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_high_priority_segments().Get(i));
              }
            }
            // repeated string critical_segments = 5;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_critical_segments().size());
              for (int i = 0, n = this_._internal_critical_segments().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_critical_segments().Get(i));
              }
            }
            // map<string, string> redundancy_metadata = 6;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_redundancy_metadata_size());
              for (const auto& entry : this_._internal_redundancy_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string adaptive_redundancy_policy_id = 9;
            if (!this_._internal_adaptive_redundancy_policy_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_adaptive_redundancy_policy_id());
            }
            // int32 min_redundancy_level = 1;
            if (this_._internal_min_redundancy_level() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_min_redundancy_level());
            }
            // int32 max_redundancy_level = 2;
            if (this_._internal_max_redundancy_level() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_max_redundancy_level());
            }
            // int32 failover_timeout_seconds = 7;
            if (this_._internal_failover_timeout_seconds() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_failover_timeout_seconds());
            }
            // bool adaptive_redundancy = 8;
            if (this_._internal_adaptive_redundancy() != 0) {
              total_size += 2;
            }
            // bool cross_cluster_replication_enabled = 10;
            if (this_._internal_cross_cluster_replication_enabled() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RedundancyManager::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RedundancyManager*>(&to_msg);
  auto& from = static_cast<const RedundancyManager&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.replication.RedundancyManager)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.segment_priority_.MergeFrom(from._impl_.segment_priority_);
  _this->_internal_mutable_high_priority_segments()->MergeFrom(from._internal_high_priority_segments());
  _this->_internal_mutable_critical_segments()->MergeFrom(from._internal_critical_segments());
  _this->_impl_.redundancy_metadata_.MergeFrom(from._impl_.redundancy_metadata_);
  if (!from._internal_adaptive_redundancy_policy_id().empty()) {
    _this->_internal_set_adaptive_redundancy_policy_id(from._internal_adaptive_redundancy_policy_id());
  }
  if (from._internal_min_redundancy_level() != 0) {
    _this->_impl_.min_redundancy_level_ = from._impl_.min_redundancy_level_;
  }
  if (from._internal_max_redundancy_level() != 0) {
    _this->_impl_.max_redundancy_level_ = from._impl_.max_redundancy_level_;
  }
  if (from._internal_failover_timeout_seconds() != 0) {
    _this->_impl_.failover_timeout_seconds_ = from._impl_.failover_timeout_seconds_;
  }
  if (from._internal_adaptive_redundancy() != 0) {
    _this->_impl_.adaptive_redundancy_ = from._impl_.adaptive_redundancy_;
  }
  if (from._internal_cross_cluster_replication_enabled() != 0) {
    _this->_impl_.cross_cluster_replication_enabled_ = from._impl_.cross_cluster_replication_enabled_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RedundancyManager::CopyFrom(const RedundancyManager& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.replication.RedundancyManager)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RedundancyManager::InternalSwap(RedundancyManager* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.segment_priority_.InternalSwap(&other->_impl_.segment_priority_);
  _impl_.high_priority_segments_.InternalSwap(&other->_impl_.high_priority_segments_);
  _impl_.critical_segments_.InternalSwap(&other->_impl_.critical_segments_);
  _impl_.redundancy_metadata_.InternalSwap(&other->_impl_.redundancy_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.adaptive_redundancy_policy_id_, &other->_impl_.adaptive_redundancy_policy_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RedundancyManager, _impl_.cross_cluster_replication_enabled_)
      + sizeof(RedundancyManager::_impl_.cross_cluster_replication_enabled_)
      - PROTOBUF_FIELD_OFFSET(RedundancyManager, _impl_.min_redundancy_level_)>(
          reinterpret_cast<char*>(&_impl_.min_redundancy_level_),
          reinterpret_cast<char*>(&other->_impl_.min_redundancy_level_));
}

::google::protobuf::Metadata RedundancyManager::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              ReplicationEscalation_MetadataEntry_DoNotUse::ReplicationEscalation_MetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              ReplicationEscalation_MetadataEntry_DoNotUse::ReplicationEscalation_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              ReplicationEscalation_MetadataEntry_DoNotUse::ReplicationEscalation_MetadataEntry_DoNotUse() : SuperType() {}
              ReplicationEscalation_MetadataEntry_DoNotUse::ReplicationEscalation_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* ReplicationEscalation_MetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) ReplicationEscalation_MetadataEntry_DoNotUse(arena);
              }
              constexpr auto ReplicationEscalation_MetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ReplicationEscalation_MetadataEntry_DoNotUse),
                                                          alignof(ReplicationEscalation_MetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull ReplicationEscalation_MetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_ReplicationEscalation_MetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &ReplicationEscalation_MetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<ReplicationEscalation_MetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &ReplicationEscalation_MetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &ReplicationEscalation_MetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(ReplicationEscalation_MetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &ReplicationEscalation_MetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_replication_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* ReplicationEscalation_MetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 70, 2> ReplicationEscalation_MetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ReplicationEscalation_MetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::replication::ReplicationEscalation_MetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationEscalation_MetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationEscalation_MetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(ReplicationEscalation_MetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(ReplicationEscalation_MetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\65\3\5\0\0\0\0\0"
    "seigr.replication.ReplicationEscalation.MetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              ReplicationEscalation_AlertPreferencesEntry_DoNotUse::ReplicationEscalation_AlertPreferencesEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              ReplicationEscalation_AlertPreferencesEntry_DoNotUse::ReplicationEscalation_AlertPreferencesEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              ReplicationEscalation_AlertPreferencesEntry_DoNotUse::ReplicationEscalation_AlertPreferencesEntry_DoNotUse() : SuperType() {}
              ReplicationEscalation_AlertPreferencesEntry_DoNotUse::ReplicationEscalation_AlertPreferencesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* ReplicationEscalation_AlertPreferencesEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) ReplicationEscalation_AlertPreferencesEntry_DoNotUse(arena);
              }
              constexpr auto ReplicationEscalation_AlertPreferencesEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ReplicationEscalation_AlertPreferencesEntry_DoNotUse),
                                                          alignof(ReplicationEscalation_AlertPreferencesEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull ReplicationEscalation_AlertPreferencesEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_ReplicationEscalation_AlertPreferencesEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &ReplicationEscalation_AlertPreferencesEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<ReplicationEscalation_AlertPreferencesEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &ReplicationEscalation_AlertPreferencesEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &ReplicationEscalation_AlertPreferencesEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(ReplicationEscalation_AlertPreferencesEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &ReplicationEscalation_AlertPreferencesEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_replication_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* ReplicationEscalation_AlertPreferencesEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 78, 2> ReplicationEscalation_AlertPreferencesEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ReplicationEscalation_AlertPreferencesEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::replication::ReplicationEscalation_AlertPreferencesEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationEscalation_AlertPreferencesEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationEscalation_AlertPreferencesEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(ReplicationEscalation_AlertPreferencesEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(ReplicationEscalation_AlertPreferencesEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\75\3\5\0\0\0\0\0"
    "seigr.replication.ReplicationEscalation.AlertPreferencesEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class ReplicationEscalation::_Internal {
 public:
};

ReplicationEscalation::ReplicationEscalation(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.replication.ReplicationEscalation)
}
inline PROTOBUF_NDEBUG_INLINE ReplicationEscalation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::replication::ReplicationEscalation& from_msg)
      : alert_recipients_{visibility, arena, from.alert_recipients_},
        metadata_{visibility, arena, from.metadata_},
        alert_preferences_{visibility, arena, from.alert_preferences_},
        escalation_id_(arena, from.escalation_id_),
        segment_id_(arena, from.segment_id_),
        escalated_at_(arena, from.escalated_at_),
        reason_(arena, from.reason_),
        escalation_status_(arena, from.escalation_status_),
        escalation_resolution_timestamp_(arena, from.escalation_resolution_timestamp_),
        fallback_strategy_(arena, from.fallback_strategy_),
        _cached_size_{0} {}

ReplicationEscalation::ReplicationEscalation(
    ::google::protobuf::Arena* arena,
    const ReplicationEscalation& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ReplicationEscalation* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, priority_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, priority_),
           offsetof(Impl_, replication_delay_penalty_) -
               offsetof(Impl_, priority_) +
               sizeof(Impl_::replication_delay_penalty_));

  // @@protoc_insertion_point(copy_constructor:seigr.replication.ReplicationEscalation)
}
inline PROTOBUF_NDEBUG_INLINE ReplicationEscalation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : alert_recipients_{visibility, arena},
        metadata_{visibility, arena},
        alert_preferences_{visibility, arena},
        escalation_id_(arena),
        segment_id_(arena),
        escalated_at_(arena),
        reason_(arena),
        escalation_status_(arena),
        escalation_resolution_timestamp_(arena),
        fallback_strategy_(arena),
        _cached_size_{0} {}

inline void ReplicationEscalation::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, priority_),
           0,
           offsetof(Impl_, replication_delay_penalty_) -
               offsetof(Impl_, priority_) +
               sizeof(Impl_::replication_delay_penalty_));
}
ReplicationEscalation::~ReplicationEscalation() {
  // @@protoc_insertion_point(destructor:seigr.replication.ReplicationEscalation)
  SharedDtor(*this);
}
inline void ReplicationEscalation::SharedDtor(MessageLite& self) {
  ReplicationEscalation& this_ = static_cast<ReplicationEscalation&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.escalation_id_.Destroy();
  this_._impl_.segment_id_.Destroy();
  this_._impl_.escalated_at_.Destroy();
  this_._impl_.reason_.Destroy();
  this_._impl_.escalation_status_.Destroy();
  this_._impl_.escalation_resolution_timestamp_.Destroy();
  this_._impl_.fallback_strategy_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ReplicationEscalation::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ReplicationEscalation(arena);
}
constexpr auto ReplicationEscalation::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ReplicationEscalation, _impl_.alert_recipients_) +
          decltype(ReplicationEscalation::_impl_.alert_recipients_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ReplicationEscalation, _impl_.metadata_) +
          decltype(ReplicationEscalation::_impl_.metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ReplicationEscalation, _impl_.metadata_) +
          decltype(ReplicationEscalation::_impl_.metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ReplicationEscalation, _impl_.alert_preferences_) +
          decltype(ReplicationEscalation::_impl_.alert_preferences_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ReplicationEscalation, _impl_.alert_preferences_) +
          decltype(ReplicationEscalation::_impl_.alert_preferences_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ReplicationEscalation), alignof(ReplicationEscalation), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ReplicationEscalation::PlacementNew_,
                                 sizeof(ReplicationEscalation),
                                 alignof(ReplicationEscalation));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ReplicationEscalation::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ReplicationEscalation_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ReplicationEscalation::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ReplicationEscalation>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ReplicationEscalation::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ReplicationEscalation>(), &ReplicationEscalation::ByteSizeLong,
            &ReplicationEscalation::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ReplicationEscalation, _impl_._cached_size_),
        false,
    },
    &ReplicationEscalation::kDescriptorMethods,
    &descriptor_table_replication_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ReplicationEscalation::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 14, 2, 203, 2> ReplicationEscalation::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    14, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294950912,  // skipmap
    offsetof(decltype(_table_), field_entries),
    14,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::replication::ReplicationEscalation>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string escalation_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationEscalation, _impl_.escalation_id_)}},
    // string segment_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationEscalation, _impl_.segment_id_)}},
    // .seigr.common_requests.ReplicationPriority priority = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ReplicationEscalation, _impl_.priority_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationEscalation, _impl_.priority_)}},
    // string escalated_at = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationEscalation, _impl_.escalated_at_)}},
    // string reason = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationEscalation, _impl_.reason_)}},
    // repeated string alert_recipients = 6;
    {::_pbi::TcParser::FastUR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationEscalation, _impl_.alert_recipients_)}},
    // bool immediate_replication_triggered = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ReplicationEscalation, _impl_.immediate_replication_triggered_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationEscalation, _impl_.immediate_replication_triggered_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // .seigr.event.EscalationLevel escalation_level = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ReplicationEscalation, _impl_.escalation_level_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationEscalation, _impl_.escalation_level_)}},
    // string escalation_status = 11;
    {::_pbi::TcParser::FastUS1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationEscalation, _impl_.escalation_status_)}},
    // string escalation_resolution_timestamp = 12;
    {::_pbi::TcParser::FastUS1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationEscalation, _impl_.escalation_resolution_timestamp_)}},
    // string fallback_strategy = 13;
    {::_pbi::TcParser::FastUS1,
     {106, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationEscalation, _impl_.fallback_strategy_)}},
    // int32 replication_delay_penalty = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ReplicationEscalation, _impl_.replication_delay_penalty_), 63>(),
     {112, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationEscalation, _impl_.replication_delay_penalty_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string escalation_id = 1;
    {PROTOBUF_FIELD_OFFSET(ReplicationEscalation, _impl_.escalation_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string segment_id = 2;
    {PROTOBUF_FIELD_OFFSET(ReplicationEscalation, _impl_.segment_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.common_requests.ReplicationPriority priority = 3;
    {PROTOBUF_FIELD_OFFSET(ReplicationEscalation, _impl_.priority_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string escalated_at = 4;
    {PROTOBUF_FIELD_OFFSET(ReplicationEscalation, _impl_.escalated_at_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string reason = 5;
    {PROTOBUF_FIELD_OFFSET(ReplicationEscalation, _impl_.reason_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string alert_recipients = 6;
    {PROTOBUF_FIELD_OFFSET(ReplicationEscalation, _impl_.alert_recipients_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // bool immediate_replication_triggered = 7;
    {PROTOBUF_FIELD_OFFSET(ReplicationEscalation, _impl_.immediate_replication_triggered_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // map<string, string> metadata = 8;
    {PROTOBUF_FIELD_OFFSET(ReplicationEscalation, _impl_.metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<string, string> alert_preferences = 9;
    {PROTOBUF_FIELD_OFFSET(ReplicationEscalation, _impl_.alert_preferences_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // .seigr.event.EscalationLevel escalation_level = 10;
    {PROTOBUF_FIELD_OFFSET(ReplicationEscalation, _impl_.escalation_level_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string escalation_status = 11;
    {PROTOBUF_FIELD_OFFSET(ReplicationEscalation, _impl_.escalation_status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string escalation_resolution_timestamp = 12;
    {PROTOBUF_FIELD_OFFSET(ReplicationEscalation, _impl_.escalation_resolution_timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string fallback_strategy = 13;
    {PROTOBUF_FIELD_OFFSET(ReplicationEscalation, _impl_.fallback_strategy_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 replication_delay_penalty = 14;
    {PROTOBUF_FIELD_OFFSET(ReplicationEscalation, _impl_.replication_delay_penalty_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(ReplicationEscalation()._impl_.metadata_)>(
        1, 0, 0, 9,
        9)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(ReplicationEscalation()._impl_.alert_preferences_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\47\15\12\0\14\6\20\0\10\21\0\21\37\21\0\0"
    "seigr.replication.ReplicationEscalation"
    "escalation_id"
    "segment_id"
    "escalated_at"
    "reason"
    "alert_recipients"
    "metadata"
    "alert_preferences"
    "escalation_status"
    "escalation_resolution_timestamp"
    "fallback_strategy"
  }},
};

PROTOBUF_NOINLINE void ReplicationEscalation::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.replication.ReplicationEscalation)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.alert_recipients_.Clear();
  _impl_.metadata_.Clear();
  _impl_.alert_preferences_.Clear();
  _impl_.escalation_id_.ClearToEmpty();
  _impl_.segment_id_.ClearToEmpty();
  _impl_.escalated_at_.ClearToEmpty();
  _impl_.reason_.ClearToEmpty();
  _impl_.escalation_status_.ClearToEmpty();
  _impl_.escalation_resolution_timestamp_.ClearToEmpty();
  _impl_.fallback_strategy_.ClearToEmpty();
  ::memset(&_impl_.priority_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.replication_delay_penalty_) -
      reinterpret_cast<char*>(&_impl_.priority_)) + sizeof(_impl_.replication_delay_penalty_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ReplicationEscalation::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ReplicationEscalation& this_ = static_cast<const ReplicationEscalation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ReplicationEscalation::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ReplicationEscalation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.replication.ReplicationEscalation)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string escalation_id = 1;
          if (!this_._internal_escalation_id().empty()) {
            const std::string& _s = this_._internal_escalation_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationEscalation.escalation_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string segment_id = 2;
          if (!this_._internal_segment_id().empty()) {
            const std::string& _s = this_._internal_segment_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationEscalation.segment_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // .seigr.common_requests.ReplicationPriority priority = 3;
          if (this_._internal_priority() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_priority(), target);
          }

          // string escalated_at = 4;
          if (!this_._internal_escalated_at().empty()) {
            const std::string& _s = this_._internal_escalated_at();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationEscalation.escalated_at");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string reason = 5;
          if (!this_._internal_reason().empty()) {
            const std::string& _s = this_._internal_reason();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationEscalation.reason");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // repeated string alert_recipients = 6;
          for (int i = 0, n = this_._internal_alert_recipients_size(); i < n; ++i) {
            const auto& s = this_._internal_alert_recipients().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationEscalation.alert_recipients");
            target = stream->WriteString(6, s, target);
          }

          // bool immediate_replication_triggered = 7;
          if (this_._internal_immediate_replication_triggered() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                7, this_._internal_immediate_replication_triggered(), target);
          }

          // map<string, string> metadata = 8;
          if (!this_._internal_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    8, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationEscalation.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationEscalation.metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    8, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationEscalation.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationEscalation.metadata");
              }
            }
          }

          // map<string, string> alert_preferences = 9;
          if (!this_._internal_alert_preferences().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_alert_preferences();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    9, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationEscalation.alert_preferences");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationEscalation.alert_preferences");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    9, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationEscalation.alert_preferences");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationEscalation.alert_preferences");
              }
            }
          }

          // .seigr.event.EscalationLevel escalation_level = 10;
          if (this_._internal_escalation_level() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                10, this_._internal_escalation_level(), target);
          }

          // string escalation_status = 11;
          if (!this_._internal_escalation_status().empty()) {
            const std::string& _s = this_._internal_escalation_status();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationEscalation.escalation_status");
            target = stream->WriteStringMaybeAliased(11, _s, target);
          }

          // string escalation_resolution_timestamp = 12;
          if (!this_._internal_escalation_resolution_timestamp().empty()) {
            const std::string& _s = this_._internal_escalation_resolution_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationEscalation.escalation_resolution_timestamp");
            target = stream->WriteStringMaybeAliased(12, _s, target);
          }

          // string fallback_strategy = 13;
          if (!this_._internal_fallback_strategy().empty()) {
            const std::string& _s = this_._internal_fallback_strategy();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationEscalation.fallback_strategy");
            target = stream->WriteStringMaybeAliased(13, _s, target);
          }

          // int32 replication_delay_penalty = 14;
          if (this_._internal_replication_delay_penalty() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<14>(
                    stream, this_._internal_replication_delay_penalty(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.replication.ReplicationEscalation)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ReplicationEscalation::ByteSizeLong(const MessageLite& base) {
          const ReplicationEscalation& this_ = static_cast<const ReplicationEscalation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ReplicationEscalation::ByteSizeLong() const {
          const ReplicationEscalation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.replication.ReplicationEscalation)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string alert_recipients = 6;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_alert_recipients().size());
              for (int i = 0, n = this_._internal_alert_recipients().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_alert_recipients().Get(i));
              }
            }
            // map<string, string> metadata = 8;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_metadata_size());
              for (const auto& entry : this_._internal_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // map<string, string> alert_preferences = 9;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_alert_preferences_size());
              for (const auto& entry : this_._internal_alert_preferences()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string escalation_id = 1;
            if (!this_._internal_escalation_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_escalation_id());
            }
            // string segment_id = 2;
            if (!this_._internal_segment_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_segment_id());
            }
            // string escalated_at = 4;
            if (!this_._internal_escalated_at().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_escalated_at());
            }
            // string reason = 5;
            if (!this_._internal_reason().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_reason());
            }
            // string escalation_status = 11;
            if (!this_._internal_escalation_status().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_escalation_status());
            }
            // string escalation_resolution_timestamp = 12;
            if (!this_._internal_escalation_resolution_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_escalation_resolution_timestamp());
            }
            // string fallback_strategy = 13;
            if (!this_._internal_fallback_strategy().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_fallback_strategy());
            }
            // .seigr.common_requests.ReplicationPriority priority = 3;
            if (this_._internal_priority() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_priority());
            }
            // bool immediate_replication_triggered = 7;
            if (this_._internal_immediate_replication_triggered() != 0) {
              total_size += 2;
            }
            // .seigr.event.EscalationLevel escalation_level = 10;
            if (this_._internal_escalation_level() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_escalation_level());
            }
            // int32 replication_delay_penalty = 14;
            if (this_._internal_replication_delay_penalty() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_replication_delay_penalty());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ReplicationEscalation::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ReplicationEscalation*>(&to_msg);
  auto& from = static_cast<const ReplicationEscalation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.replication.ReplicationEscalation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_alert_recipients()->MergeFrom(from._internal_alert_recipients());
  _this->_impl_.metadata_.MergeFrom(from._impl_.metadata_);
  _this->_impl_.alert_preferences_.MergeFrom(from._impl_.alert_preferences_);
  if (!from._internal_escalation_id().empty()) {
    _this->_internal_set_escalation_id(from._internal_escalation_id());
  }
  if (!from._internal_segment_id().empty()) {
    _this->_internal_set_segment_id(from._internal_segment_id());
  }
  if (!from._internal_escalated_at().empty()) {
    _this->_internal_set_escalated_at(from._internal_escalated_at());
  }
  if (!from._internal_reason().empty()) {
    _this->_internal_set_reason(from._internal_reason());
  }
  if (!from._internal_escalation_status().empty()) {
    _this->_internal_set_escalation_status(from._internal_escalation_status());
  }
  if (!from._internal_escalation_resolution_timestamp().empty()) {
    _this->_internal_set_escalation_resolution_timestamp(from._internal_escalation_resolution_timestamp());
  }
  if (!from._internal_fallback_strategy().empty()) {
    _this->_internal_set_fallback_strategy(from._internal_fallback_strategy());
  }
  if (from._internal_priority() != 0) {
    _this->_impl_.priority_ = from._impl_.priority_;
  }
  if (from._internal_immediate_replication_triggered() != 0) {
    _this->_impl_.immediate_replication_triggered_ = from._impl_.immediate_replication_triggered_;
  }
  if (from._internal_escalation_level() != 0) {
    _this->_impl_.escalation_level_ = from._impl_.escalation_level_;
  }
  if (from._internal_replication_delay_penalty() != 0) {
    _this->_impl_.replication_delay_penalty_ = from._impl_.replication_delay_penalty_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ReplicationEscalation::CopyFrom(const ReplicationEscalation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.replication.ReplicationEscalation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ReplicationEscalation::InternalSwap(ReplicationEscalation* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.alert_recipients_.InternalSwap(&other->_impl_.alert_recipients_);
  _impl_.metadata_.InternalSwap(&other->_impl_.metadata_);
  _impl_.alert_preferences_.InternalSwap(&other->_impl_.alert_preferences_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.escalation_id_, &other->_impl_.escalation_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.segment_id_, &other->_impl_.segment_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.escalated_at_, &other->_impl_.escalated_at_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reason_, &other->_impl_.reason_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.escalation_status_, &other->_impl_.escalation_status_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.escalation_resolution_timestamp_, &other->_impl_.escalation_resolution_timestamp_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.fallback_strategy_, &other->_impl_.fallback_strategy_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReplicationEscalation, _impl_.replication_delay_penalty_)
      + sizeof(ReplicationEscalation::_impl_.replication_delay_penalty_)
      - PROTOBUF_FIELD_OFFSET(ReplicationEscalation, _impl_.priority_)>(
          reinterpret_cast<char*>(&_impl_.priority_),
          reinterpret_cast<char*>(&other->_impl_.priority_));
}

::google::protobuf::Metadata ReplicationEscalation::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              ReplicationSummary_SegmentStatusesEntry_DoNotUse::ReplicationSummary_SegmentStatusesEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              ReplicationSummary_SegmentStatusesEntry_DoNotUse::ReplicationSummary_SegmentStatusesEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              ReplicationSummary_SegmentStatusesEntry_DoNotUse::ReplicationSummary_SegmentStatusesEntry_DoNotUse() : SuperType() {}
              ReplicationSummary_SegmentStatusesEntry_DoNotUse::ReplicationSummary_SegmentStatusesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* ReplicationSummary_SegmentStatusesEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) ReplicationSummary_SegmentStatusesEntry_DoNotUse(arena);
              }
              constexpr auto ReplicationSummary_SegmentStatusesEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ReplicationSummary_SegmentStatusesEntry_DoNotUse),
                                                          alignof(ReplicationSummary_SegmentStatusesEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull ReplicationSummary_SegmentStatusesEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_ReplicationSummary_SegmentStatusesEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &ReplicationSummary_SegmentStatusesEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<ReplicationSummary_SegmentStatusesEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &ReplicationSummary_SegmentStatusesEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &ReplicationSummary_SegmentStatusesEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(ReplicationSummary_SegmentStatusesEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &ReplicationSummary_SegmentStatusesEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_replication_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* ReplicationSummary_SegmentStatusesEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 69, 2> ReplicationSummary_SegmentStatusesEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ReplicationSummary_SegmentStatusesEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::replication::ReplicationSummary_SegmentStatusesEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .seigr.replication.ReplicationStatus value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ReplicationSummary_SegmentStatusesEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationSummary_SegmentStatusesEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(ReplicationSummary_SegmentStatusesEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seigr.replication.ReplicationStatus value = 2;
    {PROTOBUF_FIELD_OFFSET(ReplicationSummary_SegmentStatusesEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::seigr::replication::ReplicationStatus>()},
  }}, {{
    "\71\3\0\0\0\0\0\0"
    "seigr.replication.ReplicationSummary.SegmentStatusesEntry"
    "key"
  }},
};

// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              ReplicationSummary_SummaryMetadataEntry_DoNotUse::ReplicationSummary_SummaryMetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              ReplicationSummary_SummaryMetadataEntry_DoNotUse::ReplicationSummary_SummaryMetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              ReplicationSummary_SummaryMetadataEntry_DoNotUse::ReplicationSummary_SummaryMetadataEntry_DoNotUse() : SuperType() {}
              ReplicationSummary_SummaryMetadataEntry_DoNotUse::ReplicationSummary_SummaryMetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* ReplicationSummary_SummaryMetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) ReplicationSummary_SummaryMetadataEntry_DoNotUse(arena);
              }
              constexpr auto ReplicationSummary_SummaryMetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ReplicationSummary_SummaryMetadataEntry_DoNotUse),
                                                          alignof(ReplicationSummary_SummaryMetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull ReplicationSummary_SummaryMetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_ReplicationSummary_SummaryMetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &ReplicationSummary_SummaryMetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<ReplicationSummary_SummaryMetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &ReplicationSummary_SummaryMetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &ReplicationSummary_SummaryMetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(ReplicationSummary_SummaryMetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &ReplicationSummary_SummaryMetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_replication_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* ReplicationSummary_SummaryMetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 74, 2> ReplicationSummary_SummaryMetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ReplicationSummary_SummaryMetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::replication::ReplicationSummary_SummaryMetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationSummary_SummaryMetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationSummary_SummaryMetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(ReplicationSummary_SummaryMetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(ReplicationSummary_SummaryMetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\71\3\5\0\0\0\0\0"
    "seigr.replication.ReplicationSummary.SummaryMetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              ReplicationSummary_EscalationCountsEntry_DoNotUse::ReplicationSummary_EscalationCountsEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              ReplicationSummary_EscalationCountsEntry_DoNotUse::ReplicationSummary_EscalationCountsEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              ReplicationSummary_EscalationCountsEntry_DoNotUse::ReplicationSummary_EscalationCountsEntry_DoNotUse() : SuperType() {}
              ReplicationSummary_EscalationCountsEntry_DoNotUse::ReplicationSummary_EscalationCountsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* ReplicationSummary_EscalationCountsEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) ReplicationSummary_EscalationCountsEntry_DoNotUse(arena);
              }
              constexpr auto ReplicationSummary_EscalationCountsEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ReplicationSummary_EscalationCountsEntry_DoNotUse),
                                                          alignof(ReplicationSummary_EscalationCountsEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull ReplicationSummary_EscalationCountsEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_ReplicationSummary_EscalationCountsEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &ReplicationSummary_EscalationCountsEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<ReplicationSummary_EscalationCountsEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &ReplicationSummary_EscalationCountsEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &ReplicationSummary_EscalationCountsEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(ReplicationSummary_EscalationCountsEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &ReplicationSummary_EscalationCountsEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_replication_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* ReplicationSummary_EscalationCountsEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 70, 2> ReplicationSummary_EscalationCountsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ReplicationSummary_EscalationCountsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::replication::ReplicationSummary_EscalationCountsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 value = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ReplicationSummary_EscalationCountsEntry_DoNotUse, _impl_.value_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationSummary_EscalationCountsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationSummary_EscalationCountsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(ReplicationSummary_EscalationCountsEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 value = 2;
    {PROTOBUF_FIELD_OFFSET(ReplicationSummary_EscalationCountsEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\72\3\0\0\0\0\0\0"
    "seigr.replication.ReplicationSummary.EscalationCountsEntry"
    "key"
  }},
};

// ===================================================================

class ReplicationSummary::_Internal {
 public:
};

ReplicationSummary::ReplicationSummary(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seigr.replication.ReplicationSummary)
}
inline PROTOBUF_NDEBUG_INLINE ReplicationSummary::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::seigr::replication::ReplicationSummary& from_msg)
      : segment_statuses_{visibility, arena, from.segment_statuses_},
        summary_metadata_{visibility, arena, from.summary_metadata_},
        escalation_counts_{visibility, arena, from.escalation_counts_},
        summary_id_(arena, from.summary_id_),
        generated_at_(arena, from.generated_at_),
        _cached_size_{0} {}

ReplicationSummary::ReplicationSummary(
    ::google::protobuf::Arena* arena,
    const ReplicationSummary& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ReplicationSummary* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_segments_replicated_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, total_segments_replicated_),
           offsetof(Impl_, redundancy_satisfaction_rate_) -
               offsetof(Impl_, total_segments_replicated_) +
               sizeof(Impl_::redundancy_satisfaction_rate_));

  // @@protoc_insertion_point(copy_constructor:seigr.replication.ReplicationSummary)
}
inline PROTOBUF_NDEBUG_INLINE ReplicationSummary::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : segment_statuses_{visibility, arena},
        summary_metadata_{visibility, arena},
        escalation_counts_{visibility, arena},
        summary_id_(arena),
        generated_at_(arena),
        _cached_size_{0} {}

inline void ReplicationSummary::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_segments_replicated_),
           0,
           offsetof(Impl_, redundancy_satisfaction_rate_) -
               offsetof(Impl_, total_segments_replicated_) +
               sizeof(Impl_::redundancy_satisfaction_rate_));
}
ReplicationSummary::~ReplicationSummary() {
  // @@protoc_insertion_point(destructor:seigr.replication.ReplicationSummary)
  SharedDtor(*this);
}
inline void ReplicationSummary::SharedDtor(MessageLite& self) {
  ReplicationSummary& this_ = static_cast<ReplicationSummary&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.summary_id_.Destroy();
  this_._impl_.generated_at_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ReplicationSummary::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ReplicationSummary(arena);
}
constexpr auto ReplicationSummary::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ReplicationSummary, _impl_.segment_statuses_) +
          decltype(ReplicationSummary::_impl_.segment_statuses_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ReplicationSummary, _impl_.segment_statuses_) +
          decltype(ReplicationSummary::_impl_.segment_statuses_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ReplicationSummary, _impl_.summary_metadata_) +
          decltype(ReplicationSummary::_impl_.summary_metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ReplicationSummary, _impl_.summary_metadata_) +
          decltype(ReplicationSummary::_impl_.summary_metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ReplicationSummary, _impl_.escalation_counts_) +
          decltype(ReplicationSummary::_impl_.escalation_counts_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ReplicationSummary, _impl_.escalation_counts_) +
          decltype(ReplicationSummary::_impl_.escalation_counts_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ReplicationSummary), alignof(ReplicationSummary), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ReplicationSummary::PlacementNew_,
                                 sizeof(ReplicationSummary),
                                 alignof(ReplicationSummary));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ReplicationSummary::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ReplicationSummary_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ReplicationSummary::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ReplicationSummary>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ReplicationSummary::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ReplicationSummary>(), &ReplicationSummary::ByteSizeLong,
            &ReplicationSummary::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ReplicationSummary, _impl_._cached_size_),
        false,
    },
    &ReplicationSummary::kDescriptorMethods,
    &descriptor_table_replication_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ReplicationSummary::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 14, 4, 124, 2> ReplicationSummary::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    14, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294950912,  // skipmap
    offsetof(decltype(_table_), field_entries),
    14,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seigr::replication::ReplicationSummary>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string summary_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationSummary, _impl_.summary_id_)}},
    // int32 total_segments_replicated = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ReplicationSummary, _impl_.total_segments_replicated_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationSummary, _impl_.total_segments_replicated_)}},
    // int32 high_priority_replications = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ReplicationSummary, _impl_.high_priority_replications_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationSummary, _impl_.high_priority_replications_)}},
    // int32 failed_replications = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ReplicationSummary, _impl_.failed_replications_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationSummary, _impl_.failed_replications_)}},
    // int32 ongoing_replications = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ReplicationSummary, _impl_.ongoing_replications_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationSummary, _impl_.ongoing_replications_)}},
    // string generated_at = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationSummary, _impl_.generated_at_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // float average_replication_time = 9;
    {::_pbi::TcParser::FastF32S1,
     {77, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationSummary, _impl_.average_replication_time_)}},
    // int64 total_data_replicated_bytes = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ReplicationSummary, _impl_.total_data_replicated_bytes_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationSummary, _impl_.total_data_replicated_bytes_)}},
    // float synchronization_rate = 11;
    {::_pbi::TcParser::FastF32S1,
     {93, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationSummary, _impl_.synchronization_rate_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // float failover_rate = 13;
    {::_pbi::TcParser::FastF32S1,
     {109, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationSummary, _impl_.failover_rate_)}},
    // float redundancy_satisfaction_rate = 14;
    {::_pbi::TcParser::FastF32S1,
     {117, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicationSummary, _impl_.redundancy_satisfaction_rate_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string summary_id = 1;
    {PROTOBUF_FIELD_OFFSET(ReplicationSummary, _impl_.summary_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 total_segments_replicated = 2;
    {PROTOBUF_FIELD_OFFSET(ReplicationSummary, _impl_.total_segments_replicated_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 high_priority_replications = 3;
    {PROTOBUF_FIELD_OFFSET(ReplicationSummary, _impl_.high_priority_replications_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 failed_replications = 4;
    {PROTOBUF_FIELD_OFFSET(ReplicationSummary, _impl_.failed_replications_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 ongoing_replications = 5;
    {PROTOBUF_FIELD_OFFSET(ReplicationSummary, _impl_.ongoing_replications_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string generated_at = 6;
    {PROTOBUF_FIELD_OFFSET(ReplicationSummary, _impl_.generated_at_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, .seigr.replication.ReplicationStatus> segment_statuses = 7;
    {PROTOBUF_FIELD_OFFSET(ReplicationSummary, _impl_.segment_statuses_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<string, string> summary_metadata = 8;
    {PROTOBUF_FIELD_OFFSET(ReplicationSummary, _impl_.summary_metadata_), 0, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // float average_replication_time = 9;
    {PROTOBUF_FIELD_OFFSET(ReplicationSummary, _impl_.average_replication_time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // int64 total_data_replicated_bytes = 10;
    {PROTOBUF_FIELD_OFFSET(ReplicationSummary, _impl_.total_data_replicated_bytes_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // float synchronization_rate = 11;
    {PROTOBUF_FIELD_OFFSET(ReplicationSummary, _impl_.synchronization_rate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // map<string, int32> escalation_counts = 12;
    {PROTOBUF_FIELD_OFFSET(ReplicationSummary, _impl_.escalation_counts_), 0, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // float failover_rate = 13;
    {PROTOBUF_FIELD_OFFSET(ReplicationSummary, _impl_.failover_rate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float redundancy_satisfaction_rate = 14;
    {PROTOBUF_FIELD_OFFSET(ReplicationSummary, _impl_.redundancy_satisfaction_rate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(ReplicationSummary()._impl_.segment_statuses_)>(
        1, 0, 0, 9,
        11)},
    {::_pbi::TcParser::GetTable<::seigr::replication::ReplicationStatus>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(ReplicationSummary()._impl_.summary_metadata_)>(
        1, 0, 0, 9,
        9)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(ReplicationSummary()._impl_.escalation_counts_)>(
        1, 0, 0, 9,
        5)},
  }}, {{
    "\44\12\0\0\0\0\14\20\20\0\0\0\21\0\0\0"
    "seigr.replication.ReplicationSummary"
    "summary_id"
    "generated_at"
    "segment_statuses"
    "summary_metadata"
    "escalation_counts"
  }},
};

PROTOBUF_NOINLINE void ReplicationSummary::Clear() {
// @@protoc_insertion_point(message_clear_start:seigr.replication.ReplicationSummary)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.segment_statuses_.Clear();
  _impl_.summary_metadata_.Clear();
  _impl_.escalation_counts_.Clear();
  _impl_.summary_id_.ClearToEmpty();
  _impl_.generated_at_.ClearToEmpty();
  ::memset(&_impl_.total_segments_replicated_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.redundancy_satisfaction_rate_) -
      reinterpret_cast<char*>(&_impl_.total_segments_replicated_)) + sizeof(_impl_.redundancy_satisfaction_rate_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ReplicationSummary::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ReplicationSummary& this_ = static_cast<const ReplicationSummary&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ReplicationSummary::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ReplicationSummary& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:seigr.replication.ReplicationSummary)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string summary_id = 1;
          if (!this_._internal_summary_id().empty()) {
            const std::string& _s = this_._internal_summary_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationSummary.summary_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // int32 total_segments_replicated = 2;
          if (this_._internal_total_segments_replicated() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_total_segments_replicated(), target);
          }

          // int32 high_priority_replications = 3;
          if (this_._internal_high_priority_replications() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_high_priority_replications(), target);
          }

          // int32 failed_replications = 4;
          if (this_._internal_failed_replications() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<4>(
                    stream, this_._internal_failed_replications(), target);
          }

          // int32 ongoing_replications = 5;
          if (this_._internal_ongoing_replications() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<5>(
                    stream, this_._internal_ongoing_replications(), target);
          }

          // string generated_at = 6;
          if (!this_._internal_generated_at().empty()) {
            const std::string& _s = this_._internal_generated_at();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationSummary.generated_at");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // map<string, .seigr.replication.ReplicationStatus> segment_statuses = 7;
          if (!this_._internal_segment_statuses().empty()) {
            using MapType = ::google::protobuf::Map<std::string, ::seigr::replication::ReplicationStatus>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, ::seigr::replication::ReplicationStatus,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_MESSAGE>;
            const auto& field = this_._internal_segment_statuses();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationSummary.segment_statuses");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationSummary.segment_statuses");
              }
            }
          }

          // map<string, string> summary_metadata = 8;
          if (!this_._internal_summary_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_summary_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    8, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationSummary.summary_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationSummary.summary_metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    8, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationSummary.summary_metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationSummary.summary_metadata");
              }
            }
          }

          // float average_replication_time = 9;
          if (::absl::bit_cast<::uint32_t>(this_._internal_average_replication_time()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                9, this_._internal_average_replication_time(), target);
          }

          // int64 total_data_replicated_bytes = 10;
          if (this_._internal_total_data_replicated_bytes() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<10>(
                    stream, this_._internal_total_data_replicated_bytes(), target);
          }

          // float synchronization_rate = 11;
          if (::absl::bit_cast<::uint32_t>(this_._internal_synchronization_rate()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                11, this_._internal_synchronization_rate(), target);
          }

          // map<string, int32> escalation_counts = 12;
          if (!this_._internal_escalation_counts().empty()) {
            using MapType = ::google::protobuf::Map<std::string, ::int32_t>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, ::int32_t,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_INT32>;
            const auto& field = this_._internal_escalation_counts();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    12, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationSummary.escalation_counts");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    12, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seigr.replication.ReplicationSummary.escalation_counts");
              }
            }
          }

          // float failover_rate = 13;
          if (::absl::bit_cast<::uint32_t>(this_._internal_failover_rate()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                13, this_._internal_failover_rate(), target);
          }

          // float redundancy_satisfaction_rate = 14;
          if (::absl::bit_cast<::uint32_t>(this_._internal_redundancy_satisfaction_rate()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                14, this_._internal_redundancy_satisfaction_rate(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:seigr.replication.ReplicationSummary)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ReplicationSummary::ByteSizeLong(const MessageLite& base) {
          const ReplicationSummary& this_ = static_cast<const ReplicationSummary&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ReplicationSummary::ByteSizeLong() const {
          const ReplicationSummary& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:seigr.replication.ReplicationSummary)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, .seigr.replication.ReplicationStatus> segment_statuses = 7;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_segment_statuses_size());
              for (const auto& entry : this_._internal_segment_statuses()) {
                total_size += _pbi::MapEntryFuncs<std::string, ::seigr::replication::ReplicationStatus,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // map<string, string> summary_metadata = 8;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_summary_metadata_size());
              for (const auto& entry : this_._internal_summary_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // map<string, int32> escalation_counts = 12;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_escalation_counts_size());
              for (const auto& entry : this_._internal_escalation_counts()) {
                total_size += _pbi::MapEntryFuncs<std::string, ::int32_t,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_INT32>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string summary_id = 1;
            if (!this_._internal_summary_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_summary_id());
            }
            // string generated_at = 6;
            if (!this_._internal_generated_at().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_generated_at());
            }
            // int32 total_segments_replicated = 2;
            if (this_._internal_total_segments_replicated() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_total_segments_replicated());
            }
            // int32 high_priority_replications = 3;
            if (this_._internal_high_priority_replications() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_high_priority_replications());
            }
            // int32 failed_replications = 4;
            if (this_._internal_failed_replications() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_failed_replications());
            }
            // int32 ongoing_replications = 5;
            if (this_._internal_ongoing_replications() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_ongoing_replications());
            }
            // int64 total_data_replicated_bytes = 10;
            if (this_._internal_total_data_replicated_bytes() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_total_data_replicated_bytes());
            }
            // float average_replication_time = 9;
            if (::absl::bit_cast<::uint32_t>(this_._internal_average_replication_time()) != 0) {
              total_size += 5;
            }
            // float synchronization_rate = 11;
            if (::absl::bit_cast<::uint32_t>(this_._internal_synchronization_rate()) != 0) {
              total_size += 5;
            }
            // float failover_rate = 13;
            if (::absl::bit_cast<::uint32_t>(this_._internal_failover_rate()) != 0) {
              total_size += 5;
            }
            // float redundancy_satisfaction_rate = 14;
            if (::absl::bit_cast<::uint32_t>(this_._internal_redundancy_satisfaction_rate()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ReplicationSummary::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ReplicationSummary*>(&to_msg);
  auto& from = static_cast<const ReplicationSummary&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seigr.replication.ReplicationSummary)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.segment_statuses_.MergeFrom(from._impl_.segment_statuses_);
  _this->_impl_.summary_metadata_.MergeFrom(from._impl_.summary_metadata_);
  _this->_impl_.escalation_counts_.MergeFrom(from._impl_.escalation_counts_);
  if (!from._internal_summary_id().empty()) {
    _this->_internal_set_summary_id(from._internal_summary_id());
  }
  if (!from._internal_generated_at().empty()) {
    _this->_internal_set_generated_at(from._internal_generated_at());
  }
  if (from._internal_total_segments_replicated() != 0) {
    _this->_impl_.total_segments_replicated_ = from._impl_.total_segments_replicated_;
  }
  if (from._internal_high_priority_replications() != 0) {
    _this->_impl_.high_priority_replications_ = from._impl_.high_priority_replications_;
  }
  if (from._internal_failed_replications() != 0) {
    _this->_impl_.failed_replications_ = from._impl_.failed_replications_;
  }
  if (from._internal_ongoing_replications() != 0) {
    _this->_impl_.ongoing_replications_ = from._impl_.ongoing_replications_;
  }
  if (from._internal_total_data_replicated_bytes() != 0) {
    _this->_impl_.total_data_replicated_bytes_ = from._impl_.total_data_replicated_bytes_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_average_replication_time()) != 0) {
    _this->_impl_.average_replication_time_ = from._impl_.average_replication_time_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_synchronization_rate()) != 0) {
    _this->_impl_.synchronization_rate_ = from._impl_.synchronization_rate_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_failover_rate()) != 0) {
    _this->_impl_.failover_rate_ = from._impl_.failover_rate_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_redundancy_satisfaction_rate()) != 0) {
    _this->_impl_.redundancy_satisfaction_rate_ = from._impl_.redundancy_satisfaction_rate_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ReplicationSummary::CopyFrom(const ReplicationSummary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seigr.replication.ReplicationSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ReplicationSummary::InternalSwap(ReplicationSummary* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.segment_statuses_.InternalSwap(&other->_impl_.segment_statuses_);
  _impl_.summary_metadata_.InternalSwap(&other->_impl_.summary_metadata_);
  _impl_.escalation_counts_.InternalSwap(&other->_impl_.escalation_counts_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.summary_id_, &other->_impl_.summary_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.generated_at_, &other->_impl_.generated_at_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReplicationSummary, _impl_.redundancy_satisfaction_rate_)
      + sizeof(ReplicationSummary::_impl_.redundancy_satisfaction_rate_)
      - PROTOBUF_FIELD_OFFSET(ReplicationSummary, _impl_.total_segments_replicated_)>(
          reinterpret_cast<char*>(&_impl_.total_segments_replicated_),
          reinterpret_cast<char*>(&other->_impl_.total_segments_replicated_));
}

::google::protobuf::Metadata ReplicationSummary::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace replication
}  // namespace seigr
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_replication_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
